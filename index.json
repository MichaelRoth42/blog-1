[{"categories":["CLI for Microsoft 365"],"contents":"We\u0026rsquo;ve just published a new major version of the CLI for Microsoft 365 with new commands for working with and managing Microsoft 365 and SharePoint Framework projects on any platform.\nManage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use.\nWhile building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it’s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects.\nNew version of CLI for Microsoft 365 – v5.2 Following our monthly release cadence, we\u0026rsquo;ve released a new version of the CLI for Microsoft 365 with some new capabilities. Here are a few of the most noteworthy additions.\n For the full list of what\u0026rsquo;s new and changed, see the release notes.\n Upgrade SharePoint Framework projects to v1.15.0-beta.6 Recently, Microsoft released a new preview version of SharePoint Framework - the development model for extending Microsoft Viva Connections, Microsoft Teams and SharePoint. This latest beta, introduces a new ability to customize list forms. It also allows you to seamlessly use the Microsoft Graph JS SDK v3 which offers a more robust way to connect to Microsoft Graph. To help you upgrade your projects we\u0026rsquo;ve updated CLI for Microsoft 365 with the support for this new version.\nTo upgrade your SPFx project to this version, change the working directory to your project and execute:\nm365 spfx project upgrade --preview --output md \u0026gt; report.md We\u0026rsquo;d also recommend that you try a richer upgrade report based on the Visual Studio Code CodeTour extension:\nm365 spfx project upgrade --preview --preview --output tour For more information about upgrading SharePoint Framework projects, see the CLI documentation.\nAutomatically open links in the browser Before you can start using CLI for Microsoft 365 to manage your tenant, you need to sign in with your account. And typically, you\u0026rsquo;ll do it using the device code flow. After running the m365 login command, you\u0026rsquo;ll get the device code to copy and a URL to open.\nTo make it easier, previously we introduced the copyDeviceCodeToClipboard setting. By setting it to true, we\u0026rsquo;ll automatically copy the device code to clipboard for you. That\u0026rsquo;s not all. To simplify the login experience further, we introduced a new setting named autoOpenLinksInBrowser. When you set it to true, we\u0026rsquo;ll automatically open the default browser window with the login URL and all you\u0026rsquo;ll have to do, is to paste the device code.\nTo enable automatically opening links in browser, run:\nm365 cli config set --key autoOpenLinksInBrowser --value true For more information about configuring CLI for Microsoft 365 see the documentation.\nManage Power Platform solutions More and more organizations use Power Platform to automate their business processes and work. To help you manage applications built using Power Platform at scale, we\u0026rsquo;ve extended the functionality with CLI for Microsoft 365 with two new commands.\nBefore you can call Power Platform API from a custom application, you need to register it with Power Platform as a management app. We already offered support for registering custom apps as Power Platform management apps and in this version extended it with support for listing registered management apps, which you can do by running:\nm365 pp managementapp list Managing Power Platform applications starts with environments. Previously, we offered the ability to retrieve Power Automate and Power Apps environments separately, which is odd given they\u0026rsquo;re the same. To make it easier for you, we extended it with the ability to retrieve Power Platform environments:\nm365 pp environment list Manage private Microsoft Teams channels One of the recent additions to Microsoft Teams are private channels that offer teams \u0026ldquo;a focused place to collaborate\u0026rdquo;. We\u0026rsquo;ve extended CLI for Microsoft 365 with functionality to manage private chats.\nFirst, we introduced the ability to add private channels:\nm365 teams channel add --teamId 6703ac8a-c49b-4fd4-8223-28f0ac3a6402 --name climicrosoft365 --type private --owner john.doe@contoso.com We\u0026rsquo;ve also added a way to manage private chats\u0026rsquo; members. You can add them:\nm365 teams channel member add --teamName \u0026#34;Human Resources\u0026#34; --channelName \u0026#34;Private Channel\u0026#34; --userDisplayName \u0026#34;Anne Matthews,John Doe\u0026#34; --owner Update their membership by for example changing their role from owner to member:\nm365 teams channel member set --teamName \u0026#34;Team Name\u0026#34; --channelName \u0026#34;Channel Name\u0026#34; --userName johndoe@example.com --role member Or remove them from the chat altogether:\nm365 teams channel member remove --teamName \u0026#34;Team Name\u0026#34; --channelName \u0026#34;Channel Name\u0026#34; --userName johndoe@example.com To see, who\u0026rsquo;s member of a chat, run:\nm365 teams channel member list --teamName \u0026#34;Team Name\u0026#34; --channelName \u0026#34;Channel Name\u0026#34; For more information about managing Teams chats, see the documentation.\nManage Planner buckets As you start using Microsoft Planner, you might need to update the structure of your plans. If you\u0026rsquo;ve been using Planner extensively, you\u0026rsquo;ll need to update the information at scale. To support you in this process, we\u0026rsquo;re continuing extending support for Planner. In this version we introduced the ability to update buckets.\nTo rename a bucket, run:\nm365 planner bucket set --name \u0026#34;My Bucket\u0026#34; --planName \u0026#34;My Plan\u0026#34; --ownerGroupName \u0026#34;My Group\u0026#34; --newName \u0026#34;New bucket name\u0026#34; For more information about managing Microsoft Planner using CLI for Microsoft 365, see the documentation.\nWhat else These features are just the tip of the ice berg of what we\u0026rsquo;ve shipped in this version. Check out the release notes for the full list of what\u0026rsquo;s new and improved.\nContributors This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order):\n Abhishek K M Reshmee Auckloo Milan Holemans Nicholas Honen Akash Karda Patrick Lamber Martin Lingstuyl Waldek Mastykarz Albert-Jan Schot Jasey Waegebaert  Thank you all for the time you chose to spend on CLI for Microsoft 365 and your help to advance it!\nWork in progress Here are some things that we\u0026rsquo;re currently working on.\n@me user tokens to simplify working with the current user We\u0026rsquo;re constantly seeking for ways to let you work with CLI for Microsoft 365 more efficiently. In the past, we\u0026rsquo;ve shipped support for passing contents from files into options using the @ token and using server-relative URLs with SharePoint commands. We\u0026rsquo;re continuing the improvement by introducing @me tokens to let you pass information about the current user into options.\nManaging Planner plans Many organizations use Microsoft Planner to keep track of their work. As you start working with Planner at scale, you\u0026rsquo;ll be likely to need to automate managing plans, buckets and tasks. In the previous versions of CLI for Microsoft 365 we introduced the base functionality for managing objects in Planner and we\u0026rsquo;ll keep extending it with additional features so that you have everything you need.\nMicrosoft 365 app commands When building apps for Microsoft 365, next to your code, you also need to manage how your app is exposed to Microsoft 365. You need to register your application in Azure Active Directory, and depending what type of app you build, you might need to deploy it to an app catalog as well. All these properties are managed in different locations and we\u0026rsquo;re thinking of ways that we could simplify it for you.\nWhat else could we simplify? Let us know what you think by helping out with one of our open issues or chime in on our discussions!\nTry it today Get the latest release of CLI for Microsoft 365 from npm by executing:\nnpm i -g @pnp/cli-microsoft365 Alternatively, you can get the latest release from Docker by executing:\ndocker run --rm -it m365pnp/cli-microsoft365:latest If you need more help getting started or want more details about the commands or the architecture or the project, go to aka.ms/cli-m365. And if you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v5-2/images/banner-cli-m365_hubb0a11f265e5361714912c97fd3afb73_171793_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v5-2/","tags":["CLI for Microsoft 365","SharePoint","SharePoint Framework (SPFx)"],"title":"CLI for Microsoft 365 v5.2"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary Welcome to the bi-weekly call focused on Microsoft 365 platform development topics. In this call, we focus on Microsoft Teams, Microsoft Graph, Power Platform, SharePoint, Microsoft Lists with topics ranging from development tools to list and column formatting, to site design and provisioning, and more.\nNew this week   Announcing the new Microsoft 365 Unified Sample Gallery - More than 1060 samples | aka.ms/m365/samples consolidated from all sources. Solution specific galleries:\n Microsoft 365 tenant – script samples gallery (149 scenarios and 212+ scripts) The MGT samples repository is now LIVE! https://aka.ms/mgt/samples    Agenda set for next Microsoft 365 platform call on Tuesday, May 3, 8:00 am PT. Microsoft presenters and topics:\n Erin Bailie - Extend your Microsoft Teams app to Outlook and Office James Eccles \u0026amp; Bert Jansen - Introducing new M365 Assessment Tool with SharePoint Syntex Module Nancy Wang - Run Office Scripts with a button - now in Excel for Windows    Project releases\n Microsoft 365 Assessment tool 1.0.0 (successor to the Modernization Scanner) released | aka.ms/microsoft365assessment Blog Post - PnP PowerShell v1.10    Script samples\n NEW - Get Hub Sites Details and Export it to CSV - Chandani Prajapati | @Chandani_SPD NEW - Export OneDrive Admins - Matt Maher | Maher256 Updated - Get Hub Sites Details and Export it to CSV – Two additional tool updates - Jasey Waegebaert | Jwaegebaert \u0026amp; Chandani Prajapati | @Chandani_SPD Updated - List Guests within Teams in a tenant - Jasey Waegebaert | Jwaegebaert Updated - Export a csv report on all Whiteboards - Nanddeep Nachan | @NanddeepNachan    Microsoft Teams samples\n HR Talent App Node - Scott Perham | scottperham and Jack Lewis | jacklewis123    Power Platform samples\n Join the Power Platform Contributors Sharing is Caring Session – Monday, May 9, 10:30 am PT- Register    Microsoft 365 PnP Weekly – Episode 163 (April 25th) with Oslo, Norway based Principal Product Manager, Mikael Svenson (Microsoft) | @mikaelsvenson | video | podcast\n  Demos  Updates on Independent Publisher Connectors \u0026amp; GitLab Connector Demo - there are 113 Independent Publisher Connectors in production, 31 in the pipeline delivered by 41 outstanding publishers. Use GitLab Dev Ops for Power Platform projects using GitLab connector to access GitLabs APIs for actions. Step through creating a project in newly provisioned sandbox. Move through Dev, Text, Deploy. Canvas app leverages ALM accelerator (Power CAT team-built tool), Azure VM and Power Automate flows. List formatting magic - Discussion board formatting - extend existing Kanban Board card view and rendering the Adaptive Cards in SharePoint, Teams and Planner. Use JSON formatting to add 3 new features to cards - flags, move to top, and expand/collapse. Manage cards with filtering, menu options, bots, mail forwarding rules, Power Automate flows, use conditional formatting, collect comments, add/delete and mark as complete. Exemplifies the build once, render anywhere approach. TeamsFx .NET - Introduction to Teams Explorer Sample - a sample tab (and very useful developer resource) that leverages Graph and SPO API endpoints. Authentication by TeamsFx SSO and certificate for PnP Core. The app is built using TeamsFX .NET library, Blazor, Microsoft Graph and Visual Studio. From tab, select a Team, view the Team’s properties, installed apps, channels, team members, etc. No need to go to Postman or Graph Explorer.  The host of this call was David Warner II (Microsoft) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\n  Agenda items  PnP .NET library updates - Bert Jansen (Microsoft) @O365bert – 6:24 PnP PowerShell updates - Gautam Sheth (Valo Intranet) | @gautamdsheth – 8:11 yo Teams updates - David Warner II (Microsoft) | @DavidWarnerII – 9:54 Microsoft Graph Toolkit updates - David Warner II (Microsoft) | @DavidWarnerII – 10:19 Microsoft Script Samples - David Warner II (Microsoft) | @DavidWarnerII – 4:06 Microsoft Teams Samples - David Warner II (Microsoft) | @DavidWarnerII – 11:04 Microsoft Power Platform Samples - David Warner II (Microsoft) | @DavidWarnerII – 11:37 Demo - Updates on Independent Publisher Connectors \u0026amp; GitLab Connector Demo - Natalie Pienkowska (Microsoft) | @NataliePienkow1 \u0026amp; Roy Paar (Microsoft) | @RoyPaar – 13:52 Demo - List formatting magic - Discussion board formatting - André Lage (Datalynx AG) | @aaclage – 24:54 Demo - TeamsFx .NET - Introduction to Teams Explorer Sample - Thomas Gölles (Solvion) | @thomyg – 42:05  Together Mode  Thank you for waving to those who are looking at you presently! Awesome having you in this Community.\nActions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Microsoft Tech Days | Thursday, May 5, 2022. Register for Microsoft Build | May 24-26, 2022 Join us at the next Microsoft 365 platform call on Tuesday, May 3, 8:00 am PT. Invite Register for Sharing is Caring Events:  Community Docs Session | Tuesday, May 17, 10:00 am PT - Register Power Platform Samples – First Time Contributor | Monday, May 9, 10:30 am PT- Register Maturity Model Practitioners | https://forms.office.com/Pages/ResponsePage.aspx?id=KtIy2vgLW0SOgZbwvQuRaXDXyCl9DkBHq4A2OG7uLpdUODY3NVRFQ0E4SFg5WlI1TU83WFJQRklZSy4uRegister PnP Office Hours – 1:1 session | Register PnP Buddy System | Request a Buddy   Register for the Microsoft 365 Developer Program and get a free developer tenant Get started with free training modules covering Microsoft 365 platform capabilities. Visit the Microsoft 365 Unified Sample Solution Gallery from Microsoft and community. Sign up to Share your story in the Learn from the community series. Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/spdev-sig-call  Demo references  Updates on Independent Publisher Connectors \u0026amp; GitLab Connector Demo  Documentation - GitLab (Independent Publisher) (Preview) Connector Repo – GitLab Requested connector - Top Connector Asks Documentation - Independent publisher certification process Documentation - Create a custom connector from scratch   List formatting magic - Discussion board formatting  Sample - Board tag format Samples - List Formatting Samples   TeamsFx .NET - Introduction to Teams Explorer Sample  Tools - Microsoft Teams Framework (TeamsFx) Tools - Blazor Demo - TeamsFx .NET - Current Updates - April 2022 – Thomy Gölles (Solvion) | @thomyg    Thank you for your great work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nOpen-source project status    Project Current Version Release/Status     PnP .NET Libraries - PnP Framework v1.9.0 GA Prepping for v1.10.0   PnP .NET Libraries - PnP Core SDK v1.6.0 GA Prepping for v1.7.0   Microsoft 365 Assessment tool v1.0.0 (SharePoint Syntex Assessment) Successor to the Modernization Scanner tool   PnP PowerShell v1.10.0 GA In progress: V2 POC - .NET 6.0 based, Requires PowerShell 7.2   Yo teams - generator-teams v3.5.0 GA, v4.0.0-next(.2) Planning v4.0.0 release in mid-May   Yo teams - yoteams-build-core v1.6.0, 1.6.0-next.1    Yo teams – yoteams-deploy v1.1.0 GA    Yo teams - msteams-react-base-component v3.1.1 GA    Microsoft Graph Toolkit (MGT) v2.4.0 GA Working on v3.0.0 - Aligning all Toolkit components to Fluent UI Web Components    General resources  Script Samples - Getting started with PnP Script Samples – aka.ms/script-samples/getting-started Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant – Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v3.x | https://aka.ms/teams-toolkit Microsoft 365 platform community blog | aka.ms/m365pnp/blog Microsoft Graph Toolkit in Microsoft Learn | https://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Microsoft)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Page Transformation webcast series PnP PowerShell SharePoint Modernization Tools  Upcoming calls | Recurrent invites  Microsoft 365 platform call | Tuesday, May 3, 8:00 am PT – https://aka.ms/m365-dev-call (weekly) Viva Connections \u0026amp; SharePoint Framework call | Thursday, May 5, 7:00 am PT – https://aka.ms/spdev-spfx-call (bi-weekly) Office add-in monthly call | Wednesday, May 11, 8:00 am PT - https://aka.ms/officeaddinscall (monthly) M365 General Dev call | Thursday, May 12, 7:00 am PT - https://aka.ms/m365-dev-sig (bi-weekly) Adaptive Cards monthly call | Thursday, May 12, 9:00 am PT - https://aka.ms/adaptivecardscommunitycall (monthly) Power Platform monthly call | Wednesday, May 18, 8:00 am PT - https://aka.ms/PowerAppsMonthlyCall (monthly) Microsoft Identity Platform call | Thursday, May 19, 9:00 am PT - https://aka.ms/IDDevCommunityCalendar (monthly)  About General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from https://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls!\nYou can download recurrent invite from https://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from https://aka.ms/m365pnp.\n“Sharing is caring”\nMicrosoft 365 Community (PnP) team, Microsoft - 29th of April 2022\nRelated documents   PnP Core SIG - 220428.pptx (17 MB)  Teams-explorer.png (399 KB)  Teams-extensibility.png (132 KB)  TeamsFx.png (429 KB)  Thomy1.png (202 KB)  ","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/2022-04-28/images/recording-28th-april_hu3db86254eb82ff753c3b1b0be2eccc11_199784_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/2022-04-28/","tags":[],"title":"Microsoft 365 \u0026 Power Platform Development Community call - 28th of April, 2022"},{"categories":["Community post"],"contents":"Although SharePoint and Power Automate are heavily interwoven, there is no \u0026ldquo;rename file\u0026rdquo; action in Power Automate - if the file lives in a SharePoint library. Out of the box that is only possible for files living in OneDrive.\nI recently saw a cry for help on twitter and decided to share here how my solution looks like.\nIn order to change a filename, we will need to use SharePoint REST API, which is accessible to us in Power Automate via the Send an HTTP request to SharePoint action.\nthe Power Automate flow      To make things easy, we start with a For selected file trigger. (In a real-world scenario, you\u0026rsquo;d typically rename a file after something else has happened.)\n  We then Get file properties (not needed as we already have the ID from the For selected file trigger, but if yo9u run this after another action you will need the file properties to get the Id so that you can rename the right file).\n  We now need to use the Send an HTTP request to SharePoint action:\n Site Adress: choose from Dropdown Method: Get Uri: _api/lists/getbytitle('\u0026lt;DisplayName of your Library goes here\u0026gt;')  This will re turn the ListItemEntityTypeFullName property, which we will need for the next step.\n  As a last step, use another Send an HTTP request to SharePoint action:\n Site Adress: choose from Dropdown Method: Post Uri: _api/lists/GetByTitle('\u0026lt;DisplayName of your Library goes here\u0026gt;')/Items(@{outputs('Get_file_properties')?['body/ID']}) Headers:  Content-type: application/json IF-MATCH: * X-HTTP-METHOD: PATCH   Body:    {\u0026#39;__metadata\u0026#39;: {\u0026#39;type\u0026#39;:\u0026#39;@{outputs(\u0026#39;Send_an_HTTP_request_to_SharePoint_to_get_type\u0026#39;)?[\u0026#39;body\u0026#39;]?[\u0026#39;d\u0026#39;]?[\u0026#39;ListItemEntityTypeFullName\u0026#39;]}\u0026#39;}, \u0026#39;FileLeafRef\u0026#39;:\u0026#39;\u0026lt;your new filename goes here\u0026gt;\u0026#39;}  💡 For the type, we are selecting the ListItemEntityTypeFullName property from the output of the previous action. This value is different for every library. You could also use Parse JSON action to obtain that value.\n Conclusion Once again, the Send an HTTP request to SharePoint action in Power Automate is a lifesaver for everything that doesn\u0026rsquo;t work with the built-in actions. Also, no additional license than your Microsoft 365 license is required to use it.\nResources To learn more about SharePoint REST, use these resources:\n Get to know the SharePoint REST service Working with lists and list items with REST  first published on m365princess.com\n","image":"https://pnp.github.io/blog/post/how-to-rename-files-in-sharepoint-with-power-automate/images/lego-file_hu9f6867fe5cbdb67898590b8cf3dbd4f9_1419311_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/how-to-rename-files-in-sharepoint-with-power-automate/","tags":["SharePoint","Power Automate"],"title":"How to rename files in SharePoint with Power Automate"},{"categories":["Microsoft 365 platform call"],"contents":"Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform. In this particular call, we highlighted recently announced and key existing developer resources, news, community events and two demos.\nNew this week  Article - Updated preview of SharePoint Framework 1.15 – New release of the upcoming features | Vesa Juvonen (Microsoft) | @vesajuvonen Article - Walkie Talkie in Microsoft Teams integrated with Kyocera 5G Rugged Smartphones | Christina Wu (Microsoft) Article - Delivering Professional Grade Broadcasts with New Microsoft Teams Integrations | Aaron Linne (Microsoft) | @linne Teams paltform documentation update - Create a Set up CI/CD pipelines sidepanel Microsoft 365 PnP Weekly – Episode 163 (April 26th) with Oslo, Norway based Principal Product Manager, Mikael Svenson (Microsoft) | @mikaelsvenson | video | podcast M365 Dev Podcast - Extensibility discussion with Ed Averett (April 20th) | @Ed_Averett |podcast  Demos  Create an apps that extends across Teams, Outlook, and Office - Focus on the new Microsoft Teams SDK v2 scenarios which enables you to create an application once and run that across Microsoft Teams, Outlook and Office. Example scenario on when this solution designs make sense. Using Microsoft Teams Toolkit to create the solution in Visual Studio Code as your first hello world app for creating these kind of solutions with the Quick start model in the Teams Toolkit. Creating the hello world scenario from existing sample app directly from the VS Code. Easily fix errors in your SPFx projects with CLI for Microsoft 365 – Microsoft engineering partnered with the community to introduce new SharePoint Framework project specific command as part of the CLI for Microsoft 365. This command can be used to validate and inspect the SPFx project situation. Command calls out any inconsistencies around the used versions or packages with suggested actions to perform. New command is called \u0026ldquo;spfx project doctor\u0026rdquo;.  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout and live at end of the call.\n  Agenda items  Latest updates and news on the Microsoft 365 platform – Vesa Juvonen (Microsoft) | @vesajuvonen – 8:02 Demo - Create an apps that extends across Teams, Outlook, and Office – Saurabh Bhatia (Microsoft) | @iamSBTron - 16:10 Demo - Easily fix errors in your SPFx projects with CLI for Microsoft 365 – Alex Terentiev (Microsoft) | @alexaterentiev \u0026amp; Waldek Mastykarz (Microsoft) | @waldekm – 30:01  Thank you for your creativity and work execution. Samples are often showcased in Demos.\nTogether Mode  Thank you for being part of this community and these calls. You make this community great!\nActions  Mark your calendar for Microsoft Tech Days | Thursday, May 5, 2022. Register for Microsoft Build | May 24-26, 2022 Register for Sharing is Caring events:  Community Docs Session | Tuesday, May 17, 10:00 am PT - Register Power Platform Samples – First Time Contributor | Monday, May 9, 10:30 am PT-Register PnP Office Hours – 1:1 session | Register PnP Buddy System | Request a Buddy   Register for the Microsoft 365 Developer Program and get a free developer tenant Get started with free training modules covering Microsoft 365 platform capabilities. Visit the Microsoft 365 Unified Sample Solution Gallery from Microsoft and community. Sign up to Share your story in the Learn from the community series. Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/m365-dev-call  Demo references   Create an apps that extends across Teams, Outlook, and Office\n VS Code Teams Toolkit Documentation - Microsoft Teams JavaScript client SDK v2 Preview    Easily fix errors in your SPFx projects with CLI for Microsoft 365\n CLI for Microsoft 365 Documentation - spfx project doctor command Video - Validate SharePoint Framework project easily using CLI for Microsoft 365    General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts Microsoft Teams Toolkit | https://aka.ms/teams-toolkit Microsoft Graph Toolkit in Microsoft Learn | https://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 Platform Community (PnP) videos | aka.ms/m365/videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams SPFx Developer documentation | https://aka.ms/spfx Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription - free tenant for 90 days with automatic renewal if used for dev purposes  Upcoming Calls | Recurrent Invites  Microsoft 365 platform call | Tuesday, May 3, 8:00 am PT – https://aka.ms/m365-dev-call (weekly) Viva Connections \u0026amp; SharePoint Framework call | Thursday, May 5, 7:00 am PT - https://aka.ms/spdev-spfx-call (bi-weekly) M365 General Dev \u0026amp; Power Platform call | Thursday, April 28, 7:00 am PT - https://aka.ms/m365-dev-sig (bi-weekly) Power Apps monthly call | Wednesday, May 18, 8:00 am PT - https://aka.ms/PowerAppsMonthlyCall (monthly) Microsoft Identity Platform call | Thursday, May 19, 9:00 am PT - https://aka.ms/IDDevCommunityCalendar (monthly) Office add-in monthly call | Wednesday, May 11, 8:00 am PT - https://aka.ms/officeaddinscall (monthly) Adaptive Cards monthly call | Thursday, May 12, 9:00 am PT - https://aka.ms/adaptivecardscommunitycall (monthly)  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.\nMore details on the Microsoft 365 community from https://aka.ms/m365pnp.\nYou can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from https://aka.ms/m365pnp.\n\u0026quot;Sharing is caring\u0026quot;\nMicrosoft 365 Platform Community team, Microsoft - 27th of April 2022\nRelated documents   M365 platform - Weekly 20220426.pptx (33 MB)  ","image":"https://pnp.github.io/blog/microsoft-365-platform-community-call/2022-04-26/images/recording-26th-april_hu4f2c2e4f5c4152a92227aae6ecca93c1_452345_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-call/2022-04-26/","tags":[],"title":"Microsoft 365 Platform Community Call - 26th of April, 2022"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Oslo, Norway based Principal Product Manager, Mikael Svenson (Microsoft) | @mikaelsvenson.\nTopics discussed in this session  Mikael\u0026rsquo;s background as an MVP and moving to Microsoft as a Principal Product Manager His day to day work and focus on enterprise search \u0026ldquo;I still haven\u0026rsquo;t found what I\u0026rsquo;m looking for\u0026rdquo; Interesting work around coordinating feature work across the organizations Investing on the UX vs API surface and the value for the feature crew Mikael\u0026rsquo;s work in the open-source areas with the PnP Search Web Parts Impact of divercity and global teams across the world for making products better  We also covered 17 articles published by Microsoft and the PnP Community over the last week.\nThis week  Waldek – Sharing his learnings around open-source projects internally at Microsoft together with Garry Trinder. Public community call demo on 26th of April Vesa – prepping for Microsoft Build – May 24–26, 2022. Documentation, samples, community call coordination and more. Taking Friday off for paddle boarding day trip - if weather allows.  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, April 25, 2022. Enjoy the show.\n Video at Microsoft 365 Community YouTube channel.    Podcast at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!”\nHere are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Walkie Talkie in Microsoft Teams integrated with Kyocera 5G Rugged Smartphones - Christina Wu (Microsoft) “Optimizing SharePoint performance” 🎙 – The Intrazone podcast - Mark Kashman (Microsoft) | @mkashman, Chris McNulty (Microsoft) | @cmcnulty2000 \u0026amp; Shyam Narayan (Microsoft) | @shyam__narayan Updated preview of SharePoint Framework 1.15 – New release of the upcoming features - Vesa Juvonen (Microsoft) | @vesajuvonen Microsoft 365 Developer Tweet - AMA on Viva Connections development - Microsoft M365 Dev Podcast - Extensibility discussion with Ed Averett - Ed Averett (Microsoft) | @Ed_Averett, Jeremy Thake (Microsoft) | @jthake \u0026amp; Paul Schaeflein (AddIn365) | @paulschaeflein UI Library updates for simpler meetings, accessibility, pinch-to-zoom and more - Jorge Garcia Hirota (Microsoft)  Community articles  Copy a SharePoint list with PnP PowerShell - Toni Pohl(atwork) | @atwork Getting started with ACE in SPFx - Chandani Prajapati (RapidCircle) | @Chandani_SPD Automatically raise your desk when joining a Microsoft Teams call or meeting - Loryan Strant (RapidCircle) | @LoryanStrant SPFx Form Customizer Extension To Customize SharePoint New/Edit/Display Form Of List/Libraries - Siddharth Vaghasia | @siddh_me Apply a DevOps process to your SPFx project (Part 3) - Michaël Maillot (onepoint) | @michael_maillot CLI for Microsoft 365 extension - Adam Wójcik (Hitachi Energy) | @Adam25858782 What happens when files are moved in SharePoint? - Andrew Warland (Andrew Warland Consulting) | @awarland Moving Files between SharePoint Libraries - Agnes Molnar (Search Explained) Publish your app in the Microsoft Teams App Store - Natalie Kats (Microsoft) Episode #202 - Using the PnP Taxonomy Picker control in SPFx solutions - Paolo Pialorsi (PiaSys) | @PaoloPia Create a PDF from SharePoint Data using Power Apps and Power Automate flow for free - Shane Young (PowerApps911) | @ShanesCows  Additional resources  Microsoft Tech Days - Have a seat with Microsoft 365 developer platform | Thursday, May 5, 2022 365 EduCon - Seattle and PWR EduCon - Seattle - May 9-13, 2022 PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 Platform Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo; 🧡\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-163/images/pnp-weekly-163-promo_hu4ce7242358e00435ddb46ea7351a2bf9_740792_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-163/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 163"},{"categories":["Community post"],"contents":"Hello World Let us introduce our new Microsoft 365 platform community blog to you! After a year on Tech Community we decided to make a move towards GitHub,\n to better align our efforts that span initiatives that provide samples, guidance, training, tools, encouragement to provide you with a more pleasantly authoring experience  What changes  We migrated1 the existing articles from TechCommunity to this location We will publish new articles including Community Call recording blogs, podcast blogs, monthly updates only here The Tech Community hub will retire - we won\u0026rsquo;t accept new content there anymore  If you don\u0026rsquo;t feel comfortable using GitHub, please sign up for an interactive training on how to contribute in our Sharing Is Caring initiative\nWhat won\u0026rsquo;t change  We will continue to celebrate learning and sharing knowledge We will continue to provide guidance, support, encouragement and grow as a community  You are awesome!\nSharing Is Caring\n1 still work in progress, let us know in the issues if something is missing or off.\n","image":"https://pnp.github.io/blog/post/new-community-blog-platform/images/parker-ms-300_hub7bfe07fbd667dec4e64f8dc9751b484_54136_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/new-community-blog-platform/","tags":[],"title":"New Microsoft 365 platform community blog"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"Call summary Welcome to the bi-weekly call focused on Microsoft 365 client-side development. In this call, we focus on using Viva Connections and SharePoint Framework to build solutions for Microsoft Teams and SharePoint Online.\nNew this week  Registration open for AMA (Ask me anything) – Viva ACE | Tuesday, April 26th - Register Announcing the new Microsoft 365 Unified Sample Gallery - More than 1060 samples | aka.ms/m365/samples. Agenda set for Microsoft 365 platform call - Tuesday, April 26, 8:00 am PT | aka.ms/m365-dev-call  Divyanka Pillai and Michelle Lee - Create an app that extends across Teams, Outlook, and Office Waldek Mastykarz and Alex Terentiev - Easily fix errors in your SPFx projects with CLI for Microsoft 365   Project releases  Updated preview of SharePoint Framework 1.15 – New release of the upcoming features. Includes List form extensibility! CLI for Microsoft 365 v5.2 PnP Modern Search v4.6.1   Extension samples  News Ticker - Sudharsan Kesavanarayanan | @sudharsank   Web part samples (* in processing)  NEW: FluentUI 9* - Nick Brown | @techiekb NEW: Tab Accordion with Rich Text Editing - Arun Kumar Perumal | arunkumarperumal Cherry-Picked Content - Christophe Humbert | @Path2SharePoint Birthdays - Milan Holemans Dynamic Scalable Vector Graphics (SVG) - Nader Hadjebi | @nader2015 Tour Sample - Mike Homol | @homol To Do Client with Vue.js - LOLCATATONIA | LOLCATAONIA Pages Hierarchy - Nick Brown | @techiekb NEW: Group Members - Nick Brown | @techiekb   ACE samples  OneDrive Carousel – Image Card – Guido Zambarda | GuidoZam OneDrive Carousel – Basic Card - Guido Zambarda | GuidoZam Recent Files – Counter \u0026amp; View - Guido Zambarda | GuidoZam Recent Files – Quick Access - João Mendes | @joaojmendes   Microsoft 365 PnP Weekly – Episode 162 (April 18th) with Stockholm, Sweden based Principal Program Manager, Wictor Wilén (Microsoft) | @wictor | video | podcast Microsoft 365 PnP Weekly – Episode 161 (April 11th) with California, US based Power Platform Community Program Manager, David Warner (Microsoft) | @DavidWarnerII | video | podcast  Demos  Introduction to Adaptive Card Design Gallery reusable reference sample – solution includes 12 Adaptive Card Extensions (ACEs) and a personal app that showcases the ACEs and how deep links surface in Teams. Each ACE (Event scheduling, café menu, Calendar…) showcases functionality like collapsing menus, scrolling through articles, conditional formatting, UI design, etc. From Teams app click to see ACE in Adaptive Cards Schema Explorer. Step through code for Event Scheduler ACE. Using Adaptive Cards control from the PnP control gallery in SPFx solutions – learn about and step through implementation of the \u0026ldquo;AdaptiveCardHost\u0026rdquo; PnP React component using the Adaptive Card SDK. The host control delivers the ability to change UI at runtime without having to recompile the SPFx solution. Simple configuration in property pane - select a card to render and apply a theme aligned to SharePoint or Teams environment. Uses Fluent UI. Step through code, future updates. Navigating Cards in Viva Connections ACEs – how we can manage navigation inside ACEs with SPFx. Every ACE has navigation properties (Navigators) that can be used to navigate across Card View(s) and Quick View(s). Functionality includes Read the current item ID, Register and Push, Pop \u0026amp; Replace. You can rely on these objects to precisely manage the ACE navigation flow and stack. Code for functionality including Start and Restart logic shown.  The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place as always in chat throughout the call.\n  Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen – 7:56 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 – 10:04 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler – 11:53 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler – 12:57 PnP Modern Search - Patrick Rodgers (Microsoft) | @mediocrebowler – 13:52 PnP Samples - Hugo Bernier (Microsoft) | @bernierh – 14:35 PnP SPFx ACEs Samples - David Warner II (Microsoft) | @DavidWarnerII – 17:27 Demo - Introduction to Adaptive Card Design Gallery reusable reference sample – Derek Cash-Peterson (Sympraxis Consulting) | @spdcp – 19:29 Demo - Using Adaptive Cards control from the PnP control gallery in SPFx solutions – Fabio Franzini (Apvee Solutions) | @franzinifabio – 34:49 Demo - Navigating Cards in Viva Connections ACEs – Paolo Pialorsi (PiaSys) | @paolopia – 47:57  Together Mode  Nice to capture a video of everybody in the same room today. Thank you for being a part of this Community. Please keep the feedback coming.\nActions  Mark your calendar for Microsoft Tech Days | Thursday, May 5, 2022. Register for Microsoft Build | May 24-26, 2022 Register for Sharing is Caring events:  AMA (Ask me anything) – Viva ACE | Tuesday, April 26th, 9am PT - Register Community Docs Session | Tuesday, May 17, 10:00 am PT - Register Power Platform Samples – First Time Contributor | Monday, May 9, 10:30 am PT- Register Maturity Model Practitioners | https://forms.office.com/Pages/ResponsePage.aspx?id=KtIy2vgLW0SOgZbwvQuRaXDXyCl9DkBHq4A2OG7uLpdUODY3NVRFQ0E4SFg5WlI1TU83WFJQRklZSy4uRegister PnP Office Hours – 1:1 session | Register PnP Buddy System | Request a Buddy   Register for the Microsoft 365 Developer Program and get a free developer tenant Get started with free training modules covering Microsoft 365 platform capabilities. Visit the Microsoft 365 Unified Sample Solution Gallery from Microsoft and community. Sign up to Share your story in the Learn from the community series. Request a Demo spot on the call | https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call | https://aka.ms/spdev-spfx-call  Demo references  Introduction to Adaptive Card Design Gallery reusable reference sample  Samples - ace-designtemplate-gallery App Store: From App Catalog \u0026gt; SharePoint Store \u0026gt; Search Viva   Using Adaptive Cards control from the PnP control gallery in SPFx solutions  Tools – Schema Explorer Controls - Adaptive Card Host Sample - Adaptive Card Host control   Navigating Cards in Viva Connections ACEs  Tools – Adaptive Cards Schema Explorer Documentation – ViewNavigator Sample - aces-navigation-demo    Thank you for your great work. Samples are often showcased in Demos.\nOpen-source project status    PnP Project Current version Release/Status     SharePoint Framework (SPFx) v1.14 GA, v1.15 Beta v1.15 GA in June 2022   PnPjs Client-Side Libraries v2.13 GA, v3.1.0 GA Nightly builds. Note: v2.13 will be the final v2 release   CLI for Microsoft 365 v4.3.0 GA, v5.2 Preview    Reusable SPFx React Controls v3.7.2, v2.9.0 (SPFx v1.11)    Reusable SPFx React Property Controls v3.6.0, v2.7.0 (SPFx v1.11)    PnP SPFx Generator v1.16.0 v1.17.0 on the way   PnP Modern Search v4.6.1, v3.23.0     General Resources  Viva Connections https://aka.ms/VivaConnections Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  Tools - Teams Toolkit (v2.2 Preview)  Tools - Microsoft Teams Framework (TeamsFx)  Gallery - Microsoft 365 Extensibility look book gallery  Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions SharePoint Framework - v1.12.1 npm install –g @microsoft/generator-sharepoint@next CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring Tools - PnP Modern Search v4 | https://aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other mentioned topics  SharePoint dev documentation SharePoint dev issue list  Upcoming calls | Recurrent invites  Microsoft 365 platform call | Tuesday, April 26, 8:00 am PT – https://aka.ms/m365-dev-call (weekly) M365 General Dev call | Thursday, April 28, 7:00 am PT - https://aka.ms/m365-dev-sig (bi-weekly) Viva Connections \u0026amp; SharePoint Framework call | Thursday, May 5, 7:00 am PT - https://aka.ms/spdev-spfx-call (bi-weekly) Office add-in monthly call | Wednesday, May 11, 8:00 am PT - https://aka.ms/officeaddinscall (monthly) Adaptive Cards monthly call | Thursday, May 12, 9:00 am PT - https://aka.ms/adaptivecardscommunitycall (monthly) Power Platform monthly call | Wednesday, May 18, 8:00 am PT - https://aka.ms/PowerAppsMonthlyCall (monthly) Microsoft Identity Platform call | Thursday, May 19, 9:00 am PT - https://aka.ms/IDDevCommunityCalendar (monthly)  About Viva Connections \u0026amp; SharePoint Framework bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Connections, Microsoft Teams, SharePoint Online, and also on-premises. Calls are used for the following objectives.\n SharePoint Framework engineering update from Microsoft Talk about PnP JavaScript Core libraries Office 365 CLI Updates SPFx reusable controls PnP SPFx Yeoman generator Share code samples and best practices Possible engineering asks for the field - input, feedback, and suggestions Cover any open questions on the client-side development Demonstrate SharePoint Framework in practice in Microsoft Viva, Microsoft Teams or SharePoint context You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!  “Sharing is caring”\n Microsoft 365 PnP team, Microsoft - 22nd of April 2022\nRelated documents   CommunityCallACEDesignGallery.pptx (60 MB)  PnP Call - Using Adaptive Cards control from the PnP control gallery in SPFx solutions.pptx (22 MB)  PnP SIG (JavaScript) - Weekly 20220421.pptx (42 MB)  ","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/2022-04-21/images/recording-21st-april_huc3f4d30408d3a316039bb7a41d242478_318553_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/2022-04-21/","tags":["Adaptive Card Extensions","Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)","Viva Connections"],"title":"Viva Connections \u0026 SharePoint Framework Community Call – 21st of March, 2022"},{"categories":["Power Apps community call"],"contents":"Call summary The format of this call is evolving based on community feedback and an ever-broadening platform. Topics covered include new call format, an invitation to deliver samples and subsequently demo them, and invitation to schedule a chat with David Warner during Power Apps Community Program Manager Office Hours. There was live Q \u0026amp; A regarding program changes, dates for upcoming training and community events announced, recent news, PnP Community Recognition Program, and 2 demos - Customer Inventory and Daily Expenses App and Introduction to Power Apps Portals. This call was hosted by Todd Baginski (Canviz) and David Warner II (Microsoft) | @DavidWarnerII. The call was recorded on April 20, 2022. Questions additionally addressed in chat throughout the call.\nNew this month  Microsoft Power Platform: 2022 release wave 1 plan - features in latest release - New Undo Button and OData Editor Improvements Announcing Public Preview of a new Power Apps application on Windows - run your Power Apps offline on the desktop, supports native device capabilities Introducing the new Power Automate pane in Power Apps! - see Flows already in your App or edit existing Flows, create new Flow button Announcing Public Preview of wrap for Power Apps - wrap Canvas apps as custom-branded Android \u0026amp; iOS apps Power Platform sample - Invoice Automation using the SharePoint Syntex - Steve Pucelik | @spucelik Registration open for the first emPOWER everyone - Microsoft Power Platform Conference – Orlando, Florida, September 18 – 23, 2022 Upcoming training event - Power Platform Samples – First Time Contributor | Monday, May 9, 10:30 am PT- Register  Demo summaries  Customer Inventory and Daily Expenses App - tracks information and reduces paperwork by giving managers the ability track/access customer records, daily business expenses, pricing, inventory and monitor workflow completion, while allowing employees to easily enter data into the app. The Power Platform solution uses Dataverse to store data, Power Apps Canvas app for data entry, notes and inventory capture, and Power Automate for workflow and push notifications. Introduction to Power Apps Portals - leverage existing model-driven apps by building portal apps on top of them. In this demo build a portal app for external users with no AAD accounts or access to Power Apps. Create a table, create a portal app, create a portal form, build a portal, set permissions, create a view and see records as external user. More Portal capabilities in future demos.    Agenda items  Changes to Community and call structure – David Warner II (Microsoft) | @DavidWarnerII – 1:42 Power Platform Community Events – David Warner II (Microsoft) | @DavidWarnerII – 19:03 Recent News – April Dunnam (Microsoft) | @aprildunnam – 19:55 Demo - Customer Inventory and Daily Expenses App - Rachel Irabor | @Richie4love – 25:42 Demo - Introduction to Power Apps Portals - Hugo Bernier (Microsoft) | @bernierh – 33:48  Together Mode  Maximum participation in the Community’s first time Together Mode photo! Great to see the many faces of this vibrant Community.\nActions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Check out the SCOTTISH SUMMIT 2022 – June 10th – 11th 2022 Next meeting - Power Addicts Hangout – TBD Mark your calendar for Microsoft Tech Days | Thursday, May 5, 2022. Register for Microsoft Build | May 24-26, 2022 Register for Sharing is Caring events:  AMA (Ask me anything) – Viva ACE | Tuesday, April 26th, 9am PT - Register Community Docs Session | Tuesday, May 17, 10:00 am PT - Register Power Platform Samples – First Time Contributor | Monday, May 9, 10:30 am PT- Register Maturity Model Practitioners | Tuesday, April 19, 7:00 am PT - Register PnP Office Hours – 1:1 session | Register PnP Buddy System | Request a Buddy   PnP Samples - We welcome your Power Platform samples! View or be a Guest on The Low Code Revolution show | aka.ms/LowCodeRevolutionShow Request to deliver a demo during this call - aka.ms/PPCCDemoRequest Schedule a chat with David - Power Apps Community Program Manager Office Hours - https://aka.ms/ChatWithDavid Register for Microsoft Power Platform Conference – Orlando, Florida, September 18 – 23, 2022 Next call May 18th at 08:00am PST | https://aka.ms/powerappscommunitycall  Demo references  Customer Inventory and Daily Expenses App  PnP Power Platform Samples - https://www.aka.ms/powerplatform-samples   Introduction to Power Apps Portals  Learning Path - Get Started with Power Apps portals    Request to present a demo during this call - aka.ms/PPCCDemoRequest\nGeneral resources  Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - aka.ms/PowerAppsCommunitySamples Power Apps Community Videos - aka.ms/PowerAppsCommunityVideos PowerPlatformLearn Resources - https://www.powerplatformlearn.academy PnP Power Platform Samples - aks.ms/powerplatform-samples Create SharePoint List - https://bit.ly/CreateSharePointList Microsoft’s Power Platform website  Additional resources  Power Addicts Hangout | https://wearepoweraddicts.com #LessCodeMorePower Video Series | https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Powerful Devs Video Series | https://aka.ms/PowerfulDevsYouTube Twitter - https://twitter.com/microsoft365dev​ Twitter: https://twitter.com/MSPowerPlat Call attention to your great work by using #PowerAppsCC and #PnPWeekly on Twitter. Microsoft 365 Unified Sample gallery - https://aka.ms/m365/samples Microsoft 365 Platform Community in YouTube - https://aka.ms/m365/videos Microsoft 365 Platform Community - https://aka.ms/m365pnp  Related documents   Customer Inventory and daily expenses app.pptx (1 MB)  ","image":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-april-2022/images/recording-power-apps-community-call-april-2022_huff1df600b1754010a1038d868c8a63ce_268105_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-april-2022/","tags":["Extensions","Microsoft 365","Power Apps"],"title":"Power Platform Community Call – April 2022"},{"categories":["Microsoft 365 platform call"],"contents":"Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform. In this particular call, we highlighted recently announced and key existing resources as well as latest samples, project releases, news, community events and three demos.\nNew this week  Registration open for AMA (Ask me anything) – Viva ACE | Tuesday, April 26th - Register Teams Platform Sample - Live coding interview using Shared meeting stage Teams Step-by-Step Guide - Generate meeting side panel Article - April 2022 – Viva Topics Integrations with Teams, Syntex, Outlook and Yammer | Chris McNulty (Microsoft) | @cmcnulty2000 Microsoft 365 PnP Weekly – Episode 162 (April 18th) with Stockholm, Sweden based Principal Program Manager, Wictor Wilén (Microsoft) | @wictor | video | podcast Microsoft 365 Developer Podcast - Development Topics with Andrew Connell (April 12th) | @@andrewconnell |podcast Microsoft 365 Platform Community (PnP) – April 2022 update is available! The great people and supportive organizations delivering solid work in this community over the last month is recognized today! Thank you.  Demos  Latest on Microsoft Graph Data Connect datasets - REST APIs, Connectors and Data Connect make up the Graph Ecosystem. Data Connect enables bulk data access for insights and analytics. Data is stored in Azure Data Factory or Azure Synapse. Reviewed 9 data sets recently released, 2 more to be released soon and 7 in the Backlog. Briefly covered Azure Synapse integration and quick demo of the Synapse Copy Data Tool (wizard). Extending Teams apps to Outlook and Office.com – the first in a series of application extensibility demos. Microsoft is delivering on an Ignite commitment to enable you to build a personal app once and expose it across hosts – Teams, Outlook, Office.com. In this session, modify a simple Teams app to run across hosts. Two changes - update manifestVersion to “m365DevPreview” and reference “v2.0.0.beta.2” teams-js in package json. Hub specific code addressed in future demo. Graph Connectors updates and Postman samples - use Graph Connectors to get and surface external data in native Microsoft 365 experiences like search - GA, intelligent discovery, compliance, Viva Topics, and context IQ – in development, and People – in Preview. Recent platform updates include Schema Updates API, new AAD permissions and simplified ACL. Upcoming work described, see Graph connector search demo and finally step through how and why build a connector using Postman.  The host of this call was Brian T. Jackett (Microsoft) | @BrianTJackett. Q\u0026amp;A takes place in chat throughout and live at end of the call.\n  Agenda items  Latest updates and news on the Microsoft 365 platform – Brian T. Jackett (Microsoft) | @BrianTJackett – 6:53 Monthly contributors on the Microsoft 365 platform community efforts – Vesa Juvonen (Microsoft) | @vesajuvonen – 11:23 Demo - Latest on Microsoft Graph Data Connect datasets – Nik Charlebois (Microsoft) | @NikCharlebois – 15:15 Demo - Extending Teams apps to Outlook and Office.com – Saurabh Bhatia (Microsoft) | @iamSBTron – 29:36 Demo - Graph Connectors updates and Postman samples – Brian T. Jackett (Microsoft) | @BrianTJackett – 37:33  Thank you for your creativity and work execution. Samples are often showcased in Demos.\nTogether Mode  Thank you for being part of this community and these calls. You make this community great!\nActions  Mark your calendar for Microsoft Tech Days | Thursday, May 5, 2022. Register for Microsoft Build | May 24-26, 2022 Register for Sharing is Caring events:  AMA (Ask me anything) – Viva ACE | Tuesday, April 26th, 9am PT - Register Community Docs Session | Tuesday, May 17, 10:00 am PT - Register Power Platform Samples – First Time Contributor | Monday, May 9, 10:30 am PT- Register Maturity Model Practitioners | Tuesday, April 19, 7:00 am PT - Register PnP Office Hours – 1:1 session | Register PnP Buddy System | Request a Buddy   Register for the Microsoft 365 Developer Program and get a free developer tenant Get started with free training modules covering Microsoft 365 platform capabilities. Visit the Microsoft 365 Unified Sample Solution Gallery from Microsoft and community. Sign up to Share your story in the Learn from the community series. Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/m365-dev-call  Demo references  Latest on Microsoft Graph Data Connect datasets General  Documentation – Graph Data Connect Policies Repo – Graph Data Connect Solutions Documentation - Quickstart: Use the Copy Data tool in the Azure Data Factory Studio to copy data   Site Collection Level  Article - View usage data for your SharePoint site Documentation - View search usage reports in modern sites   Tenant Admin Level  Documentation - Microsoft 365 Reports in the admin center - SharePoint site usage Documentation - Microsoft 365 usage analytics   Via Microsoft Graph  Documentation - SharePoint site usage reports   Extending Teams apps to Outlook and Office.com  Sample - Getting Started with Todo List Sample Documentation - Teams Toolkit Overview Documentation - Extend Teams apps across Microsoft 365   Graph Connectors updates and Postman samples  Documentation - Microsoft Graph connectors overview | aka.ms/graphconnectorsapi Documentation - Use Postman with the Microsoft Graph connectors API Demo - Latest on Microsoft Graph connectors SDK – Rajdeep Chandra (Microsoft)    General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community Microsoft Graph Toolkit in Microsoft Learn | https://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on Github PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Power Apps monthly call | Wednesday, April 20, 8:00 am PT - https://aka.ms/PowerAppsMonthlyCall (monthly) Viva Connections \u0026amp; SharePoint Framework call | Thursday, April 21, 7:00 am PT - https://aka.ms/spdev-spfx-call (bi-weekly) Microsoft Identity Platform call | Thursday, April 21, 9:00 am PT - https://aka.ms/IDDevCommunityCalendar (monthly) Microsoft 365 platform call | Tuesday, April 26, 8:00 am PT – https://aka.ms/m365-dev-call (weekly) M365 General Dev call | Thursday, April 28, 7:00 am PT - https://aka.ms/m365-dev-sig (bi-weekly) Office add-in monthly call | Wednesday, May 11, 8:00 am PT - https://aka.ms/officeaddinscall (monthly) Adaptive Cards monthly call | Thursday, May 12, 9:00 am PT - https://aka.ms/adaptivecardscommunitycall (monthly)  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members. More details on the Microsoft 365 community from https://aka.ms/m365pnp.\nYou can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from https://aka.ms/m365pnp.\n\u0026quot;Sharing is caring\u0026quot;\nMicrosoft 365 PnP team, Microsoft - 20th of April 2022\nRelated documents   M365 platform - Weekly 20220419.pptx (35 MB)  ","image":"https://pnp.github.io/blog/microsoft-365-platform-community-call/2022-04-19/images/recording-19th-april_hue62a418b40df4628fa4db1ae55742f2e_488308_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-call/2022-04-19/","tags":[],"title":"Microsoft 365 Platform Community Call - 19th of April, 2022"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Stockholm, Sweden based Principal Program Manager, Wictor Wilén (Microsoft) | @wictor.\nTopics discussed in this session  Wictor\u0026rsquo;s new role as Principal Program Manager in Microsoft People Services organization His focus on the people experiences in the Microsoft ecosystem - people profile details, pictures and so on Updated focus on the profile improvements in Microsoft 365 Differences between designing services for consumer and business areas Centralized services and experiences around personal information and upcoming plans for both 1st party and 3rd party  Importance of privacy and transparency on the collected information in cloud  We also covered 17 articles published by Microsoft and the PnP Community over the last week.\nThis week  Wictor – Writing specifications on the upcoming features - focusing on preparing for upcoming planning week Waldek – Preparing for the upcoming TechDays event and usual rhythm of open-source and community engagement Vesa – prepping for Microsoft Build – May 24–26, 2022, and for the next release SPFx v1.15 beta with List extensibility (custom forms for creating, viewing and editing an item) capability.  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, April 11, 2022. Enjoy the show.\n Video at Microsoft 365 Community YouTube channel.    Podcast at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!”\nHere are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  April 2022 – Viva Topics Integrations with Teams, Syntex, Outlook and Yammer - Chris McNulty (Microsoft) | @cmcnulty2000 “Loop, there it is!” ‌‌ – The Intrazone podcast - Mark Kashman (Microsoft) | @mkashman Most used SharePoint Framework solutions from the Store - March 2022 - Vesa Juvonen (Microsoft) | @vesajuvonen Get inspired with Microsoft 365 apps at Microsoft Tech Days - Microsoft Two conferences in one! 365 EduCon \u0026amp; PWR EduCon - Seattle, WA - Mark Kashman (Microsoft) | @mkashman Microsoft 365 Platform Call – 12th of April 2022 - Wellbeing sample - Waldek Mastykarz (Microsoft) | @waldekm, Anoop Tatti (Content+Cloud) | @anooptells Introducing the new Power Automate pane in Power Apps! - Tasha Scott (Microsoft)  Community articles  Save data to app personal folder - Adam Wójcik (Hitachi Energy) | @Adam25858782 How to use oh-my-posh with PnPPowerShell - Luise Freese | @LuiseFreese How to query Azure Monitor Log Analytics in Logic Apps with a Managed Identity - Luise Freese | @LuiseFreese M365 Dev Podcast - Development Topics with Andrew Connell - Andrew Connell (Voitanos) | @andrewconnell, Jeremy Thake (Microsoft) | @jthake \u0026amp; Paul Schaeflein (AddIn365) | @paulschaeflein Calling Microsoft Graph with PnP PowerShell - Todd Klindt (Sympraxis Consulting) | @ToddKlindt Power Apps Containers for Gallery Columns - Laura Rogers (IW Mentor) | @wonderlaura Will Microsoft Loop improve adoption of Teams channels? - Phil Worrell (Swisscom) | @Worrelpa Episode #201 - Using the AdaptiveCardHost component in SPFx solutions - Paolo Pialorsi (PiaSys) | @PaoloPia Want to contribute your knowledge to Microsoft Docs? Check out how - April Dunnam (Microsoft) | @aprildunnam  Additional resources  Wellbeing days requests and reminder - Adaptive Cards Extensions and Teams personal app - GitHub Microsoft Tech Days - Have a seat with Microsoft 365 developer platform | Thursday, May 5, 2022 365 EduCon - Seattle and PWR EduCon - Seattle - May 9-13, 2022 Book - Angela Duckworth - Grit - The Power of Passion and perseverance Microsoft 365 Unified Sample Gallery - https://aka.ms/m365/samples PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 Platform Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-162/images/pnp-weekly-162-promo_hu6a199d8b36ba90f323ebf6025b1404c9_802615_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-162/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 162"},{"categories":["PnP PowerShell"],"contents":"PnP PowerShell PnP PowerShell is a \u0026ldquo;swiss army knife\u0026rdquo; type of PowerShell Module providing over 600 cmdlets that work with Microsoft products such as SharePoint Online, Microsoft Teams, Microsoft Project, Security \u0026amp; Compliance, Azure Active Directory, and more. The advantage is that you will have a consistent way to work with a broad range of Microsoft products from a single connection. No need to download different PowerShell Modules, which all work in a slightly different way, requiring different ways of connecting and authenticating.\nPnP PowerShell runs on any device on any platform. This means you can run it i.e. from a Windows machine, Mac, Linux based device, Azure Function, Azure Runbook or even a Raspberry Pi. All in the same consistent way.\nFor more information about installing PnP PowerShell, please refer to the documentation.\nNew version of PnP PowerShell – v1.10 We have released a new version, 1.10, of PnP PowerShell with some new capabilities, improvements and bug fixes. Here are some of the most noteworthy changes and additions.\nYou can find the full changelog here.\nMicrosoft Teams cmdlets additions and improvements  New-PnPTeamsTeam Add-PnPTeamsUser  Both these cmdlets now support adding multiple owners and members. Prior to this, you could only add one user at a time. With this release, you can add multiple users in a Teams team. If, for example, you want to add 1000 users in a team, earlier this would mean 1000 HTTP requests, now it is just 5 requests. This is possible because we are now using a different Microsoft Graph API which allows us to add 200 users in a single HTTP request. This will dramatically improve performance and lower your chances of running into throttling.\nThese cmdlets now also support addition of guest users.\nFor more information about these cmdlets, see the documentation New-PnPTeamsTeam and Add-PnPTeamsUser.\n Update-PnPTeamsUser  This cmdlet was added to change role of a user in an existing Teams team. So, you can change an owner to a member role and vice versa.\n Get-PnPTeamsPrimaryChannel  This cmdlet was added to get the primary Teams channel, General, of a Team.\n Copy-PnPTeamsTeam  This cmdlet was added which allows an existing Teams team to be copied into a new Team.\nList designs (templates)  Add-PnPListDesign Remove-PnPListDesign Invoke-PnPListDesign Get-PnPListDesign  Microsoft List designs (aka list templates) enable your users to create custom repeatable list templates (in SharePoint, Teams, and within the Lists app itself) in your organization. They can use Get-PnPSiteScriptFromList cmdlet to extract the list template and then use the site script to create a new list template using Add-PnPListDesign for the whole organization.\nYou can find the documentation for that here.\nMicrosoft 365 Group settings  Get-PnPMicrosoft365GroupSettings New-PnPMicrosoft365GroupSettings Remove-PnPMicrosoft365GroupSettings Set-PnPMicrosoft365GroupSettings Get-PnPMicrosoft365GroupSettingTemplates  Consider a scenario where you want to block certain words from your group display names or define whether guest users are allowed to be group owners. We added these cmdlets to make it easier to create those configurations for your Microsoft 365 groups.\nYou can find the documentation here to get started: New-PnPMicrosoft365GroupSettings\nSharePoint content types  Publish-PnPContentType Unpublish-PnPContentType Get-PnPContentTypePublishingStatus Get-PnPCompatibleHubContentTypes  Remember the Content type hub (CTHub)? Based on the newly available CSOM SDK, we added a these cmdlets to interact with Content Types in a content type hub. Usually, whenever a new Tenant is created, there is a default site collection already present under the URL (https://tenant-name.sharepoint.com/sites/contenttypehub). This site collection is the default location for Content types that you want to publish to other site collections in the tenant.\nWith the addition of these cmdlets, you will be able to Publish or Unpublish a content type from the Hub. We can also retrieve the publishing status of the content types. We can also retrieve the list of content types present in content type hub site that can be added to the root web or a list on a target site.\nMessage center announcement for the current user  Set-PnPMessageCenterAnnouncementAsRead Set-PnPMessageCenterAnnouncementAsUnread Set-PnPMessageCenterAnnouncementAsArchived Set-PnPMessageCenterAnnouncementAsNotArchived Set-PnPMessageCenterAnnouncementAsFavorite Set-PnPMessageCenterAnnouncementAsNotFavorite  The Microsoft 365 message center is the place to get notified about planned changes and new upcoming features in your tenant. With the addition of these cmdlets, you will be able to programmatically interact with the message center announcements. These cmdlets replace some of the ones we\u0026rsquo;ve had before in PnP PowerShell.\nOther notable stuff Connect-PnPOnline is used quite heavily since it is the first cmdlet that you use to interact with Microsoft 365 when using PnP PowerShell. It was facing a memory leak issue. Consider a scenario where you want to switch between thousands of site collections in a single script. In this release, we fixed a memory leak issue which occured due to application insights.\nRename-PnPTenantSite is a cmdlet that we added in response to community request. Using this, you now have the ability to change the URL of a site collection. Consider a scenario where you created a site collection and realized that there is a typo, duh, in the URL. You can now just change the site collection URL from /sites/tst to /sites/test\nSync-PnPSharePointUserProfilesFromAzureActiveDirectory is a cmdlet which you can use to synchronize user profiles from Azure Active Directory into the SharePoint Online User Profiles. This has also been improved to handle special characters and accents and should perform more reliable overall. It has been tested in organizations featuring more than 100,000 users, so should work well at scale as well.\nAdd-PnPFile has also been improved with the addition of -Content parameter. If it is specified, it allows creating a new file on SharePoint Online and directly provide its textual content, i.e. to upload a log file of the execution.\nContributors This release wouldn’t be possible without the help of:\n Michael Vasiloff svermaak Russell Gove Mike Park Jerker Vallbo Gaurav Mahajan Dennis Veronique Lengelle Jasey Waegebaert Swapnil Shrivastava Hugo Bernier Brendon Lee Johan Brännmar Lschockaert Leon Armston Arleta Wanat Guillaume Bordier reusto Reshmee Auckloo Gautam Sheth Koen Zomers Erwin van Hunen  Work in Progress Here are some things that we’re currently working on:\nAutocomplete PowerShell autocomplete !\nBased on the fantastic work done by the Azure PowerShell SDK team for the Az.Tools.Predictor, we are looking into adding some predictive intelligence into the PnP PowerShell cmdlets. You will also start seeing the ability to show all available parameters easily. Check out this PR for more details on this handy feature.\nV2.0 We are in very early stage discussion around 2.0 version. This is one version where we want to focus on and reduce the dependency on CSOM itself for the cmdlets. The replacement for CSOM would be SharePoint REST APIs or Microsoft Graph APIs where possible.\nWhat else could we improve, add and fix? Let us know what you think by helping out with one of our open issues or chime in on our open discussion! If you\u0026rsquo;re having dev skills yourself, we very much welcome your contribution to the source code by submitting PRs, after all PnP PowerShell is a community effort. Sharing is caring!\nTry it today Get the latest major release of the PnP PowerShell from PowerShell gallery by executing:\nInstall-Module PnP.PowerShell If you want to get the latest from the dev branch of PnP PowerShell, you can get it by executing:\nInstall-Module PnP.PowerShell -AllowPrerelease If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/pnp/powershell.\nIf you see any room for improvement, please, don’t hesitate to reach out to us either on GitHub or Twitter.\n","image":"https://pnp.github.io/blog/pnp-powershell/pnp-powershell-v1-10/images/banner-pnp-powershell_hu0c1617e894103ccdb2807543721de1c6_108078_460x200_fill_box_smart1_3.PNG","permalink":"https://pnp.github.io/blog/pnp-powershell/pnp-powershell-v1-10/","tags":["Azure AD","PnP PowerShell","Microsoft Teams","SharePoint"],"title":"PnP PowerShell v1.10"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"   Call summary Yes, in one location you will find Microsoft 365 tenant – script samples gallery (147 scenarios and 207+ scripts) now also integrated into the Microsoft 365 Unified Sample Solution Gallery (1040+ samples) from Microsoft and community!! Sign up and attend an AMA and other events this month hosted by Sharing is Caring. Get the recognition you deserve, sign up for the PnP Recognition Program. The MGT samples repository is now LIVE! https://aka.ms/mgt/samples and see the preview release for the MGT TeamsFxProvider - npm i [@microsoft](https://techcommunity.microsoft.com/t5/user/viewprofilepage/user-id/41501)/mgt@next.teamsfx. Join the Microsoft 365 platform call on Tuesday, April 19, 8:00 am PT.\nJust Released - since last call  2 new/updated script samples 1 Teams sample 1 Power Platform sample  To see current releases and latest updates/nightly builds, access the Repos via the links in table below. While version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities.\nOpen-source project status    Project Current Version Release/Status     PnP .NET Libraries - PnP Framework v1.9.0 GA Prepping for v1.10.0   PnP .NET Libraries - PnP Core SDK v1.6.0 GA Prepping for v1.7.0   PnP PowerShell v1.10.0 GA In progress: V2 POC - .NET 6.0 based, Requires PowerShell 7.2   Yo teams - generator-teams v3.5.0 GA, v4.0.0-next(.2) Planning v4.0.0 release in mid-May   Yo teams - yoteams-build-core v1.6.0, 1.6.0-next.1    Yo teams – yoteams-deploy v1.1.0 GA    Yo teams - msteams-react-base-component v3.1.1 GA    Microsoft Graph Toolkit (MGT) v2.4.0 GA Working on v3.0.0 - Aligning all Toolkit components to Fluent UI Web Components    The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\nActions  Mark your calendar for Microsoft Tech Days - Have a seat with Microsoft 365 developer platform | Thursday, May 5, 2022. Registration and Agenda coming soon. Mark your calendar for Microsoft Build, May 24-26, 2022 - Register Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Join us at the next Microsoft 365 platform call on Tuesday, April 19, 8:00 am PT.  Latest news from Microsoft engineering on Microsoft 365 topics Demos:  Latest on Microsoft Graph Data Connect data sets – Nik Charlebois Integrate Graph connector content within Office.com – Mounika Narayanan Introduction: Apps that extend across Teams, Outlook, and Office – Divyanka Pillai and Michelle Lee     Register for Sharing is Caring Events:  AMA (Ask me anything) – Viva ACE | Coming Soon First Time Contributor Session | TBS soon Community Docs Session | Tuesday, May 17, 10:00 am PT - Register Power Platform Samples – First Time Contributor | Monday, May 9, 10:30 am PT- Register PnP – SPFx Developer Workstation Setup | TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager | TBS soon First Time Presenter | TBS soon More than Code with VSCode | TBS soon Maturity Model Practitioners | Tuesday, April 19, 7:00 am PT - Register Getting Started with Viva Connection ACEs (2-part session) | TBS soon PnP Office Hours – 1:1 session | Register PnP Buddy System | Request a Buddy   Download the recurrent invite for this call – http://aka.ms/m365-dev-sig Call attention to your great work by using the #PnPWeekly on Twitter.  Microsoft Teams Development Samples (https://aka.ms/TeamsSampleBrowser)\n Move Your Filters app - Mark Allan | @MarkXA \u0026amp; Tom Resing | @resing  Microsoft Power Platform Samples (https://aka.ms/powerplatform-samples)\n Invoice Automation using the SharePoint Syntex - Steve Pucelik | @spucelik  Script Samples (https://aka.ms/script-samples)\n New Scenarios  Delete Custom SharePoint list designs - Reshmee Auckloo | @ReshmeeAuckloo   Updates or scenarios implemented with alterative tools  Undelete items from SharePoint Recycle bin - Adam Wójcik | @Adam25858782    Article: Getting started with PnP Script Samples – aka.ms/script-samples/getting-started\n– Many thanks!\nTogether Mode!  Thanks everyone for joining the call today. It’s awesome to see your smiling faces.\nDemos delivered in this session   TeamsFx .NET - Current Updates - April 2022 – Microsoft Teams Framework is a .NET library encapsulating common functionality and integration patters for developers building apps hosted in Microsoft Teams. Use .NET (server-side) and React (client-side) languages, CLI, built-in SSO, GraphClient Auth provider, Blazor templates, extended by Teams Toolkit in VS 2022 (preview). See scaffolding out a project (create personal tab) using Microsoft Teams App template in VS 2022, add Teams Toolkit, Razor Class Library.\n  Controlling list toolbar with JSON using commandBarProps option – high level positioning on column, view and form formatting options. See how commandBarProps fit in. Command bar property changes affect view, not list configuration. See the basic JSON schema used to make changes to items on the command bar. Add, hide, reposition on bar or to overflow, rename, re-icon, add a tooltip and conditions to command items. Useful for guiding users through operations.\n  Building dynamic dashboard pages with list formatting – take a single list being fed by one or more Microsoft Forms and expose it on a dashboard comprised of 4 discrete list web parts accessing the same list but displaying information in different views (Honeycomb, Recent Comments, Heat Map, Gauge Aggregate Footer). As data flows into the list, the dashboard updates. The web parts are not linked together. Samples exist for each View.\n  Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics covered in this call  PnP .NET library updates - David Warner II (Microsoft) | @DavidWarnerII – 6:15 PnP PowerShell updates - Gautam Sheth (Valo Intranet) | @gautamdsheth – 6:58 yo Teams updates - Wictor Wilén (Microsoft) | @wictor – 8:03 Microsoft Graph Toolkit updates - David Warner II (Microsoft) | @DavidWarnerII – 9:35 Microsoft Script Samples - David Warner II (Microsoft) | @DavidWarnerII – 2:43 Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German – 10:23 Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam – 11:20 Demos – 13:13  Demos   TeamsFx .NET - Current Updates - April 2022 – Thomy Gölles (Solvion) | @thomyg – 13:21\n Repo - Microsoft Teams Framework (TeamsFx) Tool – Blazor - Build client web apps with C#    Controlling list toolbar with JSON using commandBarProps option – Chris Kent (DMI) | @theChrisKent – 38:15\n Documentation - Command bar customization syntax reference Icons – Flicon    Building dynamic dashboard pages with list formatting – Chris Kent (DMI) | @theChrisKent – 53:09\n Sample - Heat Map Sample - Honeycomb Links Sample - Recent Comments Sample - Gauge Aggregate Footer    Resources Additional resources around the covered topics and links from the slides.\n Microsoft 365 PnP Weekly – Episode 161 (April 11th) with California, US based Power Platform Community Program Manager, David Warner (Microsoft) | @DavidWarnerII | video | podcast Microsoft 365 PnP Weekly – Episode 160 (April 4th) with Bangalore, India based MVP, Arjun Menon (Tata Consultancy Services) | @arjunumenon | video | podcast Microsoft 365 Developer Podcast - Development Topics with Andrew Connell (April 12th) | @andrewconnell | podcast  General resources  Script Samples - Getting started with PnP Script Samples – aka.ms/script-samples/getting-started Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant – Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v3.x | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community Microsoft Graph Toolkit in Microsoft Learn | https://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Microsoft 365 platform call | Tuesday, April 19, 8:00 am PT – https://aka.ms/m365-dev-call (weekly) Power Apps monthly call | Wednesday, April 20, 8:00 am PT - https://aka.ms/PowerAppsMonthlyCall (monthly) Viva Connections \u0026amp; SharePoint Framework call | Thursday, April 21, 7:00 am PT - https://aka.ms/spdev-spfx-call (bi-weekly) Microsoft Identity Platform call | Thursday, April 21, 9:00 am PT - https://aka.ms/IDDevCommunityCalendar (monthly) M365 General Dev call | Thursday, April 28, 7:00 am PT - https://aka.ms/m365-dev-sig (bi-weekly) Office add-in monthly call | Wednesday, May 11, 8:00 am PT - https://aka.ms/officeaddinscall (monthly) Adaptive Cards monthly call | Thursday, May 12, 9:00 am PT - https://aka.ms/adaptivecardscommunitycall (monthly)  General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls!\nYou can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\nRelated documents   placeholder.md (21 B)  * * * _“Sharing is caring”_ _Microsoft 365 Community (PnP) team, Microsoft - 15th of April 2022_ ","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/2022-04-14/images/recording-14th-april_hua0d30191906b9c663748594daa00d961_150791_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/2022-04-14/","tags":[],"title":"Microsoft 365 Developer Community Call recording – 14th of April, 2022"},{"categories":["Community post"],"contents":"What is oh my posh? Oh-my-posh is an amazing prompt engine that does not only pretty up the terminal you use, but it will ease your work. By using an established theme or creating a new one, you get important information directly in the context of your work, highlighted in the way that works best for you. For example:\n In which repository am I working in? Which branch? When did I execute a command? On which node.js version am I working?  the M365Princess theme by Luise plus environment variables by Anoop Making good things even better: A while ago, Luise created her own theme and now Anoop had the idea to level it up:\nWhen interacting with Microsoft 365, most of the times we use the Microsoft 365 platform community driven PowerShell module called PnP PowerShell. One of the first commands we execute while using PnP PowerShell, is Connect-PnPOnline to connect to a SharePoint site. We can now see right in the terminal which SharePoint site we are connected to and which Microsoft 365 tenant the SharePoint site lives in.\nThese are displayed with the help of a couple of environment variables that are set by PnP PowerShell after running the Connect-PnPOnline command.\nIn the preview below, the connected SharePoint site is /sites/yoursite which is in the tenant named yourtenant.sharepoint.com\n   The original idea to show these values comes from Erwin van Hunen, the father of PnP PowerShell.\nHow to install oh-my-posh and the theme To have this experience in Visual Studio Code, complete the following steps:\n  Install oh-my-posh and posh-git\n  Open the the terminal and run\n winget install JanDeDobbeleer.OhMyPosh --scope user Install-Module posh-git -Scope CurrentUser   If you are unable to use winget then please install oh-my-posh using the install-amd64.exe file under the oh-my-posh reopsitory\u0026rsquo;s latest release.\n     Edit your PowerShell profile in VS Code\n Open it with code $PROFILE Insert this:    Import-Module posh-git Set-PoshPrompt -Theme M365Princess Install a font  Download a font of your choice from Nerdfonts Install a monospace version of that font Open settings in VS Code with CTRL + SHIFT + P and select Preferences: Open settings (JSON) Add (for example) \u0026quot;terminal.integrated.fontFamily\u0026quot;: \u0026quot;CaskaydiaCove Nerd Font\u0026quot; Save settings and restart VS Code    How does the site information get displayed oh-my-posh has the capability to display environment variables in the prompt. We use this capability to show the site information.\nWhen we run the Connect-PnPOnline cmdlet, a couple of environment variables are set. They are PNPPSHOST and PNPPSSITE. This can be seen in the PnP PowerShell code here. PNPPSHOST contains the host name e.g. yourtenant.sharepoint.com and PNPPSSITE contains the URL of the connected site e.g. yoursite.sharepoint.com.\nTo display environment variables in an oh-my-posh theme we need to use the syntax {{ .Env.variablename }}.\nIn the oh-my-posh M365Princess theme, we are displaying the values of PNPPSHOST and PNPPSSITE using {{ .Env.PNPPSHOST }} and {{ .Env.PNPPSSITE }}. The same be seen in the following lines of the code for theme:\n Displaying the host name Displaying the site URL  The above lines of code check if the corresponding variables have a value and if they do then, the value is shown.\nThese values can be shown in any other oh-my-posh theme if needed. To customise any other on-my-posh theme, please follow the guide here. As part of the customisation, the block between lines 4 and 33 of the M365Princess theme to the custom theme.\nSlow prompt? In case the prompt is responding slow on Windows OS, then one of the reasons might be the oh-my-posh process being blocked by Windows defender. To overcome that, please run PowerShell with elevated permissions (Run as administrator) and execute the following command:\nAdd-MpPreference -ExclusionProcess \u0026#34;oh-my-posh.exe\u0026#34; If that doesn\u0026rsquo;t solve the problem then, execute the following command\nAdd-MpPreference -ExclusionPath \u0026#34;$env:POSH_PATH\\oh-my-posh.exe\u0026#34; For more information see the comments this issue.\nConclusion It\u0026rsquo;s the little things! Of course this is just one puzzle tile, but better overview, crucial information presented in a minimal but nerdy and compelling way helps people to ease their workloads. When working with PnP PowerShell, it\u0026rsquo;s a game changer to know to which of your tenants and sites you are connected to.\nIf you like the oh-my-posh and can afford it, go buy Jan, who builds and maintains this awesome open source project, a coffee ☕: oh-my-posh repository\nsharing is caring\nThis post was written by Luise Freese and Anoop Tatti - we are working on having a co-author field.\n","image":"https://pnp.github.io/blog/post/how-to-use-oh-my-posh-with-pnppowershell/images/oh-my-posh_hu4b0c5cd0dcd40f4c2af930b5526ab862_72252_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-use-oh-my-posh-with-pnppowershell/","tags":["PnP PowerShell","SharePoint"],"title":"How to use oh-my-posh with PnPPowerShell"},{"categories":["Adaptive Cards community call"],"contents":"Call summary The following topics are covered in this month’s community call. Overview on Universal Actions + Messaging Extensions (elevating user experiences with Universal Actions and Messaging Extensions on Teams and Outlook – walkthrough capabilities and value propositions) - Karan Thapar (Microsoft), Accessibility Updates (Accessibility work and SDK v1.6 release) – J.P. Roca (Microsoft), and 15 minute live Q\u0026amp;A primarily focused on Universal Actions + Messaging Extensions. This call was hosted by J.P. Roca (Microsoft) | @jpthepm. Recorded on April 14, 2022.\n  Agenda  Universal Actions + Messaging Extensions - Karan Thapar (Microsoft) – 00:37 Accessibility Updates - J.P. Roca (Microsoft) | @jpthepm – 21:02 Q\u0026amp;A - J.P. Roca (Microsoft) | @jpthepm \u0026amp; Karan Thapar (Microsoft) –22:04  Demo summary  Elevate user experiences with Universal Actions and Messaging Extensions on Teams and Outlook – Adaptive Cards enable you to take quick actions right from within Teams and Outlook. Hear the latest on Universal Actions, vacation approval scenario with value propositins, contextual or role-based views on Teams, sequential workflows on Teams, messaging extensions, search (read only) messaging extensions, action messaging extensions, link unfurling, success stories and value, how to onboard and build resources and Q\u0026amp;A at end.  Referenced in this call  Documentation – Universal Actions for Adaptive Cards Documentation – Messaging extensions Documentation – Link unfurling Tool - Microsoft Bot Framework | https://dev.botframework.com/ Demo – Adaptive Cards Video Player Bot on Teams - Alexis Kinzelin (Microsoft) Tool - Microsoft Graph Toolkit  Actions  Mark your calendar for Microsoft Tech Days - Have a seat with Microsoft 365 developer platform | Thursday, May 5, 2022. Registration and Agenda coming soon. Mark your calendar for Microsoft Build, May 24-26, 2022 - Register Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition  Resources in General  Let us know the features you need https://aka.ms/ACRoadmap Schema Explorer - https://adaptivecards.io/explorer/Action.Execute.html Designer - https://adaptivecards.io/designer/ Get started with Templating - https://aka.ms/ACTemplating Browse the Adaptive Cards Code \u0026amp; Contribution Guidelines - https://aka.ms/ACRepo Find tools, sample cards and more - https://www.madewithcards.io Issues creating AC interfaces https://github.com/microsoft/AdaptiveCards/discussions  Stay connected  See the full blog post for this call at: https://aka.ms/m365pnp/community/blog Twitter - https://twitter.com/microsoft365dev​​ Recurrent Invite - https://aka.ms/adaptivecardscommunitycall Next call – May 12th at 09:00am PST  Learn more  Microsoft 365 Unified Sample gallery - https://aka.ms/m365/samples Microsoft 365 Platform Community in YouTube - https://aka.ms/m365/videos Microsoft 365 Platform Community - https://aka.ms/m365pnp  Related documents   Adaptive Cards April 2022 Community Call.pptx (117 KB)  ","image":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-april-2022/images/recording-adaptive-cards-april-call_hua50012fa682050558ff5eb743a07f983_295297_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-april-2022/","tags":["Adaptive Cards","Community Call","Microsoft 365"],"title":"Adaptive Cards community call – April 2022"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from April 12th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos.\n  Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.\n Register for the Microsoft 365 Developer Program and get a free E5 developer tenant. Get started with free training modules (74+ modules) covering Microsoft 365 platform capabilities. Announcing the new Microsoft 365 Unified Sample Solution Gallery (1040+ samples) from Microsoft and community. Sign up and participate in an event hosted by Sharing is Caring this month. Tune into:  the Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics – hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Microsoft 365 PnP Weekly - Videos, Podcasts focused on latest Microsoft 365 news and topics hosted by Vesa Juvonen (Microsoft) and Waldek Mastykarz (Microsoft).   Teams Platform Updates:  Documentation - Integrate People Picker Documentation - Share to Teams from personal app or tab   Teams Documentation Updates:  Step-by-Step Guide - Create Teams conversation bot   New series launched – Learn from the community. This week's article: Learn from the community: Teams App Dev Challenge winner brings high quality training into Microsoft\u0026hellip;. Sign up to Share your story Learn from 3 Microsoft 365 Platform related stories, 2 very useful demos, and 3 Teams documents delivered by Microsoft.  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout and live at end of the call.\nMicrosoft 365 Platform News Flash  From 0 to hero: connecting your web app to Microsoft Teams using Azure Communication Services – David Roussel (Microsoft) | @davrous Announcing new Microsoft 365 unified sample gallery with over 1,000 samples – Microsoft Learn from the community: Teams App Dev Challenge winner brings high quality training into Microsoft\u0026hellip; - Bob German (Microsoft) | @Bob1German  Actions  Mark your calendar for Microsoft Tech Days - Have a seat with Microsoft 365 developer platform | Thursday, May 5, 2022. Register. Mark your calendar for Microsoft Build, May 24-26, 2022 - Register Register for Sharing is Caring Events:  AMA (Ask me anything) – Viva ACE | Coming Soon First Time Contributor Session | TBS soon Community Docs Session | Tuesday, May 17, 10:00 am PT - Register Power Platform Samples – First Time Contributor | Monday, May 9, 10:30 am PT- Register PnP – SPFx Developer Workstation Setup | TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager | TBS soon First Time Presenter | TBS soon More than Code with VSCode | TBS soon Maturity Model Practitioners | Tuesday, April 19, 7:00 am PT - Register Getting Started with Viva Connection ACEs (2-part session) | TBS soon PnP Office Hours – 1:1 session | Register PnP Buddy System | Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Awesome to see all of the faces of this community. Please keep the feedback coming.\nDemo summaries  Building in meeting document signing app for Microsoft Teams – learn about Stage View, side panel, in-meeting apps, and the new programmatic sharing of content to stage capability in this document signing POC demo. Workflow - create a document, create a meeting (authorized viewers, signers invited), add your app to meeting (tab), use shared capability to share document during meeting. Sign offs are reflected in UI as occur. See code and get sample today. Building wellbeing solution with Teams and Viva Connections – the latest fully documented and available sample highlighting an end-to-end Microsoft 365 solution. Includes 2 ACEs, Viva Connections Dashboard, a list, an SPFx web part - Teams personal app using Microsoft Graph and MGT for information. See the app in action - receive wellbeing request, see details, approve, or reject in Teams Personal App. Step through code and view supporting resources.  Thank you for your creativity and work execution. Samples are often showcased in Demos.\nAgenda items  Latest updates and news on the Microsoft 365 platform – Vesa Juvonen (Microsoft) | @vesajuvonen – 8:39 Demos – 15:04  Demos   Building in meeting document signing app for Microsoft Teams – SaiBhavya Reddy (Microsoft) and Eoin O'Brien (Microsoft) – 15:14\n Sample - In-Meeting Document Signing Documentation - Share app content to stage API Documentation - Share entire app to stage Documentation - Share specific parts of the app to stage Documentation – People Picker in Adaptive Cards Step-by-Step - Share meeting stage in Teams    Building wellbeing solution with Teams and Viva Connections – Waldek Mastykarz (Microsoft) | @waldekm, Anoop Tatti (Content+Cloud) | @anooptells – 36:45\n Sample - Wellbeing days requests and reminder - Adaptive Cards Extensions and Teams personal app Demo - Getting started on building Microsoft Viva Connection adaptive card components using SPFx Ignite session - Get started with Microsoft Viva Connections Extensibility    Resources Additional resources around the covered topics and links from the slides.\n Microsoft 365 PnP Weekly – Episode 161 (April 11th) with California, US based Power Platform Community Program Manager, David Warner (Microsoft) | @DavidWarnerII | video | podcast Microsoft 365 Developer Podcast - Development Topics with Andrew Connell (April 12th) | @andrewconnell | podcast  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community Microsoft Graph Toolkit in Microsoft Learn | https://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on Github PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Office add-in monthly call | Wednesday, April 13, 8:00 am PT - https://aka.ms/officeaddinscall (monthly) M365 General Dev call | Thursday, April 14, 7:00 am PT - https://aka.ms/m365-dev-sig (bi-weekly) Adaptive Cards monthly call | Thursday, April 14, 9:00 am PT - https://aka.ms/adaptivecardscommunitycall (monthly) Microsoft 365 platform call | Tuesday, April 19, 8:00 am PT – https://aka.ms/m365-dev-call (weekly) Power Apps monthly call | Wednesday, April 20, 8:00 am PT - https://aka.ms/PowerAppsMonthlyCall (monthly) Viva Connections \u0026amp; SharePoint Framework call | Thursday, April 21, 7:00 am PT - https://aka.ms/spdev-spfx-call (bi-weekly) Microsoft Identity Platform call | Thursday, April 21, 9:00 am PT - https://aka.ms/IDDevCommunityCalendar (monthly)  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members. More details on the Microsoft 365 community from https://aka.ms/m365pnp.\nYou can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from https://aka.ms/m365pnp.\n\u0026quot;Sharing is caring\u0026quot;\nMicrosoft 365 PnP team, Microsoft - 13th of April 2022\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-call/2022-04-12/images/recording-12th-april_hue59613cfc375febedc4d7ae77c8333a0_589252_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-call/2022-04-12/","tags":[],"title":"Microsoft 365 Platform Community Call - 12th of April, 2022"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by California, US based Power Platform Community Program Manager, David Warner (Microsoft) | @DavidWarnerII.\nTopics discussed in this session   Thoughts on swimming into his 4th week as Community Lead in Microsoft’s Power Platform Team.\n  Bringing the Microsoft 365 PnP digital Recognition (Credly) program from idea to reality. The program’s target audience, qualification, validation, badges, employer recognition, program growth and co organizers.\n  Growing the mental mindset of the Sharing is Caring program including training events and a gem - the Buddy System.\n  Success comes both with understanding just enough about every product and service under the Microsoft 365 umbrella to assemble a solution and with knowing experts to ask for help.\n  Three tips to anyone wanting to get started in the PnP Community.\n  We also covered 9 articles published by Microsoft and the PnP Community over the last week.\nThis week   Waldek – previewing POC to Angular Devs wanting to build Teams tabs with SSO, released new commend for CLI for Microsoft 365 to validate SPFx projects, gearing up to deliver demo with Anoop Tatti (Content + Cloud) during April 12th Microsoft 365 Platform call on building a wellbeing solution with Teams and Viva Connections, addressing still more PRs for CLI for Microsoft 365 and prepping for Microsoft Tech Days on May 5th.\n  Vesa – prepping for Microsoft Build – May 24–26, 2022, and for the next release SPFx v1.15 beta with List extensibility (custom forms for creating, viewing, and editing an item) capability.\n  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, April 11, 2022. Enjoy the show.\n Video at Microsoft 365 Community YouTube channel.    Podcast at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!”\nHere are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles   From 0 to hero: connecting your web app to Microsoft Teams using Azure Communication Services - David Roussel (Microsoft) | @davrous\n  Announcing new Microsoft 365 unified sample gallery with over 1,000 samples - Microsoft\n  Community articles   Microsoft 365 Unified Sample gallery - Microsoft 365 Platform Community | @m365pnp\n  Graph API News: APIs for managing shared channels now available in Microsoft Graph - Jarbas Horst (Valo Solutions) | @devjhorst\n  Microsoft 365 – SPFx OR react app error: Property ” does not exist on type ‘Readonly\u0026lt;{}\u0026gt;‘ while acce\u0026hellip; - Prasham Sabadra (Apexon) | @SabadraPrasham\n  Microsoft 365 Platform Community - Getting started series - Microsoft 365 Platform Community | @m365pnp\n  Episode #200 - Sites.Selected Application permission for Graph and SharePoint APIs - Paolo Pialorsi (PiaSys) | @PaoloPia\n  Power Apps Responsive Header and Footer Components + Debugging - Shane Young (PowerApps911) | @shanescows\n  👥How to use Dynamic Groups in the SharePoint audience targeting - Giuliano De Luca | @DeLucaGiulian\n  Additional resources  PnP Recognition Program – Digital Badges Microsoft Tech Days - Have a seat with Microsoft 365 developer platform | Thursday, May 5, 2022. Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-161/images/Thumb-Ep161-11th-April_hu47602639dfb44f6040660415a4b16df4_568097_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-161/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 161"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Bangalore, India based Technical Architect, PnP maintainer and MVP – Arjun Menon (Tata Consultancy Services) | @arjunumenon.\nTopics discussed in this session  On becoming a community contributor, a PnP maintainer and an MVP! One cannot become an MVP, you must be an MVP. Why community matters when you have a full-time day job already? Three focus areas for Teams work at Tata Consultancy Services? Motivations for becoming a PnP contributor. Journey from first Fork to maintainer of CLI for Microsoft 365. Advice for others wanting to do what I do. What is it like to participate in an MVP Summit? 3 tips for anybody wanting to start contributing to this community? From a Teams connections perspective, how might we look at the future of meetings/travel?  We also covered 17 articles published by Microsoft and the PnP Community over the last week.\nThis week  Waldek – processing PRs for CLI for Microsoft 365, catching up with MVP Summit recordings and learnings that will influence announcements at Microsoft Build – May 24–26, 2022, and previewing with a small target group concepts for improving the experience for Angular Devs wanting to build Teams tabs with SSO. If you use Angular and build for Teams, please contact Waldek, to show you what we have built and subsequently provide your feedback. Vesa – catch up after MVP Summit week and preparing this week’s release of SPFx v1.15 beta with List extensibility (custom forms for creating, viewing and editing an item) capability.  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, April 4, 2022. Enjoy the show.\n Video at Microsoft 365 Community YouTube channel.    Podcast at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!”\nHere are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles:  Microsoft Teams apps designed for Microsoft 365 coming in Preview to Outlook and Office.com - Mamata Kumar (Microsoft) | @zuprmamtakumar What’s New in Microsoft Teams | March 2022 - Microsoft SharePoint Roadmap Pitstop: March 2022 - Mark Kashman (Microsoft) | @mkashman Get inspired with Microsoft 365 apps at Microsoft Tech Days - Microsoft Microsoft Graph API support for new content type sync enhancements - Microsoft Learn from the community: Teams App Dev Challenge winners bring data and dashboards into Teams chats - Bob German (Microsoft) | @Bob1German and Decision Point team Introducing Microsoft Power Platform API (preview) - Lane Swenka (Microsoft)  Community articles  Microsoft 365 Conference - Las Vegas - April 5-7 CLI for Microsoft 365 v5.1 - Patrick Lamber (Experts Inside) | @patricklamber Validate SharePoint Framework project easily using CLI for Microsoft 365 - Rabia Williams (Microsoft) | @williamsrabia Developing SPFx solutions using Docker - Don Kirkham (DMI) | @DonKirkham SharePoint JSON formatting: Check if date \u0026amp; time column is blank/empty - Ganesh Sanap (Globant) | @GaneshSanap20 Open Word documents in the desktop app from Power Apps - Pieter Veenstra (HybrIT Services) | @PieterVeenstra What is means to be a Microsoft MVP - Microsoft 365 Voice - Sarah Haase | @sarahhaase, Antonio Maio | @AntonioMaio2 and Mike Maadarani | @mikemaadarani Dude. Where’s my Power Apps? - #234 - Daniel Glenn (InfoWorks, Inc) | @DanielGlenn, Darrell Webster (Modern Workplace Change) | @darrellaas Episode #199 - Disabling Guest Users via Power Automate - Paolo Pialorsi (PiaSys) | @PaoloPia Power Apps Responsive Design - Shane Young (PowerApps911) | @shanescows  Additional resources  Documentation PnPjs v2 - v3 Transition Guide Documentation - Maturity Model for Microsoft 365 \u0026ndash; Introduction Microsoft 365 Maturity Model on Twitter @M365Maturity Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-160/images/Thumb-Ep160-April4_hu20e4c2216860ddd1853e0f52380bfa81_552979_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-160/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 160"},{"categories":["Community post"],"contents":"Frequently Asked Questions (FAQ) is a useful addition to pages where you need to display common requests. The FAQ Web Part can be added to a page as a straight list of questions and answers or a series of grouped questions and answers when the need for a more organized approach is required.\nThe FAQ Web Part is not only for questions and answers — it can be used for any content that lends itself to expanding/collapsing functionality, such as keywords and definitions or expanding on short phrases.\nIn my latest community sample, I built an SPFx web part to provide an ability to display FAQs as Accordion or Tab.\nHere is how it looks:\n   In this article, I will share details on how to configure the FAQ webpart.\nBelow is the default screen of the FAQ webpart, when added to a SharePoint Online page.\n   FAQ webpart uses PropertyFieldCollectionData which provides page Content Editors the ability to manage the content of the web part within the web part properties.\nLet\u0026rsquo;s see how to manage the FAQ webpart\nChanging Title of the web part Below are the steps to update the Title of the FAQ Web part\n Edit the webpart. Select the default text and start typing the text needed as Title for the web part.  Check below image for more details.\n Adding/Updating Categories Below are the steps to update the Add/Update Categories of the FAQ Web part\n Edit the webpart. Select \u0026ldquo;Configure Categories\u0026rdquo; in the web part properties. Property pane is open providing ability to add/update categories.  Check below image for more details.\n Adding/Updating FAQs Below are the steps to update the Add/Update FAQs of the FAQ Web part\n Edit the webpart. Select \u0026ldquo;Configure Faqs\u0026rdquo; in the web part properties. Property pane is open providing ability to add/update faqs.  Check below image for more details.\n Search FAQs Below are the steps to update the Add/Update FAQs of the FAQ Web part\n Enter the search text in the search box. Web part automatically filters and shows the FAQs grouped by Categories.  Check below image for more details.\n Type Options FAQ webpart has the ability to display the FAQS as an Accordion or Tab. Below are the steps to change the display type of the FAQ Web part\n Edit the web part. Enter the search text in the search box. Choose the Type option in the web part properties as either \u0026ldquo;Accordion\u0026rdquo; or \u0026ldquo;Tab\u0026rdquo;  Check below image for more details.\n   Check below image to see how to change the type from Accordion to Tab\n Check below image to see how to change the type from Tab to Accordion\n Changing the Sort Order for FAQs  Source Code You can find the full source code and how to install it react-faqs. Thanks for reading. Hope you find this article useful\n","image":"https://pnp.github.io/blog/post/community-sample-faqs-with-propertyfieldcollectiondata/images/FAQWebpart_hufe8697080c50976de41014e1d2a57b2e_19402_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/community-sample-faqs-with-propertyfieldcollectiondata/","tags":["SharePoint framework (SPFx)"],"title":"Community Sample: React FAQs webpart "},{"categories":["CLI for Microsoft 365"],"contents":"Manage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use.\nWhile building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it’s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects.\nThe new version of CLI for Microsoft 365 – v5.1 Following our monthly release cadence, we’ve released a new version of the CLI for Microsoft 365 with some new capabilities. Here are a few of the most noteworthy additions.\n For the full list of what\u0026rsquo;s new and changed, see the release notes.\n Validate correctness of a SharePoint Framework project When building Microsoft 365 apps using the SharePoint Framework, it could happen that you hit a snag. To help you self-diagnose your project, we\u0026rsquo;ve worked with the SharePoint Framework engineering team, to provide you a command that validates the configuration of your project. If there are any issue, you\u0026rsquo;ll get a report with additional explanation and a script that you can run to fix these issues!\nTo validate your SharePoint Framework project, change the working directory to your project and execute:\nm365 spfx project doctor --output md \u0026gt; \u0026quot;doctor-report.md\u0026quot;\nThe command will analyze your project and store the list of findings in a file named doctor-report.md. For more information about validating SharePoint Framework projects, see the documentation.\nRegister management application for Power Platform More and more organizations are using Power Platform to automate business processes and build line of business applications. Using Power Platform APIs, they can automate managing these solutions. To use these APIs, you need to register your app as a management application with Power Platform.\nIf you wanted for example to use CLI for Microsoft 365 as a Power Platform management app, execute the following command:\nm365 pp managementapp add --appId 31359c7f-bd7e-475c-86db-fdb8c937548e\nFor more information about working with Power Platform using CLI for Microsoft 365, see the documentation.\nConfigure Microsoft 365 groups\u0026rsquo; behavior You might want to specify the behavior of your Microsoft 365 Groups during provisioning. You can set specific group behaviors and resources to provision when creating a Microsoft 365 group.\n         AllowOnlyMembersToPost Only group members can post conversations to the group.   HideGroupInOutlook This group is hidden in Outlook experiences.   SubscribeNewGroupMembers Group members are subscribed to receive group conversations.   WelcomeEmailDisabled Welcome emails are not sent to new members.    For example, to create a public Microsoft 365 group and set it to not send welcome emails to new group members, execute:\nm365 aad o365group add --displayName Finance --description \u0026quot;This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\u0026quot; --mailNickname finance --welcomeEmailDisabled\nTo create a public Microsoft 365 group and hide it from the Outlook experiences (web and client), execute:\nm365 aad o365group add --displayName Finance --description \u0026quot;This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\u0026quot; --mailNickname finance --hideGroupInOutlook\nFor more information about creating Microsoft 365 groups, see the CLI documentation.\nInteracting with Microsoft 365 conversations becomes easier In CLI for Microsoft 365 v5.0 we introduced commands to create Microsoft 365 group conversations. This release finalized the set of commands required to interact with conversations with the command m365 aad o365group conversation post list.\nFor more information about retrieving Microsoft 365 Group conversations, see the CLI documentation.\nNew script samples CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as for automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts.\n If you have any scripts that you use frequently, please share them with us so that we can learn more about your common automation scenarios.\n Migrate planner plan to SharePoint Online Albert-Jan Schot contributed a sample that shows how to migrate a Planner Plan to a SharePoint list.\nChange group membership of all SharePoint Online sites Another sample script that Arjun Menon published is how to downgrade the permissions of all members of an owner group to the default member group.\nContributors This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order):\n Reshmee Auckloo  Milan Holemans Akash Karda Vipul Kelkar Patrick Lamber Martin Lingstuyl  Waldek Mastykarz Michaël Maillot Arjun Menon Abderahman Moujahid  Nanddeep Nachan Albert-Jan Schot Garry Trinder Jasey Waegebaert Adam Wójcik  Thank you all for the time you chose to spend on CLI for Microsoft 365 and for your help to advance it!\nWork in progress Here are some things that we\u0026rsquo;re currently working on.\n@me user tokens to simplify working with the current user We\u0026rsquo;re constantly seeking for ways to let you work with CLI for Microsoft 365 more efficiently. In the past, we\u0026rsquo;ve shipped support for passing contents from files into options using the @ token and using server-relative URLs with SharePoint commands. We\u0026rsquo;re continuing the improvement by introducing @me tokens to let you pass information about the current user into options.\nMicrosoft 365 app commands When building apps for Microsoft 365, next to your code, you also need to manage how your app is exposed to Microsoft 365. You need to register your application in Azure Active Directory, and depending what type of app you build, you might need to deploy it to an app catalog as well. All these properties are managed in different locations and we\u0026rsquo;re thinking of ways that we could simplify it for you.\nOneNote commands We are extending our commands with OneNote capabilities. We will start by giving you the ability to provision and retrieve OneNote notebooks.\nInteract with the Microsoft Search schema We are not going to stop with OneNote commands but we will also extend our command palette in the Microsoft Search ecosystem. We are going to implement a command that will allow you to add a schema to a specific external connection for use in Microsoft Search.\nWhat else could we simplify? Let us know what you think by helping out with one of our open issues or chime in on our discussions!\nTry it today Get the latest release of CLI for Microsoft 365 from npm by executing:\nnpm i -g @pnp/cli-microsoft365\nAlternatively, you can get the latest release from Docker by executing:\ndocker run --rm -it m365pnp/cli-microsoft365:latest\nIf you need more help getting started or want more details about the commands or the architecture or the project, go to aka.ms/cli-m365. And if you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or Twitter.\n","image":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v5-1/images/banner-cli-m365_hubb0a11f265e5361714912c97fd3afb73_171793_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v5-1/","tags":["CLI for Microsoft 365","SharePoint","SharePoint Framework (SPFx)"],"title":"CLI for Microsoft 365 v5.1"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by are joined by Vienna, Austria based Office Development MVP - Stefan Bauer (N8D) | @StfBauer.\nTopics discussed in this session  Naming background on Stefan’s company - N8D and on Vienna. Capabilities of Developer and Designer and the importance for the two to work closely together. The separation of HTML and CSS, and the role of design tools like Figma Files, Adobe XD, Fluent and Pen \u0026amp; Paper! Purpose, approach and recommendations to building accessible apps/pages. About hTWOo - target audience, usage, support and evolution. Comparison of hTWOo and Fluent UI. hTWOo React – Wrapping HTML and CSS into React Controls - work with Julie Turner.  We also covered 13 articles published by Microsoft and the PnP Community over the last week.\nThis week  Waldek – MVP Global Summit 2022 and among other things gathering feedback from MVPs on Microsoft announcements, plus releasing a new version of CLI for Microsoft 365. Vesa – moderating MVP Summit sessions, formally announcing the release of the Unified Samples Gallery and a new beta version of SPFx v1.15 with List overriding capability. Working on a new Getting Started Series (5-minute videos).  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, March 28, 2022. Enjoy the show.\n Video at Microsoft 365 Community YouTube channel.    Podcast at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!”\nHere are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Help your employees thrive with Microsoft Viva in the hybrid world - Seth Patton (Microsoft) | @SethPat Streamline your day in the hybrid workplace with workflows for Microsoft Teams - Microsoft Enable management of content types and add taxonomy columns from modern libraries and lists view - Shreya Ganguly (Microsoft) Automate your work day with workflows in Teams - Harysh Menon (Microsoft) Learn from the Community: Microsoft MVPs digitize knowledge in a Community Bot for OneDrive - Ayça Baş (Microsoft) | @aycabs  Community articles  How to build a Good Vibes generator for Microsoft Teams - Lee Ford (Symity) | @Lee_ford Good Vibes generator - GitHub - Lee Ford (Symity) | @Lee_ford Create a Local Syntex Model on a SharePoint Site - Leon Armston (Intelogy) | @LeonArmston spfx project doctor - CLI for Microsoft 365 | @climicrosoft365 Microsoft Loop for 1-on-1 meetings and collaboration - Darrel Webster (WM Reply) | @DarrellaaS Episode #198 - Inviting Guest Users in SharePoint Online via Power Automate - Paolo Pialorsi (PiaSys) | @PaoloPia How to use Workflows App in Microsoft Teams - Giuliano De Luca | @delucagiulian Power Apps Data Functions - Manipulate and create sample data quickly - Shane Young (PowerApps911) | @shanescows  Additional resources  Demo - Introduction to HtwoO React library – Fluent UI experiences easily - Julie Turner (Sympraxis Consulting) | @jfj1997 Demo - Getting started with HTWOO UI – Fluent Design in HTML and CSS - Stefan Bauer (N8D) | @StfBauer Organization - Open UI Platform Documentation PnPjs v2 - v3 Transition Guide Documentation - Maturity Model for Microsoft 365 \u0026ndash; Introduction Microsoft 365 Maturity Model on Twitter @M365Maturity Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-159/images/Thumb-Ep159-March28_huc7aa79fd77ea39034e7c36ae16d4664d_590678_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-159/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 159"},{"categories":["Community post"],"contents":"What\u0026rsquo;s it all about? So you have this really cool idea for an Spfx solution, you have the workspace ready, you added all needed dependencies, already made you mind up on the whether it\u0026rsquo;s gonna be react or angular or other, and your just about to write that first line of code when suddenly:\n\u0026ldquo;hmmm…. Where I will store my applications user data?\u0026rdquo;\nAs your app will save some data right? Well most of the apps do, and usually the data saved is somehow personal (in context of the current user) so maybe you will be interested in approach I would like to describe in a bit more detail in this article 😀.\nWhat options do we have? Let\u0026rsquo;s see some of them we may use.\n One of the easiest and I think most common approach we may take is storing data in a SharePoint list we may create while provisioning the Spfx (the Spfx package could provision this as asset or some PnP.PowerShell/CLI for Microsoft 365 will do the trick). We will need to consider if the list is going to be somehow hidden. How we should manage storing data per user? Should we create folder per user data. If so, what about permissions? Probably each user should have read permissions only to their own folder. And what\u0026rsquo;s more important is where we keep the list? On each site where the webpart will be added… rather not. Better to have some one site we store the data. Ok, but potentially we want our solution to be not only for SharePoint but Teams and maybe in near future other places as well. Will storing the data in a SharePoint list be the most logical place then? Also managing the data might be a challenge. I mean should we create a column for every peace of metadata our app will store. Probably yes, but then if we want to store more data in future, we will need to probably add more columns. And doesn\u0026rsquo;t this all seem like using SharePoint list as a database which we is a huge “no no”…. Ok fine let\u0026rsquo;s consider something else. Ok lets think of a more common place. What about Dataverse. Seems like a well prepared, common database. TBH this seems like perfect for a solution done within Power Platform but for an Spfx solution…hmm…. I don\u0026rsquo;t know. I never seen a Spfx webpart which saved/retrieved data from Dataverse. But maybe that\u0026rsquo;s bad and it is a good idea to investigate for future, even if now doesn\u0026rsquo;t seem like a common approach. Lets leave this as open point and research this later. For now seems more like a perfect place for a Power App rather than a Spfx webpart. Ok moving on, what we could also do is add a custom user profile property and store the data there. Creating the custom property might be a challenge as I believe we would need to do it manually, so not a very good use case for and CI/CD pipeline. And if you also had this idea I think there is a very good chance you previously have been working (or still are working) in the On-Prem world right? Seems like a way to go in the good old feature model with a couple of CSOM lines in C#, but doesn\u0026rsquo;t seem like a perfect fit for Spfx. Wouldn\u0026rsquo;t you agree?  Don\u0026rsquo;t get me wrong, all of the above are good ideas for sure. But is there a better common place for each user to store her or his personal data? Well what about OneDrive. Also, is there someway we could save our data in a dynamic structure that we may change in future in an easy way (adding more metadata, like more columns or something like that), which is easy to \u0026lsquo;parse\u0026rsquo; to an object? Well what about XML… only joking… I was going to say JSON. Well, did you know we may use MS Graph and the\n/me/drive/special/approot:/${YourFileNameHere} endpoint for all that? Ye, it creates a folder for you app automagically - I mean the first time you make a request to get or save a file the folder for you app is created in user OneDrive automatically. Let\u0026rsquo;s create a dedicated model in our Spfx solution and just serialize the object to a JSON file we keep in each user personal application folder on their OneDrive. I know, this is seems like a very sweet method to use for user personal data. Lets see what we should consider and how to get started with this approach.\nHow to get started? Lets start with a bit of experimenting to try it out in the graph explorer (If you haven\u0026rsquo;t used it before, the graph explorer is a perfect place to test out different MS Graph API requests and also, after login, you may do it in the context of your tenant, which is really cool).\nOk so lets run a simple GET request\nhttps://graph.microsoft.com/v1.0/me/drive/special/approot And see what happens.\n   Ok success, that\u0026rsquo;s nice, but what actually happened. In the response we will see a \u0026lsquo;webUrl\u0026rsquo; param where we may see the\nme/drive/special/approot was resolved as\n\u0026#34;webUrl\u0026#34;: \u0026#34;https://{YOURTENANTHERE}-my.sharepoint.com/personal/{YOURLOGINHERE}_onmicrosoft_com/Documents/Apps/Graph%20Explorer\u0026#34; And if we go there we see\n   … hey… a new folder in my personal OneDrive, now that’s nice. In the response we may also find that the folder was created by \u0026lsquo;Graph Explorer\u0026rsquo; app and currently childcount is zero. Ok so that\u0026rsquo;s pretty sweet. With this single request I have a personal folder created for me in the user OneDrive. Isn\u0026rsquo;t it a perfect place to save user defined data?\nOk so lets see how to do that. In order to add a new .json file with some data we need to run a PUT request\nhttps://graph.microsoft.com/v1.0/me/drive/special/approot:/{YOURFILENAMEHERE}.json:/content and in the request body we need to provide some JSON structure string like\n{\u0026#34;data\u0026#34;:\u0026#34;test\u0026#34;} As a result we see a new file added to the catalog with your json object. Also we may use the same request to update the data and since it is JSON we may change the data schema how we want quite dynamically. Adding new properties becomes easy.\n   Ok so now lets see how to get our saved data. For this we need another GET request:\nhttps://graph.microsoft.com/v1.0/me/drive/special/approot:/{YOURFILENAMEHERE}.json In the response section you should see @microsoft.graph.downloadUrl property.\n   Click on that link and see what happens\n   … ye our JSON file is downloaded. In the app we may use this approach to get the .text() from the response and parse the JSON object back to our model. So in general in our app we will actually need two steps (two requests) to retrieve the data.\nThere you have it. With a couple of simple requests I was able to create a folder for may data, save it as a .json file in the user OneDrive apps personal folder, and finally get the data back. If only there was some ready to use Spfx sample with some kind of library abstraction that does all that with simple saveData(), getData() methods, right? Well lucky for you, not that long ago I added a new sample in the \u0026lsquo;pnp/sp-dev-fx-webparts\u0026rsquo; repo with and Spfx library component that does all this logic for you and a simple webpart which just uses the methods get/save our json object. If you are interested take a look at react-save-to-onedrive-app-personal-folder sample.\n   Before you start creating an Spfx solution that uses this approach there are two things we need to remember. First one, and this is quite obvious, as we are using MS Graph here, our webpart/library will need to request webApiPermissionRequests for Sites.ReadWrite.All scope which we may add in the package-solution.json config. Then of course, after the app is deployed we need to approve this permission request in the SharePoint admin web api management page.\nSecond one is not that obvious at first but is quite logical. As the Graph request creates the application folder for us we don\u0026rsquo;t have control over the name. As a result of that each Spfx solution will save it\u0026rsquo;s files in the same place (same folder), which name will be \u0026lsquo;SharePoint Online Client Extensibility Web Application Principal\u0026rsquo; so it would be a good idea to first create a subfolder for your current solution and store the .json file there. That way we may avoid future problems if we have two (or more) Spfx solutions which save data as .json files with the same name (Saving the data from one Spfx webpart would completely overwrite the data saved by the other one).\n   So what I actually learned after reading this? Not sure. Probably if you\u0026rsquo;ve been working with Spfx for some time now you already know this approach or already have all the needed skills to use this. But if you haven\u0026rsquo;t used this approach I strongly encourage you to give it a shot. Saving data in user application personal OneDrive folder is a pretty sweet approach which sometimes may be a perfect fit for your solution so it’s good to be familiar with this method\n","image":"https://pnp.github.io/blog/post/save-data-to-app-personal-folder/images/thumbnail_hua09524018eebf1d76be12fac10be0482_378709_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/save-data-to-app-personal-folder/","tags":["SharePoint framework (SPFx)"],"title":"Save data to app personal folder"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by US-based, member of the Customer Engineering Team focused on developer enablement and on PnPjs project, Patrick Rodgers (Microsoft) | @mediocrebowler.\nTopics discussed in this session  Patrick’s 10-year career journey at Microsoft and how got involved in PnP Community. Why is PnPjs so successful? What drives behavioral change and the probability of success? How is PnPjs V3.0 (V6.0) optimized? V3 theme or approach - “What do we put in the library vs what do we enable others to build.” How is the perception of opensource changing? Can others join the PnPjs project team? You bet - start by resolving an issue, define and own a capability, work with Julie @jfj1997 and Patrick @mediocrebowler.  We also covered 15 articles published by Microsoft and the PnP Community over the last week.\nThis week  Waldek – Finalizing the work around POC on how improve developer experience around building Teams apps with Angular, finalizing work with Alex on a cmdlet to evaluate SPFx dependency issues and recommend fixes, cool PRs for CLI for Microsoft 365 and on other ways to improve the developer experience.  Vesa – catch up week while much of engineering is engaged in “Fix, Hack \u0026amp; Learn week.”   Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, March 21, 2022. Enjoy the show.  Video at Microsoft 365 Community YouTube channel.    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!” Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Elevating hybrid experiences with Microsoft Teams Rooms and Teams devices - Microsoft Microsoft Teams Connect shared channels is rolling out to public preview - Microsoft VillageMD designs a \u0026ldquo;legal OS\u0026rdquo; using SharePoint, Lists and Power BI - Mark Kashman (Microsoft) | @mkashman Learn from the community: Low code bot onboards members to Microsoft Teams channel - Ay�a Baş (Microsoft) | @aycabs Power Automate Powered Busy Light for Outlook Calendar - April Dunnam (Microsoft) | @aprildunnam  Community articles  How to get started deploying Azure resources using Bicep - Luise Freese | @LuiseFreese Assign a built-in role to a user at resource and Resource Group scope using ARM template - Shrusti Shah (Rapid Circle) Limit app permissions to a specific mailbox - Albert-Jan Schot (BLISS.digital) | @appieschot PCF-MGT-Sample - Srinivas Varukala (Microsoft) | @svarukala Getting Started with HTWOO-REACT - Julie Turner (Sympraxis Consulting) | @jfj1997 Incentivising Microsoft Teams contributions with Power Automate - Robert Crane (CIAOPS) | @directorcia Real-world Planner use cases - Microsoft 365 Voice - Sarah Haase | @sarahhaase, Antonio Maio | @AntonioMaio2 and Mike Maadarani | @mikemaadarani Introducing Portal Apps in Power Apps - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Failure to Launch Your Information Governance Program - Joanne C Klein | @JoanneCKlein Episode #197 - Overview of Approvals in Microsoft Teams - Paolo Pialorsi (PiaSys) | @PaoloPia  Additional resources  Documentation PnPjs v2 - v3 Transition Guide Documentation - Maturity Model for Microsoft 365 \u0026ndash; Introduction Microsoft 365 Maturity Model on Twitter @M365Maturity Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026quot; ","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-158/images/Thumb-Ep158-March21_hue1cde661d3193f9bf6c3caa9c7ad0a9b_533465_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-158/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 158"},{"categories":["Community post"],"contents":"tl;dr - why would I care?  Bicep is an awesome language to deploy Azure resources using a simple syntax but with some awesome features like for-loops, modules and being able to share deployment files in your organization.\n What is Bicep? Good question. First of all, it\u0026rsquo;s most probably Azure\u0026rsquo;s nerdiest dad joke, as it derives from ARM (Azure Resource Manager) and has something to do with the biceps doing the heavy lifting/provides extra power 💪.\nBicep is a language specific to Azure and is used to provide Infrastructure-as-Code in an easy-to-author way. Syntax is much simpler than regular ARM templates and this results in more readable files.\nThis sample shows how to deploy Azure Cognitive services.\nparamserviceNamestring=\u0026#39;cognitive-${uniqueString(resourceGroup().id)}\u0026#39;paramlocationstring=resourceGroup().locationparamskustring=\u0026#39;S0\u0026#39;resourcecognitiveService\u0026#39;Microsoft.CognitiveServices/accounts@2017-04-18\u0026#39;={name:serviceNamelocation:locationsku:{name:sku}kind:\u0026#39;CognitiveServices\u0026#39;}If you compare this to the JSON definition, you will notice\n less curly brackets less quotation marks less lines of code  { \u0026#34;$schema\u0026#34;: \u0026#34;https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\u0026#34;, \u0026#34;contentVersion\u0026#34;: \u0026#34;1.0.0.0\u0026#34;, \u0026#34;metadata\u0026#34;: { \u0026#34;_generator\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;bicep\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;0.4.1008.15138\u0026#34;, \u0026#34;templateHash\u0026#34;: \u0026#34;3830258995596078\u0026#34; } }, \u0026#34;parameters\u0026#34;: { \u0026#34;serviceName\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;defaultValue\u0026#34;: \u0026#34;[format(\u0026#39;cognitive-{0}\u0026#39;, uniqueString(resourceGroup().id))]\u0026#34; }, \u0026#34;location\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;defaultValue\u0026#34;: \u0026#34;[resourceGroup().location]\u0026#34; }, \u0026#34;sku\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;defaultValue\u0026#34;: \u0026#34;S0\u0026#34; } }, \u0026#34;functions\u0026#34;: [], \u0026#34;resources\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Microsoft.CognitiveServices/accounts\u0026#34;, \u0026#34;apiVersion\u0026#34;: \u0026#34;2017-04-18\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;[parameters(\u0026#39;serviceName\u0026#39;)]\u0026#34;, \u0026#34;location\u0026#34;: \u0026#34;[parameters(\u0026#39;location\u0026#39;)]\u0026#34;, \u0026#34;sku\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;[parameters(\u0026#39;sku\u0026#39;)]\u0026#34; }, \u0026#34;kind\u0026#34;: \u0026#34;CognitiveServices\u0026#34; } ] } Time to play! If you like to familiarize yourself with Bicep, you can use the Bicep Playground - it\u0026rsquo;s an interactive experience that lets you explore and try out Bicep - similar to MGT Playground, Graph Explorer or Adaptive Cards Designer in a safe space where you can\u0026rsquo;t break anything. (I took the example from that Playground)\n   How do you create a Bicep template from an Azure resource? In order to create a deployable Bicep file, we will need to use some tools. I will work on Windows and with Azure CLI, but you can of course choose Azure PowerShell as well or work on Linux or Mac.\nTools  In Visual Studio Code (VS Code), install the Bicep extension. (Most probably you will need to restart VS Code after installing the extension.) Install Azure CLI - You can validate which version you have installed when you run az --version in your terminal. Install Bicep CLI in terminal by running az bicep install. If you did that already a while ago, it\u0026rsquo;s a good idea to upgrade to the latest version with az bicep upgrade  Get the ARM template You could of course write the entire definition of your resources from scratch (and with the extension installed you get Intellisense, which is really convenient), but as you probably already built resources, you can go to the Azure portal and export the ARM template:\n Open the Azure portal Select the resource group If you want to export a template for the entire resource group including all resources  select Export template   If you want to export only the template for a particular resource  select the resource select Export template   Extract the downloaded .zip file Open the extracted template.json file in VS Code  Decompile  Open the terminal Navigate to the folder where your template.json file sits Run az bicep decompile --file template.json  This will create a new file template.bicep. To make this template file better, we will do a few things:\nModules If you want to deploy more than one resource, you will end up with a very lengthy file, which makes it hard to gain overview - also collaboration and debugging is hard with that. Luckily, Bicep knows a concept that is called modules, which are also Bicep files that can be deployed from a root Bicep file. You can even share modules for reusing modules in your organization.\nThis is how we do it:\n Select the resource in the template.bicep file Cut it and paste it into a new Bicep file (e.g. My-managedIdentity.bicep) Repeat this with the other resources as well Now create modules in template.bicep like this:  modulemanagedIdentityDeployment\u0026#39;My-managedIdentity.bicep\u0026#39;={name:\u0026#39;managedIdentityDeployment\u0026#39;params:{userAssignedIdentities_My_Identity_name:userAssignedIdentities_My_Identity_nameresourceLocation:resourceLocation}}Make sure that you declare the parameters in the file as well. Repeat this until have a module for each resource that is defined in a corresponding Bicep file.\nFew tweaks and quirks If - in your exported template you had hard coded values that you still want to get rid of - this is a good time to do that:\nresourceworkflows_MyWorkflow_name_resource\u0026#39;Microsoft.Logic/workflows@2017-07-01\u0026#39;={name:workflows_MyWorkflow_namelocation:\u0026#39;westeurope\u0026#39;identity:{type:\u0026#39;UserAssigned\u0026#39;userAssignedIdentities:{\u0026#39;/subscriptions/fdf0XXX-0726-404c-XXX-23d183XXX/resourceGroups/MyResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/My-ManagedIdentity\u0026#39;:{}}}}We would replace the hard coded value of the userAssignedIdentities that contains our Subscription Id with\n{\u0026#39;${resourceId(\u0026#39;Microsoft.ManagedIdentity/userAssignedIdentities/\u0026#39;,userAssignedIdentities_My_Identity_name)}\u0026#39;:{}}Also, we would replace the hard coded value 'westeurope' with a parameter.\nSometimes when decompiling, we don\u0026rsquo;t get the right API version - in this case we got 2017-07-01 - but in fact 2019-05-01 is correct. How would we know? Bicep extension warns us with yellow squiggly lines :-)\n   Deploy with Azure CLI Now let\u0026rsquo;s deploy this to Azure! Again, we will be using Azure CLI\n$DeployTimestamp = (Get-Date).ToUniversalTime().ToString(\u0026#34;yyyyMMdTHmZ\u0026#34;) az deployment group create ` --name \u0026#34;DeployLinkedTemplate-$DeployTimestamp\u0026#34; ` --resource-group $ResourceGroupName ` --template-file path-to/template.bicep ` --verbose That\u0026rsquo;s it 🚀\nWhat do you think? Let me know on twitter on log in to GitHub and comment below!\n","image":"https://pnp.github.io/blog/post/how-to-get-started-deploying-azure-resources-using-bicep/images/dragon_hu82c25fa98cd4e9a8103220017be4b8cb_2248093_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/how-to-get-started-deploying-azure-resources-using-bicep/","tags":["Azure"],"title":"How to get started deploying Azure resources using Bicep"},{"categories":["Office add-in developer community call"],"contents":"Call Summary This month\u0026rsquo;s community call features updates on Consuming Graph Services using SSO and CORS from event-based Outlook add-ins (covers automatic initiation of an event-based add-in while composing an email with demo showing use of SSO to get a Graph compatible Token and Call the Graph using CORS!) – Juan Balmori, Principal Program Manager (Microsoft) | @juaneloBalmori \u0026amp; Hlynur Tryggvason, Senior Software Architect (officeatwork), and Excel API 1.15 preview (accessing and using Chart Series Dimension and Pivot Table Data Source APIs) – Sirui Sun, Software Engineer (Microsoft). There was Q\u0026amp;A at end of call and in chat throughout call. Don’t forget to register for the PnP Recognition Program. The call was hosted by Alex Jerabek (Microsoft). Recorded March 9, 2022.\nMicrosoft Presenters  Juan Balmori – Principal Program Manager (Microsoft) Hlynur Tryggvason – Senior Software Architect (officeatwork) Sirui Sun – Software Engineer (Microsoft)  Agenda  Consuming Graph Services using SSO and CORS from event–based Outlook add–ins – Juan Balmori, Principal Program Manager (Microsoft) | @juaneloBalmori \u0026amp; Hlynur Tryggvason, Senior Software Architect (officeatwork) | @htryggva – 00:51 Excel API 1.15 preview – Sirui Sun, Software Engineer (Microsoft) – 21:08 Q\u0026amp;A – 25:45  Actions  Earn contributor badges – sign up for the PnP Recognition program at https://pnp.github.io/recognitionprogram/ Follow channels in twitter – for call agendas, summaries, and release announcements  https://twitter.com/microsoft365dev https://twitter.com/m365pnp   Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets Next community call – April 13th at 08:00am PST – https://aka.ms/officeaddinscommunitycall Please complete the Office add-in developing experience survey  Q\u0026amp;A (Question \u0026amp; Answers) When can we expect the getSelectedDataAsync functionality to be able to get the selected shapes in a PowerPoint presentation? Currently, there is no near-term plan to enable getSelectedDataAsync to support selected shapes in PowerPoint. Please let us know more about this scenario on the Microsoft 365 Developer Platform ideas site.\nOur Outlook integration sometimes breaks because changes are made to the API and we only find out about them when our integration goes down. Is there any way we could get advance notice of breaking changes so we can update and avoid the friction caused by the downtime? We’re sorry to hear you’ve been experiencing issues with your add-in. Unless there is a really important reason, we rarely make breaking changes to an API after it has been released in a requirement set. Can you please let us know more about this by creating an issue at https://github.com/officedev/office-js?\nWe strive to update our documentation to reflect upcoming changes, but we recognize that these may not be immediately visible to our developer community. We are currently working on posting changes and new features to the Microsoft 365 roadmap to better communicate these to the community. In addition to updating our documentation, we also highlight upcoming changes and features in our monthly community call. Again, if you run into a particular issue during development, we encourage you to report the issue at https://github.com/officedev/office-js, so that we can provide you with further assistance.\nIs the ability to call the Microsoft Graph API for various customer tenants via JS runtime available for add-ins in Excel and Word? What about shared runtime? It is available for Excel, but not available in Word yet. If you use shared runtime for Excel, CORS is already supported prior to this. For Excel custom functions that do not use shared runtime, CORS was recently enabled.\nCan we use the Fetch API in the Outlook JS runtime? You can use Fetch, but it is a polyfill over XHR, not a full fetch implementation. The Outlook demo uses Fetch.\nWill event-based add-ins support a mail received event rather than compose event? Support for a read event in event-based add-ins is on our backlog. We\u0026rsquo;re working to get to it as soon as we can.\nDoes Office.js in Outlook still work with IE? I created a vanilla task pane add-in using yeoman, and it fails in Exchange on-premises 2016 with IE11. This should work. We\u0026rsquo;ll check into the `yo office` templates to be sure there isn\u0026rsquo;t an error.\nSomething that would be very useful is visibility into host application (Word, Excel, etc.) API feature development and deployment roadmaps. I would be able better plan a functionality roadmap for our internal Enterprise Office plugins. We plan announce changes and features via the Microsoft 365 roadmap. This should help everyone keep track of upcoming features and APIs. We are open to your suggestions for how to better communicate upcoming feature development.\nFor Excel add-ins with a task pane, can we use Next.JS along with React? if so, are there any examples? Office Add-ins run in an iframe in a browser, or webview on desktop, and therefore support most HTML/JS frameworks and libraries. We don’t have any samples of using Next.JS, although it looks like it would work. You’ll want to be sure the resources that Office expects when loading are configured correctly. For example, you need to be sure the routing is set up to provide the correct URLs for all the images, HTML, and JS pages referenced in the manifest.\nAny update on https://github.com/OfficeDev/office-js/issues/1108? The issue with the cursor placement in web Outlook? We see this issue is affecting multiple customers and we’ve moved this up in priority on the backlog. We’re working to get this resolved as soon as we can. We’ll keep you updated on progress at the original GitHub issue. Thanks!\nShould we post in the Microsoft Q\u0026amp;A forum or StackOverflow or GitHub? The team monitors all of these locations. For development assistance, particularly with coding, please post your questions to Microsoft Q\u0026amp;A or Stack Overflow. To report bugs, please open an issue in GitHub.\nIs there a documented or known issue that anyone is aware of with the Word API and supporting older versions of Word documents? Office Add-ins only work with .docx files. They do not work with the older .doc file extensions. You would need to convert older doc files to the newer format to work with Office Add-ins.\nWhen will current APIs be available across all platforms? For example, OneNote APIs are only available from Office on the web. PowerPoint on an iPad only supports PowerPoint API 1.1, which can only create a new presentation. The main appeal of Office Add-ins is cross platform code, but only seems available for Excel. Enabling the APIs available across all endpoints is our strategy. However, due to the different technology for the client of different endpoints, sometimes we have to start with one first then expand to others when it’s ready. We don’t have any ETA at this moment and the situation varies for different APIs. If there are specific APIs you need to see implemented across more platforms, please let us know more details at the Microsoft 365 ideas site. We use the feedback there to help with planning.\nResources  Microsoft Tech Community – Submit Feature Requests | https://aka.ms/m365dev-suggestions Office Developer Community help | https://developer.microsoft.com/office (Office–js–docs–pr, PnP–OfficeAddins) Office Add–ins documentation | https://aka.ms/office-add-ins-docs Office Scripts | https://aka.ms/office-scripts-docs Microsoft 365 Developer Program | https://aka.ms/M365devprogram Script Lab | https://aka.ms/getscriptlab Office Add–ins documentation | https://aka.ms/office-add-ins-docs  Twitter | https://twitter.com/microsoft365dev YouTube | https://aka.ms/m365pnp/videos Link to all Microsoft Developer Community calls | https://aka.ms/M365DevCalls   Office Add-ins community call  Upcoming agenda and previous call resources Recurring, monthly community call calendar invite Community call topic requests and questions Community call recordings on the YouTube Microsoft 365 community channel  Office Add-ins feedback  Technical questions – Microsoft Q\u0026amp;A (office-js-dev), (office-addins-dev) ​Questions for the developer community – Stack Overflow (office-js,​ outlook-web-addins​, office-scripts) Issues – GitHub Recommendations and suggestions – Microsoft 365 Developer Platform ideas  ","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-march-9-2022/images/office-add-ins-Thumb%20Mar%202022_hudffe0dd5978d24cfc599a184a4d7692f_244572_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-march-9-2022/","tags":["Office Add-ins","Microsoft 365"],"title":"Office Add-ins community call – March 9, 2022"},{"categories":["Adaptive Cards community call"],"contents":"Call summary The following topics are covered in this month’s community call. Demo: Adaptive Cards Host Control in Microsoft PnP Library (use an Adaptive Card in an SPFx solution that allows UI changes at runtime) – Fabio Franzini (Apvee Solutions), Designer Device Emulator (quick way to see Adaptive Card layout at various selected screen resolutions) – Will Shown (Microsoft), and 15 minute live Q\u0026amp;A – host and demo presenters answer questions about their demos and on building Teams apps with React; which React library to use - React Northstar, React Teams or Fluent UI? This call was hosted by J.P. Roca (Microsoft) | @jpthepm. Recorded on March 10, 2022.\n  Agenda  Adaptive Cards Host Control in Microsoft PnP Library – Fabio Franzini (Apvee Solutions) | @franzinifabio – 00:38 Designer Device Emulator – Will Shown (Microsoft) – 20:20 Q\u0026amp;A – J.P. Roca (Microsoft) | @jpthepm \u0026amp; demo presenters – 23:49  Demo Demo 1: Adaptive Cards Host Control in Microsoft PnP Library – customers want same functionality, different UI. Needed a way to change UI at runtime (no recompiling required). This SPFx solution contains a web part that hosts an AdaptiveCardhost control. Same web part can be used in a SharePoint page, Teams tab and Teams personal app. Hear the rationale behind this React control, why use the Adaptive Cards SDK, Fluent UI, and how control is implemented. Demo 2: Designer Device Emulator - created by the Teams Platform group, this emulator shows Adaptive Card layouts for selected screen widths/resolutions. Desktop (unconstrained), small mobile (320px), large mobile (414px), small tablet (768px), large tablet (1024px). If you host your own Designer, then you can add additional resolution options. Great for mobile projects. Emulator will show up on AdaptiveCards.io shortly. Referenced in this call  D1: SPFx Controls - Adaptive Card Host  D1: SPFx Samples - SharePoint Framework Client-Side Web Part Samples (Demo will be posted here when complete)  D2: Nightly build for Adaptive Cards Designer with Device Emulator  Power Automate for Desktop Announcement - https://powerautomate.microsoft.com/en-us/blog/power-automate-for-desktop-february-2022-update/ The latest Fluent React v9 here - fluentui/packages/react-components at master · microsoft/fluentui (github.com)  Actions  Register for teams community conference - https://teamsnation.rocks/register  Resources in General  Let us know the features you need https://aka.ms/ACRoadmap Schema Explorer - https://adaptivecards.io/explorer/Action.Execute.html Designer - https://adaptivecards.io/designer/  Get started with Templating - https://aka.ms/ACTemplating Browse the Adaptive Cards Code \u0026amp; Contribution Guidelines - https://aka.ms/ACRepo Find tools, sample cards and more - https://www.madewithcards.io Issues creating AC interfaces https://github.com/microsoft/AdaptiveCards/discussions  Stay connected  Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365PnP/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/adaptivecardscommunitycall Next call – April 14th at 09:00am PST  Related documents   Adaptive Cards March 2022 Deck.pptx (23 MB)  ","image":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-march-2022/images/adaptive-cards-March%20Thumb_hu14b528cf0b083017413a24cab02bdfb2_295722_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-march-2022/","tags":["Adaptive Cards","Community Call","Extensions","Microsoft 365"],"title":"Adaptive Cards community call – March 2022"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from March 15th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call Summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Celebrating Microsoft Teams Release Day - 5th Anniversary Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules (74+) to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! New Microsoft 365 Sample Solution Gallery with 1000+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring this month.  Tune into the weekly  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics – hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Microsoft 365 PnP Weekly - Videos, Podcasts focused on the latest news and topics on Microsoft 365 hosted by Vesa Juvonen and Waldek Mastykarz   Teams Platform Updates - updated authenticate API to support external OAuth providers, and 4 new Step-by-Step (SBS) Guides released. aka.ms/TeamsDevDocs  Documentation - Use external OAuth providers Step-by-Step Guide - Build search based messaging extension Step-by-Step Guide - Build action based messaging extension Step-by-Step Guide - AAD SSO for tabs and messaging extension Step-by-Step Guide - Build Teams connectors   New series launched – Learn from the community. This week’s article: Learn from the community: Low code bot onboards members to Microsoft Teams channel. Sign up to Share your story The great people, supportive organizations and solid work done in this community over the last month is recognized today! Available now – the Microsoft 365 Platform Community (PnP) – March 2022 update. A heartfelt thank you goes out to the community members, organizations and Microsoft employees who have contributed their time and talents to this community in the last month.  Hear about the latest 7 Microsoft 365 Platform related stories and view 3 great demos delivered by Microsoft presenters on the latest capabilities of the Microsoft 365 platform.  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout and live at end of the call. Microsoft 365 Platform News Flash  A Community Celebration: Microsoft Teams 5 Year Anniversary – Microsoft Public preview of SharePoint Framework 1.15 – First release of the upcoming features – Vesa Juvonen (Microsoft) | @vesajuvonen Learn from the community: Low code bot onboards members to Microsoft Teams channel – Ayça Baş (Microsoft) | @aycabs TLS certificate changes to Microsoft 365 services including Microsoft Teams – Parker Shelton (Microsoft) Viva Learning news and feature update – John Mighell (Microsoft) Most used SharePoint Framework solutions from the Store - February 2022 – Vesa Juvonen (Microsoft) | @vesajuvonen “FastTrack\u0026rsquo;ing Viva, SharePoint, and OneDrive” :studio_microphone: – The Intrazone podcast – Mark Kashman (Microsoft) | @mkashman    Actions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  AMA (Ask me anything) - Viva ACE – Coming Soon First Time Contributor Session – TBS soon Community Docs Session – TBS soon Power Platform Samples – First Time Contributor – Monday, April 10th, 9am PST PnP – SPFx Developer Workstation Setup – TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – Monday, March 14th, 2pm PST First Time Presenter – TBS soon More than Code with VSCode – TBS soon Maturity Model Practitioners – Tuesday, April 19th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Full house, yet again. You all look marvelous. Great seeing you today. Demos  Fit and format Microsoft Lists for work and life –​ what’s new with Microsoft Lists? Tour time! Capabilities include visualizing list data with Board view, improved list editors and formatters, lookup fields in modern UX, a seamless experience on Android devices, easier to create custom list templates, find lists in the SharePoint app bar, list templates packaged with business applications/rules, 3 new “life focus” list templates with more to follow. Join the MSA Preview.  Building Microsoft Graph Toolkit apps with SharePoint – and SPFx. MGT is Framework agnostic. Add Graph to your SPFx project by creating a new yo project, installing the mgt-spfx package (includes mgt library component that goes into your app catalog), and if using React, install the mgt-react component. Ready to code! Import the SharePointProvider from mgt-spfx (handles authentication and connection to SPFx library component). Fast track SPFx projects with MGT components.   Thank you for your creativity and work execution. Samples are often showcased in Demos.\nTopics  Latest updates and news on the Microsoft 365 platform – Vesa Juvonen (Microsoft) | @vesajuvonen – 7:53 Monthly community contributors – 13:14 D1: Fit and format Microsoft Lists for work and life –​ Harini Saladi (Microsoft) | @HariniSaladi, Miceile Barrett (Microsoft) | @MSFTMiceile \u0026amp; Mark Kashman (Microsoft) | @mkashman – 15:47 D2: Building Microsoft Graph Toolkit apps with SharePoint –​ Sébastien Levert (Microsoft) | @sebastienlevert – 46:42  Resources Additional resources around the covered topics and links from the slides.\n  D1: Tools - Microsoft Lists Resource Center | aka.ms/MSLists\n  D1: App - Microsoft Lists – MSA Preview | https://lists.live.com/\n  D1: Android Private Preview – https://aka.ms/lists-android-signup (signup seems for be closed for now)   D1: Samples - Sample Solution Gallery   D1: Samples - SharePoint List Formatting Samples   D1: Documentation - Use column formatting to customize SharePoint | aka.ms/spdocs-column-formatting\n  D1: See latest list samples in Sample Solution Gallery - Microsoft Adoption from\n André Lage (Datalynx AG) | @aaclage Chris Kent (DMI) | @theChrisKent João Ferreira (Beezy) | @joao12ferreira Tetsuya Kawahara | @techan_k    D2: Documentation - Build a SharePoint web part with the Microsoft Graph Toolkit | aka.ms/mgt/spfx\n  D2: Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/mgt/docs\n  D2: Documentation - Styling components in the Microsoft Graph Toolkit   D2: Documentation - Microsoft Graph Toolkit caching   D2: Documentation - Localizing the Microsoft Graph Toolkit components   D2: MGT Playground - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | https://mgt.dev/\n  D2: Sebastien’s MGT Demos Repo - MGT Sandbox | aka.ms/mgt/sandbox\n  D2: MGT Demos Playlist - Microsoft Graph Toolkit – YouTube\n  D2: Issues – MGT Issus | aka.ms/mgt/issues\n  D2: Learn – Develop apps with the Microsoft Graph Toolkit | https://aka.ms/mgt/learn   Microsoft 365 PnP Weekly – Episode 157 (March 14th) with US based, Microsoft 365 Extensibility Developer, MVP, and PnP team member focused on PnPjs project, Julie Turner (Sympraxis Consulting) | @jfj1997 | video | podcast\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on Github PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Power Apps monthly call – March 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call – March 17th at 7:00 am PST | https://aka.ms/m365-dev-sig Microsoft Identity Platform call – March 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Viva Connections \u0026amp; SharePoint Framework call – March 24th at 7:00 am PST | https://aka.ms/spdev-spfx-call Microsoft 365 platform call – March 22nd at 8:00 am PST | https://aka.ms/m365-dev-call Office add-in monthly call – April 13th at 8:00 am PST | https://aka.ms/officeaddinscall Adaptive Cards monthly call –April 14th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members. More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\nRelated documents   M365 platform - Weekly 20220315.pptx (49 MB)  _“Sharing is caring”_ * * * _Microsoft 365 PnP team, Microsoft - 16h of March 2022_ ","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-15th-of-march-2022/images/recording-15th-march_hu47de9dc7f7e945aa091297bcf2f38a73_537796_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-15th-of-march-2022/","tags":["Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 Platform Call – 15th of March, 2022"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by US based, Microsoft 365 Extensibility Developer, MVP, and PnP team member focused on PnPjs project, Julie Turner (Sympraxis Consulting) | @jfj1997 Topics discussed in this session  What is PnPjs and why is it useful?  How Julie got involved in the PnPjs project?  What’s new in PnPjs v3.0? Future direction for PnPjs. Microsoft’s extensibility story and the role the Community can play in this story.  Amazing numbers - 16 billion calls are made each month with the PnPjs library!  Why does Julie contribute to community?  Can others join the PnPjs project team?   We also covered 19 articles published by Microsoft and the PnP Community over the last week. This week  Waldek – working through CLI for Microsoft 365 PRs, 1st draft of cmdlet to evaluate SPFx dependencies, thinking about ways to help community members build apps on Microsoft 365 and for Angular Devs to build Teams apps.  Vesa – working on a global solution to daylight savings, perhaps a single global time zone? Finishing blog post announcing the availability of the unified Microsoft 365 Samples Gallery – all Microsoft 365 products represented, community calls and more.   Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, March 14, 2022. Enjoy the show.  Video at Microsoft 365 Community YouTube channel.    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!” Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  TLS certificate changes to Microsoft 365 services including Microsoft - Parker Shelton (Microsoft) Most used SharePoint Framework solutions from the Store - February 2022 - Vesa Juvonen (Microsoft) | @vesajuvonen “FastTrack\u0026rsquo;ing Viva, SharePoint, and OneDrive” :studio_microphone: – The Intrazone podcast - Mark Kashman (Microsoft) | @mkashman Public preview of SharePoint Framework 1.15 – First release of the upcoming features - Vesa Juvonen (Microsoft) | @vesajuvonen Learn from the community: Employee survey solution built with Microsoft Teams and Power Platform - Ayça Baş (Microsoft) | @aycabs End-of-service for SharePoint Online Machine Translation Service and APIs - Microsoft Debugging Microsoft Teams app locally with Teams Toolkit - Tomomi Imura (Microsoft) | @girlie_mac Power Apps Print Options - April Dunnam (Microsoft) | @aprildunnam  Community articles  PnP PowerShell to manage list designs and create lists/libraries using list designs - Reshmee Auckloo (Pension Protection Fund) | @reshmeeauckloo M365 Dev Podcast - Microsoft Teams development \u0026ldquo;plus\u0026rdquo; with Tom Morgan](https://techcommunity.microsoft.com/t5/microsoft-365-pnp-blog/m365-dev-podcast-microsoft-teams-development-quot-plus-quot-with/ba-p/3256350) - Jeremy Thake (Microsoft) | @jthake, Paul Schaeflein (AddIn365) | [@paulschaeflein | @tomorgan How to combine Graph \u0026amp; SharePoint permission consent into a single MSAL dialog on first use - Cameron Dwyer (OnePlace Solutions) | @CameronDwyer SharePoint Site Lock and Remove from Search Results - Marc D Anderson (Sympraxis Consulting) | @sympmarc NEVER give your SharePoint fields the displayname of Value! - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Guidance for CSS in SharePoint Framework - Stephan Bauer (N8D) | @StfBauer Developing SPFx solutions using WSL - Don Kirkham (DMI) | @DonKirkham Showing selected SharePoint form fields as read-only using List Formatting - Michel Mendes (Storm Technology) | @michelcarlo Get rid of Key Vault! (Making good things even better) - Luise Freese | @LuiseFreese Power Apps Tutorial for Beginners - Learn PowerApps - Shane Young (PowerApps911) | @shanescows Episode #196 - Provisioning Lists in SharePoint Online via Microsoft Graph - Paolo Pialorsi (PiaSys) | @PaoloPia  Additional resources  Documentation – PnPjs v2 – v3 Transition Guide Documentation - Maturity Model for Microsoft 365 – Introduction Microsoft 365 Maturity Model on Twitter @M365Maturity Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026quot; ","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-157-julie-turner-sympraxis/images/Thumb-Ep157-March14_hu5fb19fa097245765095a489ad2c67665_590571_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-157-julie-turner-sympraxis/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 157 - Julie Turner (Sympraxis Consulting)"},{"categories":["Microsoft 365 Platform Community Update"],"contents":"Microsoft 365 Platform Community (PnP) March 2022 update is out with a summary of the latest guidance, samples, and solutions from Microsoft or from the community for the community. This article is a summary of all the different areas and topics around the community work we do around Microsoft 365 ecosystem during the past month. Thank you for being part of this success.\nWe are committed on building the best tech community in the world where everyone feels welcome and we help to empower each and every community member to achieve more.\nWhat is Microsoft 365 Platform Community Microsoft 365 Platform Community is community activities coordinated by numerous teams inside of the Microsoft 365 engineering organizations. This is a community-driven open-source initiative where Microsoft and external community members are sharing their learning\u0026rsquo;s around implementation practices for Microsoft 365.\nTopics vary from Microsoft Viva, Microsoft Graph, Microsoft Teams, Power Platform, OneDrive and SharePoint. Active development and contributions happen in GitHub by providing contributions to the samples, reusable components, and documentation for different areas. PnP is owned and coordinated by Microsoft engineering, but this is work done by the community for the community.\nSee more details from New Microsoft 365 Platform (PnP) team model with new community leads\nThe initiative is facilitated by Microsoft, but we have multiple community members as part of the platform community team (see team details in end of the article) and we are always looking to extend the Platform Community team with more community members. Notice that since this is open-source community initiative, so there’s no SLAs for the support for the samples provided through GitHub. Obviously, all officially released components and libraries are under official support from Microsoft.\nMain resources around Microsoft 365 Community  Microsoft 365 Platform Community - https://aka.ms/m365pnp - One location for all the resources and news around Microsoft 365 platform Microsoft 365 community blog - https://aka.ms/m365pnp/community/blog Microsoft 365 development blog - https://aka.ms/m365pnp-blog Microsoft 365 Community Channel on YouTube - https://aka.ms/m365pnp-videos Microsoft 365 Developer YouTube channel - https://aka.ms/M365DevYouTube  ✍ Latest Dev Blog posts Microsoft 365 Developer Blog Here are the latest blog posts and announcements around Microsoft 365 development topics from https://developer.microsoft.com/microsoft-365/blogs\n 8th of March - Public preview of SharePoint Framework 1.15 – First release of the upcoming features - Vesa Juvonen (Microsoft) | @vesajuvonen 8th of March - Learn from the community: Employee survey solution built with Microsoft Teams and Power Platform - Ayca Bas (Microsoft) - @Aycabs 7th of March - Debugging Microsoft Teams app locally with Teams Toolkit - Tomomi Imura (Microsoft) | @girlie_mac 7th of March - End-of-service for SharePoint Online Machine Translation Service and APIs 1st of March - Learn from the community: Low-code Q\u0026amp;A bot for Microsoft Teams helps communities provide better onbo\u0026hellip; - Ayca Bas (Microsoft) - @Aycabs 28th of February - Announcing new permissions for Teams chats and tags APIs - Nick Kramer (Microsoft) 22nd of February - Learn from the community: Microsoft AI MVP designs a Microsoft Teams bot to centralize tools for emp\u0026hellip; - Ayca Bas (Microsoft) - @Aycabs 17th of February - Breaking changes in the Microsoft Graph Tasks API (beta) 17th of February - Announcing SharePoint Framework 1.14 – with updates for Viva Connections, Microsoft Teams and ShareP\u0026hellip; 16th of February - Learn how to create secure identity solutions using the Microsoft identity platform - Nick Adman (Microsoft) 15th of February - Teams JS SDK v2 Public Preview Update: Teams Apps in Office.com \u0026amp; Office App for Windows - Zakiullah Khan (Microsoft) 15th of February - Learn from the community: Chatbot for Microsoft Teams personal and group chats - Ayca Bas (Microsoft)- @Aycabs 15th of February - Updated design guidance for Viva Connections custom cards and quick view - Vesa Juvonen (Microsoft) | @Vesajuvonen 10th of February - Microsoft Graph Mailbag – Search DriveItems for Only Files - Brian Jackett (Microsoft) | @BrianTJackett 10th of February - Announcing SharePoint Framework 1.14 Release Candidate – with updates for Viva Connections, Microsof\u0026hellip; - Vesa Juvonen (Microsoft) | @Vesajuvonen 9th of February - Client Secret expiration now limited to a maximum of two years 8th of February - Learn from the community: React web app and Azure QnA bot to centralize learning resources - Ayca Bas (Microsoft)- @Aycabs  Microsoft 365 Platform Community Blog Latest community posts at https://aka.ms/m365pnp/community/blog\n 14th of March - Reshmee Auckloo (Pension Protection Fund) | @ReshmeeAuckloo - PnP PowerShell to manage list designs and create lists/libraries using list designs 14th of March - Michel Mendes (Storm Technologies) | @michelcarlo - Displaying selected SharePoint form fields as read-only using List Formatting 3rd of March - Shrushti Shah (Rapid Circle) - Assigning a built-in role to the group at resource group scope level using PowerShell scripts 28th of February - Waldek Mastykarz (Microsoft) | @Waldekm - CLI for Microsoft 365 v5.0 27th of February - Luise Freese - How to create a custom connector for your own Azure hosted API 18th of February - Shrushti Shah (Rapid Circle) - Create Dataverse Expense Details Table and build simple PowerApp using that table 14th of February - Damien Bird | @DamoBird365 9th of February - Tomasz Poszytek | @TomaszPoszytek - Showing and hiding content in Adaptive Cards  Community call recording blog posts  10th of March - Viva Connections \u0026amp; SharePoint Framework Community Call – 10th of March, 2022 8th of March - Microsoft 365 Platform Call – 8th of March, 2022 4th of March - Microsoft 365 Developer Community Call recording – 3rd of March, 2022 2nd of March - Microsoft 365 Platform Call – 1st of March, 2022 25th of February - Viva Connections \u0026amp; SharePoint Framework Community Call – 24th of February, 2022 22nd of February - Microsoft 365 Platform Call – 22nd of February, 2022 22nd of February - Power Apps Community Call – February 2022 18th of February - Microsoft Identity Platform community call – February 2022 18th of February - Microsoft 365 Developer Community Call recording – 17th of February, 2022 17th of February - Adaptive Cards community call – February 2022 16th of February - Microsoft 365 Platform Call – 15th of February, 2022 15th of February - Office Add-ins community call – February 9, 2022 11th of February - Viva Connections \u0026amp; SharePoint Framework Community Call – 10th of February, 2022 8th of February - Microsoft 365 Platform Call – 8th of February, 2022  Microsoft 365 Developer Podcasts Microsoft 365 Developer Podcast In the Microsoft 365 Developer Podcast, Jeremy Thake and Paul Schaeflein talk Microsoft 365 with fellow industry experts. The show formerly known as Office 365 Podcast is back!\n 14th of March - M365 Dev Podcast - Microsoft Teams development \u0026ldquo;plus\u0026rdquo; with Tom Morgan 7th of March - M365 Dev Podcast - Universal Actions and Adaptive Card Updates with Fabian Williams  Microsoft 365 PnP Weekly Podcasts and vlogs PnP Weekly is a recurrent podcast with visitors where Vesa and Waldek talk about the latest news and announcements in Microsoft 365 and SharePoint areas.\n 15th of March - Microsoft 365 PnP Weekly - Episode 157 - Julie Turner (Sympraxis Consulting) 8th of March - Microsoft 365 PnP Weekly - Episode 156 - João Ferreira 1st of March - Microsoft 365 PnP Weekly - Episode 155 - Ayça Baş 21st of February - Microsoft 365 PnP Weekly - Episode 154 - Vardhaman Deshpande 15th of February - Microsoft 365 PnP Weekly - Episode 153 - Sudha Narayanan  Community calls There are numerous different community calls on different areas. All calls are being recorded and published either from Microsoft 365 Developer or Microsoft 365 Community (PnP) YouTube channels. Recordings are typically released within the following 24 hours after the call. You can find a detailed agenda and links to specific covered topics on blog post articles at the Microsoft 365 developer blog when the videos are published.\n Microsoft 365 Platform Call - https://aka.ms/m365-dev-call - Updates and demos from Microsoft as weekly call on Tuesdays - topics vary from Microsoft Teams, Microsoft Graph, Power Platform, SharePoint, OneDrive and more Adaptive Cards https://aka.ms/adaptivecardscommunitycall - Updates and news around Adaptive Cards with live demos Microsoft identity platform https://aka.ms/IDDevCommunityCalendar - Latest on the identity side Office Add-ins https://aka.ms/officeaddinscommunitycall - News and community work around Office add-ins with live demos PowerApps https://aka.ms/PowerAppsMonthlyCall - Monthly summary on PowerApps community with live demos M365 Community Call https://aka.ms/spdev-sig-call - Bi-weekly - General topics on Microsoft 365 Dev from various aspects - Microsoft Teams, Microsoft Graph Toolkit, Provisioning, Automation, Scripting, Power Automate, Solution design Viva Connections \u0026amp; SharePoint Framework Community call https://aka.ms/spdev-spfx-call - Bi-weekly - Consists of topics around SharePoint Framework and JavaScript-based development in the Microsoft Teams and in SharePoint platform.  If you are interested in doing a live demo of your solution or sample in these calls, please do reach out to the Microsoft 376 Platform Community Team members (contacts later in this post) and they are able to help with the right setup. These are great opportunities to gain visibility for example for existing MVPs, for community members who would like to be MVPs in the future or any community member who\u0026rsquo;d like to share some of their learnings.\nMicrosoft 365 Platform Community Ecosystem in GitHub Most of the community driven repositories are in the PnP GitHub organization as samples are not product specifics as they can contain numerous different solutions or the solution works in multiple different applications.\n Microsoft Graph Toolkit - Repository and project on Microsoft Graph Toolkit controls - welcomes community contributors PnPjs - PnPjs Framework repository CLI Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings generator-spfx - Open-source Yeoman generator which extends the out-of-the-box Yeoman generator for * SharePoint with additional capabilities generator-teams - Open-source Microsoft Teams Yeoman generator - Bots, Messaging Extensions, Tabs, Connectors, Outgoing Web hooks and more teams-dev-samples - Microsoft Teams targeted samples from community and Microsoft engineering script-samples - Scripting samples for automating operations in Microsoft 365 with PowerShell modules or CLIs Sharing is Caring - Getting started on learning how to contribute and be active on the community from GitHub perspective. pnpcore - The PnP Core SDK is an SDK designed to work against Microsoft 365 with Microsoft Graph API first approach powershell - PnP PowerShell module which is PowerShell Core module targeted for Microsoft 365 pnpframework - PnP Framework is a .Net Standard 2.0 library targeting Microsoft 365 containing the PnP Provisioning engine and a ton of other useful extensions spfx-reference-scenarios - Samples for the Microsoft Teams and Viva Connections, implemented using SharePoint Framework sp-dev-fx-aces - Samples on the Adaptive Card Extensions for Microsoft Viva sp-dev-fx-webparts - Client-side web part samples from community and Microsoft engineering sp-dev-fx-extensions - Samples and tutorial code around SharePoint Framework Extensions sp-dev-fx-library-components - Samples and tutorial code around the SharePoint Framework library components sp-starter-kit - Starter kit solution for SharePoint modern experiences sp-dev-build-extensions - Different build extensions like gulp tasks and gulp plugins from the community and engineering around SharePoint development sp-dev-solutions - Repository for more polished and fine-tuned reusable solutions build with SharePoint Framework sp-dev-samples - Repository for other samples related on the SharePoint development topics - WebHooks etc. sp-dev-fx-controls-react - Reusable content controls for SharePoint Framework solutions build with React sp-dev-fx-property-controls - Reusable property pane controls to be used in web parts list-formatting - Open-source community-driven repository for the column and view formatting JSON definitions sp-dev-site-scripts - Open-source community-driven repository for community Site Designs and Site Scripts sp-dev-modernization - Tooling and guidance around modernizing SharePoint from classic to modern sp-power-platform-solutions - Solution and sample code for SharePoint Power Platform solutions powerfx-samples - Samples that demonstrate different usage patterns for the Power Fx low-code programming language powerapps-samples - Samples that demonstrate different usage patterns for Power Apps powerautomate-samples - Samples that demonstrate different usage patterns for Power Automate powerva-samples - Samples that demonstrate different usage patterns for Power Virtual Agents AdaptiveCards-Templates - Samples on showcasing the art of possible with adaptive cards  All SharePoint specific repositories or services supported directly by Microsoft are located in the SharePoint GitHub organization\n sp-dev-docs - Source for new SharePoint dev center documentation exposed from https://docs.microsoft.com/sharepoint/dev sp-dev-provisioning-templates - Open-source templates used by the SharePoint Look Book site sp-provisioning-service - Source code of the SharePoint look book site  Classic PnP named repositories - older tooling\n PnP-Tools - Tools and scripts targeted more for IT Pro\u0026rsquo;s and for on-premises for SP2013 and SP2016 PnP-Provisioning-Schema - PnP Provisioning engine schema repository  Repositories in the GitHub Microsoft Search organization controlled by the PnP initiative\n pnp-modern-search - Home of PnP Modern Search solutions, see more from the documentation  Other related resources from GitHub\n Office add-in Patterns and Practices in GitHub - Community contributions welcome! Microsoft Graph GitHub organization OfficeDev GitHub organization - Includes all Microsoft Teams samples from Microsoft  What\u0026rsquo;s supportability story around the community tooling and assets? Following statements apply across all of the community lead and contributed samples and solutions, including samples, core component(s) and solutions, like SharePoint Starter Kit, yo teams or PnP PowerShell. All Microsoft released SDKs and tools are supported based on the specific tool policies.\n PnP guidance and samples are created by Microsoft \u0026amp; by the Community PnP guidance and samples are maintained by Microsoft \u0026amp; community PnP uses supported and recommended techniques PnP is an open-source initiative by the community – people who work on the initiative for the benefit of others, have their normal day job as well PnP is NOT a product and therefore it’s not supported by Premier Support or other official support channels PnP is supported in similar ways as other open source projects done by Microsoft with support from the community by the community There are numerous partners that utilize PnP within their solutions for customers. Support for this is provided by the Partner. When PnP material is used in deployments, we recommend being clear with your customer/deployment owner on the support model  Please see the specifics on the supportability on the tool, SDK or component repository or download page.\nMicrosoft 365 Platform Community team model    In April 2020 we announced our new Microsoft 365 PnP team model and grew the MVP team quite significantly. PnP model exists for having more efficient engagement between Microsoft engineering and community members. Let\u0026rsquo;s build things together. Your contributions and feedback is always welcome! During August, we also crew the team with 5 new members. PnP Team coordinates and leads the different open-source and community efforts we execute in the Microsoft 365 platform.\nWe welcome all community members to get involved on the community and open-source efforts. Your input do matter!\n  New Microsoft 365 Platform (PnP) team members - March 2022\n Chandani Prajapati (Rapid Circle) | @Chandani_SPD Arjun Menon (Tata Consulting Services) | @Arjunumenon Sergei Sergeev | @Sergeev_srg    New Microsoft 365 Patterns and Practices (PnP) team members – November 2021\n Geetha Sivasailam (Artis Consulting) | @GSiVed, Natalie Pienkowska (Microsoft) | @NataliePienkow1, Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp, João J. Mendes (Valo) | @Joaojmendes, Joel Rodrigues (Storm Technology) | @JoelFMRodrigues, Rick Van Rousselt (Advantive) | @RickVanRousselt Stephan Bisser (Solvion) | @Stephanbisser, Tetsuya Kawahara | @Techan_k, Thomas Gölles (Solvion) | @Thomyg    New Microsoft 365 Patterns and Practices (PnP) team members - May 2021\n Gautam Sheth (Valo), Patrick Lamber (Experts Inside AG)    New Microsoft 365 Patterns and Practices (PnP) team members - February 2021\n April Dunnam (Microsoft), Emily Mancini (Sympraxis Consulting), Veronique Lengelle (CPS)    New Microsoft 365 Patterns and Practices (PnP) team members - December 2020\n Luise Freese Sébastien Levert (Microsoft)    New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 -\n Albert-Jan Schot (BLIS Digital), Koen Zomers (Microsoft), Paul Bullock (CaPa Creative), Rabia Williams (Microsoft), Yannick Plenevaux (PVX Solutions)    Got feedback, suggestions or ideas? - Please let us know. Everything we do in this program is for your benefit. Feedback and ideas are more than welcome so that we can adjust the process for benefitting you even more.\nMicrosoft 365 PnP Recognition Program    We are excited to announce new community contributor program for all the active community members. Through this program you can get officially acknowledged with the a Credly badge around your work on our open-source and community channels. See more from\nhttps://pnp.github.io/recognitionprogram/. Thank you for being part of this journey with us.\n⚙ Area-specific updates These are different areas which are closely involved on the community work across the PnP initiative. Some are lead and coordinated by engineering organizations, some are coordinated by the community and MVPs.\nMicrosoft Graph Toolkit    Microsoft Graph Toolkit is engineering lead initiative, which works closely with the community on the open-source areas. The Microsoft Graph Toolkit is a collection of reusable, framework-agnostic web components and helpers for accessing and working with Microsoft Graph. The components are fully functional right of out of the box, with built in providers that authenticate with and fetch data from Microsoft Graph.\n Latest version currently is 2.4 mgt.dev - Microsoft Graph Toolkit Playground Getting started with Microsoft Graph Toolkit guidance video from developer community call by Beth Pan (Microsoft) Latest code and preview versions from https://aka.ms/mgt  All the latest updates on the Microsoft Graph Toolkit is being presented in our bi-weekly Microsoft 365 Generic Dev community call, including the latest community contributors.\nMicrosoft 365 Community Docs    Community Docs model was announced in the April 2020 and it\u0026rsquo;s great to see the interest for community to help each other by providing new guidance on the non-dev areas. See more on the announcement from the SharePoint blog - Announcing the Microsoft 365 Community Docs. We do welcome contributions from the community - our objective is to build a valuable location for articles from Microsoft and community together.\nNew articles This time no new articles.\nUpdated articles  Advanced Highlighted Content Web Part - updated by Chanaka Palliyaguru (Fortude) | @Chanakavp  Have ideas for articles or want to contribute yourself? - Get involved! Here are also some additional resources explaining the model more detailed.\n YouTube - Introducing Microsoft 365 Community Docs GitHub issue list with articles ideas  SharePoint Framework development samples    These are the updated SharePoint Framework samples which are available from the different repositories.\n New sample React-PPW-HTML by Christophe Humbert | @Path2SharePoint, that showcases the use of the Property Pane Wrap to embed HTML controls in the SPFx Property Pane New sample react-flow-button by Takashi Shinohara | @Karamem0, that demonstrates displaying the list of flow button of Power Automate New sample react-datatable-using-mui-tables by Jeffin Jacob | jeffinjacob, that shows how to provide mui datatable features for your lists New sample PrimaryTextCard-MyShifts by Siddharth Vaghasia | @Siddh_me, that shows how to build an ACE with a PrimaryText card view and a quick view to display current logged in user\u0026rsquo;s immediate upcoming shift in card view and all upcoming shifts in Quick view New sample PrimaryTextCard-Graph-JoinNewTeams by Aimery Thomas | @aimery_thomas, that shows how to build an ACE that displays recently created Teams New sample BasicCard-MonitorSecurity by Arjijit Mondal (Microsoft) | ArijitCloud, that provides a security monitoring feature using identity protection graph endpoint and ACE h New sample ImageCard-OfficeLocations by Anoop Tatti (Content+Cloud) | @Anooptells, that shows how to build an ACE with multiple card views to show the details of the offices in an organization. New sample PrimaryTextCard-FootballStats by Soumit Mukherjee | @Msoumit, Soumyadeep Mukherjee | soumyadeep2207, and Sourav Paul | @Spsouravp, that allows users to choose one of the top five European Football League to get information about current team standing New sample ace-designtemplate-gallery by Derek Cash Peterson (Sympraxis Consulting) | @Spdcp, that provides a set of twelve (12) Adaptive Card Extensions to demonstrate different ways to style the quick view with more detailed layouts New sample ace-wellbeing by Anoop Tatti (Content+Cloud) | @Anooptells, that showcases how users can request wellbeing days New sample ace-dynamic-card by Patrick Rodgers | @Mediocrebowler, that includes three ACE\u0026rsquo;s showing simple ways to include dynamic content and liven up the appearance of your ACE\u0026rsquo;s. Updated sample react-datatable by Chandani Prajapati (Rapid Circle) | @Chandani_SPD Updated sample react-functional-component-with-data-fetch by Don Kirkham (DMI) | @DonKirkham  How to find what\u0026rsquo;s relevant for you? Take advantage of our SharePoint Framework web part and extension sample galleries - also includes solutions which work in Microsoft Teams\n Web Part sample gallery - https://aka.ms/spfx-webparts Extensions sample gallery - https://aka.ms/spfx-extensions Viva Connections Adaptive Card samples - https://aka.ms/spfx-aces Microsoft Teams samples build with SharePoint Framework - https://github.com/pnp/spfx-reference-scenarios  Microsoft Teams community samples    These are samples which have been contributed on the community samples since last summary. We do welcome all Microsoft Teams samples to this gallery. They can be implemented using in any technology.\n New sample tab-react-router by Siddharth Vaghasia | @Siddh_me, that shows how to use React Router with Teams App project generated using Yo teams Numerous adjustments on existing samples and solutions  If you are interested on Microsoft Teams samples, we have just released also new Microsoft Teams sample gallery. Contributions to Microsoft Teams samples is also more than welcome. This gallery already surfaces all Microsoft samples, Microsoft Teams app templates and community samples.\nPower Platform samples     New Power Apps sample dataverse-admin by Vivek Bavishi | @That_API_guy New Power Apps sample sharepoint-events by Alex Clark (Microsoft) | @Sharepointalex New Power Automate sample sharepoint-hide-list-site-contents by Michel Mendes | @Michelcarlo New Power Automate sample teams-adaptive-card-reminders-from-lists by Norm Young | @norm Young New Power Automate sample o365groups-graph-create-group by Michel Mendes | @Michelcarlo  There was also numerous smaller updates on the different Power Platforms samples. See more details on available samples from following location\nPower Platform sample gallery - https://aka.ms/powerplatform-samples\nIf you have any existing samples which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative. Here to help.\nMicrosoft 365 Script Samples    We welcome all scripts on Microsoft 365 automation to this centralized repository, targeted to help to manage and automate day-to-day operations.\nHere are the latest updates on the Script Samples:\n Updated Remove orphaned redirect sites by Leon Armston (Intelogy) | @LeonArmston Updated Get Site Usage Reports And Export It To CSV by Reshmee Auckloo | @Reshmeeauckloo New Analyze users for known data breaches with have I been pwned by Albert-Jan Schot (BLIS Digital) | @Appieschot Updated Modernizing classic pages from on-premises sites by Paul Bullock (CaPa Creative Ltd) | @Pkbullock New Delete orphaned temporary site pages by Brian McCullough (Marsh \u0026amp; McLennan Companies) | @Bpmccullough Updated List all external users in all site collections by Chandani Prajapati (Rapid Circle) | @Chandani_SPD Updated Add App Catalog to SharePoint site by Chandani Prajapati (Rapid Circle) | @Chandani_SPD New List all teams and teams members in Microsoft Teams in the tenant by Chandani Prajapati (Rapid Circle) | @Chandani_SPD Updated Hide SharePoint list from Site Contents by Leon Armston (Intelogy) | @LeonArmston Updated Teams Full Report by Reshmee Auckloo | @Reshmeeauckloo New Sample on exporting Document libraries inc folders and versions for selected Site Collections to a F\u0026hellip; by Kasper Bo Larsen (Fellowmind) | @Kasperbolarsen Updated Export a csv report on all Microsoft Stream videos by Twan van Beers (Nero Blanco) | @neroBlancoIT New Get permission group report of a site by Adam Wójcik (Hitachi Energy) | @Adam25858782 New Export a csv report on all Whiteboards by Nanddeep Nachan | @nanddeepNachan and Smita Nachan | @SmitaNachan  If you have any existing scripts which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative.\nMicrosoft 365 Script Samples - https://aka.ms/script-samples\nIndependent Connectors Program    Microsoft Power Platform comes with a huge variety of already built-in connectors and also provides you with the ability of creating your own custom connectors. As of July 2021, anyone can submit the connectors they built to Microsoft Power Platform so that they can be used by others as well. Previously, only API owners could publish their connectors. The Independent Publisher Connector Program\u0026rsquo;s mission is to bring the best together: the best people, connecting great ideas to data, apps, and flows. We want to make it easier for connector developers to collaborate on connectors.\nFor more information, you can watch this video on Publish a connector to the Publish a connector to the Power Platform with Independent Publisher Conn\u0026hellip; and check out Microsoft Power Platform Connectors on GitHub\nThese are the latest connectors  CQC Data - Troy Taylor (Hitachi Solutions) | @Troystaylor HubSpot CRM - Troy Taylor (Hitachi Solutions) | @Troystaylor Square Payments -Troy Taylor (Hitachi Solutions) | @Troystaylor Square Business - Troy Taylor (Hitachi Solutions) | @Troystaylor  Sharing is Caring initiative    The \u0026ldquo;Sharing Is Caring\u0026rdquo; initiative is targeted for learning the basics around making changes in Microsoft Docs, in GitHub, submitting pull requests to the PnP repositories and in GitHub in general. Take advantage of this instructor lead training for learning how to contribute to docs or to open-source solutions. Everyone is welcome to learn how to get started on contributing to open-source docs or code!\nSee more from the guidance documentation - including all upcoming instructor lead sessions which you can participate!\n✍ Different Microsoft 365 related open-source initiatives build together with the community  Microsoft Look Book - Discover the modern experiences you can build with SharePoint in Microsoft 365. Look book provides design examples for SharePoint Online which can be automatically provisioned to any tenant in the world. See more from https://lookbook.microsoft.com. This service is also provided as open-source solution sample from GitHub. yo teams - Open-source Yeoman generator for Microsoft Teams extensibility. Supports creation of bots, messaging extensions, tabs (with SSO), connectors and outgoing Webhooks. See more from https://aka.ms/yoteams. PnP Framework - .NET Standard 2.0 SDK containing the classic PnP Sites Core features for SharePoint Online. More around this package from GitHub. PnP Core SDK - The PnP Core SDK is an SDK designed to work for Microsoft 365 with Graph API first approach. It provides a unified object model for working with SharePoint Online and Teams which is agnostic to the underlying API\u0026rsquo;s being called. See more around the SDK from documentation. PnP PowerShell - PnP PowerShell is a .NET Core 3.1 / .NET Framework 4.6.1 based PowerShell Module providing over 400 cmdlets that work with Microsoft 365 environments and more specifically SharePoint Online and Microsoft Teams. See more details from documentation. Reusable SharePoint Framework controls - Reusable controls for SharePoint Framework web part and extension development. Separate projects for React content controls and Property Pane controls for web parts. These controls are using Office UI Fabric React controls under the covers and they are SharePoint aware to increase the productivity of developers. CLI for Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings. See release notes for latest updates. PnPJs - PnPJs encapsulates SharePoint REST APIs and provides a fluent and easily usable interface for querying data from SharePoint sites. It\u0026rsquo;s a replacement of already deprecated pnp-js-core library. See changelog for the latest updates. PnP Provisioning Engine and PnP CSOM Core - PnP provisioning engine is part of the PnP CSOM extension. They encapsulate complex business driven operations behind easily usable API surface, which extends out-of-the-box CSOM NuGet packages. See changelog for the latest updates. PnP PowerShell - PnP PowerShell cmdlets are open-source complement for the SharePoint Online cmdlets. There are more than 300 different cmdlets to use and you can use them to manage tenant settings or to manipulate actual SharePoint sites. See changelog for the latest updates. PnP Modern Search solution - The PnP \u0026lsquo;Modern Search\u0026rsquo; solution is a set of SharePoint Online modern Web Parts allowing SharePoint super users, webmasters and developers to create highly flexible and personalized search based experiences in minutes. See more details on the different supported capabilities from https://aka.ms/pnp-search. Modernization tooling - All tools and guidance on helping you to transform you SharePoint to modern experiences from https://aka.ms/sppnp-modernize. SharePoint Starter Kit v2 - Building modern experiences with Microsoft Teams flavors for SharePoint Online and SharePoint 2019 - reference solution in GitHub. List formatting definitions - Community contributed samples around the column and view formatting in GitHub. Site Designs and Site Scripts - Community contributed samples around * SharePoint Site Designs and Site Scripts in GitHub. DevOps tooling and scripts - Community contributed scripts and tooling automation around DevOps topics (CI/CD) in GitHub. Teams provisioning solution - Set of open-source Azure Functions for Microsoft Teams provisioning. See more details from GitHub.  ✍ Documentation updates  Microsoft Teams platform documentation - Microsoft Docs | GitHub SharePoint Developer documentation - Microsoft Docs | GitHub Microsoft Graph documentation - Microsoft Docs | GitHub Office add-in documentation - Microsoft Docs | GitHub  Microsoft 365 Developer and Microsoft 365 Community YouTube video channels You can find all Microsoft 365 related videos on our YouTube Channel at https://aka.ms/m365pnp/videos or at Microsoft 365 Dev. These channels contains already a significant amount of detailed training material, demo videos, and community call recordings.\nMicrosoft demo videos Here are the new Microsoft demo or guidance videos released since the last monthly summary:\n Course Overview | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 1: Learning Objectives and Scenario | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 1: What is Microsoft Graph? | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 1: Understand Microsoft Graph Services | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 1: Access User Info by using Graph Explorer | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 1: Exercise - Get Started with Graph Explorer | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 1: Exercise - Test Queries with Your Own Account | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 1: Exercise - Try a POST Request | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 1: Exercise - Consume Microsoft Graph in Your Apps with the Help of Graph Explorer by Dan Wahlin (Microsoft) | @DanWahlin Module 1: Summary | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 2: Configure a JavaScript App | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 2: Understand the role of Azure Active Directory | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 2: Microsoft Graph Permissions or Scopes | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 2: Microsoft Graph Permissions and Consent | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 2: Permission Types | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 2: Access Tokens | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 2: Register an App with Azure Active Directory | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 2: Exercise - Register an App with Azure AD | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 2: Retrieve an Access Token by Using MSAL | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 2: Authentication Flow | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 2: Exercise - Retrieve Access Token Using MSAL | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 2: Summary | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 3: Access user photo information | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 3: Use Microsoft Graph in your web app | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 3: Exercise - Use Microsoft Graph in your web | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin Module 3: Summary | Microsoft Graph Fundamentals for Beginners by Dan Wahlin (Microsoft) | @DanWahlin DEMO - Create the pre meeting user experience by Andrew Connell (Voitanos) | @Andrewconnell DEMO - Implement a post meeting experience for attendees by Andrew Connell (Voitanos) | @Andrewconnell DEMO - Build and test the application by Andrew Connell (Voitanos) | @Andrewconnell Create interactive meeting apps for Microsoft Teams by Andrew Connell (Voitanos) | @Andrewconnell DEMO - In meeting experience \u0026amp; participant roles by Andrew Connell (Voitanos) | @Andrewconnell DEMO - Creating meeting apps for Microsoft Teams by Andrew Connell (Voitanos) | @Andrewconnell Get meeting details in your meeting app by Andrew Connell (Voitanos) | @Andrewconnell DEMO - Implement in meeting experience with a side panel by Andrew Connell (Voitanos) | @Andrewconnell In meeting experience \u0026amp; participant roles by Andrew Connell (Voitanos) | @Andrewconnell DEMO - Implement the app\u0026rsquo;s pre meeting user experience by Andrew Connell (Voitanos) | @Andrewconnell 02 03 Demo Create an API endpoint by Andrew Connell (Voitanos) | @Andrewconnell DEMO - Create Microsoft Teams app by Andrew Connell (Voitanos) | @Andrewconnell Implement a post meeting experience for attendees by Andrew Connell (Voitanos) | @Andrewconnell Finding Permissions with Microsoft Graph PowerShell SDK by Nik Charlebois (Microsoft) | @nikCharlebois Dynamic Filters in Microsoft Graph Data Connect by Nik Charlebois (Microsoft) | @nikCharlebois Integrating real-time Microsoft Graph notifications by Ayca Bas (Microsoft) | @Aycabs and Dan Wahlin (Microsoft) | @DanWahlin Setting up resources for real-time Microsoft Graph notifications by Ayca Bas (Microsoft) | @Aycabs Using the Fluid Framework by Dan Wahlin (Microsoft) | @DanWahlin Introduction to collaborative app technologies by Ayca Bas (Microsoft) | @Aycabs and Dan Wahlin (Microsoft) | @DanWahlin  Community demo videos  Creating engaging and dynamic Viva Connections mobile experiences by Patrick Rodgers (Microsoft) | @Mediocrebowler Introduction to Microsoft Intune APIs on Microsoft Graph by Dave Randall (Microsoft) | triplanedave Updates on Independent Publisher Connectors \u0026amp; Cloverly / Ecologi Connector Demo by Natalie Pienkowska (Microsoft) | @nataliePienkow1 and Troy Taylor (Hitachi Solutions) | @Troystaylor Make a simple bot using Webhooks in Microsoft Teams by Lee Ford ( Symity) | @Lee_Ford Using the MGT Agenda and Tasks Components in your solutions by Sébastien Levert (Microsoft) | @Sebastienlevert Access a user\u0026rsquo;s calendar events in an ASP.NET Core app with Microsoft Graph by Dan Wahlin (Microsoft) | @DanWahlin Viva Connections – Data Binding in SPFx Adaptive Card Extensions by Paolo Pialorsi (PiaSys.com) | @PaoloPia Use the Power Platform and Microsoft Teams to quiz yourself by Albert-Jan Schot (BLIS Digital) | @Appieschot SPFx Design Guidance – Property pane input validation and error messages by Hugo Bernier (Microsoft) | @Bernierh Latest on Microsoft Bookings API on Microsoft Graph by Altamish Ahmad (Microsoft) CRUD Operations in Viva Connections – Adaptive Card Extensions with SharePoint Framework by Derek Cash Peterson (Sympraxis Consulting) | @Spdcp Latest with Microsoft Graph connectors by Arvind Ravi (Microsoft) Microsoft Graph Toolkit – Using the Teams Channel Picker Component in your solutions by Sébastien Levert (Microsoft) | @Sebastienlevert When to build Viva Connections Adaptive Card Extensions by Patrick Rodgers (Microsoft) | @Mediocrebowler Microsoft 365 Maturity Model - February 2022 Getting started on building a Microsoft Teams bot with yo teams by Stephan Bisser (Solvion) | @Stephanbisser Microsoft List Formatting - Challenges and Solutions by André Lage (Datalynx AG) | @aaclage Deep dive on Viva Connections Adaptive Card Extension development – State management by Patrick Rodgers (Microsoft) | @Mediocrebowler Microsoft Graph Toolkit – Using the People Picker Component in your solutions by Sébastien Levert (Microsoft) | @Sebastienlevert Adaptive Cards and the Power Platform to solve captchas by Tomasz Poszytek | @TomaszPoszytek Show a user\u0026rsquo;s emails in an ASP.NET Core app with Microsoft Graph by Dan Wahlin (Microsoft) | @DanWahlin Updates on Independent Publisher Connectors \u0026amp; GoQR Connector Demo by Natalie Pienkowska (Microsoft) | @nataliePienkow1 and Rui Santos (Microsoft) SharePoint Framework Design Patterns – Custom Web Part Properties (Part 3) by Hugo Bernier (Microsoft) | @Bernierh  Key contributors to the March 2022 update Here’s the list of active contributors (in alphabetical order) since last release details in GitHub repositories or community channels. PnP is really about building tooling and knowledge together with the community for the community, so your contributions are highly valued across the Microsoft 365 customers, partners and obviously also at Microsoft.\nThank you for your assistance and contributions on behalf of the community. You are truly making a difference! If we missed someone, please let us know.\nCommunity people  Abderahman Moujahid (iThink365) | Abderahman88 Adam Wójcik (Hitachi Energy) | @Adam2585878 Ademosu Ayodele | aaademosu Aimery Thomas | @aimery_thomas Albert-Jan Schot (BLIS Digital) | @Appieschot Alex Gonsales (Intergen) | MrDrSushi Alexander Ernon (Amplexor) Alexis CONIA (Kickle) | @Alexis_conia Alienson | @Alienson Alistair Pugin (Tangent Solutions) | @Alistairpugin André Lage (Datalynx AG) | @aaclage Andrea Mondello (Withum Smith + Brown) | @Mondello_power Andrew Burns (AmSty) | @SharePointRox Andrew Connell (Voitanos) | @Andrewconnell Andrew Pilcher (CSULB) | andrewpilcher Andy Harmon (Oldham Metropolitan Borough Council) | @Andygharmon Anjaneyulu Yarlagadda | yarlagaddaanji Annie Torres (Coppin State University) Anoop Tatti (Content+Cloud) | @Anooptells Antti Pajunen (Forward Forever) | @Anttipajunen Aric Bost (North Carolina Housing Finance Agency) | @1CyberState Arjun Menon (Tata Consulting Services) | @Arjunumenon Arleta Wanat | PowershellScripts Art Pagano (University of Texas San Antonio) Artur Posluszny | aposl1 Asad Refai (Intelogy) | @AsadRefai Ashwani Kumar (Walmart Global Tech) | @Ashwanidv100 Bartolomeo Sorrentino (soulsoftware) | @BsorrentinoJ Beau Cameron (Aerie Consulting) | @Beau__Cameron Bob Morris (ThreeWill) Carianne Wong (Majesco) | @CW_marie Carike Blignaut-Staden | @CarikeBStaden Carmen Ysewijn (Qubix) | @Carmenysewijn Catherine Thenault (AIPSO) | @O365techcat Chanaka Palliyaguru (Fortude) | @Chanakavp Chandani Prajapati (Rapid Circle) | @Chandani_SPD Chandra Sekhar Malla (Royal Group LLC) | @ChandraSMall Chris Kent (DMI) | @TheChrisKent Chris Sparrow (PA Consulting) Christian Zuellig (MondayCoffee) | czullu Christophe Humbert | @Path2SharePoint Christopher Graves (Arvato) | @Christo48927551 Chuck Piotrowski (PIOT) | @chuckpiot Clavin Fernandes (Rapid Circle) | @Clavinfernandes Clement Olivier | @Clement0livier Cynthia Tiwana (city of sammamish) | ctiwana Damien Bird | @DamoBird365 Daniel Laskewitz (Sogeti) | @Laskewitz Daniel Westerdale (Westerdale Solutions Ltd) | @Westerdaled Danish Shafi | @Builtbydan Darren Brown (Node4) Dave Young | @Klarkykhat David Gray (Visa) David Pileggi (Staples) | DavidPileggi David Ramalho | @DRamalho92 David Warner II (Catapult) | @DavidWarnerII Dean Gross (Insight) | @Dean144 Dennis Goedegebuure (Ultima Business Solutions) | Expiscornovus Derek Cash Peterson (Sympraxis Consulting) | @Spdcp Dipen Shah (Rapid Circle) | @Dips_365 Don Kirkham (DMI, Inc) | @DonKirkham Dr Adrian Colquhoun (Strategik) | iddycol Edmund David (Insentra) Edris Kakembo (WFP) | @Kaxeddie Eduardo Cáceres | eduherminio Ejaz Hussain (Content and Cloud) | @EjazHussain\u0026quot; Elio Struyf (Struyf Consulting) | @Eliostruyf Elise Yang (Shopify) | elisenyang Elka Dunnette | @ElkaD_YYC Emily Mancini (Sympraxis Consulting) | @EEMancini Eric Overfield (PixelMill) | @EricOverfield Erwin van Hunen (Valo Intranet) | @Erwinvanhunen Florian Zink | fzbm Franck Cornu | @FranckCornu Ganesh R (RapidCircle) | @Geekwhocodes Ganesh Sanap (Globant) | @GaneshSanap20 Garrick George (City of Thornton) | @Kod3m0ng3r Gaurav Mahajan | @Mahajang Gautam Sheth (Valo Solutions) | @Gautamdsheth Geetha Sivasailam (Artis Consulting) | @GSiVed Giacomo Pozzoni (Fellowmind) | jackpoz Giuliano De Luca | @delucagiulian Haritha Sama (Intouch Solutions) Harry Jones (Civica) | @Hejones50 Harsh S (SRK Consulting) Harsh Samdani | hsamdani12 Harshini Varma (Capgemini) | @HarshiniVarmaa HEMANT RISBUD (SRK Consultants) | Hemant Risbud Henrik Yllemo (Ylltec Sweden AB) | @Yllemo Inez Jacobs (Amplexor) Isolde Kanikani (SoftwareONE) Jacob Warrington (Catapult Systems) | @Jjhwarrington Jan Bakker | @JanBacker_ Jasey Waegebaert (MI group) | Jwaegebaert Javier Hualpa | jhualpa Jeffin Jacob | jeffinjacob Jennifer Davison (Akron Children\u0026rsquo;s Hospital) Jennifer Erzen (SUNY Upstate Medical University) | @Jennifererzen Jerker Vallbo | jerval53 Jhan Zaib (Ascertia) | jhan-zaib Jim Duncan (ShareSquared) | @Sparchitect Jinlong Wang | apzl808 Jiten Parmar (Rapid Circle) | @Jitenpa44241205 João Ferreira | @Joaoferreira João J. Mendes (Valo Solutions) | @Joaojmendes Joel Rodrigues (Storm Technology) | @JoelFMRodrigues Jonas Björkander (Heimstaden) | @Jonasbjor Jonathan Hinchliffe (Imperial War Museums) Jonathan Weaver (WaterOne) | @J_weaver74 Jono Duncan (JourneyTEAM) | @SuaveJono Julie Turner (Sympraxis Consulting) | @Jfj1997 Kasper Bo Larsen (Fellowmind) | @Kasperbolarsen Kathleen Boilek (Alaka\u0026rsquo;ina Foundation) | @Kaboilek Katleen Van Trier (Inetum-Realdolmen) | @Kvantrier Katrin Rannaste Kevin McDonnell (CPS) | @Kevmcdonk Kim Kiefer (GenTech Associates) | @Kkkiefe Kunj Balkrishna Sangani | @Sanganikunj Kyle Bigelow | hazondata Lance Yoder (Cerner) | @Lyoder Laura Kokkarinen (Sulava) | @LauraKokkarinen Laurent Egbakou | @Lioncoding Lee Ford ( Symity) | @Lee_Ford Leon Armston (Intelogy) | @LeonArmston Lindsay Shelton (Stowers Institute for Medical Research) | @Lshelton_tech Loïc Cimon (Sogeti) | @LoicCimon Luise Freese (M365Princess) | @LuiseFreese Manickam Sethuramalingam (microland) Manjunath Puttaswamy (Momentive Performance Materials India Private Limited) | @ManjunathPutta3 Marc Anderson (Sympraxis Consulting) | @Sympmarc Markus Joschko | jocsch Markus Möller (Avanade) | @Moeller2_0 Martin Lingstuyl | @Martinlingstuy Matt Beard (Data8) | @Mattybeard Matt Collins-Jones | @D365Geek Michael Blumenthal (M365chicago.com) | @MichaelBL Michael Roth ( ITP) | @MichaelRoth42 Michal Guzowski (Developico) | @Abcguzowski Michal Romiszewski | @Romiszewski Michal Ziemba (Flugger) | @Michal_Ziemba Michel Mendes | @Michelcarlo Michelle Heisler (Hennepin County) Miguel Angel García | @Miangama Mike Duffy (Boardwalk Pipelines) | @Mike_duffy Mike Dumka (Habanero Consulting) | @Mikedumka Mike Zimm | mikezimm Mohammad Amer (Atea Global Services) | @Mohammad3mer Nanddeep Nachan | @nanddeepNachan Nathan Zipf | NathZ1 Naveen Karla | @naveen67 Nicole Fleming (Sherwin Williams) Nikki Chapple (Cloudway) | @Chapplenikki Nizar Grindi (Avanade) | @nizar_grindi Norm Young (UnlimitedViz) | @Stormin_30 Omar Stewart | @OmarStewey Paolo Pialorsi (PiaSys.com) | @PaoloPia Patrick de Lanoy(EmpowerTech) | @EmpowerPatrick Patrick Doran (NCDIT) | @Swearpointjs Patrick Galloway | BammaSlim Patrick Lamber (ExpertsInside AG) | @Patricklamber Patrik Hellgren (Sherpas Group) | @Patrikhellgren  Paul Bullock (CPS) | @Pkbullock Paul Culmsee (Seven Sigma) | @Paulculmsee Paul McManus | @PaulMcManus23 Paul Schaeflein (AddIn365) | @Paulschaeflein Pedro Monte (BindTuning) | PedroMordeP Pete Simpkins (Fluid Interiors) | @Simpkinspete Pete Skelly (ThreeWill ) | @Pskelly Phil McNiven | phil0074 Pierre Geraud (Bluekango) | pedrion Prafull Kotecha | @Prafull Ralph Rivas (Sogeti) | @Bigpix2000 Rentu | SLdragon Reshmee Auckloo (Pension Protection Fund) | @ReshmeeAuckloo Rick Van Rousselt (Advantive) | @RickVanRousselt r-markus | r-markus Rob Bell (Kizan technologies) Rob Ireland (Oast House Ltd) | @RobIreland68 Robert Copelan (ZF Friedrichshafen AG) | @Rcopelan Robert Dyjas (EQTek) | @Robdy Rodrigo Pinto (Storm Technology) | @ScoutmanPt Rohit S Patil (C3it) Russell Gove (tronox) | @Russgove Ruth Shyer (SuMMit Consulting, LLC) | @Rshyer Ryan Healy (365Apps) | @Ryan365Apps Sabrina Faragoza (Cognizant\u0026rsquo;s Microsoft Business Group) Sachchin Annam (Freelancer) | @Sachchinn Sam Bridegroom (Allied Solutions) | @Sambridegroom Sekar Thangavel (IBM) | SekarThangavel Sergei Sergeev | @Sergeev_srg Sharon Weaver (Smarter Consulting) | @Sharoneweaver Shishir | skky05 Shrushti Shah (Rapid Circle) Siddharth Vaghasia | @Siddh_me Simon Ågren | @AgrenPoint Simon Doy (iThink 365) | @Simondoy Simon Hudson (Novia Works) | @Simonjhudson Smita Nachan | @SmitaNachan Someleze Diko | DikoSomeleze Sorina Becheru (abtis GmbH) Soumit Mukherjee | @Msoumit Soumyadeep Mukherjee | soumyadeep2207 Sourav Paul | @Spsouravp Stefan Bauer (n8d) | @StfBauer Stephan Bisser (Solvion) | @Stephanbisser Steven Reid (FTZ) | @Steven_reid Sujith Pasupuleti (NRF) | @Sujith1907 Sumit Jadon (Avanade) | @CoolJadon Sunish (SACHA Solutions) | @Sunish Takashi Shinohara | @Karamem0 Tammy Dupuy (CSULB) Tetsuya Kawahara | @Techan_k Thomas Gölles (Solvion) | @Thomyg Tim Balk (Wellmark) | @Tlbalk Tim Cadenbach (Maximago) | @TimCadenbach Tod Beane Todd Alexander (Island Way Technology) Todd Baginski (Canviz) | @Toddbaginski Tom Morgan (Modality Systems) | @tomorgan Tomasz Poszytek | @TomaszPoszytek Tony Derricott (BYUI) | @Computx Troy Taylor (Hitachi Solutions) | @Troystaylor Twan van Beers (Nero Blanco) | @neroBlancoIT Vardhaman Deshpande (Valo Solutions) | @vrdmn Veronique Lengelle (CPS) | @Veronicageek Victor Ezeliorah (Intels Nigeria Limited) | @Vezeliora Vipul Kelkar (Rapid Circle) | @Vipulkelkar Vivek Bavishi | @That_API_guy wuxiaojun514 | wuxiaojun514 Yannick Plenevaux (PVX Solutions) | @Yp_code Youssef Moumen Yves Habersaat (Sword Group) | @Yhabersaat Zach Roberts | @ZachSPODev  Companies Here\u0026rsquo;s the companies, which provided support the community initiative for this month by allowing their employees working for the benefit of others in the community. There were also people who contributed from other companies during last month, but we did not get their logos and approval to show them in time for these communications. If you still want your logo for this month\u0026rsquo;s release, please let us know and share the logo with us. Thx.\n    Addin365 Arvo Systems Beezy BLIS Digital CaPa Creative Ltd Canviz Solutions Catapult Systems CPS Content+Cloud DMI Fellowmind Intelogy iThink 365 MondayCoffee N8D - Stefan Bauer - Innovation and Design Agency Piasys PixelMill Pramerica PVX Solutions Qubix Rapid Circle Sherpas Solvion Sogeti Storm Technology Struyf Consulting Sulava Sympraxis Consulting ThreeWill Ultima Business Solutions Valo Voitanos  Microsoft people Here’s the list of Microsoft people who have been closely involved with the Microsoft 365 Platform community work during last month.\n Aakash Bhardwaj (Microsoft) | @Aakash_316 Abid Rahman (Microsoft) Alex Clark (Microsoft) | @Sharepointalex Alex Terentiev (Microsoft) | @Alexaterentiev Aline Tognini (Microsoft) | alinefmr Allen Snow (Microsoft) | @Asnow003 Altamish Ahmad (Microsoft) Andrey Esipov (Microsoft) April Dunnam (Microsoft) | @Aprildunnam Arijit Mondal (Microsoft) Arvind Ravi (Microsoft) Ashima Mathur (Microsoft) Ayca Bas (Microsoft) | @Aycabs Bert Jansen (Microsoft) | @O365Bert Beverly Kim (Microsoft) | bvandaal Bob German (Microsoft) | @Bob1German Brian Dang (Microsoft) | @Mrdang Brian Jackett (Microsoft) | BrianTJackett Bryan Petersen (Microsoft) | bpeterse03 Cathy Dew (Microsoft) | @Catpaint Charles Sterling (Microsoft) | @Chass Christer Ljung (Microsoft) Christos Matskas (Microsoft) | @ChristosMatska Dan Wahlin (Microsoft) | @DanWahlin Dave Randall (Microsoft) | triplanedave David Chesnut (Microsoft) | @Davidchesnut Doğan Erişen (Microsoft) | derisen Dragan Panjkov (Microsoft) | @Panjkov Ed Averett (Microsoft) | Ed_Everett Emily Lynam (Microsoft) Elizabeth Samuel (Microsoft) Emma Cooper (Microsoft) Garry Trinder (Microsoft) | @Garrytrinder Haimantika Mitra (Microsoft) | @HaimantikaM\u0026gt; Holger Lutz (Microsoft) | HolgerLutz Hugo Bernier (Microsoft) | @Bernierh Igor Ribeiro (Microsoft) James Eccles (Microsoft) jameseccles James Skay (Microsoft) | @JamesSka Japhlet Nwamu (Microsoft) | @Japhletnwamu Jasey Waegebaert (Microsoft) | Jwaegebaert Jasmine Hoegh (Microsoft) | @Sbjishu Jason Johnston (Microsoft) | jasonjoh Jay Hangan (Microsoft) John Nguyen (Microsoft) | johnguy0 John Sudds (Microsoft) | @Jsuddsjr Jos Verlinde (Microsoft) Josverl Jyoti Pal (Microsoft) Kavishi Agarwal (Microsoft) Kevin Coughlin (Microsoft) | @Kevintcoughlin Keyur Patelsdata (Microsoft) Koen Zomers (Microsoft) | @Koenzomers Holland Kaviani (Microsoft) Laura Graham (Microsoft) | Lauragra Holland Kaviani (Microsoft) Lee Stott (Microsoft) | @Lee_Stott [Linda Delarvé (Microsoft) Linda Lu Cannon - (Microsoft) | lindalu-MSFT Loki Meyburg (Microsoft) (Microsoft) | @Lokimeyburg Luca Bandinelli (Microsoft) | lucaband Mansa MusaLe (Microsoft) | @M4musale Mathangi Chakrapani (Microsoft) Matthijs Hoekstra (Microsoft) | @Mahoekst Max Kulakov (Microsoft) Michael Aldridge (Microsoft) Mikael Svenson(Microsoft) | @Mikaelsvenson Mike Hollinshead (Microsoft) | @Mahollinshea Musale Martin (Microsoft) | m4musale Nancy Wang (Microsoft) | @nancyatMSFT Natalie Pienkowska (Microsoft) | @nataliePienkow1 Nathan Zipf (Microsoft) | NathZ1 Nick Adman (Microsoft) Nick Kramer (Microsoft) Nik Charlebois (Microsoft) | @nikCharlebois Nicolas Vogt (Microsoft) | vogtn Nikolay Zainchkovskiy (Microsoft) | NZainchkovskiy Nickii Miaro (Microsoft) | Nickii Miaro Niko (Microsoft) | NikoMix Nikola Metulev (Microsoft) | @Metulev Orion O\u0026rsquo;Malley (Microsoft) Pam Green (Microsoft) | @Contextuallib Parag Jain (Microsoft) Pat Miller (Microsoft) | @PatMill_MSFT Patrick Rodgers (Microsoft) | @Mediocrebowler Rabia Williams (Microsoft) | @Williamsrabia Rajdeep Chandra Ravichandran Krishnasamy (Microsoft) | @Spfx_blog Richard Astbury (Microsoft) | @Richorama Rick Kirkham (Microsoft) Roel (Microsoft) | RoelVB Roy Paar(Microsoft) Rui Santos (Microsoft) Sam Larson (Microsoft) | salarson Shane Weaver (Microsoft) | shweaver-MSFT Shreyansh Agrawal (Microsoft) | shagra-ms Sébastien Levert (Microsoft) | @Sebastienlevert Srinivas Varukala (Microsoft) | @Svarukala Steven Jia (Microsoft) | Steven-Jia Shubham Gatkal (Microsoft) Tejas Mehta (Microsoft) | @Tpmehta Tim Mayo (Microsoft) | @Timmayo Tom Resing (Microsoft) | @Resing Tomomi Imura (Microsoft) | @Girlie_mac Vesa Juvonen (Microsoft) | @Vesajuvonen Wajeed Shaikh | Wajeed-msft Waldek Mastykarz (Microsoft) | @Waldekm Wictor Wilen(Microsoft) | @Wictor Vincent Biret (Microsoft) | @baywet Zakiullah Khan (Microsoft)  MVP Community team MVP Community team manages the Microsoft 365 platform community work in the GitHub and also coordinates different open-source projects around Microsoft 365 topics. Platform Community Team members have a significant impact on driving adoption of Microsoft 365 topics. They have shown their commitment to the open-source and community-driven work by constantly contributing to the benefit of the others in the community.\nThank you for all that you do!\n Chandani Prajapati (Rapid Circle) | @Chandani_SPD Emily Mancini (Sympraxis Consulting) | @EEMancini Geetha Sivasailam](https://twitter.com/gsived) (Artis Consulting) | [@gSiVed Julie Turner(Sympraxis Consulting) | @Jfj1997 Laura Kokkarinen (Sulava) | @LauraKokkarinen Luise Freese | @LuiseFreese Veronique Lengelle (CPS) | @Veronicageek Albert-Jan Schot (BLIS Digital) | @Appieschot Andrew Connell (Voitanos) | @Andrewconnell Andrew Koltyakov (ARVO Systems) | @Andrewkoltyakov Arjun Menon (Tata Consulting Services) | @arjunumenon Beau Cameron (Aerie Consulting) | @Beau__Cameron Chris Kent (DMI) | @TheChrisKent David Warner II (Catapult) | @DavidWarnerII Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp Elio Struyf (Struyf Consulting) | @Eliostruyf Eric Overfield (PixelMill) | @EricOverfield Erwin van Hunen (Valo Intranet) | @Erwinvanhunen Gautam Sheth (Valo Solutions) | @Gautamdsheth João J. Mendes (Valo Solutions) | @Joaojmendes Joel Rodrigues (Storm Technology) | @JoelFMRodrigues Marc D Anderson (Sympraxis Consulting) | @Sympmarc Paolo Pialorsi (Piasys.com) | @PaoloPia Patrick Lamber (Expertsinside AG) | @Patricklamber Paul Bullock (CPS) | @Pkbullock Rick Van Rousselt (Advantive) | @RickVanRousselt Sergei Sergeev | @sergeev_srg Stefan Bauer (n8d) | @StfBauer Stephan Bisser (Solvion) | @Stephanbisser Tetsuya Kawahara | @Techan_k Thomas Gölles (Solvion) | @Thomyg Velin Georgiev (Pramerica) | @Velingeorgiev Yannick Plenevaux (PVX Solutions) | @Yp_code  Microsoft Internal Platform community team members Here are the Microsoft Internal Platform Community team members:\n April Dunnam | @Aprildunnam Natalie Pienkowska | @nataliePienkow1 Rabia Williams | @Williamsrabia Alex Terentiev | @Alexaterentiev Bert Jansen | @O365Bert Bob German | @Bob1German Garry Trinder | @Garrytrinder Hugo Bernier | @Bernierh Koen Zomers | @Koenzomers Mikael Svenson | @MikaelSvenson Patrick Rodgers | @Mediocrebowler Sébastien Levert | @Sebastienlevert Vesa Juvonen | @Vesajuvonen Waldek Mastykarz | @Waldekm Wictor Wilen | @Wictor  Next steps See all of the available community calls, tools, components and other assets from https://aka.ms/m365pnp. Get involved!\nGot ideas or feedback on the topics to cover, additional partnerships, product feature capabilities? - let us know. Your input is important for us, so that we can support your journey in Microsoft 365.\nSharing Is Caring!\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-platform-community-pnp-march-2022-update/images/monthly-summary-march2022_hu908ab6ca5e93ded66140f8e14fd07a57_532364_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-platform-community-pnp-march-2022-update/","tags":[],"title":"Microsoft 365 Platform Community (PnP) – March 2022 update"},{"categories":["Microsoft 365 developer podcast"],"contents":"Jeremy Thake catches up with Tom Morgan about Microsoft Teams development \u0026ldquo;plus\u0026rdquo;. Tom talks about Azure Communication Services, Power Platform and the fusion of devs around the platform.\n Listen to the show: Microsoft Teams development \u0026ldquo;plus\u0026rdquo; with Tom Morgan (m365devpodcast.com)\nLinks from the show  Tom\u0026rsquo;s blog @tomorgan  Microsoft News  Teams JS SDK v2 Public Preview Update: Teams Apps in Office.com \u0026amp; Office App for Windows Integrating real-time Microsoft Graph notifications (GitHub) Integrating real-time Microsoft Graph notifications (video) The End of the REST API for On-Premises Mailboxes Preview  Community Links  Debugging Teams App Locally with Teams Toolkit (@girlie_mac) Introduction to Adaptive Card Studio VS Code extension (@TimCadenbach) Integrate ngrok into ASP.NET Core startup and automatically update your webhook URLs  ","image":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-microsoft-teams-development-quot-plus-quot-with/images/EP272PnP_hu27bf41b03956c631ad18063fc257e179_25912_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-microsoft-teams-development-quot-plus-quot-with/","tags":[],"title":"M365 Dev Podcast - Microsoft Teams development \"plus\" with Tom Morgan"},{"categories":["Community post"],"contents":"With the setValue action on SharePoint/Microsoft Lists JSON formatting, people from the community are creating several solutions or use cases, including myself in the two samples: Quick Approvals and Like/Dislike. The setValue action expands the possibilities of what we can do using list formatting, however, we need to bear in mind that, people are able to easily bypass the rules we implement if they either open the list item from the list form or from the quick edit view.\nWith a few tweaks, we can make it more difficult to happen. This post shows the tweaks on the previous Like/Dislike sample, but the idea can be easily reused in other cases.\n1) Disable Quick Edit (Grid) View By disabling the Quick Edit in views, people will have to interact with any custom button created or with the list forms to modify data.\nTo disable Quick Edit, navigate to the list settings page, and under advanced settings:\n   Disable quick editing:\n2) Hide the fields from the List form In any list view, click New:\n   Under the form customization menu click edit columns:\n   Instead of removing the fields, click Edit formula on the fields you want to hide, and add a condition that is never going to be met:\n   In the example formula below (relating to the Like/Dislike sample), we are only checking if the users count from the Likes (user multi) field is equal to -1 to display the field.\nThis condition will never be met, as the likes count is always greater than or equal to zero:\n   =if(length([$Likes]) == -1,\u0026#39;true\u0026#39;, \u0026#39;false\u0026#39;) This trick needs to be done using conditional formulas because, If the fields are hidden by removing them from the form, the values won’t be accessible by the JSON template.\nThe idea is to have a condition that is never going to be met in the visibility formula, making the field value accessible but always hidden.\nSave the form changes before continuing.\n3) Add the custom JSON content to the form header or footer to display the field values To add a custom header to the previous Like/Dislike sample, the last step is to simply add the custom JSON format to the form header in order to display the values. For this example, the two fields that were hidden in the form will be shown by using the JSON template (as in the earlier formula both Like and Dislike fields were hidden without being removed).\nTo do it, click on the ‘New item’ option as in the previous step, but now select ‘Configure Layout’:\n   And add the JSON template for the Header (or Footer if you prefer to display the values in the Footer):\n   JSON Template { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;row\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-themePrimary\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;=if(indexOf([$Like.email] , @me) \u0026gt; -1, \u0026#39;LikeSolid\u0026#39;, \u0026#39;Like\u0026#39;)\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;padding-right\u0026#34;: \u0026#34;6px\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;=length([$Like]) + \u0026#39; people liked this\u0026#39;\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;padding-right\u0026#34;: \u0026#34;12px\u0026#34; } } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-themePrimary\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;=if(indexOf([$Dislike.email] , @me) \u0026gt; -1, \u0026#39;DislikeSolid\u0026#39;, \u0026#39;Dislike\u0026#39;)\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;padding-right\u0026#34;: \u0026#34;6px\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;=length([$Dislike])+ \u0026#39; people disliked this\u0026#39;\u0026#34; } ] } ] } Save the form changes, and now the list form will now look like this, with the read-only values displayed in the header:\nConclusion This trick makes it harder for people to edit the values in the form, however, it does not lock the fields fully. Be aware that people can use SharePoint APIs, Power Automate or Power Apps to bypass the read-only values if they have collaboration permissions in the lists or libraries.\nAdditional References Conditional formulas for form fields reference: Show or hide columns in a list or library form\n","image":"https://pnp.github.io/blog/post/displaying-selected-sharepoint-form-fields-read-list-formatting/images/likeheader_hu070978a0ea865a2e654a3ea8e1323b4d_11938_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/displaying-selected-sharepoint-form-fields-read-list-formatting/","tags":["List formatting","Microsoft Lists","SharePoint"],"title":"Displaying selected SharePoint form fields as read-only using List Formatting"},{"categories":["Community post"],"contents":"PnP PowerShell has a set of cmdlets to manage custom list templates.\nAdd-PnPListDesign\nGet-PnPListDesign\nRemove-PnPListDesign\nInvoke-PnPListDesign\nThis article explores how to use PnP PowerShell scripts to manage list templates and create multiple instances of document libraries using a CSV file.\nAdd List Template A list template can be created using an existing configured document library with custom content types, fields and views.\nThe script below is used to create a list template for the document library using Get-PnPSiteScriptFromList and Add-PnPListDesign.\n$adminSiteUrl = \u0026#34;https://contoso-admin.sharepoint.com\u0026#34; $listUrl = \u0026#34;https://contoso.sharepoint.com/sites/investment/test_ct\u0026#34; Connect-PnPOnline -url $adminSiteUrl -interactive $extracted = Get-PnPSiteScriptFromList -url $listUrl Add-PnPSiteScript -Title \u0026#34;Test Document Library\u0026#34; -Description \u0026#34;This creates a custom document library\u0026#34; -Content $extracted $siteScripts = Get-PnPSiteScript $siteScriptObj = $siteScripts | Where-Object {$_.Title -eq \u0026#34;Test Document Library\u0026#34;} Add-PnPListDesign -Title \u0026#34;Test Document Library\u0026#34; -Description \u0026#34;Deploy document library with content types and views\u0026#34; -SiteScriptIds $siteScriptObj.Id-ListColor Pink -ListIcon BullseyeTarget Note: ListColor and ListIcon parameters are from the create list experience\n   The template will be available From your organization section from Create a list.\n   Creating lists/libraries using Invoke-PnPListDesign From your organization under Templates section from Create a list, the custom template can be used to create a new library. Once selected the template is loaded and click on Use Template to provide a name, description for the library.\n   Once Create is clicked the library is created with the relevant views , content types and fields defined in the template. That\u0026rsquo;s great that we can create a document library using the custom list/library template, however there are some settings like versionings , indexed columns, permissions, etc.. which are not included in the list design template yet. The cmdlet Invoke-PnPListDesign can be used to apply the list design recursively to create multiple instances of the document library updating the internal name and display name based on the csv file and update the settings like indexed columns and versioning.\nSample CSV file format saved as libraries.csv\nInternalName,DisplayName AR,Annual Reports CR,Credit Risk Audit,Audit PO,Purchase Orders Execute the Invoke-PnPListDesign cmdlet\n[CmdletBinding()] Param( [Parameter(Mandatory=$false, Position=0)] [String]$adminSiteUrl = \u0026#34;https://contoso-admin.sharepoint.com\u0026#34;, [Parameter(Mandatory=$false, Position=1)] [String]$siteUrl = \u0026#34;https://contoso.sharepoint.com/sites/investment\u0026#34;, [Parameter(Mandatory=$false, Position=2)] [String]$librariesCSV = \u0026#34;C:\\Scripts\\DocumentLibraryTemplate\\libraries.csv\u0026#34;, [Parameter(Mandatory=$false, Position=4)] [String]$listDesign = \u0026#34;Test Document Library\u0026#34; ) #creating indexed columns might help with performance of large libraries, i.e. \u0026gt;5000 files function Create-Index ($list, $targetFieldName) { $targetField = Get-PnPField -List $list -Identity $targetFieldName $targetField.Indexed = 1; $targetField.Update(); $list.Context.ExecuteQuery(); } Connect-PnPOnline -Url $siteUrl -Interactive Import-Csv $librariesCSV | ForEach-Object { Invoke-PnPListDesign -Identity $listDesign -WebUrl $siteUrl #Get library just created and update Internal name and display name $lib = Get-PnPList -Identity \u0026#34;test_ct\u0026#34; -Includes RootFolder while(!$lib) { $lib = Get-PnPList -Identity \u0026#34;test_ct\u0026#34; -Includes RootFolder sleep -second 5 } if($lib) { $lib.Rootfolder.MoveTo($($_.InternalName)) Invoke-PnPQuery #this will change library title  Set-PnPList -Identity $lib.Id -Title $($_.DisplayName) #add list to quick launch Add-PnPNavigationNode -Title $_.DisplayName -Url $($_.InternalName + \u0026#34;/\u0026#34;) -Location \u0026#34;QuickLaunch\u0026#34; #enable versioning on the library Set-PnPList -Identity $lib.Id -EnableVersioning $True -EnableMinorVersions $True -MajorVersions 500 -MinorVersions 10 Write-host \u0026#34;`tSetting versioning to major/minor to :\u0026#34;$_.DisplayName Create-Index $lib \u0026#34;Created By\u0026#34; Create-Index $lib \u0026#34;Modified\u0026#34; } } OutPut\nPS C:\\Windows\\system32\u0026gt; C:\\Scripts\\DocumentLibraryTemplate\\ApplyListDesignToCreateLibaries.ps1 Title OutcomeText Outcome ----- ----------- ------- Create site column WorkAddress through XML Success Create site column _Status through XML Success Create site column digits through XML Success Create site column remarks through XML Success Create site column workinghours through XML Success Create site column Progress through XML Success Create content type Legal NoOp Add site column WorkAddress to content type NoOp Add site column _Status to content type NoOp Create content type test_210304 NoOp Add site column digits to content type NoOp Add site column remarks to content type NoOp Add site column workinghours to content type NoOp Add site column Progress to content type NoOp Add site column _Status to content type NoOp Create content type test_StatusComm NoOp Add site column _Status to content type NoOp Create content type test_11 NoOp Add site column _Status to content type NoOp Create or update library \u0026quot;test_ct\u0026quot; List with name test_ct already exists. NoOp Add list column \u0026quot;ActualWork\u0026quot; List with name test_ct already exists. NoOp Add list column \u0026quot;Initials\u0026quot; List with name test_ct already exists. NoOp Add list column \u0026quot;_Status\u0026quot; List with name test_ct already exists. NoOp Add list column \u0026quot;digits\u0026quot; List with name test_ct already exists. NoOp Add list column \u0026quot;remarks\u0026quot; List with name test_ct already exists. NoOp Add list column \u0026quot;workinghours\u0026quot; List with name test_ct already exists. NoOp Add list column \u0026quot;Progress\u0026quot; List with name test_ct already exists. NoOp Add list column \u0026quot;_Comments\u0026quot; List with name test_ct already exists. NoOp Add list column \u0026quot;TriggerFlowInfo\u0026quot; List with name test_ct already exists. NoOp Add list column \u0026quot;SelectFilename\u0026quot; List with name test_ct already exists. NoOp Add content type \u0026quot;Document\u0026quot; List with name test_ct already exists. NoOp Add content type \u0026quot;Folder\u0026quot; List with name test_ct already exists. NoOp Add content type \u0026quot;Legal\u0026quot; List with name test_ct already exists. NoOp Add content type \u0026quot;test_210304\u0026quot; List with name test_ct already exists. NoOp Add content type \u0026quot;test_StatusComm\u0026quot; List with name test_ct already exists. NoOp Add content type \u0026quot;test_11\u0026quot; List with name test_ct already exists. NoOp Add view \u0026quot;All Documents\u0026quot; List with name test_ct already exists. NoOp Add view \u0026quot;All Documents sorted\u0026quot; List with name test_ct already exists. NoOp Annual Reports Setting versioning to major/minor to : Annual Reports  Libraries created after running the script\n   The custom template for lists/libraries and the ability to invoke the list design programmatically can speed up deploying standardised lists/document libraries.\nDeleting list templates using Remove-PnPListDesign The list template can be deleted by removing the list design followed by the site script. The script below removes a list design with the associated site script.\n$adminSiteUrl = \u0026#34;https://contoso-admin.sharepoint.com/\u0026#34; $listDesignName = \u0026#34;Test Document Library\u0026#34; Connect-PnPOnline -url $adminSiteUrl -Interactive $listDesign = Get-PnPListDesign -Identity $listDesignName $siteScriptId = $listDesign | select SiteScriptIds $siteScript = Get-PnPSiteScript -Identity $siteScriptId.SiteScriptIds.Guid Remove-PnPListDesign -Identity $listDesignName -Force Remove-PnPSiteScript -Identity $siteScript -Force ","image":"https://pnp.github.io/blog/post/pnp-powershell-to-manage-list-designs-and-create-lists-libraries/images/reshmeeauckloo_3-1646365567131_huc207e799a40bdac6632dbb31bdc98cf3_53075_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/pnp-powershell-to-manage-list-designs-and-create-lists-libraries/","tags":["PnP PowerShell"],"title":"PnP PowerShell to manage list designs and create lists/libraries using list designs"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"Viva Connections \u0026amp; SharePoint Framework bi-weekly community call recording from March 10th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\n  Call summary  Tune in each Tuesday for the Microsoft 365 platform community call. Next call on the 15th of March @ 8 AM PT  Latest news from Microsoft engineering on Microsoft 365 topics Mark Kashman, Lincoln DeMaris, Harini Saladi, Miceile Barrett – Fit and format Microsoft Lists for work and life  Sébastien Levert - Building MGT apps with SharePoint Q\u0026amp;A   Register for training events this quarter hosted by Sharing is Caring. Next week: AMA (Ask Me Anything) – PnPjs – Tuesday, March 15th, 9am PST and PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – Monday, March 14th, 2pm PST Register for the PnP Recognition Program. SharePoint Framework v1.15 public developer preview is now available! Hear about v1.15 beta features released today and in development. v1.15 GA Release ETA - June 2022  PnP project releases in the last two weeks:  SharePoint Framework – v1.15 beta PnPjs – v2.13 \u0026amp; v3.1.0  CLI for Microsoft 365 – v5.1 preview   2 ACE samples were delivered in the last two weeks! Your contributions are greatly appreciated by members of this community.  Latest project updates (Bold indicates update from previous report 2 weeks ago)    PnP Project Current version Release/Status     SharePoint Framework (SPFx) v1.14 GA, v1.15 Beta v1.15 GA in June 2022   PnPjs Client-Side Libraries v2.13 GA, v3.1.0 GA Note: v2.13 will be the final v2 release   CLI for Microsoft 365 v4.3.0 GA, v5.1 Preview    Reusable SPFx React Controls v3.6.0, v2.9.0 (SPFx v1.11)    Reusable SPFx React Property Controls v3.5.0, v2.7.0 (SPFx v1.11)    PnP SPFx Generator v1.16.0 v1.17.0 on the way   PnP Modern Search v4.5.4, v3.23.0     The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place as always in chat throughout the call.\n Thank you for joining the call today and/or for viewing the recording. Can anyone explain why seats in the middle are empty today? You are not in an airplane. Are the seats out of order? Actions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  AMA (Ask Me Anything) – PnPjs – Tuesday, March 15th, 9am PST AMA (Ask me anything) - Viva ACE – Coming Soon First Time Contributor Session – TBS soon Community Docs Session – TBS soon Power Platform Samples – First Time Contributor – TBS soon PnP – SPFx Developer Workstation Setup – TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – Monday, March 14th, 2pm PST First Time Presenter – TBS soon More than Code with VSCode – TBS soon Maturity Model Practitioners – TBS soon (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/spdev-spfx-call  Demos   My Emails Viva Connections Adaptive Card Extension – this Adaptive Card Extension (ACE) displays emails for the currently logged in user. Walk through code to see how to get the current user’s email message from the Graph and render it in SPFx ACE Card View with previous and next buttons to navigate between emails. Demonstrates how to modify Quick View to display email detail on click of any Email from Card View.   Getting started with Microsoft Graph Toolkit and SharePoint Framework – use Microsoft Graph Toolkit (MGT) together with SharePoint Framework (SPFx) and custom templates to display agendas, files, tasks, messages and more. Set up your environment - install mgt-spfx, mgt-spfx npm, and mgt React components packages. Instantiate the SharePointProvider. Finally, import selected MGT React components into your web part and grant permissions to SPO. See how presenter uses GET component and renders results in custom templates.   Using Microsoft Graph APIs in Viva Connection ACEs – learn how you can consume Microsoft Graph APIs within ACEs. Use Graph in an ACE to read from and write to calendar. Step through configuring webApiPermissionRequests in package-solution.json file, granting permissions via SPO Admin UI and consuming Microsoft Graph via SPFx context object (MSGraphClient) and binding the data to the UI of CardView(s) and/or QuickView(s). Deploy solution with sppkg package with stated permissions requirements.   SPFx extension samples https://aka.ms/spfx-extensions\n Processing entries, next call!   SPFx web part samples https://aka.ms/spfx-webparts\n Processing entries, next call!   PnP SPFx ACEs https://aka.ms/spfx-aces\n My Calendar Plan - João Mendes | @joaojmendes Weather ACE* - Aakash Bhardwaj (HCL Technologies) | @aakash_316  * To be posted soon.\nThank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen – 6:40 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 – 8:44 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler – 10:51 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler – 11:42 PnP Modern Search - Patrick Rodgers (Microsoft) | @mediocrebowler – 12:25 PnP SPFx ACEs Samples - David Warner II (Catapult Systems) | @DavidWarnerII – 13:00  Demos  Demo 1: My Emails Viva Connections Adaptive Card Extension – Siddharth Vaghasia | @siddh_me – 15:52 Demo 2: Getting started with Microsoft Graph Toolkit and SharePoint Framework – Yves Habersaat (Sword Group) | @yhabersaat – 28:30 Demo 3: Using Microsoft Graph APIs in Viva Connection ACEs – Paolo Pialorsi (PiaSys) | @PaoloPia – 39:56  Resources Additional resources around the covered topics and links from the slides.\n D1: Article - How to call and show Graph API data in SPFx Adaptive Card Extensions (ACEs)  D1: Article - Create your first Adaptive Card Extensions (ACEs) with SPFx  D1: Sample - My Emails  D2: Repo – Microsoft Graph Toolkit - v2.4.0 D2: Demo - Using the Microsoft Graph Toolkit Get Component in your solutions – Sébastien Levert (Microsoft) | @sebastienlevert  D2: Documentation - Get component in the Microsoft Graph Toolkit  D2: MGT Playground – mgt-get  D3: Documentation - List events  D3: Demo - Viva Connections – Data Binding in SPFx Adaptive Card Extensions – Paolo Pialorsi (PiaSys) | @PaoloPia  Microsoft 365 PnP Weekly – Episode 156 (March 7th) with Portugal based, technologist, author, MVP Office Dev and Windows Insider, João Ferreira (Beezy) | @Joao12Ferreira | video | podcast Microsoft 365 PnP Weekly – Episode 155 (February 28th) with Dubai based, Senior Cloud Advocate, Ayça Baş (Microsoft) | @aycabs| video | podcast  General Resources  Viva Connections https://aka.ms/VivaConnections Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  Tools - Teams Toolkit (v2.2 Preview)  Tools - Microsoft Teams Framework (TeamsFx)  Gallery - Microsoft 365 Extensibility look book gallery  Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions SharePoint Framework - v1.12.1 npm install –g @microsoft/generator-sharepoint@next CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring Tools - PnP Modern Search v4 | https://aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other mentioned topics  SharePoint dev documentation SharePoint dev issue list  Upcoming calls | Recurrent invites  Microsoft 365 platform call – March 15th at 8:00 am PST | https://aka.ms/m365-dev-call Power Apps monthly call – March 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call – March 17th at 7:00 am PST | https://aka.ms/m365-dev-sig Microsoft Identity Platform call – March 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Viva Connections \u0026amp; SharePoint Framework call – March 24th at 7:00 am PST | https://aka.ms/spdev-spfx-call Office add-in monthly call – April 13th at 8:00 am PST | https://aka.ms/officeaddinscall Adaptive Cards monthly call – April 14th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall  Viva Connections \u0026amp; SharePoint Framework bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Connections, Microsoft Teams, SharePoint Online, and also on-premises. Calls are used for the following objectives.\n SharePoint Framework engineering update from Microsoft Talk about PnP JavaScript Core libraries Office 365 CLI Updates SPFx reusable controls PnP SPFx Yeoman generator Share code samples and best practices Possible engineering asks for the field - input, feedback, and suggestions Cover any open questions on the client-side development Demonstrate SharePoint Framework in practice in Microsoft Viva, Microsoft Teams or SharePoint context You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!  Related documents   10.03.2022 - Getting started with Microsoft Graph Toolkit and SharePoint Framework.pdf (289 KB)  PnP SIG (JavaScript) - Weekly 20220310.pptx (289 KB)  _“Sharing is caring”_ * * * _Microsoft 365 PnP team, Microsoft - 11th of March 2022_ ","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-10th-of/images/recording-10th-march_hu261bbb5ccb97d744152a2ce629c86525_247163_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-10th-of/","tags":["Adaptive Card Extensions","Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)","Viva Connections"],"title":"Viva Connections \u0026 SharePoint Framework Community Call – 10th of March, 2022"},{"categories":["Community post"],"contents":"Introduction If you are a Power App or Power Automate developer, chances are you had to move your creations between SharePoint sites or even Microsoft 365 tenants. At the very least, you were probably wondering about the easiest ways of doing it. Perhaps, you were trying to establish separate development, staging and production environments. Or you wanted to share your solution with a client or a friendly department within your organization.\nIf you are using Solutions and Dataverse for your development, chances are these migrations are not very difficult. A combination of environment variables and the Dataverse tables, takes care of most complexities including packaging data sources and parametrization\nThis is why it is recommended to always develop apps and flows as part of a solution as opposed to standalone ones. Solutions allow us to expose all configurations via environment variables.\nHowever, solutions are not used every time for one reason or another. On top of it, the majority of apps and flows are still using SharePoint lists and libraries as a data source instead of Dataverse tables.\nAs a result, you will still face a few challenges when migrating:\n SharePoint lists need to be migrated separately since they are not packaged within a Power Platform solution. Site and list URLs need to be replaced manually after migration.  About Flow and App Migrator Flows and Power Apps Migrator is an open-source portable tool that lets you migrate apps and flows that primarily use SharePoint as a data source. With it:\n You can continue developing with or without solutions and environment variables. Don\u0026rsquo;t have to worry about hardcoded SharePoint URLs. Don\u0026rsquo;t have to migrate SharePoint lists, libraries and content types. The tool does it for you.  Using Flow and App Migrator   Navigate to https://github.com/Zerg00s/FlowPowerAppsMigrator\n  Download the latest release\n  Extract the ZIP package\n  Export your flows, apps and solutions to the src folder:\n             Launch on Migrate-Packages.bat file.\n     Enter source site URL and target site URL.\n     Select OK.\n  Select lists and libraries to migrate. These are dependencies used by your flows and apps.\n     Select OK. Sit back and wait for the lists and libraries to be migrated and the conversion process to finish.\n  Navigate to the dist folder and collect converted flows, apps and solutions\n     Now go ahead and import your flows and apps to the destination tenant or environment. All SharePoint actions are now be converted and point to the new SharePoint location. You will also notice that SharePoint dependencies were migrated.\n     Bonus: Preparing a deployment package for your clients and partners On your end   Run Prepare-Deployment-Package-for-Client.bat to create a deployment package that you can share with your clients or partners. This script will generate a package folder on disk.\n  Export your solutions, apps and flows and save them to the package\\src folder.\n     Send the package folder to your client or partner.\n  On the client\u0026rsquo;s side  If not already exists, create a SharePoint Online site. It will contain SharePoint Lists and Libraries that Power Apps/Flows require. Open the package directory. Run the Convert-Packages.bat script. Provide a target site URL. Import all solutions, flows and apps from the dist directory.  Credits to the PnP PowerShell team Behind the scenes, Flow and Power Apps migrator uses a PowerShell PnP module for exporting and importing provisioning templates.\nConclusion As you can see, Flow and Power Apps Migrator makes your migration process simpler. Likewise, a deployment process for your clients is significantly simplified.\n","image":"https://pnp.github.io/blog/post/flow-and-app-migrator/images/flow-migrator_hu3ae4cd0c1067bdacc1d3b8e65ca5e459_102593_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/flow-and-app-migrator/","tags":["Power Apps","Power Automate","SharePoint","DataVerse"],"title":"Migrate Cloud Flows and Canvas Apps across tenants"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Portugal based, technologist, author, MVP Office Dev and Windows Insider, João Ferreira (Beezy) | @Joao12Ferreira.\nTopics discussed in this session:\n Comments on authoring 1 blog post a day through the entire month of February.  Thoughts on the Microsoft 365 Platform – extending or bending capabilities?  What do in Technical Lead Role at Beezy?  About publishing Hands-On books for Microsoft SharePoint, Microsoft Lists and Microsoft Teams Articles and audiences for João’s 4 blogs found at https://handsontek.net/  What is the one thing Microsoft could offer to make SharePoint better? Thoughts on Viva Connections? Why share knowledge for free in samples and blogs?   We also covered 14 articles published by Microsoft and the PnP Community over the last week. This week  Waldek – is working with Alex Terentiev (Microsoft) | @alexaterentiev, to build a command to validate an SPFx project set-up, tips on improving Teams app developer experience using Angular. Vesa – meetings, meetings and meetings + SPFx v1.15 preview release.  João – investigating tech opportunities, prepping View Formatting samples and documentation to share with PnP Community.  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, March 7, 2022. Enjoy the show.  Video at Microsoft 365 Community YouTube channel.    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!” Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Manage and expand your Viva Connections Feed to create a culture of connectivity - Graham Kent (Microsoft) | @grahamismyname SharePoint Roadmap Pitstop: February 2022 - Mark Kashman (Microsoft) | @mkashman Microsoft 365 Conference – OneDrive, SharePoint, and Viva keynotes, sessions, and workshops - Mark Kashman (Microsoft) | @mkashman Learn from the community: Low-code Q\u0026amp;A bot for Microsoft Teams helps communities provide better onbo\u0026hellip; - Ayça Baş (Microsoft) | @aycabs  Community articles  Assigning a built-in role to the group at resource group scope level using PowerShell scripts - Shrusti Shah (Rapid Circle)  Build Your First SharePoint Adaptive Card Extension – That You’ll Actually Use! - Mark Rackley (Avanade) | @mrackley Restrict calls from SPFx in(side) Azure Functions - Markus Möller (Avanade) | @Moeller2_0 Microsoft Teams + Home Assistant + Graph = take your presence to the next level - Loryan Strant (Rapid Cricle) | @LoryanStrant Keeping up to date with the Microsoft Graph changelog - Loryan Strant (Rapid Cricle) | @LoryanStrant Dear Microsoft: Please Fix the Search \u0026amp; Intelligence Center, Which Gives Us Only Minimal Insights - Marc Anderson (Sympraxis Consulting) | @sympmarc Multi-lingual Term Sets in Search? - Agnes Molnar (Search Explained) | @molnaragnes Developing SPFx solutions using containers - Introduction - Don Kirkham (DMI) | @DonKirkham Power Of Audience Targeting With Dynamic Groups In SPO - Paul Bullock (CaPa Creative Ltd) | @pkbullock Episode #195 - Managing Content Types in SharePoint Online via Microsoft Graph - Paolo Pialorsi (PiaSys) | @PaoloPia João Ferreira - Hand On Tek - João Ferreira (Beezy) | @Joao12Ferreira  Additional resources  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026quot; ","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-156-jo%C3%A3o-ferreira/images/Thumb-Ep156-March1_hue65295ad5e332426cab5559c97d5247d_650060_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-156-jo%C3%A3o-ferreira/","tags":["Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 PnP Weekly - Episode 156 - João Ferreira"},{"categories":["Microsoft 365 developer podcast"],"contents":"Fabian Williams joins Jeremy and Paul to talk about Universal Actions and updates to Adaptive Cards.\n  Listen to the show here: Universal Actions and Adaptive Card Updates with Fabian Williams (m365devpodcast.com)\nLinks from the show  bot-sequential-flow-adaptive-cards Teams Catering Bot Adaptive card with request for approval is also sent to the approver’s email User attribution for bots messages Up-to-date cards  Microsoft News  Microsoft Graph Fundamentals for Beginners Announcing new permissions for Teams chats and tags APIs Microsoft Graph Mailbag - Search DriveItems for Only Files Finding Permissions with Microsoft Graph PowerShell SDK Breaking changes in the Microsoft Graph Tasks API (beta)  Community Links  Keeping up to date with the Microsoft Graph changelog (@LoryanStrant) SharePoint Framework v1.14 - What\u0026rsquo;s in the latest Update of SPFx? (@andrewconnell)  ","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-universal-actions-and-adaptive-card-updates-with-fabian-williams/","tags":[],"title":"M365 Dev Podcast - Universal Actions and Adaptive Card Updates with Fabian Williams"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from March 8th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules (74+) to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 960+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring this month. Upcoming AMA on PnPjs – March 15th. Tune into the weekly  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics – hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Microsoft 365 PnP Weekly - Videos, Podcasts focused on the latest news and topics on Microsoft 365 hosted by Vesa Juvonen and Waldek Mastykarz   Teams Platform Updates including Manifest v1.12, Share-to-Stage, Monetized apps - In-app purchase and Test Preview, plus documentation updates.  Hear about the latest 3 Microsoft 365 Platform related stories and view 3 great demos delivered by Microsoft presenters on the latest capabilities of the Microsoft 365 platform. New series launched – Learn from the community. This week’s article: Learn from the community: Employee survey solution built with Microsoft Teams and Power Platform. Sign up to Share your story  The host of this call was Brian T. Jackett (Microsoft) |@BrianTJackett. Q\u0026amp;A takes place in chat throughout and live at end of the call.\nMicrosoft 365 Platform News Flash  Learn from the community: Employee survey solution built with Microsoft Teams and Power Platform - Ayça Baş (Microsoft) | @aycabs Debugging Microsoft Teams app locally with Teams Toolkit - Tomomi Imura (Microsoft) | @girlie_mac End-of-service for SharePoint Online Machine Translation Service and APIs - Microsoft  Actions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  AMA (Ask Me Anything) – PnPjs – Tuesday, March 15th, 9am PST AMA (Ask me anything) - Viva ACE – Coming Soon First Time Contributor Session – TBS soon Community Docs Session – TBS soon Power Platform Samples – First Time Contributor – TBS soon PnP – SPFx Developer Workstation Setup – TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – Tuesday, March 15th, 2pm PST First Time Presenter – TBS soon More than Code with VSCode – TBS soon Maturity Model Practitioners – TBS soon (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Social distancing? Always great to see everyone so virtually close while being located so physically far from one another. In person events soon! Demos  Managing your Viva Connections and SharePoint Framework solutions using the new Apps site in SharePoint Online –​ completely Modernized App Catalog – Modernized app request process and Modernized app catalog experiences. One place to upload, manage (app request and approval) and deploy SPFx solutions (custom components) in an organization. Existing catalog UX will be updated (aligned to typical Admin UX), no action on your part and no impact on existing catalog functionality. Demo and next steps on SPFx store and app catalog reviewed. Building a bot for Microsoft Teams which detects user presence changes – deliver presence change notifications with Bot + Graph. The Microsoft Graph REST API uses a webhook mechanism to deliver change notifications to user. The bot subscribes to presence change notification and notifies when user status is changed. Clearly defined execution steps shown along with targeted code walkthrough for configuring and running this sample locally. Uses Bot Framework SDK v4, Graph APIs, and subscription service. Building MGT apps with Angular – MGT is Framework agnostic. If you\u0026rsquo;re building apps with Angular, you can use Microsoft Graph Toolkit components. To get started – install the Angular CLI, use the Angular CLI to scaffold up a new web application (ng new angular app name), then install MGT. In this demo see how the mgt-login and mgt-agenda components are added within Angular components.  Thank you for your creativity and work execution. Samples are often showcased in Demos.\nTopics  Latest updates and news on the Microsoft 365 platform – Brian T. Jackett (Microsoft) |@BrianTJackett – 6:52 D1: Managing your Viva Connections and SharePoint Framework solutions using the new Apps site in SharePoint Online –​ Vesa Juvonen (Microsoft) | @vesajuvonen – 12:02 D2: Building a bot for Microsoft Teams which detects user presence changes –​ Wajeed Shaikh (Microsoft) | @Wajeed_Shaikh – 29:40 D3: Building MGT apps with Angular –​ Sébastien Levert (Microsoft) | @sebastienlevert – 43:41  Resources Additional resources around the covered topics and links from the slides.\n D2: Repo - Microsoft Teams Samples | aka.ms/TeamsSamples D2: Sample – Graph change notification  D2: Documentation - Support and feedback | aka.ms/TeamsPlatformFeedback  D2: Documentation – Send proactive messages  D2: Documentation - Set up notifications for changes in user data  D2: Learn - Use Change Notifications and Track Changes with Microsoft Graph  D3: Documentation - Use the Microsoft Graph Toolkit with Angular | aka.ms/mgt/angular D3: Article - A Lap around Microsoft Graph Toolkit Day 14 – Using Microsoft Graph Toolkit with Angular  D3: Angular - CLI Overview and Command Reference  D3: Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/mgt/docs D3: Documentation - Styling components in the Microsoft Graph Toolkit  D3: Documentation - Microsoft Graph Toolkit caching  D3: Documentation - Localizing the Microsoft Graph Toolkit components  D3: MGT Playground - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | https://mgt.dev/ D3: Sebastien’s MGT Demos Repo - MGT Sandbox | aka.ms/mgt/sandbox D3: MGT Demos Playlist - Microsoft Graph Toolkit – YouTube D3: Issues – MGT Issus | aka.ms/mgt/issues D3: Learn – Develop apps with the Microsoft Graph Toolkit | https://aka.ms/mgt/learn  Microsoft 365 PnP Weekly – Episode 156 (March 7th) with Portugal based, technologist, author, MVP Office Dev and Windows Insider, João Ferreira (Beezy) | @Joao12Ferreira | video | podcast  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on Github PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Office add-in monthly call – March 9th at 8:00 am PST | https://aka.ms/officeaddinscall Viva Connections \u0026amp; SharePoint Framework call – March 10th at 7:00 am PST | https://aka.ms/spdev-spfx-call Adaptive Cards monthly call – March 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall Microsoft 365 platform call – March 15th at 8:00 am PST | https://aka.ms/m365-dev-call Power Apps monthly call – March 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call – March 17th at 7:00 am PST | https://aka.ms/m365-dev-sig Microsoft Identity Platform call – March 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members. More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\nRelated documents   M365 platform - Weekly 20220308.pptx (284 KB)  modern-app-catalog-community-call-update-220308.pptx (284 KB)  _“Sharing is caring”_ * * * _Microsoft 365 PnP team, Microsoft - 9th of March 2022_ ","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-8th-of-march-2022/images/recording-8th-march_hu47de9dc7f7e945aa091297bcf2f38a73_566201_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-8th-of-march-2022/","tags":["Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 Platform Call – 8th of March, 2022"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"   Call summary One location the Microsoft 365 tenant – script samples gallery (140 scenarios and 198 scripts) now integrated into Sample Solution Gallery! Sign up and attend an AMA and other events this month hosted by Sharing is Caring. Power Platform Samples – First Time Contributor – Tuesday, March 8th, 2:00pm PT and AMA (Ask Me Anything) – PnPjs – Tuesday, March 15th, 9am PST. Get the recognition you deserve, sign up for the PnP Recognition Program. Join the Microsoft 365 platform call on 8th of March, @ 8 AM PT. Recently refreshed the MGT playground! To see current releases and latest updates/nightly builds, access the Repos via the links in table below. There were 6 new/updated script, 3 Teams and 1Power Platform samples delivered this week. Open-source project status (Bold indicates new this call)\n   Project Current Version Release/Status     PnP .NET Libraries - PnP Framework v1.8.0 GA with .NET 6.0 support added Prepping v1.9   PnP .NET Libraries - PnP Core SDK v1.5.0 GA with .NET 6.0 support added Prepping v1.6   PnP PowerShell v1.9.0 GA Release v1.10.0 imminent (next week?), In progress: V2 POC - .NET 6.0 based, Requires PowerShell 7.2   Yo teams - generator-teams v3.5.0 GA v4.0.0-next   Yo teams - yoteams-build-core v1.6.0    Yo teams – yoteams-deploy v1.1.0 GA    Yo teams - msteams-react-base-component v3.1.1    Microsoft Graph Toolkit (MGT) v2.3.2 GA Working on v3.0.0 - Aligning all Toolkit components to Fluent UI Web Components    Note\nWhile version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities.\n The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\nActions   Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Join us at the next Microsoft 365 platform call 8th of March @ 8 AM PT\n Latest news from Microsoft engineering on Microsoft 365 topics Demos:  Yi Han \u0026amp; Vesa Juvonen - Managing your Viva Connections and SharePoint Framework solutions using the new Apps site in SharePoint Online  Wajeed Shaikh - Building a bot for Microsoft Teams which detects user presence changes using Microsoft Graph Sébastien Levert - Building Microsoft Graph Toolkit apps with Angular      Register for Sharing is Caring Events:  AMA (Ask Me Anything) – PnPjs – Tuesday, March 15th, 9am PST AMA (Ask me anything) - Viva ACE – Coming Soon First Time Contributor Session – TBS soon Community Docs Session – TBS soon Power Platform Samples – First Time Contributor – Tuesday, March 8th, 2:00pm PT PnP – SPFx Developer Workstation Setup – TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – Tuesday, March 15th, 2pm PST First Time Presenter – TBS soon More than Code with VSCode – TBS soon Maturity Model Practitioners – TBS soon (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy    Download the recurrent invite for this call – http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter.\n  Microsoft Teams Development Samples https://aka.ms/TeamsSampleBrowser\n Teams Tab with React Routing and yo teams - Siddharth Vaghasia | @siddh_me and Kunj Sangani | @sanganikunj The famous Contoso HR App sample has been renewed! - Jack Lewis (Microsoft) and Scott Perham (Microsoft) Tab-SSO sample (updated) – Eduardo Cáceres  Microsoft Power Platform Samples https://aka.ms/powerplatform-samples\n Dataverse Admin App* - Vivek Bavishi | @that_API_guy  *These latest samples should show on site shortly after this call\nScript Samples https://aka.ms/script-samples\n2 New Scenarios and 4 Script Updates:\n New Scenarios  List all teams and teams members in Microsoft Teams in the tenant - Chandani Prajapati | @Chandani_SPD Sample on exporting Document libraries inc folders and versions for selected Site Collections to a F\u0026hellip; - Kasper Bo Larsen | @kasperbolarsen   Updates or scenarios implemented with alterative tools  Teams Full Report - Reshmee Auckloo | @reshmeeauckloo Export a csv report on all Microsoft Stream videos - Twan van Beers Hide SharePoint list from Site Contents - Leon Armston | @LeonArmston Add App Catalog to SharePoint site - Chandani Prajapati | @Chandani_SPD    Article: Getting started with PnP Script Samples – aka.ms/script-samples/getting-started\n– Many thanks!\nTogether Mode!  Thanks everyone for joining the call today. It’s awesome to see your faces. Demos Updates on Independent Publisher Connectors \u0026amp; LibreBor Connector Demo – there are 72 Independent Publisher Connectors in production and 42 in the pipeline today! LibreBor APIs retrieve company details from the Spanish Register. Information such as acquisitions, incorporations, Directors, NIF (Tax Identification Number) validation and more. This Preview LibreBor connector retrieves information from LibreBor APIs and makes it available in Logic Apps, Power Apps and Power Automate, in most regions with some exceptions. Migrating Cloud Flows using Flow \u0026amp; Apps migrator – deploying apps and flows to production? Move canvas apps or cloud flows across Microsoft 365 tenants or sites using this migration tool that automatically converts exported flows and apps to be compatible with targeted environment. As well, the tool helps you migrate SharePoint lists used as a dependency for your Apps and Flows, converts SharePoint List Forms customized with Power Apps and more.\nCreating a To Do list for Microsoft Lists and SharePoint using View Formatting – expose Microsoft To Do (task list) capabilities and similar UI in Microsoft Lists and SharePoint. Step through creating a list, tasks, and a To Do view. Review view formatting code for groups, status, title, date, description/notes, tags, attachments, comments, favorites, item detail, edit form, update details, delete task. Very soon the 500 lines of code in a template will be available in List Formatting repo. Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics  PnP .NET library updates - David Warner II (Catapult Systems) | @DavidWarnerII – 7:05 PnP PowerShell updates - David Warner II (Catapult Systems) | @DavidWarnerII – 7:31 yo Teams updates - Wictor Wilén (Microsoft) | @wictor – 8:13 Microsoft Graph Toolkit updates - Sébastien Levert (Microsoft) | @sebastienlevert – 8:58 Microsoft Script Samples - Paul Bullock | @pkbullock – 2:43 Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German – 10:30 Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam – 12:37 Demo 1: Updates on Independent Publisher Connectors \u0026amp; LibreBor Connector Demo – Natalie Pienkowska (Microsoft) | @NataliePienkow1 \u0026amp; Marco Amoedo (KPMG) | @marcoamoedo \u0026amp; Mario Trueba (KPMG) | @MarioTrueba365 – 14:50 Demo 2: Migrating Cloud Flows using Flow \u0026amp; Apps migrator – Denis Molodtsov (Point Alliance) | @Zerg00s – 27:19 Demo 3: Creating a To Do list for Microsoft Lists and SharePoint using View Formatting – João Ferreira (Beezy) | @joao12ferreira – 36:15  Resources Additional resources around the covered topics and links from the slides.\n D1: Documentation - LibreBor (Independent Publisher) (Preview)  D1: Repo - Libre Bor Connector  D1: Connectors - Welcome to the Independent Publisher Connector Directory! D1: Call – Power Platform Integration LABs call – last Wednesday of each month at 11am ET/8:00 am PT. Join call at – https://aka.ms/PowerPlatformintegrationLABs D2: Tool Repo - Flow \u0026amp; Power Apps Migrator  D3: Article - How to create a To Do list using SharePoint and Microsoft Lists view formatting – Part 1  D3: Samples - List of View Formatting Samples  D3: Blog – HANDS ON tek  Microsoft 365 PnP Weekly – Episode 155 (February 28th) with Dubai based, Senior Cloud Advocate, Ayça Baş (Microsoft) | @aycabs| video | podcast Microsoft 365 PnP Weekly – Episode 154 (February 21st) with London/India - based Developer, Product Owner, Technical Architect, MVP, Vardhaman Deshpande (Valo Solutions) | @vrdmn | video | podcast  General resources  Script Samples - Getting started with PnP Script Samples – aka.ms/script-samples/getting-started Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant – Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v3.x | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Microsoft 365 platform call – March 8th at 8:00 am PST | https://aka.ms/m365-dev-call Office add-in monthly call – March 9th at 8:00 am PST | https://aka.ms/officeaddinscall Viva Connections \u0026amp; SharePoint Framework call – March 10th at 7:00 am PST | https://aka.ms/spdev-spfx-call Adaptive Cards monthly call – March 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall Power Apps monthly call – March 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call – March 17th at 7:00 am PST | https://aka.ms/m365-dev-sig Microsoft Identity Platform call – March 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar  General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls!\nYou can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\nRelated documents   Creating a To Do list for Microsoft Lists and SharePoint using View Formatting (1).pptx (291 KB)  PnP Core SIG - 220303.pptx (291 KB)  * * * _“Sharing is caring”_ _Microsoft 365 Community (PnP) team, Microsoft - 4th of March 2022_ ","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-3rd-of-march/images/recording-3rd-march_hu01ca311dec8e150bbd00ed4d762b1f9b_216058_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-3rd-of-march/","tags":[],"title":"Microsoft 365 Developer Community Call recording – 3rd of March, 2022"},{"categories":[],"contents":"This article is focused on the following 4 sections.\n Creating new resource group Fetching User Object Id Creating an azure AD group with the user using user’s object Id Assigning a built in ‘Reader’ role to the group at resource group scope level  Let’s start writing the scripts section wise as mentioned above, to achieve our intention,\nFirstly, Creating a new Resource group #Creating New Resource Group #Connecting to Azure Account using your username and password Connect - AzAccount #To Validate if resource group already exists in the given location or not resourcegroupname = “Test-rg” $location = “West Europe” Get-AzResourceGroup -Name$resourcegroupname -location $location #If resource group not exists, Create a new resource group $rg = New-AzResourceGroup -Name $resourcegroupname -Location $location #Print the Resource Group Name as output in your PowerShell Write-Output $rg.ResourceGroupName #Save Resource group name to a variable as we will use in the upcoming steps $nameofresourcegroup = $rg.ResourceGroupName Write-Output $nameofresourcegroup #This finishes 1st section of creating a Resource Group at specific location using PowerShell script As per the second step mentioned, we will now fetch the user object id to add it to the group in the next step #This finishes 1st section of creating a Resource Group at specific location using PowerShell script #Fetching user id #Connect to Azure if not have any existing connection Connect-AzAccount #Get user id using the below mentioned script by passing email id of user $userid = Get-AzADUser -Filter \u0026#34;UserPrincipalName eq \u0026#39;test@domain.onmicrosoft.com\u0026#39;\u0026#34; #Print the output Write-Output $userid #Print and save the user id in another variable to use it in the next step $useridfetched = $userid.id #Print the id in your PowerShell Write-Output $useridfetched Now, as per the third step mentioned, we will add the user to the group for that we will need users’ id which we have fetched from the above step #Creating group will need 2 inputs, group name and user id fetched from the above step $azureadgroupname = \u0026#34;Test_AD_Group\u0026#34; $useridfetched #To validate if the same group exists or not Get-AzADGroup | Where-Object { $_.DisplayName -eq $azureadgroupname } #if group does not exists create a new one $newgroup = New-AzADGroup -DisplayName $azureadgroupname -MailNickName \u0026#34;NotSet\u0026#34; #Now is the time to add user to the newly created group where we will pass created group id value to TargetGroupObjectId parameter and useridfetched to MemberObjectId parameter $usergroup = Add-AzADGroupMember -TargetGroupObjectId $newgroup.Id -MemberObjectId $useridfetched #Print output with created group id and group name $groupId = $newgroup.Id $groupName = $newgroup.Name Write-Output $groupId Write-Output $groupName #Azure AD group with user is created using PowerShell scripts Now is the time for the last step mentioned, which will assign the built-in reader role to the newly created group with users at newly created resource group scope level #For assigning role to the group at scope level we will need 3 inputs, resource group name which we have as an output from the first section, group object id which we have as an output from the previous section and a built-in role name $groupId $nameofresourcegroup $rolename = \u0026#34;Reader\u0026#34; #To validate if the role assignment already exists or not Get-AzRoleAssignment -ObjectId $groupId -RoleDefinitionName $rolename -ResourceGroupName $nameofresourcegroup #If it does not exists, we will create assign the created group the specified role at resource group scope level # you can also change the built-in role and scope as per your usage $roleassignment = New-AzRoleAssignment -ObjectId $groupId -RoleDefinitionName $rolename -ResourceGroupName $nameofresourcegroup #Output the role assignment namd and Id $roleassignementId = $roleassignment.RoleAssignmentId $roleassignmentName = $roleassignment.RoleAssignmentName Write-Output $roleassignementId Write-Output $roleassignmentName #Voila, it’s time to validate the performed operations on the Azure Portal Now navigate to your Azure Portal \u0026gt; Resource Group,\nCheck for the newly created resource group, redirect to the Access control \u0026gt; Role assignments and check if you can see the newly created group with the Reader role.\nI hope this article seems useful for all the automation use cases related to Azure AD\nKeep Learning!\nKeep Sharing!\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-3rd-of-march/images/recording-3rd-march_hu01ca311dec8e150bbd00ed4d762b1f9b_216058_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/assigning-a-built-in-role-to-the-group-at-resource-group-scope/","tags":["PowerShell"],"title":"Assigning a built-in role to the group at resource group scope level using PowerShell scripts"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from March 1st, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos.   Call Summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules (74+) to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 890+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring this month. Upcoming AMA on PnPjs – March 15th. Tune into the weekly  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics – hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Microsoft 365 PnP Weekly - Videos, Podcasts focused on the latest news and topics on Microsoft 365 hosted by Vesa Juvonen and Waldek Mastykarz   Hear about the latest 4 Microsoft 365 Platform related stories and view 3 great demos delivered by Microsoft presenters on the latest capabilities of the Microsoft 365 platform. New series launched – Learn from the community. This week’s article: Learn from the community: Low-code Q\u0026amp;A bot for Microsoft Teams helps communities provide better onbo\u0026hellip;. Sign up to Share your story  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout and live at end of the call. Microsoft 365 Platform News Flash  Learn from the community: Low-code Q\u0026amp;A bot for Microsoft Teams helps communities provide better onbo\u0026hellip; Announcing new permissions for Teams chats and tags APIs What’s New in Microsoft Teams | February 2022 Best practices for successful large meetings in Microsoft Teams  Actions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  First Time Contributor Session – TBS soon Community Docs Session – TBS soon Power Platform Samples – First Time Contributor – Tuesday, March 8th, 2:00pm PT PnP – SPFx Developer Workstation Setup – TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – Tuesday, March 15th, 2pm PST First Time Presenter – TBS soon More than Code with VSCode – TBS soon Maturity Model Practitioners – TBS soon (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   And now we are in the month of March. Everyone looks great. Thank you for joining the call today. Demos   What\u0026rsquo;s new with Profile Photos API on Microsoft Graph – learn about Microsoft Graph v1 improvements that significantly address User Profile Photo incoherence. Graph now supports enterprise and consumer user photos, larger photos (for hi-def), Weak eTags, and If-None-Match. Additionally, more Microsoft apps across Microsoft 365 are accessing photos through Graph. Graph is becoming single photo endpoint for 1st and 3rd party applications. Access photos in Graph using me, ID or principal name.   Engineering update on SharePoint Framework - 1.14 and next steps – continuing evolution of SPFx experiences in Microsoft 365 across Teams and Viva Connections canvases. Rundown on capabilities delivered in SPFx v1.14 and on capabilities being built for v1.15 to be released in phases. Two items shown - Command Set API update for ListViewAccessor (update asynchronously for list state changes) and a new action called VivaAction.SelectMedia providing media upload capabilities on an Adaptive Card Extension.   Building Microsoft Graph Toolkit apps with React – MGT is Framework agnostic. If you\u0026rsquo;re building apps with React, you can use Microsoft Graph Toolkit React components (mgt-react). To get started - create a react app, select an MSAL provider for authentication and use MGT react components in your code. MGT react components look and behave like native react. In this demo, presenter looks at Login, Agenda, FileList and Get (for customizations) components.   Thank you for your creativity and work execution. Samples are often showcased in Demos.\nTopics  Latest updates and news on the Microsoft 365 platform – Vesa Juvonen (Microsoft) | @vesajuvonen – 7:33 D1: What\u0026rsquo;s new with Profile Photos API on Microsoft Graph – Harald Liavaag (Microsoft) – 11:45 D2: Engineering update on SharePoint Framework - 1.14 and next steps – Luca Bandinelli (Microsoft), John Nguyen (Microsoft), Alex Terentiev (Microsoft) | @alexaterentiev, Siddharth Gulati (Microsoft) | @sidvaani – 22:20 D3: Building Microsoft Graph Toolkit apps with React – Sébastien Levert (Microsoft) | @sebastienlevert – 38:44  Resources Additional resources around the covered topics and links from the slides.\n D1: Tool – Graph Explorer | aka.ms/ge D2: Documentation - SharePoint Framework v1.14 release notes  D3: Documentation - Microsoft Graph Toolkit React components  D3: Documentation - Use the Microsoft Graph Toolkit with React  D3: Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/mgt/docs D3: Documentation - Styling components in the Microsoft Graph Toolkit  D3: Documentation - Microsoft Graph Toolkit caching  D3: Documentation - Localizing the Microsoft Graph Toolkit components  D3: MGT Playground - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | https://mgt.dev/ D3: Sebastien’s MGT Demos Repo - MGT Sandbox | aka.ms/mgt/sandbox D3: MGT Demos Playlist - Microsoft Graph Toolkit – YouTube D3: Issues – MGT Issus | aka.ms/mgt/issues D3: Learn – Develop apps with the Microsoft Graph Toolkit | https://aka.ms/mgt/learn  Microsoft 365 PnP Weekly – Episode 155 (February 28th) with Dubai based, Senior Cloud Advocate, Ayça Baş (Microsoft) | @aycabs| video | podcast  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on Github PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  M365 General Dev call – March 3rd at 7:00 am PST | https://aka.ms/m365-dev-sig Microsoft 365 platform call – March 8th at 8:00 am PST | https://aka.ms/m365-dev-call Office add-in monthly call – March 9th at 8:00 am PST | https://aka.ms/officeaddinscall Viva Connections \u0026amp; SharePoint Framework call – March 10th at 7:00 am PST | https://aka.ms/spdev-spfx-call Adaptive Cards monthly call – March 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall Power Apps monthly call – March 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall Microsoft Identity Platform call – March 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members. More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\nRelated documents   M365 platform - Weekly 20220301.pptx (279 KB)  _“Sharing is caring”_ * * * _Microsoft 365 PnP team, Microsoft - 2nd of March 2022_ ","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-1st-of-march-2022/images/recording-1st-march_hua42db72645749b0b731ccccbb5868d60_553134_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-1st-of-march-2022/","tags":["Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 Platform Call – 1st of March, 2022"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Dubai based, Senior Cloud Advocate, Ayça Baş (Microsoft) | @aycabs\nTopics discussed in this session:\n How does one get to be a Microsoft Cloud Advocate?  On being an intern and becoming a Learn Student Ambassador in the Microsoft Learn Student Ambassadors program. About the “Learn from the Community” initiative – highlighting project results delivered by Student Ambassadors, MVPs, ISVs using Microsoft 365 to addressing real-world problems. Tips for women who want to pursue a degree and career in high tech – communities are essential. Career progression in Microsoft and passion for customers, mentoring, electronics, and Microsoft 365 with Azure Cognitive Services.  We also covered 19 articles published by Microsoft and the PnP Community over the last week. This week  Waldek – is focused on defining improvements for next version of CLI for Microsoft 365 shipping at end of March, improving developer experience for developers building Teams apps in Angular, and on planning a new online event (May) for developers developing apps for Microsoft 365.  Vesa – is working as the switchboard for many things and prepping SPFx v1.15 beta.   Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, February 28, 2022. Enjoy the show.  Video at Microsoft 365 Community YouTube channel.    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!” Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  What’s New in Microsoft Teams | February 2022 - Microsoft Best practices for successful large meetings in Microsoft Teams - Siunie Sutjahjo (Microsoft) Learn from the community: Microsoft AI MVP designs a Microsoft Teams bot to centralize tools for emp\u0026hellip; - Ayça Baş (Microsoft) | @aycabs Syntex product updates – February 2022 - Chris McNulty (Microsoft) | @cmcnulty2000  Community articles  CLI for Microsoft 365 v5.0 - Waldek Mastykarz (Microsoft) | @waldekm How to create a custom connector for your own Azure hosted API - Luise Freese | @LuiseFreese Getting started testing your Microsoft 365 CLI contributions - Martin Lingstuyl (I4-YOU Business Solutions B.V.) | @martinlingstuyl New Document Card View For Libraries With A SharePoint Syntex Model Applied - Leon Armston (Intelogy) | @LeonArmston Apply a DevOps process to your SPFx project (Part 2) - Michaël Maillot (onepoint) | @michael_maillot CSS Keyframe Animations in SharePoint Framework - Stefan Bauer (N8D) | @StfBauer Cancel Flow Run instead of Terminate in the middle of an apply to each in Power Automate - Pieter Veenstra (HybrIT Services) | @PieterVeenstra SPFx Basics: Initializing components - constructor vs. onInit() - Andrew Connell (Voitanos) | @andrewconnell How to enable DevTools for Microsoft Teams desktop client - Alexey Sadomov (Valo Solutions) | @sadomovalex SharePoint Content Management: Distributed vs. Centralized - Marc D Anderson (Sympraxis Consulting) | @sympmarc Using a SharePoint Calculated Column with Retention in Microsoft 365 - Joanne C Klein | @JoanneCKlein Monthly blogging series on SharePoint, Microsoft Teams, Lists and Windows 11 - João Ferreira (Beezy) | @Joao12Ferreira Episode #194 - Managing Site Columns and Fields in SharePoint Online via Microsoft Graph - Paolo Pialorsi (PiaSys) | @PaoloPia Power Automate: HTML Table Formatting Made Easy - April Dunnam (Microsoft) | @aprildunnam SPFx Basics: Initializing components - constructor vs. onInit() - Andrew Connell (Voitanos) | @andrewconnell  Additional resources  Demo - Learn from the Community – Introduction to new weekly initiative – Ayça Baş (Microsoft) | @aycabs. New project application form - https://aka.ms/share-your-story Microsoft Learn Student Ambassadors program Adafruit Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-155-ay%C3%A7a-ba%C5%9F/images/Thumb-Ep155-February28_hu63b7f345ae977a9fb0b388139714a199_514060_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-155-ay%C3%A7a-ba%C5%9F/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 155 - Ayça Baş"},{"categories":["CLI for Microsoft 365"],"contents":"We\u0026rsquo;ve just published a new major version of the CLI for Microsoft 365 with new commands for working with and managing Microsoft 365 and SharePoint Framework projects on any platform.\nManage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use.\nWhile building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it’s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects.\nNew version of CLI for Microsoft 365 – v5 Breaking out from our regular release cycle, we\u0026rsquo;ve just released a new major version of CLI for Microsoft 365. Typically, our major releases are evolutionary, but this time around, next to the few necessary changes, together with our awesome community we\u0026rsquo;ve released many new commands and improvements! Here are a few of the most noteworthy additions.\n For the full list of what\u0026rsquo;s new and changed, see the release notes.\n New major version Typically, we release a major version once a year. While we strive for all commands to be consistent, there are cases where in hindsight, we need to add changes. If they require us to break the contract, we properly communicate it by including them in a major version.\nThis time around, we\u0026rsquo;re affected by the deprecation of the Azure AD Graph API, which has been announced in June 2020. The API will stop working in June 2022. To ensure that you can keep using CLI for Microsoft 365 without any interruptions, we decided to update the few commands that were using it. While the change is relatively small, it could be backwards incompatible for your scripts.\nTo help you understand that impact of the change, we prepared guidance for upgrading to using CLI for Microsoft 365 v5.\nUpgrade SharePoint Framework projects to v1.14 Mid-February 2022, Microsoft released a new version of SharePoint Framework - the development model for extending Microsoft Viva Connections, Microsoft Teams and SharePoint. To help you upgrade your projects we\u0026rsquo;ve updated CLI for Microsoft 365 with the support for this new version.\nTo upgrade your SPFx project to this version, change the working directory to your project and execute:\nm365 spfx project upgrade --output md \u0026gt; report.md We\u0026rsquo;d also recommend that you try a richer upgrade report based on the Visual Studio Code CodeTour extension:\nm365 spfx project upgrade --preview --output tour To help you verify that your machine has the necessary prerequisites to start building on SPFx v1.14, we\u0026rsquo;ve also updated the spfx doctor command.\nTo verify that your environment meets the requirements to work with the SharePoint Framework, run:\nm365 spfx doctor For more information about upgrading SharePoint Framework projects, see the CLI documentation.\nIntegrate CLI for Microsoft 365 in your app Recently we\u0026rsquo;ve seen an increasing demand to integrate CLI for Microsoft 365 in other solutions. CLI offers advanced capabilities for managing resources in the Microsoft cloud that are a great addition to other solutions. Instead of reinventing the wheel, why not use the CLI for Microsoft 365?\nOriginally, if you wanted to integrate CLI for Microsoft 365, you had to interface with it through the shell, basically treating it as any other executable. In CLI for Microsoft 365 v5, we introduced an API that you can call to execute any CLI command from your Node.js-based application.\nFor more information about using CLI for Microsoft 365 programmatically, check out our integration documentation. This is the first version of our API and we\u0026rsquo;d love to hear from you how we could improve it.\nMonitor tenant health As more and more organizations embrace remote and hybrid work and Microsoft 365 becomes a critical part of their collaboration infrastructure, they need to be able to monitor its status and respond to any changes.\nTo help you keep track of your Microsoft 365 tenant\u0026rsquo;s health, in this version we introduced a set of commands for retrieving service update messages, service health issues and tenant health information.\nWe hope these commands will help you monitor the status of your tenant. For more information about how they work and what type of information you can retrieve, check out the documentation.\nClean up Azure AD app registrations One of the main building blocks for Microsoft 365 apps are Azure AD app registrations. With the advancement in tooling, creating new apps comes often down to a couple of clicks and sometimes it\u0026rsquo;s even totally abstracted away from you.\nTo help you keep your tenant clean, we release a command that allows you to easily remove Azure AD app registrations that you no longer need.\nTo remove an Azure AD app registration, run:\nm365 aad app delete --appId d75be2e1-0204-4f95-857d-51a37cf40be8 For more information about managing Azure AD apps using CLI for Microsoft 365, see the documentation.\nGet Planner tasks We continue to extend our support for Planner and in this version we added commands that allow you to retrieve information about tasks.\nTo get a task, run:\nm365 planner task get --id \u0026#39;vzCcZoOv-U27PwydxHB8opcADJo-\u0026#39; For each task, you can retrieve additional information using:\nm365 planner task details get --taskId \u0026#39;vzCcZoOv-U27PwydxHB8opcADJo-\u0026#39; For more information about working with Planner see our documentation.\nNew script samples CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts.\n If you have any scripts that you use frequently, please share them with us so that we can learn more about your common automation scenarios.\n Get attachment names from SPO lists Veronique Lengelle contributes a sample that shows how to get names of attachments for items stored in a SharePoint list.\nList all documents with a specific name within a SharePoint site Another sample script that Veronique published is how to get all documents from a specific site with a specific name, for example search all documents where the word \u0026ldquo;CLI\u0026rdquo; is part of the file name.\nCheck all users for known breaches with HIBP As hacks and data breaches become more prevalent, you should regularly track if any of your credentials have been leaked in the open.\nAlbert-Jan Schot contributed a script that shows how you can use the Have I Been Pwned service, to check if any accounts from your Azure Active Directory have be\u0026hellip;.\nList items with unique permissions Veronique Lengelle submitted another script, inspired by Salaudeen Rajack, that shows how to get list items with unique permissions. Using this script you can understand the security configuration of your data and verify that it\u0026rsquo;s correctly configured.\nDetecting PII exist in SharePoint List using AWS Comprehend Joseph Velliah contributed a script that shows how to use AWS Comprehend to detect personally identifiable information (PII) stored in SharePoint lists. Different organization have different regulations when it comes to handling PII and this script is the first step of the governance, allowing you to find where PII is stored in your tenant.\nContributors This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order):\n Reshmee Auckloo Robert Dyjas Akash Karda Patrick Lamber Veronique Lengelle Martin Lingstuyl Michaël Maillot Waldek Mastykarz Kevin McDonnell Arjun Menon Abderahman Moujahid Nanddeep Nachan Smita Nachan pramod74 Albert-Jan Schot Garry Trinder Joseph Velliah Jasey Waegebaert Rabia Williams  Thank you all for the time you chose to spend on CLI for Microsoft 365 and your help to advance it!\nWork in progress Here are some things that we\u0026rsquo;re currently working on.\nValidate your SharePoint Framework project\u0026rsquo;s integrity SharePoint Framework is one of the most popular development models for building enterprise apps for Microsoft 365. It\u0026rsquo;s highly flexible and allows you to build solutions for many different scenarios. But as you build your apps, install additional packages and change your project\u0026rsquo;s configuration, you might run into errors.\nTogether with Alex Terentiev from SharePoint Framework engineering, we\u0026rsquo;re working on a command that will allow you to verify your project\u0026rsquo;s configuration before you submit an issue to the sp-dev-docs repo.\n@me user tokens to simplify working with the current user We\u0026rsquo;re constantly seeking for ways to let you work with CLI for Microsoft 365 more efficiently. In the past, we\u0026rsquo;ve shipped support for passing contents from files into options using the @ token and using server-relative URLs with SharePoint commands. We\u0026rsquo;re continuing the improvement by introducing @me tokens to let you pass information about the current user into options.\nMicrosoft 365 app commands When building apps for Microsoft 365, next to your code, you also need to manage how your app is exposed to Microsoft 365. You need to register your application in Azure Active Directory, and depending what type of app you build, you might need to deploy it to an app catalog as well. All these properties are managed in different locations and we\u0026rsquo;re thinking of ways that we could simplify it for you.\nWhat else could we simplify? Let us know what you think by helping out with one of our open issues or chime in on our discussions!\nTry it today Get the latest release of CLI for Microsoft 365 from npm by executing:\nnpm i -g @pnp/cli-microsoft365 Alternatively, you can get the latest release from Docker by executing:\ndocker run --rm -it m365pnp/cli-microsoft365:latest If you need more help getting started or want more details about the commands or the architecture or the project, go to aka.ms/cli-m365. And if you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v5-0/images/banner-cli-m365_hubb0a11f265e5361714912c97fd3afb73_171793_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v5-0/","tags":["CLI for Microsoft 365","SharePoint","SharePoint Framework (SPFx)"],"title":"CLI for Microsoft 365 v5.0"},{"categories":["Community post"],"contents":"In this blog post I am going to cover\n How to create an API with JavaScript How to deploy this to Azure How to wrap the API into a custom connector How to use the connector in Power Apps  Don’t know what is an API? Don’t worry, here is help:\n Imagine, you are dining in a restaurant (this is the app/client). You do not talk to the kitchen (server/database) directly, but you can send requests to the API, which is our waiter*waitress. They will request dishes from the kitchen and get them in return and then respond back to you.\n Operations you could do are\n GET (request data from a server) POST (send new information to a server) PUT (make changes to existing data on a server by replacing the entire entity) PATCH (make changes to existing data on a server by updating provided fields) DELETE (remove existing information from a server)  How to approach things In this example, we only want to do GET requests, as we want to read news from different newspaper websites such as BBC, New York Times and New York Post. In order to achieve that, we will scrape the websites of these sources and extract title and URL of the articles. We will later deploy this to Azure as a web app and wrap the API into a custom connector for Power Platform. Last thing is then consuming this custom connector in a Canvas app.\n1. make it work on your machine  Create a new directory on your computer and navigate into it Make sure you have node.js installed Run npm init, which prompts you to answer some questions about your project (you can just hit return). It will then create a package.json file in your project for you. It contains some metadata about your app such as your name, the version and the license. You can change the file according to your needs. Create an index.js file as an entrypoint for the app Install the following dependencies  cheerio, which allows us to parse HTML to get exactly the data we need from a website axios, to ease the process of HTTP requests for CRUD operation express, as backend framework for node.js - this will be our listener     Dependencies will show up in your package.json file\nYou can also see now, that you have a package-lock.json file - you may want to have a look, but we won’t touch this file\nWe will now go ahead, open our index.js file and first create the listener:\nconst PORT = process.env.PORT || 8000 const axios = require(\u0026#39;axios\u0026#39;) const cheerio = require(\u0026#39;cheerio\u0026#39;) const express = require(\u0026#39;express\u0026#39;) const app = express() app.listen(PORT, () =\u0026gt; console.log(`my server is running on PORT ${PORT}🚀`)) You can of course use a port of your choice.\nWe can now create our first endpoint:\napp.get(\u0026#39;/\u0026#39;, (req, res) =\u0026gt; { res.json(\u0026#39;Welcome to my 📰 News API\u0026#39;) }) This endpoint sits at the root / and displays just a little welcome message. You can later delete that, it’s just to see if things already work.\nNow we want to create an array of newspapers/sources that we later want to loop over.\nAs some of them don’t provide their baseURL when linking to an article on their website but only a relative path, it’s a good idea to have a baseURL property.\nconst newspapers = [ { name: \u0026#39;nyt\u0026#39;, address: \u0026#39;https://www.nytimes.com/\u0026#39;, baseURL: \u0026#39;\u0026#39; }, { name: \u0026#39;un\u0026#39;, address: \u0026#39;https://www.un.org/\u0026#39;, baseURL: \u0026#39;\u0026#39; }, { name: \u0026#39;bbc\u0026#39;, address: \u0026#39;https://www.bbc.co.uk/news/\u0026#39;, baseURL: \u0026#39;https://www.bbc.co.uk\u0026#39; }, { name: \u0026#39;nyp\u0026#39;, address: \u0026#39;https://nypost.com/\u0026#39;, baseURL: \u0026#39;\u0026#39; } ] Next step is to create an empty array of articles and then loop over all newspapers to fill the array with articles\n Visit the address using axios, Save the response (this is the entire HTML of the website) Pass this HTML into cheerio Look for elements with an a tag that contains “Ukraine” Grab the title (text) and the URL (which us the href attribute) Push this as an object into our articles array  const articles = [] newspapers.forEach(newspaper =\u0026gt; { axios.get(newspaper.address) .then(response =\u0026gt; { const pageHTML = response.data const $ = cheerio.load(pageHTML) $(\u0026#39;a:contains(\u0026#34;Ukraine\u0026#34;)\u0026#39;, pageHTML).each(function () { const title = $(this).text() const url = $(this).attr(\u0026#39;href\u0026#39;) articles.push({ title, url: newspaper.baseURL + url, source: newspaper.name }) }) }) }) We now want to see this work in action - and create an endpoint /news for it:\napp.get(\u0026#39;/news\u0026#39;, (req, res) =\u0026gt; { res.json(articles) }) If you now visit localhost:8000/news ,you should see an array of of objects displaying title, source and URL of articles of all your sources. So far, so good. but what if we want to filter the sources with /news/nyt or /news/bbc?\nLet’s introduce the newspaperId. We will again do the same axios and cheerio magic once again - Our new array is now called specificArticles and will also contain the id of the source.\napp.get(\u0026#39;/news/:newspaperId\u0026#39;, (req, res) =\u0026gt; { const newspaperId = req.params.newspaperId const newspaperAddress = newspapers.filter(newspaper =\u0026gt; newspaper.name == newspaperId)[0].address const newspaperBase = newspapers.filter(newspaper =\u0026gt; newspaper.name == newspaperId)[0].base axios.get(newspaperAddress) .then(response =\u0026gt; { const pageHTML= response.data const $ = cheerio.load(pageHTML) const specificArticles = [] $(\u0026#39;a:contains(\u0026#34;Ukraine\u0026#34;)\u0026#39;, pageHTML).each(function () { const title = $(this).text() const url = $(this).attr(\u0026#39;href\u0026#39;) specificArticles.push({ title, url: newspaperBase + url, source: newspaperId }) }) res.json(specificArticles) }).catch(err =\u0026gt; console.log(err)) }) You can now test this with localhost:8000/news/bbc or localhost:8000/news/nyt\nPlease do yourself a favor and create a .gitignore file with\nnode_modules so that you later on don’t commit the node modules.\n2. Make it work on Azure Cool, we made a service work on our machine, but more people could benefit if we deployed this API now to Azure. The service we will be using here is an Azure Web app. As I am a Windows person, I’d like to try more things on Linux, so we will be creating a Linux app :nerd_face:\n Open VS Code or the terminal of your choice make sure you have Azure CLI installed Create a new web app with the following command: az webapp up --sku F1 --name \u0026lt;mywebapp42\u0026gt; --location \u0026lt;location-name\u0026gt;  please note:\n the name of the webapp needs to be globally unique the location is optional - if you don’t know which region you want to use, you can get a list with az appservice list-locations --sku F1 if you don’t like Linux, use --os-type Windows  The web app will be created for you, this can take a few moments, as it does not only create the web app for you, but also automatically creates a resource group and an App service plan. It also packs and deploys your local project.\nIn the output, you will see something like:\nStarting zip deployment. This operation can take a while to complete ... Deployment endpoint responded with status code 202 You can launch the app at http://\u0026lt;mywebapp42\u0026gt;.azurewebsites.net  Select that link! In case you didn’t delete the root endpoint, you should now see the greeting ❤ Test your other endpoints as well! Also go to the Azure portal and check the resources that have been created for you.\nIt should look something like this:\n   3. Wrap your API into a custom connector Now that we have a cool API, let’s use it in Power Platform!\n Open flow.microsoft.com Select Data, select Custom Connectors Select New in the General for Host enter your new app URL http://\u0026lt;mywebapp42\u0026gt;.azurewebsites.net Don’t do anything in the Security tab - this is a public API and we don’t need authenticated access On the Definition tab, select New action For Summary, Description, and Operation ID enter something like GetNewsAll Select Import from sample for Request Select Get and paste in the URL http://\u0026lt;mywebapp42\u0026gt;.azurewebsites.net/news Select Add a default response and paste an array in it - you don’t need actual values, the schema is enough.  [ { \u0026#34;title\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;source\u0026#34;: \u0026#34;string\u0026#34; }, { \u0026#34;title\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;source\u0026#34;: \u0026#34;string\u0026#34; } ] Select Create connector you may want to test your connector on the Test tab. To do so, select New Connection and then select Test operation - This should return an HTTP code 200 and you should see some real data.     Repeat the steps 6-12 for the other endpoints that you created (i.e. /news/bbc) You can also pass in the newspaperId as a parameter.\n4. Consume the custom connector in a Canvas app  Open make.powerapps.com Create a new canvas app from blank - don’t forget to save it In the left hand bar, select Data and add your custom connector Create a gallery and set its Items property to Defaulttitle.GetNewsAll() Set the  Text property of the Title label of the gallery to ThisItem.title, Text property of the Subtitle label of the gallery to ThisItem.source, Onselect property of the icon of the gallery to Launch(ThisItem.url)    You can even create a dropdown menu that holds the different sources so that users can change what they want to consume.\n   Conclusion You can wrap ANY API into a custom connector for Power Platform - even the ones that you create. Resources Some helpful resources: Quickstart: Create a Node.js web app - Azure App Service | Microsoft Docs\nHow to Scrape Websites with Node.js and Cheerio (freecodecamp.org)\nCreate a custom connector from scratch | Microsoft Docs\nHow to use a custom connector in Power Automate (m365princess.com)\nWorking with Custom Connectors in Power Platform for beginners (michaelroth42.com)\nFirst published on https://m365princess.com\n","image":"https://pnp.github.io/blog/post/how-to-create-a-custom-connector-for-your-own-azure-hosted-api/images/diagram_hu1634c7c616a3b37931f9254eadcf7a2d_59378_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-create-a-custom-connector-for-your-own-azure-hosted-api/","tags":["Azure","Power Automate","Power Apps"],"title":"How to create a custom connector for your own Azure hosted API"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"Viva Connections \u0026amp; SharePoint Framework bi-weekly community call recording from February 24th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\n  Call summary  Tune in each Tuesday for the Microsoft 365 platform community call. Next call on the 1st of March @ 8 AM PT  Latest news from Microsoft engineering on Microsoft 365 topics Harald Liavaag - What’s new with\nProfile Photos API on Microsoft Graph  Sébastien Levert - Building MGT apps with React Luca Bandinelli and John Nguyen - Engineering update on SharePoint Framework - 1.14 and next steps  Q\u0026amp;A   Register for training events this quarter hosted by Sharing is Caring. Next week: AMA (Ask Me Anything) – Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST Register for the PnP Recognition Program. SharePoint Framework 1.14 GA is now available! Latest SharePoint Framework Road Ahead updates  PnP project releases in the last two weeks:  SharePoint Framework – v1.14 PnPjs – v3.0.2 Reusable SPFx React Controls – v3.6.0 Reusable SPFx React Property Controls – v3.5.0   3 new/updated web part samples and 3 ACE samples were delivered in the last two weeks! Your contributions are greatly appreciated by members of this community.  Latest project updates include (Bold indicates update from previous report 2 weeks ago)    PnP Project Current version Release/Status     SharePoint Framework (SPFx) v1.14 GA v1.15 Preview in weeks, GA in June 2022   PnPjs Client-Side Libraries v2.12 GA, v3.0.2 Note: v2.13 will be the final v2 release in weeks   CLI for Microsoft 365 v4.3.0 GA, v5.0 Preview    Reusable SPFx React Controls v3.6.0, v2.9.0 (SPFx v1.11)    Reusable SPFx React Property Controls v3.5.0, v2.7.0 (SPFx v1.11)     PnP SPFx Generator v1.16.0 v1.17.0 on the way   PnP Modern Search v4.5.4, v3.23.0     The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place as always in chat throughout the call.\n Thank you for joining the call today and/or for viewing the recording. You are part of making this a truly awesome community. Actions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  PnP Sharing is Caring - AMA (Ask Me Anything) – Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) – PnPjs – Tuesday, March 15th, 9am PST First Time Contributor Session – TBS soon Community Docs Session – Tuesday, March 1st, 2:00pm PT Power Platform Samples – First Time Contributor – Tuesday, March 8th, 2:00pm PT PnP – SPFx Developer Workstation Setup – TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – Tuesday, March 15th, 2pm PST First Time Presenter – TBS soon More than Code with VSCode – TBS soon Maturity Model Practitioners – TBS soon (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/spdev-spfx-call  Demos  Change Page Layout Type Command Set Extension – in SPO you can easily change page layout of one or multiple site pages from article to home or home to article. The Command targets pages on Site Pages list. Updates pages with supported layouts and pages not presently checked-out by others. Essentially remove/add page title placeholder. With extension installed, select pages to change, change layout dialog comes up, select pages, click Save and done.  Microsoft Clarity Application Customizer – an SPFx extension that allows you to add Clarity page activity tracking capabilities to your Modern SharePoint site pages to gage user interaction. The extension is added to the site’s App Catalog and injects a Microsoft Clarity JavaScript into site pages. Setup: 1) Create account and setup a new project on Clarity site and 2) Deploy extension to your SharePoint site.  Improvements to the Community SPFx Samples Gallery – Latest developments making it easier to access and use PnP code samples. View code structure, complete with syntax highlighting, directly within GitHub without downloading it. Download individual samples as a ZIP instead of cloning the entire repository. Samples now have remote containers, allowing you to run and build in a portable environment pre-configured with all necessary dependencies unique to each.  SPFx extension samples https://aka.ms/spfx-extensions\n Next call?  SPFx web part samples https://aka.ms/spfx-webparts  Save to User Application Personal Folder in OneDrive* - Adam Wójcik | @Adam25858782 React Functional Component web part with data fetch - Don Kirkham | @DonKirkham Datatable - Chandani Prajapati | @Chandani_SPD  * To be posted soon.\nPnP SPFx ACEs https://aka.ms/spfx-aces\n My Shifts - Siddharth Vaghasia | @siddh_me Join New Teams* - Aimery Thomas | @aimery_thomas Office Locations* - Anoop Tatti | @anooptells  * To be posted soon.\nThank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen – 6:20 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 – 8:30 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler – 10:13 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler – 10:54 PnP Modern Search - Patrick Rodgers (Microsoft) | @mediocrebowler – 11:30  PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh – 12:11 PnP SPFx ACEs Samples - David Warner II (Catapult Systems) | @DavidWarnerII – 13:45  Demos  Demo 1: Change Page Layout Type Command Set Extension – Sudharsan Kesavanarayanan (NTT) | @sudharsank – 15:38 Demo 2: Microsoft Clarity Application Customizer – João Ferreira (Beezy) | @joao12ferreira – 21:45 Demo 3: Improvements to the Community SPFx Samples Gallery - Hugo Bernier (Microsoft) | @bernierh – 31:24   Resources Additional resources around the covered topics and links from the slides.\n D1: Sample - Change Page Layout Command Extension  D2: Website - Microsoft Clarity – Free Heatmaps \u0026amp; Session Recordings  D2: Repo - Microsoft Clarity for modern SharePoint  D2: Samples - SharePoint Framework Client-Side Extension Samples  D2: Documentation - Application Customizers  D2: Article - How to add Microsoft Clarity to modern SharePoint | D3: Universal Gallery - Sample Solution Gallery  D3: SPFx Webpart Samples - Samples by Framework | aka.ms/spfx-webparts D3: The Matrix - SPFx Compatibility Matrix  D3: Documentation - Visual Studio Code for the Web  D3: Documentation - SharePoint Framework development tools and libraries compatibility  D3: Tools - Remote – Containers (Preview)  D3: Documentation - Remote development in Containers  Microsoft 365 PnP Weekly – Episode 154 (February 21st) with London/India - based Developer, Product Owner, Technical Architect, MVP, Vardhaman Deshpande (Valo Solutions) | @vrdmn | video | podcast Microsoft 365 PnP Weekly – Episode 153 (February 14th) with Redmond, Washington, US-based Senior Program Manager in the OneDrive and SharePoint organization responsible of the Power Platform integration, Sudha Narayanan (Microsoft) | video | podcast  General Resources  Viva Connections https://aka.ms/VivaConnections Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  Tools - Teams Toolkit (v2.2 Preview)  Tools - Microsoft Teams Framework (TeamsFx)  Gallery - Microsoft 365 Extensibility look book gallery  Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions SharePoint Framework - v1.12.1 npm install –g @microsoft/generator-sharepoint@next CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring Tools - PnP Modern Search v4 | https://aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other mentioned topics  SharePoint dev documentation SharePoint dev issue list  Upcoming calls | Recurrent invites  Microsoft 365 platform call – March 1st at 8:00 am PST | https://aka.ms/m365-dev-call M365 General Dev call – March 3rd at 7:00 am PST | https://aka.ms/m365-dev-sig Office add-in monthly call – March 9th at 8:00 am PST | https://aka.ms/officeaddinscall Viva Connections \u0026amp; SharePoint Framework call – March 10th at 7:00 am PST | https://aka.ms/spdev-spfx-call Adaptive Cards monthly call – March 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall Power Apps monthly call – March 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall Microsoft Identity Platform call – March 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar  Viva Connections \u0026amp; SharePoint Framework bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Connections, Microsoft Teams, SharePoint Online, and also on-premises. Calls are used for the following objectives.\n SharePoint Framework engineering update from Microsoft Talk about PnP JavaScript Core libraries Office 365 CLI Updates SPFx reusable controls PnP SPFx Yeoman generator Share code samples and best practices Possible engineering asks for the field - input, feedback, and suggestions Cover any open questions on the client-side development Demonstrate SharePoint Framework in practice in Microsoft Viva, Microsoft Teams or SharePoint context You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!  Related documents   Change Page Layout-SPFx Extension.pptx (292 KB)  Monitor SharePoint usage with Microsoft Clarity.pptx (292 KB)  PnP SIG (JavaScript) - Weekly 20220224.pptx (292 KB)  _“Sharing is caring”_ * * * _Microsoft 365 PnP team, Microsoft - 25th of February 2022_ ","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-24th-of/images/recording-24th-feb_hu877c17a78bda801dd8a9a5fcf1b947a8_241208_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-24th-of/","tags":["Adaptive Cards","Office Add-ins","Extensions","Microsoft 365","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)","Viva Connections"],"title":"Viva Connections \u0026 SharePoint Framework Community Call – 24th of February, 2022"},{"categories":["Power Apps community call"],"contents":"   Call summary Topics covered in this month’s community call includes 2 demos: Make your wishes come true with Power Apps (Good Deeds App - 3 Lists, 3 E-mail addresses and 2 Flows) - Pranav Khurana and Spice up your Power Apps with SVGs (options - ranging from static to interactive - for adding SVG graphics with little code to your Power Apps) - Robin Rosengrün (EnBW). Recent Power Apps News and Community Contributions (Power Apps and Power Apps Portals code releases and new Dataverse auditing features) – Todd Baginski (Canviz). ACTION: Please vote on What to call this call? This call was hosted by Todd Baginski (Canviz). The call was recorded on February 16, 2022. Questions addressed in chat throughout the call. Agenda  Power Apps Community events and resources - Todd Baginski (Canviz) | @ToddBaginski – 3:06 Demo 1: Make your wishes come true with Power Apps - Pranav Khurana – 7:20  Demo 2: Spice up your Power Apps with SVGs - Robin Rosengrün (EnBW) – 22:54  Recent Power Apps News and Community Contributions – Todd Baginski (Canviz) | @ToddBaginski – 44:48  Demos  Make your wishes come true with Power Apps – our youngest presenter to date steps through his Good Deeds App that encourages kids to do good deeds, earn points and make wishes come true. The app uses 3 SharePoint Lists, 3 Email addresses and 2 Power Automate flows. Presenter steps through information capture in the app’s UI, and through Wish Approval and Wish Submission flows that generate emails to secure/confirm approvals and updates lists.  Spice up your Power Apps with SVGs – with a few lines of code including a SVG text string embedded into your Power Apps. Six levels of SVG integration. Insert an image, add SVG to the Power Apps Image Control, add animation (move object using SVG code), use Concat ( ) for interactive maps and charts - click on SVG to get information from an element, and finally drag and drop capabilities.   Recent News \u0026amp; Cool Stuff  Power Apps 2022 April Release Wave 1 updates for Model-driven apps! General Availability (GA) of Power Apps portals as mobile apps General Availability (GA) of code components for portals New Dataverse auditing features – granular and powerful – 100,000 days!  Actions  We want your feedback – VOTE - Power Apps or Power Platform Community Call? aka.ms/PPCommunityCallVote  Register for the Global Power Platform Bootcamp - February 18th and 19th 2022!! Check out the SCOTTISH SUMMIT 2022 – February 25th and 26th 2022  Meeting - Power Addicts Hangout – March 15th Power Platform French Community - https://ppfc.fr PnP Samples - We welcome your Power Platform samples! View or be a Guest on The Low Code Revolution show | aka.ms/LowCodeRevolutionShow  Referenced in this session  D1: LinkedIn - Pranav Khurana D2: Learn - General SVG tutorial  D2: Learn - Robin\u0026rsquo;s YouTube-channel R2Power (SVG playlist)  D2: Repo - Robin\u0026rsquo;s FunWithSVGs  D2: Demo - Select SVG PCF on PCF gallery   Learn more  See the full blog post for this call on the Tech Community Blog - https://aka.ms/m365pnp/community/blog Microsoft’s Power Platform website Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - https://aka.ms/PowerAppsCommunitySamples Power Apps Community Videos - https://aka.ms/PowerAppsCommunityVideos PowerPlatformLearn Resources | https://www.powerplatformlearn.academy PnP Power Platform Samples | https://www.aks.ms/powerplatform-samples Power Addicts Hangout - https://wearepoweraddicts.com #LessCodeMorePower Video Series - https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Share more - draw attention to your great work - #PowerAppsCC  Stay connected  Twitter: https://twitter.com/MSPowerPlat Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/m365pnp/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/powerappscommunitycall Call attention to your great work by using #PowerAppsCC and #PnPWeekly on Twitter. Next call March 16th at 08:00am PST | https://aka.ms/powerappscommunitycall  Related documents   Power Apps Community Call - February 2022.pptx (266 KB)  ","image":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-february-2022/images/PowerApps%20Thumb%20February%202022_hub32beffd75a4aa23811a1d77d0164719_233913_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-february-2022/","tags":["Extensions","Microsoft 365","Power Apps"],"title":"Power Apps Community Call – February 2022"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from February 22nd, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos.   Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 890+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring this month and next. Upcoming AMAs on PnP React Controls and on Graph and MGT. Tune into the weekly  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics – hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Microsoft 365 PnP Weekly - Videos, Podcasts focused on the latest news and topics on Microsoft 365 hosted by Vesa Juvonen and Waldek Mastykarz   Hear about the latest 5 Microsoft 365 Platform related stories and view 3 great demos delivered by Microsoft presenters on the latest capabilities of the Microsoft 365 platform. New series launched – Learn from the community. This week’s article: Learn from the community: Chatbot for Microsoft Teams personal and group chats  The host of this call was Brian T. Jackett (Microsoft) |@BrianTJackett. Q\u0026amp;A takes place in chat throughout and live at end of the call. Microsoft 365 Platform News Flash  Learn from the community: Microsoft AI MVP designs a Microsoft Teams bot to centralize tools for emp\u0026hellip; Breaking changes in the Microsoft Graph Tasks API (beta) Announcing SharePoint Framework 1.14 – with updates for Viva Connections, Microsoft Teams and ShareP\u0026hellip; Learn how to create secure identity solutions using the Microsoft identity platform Teams JS SDK v2 Public Preview Update: Teams Apps in Office.com \u0026amp; Office App for Windows  Actions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  PnP Sharing is Caring - AMA (Ask Me Anything) \u0026ndash; Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST First Time Contributor Session – TBS soon Community Docs Session – Tuesday, March 1st, 2:00pm PT Power Platform Samples – First Time Contributor – Tuesday, March 8th, 2:00pm PT PnP – SPFx Developer Workstation Setup – TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – Tuesday, March 15th, 2pm PST First Time Presenter – TBS soon More than Code with VSCode – TBS soon Maturity Model Practitioners – TBS soon (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.  ![thumbnail image 2 of blog post titled Microsoft 365 Platform Call – 22nd of February, 2022 ](images/PnP-TogetherMode-2-22-2022 - 500W.gif)\nThank you everybody for joining the call today, great seeing you today - Tuesday 22/2/22. Glad you are part of the Microsoft 365 Platform PnP community. Demos  PowerShell Snippets for Microsoft Graph Docs – Microsoft Graph now supports PowerShell Code Snippets both in the documentation portal and in Graph Explorer as well as in integrations with MGT and Adaptive Cards. Today, see where to find the code snippets and see what you can do with them. Install the Microsoft Graph PowerShell SDK and test snippets in a Microsoft 365 Developer tenant so you’re not using your real data.  Learn from the Community – Introduction to new weekly initiative – comprised of an article Series (Learn from the Community), interview videos (Show \u0026amp; Tell videos – interviews \u0026amp; demos), and useful links focused on end-to-end real-world solution implementations. Stories are delivered by MVPs, student ambassadors, AppDev challenge winners and Microsoft architects. Solutions are demoed and documentation shared. The program’s goal is to inspire with stories about end-to-end solutions – why and what built.  Customizing MGT Components in your solution – for the last 9 recordings we covered off what is MGT and delivered a complete component tour. Now we focus on customizations that allow you to deliver native looking experiences for your particular app. Six areas for customizations – styling, templating, and localizing components along with handling events, caching Graph calls in components and Right-to-Left support. Customizations can be Global or single instance in scope.  Thank you for your creativity and work execution. Samples are often showcased in Demos.\nTopics  Latest updates and news on the Microsoft 365 platform – Brian T. Jackett (Microsoft) | @BrianTJackett – 5:17 D1: PowerShell Snippets for Microsoft Graph Docs – Rabeb Othmani ​(Microsoft) | @Rabeb_Othmani – 12:52 D2: Learn from the Community – Introduction to new weekly initiative – Ayça Baş (Microsoft) | @aycabs – 23:02 D3: Customizing MGT Components in your solution – Sébastien Levert (Microsoft) | @sebastienlevert – 28:33  Resources Additional resources around the covered topics and links from the slides.\n D1: Site - Microsoft Graph Developer | aka.ms/graph D1: Tool - Graph Explorer | aka.ms/ge D1: Tool - Join the Microsoft 365 Developer Program today!  D1: Documentation - Install the Microsoft Graph PowerShell SDK  D1: Documentation - Microsoft Graph PowerShell overview  D2: Article - Learn from the community | aka.ms/LearnFromTheCommunity/ThisWeek D2: YouTube Playlist – Show \u0026amp; Tell :party_popper: Get inspired by community demos, scenarios, and interviews!  D2: Share your Story - New project story form for Learn from the community series – http://aka.ms/share-your-story D3: Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/mgt/docs D3: Documentation - Styling components in the Microsoft Graph Toolkit  D3: Documentation - Microsoft Graph Toolkit caching  D3: Documentation - Localizing the Microsoft Graph Toolkit components  D3: Tool - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | https://mgt.dev/ D3: Samples - MGT Sandbox | aka.ms/mgt/sandbox D3: Issues – MGT Issus | aka.ms/mgt/issues D3: Learn – Develop apps with the Microsoft Graph Toolkit | https://aka.ms/mgt/learn   Previous demos in Sébastien Levert](https://twitter.com/sebastienlevert)’s (Microsoft) | [@sebastienlevert series\n Discover the Microsoft Graph Toolkit – 7 December 2021  Microsoft Graph Toolkit – Using Login Component in your solutions – 14 December 2021  Microsoft Graph Toolkit – Using the Person Component in your solutions – 4 January 2022  Microsoft Graph Toolkit – Using the People Component in your solutions – 11 January 2022 Microsoft Graph Toolkit – Using the People Picker Component in your solutions – 18 January 2022  Microsoft Graph Toolkit – Using the Teams Channel Picker Component in your solutions – 25 January 2022  Using the MGT Agenda and Tasks Components in your solutions – 1 February 2022  Using the MGT Files Components in your solutions – 8 February 2022  Using the Microsoft Graph Toolkit Get Component in your solutions – 15 February 2022 Microsoft 365 PnP Weekly – Episode 154 (February 21st) with London/India - based Developer, Product Owner, Technical Architect, MVP, Vardhaman Deshpande (Valo Solutions) | @vrdmn | video | podcast  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on Github PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Viva Connections \u0026amp; SharePoint Framework call – February 24th at 7:00 am PST | https://aka.ms/spdev-spfx-call Microsoft 365 platform call – March 1st at 8:00 am PST | https://aka.ms/m365-dev-call M365 General Dev call – March 3rd at 7:00 am PST | https://aka.ms/m365-dev-sig Office add-in monthly call – March 9th at 8:00 am PST | https://aka.ms/officeaddinscall Adaptive Cards monthly call – March 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall Power Apps monthly call – March 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall Microsoft Identity Platform call – March 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members. More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\nRelated documents   M365 platform - Weekly 20220222.pptx (284 KB)  _“Sharing is caring”_ * * * _Microsoft 365 PnP team, Microsoft - 22nd of February 2022_ ","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-22nd-of-february-2022/images/recording-22nd-feb_hu041b98b07eac3998425b808b707d9eec_561206_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-22nd-of-february-2022/","tags":["Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 Platform Call – 22nd of February, 2022"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by London/India - based Developer, Product Owner, Technical Architect, MVP, Vardhaman Deshpande (Valo Solutions) | @vrdmn.\nTopics discussed in this session:\n Microsoft Teams and Microsoft 365 Platform development at Valo. Vardhaman’s focus on tabs, bots and meeting extensions along with the development of an Ideation solution.  How the Teams development experience has improved vastly in the last year.  Benefits building for Teams as opposed to just building a web app.  Creating multiple profiles in Edge for testing across multiple tenants.  The Valo tool stack for Teams development Vesa and Waldek affirm the critical role played by community in helping to create successful products for real world usage. And the importance of real-world use cases for product validation and evolution.   We also covered 12 articles published by Microsoft and the PnP Community over the last week. This week  Waldek – integrate MSAL/Angular with Teams (build a web app with SSO for Teams that works both inside Teams and outside Teams as a web app). Improve Angular Development experience around Teams. Working on new concepts for CLI for Microsoft 365. Vesa – Family vacation this week. Last week released SPFx v1.14 and working on new capabilities for v1.15 release by end of June.  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Thursday, February 17, 2022. Enjoy the show.  Video at Microsoft 365 Community YouTube channel.    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!” Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Measure your cloud carbon footprint with the Emissions Impact Dashboard for Microsoft 365 (Preview) - Peter Bergen (Microsoft) Learn how to create secure identity solutions using the Microsoft identity platform - Nick Adman (Microsoft) Teams JS SDK v2 Public Preview Update: Teams Apps in Office.com \u0026amp; Office App for Windows - Zakiullah Khan (Microsoft) Learn from the community: Chatbot for Microsoft Teams personal and group chats - Ayça Baş (Microsoft) | @aycabs Updated design guidance for Viva Connections custom cards and quick views - Vesa Juvonen (Microsoft) | @vesajuvonen “Lists for everyone” :studio_microphone: – The Intrazone podcast - Mark Kashman (Microsoft) | @mkashman , Miceile Barrett (Microsoft) | @MSFTMiceile and Ben Truelove (Microsoft) | @betruthfulness Using the Fluid Framework - Dan Wahlin (Microsoft) | @DanWahlin  Community articles  Connecting to SharePoint Online using Managed Identity with granular access permissions - Stian A. Strysse | @stianstrysse Copy SharePoint files from one tenant to another using Power Automate - Pieter Veenstra (HybrIT Services) | @PieterVeenstra How to: Bring Microsoft Teams Apps to Outlook - Tom Morgan (Modality) | @tomorgan List all external users in all site collections - Chandani Prajapati (Rapid Circle) | @Chandani_SPD, Albert-Jan Schot (BLISS.digital) | @appieschot and Paul Bullock (CPS) | @pkbullock Football Stats Viva Connections Mobile Card - Soumit Mukherjee | @msoumit, Sourav Paul | @spsouravp and Soumyadeep Mukherjee  Additional resources  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026quot; ","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-154-vardhaman-deshpande/images/Thumb-Ep154-February21_hu901b7d6be34f878e2e8382f3c2b98a88_554690_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-154-vardhaman-deshpande/","tags":["Office Add-ins","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 PnP Weekly - Episode 154 - Vardhaman Deshpande"},{"categories":["Microsoft Identity platform community call"],"contents":"   Call summary This month’s in-depth topic: Access Azure resources from software workload in different environments, no secrets necessary. When applications or services run in environments outside Azure, they need Azure AD application secrets to authenticate to Azure AD and access resources such as Azure and Microsoft Graph. These secrets pose a security risk if they are not stored securely and rotated regularly. Azure AD workload identity federation removes the need for these secrets in selected scenarios. Join this session to learn how you can use this capability to get rid of secrets in your scenario. Session opens - What are “workload identities” in Azure AD and what is Azure AD workload identity federation? Then presenter will step through 4 scenarios for accessing Azure resources without secrets and conclude with next steps in this topic area. This session was delivered by Uday Hegde – Architect, Microsoft Identity | @udayxhegde. Recorded February 17, 2022. Q\u0026amp;A in chat and at end of session.\nReferenced in this call  Articles - Identity in the cloud  Documentation - Overview of federated identity credentials in Azure Active Directory (preview)  Documentation - Workload identity federation (preview)  Documentation - What are workload identities?   Actions  Let us know how we’re doing and suggest topics for future calls, please complete this survey https://aka.ms/IDDevCommunityCallSurvey Join us for the next Microsoft Identity Platform community call on March 17th at 9:00am PT   Resources in General  Documentation - What is the Microsoft identity platform?  Documentation - Microsoft identity platform documentation  Microsoft Security - Integrate modern identity capabilities into your apps  Developer – Microsoft Identity Platform   Stay connected  Twitter https://twitter.com/microsoft365dev​ and @azuread YouTube https://aka.ms/M365DevYouTube​ (Developer channel) and https://aka.ms/m365pnp/videos (Community channel) Blogs https://aka.ms/m365pnp/community/blog Recurrent Invite https://aka.ms/IDDevCommunityCalendar  Related documents   Azure AD Workload identity federation.pptx (263 KB)  ","image":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-february-2022/images/identity-call-Thumbnail-February%202022_hubaecb1429526aaac35a145ee386fc609_133882_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-february-2022/","tags":["Microsoft 365","Azure","Microsoft Identity Platform"],"title":"Microsoft Identity Platform community call – February 2022"},{"categories":[],"contents":"This article is divided into 2 sections:\n Creating Dataverse Table with Choice, Date, Lookup type columns and; Creating a simple Power Apps app using that Dataverse table  Let’s jump into Creating a simple use-case where we will create Expense Table \u0026amp; Expense Category Tables with the following Data types of Columns,\nFor Expense Table, we will create below mentioned columns of mentioned Data types:\n Expense Amount: Currency Expense Description: Text Expense Category: Lookup from Expense Category Table Date of Expense: Date Only type  For Expense Category, we will create below mentioned column:\n Category Type: Choice  Above mentioned is the quick summary on Tables and Columns we will create, Let’s look into this step by step in more detailed fashion,\nStep 1: Navigate to https://make.PowerApps.com\nStep 2: From the left navigation select Dataverse \u0026gt; Tables \u0026gt; New Table as shown in the Fig 1.1\n   Fig 1.1 – Dataverse New Table\nStep 3: A panel will open when clicked on New table, fill in the details like Name, also give a** primary column** name, this will be basically creating a primary column with the given name when this table will be created, give some Description and select the Standard for Type of table as shown in below Fig 1.2. Then select Create table\n   Fig 1.2 – New Dataverse Table Demo_ExpenseTable with Primary Column as ExpenseId\nStep 3: Newly created Dataverse Table once created will look something like shown in below Fig 1.3,\nAlso notice that the primary column ExpenseId is created for the new table\n   Fig 1.3 – Dataverse Table created with primary column\nStep 4: Let’s modify the created Primary column, select the Primary column, and edit the details like change the Data type to Autonumber with Minimum number of digits as 1, Seed value as 1, as shown in Fig 1.4 then don’t forget to select Done and Save table at the end\n   Fig 1.4 – Edit the Primary Column ExpenseId \u0026gt; Select Done \u0026gt; Save table\nStep 5: Let’s quickly create another Dataverse table Demo_ExpenseCategory with CategoryId as the Primary column. Once the table is created, edit the Primary column as shown in Step 4, refer below mentioned Fig 1.5 \u0026amp; Fig 1.6\n   Fig 1.5 – Demo_ExpenseCategory table created with CategoryId as primary column\n   Fig 1.6 – Edit the CategoryId primary column \u0026gt; Done \u0026gt; Save table\nStep 6: Lets create a Choice type C#column in Demo_ExpenseCategory table, for this, navigate to the mentioned table, select Add column, choose Choice as Data type and then Add new choices as shown in fig 1.7. click on save it will redirect you to details panel as shown in Fig 1.8, select Done to create new column then Save table to reflect these changes in the table.\n   Fig 1.7 – Choice type column Demo_CategoryType\n   Fig 1.8 – Demo_CategoryType Choice column details\nWohoo, now your Demo_ExpenseCategory table with Choice column Demo_CategoryType is ready as shown in below Fig 1.9\n   Fig 1.9 – Dataverse table with choice column created\nStep 7: Now, go to Demo_ExpenseTable and create the columns as discussed at the start of the article and create Expense Amount, Date of Expense, Expense Description and Expense Category columns\nStep 8: Create Optional Demo_ExpenseAmount named Currency type column as shown in Fig 1.10, Select Done and Save table\n   Fig 1.10 – Demo_ExpenseAmount currency type column\nStep 9: Create optional Demo_ExpenseDescription named column of Data type Text as shown in Fig 1.11, select Done and Save table\n   Fig 1.11 – Demo_ExpenseDescription Text type column\nStep 10: Create optional column named Demo_DateOfExpense with Data type of Date only as shown in Fig 1.12, select Done and Save table\n   Fig 1.12 – Demo_DateOfExpense Date Only type of column created\nStep 11: Create optional column named Demo_ExpenseCategory with a Data type of Lookup wherein add the Demo_ExpenseCategory in Related table as shown in Fig 1.13, select Done and Save table\n   Fig 1.13 - Demo_ExpenseCategory lookup type column created\nWohoo, Demo_ExpenseTable is now created with all the 4 columns.\nAs both the Tables with columns are ready, go to each table and add few records by selecting Add record as shown in the below fig 1.14\n   Fig 1.14 – Add record to the created tables\nNow, it’s the time to create a simple Power App canvas app using this Demo_ExpenseTable,\nStep 12: Navigate to Home Page of Power Apps, select Create an app using Dataverse as shown in below Fig 1.15\n   Fig 1.15 – Create Power App canvas app using Dataverse\nStep 13: Once you select the Dataverse option, select the connection and choose the Demo_ExpenseTable and select Connect as shown in Fig 1.16\n   Fig 1.16– Adding connections and Table to create a Power App\nStep 14: Once it is connected, a Power App will be created for you with the Browse Details, Edit Details and View Details screen as shown in the below figures.\n   Fig 1.17 – Power Apps Browse Screen\n   Fig 1.18 – Power Apps Edit Screen\n   Fig 1.19 – Power Apps Details Screen\nNow, modify the fields in Browse, Edit and View details screen and you can go ahead and add new records into your table right from your Power App\nVoila, The Dataverse Table and Power App is ready and now you can use it and make further modifications to it.\nIn the upcoming article will investigate this Dataverse Power App in more detail. So, stay tuned!\nKeep Learning!\nKeep Sharing!\n","image":"https://pnp.github.io/blog/post/create-dataverse-expense-details-table-and-build-simple-powerapp/images/ShrushtiShah_32-1645173223300_hu8e7479d63592680d190672ad435fed63_58649_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/create-dataverse-expense-details-table-and-build-simple-powerapp/","tags":["Dataverse"],"title":"Create Dataverse Expense Details Table and build a simple Power Apps app using that table"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary One location the Microsoft 365 tenant – script samples gallery (138 scenarios and 193 scripts) now integrated into Sample Solution Gallery! Sign up and attend an AMA and other events this month hosted by Sharing is Caring. Added today - Ask me anything (PnPjs 3.0 – March 15th) and don’t forget the AMA on February 22 – PnP React Controls. Get the recognition you deserve, sign up for the PnP Recognition Program. Released Yo teams - yoteams-build-core v1.6.0 and Microsoft Graph Toolkit (MGT) v2.3.2, and Refreshed the MGT playground! To see current releases and latest updates/nightly builds, access the Repos via the links in table below. There were 6 new/updated script, 46 Bot samples, 2 Power Platform samples delivered this week. Wanted! – Teams Samples.\nOpen-source project status (Bold indicates new this call)**\n   Project Current Version Release/Status     PnP .NET Libraries - PnP Framework v1.8.0 GA with .NET 6.0 support added Prepping v1.9   PnP .NET Libraries - PnP Core SDK v1.5.0 GA with .NET 6.0 support added Prepping v1.6   PnP PowerShell v1.9.0 GA Release v1.10.0 imminent (next week?), In progress: V2 POC - .NET 6.0 based, Requires PowerShell 7.2   Yo teams - generator-teams v3.5.0 GA v4.0.0-next   Yo teams - yoteams-build-core v1.6.0    Yo teams – yoteams-deploy v1.1.0 GA    Yo teams - msteams-react-base-component v3.1.1    Microsoft Graph Toolkit (MGT) v2.3.2 GA Shipping v2.3.2 on Friday! Working on v3.0.0 - Aligning all Toolkit components to Fluent UI Web Components    Note\nWhile version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities.\n The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\n  Actions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Join us at the next Microsoft 365 platform call 22nd of February @ 8 AM PT  Latest news from Microsoft engineering on Microsoft 365 topics Demos:  Rabeb Othmani - PowerShell Snippets for Microsoft Graph Docs Ayca Bas - Learn from the Community – Introduction to new weekly initiative Sébastien Levert - Customizing MGT Components in your solution     Register for Sharing is Caring Events:  PnP Sharing is Caring - AMA (Ask Me Anything) - SPFx React Controls – Tuesday, February 22nd, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) – Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) – PnPjs – Tuesday, March 15th, 9am PST First Time Contributor Session – TBS soon Community Docs Session – Tuesday, March 1st, 2:00pm PT Power Platform Samples – First Time Contributor – Tuesday, March 8th, 2:00pm PT PnP – SPFx Developer Workstation Setup – TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – Tuesday, March 15th, 2pm PST First Time Presenter – TBS soon More than Code with VSCode – TBS soon Maturity Model Practitioners – TBS soon (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Download the recurrent invite for this call – http://aka.ms/m365-dev-sig Call attention to your great work by using the #PnPWeekly on Twitter.  Microsoft Teams Development Samples https://aka.ms/TeamsSampleBrowser\nDelivered - 46 Bot samples from the Microsoft Bot Framework Team – each sample shows a single activity, in a specific language – Typescript, C#, Python, .NET, Javascript, Java.\n Bot with Teams authentication Search messaging extension Action messaging extension Search messaging extension w/Auth and Config page Bot w/task module, adaptive card buttons Link unfurling File Upload Conversation Flow Start new thread in channel  Microsoft Power Platform Samples https://aka.ms/powerplatform-samples\n Teams Adaptive Card Reminders From Lists* - Norm Young | @stormin_30 SharePoint event registration Power App - Alex Clark | @sharepointalex  *These latest samples should show on site shortly after this call\nScript Samples: (https://aka.ms/script-samples)\n2 New Scenarios and 4 Script Updates:\n New Scenarios  Analyze users for known data breaches with have I been pwned - Albert-Jan Schot | @appieschot Delete orphaned temporary site pages - Brian McCullough | @bpmccullough   Updates or scenarios implemented with alterative tools  Get Site Usage Reports And Export It To CSV - Reshmee Auckloo | @reshmeeauckloo List all external users in all site collections - Chandani Prajapati | @Chandani_SPD Modernizing classic pages from on-premises sites - Paul Bullock | @pkbullock Remove orphaned redirect sites - Leon Armston | @LeonArmston    Article: Getting started with PnP Script Samples – aka.ms/script-samples/getting-started\n– Many thanks!\nTogether Mode!  Mid-February and all\u0026rsquo;s well at the amphitheater. Thank you for joining your community today. Demos Introduction to Adaptive Card Studio VS Code extension – step through the Visual Code extension that makes it easy to add to and work with Adaptive Cards in your project. The Adaptive Cards button exposes all Adaptive Cards resident in your workspace. Within the extension, you can see and download samples (code, example, snippets, container) from AdaptiveCards.io. Today you can send a card (layout, sample, json) to recipient in Outlook and soon Teams. Solving reCaptcha with Power Automate Desktop – resolves Google Captcha challenges using Power Automate Desktop for RPA (robotic process automation) and Outlook Actionable Messages. User need not go to remote (unattended) machine. Bot captures image of screen, sends mail to user, user responds, and bot executes instructions. Manages repeated challenges, timeouts, and user contact attempts. Uses an adaptive Card, 2 Cloud flows and Dataverse. Learn how in this demo.\nBringing in your own data to Microsoft Search – using Azure Logic Apps and Graph connectors (Microsoft and Ecosystem Partner built, or Graph Search API) for pulling in external data sources. Use Graph search API - Create connector in Graph, Register connector in search, Create an Adaptive Card for viewing results, and Add items into indexes. Demo shows pulling content from Trello, using Graph calls in 3 Logic Apps (Search, Setup and Trigger). Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics  PnP .NET library updates - Bert Jansen (Microsoft) | @O365bert – 6:32 PnP PowerShell updates - Bert Jansen (Microsoft) | @O365bert – 8:24 yo Teams updates - Wictor Wilén (Microsoft) | @wictor – 9:08 Microsoft Graph Toolkit updates - David Warner II (Catapult Systems) | @DavidWarnerII – 10:35 Microsoft Script Samples - David Warner II (Catapult Systems) | @DavidWarnerII – 2:35 Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German – 11:17 Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam – 12:32 Demo 1: Introduction to Adaptive Card Studio VS Code extension – Tim Cadenbach | @TimCadenbach – 15:18 Demo 2: Solving reCaptcha with Power Automate Desktop – Tomasz Poszytek | @TomaszPoszytek – 21:33 Demo 3: Bringing in your own data to Microsoft Search – Kevin McDonnell | @kevmcdonk\n– 34:25  Resources Additional resources around the covered topics and links from the slides.\n D1: Community site - MadeWithCards.io  D1: Site – MAXIMAGO  D1: Visual Studio Marketplace - Adaptive Card Studio  D2: Demo - Solving reCaptcha v2 challenge with Power Automate Desktop  D2: Demo – Actionable Messages using Adaptive Cards - ultimate guide  D2: Documentation - Send physical clicks on a web element  D2: Documentation - Introduction to Power Automate for desktop  D2: Demo - Adaptive Cards and the Power Platform to solve captchas  D3: Documentation - externalConnection resource type  D3: Repo – Create Schema example  D3: Article - Creating a custom Microsoft Search connector with Logic Apps  D3: Templates - Search Layout designer  D3: Samples - MSSearch-Samples  D3: Samples - Samples for Microsoft Search Connectors – Twitter  D3: Demo – Latest on Cloud Hybrid Search (SSA) \u0026amp; Graph connectors​ for indexing content from on-premises – Harshit Kumar (Microsoft)  Microsoft 365 PnP Weekly – Episode 153 (February 14th) with Redmond, Washington, US-based Senior Program Manager in the OneDrive and SharePoint organization responsible of the Power Platform integration, Sudha Narayanan (Microsoft) | video | podcast Microsoft 365 PnP Weekly – Episode 152 (February 7th) with Toronto, Ontario, Canada-based Microsoft Cloud Solution Architect and MVP Alum, Hugo Bernier (Microsoft) | @bernierh | video | podcast  General resources  Script Samples - Getting started with PnP Script Samples – aka.ms/script-samples/getting-started Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant – Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v3.x | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Microsoft 365 platform call – February 22nd at 8:00 am PST | https://aka.ms/m365-dev-call Viva Connections \u0026amp; SharePoint Framework call – February 24th at 7:00 am PST | https://aka.ms/spdev-spfx-call M365 General Dev call – March 3rd at 7:00 am PST | https://aka.ms/m365-dev-sig Office add-in monthly call – March 9th at 8:00 am PST | https://aka.ms/officeaddinscall Adaptive Cards monthly call – March 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall Power Apps monthly call – March 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall Microsoft Identity Platform call – March 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar  General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls!\nYou can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\nRelated documents   Bringing in your own data to Microsoft Search.pptx (294 KB)  PnP Core SIG - 220217.pptx (294 KB)  * * * _“Sharing is caring”_ _Microsoft 365 Community (PnP) team, Microsoft - 18th of February 2022_ ","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-17th-of/images/recording-17th-feb_hu518f6836d3b9e7e3059419322a192c85_255706_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-17th-of/","tags":["Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 Developer Community Call recording – 17th of February, 2022"},{"categories":["Adaptive Cards community call"],"contents":"Call summary The following topics are covered in this month’s community call. Demo: Adaptive Cards Video Player Bot on Teams (set up an Adaptive Card that plays video content within Teams environment, complete sample code) - Alexis Kinzelin (Microsoft), and Q\u0026amp;A – J.P. Roca (Microsoft) and Alexis Kinzelin (Microsoft) field general and demo related questions. This call was hosted by J.P. Roca (Microsoft) | @jpthepm. Recorded on February 10, 2022.\n  Agenda  Adaptive Cards Video Player Bot on Teams :movie_camera: - Alexis Kinzelin (Microsoft) – 00:28 Q\u0026amp;A :white_question_mark: J.P. Roca (Microsoft) | @jpthepm and Team – 22:06  Demo Adaptive Cards Video Player Bot on Teams – set up an Adaptive Card that plays video content within Teams. Extends “Company Communicator” app and uses SSO authentication, Microsoft Teams “stage view” and deep linking to play full screen video, no redirection to a web-browser. For videos hosted on SPO or public hosted. Video owner configures Adaptive card via personal bot that generates an Adaptive Card with deeplink to send to users. Recipients with permissions to SharePoint site hosting video, open video without having to authenticate. Sample code and Q\u0026amp;A. Referenced in this call  Repo - Teams Video Player Bot  Documentation - Tabs link unfurling and Stage View  Teams template - Company Communicator App Template  Documentation – Invoke Stage View through deep link  Repo - Tabs link unfurling and Stage View  Documentation - List apps installed for user   Resources in General  Let us know the features you need https://aka.ms/ACRoadmap Schema Explorer - https://adaptivecards.io/explorer/Action.Execute.html Designer - https://adaptivecards.io/designer/  Get started with Templating - https://aka.ms/ACTemplating Browse the Adaptive Cards Code \u0026amp; Contribution Guidelines - https://aka.ms/ACRepo Find tools, sample cards and more - https://www.madewithcards.io Issues creating AC interfaces https://github.com/microsoft/AdaptiveCards/discussions  Stay connected  Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365PnP/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/adaptivecardscommunitycall Next call – March 10th at 09:00am PST  Related documents   Adaptive Cards February 2022 Deck.pptx (261 KB)  ","image":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-february-2022/images/adaptive-cards-February%20Thumb_hu67254f7a6fe5a33b1f23c9dd7fa73a10_291734_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-february-2022/","tags":["Adaptive Cards","Community Call","Microsoft 365"],"title":"Adaptive Cards community call – February 2022"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm, are joined by UK-based Office Development MVP, MCT, MCM, focused on Microsoft 365, Microsoft Teams, mobile and AI/ML – Bill Ayers (Flow Simulation Ltd) | @SPDoctor. In this session Bill shares his tips on dealing with data overload, technology updates, event management, and religious like enthusiasm. His advice – learn broadly, go deep as necessary to solve specific problem, avoid reacting to notifications, beware of same functionality, new name. Adopt latest technology when clear business reason is established. The session was recorded on Monday, February 15, 2021.\n Video at Microsoft 365 Community YouTube channel.    Podcast format at https://pnpweekly.podbean.com.    Did we miss your article? Please use #PnPWeekly hashtag in the Twitter for letting us know the content which you have created. As always, if you need help on an issue, want to share a discovery, or just want to say: “Job well done”, please reach out to Vesa, to Waldek or to your Microsoft 365 PnP Community.\nSharing is caring!\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-114/images/pnp-weekly-episode-114_hu104697f85b0537fef88296cea5428ccc_891546_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-114/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 114"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from February 15th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 890+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring this month and next. Upcoming AMAs on PnP React Controls and on Graph and MGT. Tune into the weekly  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics – hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Microsoft 365 PnP Weekly - Videos, Podcasts focused on the latest news and topics on Microsoft 365 hosted by Vesa Juvonen and Waldek Mastykarz   Hear about the latest 11 Microsoft 365 Platform related stories and view 3 great demos delivered by Microsoft presenters on the latest capabilities of the Microsoft 365 platform. The great people, supportive organizations and solid work done in this community over the last month is recognized today! Available now – the Microsoft 365 Platform Community (PnP) – February 2022 update.  New series launched – Learn from the community. This week’s article: Learn from the community: Chatbot for Microsoft Teams personal and group chats  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout and live at end of the call. Microsoft 365 Platform News Flash  Updated design guidance for Viva Connections custom cards and quick views Microsoft Graph Mailbag – Search DriveItems for Only Files Announcing SharePoint Framework 1.14 Release Candidate – with updates for Viva Connections, Microsof\u0026hellip; Client Secret expiration now limited to a maximum of two years Learn from the community: React web app and Azure QnA bot to centralize learning resources Learn from the community: Chatbot for Microsoft Teams personal and group chats \u0026lsquo;We kept our incredible team connected using Teams and Microsoft 365\u0026rsquo; New and exciting features available for Microsoft Teams breakout rooms Microsoft Teams performance improvements reduce power consumption in meetings by up to 50% New Microsoft Viva Adoption Resources are here! Most used SharePoint Framework solutions from the Store - January 2022    Actions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  PnP Sharing is Caring - AMA (Ask Me Anything) - SPFx React Controls – Tuesday, February 22nd, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) \u0026ndash; Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST First Time Contributor Session – TBS soon Community Docs Session – Tuesday, March 1st, 2:00pm PT Power Platform Samples – First Time Contributor – Tuesday, March 8th, 2:00pm PT PnP – SPFx Developer Workstation Setup – TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – Tuesday, March 15th, 2pm PST First Time Presenter – TBS soon More than Code with VSCode – TBS soon Maturity Model Practitioners – TBS soon (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Thank you everybody for joining the call today, for being part of this community and for just being you in this picture. You Rock! Demos   Introduction to Microsoft Information Protection Policy APIs – MIP capabilities help organizations to classify, label, manage and protect data based on sensitivity. Learn about the MIP SDK (File, Policy and Protection SDKs). Microsoft Graph exposes MIP Policy APIs - policy-specific functionality and resolves state to Actions (add a header/footer, add metadata…). Graph (Beta) endpoint Policy APIs reviewed - Get Labels, Evaluate (add/remove labels), Extract Label (metadata), are moving to Graph this week.   Latest on Cloud Hybrid Search (SSA) \u0026amp; Graph connectors​ for indexing content from on-premises – Cloud Hybrid Search a.k.a. Cloud SSA, creates a single cloud-based index and interleaves search content from multiple internal/external sources in results. Alternatively, Microsoft Search powered by Microsoft Graph uses Graph connectors (3 types) to bring in data from sources. See search experiences that use Graph connectors rolling out in 2022 - Intelligent Discovery, Viva Topics, Context IQ, etc. Sign-up for Graph connectors SDK Preview.   Using the Microsoft Graph Toolkit Get Component in your solutions – the very flexible all-purpose GET query allows developers to connect to any endpoint in Microsoft Graph and render the MTTs from Graph directly inside your UI. E-mail and files explorer experiences are showcased. E-mail – get, read, write, delete, and the best part, you can customize the UI layout to your exact requirements. Files explorer is built using hTWOo and uses MGT.   Thank you for your creativity and work execution. Samples are often showcased in Demos.\nTopics  Latest updates and news on the Microsoft 365 platform – Vesa Juvonen (Microsoft) | @vesajuvonen – 7:16 Monthly contributors on the Microsoft 365 platform community efforts – Vesa Juvonen (Microsoft) | @vesajuvonen – 9:38 D1: Introduction to Information Protection Policy APIs – Tom Moser ​(Microsoft) – 12:50 D2: Latest on Cloud Hybrid Search (SSA) \u0026amp; Graph connectors​ for indexing content from on-premises – Harshit Kumar (Microsoft) – 28:25 D3: Using the Microsoft Graph Toolkit Get Component in your solutions – Sébastien Levert (Microsoft) | @sebastienlevert – 40:32  Resources Additional resources around the covered topics and links from the slides.\n D1: Article - Microsoft Information Protection SDK: Now Generally Available! | aka.ms/mipsdk D1: SDK - Microsoft Information Protection Software Development Kit Version 1.11 | aka.ms/mipsdkbins D1: Documentation - Microsoft Information Protection SDK documentation | aka.ms/MIPSDKDocs D1: Code Samples - mip sdk | aka.ms/MIPSDKSamples D1: Documentation - Information Protection overview  D1: Tool - Microsoft.InformationProtection.Protection  D1: Documentation - Learn about sensitivity labels D2: Documentation - Overview of Microsoft Graph connectors | aka.ms/GraphConnectors D2: Preview - Microsoft Graph connectors SDK - Preview Sign Up | aka.ms/GCSDKPreview D2: Survey - SharePoint Search: Cloud SSA \u0026amp; Microsoft Graph Connectors | aka.ms/CloudSSA D3: Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/mgt/docs D3: Documentation - Get component in the Microsoft Graph Toolkit  D3: MGT Playground – mgt-get  D3: Repo - MGT Sandbox  D3: Learn - Develop apps with the Microsoft Graph Toolkit | aka.ms/mgt/learn  Previous demos in Sébastien Levert’s (Microsoft) | @sebastienlevert, Microsoft Graph Toolkit (MGT) series\n Discover the Microsoft Graph Toolkit – 7 December 2021  Microsoft Graph Toolkit – Using Login Component in your solutions – 14 December 2021  Microsoft Graph Toolkit – Using the Person Component in your solutions – 4 January 2022  Microsoft Graph Toolkit – Using the People Component in your solutions – 11 January 2022 Microsoft Graph Toolkit – Using the People Picker Component in your solutions – 18 January 2022   Microsoft Graph Toolkit – Using the Teams Channel Picker Component in your solutions – 25 January 2022  Using the MGT Agenda and Tasks Components in your solutions – 1 February 2022  Using the MGT Files Components in your solutions – 8 February 2022  Microsoft 365 PnP Weekly – Episode 153 (February 14th) with Redmond, Washington, US-based Senior Program Manager in the OneDrive and SharePoint organization responsible of the Power Platform integration, Sudha Narayanan (Microsoft) | video | podcast  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on Github PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Power Apps monthly call – February 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call – February 17th at 7:00 am PST | https://aka.ms/m365-dev-sig Microsoft Identity Platform call – February 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Microsoft 365 platform call – February 22nd at 8:00 am PST | https://aka.ms/m365-dev-call Viva Connections \u0026amp; SharePoint Framework call – February 24th at 7:00 am PST | https://aka.ms/spdev-spfx-call Office add-in monthly call – March 9th at 8:00 am PST | https://aka.ms/officeaddinscall Adaptive Cards monthly call – March 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members. More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\nRelated documents   M365 platform - Weekly 20220215.pptx (285 KB)  _“Sharing is caring”_ * * * _Microsoft 365 PnP team, Microsoft - 16th of February 2022_ ","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-15th-of-february-2022/images/recording-15th-feb_hu041b98b07eac3998425b808b707d9eec_561316_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-15th-of-february-2022/","tags":["Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 Platform Call – 15th of February, 2022"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Redmond, Washington, US-based Senior Program Manager in the OneDrive and SharePoint organization responsible of the Power Platform integration, Sudha Narayanan (Microsoft).\nTopics discussed in this session:\n Sudha’s present Program Manager role in OneDrive SharePoint (ODSP) team is focused on automations and visualizations (Power Platform integration). Previously worked as Developer/Analyst in Viva Topics, SharePoint Syntex and Azure DevOps.  Role of a Microsoft Program Manager – solve problems and change the world. Working with customers and engineers, focusing on a specific problem area, and bringing capabilities from across Microsoft to address these opportunities.  Career progression spanning several organizations both in India and US.  How got to Microsoft – computer Science engineering graduate, developer, curiosity, speaking with customers, shadowing, taking a chance and working on a problem, moving a few times, finding supportive managers and knowing your superpowers. Differences in the Azure Dev Ops and ODSP orgs. Process adherence and leadership transparency.  Cultural revelations both in countries and in organizations. Very open career conversations in US. Microsoft – “fine, you do you.” Worldwide attitude - get happiness from your work. Advice to woman in IT. Constantly look for people (plural) to look up to and go talk to them. Learn to learn. Value yourself and ask for what you are worth.   We also covered 17 articles published by Microsoft and the PnP Community over the last week. Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, February 14, 2022. Enjoy the show.  Video at Microsoft 365 Community YouTube channel.    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!” Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Microsoft Teams performance improvements reduce power consumption in meetings by up to 50% - Robert Aichner (Microsoft) Create interactive meeting apps for Microsoft Teams - Microsoft Most used SharePoint Framework solutions from the Store - January 2022 - Vesa Juvonen (Microsoft) | @vesajuvonen Microsoft Graph Mailbag – Search DriveItems for Only Files - Brian T. Jackett (Microsoft) | @BrianTJackett Announcing SharePoint Framework 1.14 Release Candidate – with updates for Viva Connections, Microsof\u0026hellip; - Vesa Juvonen (Microsoft) | @vesajuvonen Client Secret expiration now limited to a maximum of two years - Microsoft Learn from the community: React web app and Azure QnA bot to centralize learning resources - Ayça Baş (Microsoft) | @aycabs  Community articles  Showing and hiding content in Adaptive Cards - Tomasz Poszytek | @TomaszPoszytek Comparing two arrays without an apply to each? - Damian Bird (Incremental Group) | @DamoBird365 Changing a SharePoint Site URL When Connected to Microsoft Teams - Marc D Anderson (Sympraxis Consulting) | @sympmarc Migrate a Planner plan to a List using CLI for Microsoft 365 - Albert-Jan Schot (BLISS.digital) | @appieschot Create a custom connector in the Power Platform – The WordPress example - Pieter Veenstra (HybrIT Services) | @PieterVeenstra SharePoint Syntex: Pre-built \u0026amp; Pre-Trained Models now available for Invoices \u0026amp; Receipts](https://www.leonarmston.com/2022/02/sharepoint-syntex-pre-built-pre-trained-models-now-available-for-invoices-receipts/) - Leon Armston (Intelogy) | [@LeonArmston Announcement tweet on the PnPjs v3 - PnPjs crew | @m365pnpjs Adaptive Card Host - Reusable SPFx controls react control - Fabio Franzini | @franzinifabio Microsoft Lists Wordle Game - Microsoft Lists formatting definition - Tetsuya Kawahara | @techan_k Episode #193 - Creating OneNote pages via Microsoft Graph - Paolo Pialorsi (PiaSys) | @PaoloPia  Additional resources  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026quot; ","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-153-sudha-narayanan/images/Thumb-Ep153-February7_huea7c3c7ef48eed89302c66aa3ced96fd_530371_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-153-sudha-narayanan/","tags":["Extensions","Microsoft 365","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 PnP Weekly - Episode 153 - Sudha Narayanan"},{"categories":["Office add-in developer community call"],"contents":"Call summary This month\u0026rsquo;s community call features updates on Excel data type APIs (Review card view anatomy, data types, composable building blocks, New Values API and Data Types in Custom Functions) – Chris Gross, Senior Program Manager (Microsoft), Word Online API updates (Demo of In Preview capabilities – Comment and Track changes, Coming soon – Fields) – Phoebe Yuan, Program Manager (Microsoft) and Outlook add-ins and Outlook REST V2 decommission (move to Graph or EWS before Nov 2022, APIs impacted, exceptions called out) – Juan Balmori, Principal Program Manager (Microsoft). This month’s Community spotlight recognizes Maarten van Stam (Deloitte) for his continued contributions to this community. Q\u0026amp;A both at end of call and in chat throughout call. Please register for the PnP Recognition Program. The call was hosted by David Chesnut (Microsoft) | @davidchesnut. Recorded February 9, 2022.\nMicrosoft presenters  Chris Gross, Senior Program Manager Pheobe Yuan, Program Manager Juan Balmori, Principal Program Manager    Agenda  Excel data type APIs – Chris Gross, Senior Program Manager (Microsoft) – 01:07 Word Online API updates – Phoebe Yuan, Program Manager (Microsoft) – 16:50 Outlook add-ins and Outlook REST V2 decommission – Juan Balmori, Principal Program Manager (Microsoft) | @juaneloBalmori – 22:40 Community spotlight: Maarten van Stam (Deloitte) – 38:49 Q\u0026amp;A – 39:35  Actions  Register for the PnP Recognition Program  Q\u0026amp;A (Question \u0026amp; Answers) Excel data type APIs Would dot notation formula work if you name the cell? So instead of `=B1.Address` can you do `=MyCell.Address`?\nYes! We have tried to make it as accessible as possible.\nWord online API updates Can we use bookmarks in content controls?\nYes, the Word APIs support this.\nWhen are getting events like `on close` / `on open` / `on share` in Word?\nSorry, we haven\u0026rsquo;t had a plan to enable these APIs yet but would love to hear more scenarios around this at https://aka.ms/m365dev-suggestions.\nCan we also get the content of a field or only the list of fields?\nYou can get the field contents as well.\nThe current preview of Word APIs has been going a long time. When will this release (with version number)?\nNo definitive ETA yet. As we have a bunch of new APIs in preview for Word, we\u0026rsquo;re planning to have new requirement sets for these APIs.\nOutlook add-ins and Outlook REST V2 decommission Does the extension for add-ins apply only to add-ins deployed via the store? What about enterprise deployed add-ins?\nThe extension applies to all add-ins regardless of how they are deployed. As long as the add-in runs before November 2022, it will be granted the extension. Add-ins developed after November 2022 will not be granted the extension.\nIf the manifest is changed after November 2022 on an enterprise install, will this affect the extension granted to the add-in? Will the detection of pre-existing add-ins be tied to the manifest ID?\nNo, the manifest is not part of how extensions are tracked for add-ins. There is a token passed on the call that we identify the add-in with.\nCould we have a demo of a basic Outlook add-in using Microsoft Graph in the future?\nYes, please see our Outlook SSO sample at: https://github.com/OfficeDev/Office-Add-in-samples/tree/main/Samples/auth/Outlook-Add-in-SSO.\nIs there a way to check if a certain add-in\u0026rsquo;s ID is on your \u0026ldquo;extension\u0026rdquo; list?\nYes, you can submit a REST API Add-in verification request here: https://aka.ms/RESTCheck.\nI have a legacy client who is using on-premise Exchange only with Azure AD hybrid. We\u0026rsquo;re having to fall back to rest.\nYou want to use EWS in this case.\nMiscellaneous Q\u0026amp;A I have a question on how to manage an Office Add-in with multiple task panes. I\u0026rsquo;m creating an Excel add-in with two task panes. Can I use the same file.html and only change the content of the file, based on the URL routing (react-router-dom)?\nYou could do this by passing a parameter in the URL request, such as \u0026ldquo;index.html?page1\u0026rdquo; and \u0026ldquo;index.html?page2\u0026rdquo;. Then, when your page loads, you use the parameter to render the appropriate UI. You can also use the same parameter approach in the manifest file to specify which task pane to load.\nWe are getting an increased number of reports from customers that our add-in sporadically disappears from the ribbon in Word. It is a problem for us, as people don\u0026rsquo;t use what they can\u0026rsquo;t see. Many are very un-tech savvy, and don\u0026rsquo;t know how to reactivate add-ins (especially if they are used to their central admin pushing them out to them).\nIs this a known issue? Is there any setting in the manifest file that we might have missed? We would appreciate any information that might point us in the right direction to solve this.\nSorry to hear this is happening. We\u0026rsquo;d like to look into this more. Can you please create a GitHub issue at https://github.com/OfficeDev/office-js/issues? We need more information like whether its specific to a platform or happening on all platforms. Is it happening only for centrally deployed add-ins or user deployed as well? Is it specific to an app, all apps? Please use the Issues template and we\u0026rsquo;ll follow up with you on the GitHub issue.\nAre there any updates on using Word JS APIs to compare two word documents programmatically? Something similar to the Document.Compare method but for the JS API. Thank you!\nWe don\u0026rsquo;t have anything in the works on this. Can you please submit a suggestion at https://aka.ms/m365dev-suggestions? If you can provide more details about this scenario that would be super helpful.\nAre there any updates to this feature request? Office JS Save and Close methods for Word, Excel and PowerPoint\nWe don\u0026rsquo;t have plans at this time. It would be great if we could connect with you and learn more about this scenario. If you can reach out to us on a future community call chat, we can set up some more direct communication. Thanks!\nIn \u0026ldquo;Office Add-ins community call – December 8, 2021\u0026rdquo;, the answer was \u0026ldquo;Outlook on mobile will support event-based add-ins first, and then smart alerts.\u0026rdquo; This is very good news! Our customers are asking for a mobile add-in that will confirm the content when sent. Just to confirm, do you plan to introduce only Smart Alerts in Outlook Mobile, and not the On-send feature? Also, will Smart Alerts be part of your 2022 Q2 goals? We are very excited about getting an add-in working by events in Outlook Mobile, thank you!\nYes, this is on the backlog. The Outlook mobile team is focusing first on event-based add-ins (compose event). They\u0026rsquo;re hoping to release this soon. After that, they plan to roll out smart alerts.\nCan Power automate \u0026lsquo;Excel Run script\u0026rsquo; run macros in a .xlsm file?\nNo, you can\u0026rsquo;t run VBA macros using the Run Script action. However, you can run Office Scripts in a .xlsm file. See https://docs.microsoft.com/office/dev/scripts/develop/macros-power-automate for more information.\nIs it possible to get the w14:paraId attribute value for paragraphs using the API? When getting the Open XML, it is not included even if the paragraphs have w14:paraId attributes.\nThanks for the question, which is super interesting! Can you please post this on Stack Overflow at https://stackoverflow.com/questions/tagged/office-js with more details so we can have a deeper look?\nAre there any plans to allow change of appointment organizer?\nThis is not allowed by the Outlook user experience, so there really isn\u0026rsquo;t a way to add extensibility here.\nWe have a client using Outlook 2019 Volume License edition and they are stuck in using Internet Explorer as the host, is there any intention to update this to support Edge/Chromium as later e3/e5 builds do and the retail version does\nAs per Browsers used by Office Add-ins - Office Add-ins | Microsoft Docs, Office 2019 uses Trident (IE), there is no plan to backport. If they want to stay in that licensing model they can upgrade to Office 2021 which uses WebView2.\nIs there a plan to support Message.Compose on native mobile add-ins?\nYes, we are working on this.\nResources  Documentation – Call Exchange web services from an Outlook add-in | https://docs.microsoft.com/office/dev/add-ins/outlook/web-services REST API Add-in verification request – https://aka.ms/RESTCheck.  Article – Outlook REST API v2.0 production and beta endpoint deprecation | https://devblogs.microsoft.com/microsoft365dev/outlook-rest-api-v2-0-deprecation-notice Sample – Single Sign-on (SSO) sample Outlook add-in | https://github.com/OfficeDev/Office-Add-in-samples/tree/main/Samples/auth/Outlook-Add-in-SSO   Office Add-ins community call  Upcoming agenda and previous call resources Recurring, monthly community call calendar invite Community call topic requests and questions Community call recordings on the YouTube Microsoft 365 community channel  Office Add-ins feedback  Technical questions – Microsoft Q\u0026amp;A (office-js-dev), (office-addins-dev) Issues – GitHub Recommendations and suggestions – Microsoft 365 Developer Platform ideas  ","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-february-9-2022/images/office-add-ins-Thumb%20Feb%202022_hu0cfc00a3f70655e1b5f8078144d6a694_257071_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-february-9-2022/","tags":["Office Add-ins","Microsoft 365"],"title":"Office Add-ins community call – February 9, 2022"},{"categories":[],"contents":"The two arrays I have two arrays in Power Automate, whilst very similar in structure (key/value pairs) the unique ID for both arrays is named differently (id vs PersonId) but I want to compare both and return only those that do not appear in the Array 1. We can see from the image below that object id 3 \u0026amp; 4 are not present in Array 2.\n   Using an Apply to Each The most common method for comparing these two arrays will involve using an apply to each, maybe even nested apply to each actions. This results in a very inefficient flow. It will use up far more api calls than are required and result in your flow taking a lot longer to run. You might even require a variable to append each object during the loop and a final compose to output the contents of the new variable.    Above is an example of an apply to each solution that when run on the two original arrays, takes 2 seconds to complete on 5 records!\nUsing Select and Filter Array Actions Using Select to establish an array of PersonID\u0026rsquo;s First, I want to establish an array of PersonID\u0026rsquo;s, as I will use this to check if the ID of the first array appears in the Array of PersonID\u0026rsquo;s. This can be done using a select action in text mode, by clicking on the icon on Select (bottom right hand corner).\n   The output of which demonstrates how we have converted our 2nd Array into an array of ID\u0026rsquo;s.\n   Using Filter Array to establish missing objects With Array 1 as the input to our filter array action, we can check if the id item()?[\u0026lsquo;id\u0026rsquo;] of each object is not contained (does not contain) within the array of PersonID\u0026rsquo;s we have created using the select previously body(\u0026lsquo;select\u0026rsquo;). This is all achieved using a single action and will run on large datasets in a fraction of a second, using only the single api call.\n   Below we can see the input of Array 1, with the history output showing only id\u0026rsquo;s 3 \u0026amp; 4 being returned.\n   Finally, if your requirement is to get an array of id\u0026rsquo;s that are contained within both arrays, i.e. object ID\u0026rsquo;s 1, 2 and 5, you can simply change the expression to contains.\n   Running this on Larger Data Sets? Below you will see the flow having run on 100 records in an array. The Select/Filter method has completed in 0 seconds once more, but the apply to each has taken 40 seconds and whilst you could increase the overall speed by turning on concurrency, do you really want to be running hundreds, maybe thousands of API calls using an apply to each, when you can get the job done in two, Select and Filter?\n   Please let me know if you have been able to implement this within your own solution and the time/efficiency you have introduced as a result.\nAbout Me I am Microsoft 365 Consultant working on the Power Platform, a Microsoft Power Automate Forum Super User and a Microsoft Business Applications MVP (2022). I have a blog www.DamoBird365.com where I share tips and tricks like this as I explore potential use cases that I am made aware of through work and through play. I also run a YouTube channel www.youtube.com/c/DamoBird365 where I demonstrate tips like above in my walkthrough demos. I am happy for folk to contact me via Social Media as DamoBird365 to discuss the technology, learn and share ideas and concepts.\n","image":"https://pnp.github.io/blog/post/comparing-two-arrays-without-an-apply-to-each/images/DamoBird365_0-1644836389622_hu9739c7807c802f36dfff350d1df40572_47028_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/comparing-two-arrays-without-an-apply-to-each/","tags":["Power Automate"],"title":"Comparing two arrays without an apply to each?"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"Viva Connections \u0026amp; SharePoint Framework bi-weekly community call recording from February 10th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\n  Call summary  Tune in each Tuesday for the Microsoft 365 platform community call. Next call on the 15th of February @ 8 AM PT  Latest news from Microsoft engineering on Microsoft 365 topics Tom Moser - Introduction to Information Protection Policy APIs Harshit Kumar - Latest on Cloud Hybrid Search (SSA) \u0026amp; Graph connectors Sébastien Levert - Using the MGT Get Component in your solutions Q\u0026amp;A   Register for training events this quarter hosted by Sharing is Caring. Next week: Power Platform Samples – First Time Contributor – Monday, February 14th, 1pm PST, More than Code with VSCode – Tuesday, February 15th, 2pm PST, and Maturity Model Practitioners – Tuesday, February 15th, 7am PST Register for the PnP Recognition Program. SharePoint Framework 1.14 RC is now available! Latest SharePoint Framework Road Ahead updates  Join the updated Microsoft 365 ISV Benefit program – for ISV and SI’s to get help with Microsoft Teams and Microsoft Viva development PnP project activities in the last two weeks:  SharePoint Framework v1.14 RC PnPjs – v2.12 and v3.0 releasing February 14th CLI for Microsoft 365 v5.0 Preview PnP Modern Search – v4.5.4   5 new/updated web parts and 1 ACE were delivered in the last two weeks! Your contributions are appreciated by many across the community.  Latest project updates include (Bold indicates update from previous report 2 weeks ago)    PnP Project Current version Release/Status     SharePoint Framework (SPFx) v1.13 GA, v****1.14 RC GA targeted for mid-February, v1.15 in Spring   PnPjs Client-Side Libraries v2.12 GA v3.0 releasing February 14th. Note: v2.12 is final v2 release   CLI for Microsoft 365 v4.3.0 GA, v5.0 Preview    Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.5.0 3.5.0 supports SPFx v1.13    Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.3.0 3.3.0 supports SPFx v1.13    PnP SPFx Generator v1.16.0 v1.17.0 on the way   PnP Modern Search v4.5.4, v3.23.0     The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place as always in chat throughout the call.\n Thank you for joining the call today and/or for viewing the recording. You are part of making this a truly awesome community. Actions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  PnP Sharing is Caring - AMA (Ask Me Anything) - SPFx React Controls – Tuesday, February 22nd, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) \u0026ndash; Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST First Time Contributor Session – TBS soon Community Docs Session – TBS soon  Power Platform Samples – First Time Contributor – Monday, February 14th, 1pm PST PnP – SPFx Developer Workstation Setup – TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – TBS soon First Time Presenter – TBS soon More than Code with VSCode – Tuesday, February 15th, 2pm PST Maturity Model Practitioners – Tuesday, February 15th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/spdev-spfx-call  Demos  Document Links Accordion SPFx Web Part – takes information from a list or library, groups by metadata and displays in an interactive way. Resources used: PnP React Controls (Accordion, Carousel, File Picker…) and PnPjs (Fluent API, Batching, Caching…). Configure the web part – select library, content type… Simple, elegant and native appearing UI. Desktop and mobile experience. Powerful as it reuses existing controls to accelerate development and benefits community when shared. New Development Containers for SPFx Samples – it is now possible to build and test samples built in any version of SPFx without worrying about dependencies with remote container support in VS Code. Using Docker Desktop and the Remote containers VS Code extension (Preview). Understand the benefits of using containers, and the solution including manifests, certificate trust, rebinding ports. Find out how to tell if sample is supports containers using documentation and more. All SPFx samples being containerized, starting with v1.13, then v1.12 …  Viva Connections – Consuming SharePoint Online Data in SPFx Adaptive Card Extensions - see 2 simple, quick and powerful examples of how to get and render a list of items from a Microsoft List/SharePoint list either using native SharePoint support in SPFx or using PnPjs into an ACE QuickView card. Key points to remember – ACEs are built on top of SPFx, also can use PnPjs, and data binding works as usual with Adaptive Card syntax.  SPFx extension samples https://aka.ms/spfx-extensions\n Next call?  SPFx web part samples https://aka.ms/spfx-webparts\n Enhanced Power Apps - Kunj Sangani | @sanganikunj Datatables using MUI Tables* - Jeffin Jacob  Auto Batching Graph calls* - Marcin Wojciechowski | @mgwojciech Flow Button* - Takashi Shinohara | @karamem0 Property Pane Wrap* - Christophe Humbert | @PathToSharePoint  * To be posted soon.\nPnP SPFx ACEs https://aka.ms/spfx-aces\n Monitor Security Risks* - Arijit Mondal   * To be posted soon.\nThank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen – 5:12 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 – 7:35 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler – 9:07 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler – 9:56 PnP Modern Search - Patrick Rodgers (Microsoft) | @mediocrebowler – 10:56  PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh – 12:01 PnP SPFx ACEs Samples - David Warner II (Catapult Systems) | @DavidWarnerII – 13:42  Demos  Demo 1: Document Links Accordion SPFx Web Part – David Warner II (Catapult Systems) | @DavidWarnerII \u0026amp; João Mendes (Valo) | @joaojmendes – 15:26  Demo 2: New Development Containers for SPFx Samples – Hugo Bernier (Microsoft) | @bernierh – 25:02  Demo 3: Viva Connections – Consuming SharePoint Online Data in SPFx Adaptive Card Extensions – Paolo Pialorsi (PiaSys) | @PaoloPia – 47:38   Resources Additional resources around the covered topics and links from the slides.\n D1: Sample - Documents Links Accordion  D1: Tools - Reusable React controls for your SharePoint Framework solutions  D1: Tools – PnP/PnPjs – https://aka.ms/pnpjs D2: Documentation - SharePoint Framework development tools and libraries compatibility  D2: Site - Get Started with Docker  D2: VS Marketplace - Visual Studio Code Remote – Containers  D2: Documentation - VS Code Remote Development | aka.ms/vscode-remote D2: Docker Hub - m365pnp/spfx  D2: Guidance - Opening a sample using a development container | aka.ms/spfx-devcontainer D2: Documentation - Set up your SharePoint Framework development environment  D3: Demo - Viva Connections – Data Binding in SPFx Adaptive Card Extensions – Paolo Pialorsi (PiaSys) | @PaoloPia  Microsoft 365 PnP Weekly – Episode 152 (February 7th) with Toronto, Ontario, Canada-based Microsoft Cloud Solution Architect and MVP Alum, Hugo Bernier (Microsoft) | @bernierh | video | podcast Microsoft 365 PnP Weekly – Episode 151 (January 31st) with UK-based SharePoint developer, architect and MVP, Paul Bullock | @pkbullock | video | podcast  General Resources  Viva Connections https://aka.ms/VivaConnections Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  Tools - Teams Toolkit (v2.2 Preview)  Tools - Microsoft Teams Framework (TeamsFx)  Gallery - Microsoft 365 Extensibility look book gallery  Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions SharePoint Framework - v1.12.1 npm install –g @microsoft/generator-sharepoint@next CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring Tools - PnP Modern Search v4 | https://aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other mentioned topics  SharePoint dev documentation SharePoint dev issue list  Upcoming calls | Recurrent invites  Microsoft 365 platform call – February 15th at 8:00 am PST | https://aka.ms/m365-dev-call Power Apps monthly call – February 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call – February 17th at 7:00 am PST | https://aka.ms/m365-dev-sig Microsoft Identity Platform call – February 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Viva Connections \u0026amp; SharePoint Framework call – February 24th at 7:00 am PST | https://aka.ms/spdev-spfx-call Office add-in monthly call – March 9th at 8:00 am PST | https://aka.ms/officeaddinscall Adaptive Cards monthly call – March 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall  Viva Connections \u0026amp; SharePoint Framework bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Connections, Microsoft Teams, SharePoint Online, and also on-premises. Calls are used for the following objectives.\n SharePoint Framework engineering update from Microsoft Talk about PnP JavaScript Core libraries Office 365 CLI Updates SPFx reusable controls PnP SPFx Yeoman generator Share code samples and best practices Possible engineering asks for the field - input, feedback, and suggestions Cover any open questions on the client-side development Demonstrate SharePoint Framework in practice in Microsoft Viva, Microsoft Teams or SharePoint context You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!  Related documents   PnP SIG (JavaScript) - Weekly 20220210.pptx (290 KB)  SPFx SIG 02 10 2022 - David \u0026amp; Joao.pptx (290 KB)  _“Sharing is caring”_ * * * _Microsoft 365 PnP team, Microsoft - 11th of February 2022_ ","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-10th-of-feb/images/recording-10th-feb_huc2b8fc3ec09e79bd406cf5a18a147a93_339582_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-10th-of-feb/","tags":["Adaptive Card Extensions","Extensions","Microsoft 365","SharePoint","SharePoint Framework (SPFx)","Viva Connections"],"title":"Viva Connections \u0026 SharePoint Framework Community Call – 10th of February, 2022"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from February 8th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 890+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring this month and next. Upcoming AMAs on PnP React Controls and on Graph and MGT. Tune into the weekly  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics – hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Microsoft 365 PnP Weekly - Videos, Podcasts focused on the latest news and topics on Microsoft 365 hosted by Vesa Juvonen and Waldek Mastykarz   Hear about the latest 10 Microsoft 365 Platform related stories and take-in 3 demos delivered by Microsoft presenters on the latest capabilities of the Microsoft 365 platform. New series launched – Learn from the community. This week’s article: Learn from the community: React web app and Azure QnA bot to centralize learning resources  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout and live at end of the call. Microsoft 365 Platform News Flash  Breaking changes to the addToReviewSet action in the Microsoft Graph API for eDiscovery (beta) Breaking changes to the Microsoft Graph API for eDiscovery (beta) Learn from the community: Microsoft Teams and Moodle online learning solution Learn from the community: React web app and Azure QnA bot to centralize learning resources \u0026lsquo;We didn’t know if we would make it to the summer\u0026rsquo; Demystifying Microsoft Teams Rooms (Windows) application releases Enhance your production workflow with Teams as a contribution source via SDI and with Isolated Audio Turn off Mirror my video in Microsoft Teams meetings to match your video to your audience\u0026rsquo;s view \u0026lsquo;Teams has opened us up to a completely new way of thinking\u0026rsquo; What’s New in Microsoft Teams | January 2022    Actions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  PnP Sharing is Caring - AMA (Ask Me Anything) - SPFx React Controls – Tuesday, February 22nd, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) \u0026ndash; Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST First Time Contributor Session – TBS soon Community Docs Session – TBS soon  Power Platform Samples – First Time Contributor – Monday, February 14th, 1pm PST PnP – SPFx Developer Workstation Setup – TBS soon PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – TBS soon First Time Presenter – Wednesday, February 9th, 9am PST More than Code with VSCode – Tuesday, February 15th, 2pm PST Maturity Model Practitioners – Tuesday, February 15th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Thank you everybody for joining the call today and for being part of the community. Please, please, please keep the feedback coming. Demos  Introduction to Intune APIs on Microsoft Graph – the Microsoft Graph API for Microsoft Intune enables programmatic access to Intune information for your tenant. See what types of administrative device/compliance tasks can be done via the Graph API (add/delete permissions, update compliance policies, review devices, etc.). Call Intune services from the Graph Explorer tool and through PowerShell scripts/cmdlets as an alternative to accessing the services from the Microsoft Endpoint Manager console UI.  Creating engaging and dynamic Viva Connections mobile experiences – building on the previous 2 ACE demos, Patrick combines the principles of State and Immediate/Personal to make dynamic (live tile like) experiences in cards. Three ACE\u0026rsquo;s (text updates, dynamically created SVG images, and rotating content) show simple ways to liven up the appearance of your ACE\u0026rsquo;s. Observe code similarities in all cards. Essentially – set a state, use a timer, update state, render result.  Using the MGT Files Components in your solutions – handling files and folders stored in Teams, SharePoint and OneDrive with MGT is done with 2 components - Files and File list. Files presentation options include layouts, custom file icon, related information – drive, site, user and group IDs, also properties and details. Highlighted File list capabilities include display, upload, query for files/folders, get files by insight type, file extension and access through breadcrumb navigation.   Thank you for your work. Samples are often showcased in Demos.\nTopics  Latest updates and news on the Microsoft 365 platform – Vesa Juvonen (Microsoft) | @vesajuvonen – 8:11 D1: Introduction to Intune APIs on Microsoft Graph – Dave Randall (Microsoft) – 12:33 D2: Creating engaging and dynamic Viva Connections mobile experiences – Patrick Rodgers (Microsoft) | @mediocrebowler – 25:33 D3: Using the MGT Files Components in your solutions – Sébastien Levert (Microsoft) | @sebastienlevert – 36:38  Resources Additional resources around the covered topics and links from the slides.\n D1: Documentation v1.0 - Working with Intune in Microsoft Graph  D1: Documentation beta - Working with Intune in Microsoft Graph  D1: Repo - Intune Graph Samples  D1: Reference - Microsoft365DSC  D1: Tool – Graph Explorer | aka.ms/ge D1: Documentation - Get started with Desired State Configuration (DSC) for Windows  D1: Documentation - Microsoft Endpoint Manager overview  D2: Sample - ace-dynamic-card  D2: Documentation - Overview of Viva Connections Extensibility  D2: Samples - Viva Connection Adaptive Card Extensions (ACEs) sample repository  Previous demos in Patrick Rodgers | @mediocrebowler, Adaptive Card Extensions series  When to build Viva Connections Adaptive Card Extensions – 25th of January Deep dive on Viva Connections Adaptive Card Extension development – State management – 30th of January   D3: Documentation - File component in the Microsoft Graph Toolkit  D3: Tool - Microsoft Graph Toolkit Playground – File  D3: Repo - MGT Sandbox  D3: Learn - Develop apps with the Microsoft Graph Toolkit | aka.ms/mgt/learn Previous demos in Sébastien Levert’s (Microsoft) | @sebastienlevert, Microsoft Graph Toolkit (MGT) series  Discover the Microsoft Graph Toolkit – 7 December 2021 Microsoft Graph Toolkit – Using Login Component in your solutions – 14 December 2021 Microsoft Graph Toolkit – Using the Person Component in your solutions – 4 January 2022 Microsoft Graph Toolkit – Using the People Component in your solutions – 11 January 2022 Microsoft Graph Toolkit – Using the People Picker Component in your solutions – 18 Microsoft Graph Toolkit – Using the Teams Channel Picker Component in your solutions – 25 January 2022 Using the MGT Agenda and Tasks Components in your solutions – 1 February 2022   Microsoft 365 PnP Weekly – Episode 152 (February 7th) with Toronto, Ontario, Canada-based Microsoft Cloud Solution Architect and MVP Alum, Hugo Bernier (Microsoft) | @bernierh | video | podcast  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on Github PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Office add-in monthly call – February 9th at 8:00 am PST | https://aka.ms/officeaddinscall Viva Connections \u0026amp; SharePoint Framework call – February 10th at 7:00 am PST | https://aka.ms/spdev-spfx-call Adaptive Cards monthly call – February 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall Microsoft 365 platform call – February 15th at 8:00 am PST | https://aka.ms/m365-dev-call Power Apps monthly call – February 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call – February 17th at 7:00 am PST | https://aka.ms/m365-dev-sig Microsoft Identity Platform call – February 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members. More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\nRelated documents   M365 platform - Weekly 20220208.pptx (283 KB)  _“Sharing is caring”_ * * * _Microsoft 365 PnP team, Microsoft - 9th of February 2022_ ","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-8th-of-february-2022/images/recording-8th-feb_hua42db72645749b0b731ccccbb5868d60_550178_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-8th-of-february-2022/","tags":["Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 Platform Call – 8th of February, 2022"},{"categories":["Microsoft 365 Platform Community Update"],"contents":"Microsoft 365 Platform Community (PnP) February 2022 update is out with a summary of the latest guidance, samples, and solutions from Microsoft or from the community for the community. This article is a summary of all the different areas and topics around the community work we do around Microsoft 365 ecosystem during the past month. Thank you for being part of this success.\n“We are committed on building the best tech community in the world where everyone feels welcome and we help to empower each and every community member to achieve more.”\nWhat is Microsoft 365 Platform Community Microsoft 365 Platform Community is community activities coordinated by numerous teams inside of the Microsoft 365 engineering organizations. This is a community-driven open-source initiative where Microsoft and external community members are sharing their learning\u0026rsquo;s around implementation practices for Microsoft 365.\nTopics vary from Microsoft Viva, Microsoft Graph, Microsoft Teams, Power Platform, OneDrive and SharePoint. Active development and contributions happen in GitHub by providing contributions to the samples, reusable components, and documentation for different areas. PnP is owned and coordinated by Microsoft engineering, but this is work done by the community for the community.\n See more details from New Microsoft 365 Platform (PnP) team model with new community leads  The initiative is facilitated by Microsoft, but we have multiple community members as part of the platform community team (see team details in end of the article) and we are always looking to extend the Platform Community team with more community members. Notice that since this is open-source community initiative, so there’s no SLAs for the support for the samples provided through GitHub. Obviously, all officially released components and libraries are under official support from Microsoft.\nMain resources around Microsoft 365 Community:\n Microsoft 365 Platform Community - http://aka.ms/m365pnp - One location for all the resources and news around Microsoft 365 platform Microsoft 365 community blog - http://aka.ms/m365pnp/community/blog Microsoft 365 development blog - http://aka.ms/m365pnp-blog Microsoft 365 Community Channel on YouTube - http://aka.ms/m365pnp-videos Microsoft 365 Developer YouTube channel - https://aka.ms/M365DevYouTube  ✍ Latest Dev Blog posts Here are the latest blog posts and announcements around Microsoft 365 development topics from https://developer.microsoft.com/en-us/microsoft-365/blogs.\n 4th of February - Breaking changes to the addToReviewSet action in the Microsoft Graph API for eDiscovery (beta) 2nd of February - Breaking changes to the Microsoft Graph API for eDiscovery (beta) 1st of February - Learn from the community: Microsoft Teams and Moodle online learning solution - Ayca Bas (Microsoft) | @aycabas  31st o January - Microsoft Graph Data Connect: Deploying Azure Synapse Analytics - Nik Charlebois (Microsoft) | @NikCharlebois 31st of January - Combining Microsoft Graph Data Connect data sets in Azure Synapse Analytics - Microsoft 365 Develope\u0026hellip; - Nik Charlebois (Microsoft) | @NikCharlebois 26th of January - Updated public preview of SharePoint Framework 1.14 – with updates for Viva Connections, Microsoft T\u0026hellip; - Vesa Juvonen (Microsoft) | @vesajuvonen 26th of January - Outlook JavaScript API deprecation for AttachmentDetails.contentType property 19th of January - Learn how to set up decentralized identities on Azure 12th of January - New Single Sign-on service for Office Add-ins rolling out in Office on the web 10th of January - Microsoft Graph Mailbag - Using LargeFileUploadTask with Microsoft Graph SDKs - Brian Jackett (Microsoft) | @BrianTJackett  Latest community posts at https://aka.ms/m365pnp/community/blog\n 7th of February - Siddharth Vaghasia | @siddh_me - How to call and show Graph API data in SPFx Adaptive Card Extensions(ACEs) 3rd of February - Kasper Bo Larsen (Fellowmind Denmark) | @kasperbolarsen - Don\u0026rsquo;t pay more for SharePoint Storage than you have to :) 2nd of February - Shrusti Shah (Rapid Circle) - Microsoft Forms as a Tab in Teams using graph API in Power Automate 28th of January - Arjun Menon (Tata Consulting Services) | @arjunumenon - CLI for Microsoft 365 v4.4 26th of January - Siddharth Vaghasia | @siddh_me - Create your first Adaptive Card Extensions(ACEs) with SPFx 26th of January - Shrusti Shah (Rapid Circle) - Welcome new employee in Teams using Adaptive card 26th of January - Siddharth Vaghasia | @siddh_me - How to use Graph Toolkit in Teams App inside Teams Tab 26th of January - Adam Wójcik (Hitachi Energy) | @Adam2585878 - Using Power Automate flow API in your SPFx solution 17th of January - Dennis Goedegebuure (Ultima Business Solutions) | @expiscornovus - Course registration with List formatting 18th of January - Lee Ford ( Symity) | @lee_Ford - Make a bot for simple interactions in Teams using a Webhook 18th of January - Shrusti Shah (Rapid Circle) - Set up Viva connection Teams App 15th of January - Michael Roth ( ITP) | @MichaelRoth42 - Working with APIs in Power Platform for beginners 15th of January - Michael Roth ( ITP) | @MichaelRoth42 - Working with Custom Connectors in Power Platform for beginners 12th of January - Jan Bakker | @JanBacker_ - Microsoft 365 self-service using Power Apps  Community call recording blog posts  4th of February - Microsoft 365 Developer Community Call recording – 3rd of February, 2022 2nd of February - Microsoft 365 Platform Call – 1st of February, 2022 31st of January - Adaptive Cards community call – January 2022 28th of January - Viva Connections \u0026amp; SharePoint Framework Community Call – 27th of January, 2022 25th of January - Microsoft 365 Platform Call – 25th of January, 2022 24th of January - Power Apps Community Call – January 2022 24th of January - Microsoft Identity Platform community call – January 2022 21st of January - Microsoft 365 Developer Community Call recording – 20th of January, 2022 19th of January - Microsoft 365 Platform Call – 18th of January, 2022 18th of January - Office Add-ins community call - January 12, 2022 14th of January - Viva Connections \u0026amp; SharePoint Framework Community Call – 13th of January, 2022 12th of January - Microsoft 365 Platform Call – 11th of January, 2022  Microsoft 365 Developer Podcasts In the Microsoft 365 Developer Podcast, Jeremy Thake and Paul Schaeflein talk Microsoft 365 with fellow industry experts. The show formerly known as Office 365 Podcast is back!  7th of February - M365 Dev Podcast - Office Add-Ins with Juan Balmori 31st of January - M365 Dev Podcast - Property Pane Portal project with Christophe Humbert 24th of January - M365 Dev Podcast - Microsoft Graph Data Connect with Nik Charlebois  Microsoft 365 PnP Weekly Podcasts and vlogs PnP Weekly is a recurrent podcast with visitors where Vesa and Waldek talk about the latest news and announcements in Microsoft 365 and SharePoint areas.  7th of February - Microsoft 365 PnP Weekly - Episode 152 - Hugo Bernier 1st of February - Microsoft 365 PnP Weekly - Episode 151 - Paul Bullock 25th of January - Microsoft 365 PnP Weekly - Episode 150 - Anoop Tatti 18th of January - Microsoft 365 PnP Weekly - Episode 149 - Rabia Williams  Community Calls There are numerous different community calls on different areas. All calls are being recorded and published either from Microsoft 365 Developer or Microsoft 365 Community (PnP) YouTube channels. Recordings are typically released within the following 24 hours after the call. You can find a detailed agenda and links to specific covered topics on blog post articles at the Microsoft 365 developer blog when the videos are published.\n Microsoft 365 Platform Call - https://aka.ms/m365-dev-call - Updates and demos from Microsoft as weekly call on Tuesdays - topics vary from Microsoft Teams, Microsoft Graph, Power Platform, SharePoint, OneDrive and more Adaptive Cards https://aka.ms/adaptivecardscommunitycall - Updates and news around Adaptive Cards with live demos Microsoft identity platform https://aka.ms/IDDevCommunityCalendar - Latest on the identity side Office Add-ins https://aka.ms/officeaddinscommunitycall - News and community work around Office add-ins with live demos PowerApps https://aka.ms/PowerAppsMonthlyCall - Monthly summary on PowerApps community with live demos M365 Community Call https://aka.ms/spdev-sig-call - Bi-weekly - General topics on Microsoft 365 Dev from various aspects - Microsoft Teams, Microsoft Graph Toolkit, Provisioning, Automation, Scripting, Power Automate, Solution design Viva Connections \u0026amp; SharePoint Framework Community call https://aka.ms/spdev-spfx-call - Bi-weekly - Consists of topics around SharePoint Framework and JavaScript-based development in the Microsoft Teams and in SharePoint platform.  If you are interested in doing a live demo of your solution or sample in these calls, please do reach out to the PnP Team members (contacts later in this post) and they are able to help with the right setup. These are great opportunities to gain visibility for example for existing MVPs, for community members who would like to be MVPs in the future or any community member who\u0026rsquo;d like to share some of their learnings.\nMicrosoft 365 Community (PnP) Ecosystem in GitHub Most of the community driven repositories are in the PnP GitHub organization as samples are not product specifics as they can contain numerous different solutions or the solution works in multiple different applications.\n Microsoft Graph Toolkit - Repository and project on Microsoft Graph Toolkit controls - welcomes community contributors PnPjs - PnPjs Framework repository CLI Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings generator-spfx - Open-source Yeoman generator which extends the out-of-the-box Yeoman generator for SharePoint with additional capabilities generator-teams - Open-source Microsoft Teams Yeoman generator - Bots, Messaging Extensions, Tabs, Connectors, Outgoing Web hooks and more teams-dev-samples - Microsoft Teams targeted samples from community and Microsoft engineering script-samples - Scripting samples for automating operations in Microsoft 365 with PowerShell modules or CLIs Sharing is Caring - Getting started on learning how to contribute and be active on the community from GitHub perspective. pnpcore - The PnP Core SDK is an SDK designed to work against Microsoft 365 with Microsoft Graph API first approach powershell - PnP PowerShell module which is PowerShell Core module targeted for Microsoft 365 pnpframework - PnP Framework is a .Net Standard 2.0 library targeting Microsoft 365 containing the PnP Provisioning engine and a ton of other useful extensions spfx-reference-scenarios - Samples for the Microsoft Teams and Viva Connections, implemented using SharePoint Framework sp-dev-fx-aces - Samples on the Adaptive Card Extensions for Microsoft Viva sp-dev-fx-webparts - Client-side web part samples from community and Microsoft engineering sp-dev-fx-extensions - Samples and tutorial code around SharePoint Framework Extensions sp-dev-fx-library-components - Samples and tutorial code around the SharePoint Framework library components sp-starter-kit - Starter kit solution for SharePoint modern experiences sp-dev-build-extensions - Different build extensions like gulp tasks and gulp plugins from the community and engineering around SharePoint development sp-dev-solutions - Repository for more polished and fine-tuned reusable solutions build with SharePoint Framework sp-dev-samples - Repository for other samples related on the SharePoint development topics - WebHooks etc. sp-dev-fx-controls-react - Reusable content controls for SharePoint Framework solutions build with React sp-dev-fx-property-controls - Reusable property pane controls to be used in web parts list-formatting - Open-source community-driven repository for the column and view formatting JSON definitions sp-dev-site-scripts - Open-source community-driven repository for community Site Designs and Site Scripts sp-dev-modernization - Tooling and guidance around modernizing SharePoint from classic to modern sp-power-platform-solutions - Solution and sample code for SharePoint Power Platform solutions powerfx-samples - Samples that demonstrate different usage patterns for the Power Fx low-code programming language powerapps-samples - Samples that demonstrate different usage patterns for Power Apps powerautomate-samples - Samples that demonstrate different usage patterns for Power Automate powerva-samples - Samples that demonstrate different usage patterns for Power Virtual Agents AdaptiveCards-Templates - Samples on showcasing the art of possible with adaptive cards  All SharePoint specific repositories or services supported directly by Microsoft are located in the SharePoint GitHub organization\n sp-dev-docs - Source for new SharePoint dev center documentation exposed from http://docs.microsoft.com/en-us/sharepoint/dev sp-dev-provisioning-templates - Open-source templates used by the SharePoint Look Book site sp-provisioning-service - Source code of the SharePoint look book site  Classic PnP named repositories - older tooling\n PnP-Tools - Tools and scripts targeted more for IT Pro\u0026rsquo;s and for on-premises for SP2013 and SP2016 PnP-Provisioning-Schema - PnP Provisioning engine schema repository  Repositories in the GitHub Microsoft Search organization controlled by the PnP initiative\n pnp-modern-search - Home of PnP Modern Search solutions, see more from the documentation  Other related resources from GitHub\n Office add-in Patterns and Practices in GitHub - Community contributions welcome! Microsoft Graph GitHub organization OfficeDev GitHub organization - Includes all Microsoft Teams samples from Microsoft  What\u0026rsquo;s supportability story around the community tooling and assets? Following statements apply across all of the community lead and contributed samples and solutions, including samples, core component(s) and solutions, like SharePoint Starter Kit, yo teams or PnP PowerShell. All Microsoft released SDKs and tools are supported based on the specific tool policies.\n PnP guidance and samples are created by Microsoft \u0026amp; by the Community PnP guidance and samples are maintained by Microsoft \u0026amp; community PnP uses supported and recommended techniques PnP is an open-source initiative by the community – people who work on the initiative for the benefit of others, have their normal day job as well PnP is NOT a product and therefore it’s not supported by Premier Support or other official support channels PnP is supported in similar ways as other open source projects done by Microsoft with support from the community by the community There are numerous partners that utilize PnP within their solutions for customers. Support for this is provided by the Partner. When PnP material is used in deployments, we recommend being clear with your customer/deployment owner on the support model  Please see the specifics on the supportability on the tool, SDK or component repository or download page.\nMicrosoft 365 Platform Community team model    In April 2020 we announced our new Microsoft 365 PnP team model and grew the MVP team quite significantly. PnP model exists for having more efficient engagement between Microsoft engineering and community members. Let\u0026rsquo;s build things together. Your contributions and feedback is always welcome! During August, we also crew the team with 5 new members. PnP Team coordinates and leads the different open-source and community efforts we execute in the Microsoft 365 platform.\nWe welcome all community members to get involved on the community and open-source efforts. Your input do matter!\n New Microsoft 365 Patterns and Practices (PnP) team members – November 2021](https://techcommunity.microsoft.com/t5/microsoft-365-pnp-blog/new-microsoft-365-patterns-and-practices-pnp-team-members/ba-p/2953966) - Geetha Sivasailam (Artis Consulting) | @GSiVed, Natalie Pienkowska (Microsoft) | @NataliePienkow1, Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp, João J. Mendes (Valo) | [@joaojmendes | @thomyg New Microsoft 365 Patterns and Practices (PnP) team members - May 2021 - Gautam Sheth (Valo) and Patrick Lamber (Experts Inside AG) New Microsoft 365 Patterns and Practices (PnP) team members - February 2021 - April Dunnam (Microsoft), Emily Mancini (Sympraxis Consulting) and Veronique Lengelle (CPS) New Microsoft 365 Patterns and Practices (PnP) team members - December 2020 - Luise Freese and Sébastien Levert  New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 - Albert-Jan Schot (BLIS Digital), Koen Zomers (Microsoft), Paul Bullock (CaPa Creative), Rabia Williams (Microsoft) and Yannick Plenevaux (PVX Solutions)  Got feedback, suggestions or ideas? - Please let us know. Everything we do in this program is for your benefit. Feedback and ideas are more than welcome so that we can adjust the process for benefitting you even more.\nMicrosoft 365 PnP Recognition Program\n   We are excited to announce new community contributor program for all the active community members. Through this program you can get officially acknowledged with the a Credly badge around your work on our open-source and community channels. See more from\nhttps://aka.ms/m365pnp-recognition. Thank you for being part of this journey with us.\n⚙ Area-specific updates These are different areas which are closely involved on the community work across the PnP initiative. Some are lead and coordinated by engineering organizations, some are coordinated by the community and MVPs.\nMicrosoft Graph Toolkit    Microsoft Graph Toolkit is engineering lead initiative, which works closely with the community on the open-source areas. The Microsoft Graph Toolkit is a collection of reusable, framework-agnostic web components and helpers for accessing and working with Microsoft Graph. The components are fully functional right of out of the box, with built in providers that authenticate with and fetch data from Microsoft Graph.\n Latest version currently is 2.3.2  mgt.dev - Microsoft Graph Toolkit Playground Getting started with Microsoft Graph Toolkit guidance video from developer community call by Beth Pan (Microsoft) Latest code and preview versions from https://aka.ms/mgt  All the latest updates on the Microsoft Graph Toolkit is being presented in our bi-weekly Microsoft 365 Generic Dev community call, including the latest community contributors.\nMicrosoft 365 Community docs    Community docs model was announced in the April 2020 and it\u0026rsquo;s great to see the interest for community to help each other by providing new guidance on the non-dev areas. See more on the announcement from the SharePoint blog - Announcing the Microsoft 365 Community Docs. We do welcome contributions from the community - our objective is to build a valuable location for articles from Microsoft and community together.\nNew articles  Advanced Highlighted Content Web Part - Patrick Doran (NCDIT) | @swearpointjs The Microsoft 365 Maturity Model – Governance, Risk, and Compliance Competency - Nikki Chapple (NTT Cloud Communications) | @chapplenikki  Have ideas for articles or want to contribute yourself? - Get involved! Here are also some additional resources explaining the model more detailed.\n YouTube - Introducing Microsoft 365 Community Docs GitHub issue list with articles ideas  SharePoint Framework development samples    These are the updated SharePoint Framework samples which are available from the different repositories.\n New sample react-my-approvals by Takashi Shinohara | @karamem0, that displays the list of approval requests of Power Automate New sample react-followed-drag-and-drop-grid by Adam Wójcik (Hitachi Energy) | @Adam258587, that presents an alternative view for user followed sites (or any kind of links) New sample PrimaryTextCard-My-M365-Groups by Nanddeep Nachan | @NanddeepNachan, that displays the Microsoft 365 (Unified) groups in a tenant, of which user is owner or member New sample PrimaryTextCard-MyEmails by Siddharth Vaghasia | @siddh_me, that displays current logged in user\u0026rsquo;s emails in card view and detail in quick view New sample PrimaryTextCard-Follow-Documents by André Lage (Datalynx AG) | @aaclage, to get the current users \u0026ldquo;Followed Documents\u0026rdquo; marked by Microsoft 365 Homepage New sample by Derek Cash Peterson (Sympraxis Consulting) | @spdcp that serves as an example of how to use an ACE to interact with SharePoint List data using PnPJS New sample ace-application-state by Patrick Rodgers | @mediocrebowler, that illustrates the use of state with ACE solutions Other adjustments to numerous samples by our awesome community members!  How to find what\u0026rsquo;s relevant for you? Take advantage of our SharePoint Framework web part and extension sample galleries - also includes solutions which work in Microsoft Teams\n Web Part sample gallery - http://aka.ms/spfx-webparts Extensions sample gallery - http://aka.ms/spfx-extensions Viva Connections Adaptive Card samples - http://aka.ms/spfx-aces Microsoft Teams samples build with SharePoint Framework - https://github.com/pnp/spfx-reference-scenarios   Microsoft Teams community samples    These are samples which have been contributed on the community samples since last summary. We do welcome all Microsoft Teams samples to this gallery. They can be implemented using in any technology.\n Numerous adjustments on existing samples and solutions  If you are interested on Microsoft Teams samples, we have just released also new Microsoft Teams sample gallery. Contributions to Microsoft Teams samples is also more than welcome. This gallery already surfaces all Microsoft samples, Microsoft Teams app templates and community samples.\nPower Platform samples     New Power Apps sample power-wordle-game by April Dunnam (Microsoft) | @aprildunnam, that is a re-imagining of the popular word puzzle game Wordle inside of Power Apps  There was also numerous smaller updates on the different Power Platforms samples. See more details on available samples from following location\n Power Platform sample gallery - https://aka.ms/powerplatform-samples  If you have any existing samples which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative. Here to help.\nMicrosoft 365 Script Samples    We have released new Microsoft 365 Script Sample gallery within past month. We welcome all scripts on Microsoft 365 automation to this centralized repository, targeted to help to manage and automate day-to-day operations.\nHere are the latest updates on the Script Samples\n  New Get Site Usage Reports And Export It To CSV by Chandani Prajapati (Rapid Circle) | @Chandani_SPD  New Create SharePoint Groups in Bulk using CSV file by Kunj Balkrishna Sangani | @sanganikunj  New Set Home site for SharePoint tenant by Ganesh Sanap | @ganeshsanap20  Updated Get SharePoint Site Recycle Bin Items And Export It To CSV by Adam Wójcik (Hitachi Energy) | @Adam25858782  Updated List guests within Teams in a tenant by Leon Armston (Intelogy) | @LeonArmston  Updated Replace a users membership in selected Microsoft 365 Groups or Teams by Reshmee Auckloo | @reshmeeauckloo  Updated Empty the tenant recycle bin by Leon Armston (Intelogy) | @LeonArmston  Updated Get All Apps From The App Catalog And Export It To CSV by Adam Wójcik (Hitachi Energy) | @Adam25858782  Updated Delete a library exceeding the list threshold limit by Adam Wójcik (Hitachi Energy) | @Adam25858782  New Flow run status list dashboard by Ryan Healy (365Apps) | @Ryan365Apps  New Report of SharePoint Storage Savings by trimming document versions by Kasper Bo Larsen (Fellowmind Denmark) | @kasperbolarsen  If you have any existing scripts which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative.  Microsoft 365 Script Samples - https://aka.ms/script-samples  Independent Connectors Program    Microsoft Power Platform comes with a huge variety of already built-in connectors and also provides you with the ability of creating your own custom connectors. As of July 2021, anyone can submit the connectors they built to Microsoft Power Platform so that they can be used by others as well. Previously, only API owners could publish their connectors. The Independent Publisher Connector Program\u0026rsquo;s mission is to bring the best together: the best people, connecting great ideas to data, apps, and flows. We want to make it easier for connector developers to collaborate on connectors.\nFor more information, you can watch this video on Publish a connector to the Publish a connector to the Power Platform with Independent Publisher Connector Program gram and check out Microsoft Power Platform Connectors on GitHub\nThese are the latest connectors:  Clement Olivier | @Clement0livier - Mailjet  Daniel Laskewitz (Sogeti) | @laskewitz - Revue Michal Romiszewski | @romiszewski - Miro Paul Culmsee (Seven Sigma) | @paulculmsee - C02 Signal Paul Culmsee (Seven Sigma) | @paulculmsee -NASA Image and Video Library Paul Culmsee (Seven Sigma) | @paulculmsee -NIST National Vulnerability Database Paul Culmsee (Seven Sigma) | @paulculmsee -OpenNEM Paul Culmsee (Seven Sigma) | @paulculmsee -Star Wars Siddharth Vaghasia | @siddh_me - Rest Countries Tomasz Poszytek | @TomaszPoszytek - Airly Tomasz Poszytek | @TomaszPoszytek - Zippopotamus Troy Taylor](https://twitter.com/troystaylor) (Hitachi Solutions) | [@troystaylor - Buy Me a Coffee Troy Taylor](https://twitter.com/troystaylor) (Hitachi Solutions) | [@troystaylor - Cloverly Troy Taylor](https://twitter.com/troystaylor) (Hitachi Solutions) | [@troystaylor - Companies house Troy Taylor](https://twitter.com/troystaylor) (Hitachi Solutions) | [@troystaylor - Ecologi Troy Taylor](https://twitter.com/troystaylor) (Hitachi Solutions) | [@troystaylor - haveibeenpwned Troy Taylor](https://twitter.com/troystaylor) (Hitachi Solutions) | [@troystaylor -Placedog Troy Taylor](https://twitter.com/troystaylor) (Hitachi Solutions) | [@troystaylor -Quickbase Troy Taylor](https://twitter.com/troystaylor) (Hitachi Solutions) | [@troystaylor - Pantry Troy Taylor](https://twitter.com/troystaylor) (Hitachi Solutions) | [@troystaylor- Shields.io Troy Taylor](https://twitter.com/troystaylor) (Hitachi Solutions) | [@troystaylor - Unsplash Woong Choi (Seven Sigma)- Covid-19 API Woong Choi (Seven Sigma) - OpenFDA Drug  Sharing is Caring initiative    The \u0026ldquo;Sharing Is Caring\u0026rdquo; imitative is targeted for learning the basics around making changes in Microsoft Docs, in GitHub, submitting pull requests to the PnP repositories and in GitHub in general. Take advantage of this instructor lead training for learning how to contribute to docs or to open-source solutions. Everyone is welcome to learn how to get started on contributing to open-source docs or code!\n See more from the guidance documentation - including all upcoming instructor lead sessions which you can participate!  ✍ Different Microsoft 365 related open-source initiatives build together with the community See exact details on the latest updates from the specific open-source project release notes. You can also follow up on the project updates from our community calls. There are numerous active projects which are releasing new versions with the community even on weekly basis. Get involved!\n Microsoft Look Book - Discover the modern experiences you can build with SharePoint in Microsoft 365. Look book provides design examples for SharePoint Online which can be automatically provisioned to any tenant in the world. See more from https://lookbook.microsoft.com. This service is also provided as open-source solution sample from GitHub. yo teams - Open-source Yeoman generator for Microsoft Teams extensibility. Supports creation of bots, messaging extensions, tabs (with SSO), connectors and outgoing Webhooks. See more from https://aka.ms/yoteams. PnP Framework - .NET Standard 2.0 SDK containing the classic PnP Sites Core features for SharePoint Online. More around this package from GitHub. PnP Core SDK - The PnP Core SDK is an SDK designed to work for Microsoft 365 with Graph API first approach. It provides a unified object model for working with SharePoint Online and Teams which is agnostic to the underlying API\u0026rsquo;s being called. See more around the SDK from documentation. PnP PowerShell - PnP PowerShell is a .NET Core 3.1 / .NET Framework 4.6.1 based PowerShell Module providing over 400 cmdlets that work with Microsoft 365 environments and more specifically SharePoint Online and Microsoft Teams. See more details from documentation. Reusable SharePoint Framework controls - Reusable controls for SharePoint Framework web part and extension development. Separate projects for React content controls and Property Pane controls for web parts. These controls are using Office UI Fabric React controls under the covers and they are SharePoint aware to increase the productivity of developers. CLI for Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings. See release notes for latest updates.  PnPJs - PnPJs encapsulates SharePoint REST APIs and provides a fluent and easily usable interface for querying data from SharePoint sites. It\u0026rsquo;s a replacement of already deprecated pnp-js-core library. See changelog for the latest updates. PnP Provisioning Engine and PnP CSOM Core - PnP provisioning engine is part of the PnP CSOM extension. They encapsulate complex business driven operations behind easily usable API surface, which extends out-of-the-box CSOM NuGet packages. See changelog for the latest updates. PnP PowerShell - PnP PowerShell cmdlets are open-source complement for the SharePoint Online cmdlets. There are more than 300 different cmdlets to use and you can use them to manage tenant settings or to manipulate actual SharePoint sites. They See changelog for the latest updates. PnP Modern Search solution - The PnP \u0026lsquo;Modern Search\u0026rsquo; solution is a set of SharePoint Online modern Web Parts allowing SharePoint super users, webmasters and developers to create highly flexible and personalized search based experiences in minutes. See more details on the different supported capabilities from https://aka.ms/pnp-search. Modernization tooling - All tools and guidance on helping you to transform you SharePoint to modern experiences from http://aka.ms/sppnp-modernize. SharePoint Starter Kit v2 - Building modern experiences with Microsoft Teams flavors for SharePoint Online and SharePoint 2019 - reference solution in GitHub. List formatting definitions - Community contributed samples around the column and view formatting in GitHub. Site Designs and Site Scripts - Community contributed samples around SharePoint Site Designs and Site Scripts in GitHub. DevOps tooling and scripts - Community contributed scripts and tooling automation around DevOps topics (CI/CD) in GitHub. Teams provisioning solution - Set of open-source Azure Functions for Microsoft Teams provisioning. See more details from GitHub.  ✍ Documentation updates Please see all the Microsoft 365 development documentation updates from the related documentation sets and repositories as listed below:\n Microsoft Teams platform documentation - Microsoft Docs | GitHub SharePoint Developer documentation - Microsoft Docs | GitHub Microsoft Graph documentation - Microsoft Docs | GitHub Office add-in documentation - Microsoft Docs | GitHub  Microsoft 365 Developer and Microsoft 365 Community YouTube video channels You can find all Microsoft 365 related videos on our YouTube Channel at http://aka.ms/m365pnp/videos or at Microsoft 365 Dev. These channels contains already a significant amount of detailed training material, demo videos, and community call recordings.\nHere are the new Microsoft demo or guidance videos released since the last monthly summary:\n App scaffolding with Microsoft Teams Toolkit v3.0 - Tomomi Imura (Microsoft) | @girlie_mac Show a user\u0026rsquo;s emails in an ASP.NET Core app using Microsoft Graph- Dan Wahlin (Microsoft) | @DanWahlin Microsoft MVPs show off Community Bot for OneDrive - Stephan Bisser (Solvion) | @stephanbisser and Thomas Gölles (Solvion) | @thomyg and Ayca Bas (Microsoft)- @aycabs and Hans Brender (HBsoft) | @HansBrender Student Ambassadors talk about their low code bot that onboards members to Microsoft Teams channel - Ayca Bas (Microsoft)- @aycabs, Lee Stott (Microsoft) | @Lee_Stott, Japhlet Nwamu (Microsoft) | @japhletnwamu Student Ambassador shows survey solution built with Power Platform and Microsoft Teams - Ayca Bas (Microsoft)- @aycabs, Lee Stott (Microsoft) | @Lee_Stott Ask the Expert: Extend Viva Connections - Vesa Juvonen (Microsoft) | @vesajuvonen and Waldek Mastykarz (Microsoft) | @waldekm  Community demos as following:  New Pay as you go Features for Power Apps - Kavishi Agarwal (Microsoft)  Microsoft Graph Toolkit – Using the People Component in your solutions - Sébastien Levert (Microsoft) | @SebastienLevert Introduction to Microsoft Graph connectors SDK - Rajdeep Chandra (Microsoft) Microsoft Lists - MSA Preview (tour video)  Building a Microsoft Teams bot for scheduling tasks and to get reminders - Wajeed Shaikh (Microsoft) Outlook event-based activation on Mac - YouTube - Ashima Mathur (Microsoft) Updates on Power Platform Independent Publisher Connectors \u0026amp; Coinbase Connector Demo - Natalie Pienkowska (Microsoft) | @NataliePienkow1 and Roy Paar Building enterprise solutions with Power Platform - Things to do and not to do - Luise Freese (M365Princess) | @LuiseFreese Excel shortcut customization APIs - Abid Rahman (Microsoft) SharePoint site provisioning with Microsoft Teams Notifications using Bot Framework - Sergei Sergeev | @sergeev_srg Introduction to new Adaptive Cards samples for Viva Connections Quick View designs - Vesa Juvonen (Microsoft) | @vesajuvonen Introduction to Microsoft Teams ISV app monetization capabilities - James Skay (Microsoft) | @JamesSka Microsoft Graph Toolkit – Using the Person Component in your solutions - Sébastien Levert (Microsoft) | @SebastienLevert Viva Connections ACEs CardView Types in SharePoint Framework - YouTube - Paolo Pialorsi (PiaSys.com) | @PaoloPia Microsoft 365 Maturity Model - January 2022  Viva Connections – Adaptive Card Extension for Microsoft Planner Tasks - Ejaz Hussain (Content and Cloud) | @EjazHussain SPFx Design Patterns – Custom Web Part properties (Part 2) - YouTube - Hugo Bernier | @bernierh Secure DevOps with the Microsoft Identity platform – January 2022 - Christos Matskas (Microsoft) | @ChristosMatska Teams Meetings Apps: Emoji feedback with bot and Adaptive Card universal action model - Markus Möller (Avanade) | @Moeller2_0 Building advanced Enterprise Search Center with PnP Search Web Parts v4 - Franck Cornu | @FranckCornu Introduction to Adaptive Card Extensions (ACEs) for Microsoft Viva Connections - YouTube - Paolo Pialorsi (PiaSys.com) | @PaoloPia Introduction to Microsoft 365 Universal Sample Gallery - Hugo Bernier | @bernierh and Bob German | @Bob1German Building a custom React based Microsoft Graph Group Viewer experience - Zach Roberts | @ZachSPODev Planning to build experiences for the US Government Cloud - what are the differences - Jay Hangan (Microsoft) Script buttons for Office Scripts - Nancy Wang (Microsoft) | @nancyatMSFT Microsoft Graph Toolkit – Using Login Component in your solutions - YouTube - Sébastien Levert (Microsoft) | @SebastienLevert Office like commenting \u0026amp; co-authoring - Emma Cooper (Microsoft) What\u0026rsquo;s new with Microsoft 365 Learning Pathways - Mike Hollinshead (Microsoft) | @mahollinshead and Derek Cash Peterson (Sympraxis Consulting) | @spdcp Using inline editing with list formatting – inlineEditField attribute - Chris Kent (DMI) | @theChrisKent Updates on Independent Publisher Connectors \u0026amp; Notion Connector Demo - Natalie Pienkowska (Microsoft) | @NataliePienkow1 and Harshini Varma (Capgemini) | @HarshiniVarmaa and Chandra Sekhar Malla (Royal Group LLC) | @ChandraSMalla Introduction to the Microsoft 365 developer program and to the instant development environment - Vesa Juvonen (Microsoft) | @vesajuvonen Building Xbox games with Power Apps - Brian Dang (Microsoft) | @mrdang Discover the Microsoft Graph Toolkit -Sébastien Levert (Microsoft) | @SebastienLevert Outlook: Microsoft Ignite 2021 recap on the latest announcements - Juan Balmori Labra, Principal Program Manager (Microsoft) | @juaneloBalmor Getting started with using PnP Search Web Parts v4 - Mikael Svenson (Microsoft) | @mikaelsvenson and Franck Cornu | @FranckCornu Introduction to HtwoO React library – Fluent UI experiences easily - Julie Turner (Sympraxis Consulting) | @jfj1997  Key contributors to the February 2022 update Here’s the list of active contributors (in alphabetical order) since last release details in GitHub repositories or community channels. PnP is really about building tooling and knowledge together with the community for the community, so your contributions are highly valued across the Microsoft 365 customers, partners and obviously also at Microsoft.\nThank you for your assistance and contributions on behalf of the community. You are truly making a difference! If we missed someone, please let us know.\n Abderahman Moujahid - Abderahman88 Abdush Samad Miah (iThink365) Adam Wójcik (Hitachi Energy) | @Adam2585878 Aimery Thomas | @aimery_thomas Albert-Jan Schot (BLIS Digital) | @appieschot Alienson | @Alienson Alexander Ernon (Amplexor) Alexis CONIA (Kickle) | @alexis_conia André Lage (Datalynx AG) | @aaclage Andrea Mondello (Withum Smith + Brown) | @mondello_power Andrew Burns (AmSty) | @SharePointRox Andrew Connell (Voitanos) | @andrewconnell Andrew Pilcher (CSULB) | andrewpilcher Andy Harmon (Oldham Metropolitan Borough Council) | @andygharmon Anoop Tatti (Content+Cloud) | @anooptells Antti Pajunen (Forward Forever) | @anttipajunen Arleta Wanat | PowershellScripts Aric Bost (North Carolina Housing Finance Agency) | @1CyberState Arjun Menon (Tata Consulting Services) | @arjunumenon Artur Posluszny | aposl1 Asad Refai (Intelogy) | @asadrefai Bartolomeo Sorrentino (soulsoftware) | @bsorrentinoJ Beau Cameron (Aerie Consulting) | @Beau__Cameron Bob Morris (ThreeWill) Carianne Wong (Majesco) | @cw_marie Carmen Ysewijn (Qubix) | @carmenysewijn Chandani Prajapati (Rapid Circle) | @Chandani_SPD Chandra Sekhar Malla (Royal Group LLC) | @ChandraSMall Chris Kent (DMI) | @theChrisKent Chris Sparrow (PA Consulting) Christian Zuellig (Monday Coffee) | czullu Christopher Graves (Arvato) | @Christo48927551 Clavin Fernandes (Rapid Circle) | @clavinfernandes Clement Olivier | @Clement0livier Cynthia Tiwana (City of Sammamish) | ctiwana Daniel Laskewitz (Sogeti) | @laskewitz Daniel Westerdale (Westerdale Solutions Ltd) | @westerdaled Danish Shafi | @builtbydan Darren Brown (Node4) Dave Young | @klarkykhat David Pileggi (Staples) | @DavidPileggi David Ramalho | @DRamalho92 David Warner II (Catapult) | @DavidWarnerII Dennis Goedegebuure (Ultima Business Solutions) | @expiscornovus Derek Cash Peterson (Sympraxis Consulting) | @spdcp Dipen Shah (Rapid Circle) | @Dips_365 Edmund David (Insentra) Edris Kakembo (WFP) | @kaxeddie Elio Struyf (Struyf Consulting) | @eliostruyf Elise Yang (Shopify) | elisenyang Ejaz Hussain (Content and Cloud) | @EjazHussain_ Elka Dunnette | @ElkaD_YYC Emily Mancini (Sympraxis Consulting) | @EEMancini Eric Overfield (PixelMill) | @EricOverfield Erwin van Hunen (Valo Intranet) | @erwinvanhunen  Florian Zink | fzbm Franck Cornu | @FranckCornu Ganesh R (RapidCircle) | @geekwhocodes Ganesh Sanap (Globant) | @GaneshSanap20 Garrick George (City of Thornton) | @kod3m0ng3r Gautam Sheth (Valo Solutions) | @gautamdsheth Geetha Sivasailam (Artis Consulting) | @GSiVed Giacomo Pozzoni (Fellowmind) | jackpoz Giuliano De Luca | @delucagiulian Haritha Sama (Intouch Solutions) Harry Jones (Civica) | @hejones50 Harsh Samdani | hsamdani12 Harshini Varma (Capgemini) | @HarshiniVarmaa HEMANT RISBUD (SRK Consultants) | Hemant Risbud Henrik Yllemo (Ylltec Sweden AB) | @yllemo Jacob Warrington (Catapult Systems) | @jjhwarrington Jan Bakker | @JanBacker_ Japhlet Nwamu (Microsoft) | @japhletnwamu Jasey Waegebaert (MI group) | Jwaegebaert Javier Hualpa | jhualpa Jeffin Jacob | jeffinjacob Jennifer Erzen (SUNY Upstate Medical University) | @jennifererzen Jinlong Wang | apzl808 Jiten Parmar (Rapid Circle) | @Jitenpa44241205 João Ferreira | @joaoferreira João J. Mendes (Valo Solutions) | @joaojmendes Joel Rodrigues (Storm Technology) | @JoelFMRodrigues Jonathan Weaver (WaterOne) | @j_weaver74 Jono Duncan (JourneyTEAM) | @SuaveJono Julie Turner (Sympraxis Consulting) | @jfj1997 Kasper Bo Larsen (Fellowmind) | @kasperbolarsen Kathleen Boilek (Alaka\u0026rsquo;ina Foundation) | @kaboilek Katleen Van Trier (Inetum-Realdolmen) | @kvantrier Kevin McDonnell (CPS) | @kevmcdonk Kim Kiefer (GenTech Associates) | @kkkiefe Kunj Balkrishna Sangani | @sanganikunj Kyle Bigelow | hazondata Lance Yoder (Cerner) | @lyoder Lance Yoder (Cerner) | @lyoder Laura Kokkarinen (Sulava) | @LauraKokkarinen Laurent Egbakou | @lioncoding Lee Ford ( Symity) | @lee_Ford Lee Stott (Microsoft) | @Lee_Stott Leon Armston (Intelogy) | @LeonArmston Linda Delarvé (Microsoft) Lindsay Shelton (Stowers Institute for Medical Research) | @lshelton_tech Loïc Cimon (Sogeti) | @LoicCimon luis alberto tzun (overcastmx) | satswere Luise Freese (M365Princess) | @LuiseFreese Manickam Sethuramalingam (microland) Manjunath Puttaswamy (Momentive Performance Materials India Private Limited) | @ManjunathPutta3 Marc Anderson, Sympraxis Consulting | @sympmarc Markus Möller (Avanade) | @Moeller2_0 Martin Lingstuyl | @@martinlingstuy Matt Beard (Data8) | @mattybeard Matt Collins-Jones | @D365Geek Michael Blumenthal (M365chicago.com) | @MichaelBL Michael Roth ( ITP) | @MichaelRoth42 Michal Guzowski (Developico) | @abcguzowski Michal Romiszewski | @romiszewski Michal Ziemba (Flugger) | @Michal_Ziemba Michel Carlo | @michelcarlo Michelle Heisler (Hennepin County) Miguel Angel García | @miangama Mike Duffy (Boardwalk Pipelines) | @mike_duffy Mike Dumka (Habanero Consulting) | @mikedumka Mohammad Amer (Atea Global Services) | @Mohammad3mer Nanddeep Nachan | @NanddeepNachan  Naveen Karla | @naveen67 Nikki Chapple (Cloudway) | @chapplenikki Nikki Chapple (NTT Cloud Communications) | @chapplenikki Paolo Pialorsi (PiaSys.com) | @PaoloPia Patrick de Lanoy (EmpowerTech) | @empowerpatrick Patrick Doran (NCDIT) | @swearpointjs Patrick Galloway | BammaSlim Patrick Lamber (ExpertsInside AG) | @patricklamber Patrik Hellgren (Sherpas Group) | @patrikhellgren Paul Bullock (CPS) | @pkbullock Paul Culmsee (Seven Sigma) | @paulculmsee Paul Schaeflein (AddIn365) - @paulschaeflein Pedro Monte (BindTuning) | PedroMordeP Pete Simpkins (Fluid Interiors) | @simpkinspete Pete Skelly (ThreeWill ) | @pskelly Phil McNiven | phil0074 Prafull Kotecha | @prafull Ralph Rivas (Sogeti) | @bigpix2000 Reshmee Auckloo (Pension Protection Fund) | @ReshmeeAuckloo Rick Van Rousselt (Advantive) | @RickVanRousselt Rob Bell (Kizan technologies) Robert Copelan (ZF Friedrichshafen AG) | @rcopelan Robert Dyjas (EQTek) | @Robdy Rodrigo Pinto (Storm Technology) | @ScoutmanPt Russell Gove (tronox) | @russgove Russell Gove (tronox) | @russgove Ruth Shyer (SuMMit Consulting, LLC) | @rshyer Ryan Healy (365Apps) | @Ryan365Apps Sabrina Faragoza (Cognizant\u0026rsquo;s Microsoft Business Group) Sekar Thangavel (IBM) | SekarThangavel Sergei Sergeev | @sergeev_srg Sharon Weaver (Smarter Consulting) | @sharoneweaver Shishir | skky05 Shrushti Shah (Rapid Circle) Siddharth Vaghasia | @siddh_me Simon Ãgreen | @Agrenpoint Simon Doy (iThink 365) | @simondoy Simon Hudson (Novia Works) | @simonjhudson Smita Nachan | @SmitaNachan Someleze Diko | @DikoSomeleze Sorina Becheru (abtis GmbH) Stefan Bauer (n8d) | @StfBauer Stephan Bisser (Solvion) | @stephanbisser Steven Reid (FTZ) | @steven_reid Sujith Pasupuleti (NRF) | Sujtih1907 Sumit Jadon (Avanade) | @CoolJadon Takashi Shinohara | @karamem0 Tammy Dupuy (CSULB) Tetsuya Kawahara | @techan_k Thomas Gölles (Solvion) | @thomyg Tim Balk (Wellmark) | @tlbalk Tim Cadenbach (Maximago) | @TimCadenbach Tim Mayo (Microsoft) | @timmayo Tod Beane Todd Baginski (Canviz) - @toddbaginski Tomasz Poszytek | @TomaszPoszytek Tony Derricott (BYUI) | @computx Troy Taylor](https://twitter.com/troystaylor) (Hitachi Solutions) | [@troystaylor  Veronique Lengelle (CPS) | @veronicageek Vipul Kelkar (Rapid Circle) | @vipulkelkar Yannick Plenevaux (PVX Solutions) | @yp_code Youssef Moumen Yves Habersaat (Sword Group) | @yhabersaat Zach Roberts | @ZachSPODev  Companies Here are the companies, which provided support the community initiative for this month by allowing their employees working for the benefit of others in the community. There were also people who contributed from other companies during last month, but we did not get their logos and approval to show them in time for these communications. If you still want your logo for this month\u0026rsquo;s release, please let us know and share the logo with us. Thx.\n    Addin365 Arvo Systems BLIS Digital Canviz Solutions Catapult Systems ClearPeople CPS Content+Cloud DMI Fellowmind Intelogy iThink 365 MondayCoffee N8D Piasys PixelMill Pramerica PVX Solutions Qubix Rapid Circle Sherpas Solvion Sogeti Storm Technology Struyf Consulting Sulava Sympraxis Consulting ThreeWill Valo Voitanos  Microsoft people Here’s the list of Microsoft people who have been closely involved with the Microsoft 365 Platform community work during last month.\n Aakash Bhardwaj (Microsoft) | @aakash_316 Abid Rahman (Microsoft)  Alex Terentiev | @alexaterentiev Aline Tognini - alinefmr Allen Snow - @asnow003 Andrey Esipov (Microsoft) April Dunnam (Microsoft) | @aprildunnam Arijit Mondal (Microsoft) Ashima Mathur (Microsoft) Ayca Bas (Microsoft)- @aycabs Bert Jansen (Microsoft) | @O365Bert Beth Pan - @beth_panx Beverly Kim - bvandaal Bob German (Microsoft) | @Bob1German Brian Dang (Microsoft) | @mrdang Brian Jackett (Microsoft) | @BrianTJackett Bryan Petersen - petey121175 Cathy Dew (Microsoft) | @catpaint Charles Sterling - @chass Christer Ljung (Microsoft) Christos Matskas (Microsoft) | @ChristosMatska Dan Wahlin | @DanWahlin David Chesnut (Microsoft) | @davidchesnut Doğan Erişen - derisen Dragan Panjkov | @panjkov Ed Averett | @Ed_Averett Emily Lynam (Microsoft) Elizabeth Samuel - ElizabethSamuel-MSFT Emma Cooper (Microsoft) Garry Trinder (Microsoft) | @garrytrinder Haimantika Mitra (Microsoft) | @HaimantikaM Holger Lutz - HolgerLutz Hugo Bernier (Microsoft) | @bernier Igor Ribeiro (Microsoft) James Eccles - jameseccles James Skay (Microsoft) | @@JamesSka Japhlet Nwamu (Microsoft) | @japhletnwamu Jasey Waegebaert | Jwaegebaert Jasmine Hoegh (Microsoft) | @sbjishu Jason Johnston - jasonjoh Jay Hangan (Microsoft) John Nguyen - johnguy0 John Sudds | @jsuddsjr Jos Verlinde - Josverl Jyoti Pal (Microsoft) Kavishi Agarwal Kevin Coughlin - @kevintcoughlin Keyur Patel - keyur32 Koen Zomers | @koenzomers Holland Kaviani - Holland-ODSP Laura Graham - Lauragra Linda Lu Cannon - lindalu-MSFT Loki Meyburg (Microsoft)- @lokimeyburg Luca Bandinelli - lucaband Mansa MusaLE (Microsoft) | @m4musale Mathangi Chakrapani (Microsoft) Matthijs Hoekstra | @mahoekst Max Kulakov (Microsoft) Michael Aldridge (Microsoft) Mikael Svenson | @mikaelsvenson Mike Hollinshead (Microsoft) | @mahollinshea Nancy Wang (Microsoft) | @nancyatMSFT Natalie Pienkowska | @NataliePienkow1 Natalie Pienkowska - NataliePienkow1 Nik Charlebois (Microsoft) | @NikCharlebois Nicolas Vogt - vogtn Nikolay Zainchkovskiy | NZainchkovskiy Nickii Miaro - Nickii Miaro Niko | NikoMix Nikola Metulev - @metulev Orion O\u0026rsquo;Malley (Microsoft) Pam Green (Microsoft) | @contextuallib Parag Jain (Microsoft) Pat Miller - @PatMill_MSFT Patrick Rodgers | @mediocrebowler Rabia Williams (Microsoft) | @williamsrabia Rajdeep Chandra Ravichandran Krishnasamy | @spfx_blog Richard Astbury (Microsoft) | @richorama Rick Kirkham | Rick-Kirkham Roel | RoelVB Roy Paar Rui Santos  Sam Larson | salarson Shane Weaver | shweaver-MSFT  Shreyansh Agrawal (Microsoft) Sébastien Levert | @sebastienlevert Srinivas Varukala (Microsoft) | @svarukala Steven Jia | Steven-Jia Shubham Gatkal (Microsoft) Tejas Mehta | @tpmehta Tom Resing | @resing Tomomi Imura (Microsoft) | @girlie_mac Vesa Juvonen (Microsoft) | @vesajuvonen Wajeed Shaikh | Wajeed-msft Waldek Mastykarz (Microsoft) | @waldekm Wictor Wilen | @wictor Vincent Biret (Microsoft) | @baywet   MVP Community team MVP Community team manages the Microsoft 365 platform community work in the GitHub and also coordinates different open-source projects around Microsoft 365 topics. Platform Community Team members have a significant impact on driving adoption of Microsoft 365 topics. They have shown their commitment to the open-source and community-driven work by constantly contributing to the benefit of the others in the community.\nThank you for all that you do!\n Emily Mancini (Sympraxis Consulting) | @EEMancini Geetha Sivasailam](https://twitter.com/gsived) (Artis Consulting) | [@GSiVed Julie Turner (Sympraxis Consulting) | @jfj1997 Laura Kokkarinen (Sulava) | @LauraKokkarinen Luise Freese | @LuiseFreese Veronique Lengelle (CPS) | @veronicageek Albert-Jan Schot (BLIS Digital) | @appieschot Andrew Connell (Voitanos) | @andrewconnell Andrew Koltyakov (ARVO Systems) | @andrewkoltyakov Beau Cameron (Aerie Consulting) | @Beau__Cameron Chris Kent (DMI) | @theChrisKent David Warner II (Catapult) | @DavidWarnerII Derek Cash-Peterson](https://twitter.com/spdcp) (Sympraxis Consulting) | [@Spdcp Elio Struyf (Struyf Consulting) | @eliostruyf Eric Overfield (PixelMill) | @EricOverfield Erwin van Hunen (Valo Intranet) | @erwinvanhunen  Gautam Sheth (Valo Solutions) | @gautamdsheth João J. Mendes](https://twitter.com/joaojmendes) (Valo Solutions) | [@joaojmendes Joel Rodrigues (Storm Technology) | @JoelFMRodrigues Marc D Anderson (Sympraxis Consulting) | @sympmarc Paolo Pialorsi (Piasys.com) | @PaoloPia Patrick Lamber (Expertsinside AG) | @patricklamber Paul Bullock (CPS) | @pkbullock Rick Van Rousselt (Advantive) | @RickVanRousselt Stefan Bauer (n8d) | @StfBauer Stephan Bisser (Solvion) | @stephanbisser Tetsuya Kawahara | @techan_k Thomas Gölles (Solvion) | @thomyg Velin Georgiev (Pramerica) | @velingeorgiev Yannick Plenevaux (PVX Solutions) | @yp_code  Here are the Microsoft Internal Platform Community team members:\n April Dunnam | @aprildunnam Natalie Pienkowska | @NataliePienkow1 Rabia Williams](https://twitter.com/williamsrabia) | [@williamsrabia Alex Terentiev | @alexaterentiev Bert Jansen | @O365Bert Bob German | @Bob1German Garry Trinder](https://twitter.com/garrytrinder) | [@garrytrinder Hugo Bernier | @bernierh Koen Zomers | @koenzomers Mikael Svenson](https://twitter.com/mikaelsvenson) | [@MikaelSvenson Patrick Rodgers | @mediocrebowler Sébastien Levert](https://twitter.com/sebastienlevert) | [@sebastienlevert Vesa Juvonen | @vesajuvonen Waldek Mastykarz | @waldekm Wictor Wilen | @wictor  Next steps See all of the available community calls, tools, components and other assets from https://aka.ms/m365pnp. Get involved!\nGot ideas or feedback on the topics to cover, additional partnerships, product feature capabilities? - let us know. Your input is important for us, so that we can support your journey in Microsoft 365.\n“Sharing is caring!”\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-platform-community-pnp-february-2022-update/images/feb-summary-promo_hu10705e42d53e327eaae5f84bebb20b40_532272_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-platform-community-pnp-february-2022-update/","tags":[],"title":"Microsoft 365 Platform Community (PnP) – February 2022 update"},{"categories":["Community post"],"contents":"In Adaptive Cards there are multiple ways to show and hide content depending on other content or conditions, or even user interaction. But despite that most of them is available since the version 1.2 (so quite early) it requires a bit of knowledge how to actually implement them.\nThere are 3 major ways for showing and hiding content in Adaptive Cards:\n Action.ShowCard Action.ToggleVisibility Condition defined under \u0026ldquo;Only show when\u0026rdquo; property  Let\u0026rsquo;s go now through each of them.\nAction.ShowCard To use it first you need to add \u0026ldquo;ActionSet\u0026rdquo; element to the designer canvas and then select Action.ShowCard from the list of available options:\n   Once that is done, define button\u0026rsquo;s properties inside \u0026ldquo;Element properties\u0026rdquo; window, such as its title and id.\nHint!\nTo display the other card, that will be shown after clicking on the added button, double click it! It will trigger the hidden card to appear, so you can easily author its contents.\n Next double-click the button, to display the hidden card and author its contents:\n   Next, switch to \u0026ldquo;Preview mode\u0026rdquo; to see how the card is being shown and hidden after clicking the button:\n   Important\nIf you add \u0026ldquo;Action.Submit\u0026rdquo; to the hidden card it will send data from all fields present from that card and \u0026ldquo;up\u0026rdquo; - so from all parents of that hidden card. The \u0026ldquo;Action.Submit\u0026rdquo; button on a top-most card will only send data from that top card.\n  Data from cards is always submitted from parent to child cards.\nAction.ToggleVisibility To use it first you need to add \u0026ldquo;ActionSet\u0026rdquo; element to the designer canvas and then select Action.ToggleVisibility from the list of available options:\n   Next, the same as with ShowCard scenario, define properties of the added button.\nImportant\nUnlike with ShowCard, the ToggleVisibility requires you to do some work directly within the generated JSON payload of the card. There is no UI to configure it any other way.\n Now add elements to the card that you want to show and hide after clicking the button. Then define their properties:\n Id - it is absolutely required to define unique ids of the added elements. Ids are used to target elements and toggle their visibility. Initially visible - define whether elements should be visible as the card is rendered, or hidden. Toggle will then either show them, or hide them. When you unclick the checkbox, element will be overlayed with a greyed pattern.     Now navigate to JSON payload and find ToggleVisibility button\u0026rsquo;s definition. Add there the following code:\n\u0026quot;targetElements\u0026quot;: [ \u0026quot;colon delimited list of elements' Ids to toggle\u0026quot; ]\n   Important\nThe only \u0026ldquo;downside\u0026rdquo; of that approach is in case you add an always visible submit button, then it will always send data from all fields even when they are hidden.\n Last step is to test it. Switch to \u0026ldquo;Preview\u0026rdquo; mode and examine behavior of your card:\n Only show when This approach uses \u0026ldquo;Adaptive Cards Templating Language\u0026rdquo;. To be able to use it, first you need to define Data that will be bind with the card. And once you have the data, then you are able to create a condition that determines when an element should be visible:\n   You can use different types of comparisons, to both integer, dates, boolean or string data types.\nImportant\nUnlike \u0026ldquo;Toggle\u0026rdquo;, showing and hiding elements based on conditions is actually happening when a card is being rendered. As of today, Data that card is using is only static, so it cannot be changed after the card is displayed. This means, that if a field is having a condition that prevents it from being displayed, even when it has a default value set, its value will not be submitted as long as the field is not visible.\n Finally, enter \u0026ldquo;Preview\u0026rdquo; mode to see how your card behaves:\n And that\u0026rsquo;s it! Hope you will find this tutorial useful. If you have any comments, write them down below. Thanks!\n","image":"https://pnp.github.io/blog/post/showing-and-hiding-content-in-adaptive-cards/images/image_hu72ec3fa237c12d92614a4cd747917353_125738_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/showing-and-hiding-content-in-adaptive-cards/","tags":["Adaptive Cards"],"title":"Showing and hiding content in Adaptive Cards"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Toronto, Ontario, Canada-based Microsoft Cloud Solution Architect and MVP Alum, Hugo Bernier (Microsoft) | @bernierh. Topics discussed in this session:\n Hugo’s Day job as a Cloud Solution Architect – focusing on Power Platform adoption - effectively teaching customers how to take advantage of products they already own in context of their existing IT infrastructure.  Hugo’s Night job - working on community initiatives like Sharing is Caring events and on Samples repositories – testing, organizing, tagging SPFx extension and web part samples.  Working with customers to fine tune their governance models. Three tiers of governance. IT led (Mission critical), IT supported (Infrastructure support), and Personal Productivity initiatives (no support). Rationale for building solutions with Power Platform vs C#. The question – are we building infrastructure capabilities once that will support many projects or building a local app?  Latest focus – Dev containers (Docker). Creating remote containers in VSCode that allow developers to open cloud-based samples in the environment they were built. Use of Dev Containers / Codespaces will be demoed during the February 10th SPFx Community call.  We also covered 22 articles published by Microsoft and the PnP Community over the last week. This week  Waldek – focused on making it easier for Angular developers to build/modify LOB apps for (also) use in Teams. Vesa – SPFx v1.14 updates to product, documentation, tutorials for upcoming release. Hugo – hack-a-thon with large government customer, gearing up for Microsoft 365 Conference, April 5-7th, Las Vegas.  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n  This session was recorded on Monday, February 7, 2022. Enjoy the show.  Video at Microsoft 365 Community YouTube channel. Podcast format at https://pnpweekly.podbean.com.  These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!” Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  What’s New in Microsoft Teams | January 2022 - Microsoft SharePoint Roadmap Pitstop: January 2022 - Mark Kashman (Microsoft) | @mkashman Microsoft Graph Data Connect: Deploying Azure Synapse Analytics - Nik Charlebois (Microsoft) | @NikCharlebois Combining Microsoft Graph Data Connect data sets in Azure Synapse Analytics - Nik Charlebois (Microsoft) | @NikCharlebois Learn from the community: Microsoft Teams and Moodle online learning solution - Ayça Baş (Microsoft) | @aycabs Breaking changes to the Microsoft Graph API for eDiscovery (beta) - Microsoft Breaking changes to the addToReviewSet action in the Microsoft Graph API for eDiscovery (beta) - Microsoft Microsoft Graph Toolkit v2.3.2 release notes - Sébastien Levert (Microsoft) | @sebastienlevert  Community articles  M365 Dev Podcast - Office Add-Ins with Juan Balmori - Jeremy Thake (Microsoft) | @jthake \u0026amp; Paul Schaeflein (AddIn365) | @paulschaeflein \u0026amp; Juan Balmori (Microsoft) | @juaneloBalmori How to call and show Graph API data in SPFx Adaptive Card Extensions(ACEs) - Siddharth Vaghasia | @siddh_me Don\u0026rsquo;t pay more for SharePoint Storage than you have to :) - Kasper Bo Larsen (Fellowmind) | @kasperbolarsen Microsoft Forms as a Tab in Teams using graph API in Power Automate - Shrusti Shah (Rapid Circle) Working with the Microsoft Graph communications API in a Microsoft Teams meeting app - Vardhaman Deshpande (Valo Solutions) | @vrdmn Free SharePoint Site Design Training in February - Laura Rodgers (IW Mentor) | @WonderLaura Shuffle an array with Power Automate - Albert-Jan Schot (BLISS.digital) | @appieschot SharePoint Syntex AI - my top 5 real-world tips - Chris O\u0026rsquo;Brien (Content+Cloud) | @ChrisO_Brien Building Proxy Provider for SharePoint Framework and Microsoft Graph Toolkit - Sergei Sergeev | @sergeev_srg Mea culpa - always install gulp-cli globally, not gulp - Andrew Connell (Voitanos) | @andrewconnell Migrating a Planner board to a List - Loryan Strant (Rapid Circle) | @LoryanStrant :thumbs_up::thumbs_down:How to add like and dislike buttons in Microsoft/SharePoint Lists [YouTube u\u0026hellip; - Giuliano De Luca | @DeLucaGiulian Episode #192 - Working with SharePoint Online Libraries and Files via Microsoft Graph - Paolo Pialorsi (PiaSys) | @PaoloPia Power Apps User Personalization Color Blind Mode #UI - April Dunnam (Microsoft) | @aprildunnam  Additional resources  Documentation - Opening a sample using a development container  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026quot; ","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-152-hugo-bernier/images/Thumb-Ep152-February7_hu40bc0bfc975c0c18bbd3c8ff9cdff474_519656_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-152-hugo-bernier/","tags":["Extensions","Microsoft 365","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 PnP Weekly - Episode 152 - Hugo Bernier"},{"categories":["Microsoft 365 developer podcast"],"contents":"Juan Balmori returns to the podcast, speaking with Jeremy about developing add-ins for Office Online.\n Listen to the show here: (m365devpodcast.com)\nMicrosoft News  Microsoft Graph Data Connect: Deploying Azure Synapse Analytics (@NikCharlebois) Combining Microsoft Graph Data Connect data sets in Azure Synapse Analytics (@NikCharlebois) Announcing PWA Studio, the VS Code extension for building Progressive Web Apps! (@Justinwillis96)  Community Links  Using the Azure Load Testing service (@zimmergren) SharePoint Syntex AI - my top 5 real-world tips (@ChrisO_Brien)  ","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-office-add-ins-with-juan-balmori/","tags":[],"title":"M365 Dev Podcast - Office Add-Ins with Juan Balmori"},{"categories":[],"contents":"In this article, we will learn how to get data from Graph API and display it in SPFx Adaptive Card Extensions(ACEs). if you are new to ACEs then I would recommend going through my previous article where I have covered the concept and basics of ACEs along with step by step tutorial on understanding how the ACEs components work together especially Card View and Quick View.\nScenario In this tutorial, we will cover the below use cases\n We will get the current user’s email message from the Graph API call and then show it in Card View with the previous and next button to navigate between emails We will modify Quick View to display email detail on click of any Email from Card View.  Step – Install latest SPFx Version As of writing this article, the latest beta SPFx version is v1.14, use the below command to install the latest beta version, you can also install stable version SPFx 1.13.1\nnpm install /generator-sharepoint@next --global Step – Create a new SPFx solution Go to the targeted path in your command prompt where you wanted to create a new SPFx solution, run the below command\nyo @microsoft/sharepoint We will be asked a series of questions, you can choose/enter below for our sample\n   Once completed you would see below\n   Step – Create Required properties/attributes to handle required state object Based on what we are trying to build we will need 3 attributes\nGo to src\\adaptiveCardExtensions\\graphdatademo\\GraphdatademoAdaptiveCardExtension.ts\nemails – to store an array of email messages which will be retrieved by Graph API\ncurrentIndex : to hold current email item’s index\ncurrentEmail : to hold current email object returned by Graph API to use it in Quick view to display details of email when clicked.\nModify the ACEState interface to below\nexport interface IGraphdatademoAdaptiveCardExtensionState { emails: any; currentIndex:any; currentEmail:any; } Next, modify onInit method to initialize\npublic onInit(): Promise\u0026lt;void\u0026gt; { this.state = { emails: [], currentIndex:0, currentEmail:{} }; this.cardNavigator.register(CARD_VIEW_REGISTRY_ID, () =\u0026gt; new CardView()); this.quickViewNavigator.register(QUICK_VIEW_REGISTRY_ID, () =\u0026gt; new QuickView()); this.getOutlookData() return Promise.resolve(); } Step – Create a method to get data from Graph API Go to src\\adaptiveCardExtensions\\graphdatademo\\GraphdatademoAdaptiveCardExtension.ts\nImport the MSGraphClient using which we will make Graph API calls.\nimport { MSGraphClient } from \u0026#39;@microsoft/sp-http\u0026#39;; Add a new method getOutlookData to make Graph API call and set State of currentEmail and emails from the return object.\nprivate getOutlookData(){ this.context.msGraphClientFactory.getClient().then((client: MSGraphClient): void =\u0026gt; { client.api(\u0026#34;/me/mailfolders/Inbox/messages\u0026#34;).get((error, messages: any) =\u0026gt; { console.log(messages); this.setState({currentEmail:messages.value[this.state.currentIndex],emails:messages.value}); }); }); } Step – Modify Card View to show data using the State object Go to src\\adaptiveCardExtensions\\graphdatademo\\cardView\\CardView.ts\nModify data method to set primaryText and description as we have primary text card template.\nWe will use state object to read the subject and from the email address.\npublic get data(): IPrimaryTextCardParameters { if(this.state.emails.length \u0026gt;0 ) { return { primaryText: \u0026#34;Sub: \u0026#34; + this.state.emails[this.state.currentIndex].subject, description: \u0026#34;From: \u0026#34; + this.state.emails[this.state.currentIndex].from.emailAddress.address } } else{ return { primaryText: \u0026#34;Loading\u0026#34;, description: \u0026#34;Loading\u0026#34; } } } Step – Modify cardButtons methods to add 2 buttons to navigate through email using previous and next Go to src\\adaptiveCardExtensions\\graphdatademo\\cardView\\CardView.ts\npublic get cardButtons(): [ICardButton] | [ICardButton, ICardButton] | undefined { const buttons: ICardButton[] = []; if (this.state.currentIndex \u0026gt; 0) { buttons.push({ title: \u0026#39;Previous\u0026#39;, action: { type: \u0026#39;Submit\u0026#39;, parameters: { id: \u0026#39;previous\u0026#39; } } }); } if (this.state.currentIndex \u0026lt; this.state.emails.length - 1) { buttons.push({ title: \u0026#39;Next\u0026#39;, action: { type: \u0026#39;Submit\u0026#39;, parameters: { id: \u0026#39;next\u0026#39; } } }); } return buttons as [ICardButton] | [ICardButton, ICardButton]; } Add onAction item method to handle the submit action type of previous and next button\nNote here using a case statement to increment or decrement the index, this will change the state object by modifying currentIndex and currentEmail and forcing to re-render the card view component.\npublic onAction(action: IActionArguments): void { if (action.type === \u0026#39;Submit\u0026#39;) { const { id, op } = action.data; switch (id) { case \u0026#39;previous\u0026#39;: { this.setState({ currentIndex: this.state.currentIndex - 1 , currentEmail:this.state.emails[this.state.currentIndex - 1]}); break; } case \u0026#39;next\u0026#39;: { this.setState({ currentIndex: this.state.currentIndex + 1 , currentEmail:this.state.emails[this.state.currentIndex + 1]}); break; } case \u0026#39;default\u0026#39; : {} } } } Step – Modify Quick view adaptive card JSON template to display details of the email First thing we need to do is modify the QuickView Adaptive Card template json object. I have used https://adaptivecards.io/designer to design the adaptive card and set the dynamic properties to set based on how the email object is coming…\nModify src\\adaptiveCardExtensions\\graphdatademo\\quickView\\template\\QuickViewTemplate.json to below\nIf you notice here\n We would be using message object from state to populate the dynamic values… For user photo, we are using the userphoto.aspx page and passing the sender’s email address. this is one of the way to get photo We have also added one button in Quick view which will take user to target outlook email link, this we get from webLink property of email object. To find list of properties returned by the email object, you can refer to this link  { \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Medium\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;${message.subject}\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;style\u0026#34;: \u0026#34;heading\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Image\u0026#34;, \u0026#34;style\u0026#34;: \u0026#34;Person\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;/_layouts/15/userphoto.aspx?size=S\u0026amp;username=${message.from.emailAddress.address}\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34; } ], \u0026#34;width\u0026#34;: \u0026#34;auto\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;${message.from.emailAddress.address}\u0026#34;, \u0026#34;wrap\u0026#34;: true }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Created {{DATE(${string(message.sentDateTime)}, SHORT)}}\u0026#34;, \u0026#34;isSubtle\u0026#34;: true, \u0026#34;wrap\u0026#34;: true } ], \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;${message.bodyPreview}\u0026#34;, \u0026#34;wrap\u0026#34;: true } ], \u0026#34;actions\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Action.OpenUrl\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;View\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;${message.webLink}\u0026#34; } ], \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.3\u0026#34; } Step Modify QuickView to pass the message object from state to Adaptive Card Go to src\\adaptiveCardExtensions\\graphdatademo\\quickView\\QuickView.ts\nModify IQuickViewDate interface to hold the message object\nStep Modify QuickView to pass the message object from state to Adaptive Card Go to src\\adaptiveCardExtensions\\graphdatademo\\quickView\\QuickView.ts\nModify IQuickViewDate interface to hold the message object\nexport interface IQuickViewData { message:any } Modify data() method to set and return the current message object from state property currentEmail\npublic get data(): IQuickViewData { return { message: this.state.currentEmail }; } Step – Testing the ACE component Testing the ACE component would be similar to how we test our SPFx web part, we will have to run the gulp serve command then open workbench to add the component created on the Page.\nRun below command\ngulp serve -l --nobrowser Open a SharePoint Workbench in the browser\nhttps://yourtenant.sharepoint.com/sites/mysites1/_layouts/15/workbench.aspx\nClick on Add icon, Click on the graphDataDemo,\nWe should see something like below\n   Notice here that once you click Next, it loads the next email but it does not show the Prev button, this is because by default the Card Size is set to Medium in ACE properties configuration, click on Edit web part and chase the Card Size to Large\n   Now you should see something like below\n   You can use Previous and Next to move around different emails. If you would have noticed we have written logic to handle that previous and next buttons will be visible based on item index and total email counts(by default we will only get 10 from Graph API). You can make this configurable in the property window and use this number to pass to Graph API GraphdatademoAdaptiveCardExtension.tx file\nClick on any of the emails and we should see the email detail\n      That’s it for this article, Hope this helps..!!!\nHappy Coding..!!!\nThe source code for this article is available on GitHub location for quick reference.\n","image":"https://pnp.github.io/blog/post/how-to-call-and-show-graph-api-data-in-spfx-adaptive-card/images/img_61d1fb4343467_hud06524b24cb7f7f378ed386b4c732d9d_33792_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-call-and-show-graph-api-data-in-spfx-adaptive-card/","tags":["Adaptive card extensions","API data","SharePoint Framework (SPFx)"],"title":"How to call and show Graph API data in SPFx Adaptive Card Extensions(ACEs)"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary One location the Microsoft 365 tenant – script samples gallery (136 scenarios and 187 scripts) including recently added Teams PowerShell support! Sign up and attend an AMA and other events this month hosted by Sharing is Caring. Get the recognition you deserve, sign up for the PnP Recognition Program. Heads down on PnP projects. Expecting to ship Microsoft Graph Toolkit v2.3.2 on Friday! To see current releases and latest updates/nightly builds, access the Repos via the links in table below. There were 5 new/updated script, 5 Power Platform samples delivered this week. Open-source project status (Bold indicates new this call)**\n   Project Current Version Release/Status     PnP .NET Libraries - PnP Framework v1.8.0 GA with .NET 6.0 support added Prepping v1.9   PnP .NET Libraries - PnP Core SDK v1.5.0 GA with .NET 6.0 support added Prepping v1.6   PnP PowerShell v1.9.0 GA In progress: V2 POC, Prepping for v1.8, nightly releases   Yo teams - generator-teams v3.5.0 GA v4.0.0-next   Yo teams - yoteams-build-core v1.5.0 GA, Next: v1.6.0-next.1    Yo teams – yoteams-deploy v1.1.0 GA    Yo teams - msteams-react-base-component v3.1.1    Microsoft Graph Toolkit (MGT) v2.3.1 GA, TeamsFx authentication provider preview! Shipping v2.3.2 on Friday! Working on v3.0.0 - Aligning all Toolkit components to Fluent UI Web Components    Note\nWhile version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities.\n The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\n  Actions  Opt into PnP Recognition Program | aka.ms/m365pnp-recognition Join us at the next Microsoft 365 platform call 8th of February @ 8 AM PT  Latest news from Microsoft engineering on Microsoft 365 topics Demos:  Dave Randall - Introduction to Intune APIs on Microsoft Graph Patrick Rogers - Creating engaging and dynamic Viva Connections mobile experiences Sébastien Levert - Using the MGT Files Components in your solutions     Register for Sharing is Caring Events:  PnP Sharing is Caring - AMA (Ask Me Anything) - SPFx React Controls – Tuesday, February 22nd, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) \u0026ndash; Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST First Time Contributor Session – TBS soon Community Docs Session – TBS soon  Power Platform Samples – First Time Contributor – Monday, February 14th, 1pm PST PnP – SPFx Developer Workstation Setup – Tuesday, February 8th, 2pm PST PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – TBS soon First Time Presenter – Wednesday, February 9th, 9am PST More than Code with VSCode – Tuesday, February 15th, 2pm PST Maturity Model Practitioners – Tuesday, February 15th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Download the recurrent invite for this call – http://aka.ms/m365-dev-sig Call attention to your great work by using the #PnPWeekly on Twitter.  Microsoft Teams Development Samples https://aka.ms/TeamsSampleBrowser\n Samples Wanted!   Microsoft Power Platform Samples https://aka.ms/powerplatform-samples\n Create M365 Groups using Graph* - Michel Mendes | @michelcarlo Hide List from Site Contents* - Michel Mendes | @michelcarlo Breadcrumb Component - Pavel Kovalevskij SelfService Portal for Microsoft 365* - Jan Bakker | @janbakker_\nAlbert-Jan Schot | @appieschot Users and Groups Directory* - Siddharth Vaghasia | @siddh_me  *These latest samples should show on site shortly after this call\nScript Samples https://aka.ms/script-samples\n2 New Scenarios and 3 Script Updates:\n Delete a library exceeding the list threshold limit. Remove the files and folders before deleting th\u0026hellip; - Adam Wójcik | @Adam25858782  Get All Apps From The App Catalog And Export It To CSV - Adam Wójcik | @Adam25858782  Sample on a report showing how much SharePoint Storage you can save by trimming document versions on\u0026hellip; - Kasper Bo Larsen | @kasperbolarsen  Empty the tenant recycle bin - Leon Armston | @LeonArmston  Flow run status list dashboard - Ryan Healy   Article: Getting started with PnP Script Samples – aka.ms/script-samples/getting-started\n– Many thanks!\nTogether Mode!  The pleasure of seeing everyone here is shared by all. You are an awesome community. Demos Make a simple bot using Webhooks in Microsoft Teams – this simple (request/response capability) Teams bot gets weather using an outgoing webhook. A user @ mentions the webhook (@weather) and a location (London) triggering an Azure function, that calls the OpenWeatherMap API for local weather information. An Adaptive Card is returned to user with weather conditions. Technically, any member of a Team can create this simple webhook, not creating and registering a full-fledged bot.\nUse the Power Platform and Microsoft Teams to quiz yourself – on details of what you read 3 months ago? Happen to keep a list of what you read in SharePoint? Want to create a no code solution to quiz yourself on past reads using Power Automate that pulls details transformed into questions from your list, shuffles the array of questions (for quiz experience), and renders them on an Adaptive Card that also evaluates your response? Updates on Independent Publisher Connectors \u0026amp; Cloverly / Ecologi Connector Demo – 72 connectors now in production more than half created by presenter – Troy. 29 connectors in the pipeline! Shown are 2 connectors for accessing environmental sustainability data. Access Cloverely’s API to calculate cost of carbon emitting activities and Ecologi for reports. From both, users may purchase trees and carbon offsets. Presenter’s Power App has buttons for purchasing trees, offsets, reports. Connectors to be available soon. Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics  PnP .NET library updates - Bert Jansen (Microsoft) | @O365bert – 6:44 PnP PowerShell updates - Bert Jansen (Microsoft) | @O365bert – 8:17 yo Teams updates - David Warner II (Catapult Systems) | @DavidWarnerII – 9:08 Microsoft Graph Toolkit updates - Sébastien Levert (Microsoft) | @sebastienlevert – 9:48 Microsoft Script Samples - Paul Bullock (CaPa Creative Ltd) | @pkbullock – 2:47 Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German – 11:29 Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam – 12:05 Demo 1: Make a simple bot using Webhooks in Microsoft Teams – Lee Ford (Symity Ltd) | @lee_ford – 14:32 Demo 2: Use the Power Platform and Microsoft Teams to quiz yourself – Albert-Jan Schot (BLIS.digital) | @appieschot – 24:15 Demo 3: Updates on Independent Publisher Connectors \u0026amp; Cloverly / Ecologi Connector Demo – Natalie Pienkowska (Microsoft) | @NataliePienkow1 \u0026amp; Troy Taylor (Hitachi Solutions) | @troystaylor – 36:08  Resources Additional resources around the covered topics and links from the slides.\n D1: Article - Make a bot for simple interactions in Teams using a Webhook  D1: Sample - teams-webhook-weatherbot-sample  D2: Article - Shuffle an array with Power Automate  D3: Documentation - Power Platform and Azure Logic Apps connectors documentation  D3: Connectors - Welcome to the Independent Publisher Connector Directory!  Microsoft 365 PnP Weekly – Episode 151 (January 31st) with UK-based SharePoint developer, architect and MVP, Paul Bullock | @pkbullock | video | podcast Microsoft 365 PnP Weekly – Episode 150 (January 24th) with London, UK-based SharePoint developer architect and MVP, Anoop Tatti (Content+Cloud) | @anooptells | video | podcast  General resources  Script Samples - Getting started with PnP Script Samples – aka.ms/script-samples/getting-started Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant – Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v3.x | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Microsoft 365 platform call – February 8th at 8:00 am PST | https://aka.ms/m365-dev-call Office add-in monthly call – February 9th at 8:00 am PST | https://aka.ms/officeaddinscall Viva Connections \u0026amp; SharePoint Framework call – February 10th at 7:00 am PST | https://aka.ms/spdev-spfx-call Adaptive Cards monthly call – February 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall Power Apps monthly call – February 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call – February 17th at 7:00 am PST | https://aka.ms/m365-dev-sig Microsoft Identity Platform call – February 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar  General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls!\nYou can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\nRelated documents   PnP Core SIG - 220203.pptx (290 KB)  Teams Webhook Bot.pptx (290 KB)  * * * _“Sharing is caring”_ _Microsoft 365 Community (PnP) team, Microsoft - 4th of February 2022_ ","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-3rd-of-february/images/recording-3rd-feb_huf7229bd687f23b07b0dd00c3fefca894_197719_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-3rd-of-february/","tags":["Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 Developer Community Call recording – 3rd of February, 2022"},{"categories":["Community post"],"contents":"Even though most of us likes Microsoft, on some days more than others, there are no reason why we should pay more than necessary.\nAs you might know each tenant is born with a 1 TB SharePoint Storage allowance. On top of that you get 10 GB per licensed user.\nUnless you already have a retention policy or similar in place that will delete the content of your SharePoint Site Collections as the time goes by, you will eventually run out of free SharePoint Storage. At the time of writing additional SharePoint Storage is available in the admin center at $0.20 per GB per month.\nFirst of all it is important to know how the total SharePoint Storage is calculated. In the screen shot below you see the version history of a fairly typical file. It has been updated and reviewed a few times and currently we have a total of 25 versions.\nIt has been difficult to find any documentation from Microsoft confirming this, but as far as I know Microsoft calculate the Storage for this file as each version multiplied by its size. So in this case our file is roughly 25 * 39 MB towards the Storage allowance. That is a lot.    So what can we do about it?\nAs usually there are a fair number of options:\nA) Set up a Retention policy that will delete some of the content. For some organizations this is not an option as per their Governance policies or fear that the policy might delete too much. B) Reduce the number of document versions saved ( the default is 500 major versions). This will often require that you have some kind of provision tools in place that will change the default value. The downside of this option is that you might be in a situation where you wish to restore an older version, but that version does not exist anymore.\nC) Monitor the Site Collections for activity and enforce that the Owners of a Site Collection deletes any non essential documents once the Site Collection is no longer active. This Governance approach might work in some organizations, but I have yet to see it.\nD) Monitor the Site Collections for activity and once it is no longer active the Archiving process starts. Depending on the requirements that could be something like:    Step number 2 can be omitted but is there to ensure that it will be possible to locate any version of a given document should the need arise.\nThe reason for not deleting the entire Site Collection once the documents have been copied to cheaper storage is to ensure that the organization will still able to see the Site Collection and the content. Often the Site Collection was used in a project or similar and the organization needs to store that fact that this project once existed.\nThere is also possible to extend the process by deleting the Read Only Site Collection after a few months or years. If you are thinking \u0026ldquo;Well this might save us some SharePoint Storage, but I have no idea how to verify it\u0026rdquo;, the PnP Script Samples is the place to go:\nstorage savings report\nThis script will output a report showing how much Storage you can save per site collection.\nSharingIsCaring    ","image":"https://pnp.github.io/blog/post/don-t-pay-more-for-sharepoint-storage-than-you-have-to/images/VersionHistory_hu93eedafb1074c3a7426a8e1818dac976_53601_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/don-t-pay-more-for-sharepoint-storage-than-you-have-to/","tags":["SharePoint"],"title":"Don't pay more for SharePoint Storage than you have to :-)"},{"categories":[],"contents":"This article is focused on how you can add Forms as a Website Tab in Microsoft Teams using Post Tab in Teams channel graph API\nFrom the below shown figure 1.1 You can see the whole layout of the Power Automate flow which when triggered will add Form into Teams channel as a Tab\n   Fig 1.1 – Post Forms as Tab in Microsoft Teams Power Automate Flow diagram\nBefore digging more into Power Automate, Create an Azure AD App by giving the Application permissions required for Add Tabs to Channel API just like shown in Fig 1.2\n   Fig 1.2 – Azure AD App with Application Permissions for Adding Tabs to Channel graph API\nNavigate to your Resource Group as shown in Fig 1.3, and copy the Client ID, Tenant ID, Create the Client Secret and copy the Client Secret Value and save all these values in a notepad as this will be used in the later steps\n   Fig 1.3 – Azure AD App Details\nNote: Create a Microsoft Form in your tenant and Save the Form Link, you can get the Form link by clicking on the Share Button and copying the link. Save the link in the notepad as it will be used in the Power Automate Flow. Look into the Fig 1.4 to know on how you can get Forms Link\n   Fig 1.4 – Microsoft Forms URL\nNow it’s the time to dig into creating Power Automate Flow which when triggered will add Forms a Tab to your Teams Channel\nStep 1: Create a manual trigger flow\nStep 2: Look into the Fig 1.5, Select Initialize Variable, give a name as FormsURL and give the value as Forms Link which you saved in the notepad as mentioned above from Fig 1.4. Select the type as string\n   Fig 1.5 – Initialize variable to save Forms URL\nStep 3: Look into Fig 1.6, Select Initialize Variable, give a name as Client ID and give the value of Azure AD App Client ID which we saved in the notepad. Select the type of variable as String\n   Fig 1.6: Initialize Client ID string type variable to store Azure AD App Client ID value\nStep 4: Look into Fig 1.7, Select Initialize Variable, give a name as Client Secret and give the value of Azure AD App Client Secret which we saved in the notepad. Select the type of variable as String\n   Fig 1.7: Initialize Client Secret string type variable to store Azure AD App Client Secret value\nStep 5: Look into Fig 1.8, Select Initialize Variable, give a name as Tenant ID and give the value of Azure AD App Tenant ID which we saved in the notepad. Select the type of variable as String\n   Fig 1.8: Initialize Tenant ID string type variable to store Azure AD App Tenant ID value\nStep 6: Now we will get the Team and Channel where we want to add Forms Tab, Select Get Teams connector and give the Team Name like shown in Fig 1.9\n   Fig 1.9 – Get Team and enter the value of the Team Name\nNow select, List Channels connector and give the team’s name, this will list all the channels in the given Team.\nVoila, It’s the time to use the graph API (Post Tab in Channels) in the HTTP Action.\nStep 7: Graph API – POST Request\nRequest URL: https://graph.microsoft.com/v1.0/teams/{id}/channels/{id}/tabs\nIn the request URL : TeamsID - select dynamically Team ID from the Get Team , For Channel ID – select dynamically Channel ID from List Channels\nRequest Body:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Microsoft Forms\u0026#34;, \u0026#34;teamsApp@odata.bind\u0026#34;: \u0026#34;[https://graph.microsoft.com/beta/appCatalogs/teamsApps/com.microsoft.teamspace.tab.web](https://graph.microsoft.com/beta/appCatalogs/teamsApps/com.microsoft.teamspace.tab.web)\u0026#34;, \u0026#34;configuration\u0026#34;: { \u0026#34;entityId\u0026#34;: \u0026#34;2DCA2E6C7A10415CAF6B8AB6661B3154\u0026#34;, \u0026#34;contentUrl\u0026#34;: \u0026#34;@{variables(\u0026#39;FormsURL\u0026#39;)}\u0026#34;, \u0026#34;websiteUrl\u0026#34;: \u0026#34;@{variables(\u0026#39;FormsURL\u0026#39;)}\u0026#34;, \u0026#34;removeUrl\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;teamsAppId\u0026#34;: \u0026#34;81fef3a6-72aa-4648-a763-de824aeafb7d \u0026#34; } For, Content URL and Website URL in the HTTP Request Body, select dynamically the Forms URL variable which we declared at the top of the Flow\nTeams APP ID for Website tab will be:\nTo know more on Teams APP ID refer; Configuring built-In Tab types in Teams\nIn this use-case, For Microsoft Forms the teamsAppID is: 81fef3a6-72aa-4648-a763-de824aeafb7d\nLook into Fig 1.10 which shows the Post Request with the Request body and URL\n   Fig 1.10- Post Tabs in Teams HTTP Request\n Now it’s the time to authenticate your given API as shown in Fig 1.11, In the same HTTP Request action, scroll down and select Active Directory OAuth and give the Tenant ID, Client ID, Client Secret variables as value for authentication\n   Fig 1.11 – Authenticate graph API using Azure AD OAuth\nThe Power Automate flow is now ready to test. Click on Test and select Manually as we have added Manual trigger for the flow to run. Once the Flow runs you will see Microsoft Forms added to your Teams General Channel as Tab, like shown in Fig 1.12\n   Fig 1.12 – Microsoft Forms added as Tab in Teams Channel using Graph API in Power Automate\nI hope this article helps you in understanding how you can leverage graph API In HTTP request in Power Automate\nStay tuned for my upcoming blogs.\nKeep Reading, Keep Sharing!\n","image":"https://pnp.github.io/blog/post/microsoft-forms-as-a-tab-in-teams-using-graph-api-in-power/images/ShrushtiShah_0-1643783152544_hu1108a830fd44692e034085fe08a86e89_31634_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/microsoft-forms-as-a-tab-in-teams-using-graph-api-in-power/","tags":["Microsoft Graph","Power Automate"],"title":"Microsoft Forms as a Tab in Teams using graph API in Power Automate"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from February 2nd, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call Summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 880+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring this month and next. Upcoming AMAs on PnP React Controls and on Graph and MGT. Tune into the weekly  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics – hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Microsoft 365 PnP Weekly - Videos, Podcasts focused on the latest news and topics on Microsoft 365 hosted by Vesa Juvonen and Waldek Mastykarz   Hear about the latest 8 Microsoft 365 Platform related stories and enjoy 3 demos delivered by Microsoft presenters on the latest capabilities of the Microsoft 365 platform.  The host of this call was Brian T. Jackett (Microsoft) | @BrianTJackett. Q\u0026amp;A takes place in chat throughout and live at end of the call.\nMicrosoft 365 Platform News Flash  Microsoft Graph Data Connect: Deploying Azure Synapse Analytics Combining Microsoft Graph Data Connect data sets in Azure Synapse Analytics Updated public preview of SharePoint Framework 1.14 – with updates for Viva Connections, Microsoft T\u0026hellip; Outlook JavaScript API deprecation for AttachmentDetails.contentType property Microsoft Teams users can now chat with any Teams user outside their organization What’s New in Microsoft Teams | January 2022 Advance performance approaches to deliver high quality experiences in Microsoft Teams Introducing Device Trade-In for Microsoft Teams    Actions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  PnP Sharing is Caring - AMA (Ask Me Anything) - SPFx React Controls – Tuesday, February 22nd, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) \u0026ndash; Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST First Time Contributor Session – TBS soon Community Docs Session – TBS soon  Power Platform Samples – First Time Contributor – Monday, February 14th, 1pm PST PnP – SPFx Developer Workstation Setup – Tuesday, February 8th, 2pm PST PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – TBS soon First Time Presenter – Wednesday, February 9th, 9am PST More than Code with VSCode – Tuesday, February 15th, 2pm PST Maturity Model Practitioners – Tuesday, February 15th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Thank you everybody for joining the call today. Nice seeing you. Thanks for your invaluable feedback on our platform. Demos   Access a user\u0026rsquo;s calendar events in an ASP.NET Core app with Microsoft Graph - APIs and SDKs. Like how you would tie into an individual’s e-mail, Teams conversations, OneDrive files, etc., follow this 6-step process from app creation to result rendering for calendar events. Specifically highlighted is the code for middleware (for authentication), the GraphCalendarClient, injection and for rendering a person’s calendar events for a specified date range and time zone. Step-by-step details in Learn module.   Latest on Microsoft Bookings API on Microsoft Graph – Bookings is an appointment scheduling app that integrates with Outlook calendars and with Teams online meetings. Bookings allows owner to publish their calendar to the outside world for purposes of allowing others to book appointments with owner. Available for 3 years already, Booking APIs are now available in Graph on v1.0 endpoint. Hear about use cases, object entities, key operations, permissions, newest APIs and roadmap.   Using the MGT Agenda and Tasks Components in your solutions – 3 components reviewed – Agenda, Planner Tasks, and To-Do tasks. Agenda – listing of future events in your calendar – specify event order, by day of week, number events, number days, by reference time zone and customized rendering. Planner Tasks – see tasks assigned to you from multiple projects. Essentially manage Planner tasks (add, delete, modify) without having to launch Planner App. Finally in To-do – access my Reading List, add/delete readings.   Thank you for your work. Samples are often showcased in Demos.\nTopics  Latest updates and news on the Microsoft 365 platform – Sébastien Levert (Microsoft) | @sebastienlevert – 5:42 D1: Access a user\u0026rsquo;s calendar events in an ASP.NET Core app with Microsoft Graph – Dan Wahlin (Microsoft) | @DanWahlin – 9:16 D2: Latest on Microsoft Bookings API on Microsoft Graph – Altamish Ahmad (Microsoft) – 26:37 D3: Using the MGT Agenda and Tasks Components in your solutions – Sébastien Levert (Microsoft) | @sebastienlevert – 43:39  Resources Additional resources around the covered topics and links from the slides.\n D1: Learn - Access a user\u0026rsquo;s calendar events in an ASP.NET Core app with Microsoft Graph | aka.ms/learn-msgraph-calendar D1: Tool – Graph Explorer | aka.ms/ge D1: Related Demo - Show a user\u0026rsquo;s emails in an ASP.NET Core app with Microsoft Graph – Dan Wahlin (Microsoft) | @DanWahlin D2: Documentation - Microsoft Bookings API overview (preview)  D2: Documentation - Use the Microsoft Bookings API in Microsoft Graph  D2: Microsoft.com - Microsoft Bookings  D2: Documentation - Use the Microsoft Bookings API in Microsoft Graph (v1)  D2: Documentation - Use the Microsoft Bookings API in Microsoft Graph (beta)  D2: Article - New features in Microsoft Graph Bookings APIs provide enhanced booking infrastructure  D2: Article - Microsoft Graph Bookings APIs now available on the v1 endpoint  D2: Documentation - Microsoft Bookings  D3: Documentation – Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/mgt/docs D3: Documentation – Agenda component in the Microsoft Graph Toolkit  D3: Documentation – Tasks component in the Microsoft Graph Toolkit  D3: Documentation - To Do component in the Microsoft Graph Toolkit  D3: Tool – mgt-agenda simple  D3**:** Repo - MGT Sandbox  D3**:** Learn - Develop apps with the Microsoft Graph Toolkit | aka.ms/mgt/learn Previous demos delivered by Sébastien Levert on Microsoft Graph Toolkit (MGT)  Discover the Microsoft Graph Toolkit – 7 December 2021 Microsoft Graph Toolkit – Using Login Component in your solutions – 14 December 2021 Microsoft Graph Toolkit – Using the Person Component in your solutions – 4 January 2022 Microsoft Graph Toolkit – Using the People Component in your solutions – 11 January 2022 Microsoft Graph Toolkit – Using the People Picker Component in your solutions – 18 January 2022 Microsoft Graph Toolkit – Using the Teams Channel Picker Component in your solutions – 25 January 2022   Microsoft 365 PnP Weekly – Episode 151 (January 31st) with UK-based SharePoint developer, architect and MVP, Paul Bullock | @pkbullock | video | podcast  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on Github PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  M365 General Dev call – February 3rd at 7:00 am PST | https://aka.ms/m365-dev-sig Microsoft 365 platform call – February 8th at 8:00 am PST | https://aka.ms/m365-dev-call Office add-in monthly call – February 9th at 8:00 am PST | https://aka.ms/officeaddinscall Viva Connections \u0026amp; SharePoint Framework call – February 10th at 7:00 am PST | https://aka.ms/spdev-spfx-call Adaptive Cards monthly call – February 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall Power Apps monthly call – February 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall Microsoft Identity Platform call – February 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members. More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\nRelated documents   M365 platform - Weekly 20220201.pptx (283 KB)  _“Sharing is caring”_ * * * _Microsoft 365 PnP team, Microsoft - 2nd of February 2022_ ","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-1st-of-february-2022/images/recording-1st-feb_hua42db72645749b0b731ccccbb5868d60_555553_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-1st-of-february-2022/","tags":["Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 Platform Call – 1st of February, 2022"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by UK-based SharePoint developer, architect and MVP, Paul Bullock | @pkbullock\nTopics discussed in this session:\n Paul’s work in Office and SharePoint tool development and architecture, in PnP project coordination and beyond. How to get to be an MVP and why it matters? Giving everyone a voice - the practice of bringing people into conversations. Coordinating an open-source Script gallery – making it easy to contribute, attracting contributions, providing loose guidance, along with personal learnings and project evolution. Advantages of keeping samples in a shared PnP Repo as opposed to in Personal Repos.  We also covered 18 articles published by Microsoft and the PnP Community over the last week. This week  Waldek – working on v5 of CLI for Microsoft 365 – shipping around end of February. Soliciting feedback on the idea of Quick Reference Cards for Microsoft 365 Apps, i.e., I need to build a bot, what resources do I need? See article from Waldek below.  Vesa – re-enabling look book provisioning after a maintenance break and prepare SPFx v1.14 documentation for GA  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n  This session was recorded on Monday, January 31, 2022. Enjoy the show.  Video at Microsoft 365 Community YouTube channel. Podcast format at https://pnpweekly.podbean.com.  These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!” Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Updated public preview of SharePoint Framework 1.14 – with updates for Viva Connections, Microsoft T\u0026hellip; - Vesa Juvonen (Microsoft) | @vesajuvonen Outlook JavaScript API deprecation for AttachmentDetails.contentType property - Microsoft  Community articles  M365 Dev Podcast - Microsoft Graph Data Connect with Nik Charlebois - Jeremy Thake (Microsoft) | @jthake \u0026amp; Paul Schaeflein (AddIn365) | @paulschaeflein \u0026amp; Nik Charlebois (Microsoft) | @NikCharlebois CLI for Microsoft 365 v4.4 - Arjun Menon (Tata Consulting Services) | @arjunumenon Create your first Adaptive Card Extensions(ACEs) with SPFx - Siddharth Vaghasia | @siddh_me Welcome new employee in Teams using Adaptive card - Shrusti Shah (Rapid Circle) How to use Graph Toolkit in Teams App inside Teams Tab - Siddharth Vaghasia | @siddh_me Using Power Automate flow API in your SPFx solution - Adam Wójcik (Hitachi Energy) | @adam25858782 Get full meeting details in a Teams meetings app, without Bot SDK - Yannick Reekmans (Qubix) | @YannickReekmans Adding the New Board view to a Microsoft/SharePoint List using PnP PowerShell/Power Automate (SPO Re\u0026hellip; - Leon Armston (Intelogy) | @LeonArmston How to set up SPFx development environments for multiple SharePoint Server deployments - Andrew Connell (Voitanos) | @andrewconnell Delete O365 group with associated site collection via Graph SDK - Alexey Sadomov (Valo Solutions) | @sadomovalex Compare two arrays, tables or lists a lot faster in Power Automate - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Get All the Public or Private Team Sites in SharePoint with PnP.PowerShell - Marc D Anderson (Sympraxis Consulting) | @sympmarc #59 Quick reference cards for Microsoft 365 apps - Waldek Mastykarz (Microsoft) | @waldekm Episode #191 - Managing AAD Apps Registration via Microsoft Graph - Paolo Pialorsi (PiasSys) | @PaoloPia Power Apps UI Dark Mode Light Mode Toggle - April Dunnam (Microsoft) | @aprildunnam Power Apps Attachments for SharePoint - Files, Images, and Signatures - Shane Young (PowerApps911) | @shanescows  Additional resources  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026quot; ","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-151-paul-bullock/images/Thumb-Ep151-January31Beauty_huacc041d1a469c67e1d9b7e4fb20b5cf3_498123_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-151-paul-bullock/","tags":["Extensions","Microsoft 365","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 PnP Weekly - Episode 151 - Paul Bullock"},{"categories":["Microsoft 365 developer podcast"],"contents":"Christophe Humbert joins Jeremy and Paul to talk about his Property Pane Portal project and the help he has received from the M365 Dev Community.\n  Listen to the show here: (m365devpodcast.com)\nLinks from the show  inPerson helps you manage your flexible office hours and look up your team members\u0026rsquo; current location Overview of Progressive Web Apps (PWAs)  Microsoft News  Advance performance approaches to deliver high quality experiences in Microsoft Teams - Microsoft Te\u0026hellip; Advancing service resilience in Azure Active Directory with its backup authentication service The learnings, pitfalls, and compromises of Microsoft’s expedition to the cloud  Community Links  Building fast, offline-capable Microsoft 365 web applications  ","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-property-pane-portal-project-with-christophe/","tags":[],"title":"M365 Dev Podcast - Property Pane Portal project with Christophe Humbert"},{"categories":["Adaptive Cards community call"],"contents":"Call summary The following topics are covered in this month’s community call: Adaptive Cards and the Power Platform to solve captchas (Use RPA, Adaptive Cards actionable messaging and Power Automate to resolve captcha challenges remotely on desktop or mobile) - Tomasz Poszytek (MVP), Website Updates (Blog posts for previous community calls, new samples for all 1.5 features!) - J.P. Roca (Microsoft) and Q\u0026amp;A – members of the Developer and PM teams fielded questions on a host of topics for the last 15 minutes on this call. This call was hosted by J.P. Roca (Microsoft) | @jpthepm. Recorded on January 13, 2022.\nAgenda  Adaptive Cards and the Power Platform to solve captchas - Tomasz Poszytek (MVP) | @TomaszPoszytek – 00:25 Website Updates - J.P. Roca (Microsoft) | @jpthepm – 25:15 Q\u0026amp;A - with members of Microsoft Developer and PM teams – 27:11  Demo Adaptive Cards and the Power Platform to solve captchas - Issue: Bot task execution halted by a captcha challenge. Solution: Outlook Actionable message capability, an Adaptive Card, 2 Power Automate flows and Robotic Process Automation (RPA) to remove hurdle. Configure actionable e-mail provider. RPA captures Captcha image and calls a flow that sends Adaptive card prompting user to action. User checks boxes on Adaptive Card that verifies time-out is not exceeded (requiring new capture) and RPA resolves challenge. New Samples for v1.5 features:\n Application login Flight update table Input form with rtl Order confirmation Order delivery Restaurant order  Referenced in this call   Demo - Solving reCaptcha v2 challenge with Power Automate Desktop   Demo - Actionable Messages using Adaptive Cards - ultimate guide   YouTube Channel - Tomasz Poszytek   Blog post – Get started with Adaptive Cards   November Adaptive Cards Community call demo - Viva Connections + Adaptive Cards 🤝 - Emily Lynam (Microsoft), Max Kulakov (Microsoft), and Siddharth Gulati (Microsoft) | @sidvaani – 00:45\n  Resources in General  Let us know the features you need https://aka.ms/ACRoadmap Schema Explorer - https://adaptivecards.io/explorer/Action.Execute.html Designer - https://adaptivecards.io/designer/  Get started with Templating - https://aka.ms/ACTemplating Browse the Adaptive Cards Code - https://aka.ms/ACRepo Find tools, sample cards and more - https://www.madewithcards.io Contribution Guidelines – https://aka.ms/ACRepo   Stay connected  Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365PnP/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/adaptivecardscommunitycall Next call – February 10th at 09:00am PST  Related documents   Adaptive Cards January 2022 Deck.pptx (260 KB)  ","image":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-january-2022/images/adaptive-cards-January%20Thumb_hu03ccead63e07d362c6828f3d2bdbfd7f_295973_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-january-2022/","tags":["Adaptive Cards","Microsoft 365","Power Automate"],"title":"Adaptive Cards community call – January 2022"},{"categories":[],"contents":"Manage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use.\nWhile building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it’s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects.\nNew version of CLI for Microsoft 365 – v4.4 Following our monthly release cadence, we’ve released a new version of the CLI for Microsoft 365 with some new capabilities. Here are a few of the most noteworthy additions.\nUpgrade SharePoint Framework projects to SPFx v1.14.0 Public Preview With the announcement of the availability of public preview of the SharePoint Framework (SPFx) 1.14 – with updates for Viva Connections, Microsoft Teams and SharePoint Online experiences, we have added support for upgrading your SPFx projects to the latest preview version, v1.14.0-beta.5.\nTo upgrade your SPFx project to this version, change the working directory to your project and execute:\nm365 spfx project upgrade --preview --output md \u0026gt; report.md We\u0026rsquo;d also recommend that you try a richer upgrade report based on the Visual Studio Code CodeTour extension:\nm365 spfx project upgrade --preview --output tour For more information about upgrading SharePoint Framework projects, see the CLI documentation.\nList all messages from Microsoft Teams Chat Conversation Imagine a case where you want to list the messages in a chat conversation. A conversation could be a one-on-one conversation or a meeting conversation or even a group chat. You can use this command if you want to export the conversations easily.\nTo list the Microsoft Teams chat conversation, execute:\nm365 teams chat message list --chatId 19:2da4c29f6d7041eca70b638b43d45437@thread.v2 For more information about listing a particular chat conversation, see the documentation.\nList members from a Microsoft Teams Chat Conversation If you want to list the members of a chat conversation which you are part of, we have released a new command just for you. A conversation could be a one-on-one conversation or a meeting conversation or even a group chat. You can use this command if you want to export the conversations easily.\nLists all members from a Microsoft Teams chat conversation, execute:\nm365 teams chat member list --chatId 19:8b081ef6-4792-4def-b2c9-c363a1bf41d5_5031bb31-22c0-4f6f-9f73-91d34ab2b32d@unq.gbl.spaces For more information about listing the members of a chat conversation, see the documentation.\nList all Microsoft Teams Chat Conversation for the current user List of chat conversations which you are part of can become overwhelming when time goes on. With this new command, you can list all the chat conversation which the current logged in user is part. This will be beneficial if you want to report or see the list of conversation of the currently logged in user. You can even filter only One-on-One conversations if needed.\nLists all Microsoft Teams chat conversations for the current user, execute:\nm365 teams chat list For more information about getting the list of conversation of the currently logged in user, see the documentation.\nList all Azure AD groups from a tenant IT pros may constantly need the inventory of users, groups etc. which are there in a tenant. In this version we have released a new command which you can use to get the complete list of AD groups which are part of the tenant.\nTo retrieve the list of AD groups, execute :\nm365 aad group list For more information about getting the list of AD groups in your tenant, see the documentation.\nGet the list of “pwned” users of a particular Username Security breach of users of the organization is a nightmare to any Admins. Imagine if user accounts which are part of your organization has been compromised via a data leak affected to any other organizations where users of your organization has used his / her username. This may lead the user data to be available in the web. We released a new command where you can run against the username of your organization to identify whether users have been pwned.\nIf you want to check whether a username is in a data breach, execute :\nm365 aad user hibp --userName account-exists@hibp-integration-tests.com --apiKey _YOUR-API-KEY_ For more information about getting the details about pwned users of your organization, see the documentation\nSet a planner task Usage of Microsoft Planner becomes inevitable for any organization where tasks are being assigned and managed. With this version of CLI for Microsoft 365., we have released a new command where you can update any planner tasks with the needed properties / attributes. If you want to update any planner task, execute :\nm365 planner task set --id \u0026#34;Z-RLQGfppU6H3663DBzfs5gAMD3o\u0026#34; --title \u0026#34;My Planner Task\u0026#34; For more information about setting the planner tasks, see the documentation\nList the items of SharePoint recycle bin IT pros often gets requests from the users to know about the items which had been deleted by the users. In this version, we have released a new command which will give you the list of items from SharePoint Recycle bin. This command also gives you the flexibility to filter only files from the list.\nFor getting list if all items from Recycle bin, execute :\nm365 spo site recyclebinitem list --siteUrl https://contoso.sharepoint.com/site For more information about getting the items from recyclebin, see the documentation\nExtended CLI configuration with CSV Output In our last release, we had extended our output to support results in CSV format. Now we have extended our commands so that users can set the configuration if you want to have the output always in CSV format.\nFor setting the output to CSV in the configuration, execute :\nm365 cli config set --key output --value csv For more information about setting configuration for CLI, see the documentation\nMore options to add users to a SharePoint group In this new release, we have added the ability to add users to SharePoint group with SharePoint group name as well using email of the user. With this update, users can easily add users to SharePoint group without the need for them to know the if of the SharePoint group.\nFor adding users to SharePoint group using Group name, execute :\nm365 spo group user add --webUrl https://contoso.sharepoint.com/sites/SiteA --groupName \u0026#34;Contoso Site Owners\u0026#34; --email \u0026#34;Alex.Wilber@contoso.com, Adele.Vance@contoso.com\u0026#34; For more information about adding users to SharePoint group, see the documentation\nEnhanced Documentation for managing Microsoft 365 Apps We had enhanced our command for adding Azure AD apps by adding the --save option which would be beneficial for creating Microsoft 365 apps easily from your project. We now have extended out documentation on how to use the command while you develop Microsoft 365 Apps.\nFor knowing more details on managing Microsoft 365 Apps, see the documentation\nNew script samples CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts.\nList all large files in a SharePoint site This script will help you find files in a specific SharePoint Online site that are over a certain size. It iterates through all libraries and identifies all files larger than the set threshold.\nIf you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\nContributors This release wouldn’t be possible without the help of (in alphabetical order):\n Adam Wójcik Albert-Jan Schot Christian Bewernitz Jasey Waegebaert Martin Lingstuyl Nanddeep Nachan Robert Dyjas Veronique Lengelle Vipul Kelkar Waldek Mastykarz  Work in Progress Here are some things that we’re currently working on.\nCLI for Microsoft 365 v5 For the last few months we\u0026rsquo;ve been working on a new major version of CLI for Microsoft 365 – v5. While typically we release a major version once a year, we sped up releasing v5 to migrate commands using the Azure AD Graph to use Microsoft Graph instead. Azure AD Graph will be deprecated later this year and we wanted to be ahead of the deprecation to ensure that CLI for Microsoft 365 keeps working uninterrupted.\nWe are expecting to release CLI for Microsoft 365 v5 by the end of February 2022. Once the release of v5 is complete, we\u0026rsquo;ll publish an upgrade guidance to help you determine the impact of the upgrade on your work.\nCLI for Microsoft 365 Themes Following our latest major release, we have started thinking about themes for the coming year but we would love to know what you think we should concentrate on next. We are of course looking at topics as Microsoft Viva and the Power Platform but if you have any suggestions, please let us know by adding your suggestion to our open discussion on GitHub.\nTenant Status Commands to handle the deprecated Endpoints Some of the endpoints which our command is using for getting the Tenant status is getting deprecated. We are updating our commands to ensure that deprecation does not affect our commands.\nExtending AD user commands for getting the deleted users We are updating some Azure AD commands so that you can even get the users which are deleted from Azure AD\nMicrosoft 365 app commands When building apps for Microsoft 365, next to your code, you also need to manage how your app is exposed to Microsoft 365. You need to register your application in Azure Active Directory, and depending what type of app you build, you might need to deploy it to an app catalog as well. All these properties are managed in different locations and we\u0026rsquo;re thinking of ways that we could simplify it for you.\nWhat else could we simplify? Let us know what you think by helping out with one of our open issues or chime in on our open discussion!\nTry it today Get the latest release of the CLI for Microsoft 365 from npm by executing:\nnpm i -g @pnp/cli-microsoft365 Alternatively, you can get the latest release from Docker by executing:\ndocker run --rm -it m365pnp/cli-microsoft365:latest If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365.\nIf you see any room for improvement, please, don’t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v4-4/images/banner-cli-m365_hu3d234a3fe7f422ecf4e2d178aefe7e9e_152873_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v4-4/","tags":["Azure AD","CLI for Microsoft 365","SharePoint Framework (SPFx)"],"title":"CLI for Microsoft 365 v4.4"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"Viva Connections \u0026amp; SharePoint Framework bi-weekly community call recording from January 27th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\n  Call summary  Tune in each Tuesday for the Microsoft 365 platform community call. Next call on the 1st of February @ 8 AM PT  Latest news from Microsoft engineering on Microsoft 365 topics Altamish Ahmad – Latest on Microsoft Bookings API on Microsoft Graph Dan Wahlin – Access a user\u0026rsquo;s calendar events in an ASP.NET Core app with Microsoft Graph Sébastien Levert – Using the MGT Agenda and Tasks Components in your solutions   Register for training events this quarter hosted by Sharing is Caring. Join AMA (PnP React Controls) – Feb 22nd and AMA (Graph \u0026amp; MGT) – March 1st Register for the PnP Recognition Program. Updated SharePoint Framework 1.14 public developer preview! and SharePoint Framework Road Ahead updates - Join the updated Microsoft 365 ISV Benefit program – for ISV and SI’s to get help with Microsoft Teams and Microsoft Viva development PnP project activities in the last two weeks:  SharePoint Framework v 1.14 Updated public developer preview CLI for Microsoft 365 v4.4 Preview   8 new/updated web parts and 2 ACEs were delivered in the last two weeks! Your contributions are greatly appreciated by many.  Latest project updates include:** (Bold indicates update from previous report 2 weeks ago)    PnP Project Current version Release/Status     SharePoint Framework (SPFx) v1.13 GA, updated v1.14 (beta 5) public developer preview RC end of January, GA targeted for mid-February, v1.15 in Spring   PnPjs Client-Side Libraries v2.11.0 GA, v3.0.0 Preview. v 2.12 Delayed nightly builds of v3   CLI for Microsoft 365 v4.3.0 GA, v4.4 Preview    Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.5.0 3.5.0 supports SPFx v1.13    Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.3.0 3.3.0 supports SPFx v1.13    PnP SPFx Generator v1.16.0 v1.17.0 on the way   PnP Modern Search v4.5.3, v3.23.0     The host of this call is Julie Turner (Sympraxis Consulting) | @jfj1997. Q\u0026amp;A takes place as always in chat throughout the call.\n Thank you for joining the call today and/or for viewing the recording. Awesome to see many of you on the screen.\nActions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  PnP Sharing is Caring - AMA (Ask Me Anything) - SPFx React Controls – Tuesday, February 22nd, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) \u0026ndash; Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST First Time Contributor Session – TBS soon Community Docs Session – TBS soon  Power Platform Samples – First Time Contributor – TBS soon PnP – SPFx Developer Workstation Setup – Tuesday, February 8th, 2pm PST PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – TBS soon First Time Presenter – Wednesday, February 9th, 9am PST More than Code with VSCode – Tuesday, February 15th, 2pm PST Maturity Model Practitioners – Tuesday, February 15th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/spdev-spfx-call  Demos   CRUD Operations in Viva Connections – Adaptive Card Extensions with SharePoint Framework – Creating, Reading, Updating, and Deleting data through an ACE that handles (reformats as necessary) data formatting (strings, arrays, time) from all field types in a SharePoint list. On CardView, there are buttons for “view items” in list and “add item” to list. From a QuickView card, call separate Display, Edit, New cards. Appreciate code for navigating between cards and for data reformatting.   Viva Connections – Data Binding in SPFx Adaptive Card Extensions – the fundamentals – data is stored in properties and state, CardView renders a limited set of information, and QuickView renders as much data as you like (many formatting options including conditional and JSON parsing). Step through various samples showing the many functions, keywords, properties in the Adaptive Card syntax used for dynamically formatting and rendering data. Last sample shows rendering user data from Graph into a QuickView card.   SPFx Design Guidance – Property pane input validation and error messages – custom properties (part 4). Help users give you the right information for best and most secure user experience. Best error messages are non-dramatic and helpful. Validate inputs using onGetErrorMessage attribute. Avoid throttling issue by not validating user’s every key stroke, give user time to type using deferredValidationTime attribute, then validate. Validation often requires checking on the existence of list or data before validation can occur.\n  SPFx extension samples https://aka.ms/spfx-extensions\n Next call?  SPFx web part samples https://aka.ms/spfx-webparts\n My Approvals - Takashi Shinohara | @karamem0 Custom property pane controls - Alex Terentiev | @alexaterentiev  PnP SPFx ACEs https://aka.ms/spfx-aces\n ACE Forms – CRUD Operations - Derek Cash-Peterson | @Spdcp Football Stats* - Soumit Mukherjee | @msoumit, Soumyadeep Mukherjee and Sourav Paul People Details* - Soumit Mukherjee | @msoumit, Soumyadeep Mukherjee and Sourav Paul  * To be posted soon.\nThank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen – 5:01 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 – 8:08 CLI for Microsoft 365 - Julie Turner (Sympraxis Consulting) | @jfj1997 – 8:47 PnP SPFx Controls - Julie Turner (Sympraxis Consulting) | @jfj1997 – 9:19 PnP Modern Search - Julie Turner (Sympraxis Consulting) | @jfj1997 – 10:00  PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh – 10:42 PnP SPFx ACEs Samples - David Warner II (Catapult Systems) | @DavidWarnerII – 11:42  Demos   Demo 1: CRUD Operations in Viva Connections – Adaptive Card Extensions with SharePoint Framework – Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp – 13:46   Demo 2: Viva Connections – Data Binding in SPFx Adaptive Card Extensions – Paolo Pialorsi (PiaSys) | @PaoloPia – 21:37\n  Demo 3: SPFx Design Guidance – Property pane input validation and error messages – Hugo Bernier (Microsoft) | @bernierh – 41:39   Resources Additional resources around the covered topics and links from the slides.\n  D1: Sample - basic-card-sharepoint-crud   D1: Samples - ace-cardgallery   D2: Documentation/Tools - A whole new way to deliver UI   D2: Documentation - Adaptive Cards Template Language   D2: Samples - Conferences-Samples   D3: Documentation - Validate web part property values   D3: Documentation - Make your SharePoint client-side web part configurable   D3: Documentation - Integrate web part properties with SharePoint   D3: Previous demos from Hugo Bernier (Microsoft) | @bernierh, on SPFx Design Patterns series\n SharePoint Framework Design Patterns – Custom Web Part Properties (Part 3) – 13 January SPFx Design Patterns – Custom Properties (Part 2) – 30 December SPFx Design Patterns – Custom Properties (Part 1) – 4 November SPFx Design Patterns – Property Panes - 21 October    PnP Weekly – Episode 150 (January 24th) with London, UK-based SharePoint developer architect and MVP, Anoop Tatti (Content+Cloud) | @anooptells | video | podcast\nPnP Weekly – Episode 149 (January 17th) with Brisbane, Queensland, Australia-based Cloud Developer Advocate for Microsoft Teams and Graph, Rabia Williams (Microsoft) | @williamsrabia | video | podcast\n  General Resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install –g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4 | https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other mentioned topics  SharePoint dev documentation SharePoint dev issue list  Upcoming calls | Recurrent invites  Microsoft 365 platform call – February 1st at 8:00 am PST | https://aka.ms/m365-dev-call M365 General Dev call – February 3rd at 7:00 am PST | https://aka.ms/m365-dev-sig Office add-in monthly call – February 9th at 8:00 am PST | https://aka.ms/officeaddinscall Viva Connections \u0026amp; SharePoint Framework call – February 10th at 7:00 am PST | https://aka.ms/spdev-spfx-call Adaptive Cards monthly call – February 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall Power Apps monthly call – February 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall Microsoft Identity Platform call – February 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar  Viva Connections \u0026amp; SharePoint Framework bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Connections, Microsoft Teams, SharePoint Online, and also on-premises. Calls are used for the following objectives.\n SharePoint Framework engineering update from Microsoft Talk about PnP JavaScript Core libraries Office 365 CLI Updates SPFx reusable controls PnP SPFx Yeoman generator Share code samples and best practices Possible engineering asks for the field - input, feedback, and suggestions Cover any open questions on the client-side development Demonstrate SharePoint Framework in practice in Microsoft Viva, Microsoft Teams or SharePoint context You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!  Related documents   PnP SIG (JavaScript) - Weekly 20220127.pptx (292 KB)  SharePointCRUDCommunityCall-Demo.pptx (292 KB)  SPFx Design Intro to Custom Properties part 4.pptx (292 KB)  _“Sharing is caring”_ * * * _Microsoft 365 PnP team, Microsoft - 28th of January 2022_ ","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-27th-of/images/recording-27th-jan_hu4b5c808414e4a0abe136e868a8f75545_260419_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-27th-of/","tags":["Adaptive Cards","Office Add-ins","Extensions","Microsoft 365","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)","Viva Connections"],"title":"Viva Connections \u0026 SharePoint Framework Community Call – 27th of January, 2022"},{"categories":["Community post"],"contents":"Introduction In this article, we will learn how to extend your Viva Connections with our known SharePoint Framework(SPFx). We can extend our Viva Connections dashboard with out-of-the-box web parts, custom SPFx web parts, extensions, and now with Adaptive Card Extension, etc.\nWhat is Adaptive Card Extension? Adaptive card Extensions are a new component type that can be created using SPFx. it can be also called ACEs for short form. ACEs use Microsoft Adaptive Card Framework to generate UI by declarative JSON schema. In simple words, you use JSON schema to specify what kind of controls/labels you wanted to show and then pass your dynamic data to render this Adaptive card to the user. One of the greater benefits of using an Adaptive card is that it takes care of rendering into multiple platforms automatically without us worrying about screen size devices etc. We can just focus on the actual component logic, the adaptive card framework will take care to fit the card into various platforms, screen sizes, and devices.\nLet us start and create our first ACE component with SPFx\nStep – Install latest SPFx Version As of writing this article, the latest beta SPFx version is v1.14, use the below command to install the latest beta version, you can also install stable version SPFx 1.13.1\nnpm install /generator-sharepoint@next --global    Step – Create a new SPFx solution Go to the targeted path in your command prompt where you wanted to create a new SPFx solution, run the below command\nyo @microsoft/sharepoint Note – Latest version of SPFx needs at least 3.0.0 version of yeoman-environment, if you have lower than that, you can first install latest version(command below)\n“This generator (@microsoft/sharepoint:app) requires yeoman-environment at least 3.0.0, current version is 2.10.3, try reinstalling latest version of ‘yo’ or use ‘–ignore-version-check’ option”\nnpm install --global yo We will be asked a series of questions, you can choose/enter below for our sample\n   It will take a while to install all dependencies and then you should see below once it is completed\n   Step – Let us test Basic Card Template Testing the ACE component would be similar to how we test our SPFx web part, we will have to run the gulp serve command then open workbench to add the component created on the Page.\nRun below command\ngulp serve -l --nobrowser Open a SharePoint Workbench in the browser\nhttps://yourtenant.sharepoint.com/sites/mysites1/_layouts/15/workbench.aspx\nSelect the Add icon, select the FirstBasicCard,\n   Once it is added, click on preview and you can see the below output.\n   ACEs are rendered as 1. Card view(above is card view) which renders on Dashboard or Page load.\nWe can also have 2. Quick View(below). Select Quick view will open a popup to display the quick view of your component. this is also referred to as ACE interaction. Please note that ACEs Interaction only works in Preview mode.\n   Let us now also see how we can configure ACE properties as we do with the SPFx web part. Select the Edit web part icon in the edit mode of the page.\n   Close the Property window and click on the preview to see updated property values being displayed in ACE.\n   So that’s it, we have see how we can create a simple hello world ACEs component and test it in workbench, Next let us go to code and understand how the all of these is working together\nUnderstanding the Code Open the solution in your favorite code editor.\nThe Base Class Open the file src\\adaptiveCardExtensions\\firstBasicCard\\FirstBasicCardAdaptiveCardExtension.ts\nexport default class FirstBasicCardAdaptiveCardExtension extends BaseAdaptiveCardExtension\u0026lt; IFirstBasicCardAdaptiveCardExtensionProps, IFirstBasicCardAdaptiveCardExtensionState { //.... } This is the main base class that will extend BaseAdaptiveCardExtension, it can also have two generics implemented one for persisted properties to pass parameters to this class and one for maintaining the state of these ACEs. If you are familiar with the SPFx web part this is very much similar to how to use property bags and state for your component.\nrenderCard Method Overriding renderCard method to display our custom Card View. The below method is virtual overridden that returns a unique string identifier to our custom Card View\nprotected renderCard(): string | undefined { return CARD_VIEW_REGISTRY_ID; } If you would have noticed, the identifiers is declared at below 2 lines\nconst CARD_VIEW_REGISTRY_ID: string = \u0026#39;FirstBasicCard_CARD_VIEW\u0026#39;; export const QUICK_VIEW_REGISTRY_ID: string = \u0026#39;FirstBasicCard_QUICK_VIEW\u0026#39;; Note – Card view has default implementation but Quick View does not have a default implementation.\nThe default Card view will render using the following properties from the manifest:\n Icon: iconProperty Title: title Card text: description  onInit Method public onInit(): Promise\u0026lt;void\u0026gt; { this.state = { description: this.properties.description }; this.cardNavigator.register(CARD_VIEW_REGISTRY_ID, () =\u0026gt; new CardView()); this.quickViewNavigator.register(QUICK_VIEW_REGISTRY_ID, () =\u0026gt; new QuickView()); return Promise.resolve(); } This would be initiation which will be called once. here you will see it is initiating state variable and registering the views using respective ViewNavigators. For quick view and Card view, there are different ViewNavigator classes.\nNow let us explore the Card and Quick View created as part of solution\nCardView Class Go to src\\adaptiveCardExtensions\\firstBasicCard\\cardView\\CardView.ts\nin this sample, as we have chosen BasicCardView during template type while generating solution, you will see that class is extended with BaseBasicCardView.\nYou will see here 3 methods\n1.data() public get data(): IBasicCardParameters { return { primaryText: strings.PrimaryText, }; } This method is the main method that will populate the Card based on template type, as in this case, we can only have to only set primaryText which will be displayed as in the below place\n   The current sample is getting this primary text value from the localization en-us.js file. You can extend this to get from anywhere else based on your logic.\nBefore moving to the next section let us understand 3 types of templates\n BaseBasicCardView  This will allow us to set Title, PrimaryText, and Buttons.   BaseImageCardView  This will allow us to set image, Title, PrimaryText, and Buttons   BasePrimaryTextCardView  This will allow us to set Title, PrimaryText, description, and buttons    Each of these Views will render differently and have different constraints on what data can be provided to the template.\nLet us try this by modifying our CardView.ts to change to use PrimaryTextCardView\nIn CardView.ts Change the import to add BasePrimaryTextCardView and IPrimaryTextCardParameters\nimport { BaseBasicCardView, IBasicCardParameters, BasePrimaryTextCardView, IPrimaryTextCardParameters, IExternalLinkCardAction, IQuickViewCardAction, ICardButton } from \u0026#39;@microsoft/sp-adaptive-card-extension-base\u0026#39;; Now modify the below line to change extends from “BaseBasicCardView” to “BasePrimaryTextCardView”\n   As soon as you do this, you will get the below error in data() method,\n   This is because PrimaryTextCardParameters will also require us to send description property which will be rendered below the primary text.\nChange the data method to below\npublic get data(): IPrimaryTextCardParameters { return { primaryText: \u0026#34;My Primary Text\u0026#34;, description: \u0026#34;This is my description\u0026#34; }; } Save the file and go and run gulp serve again to see the changes in the workbench, you should see below output\n   Same way if you extend the view from BaseImageCardView. we will have to set imageUrl and primaryText in data method(sample below)\npublic get data(): IImageCardParameters { return { imageUrl: \u0026quot;https://picsum.photos/id/237/200/300\u0026quot;, primaryText: \u0026quot;My Primary Text\u0026quot; }; }  Below is how it will be displayed    cardButtons This is an optional method but would be used when displaying buttons on the card and what actions to be taken when the button is clicked, if we modify your method to below it will add 2 buttons\npublic get cardButtons(): [ICardButton] | [ICardButton, ICardButton] | undefined { return [ { title: strings.QuickViewButton, action: { type: \u0026#39;QuickView\u0026#39;, parameters: { view: QUICK_VIEW_REGISTRY_ID } } }, { title: \u0026#34;Another button\u0026#34;, action: { type: \u0026#39;ExternalLink\u0026#39;, parameters: { target: \u0026#34;https://www.siddharthvaghasia.com\u0026#34; } } } ]; } Below is how it will be displayed(if you have BaseImageCardView as extended class)\n   onCardSelection() method public get onCardSelection(): IQuickViewCardAction | IExternalLinkCardAction | undefined { return { type: \u0026#39;ExternalLink\u0026#39;, parameters: { target: \u0026#39;https://www.bing.com\u0026#39; } }; }​ The onCardSelection() is also an optional method that determines what will happen when the card is clicked. You can also open Quick view when it is clicked or it can be redirected to an external link. If you want to open quick view you have to pass QUICK_VIEW_REGISTRY_ID as parameters to specify which Quick View it should open.\nQuickView.ts Until now we have seen, Quick view being used in Card View, Let us go into detail about how QuickView looks like how it is rendering, and from where.\nGo to src\\adaptiveCardExtensions\\firstBasicCard\\quickView\\QuickView.ts\nThe first thing we will notice here is there is an interface that will hold data for our Quick View.\nQuickView would extend BaseAdaptiveCardView as a base class, this will give us methods/properties to make the View work. If you modify this class file to below\nimport { ISPFxAdaptiveCard, BaseAdaptiveCardView } from \u0026#39;@microsoft/sp-adaptive-card-extension-base\u0026#39;; import * as strings from \u0026#39;FirstBasicCardAdaptiveCardExtensionStrings\u0026#39;; import { IFirstBasicCardAdaptiveCardExtensionProps, IFirstBasicCardAdaptiveCardExtensionState } from \u0026#39;../FirstBasicCardAdaptiveCardExtension\u0026#39;; export interface IQuickViewData { subTitle: string; title: string; description: string; } export class QuickView extends BaseAdaptiveCardView\u0026lt; IFirstBasicCardAdaptiveCardExtensionProps, IFirstBasicCardAdaptiveCardExtensionState, IQuickViewData \u0026gt; { public get data(): IQuickViewData { return { subTitle: \u0026#34;This is my subtitle, which is static\u0026#34;, title: \u0026#34;My QuickView Title\u0026#34;, description: this.properties.description }; } public get template(): ISPFxAdaptiveCard { return require(\u0026#39;./template/QuickViewTemplate.json\u0026#39;); } } We would see below the output.\n   If you see the class should have below 3 generics implemented.\n TData: The type we wanted to return from the data() getter method. TProperties: Set of properties that we want to send to ACE (property bag). TState: State object which will control the view that needs to be rendered  data() method This is a similar method as our card view which can return the properties on the object and will be automatically mapped to the bound template slot(as specified in our Adaptive card JSON template, we will see this next)\ntemplate() method this method will just return the actual JSON template for our Quick View Adaptive card. In this sample, our JSON file would be located at and has below definition\nIf you noticed below, this adaptive card definition has a placeholder for making the card dynamic like ${title}, ${subTitle}, ${description}\n{ \u0026#34;schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.2\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;${title}\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;${subTitle}\u0026#34;, \u0026#34;wrap\u0026#34;: true } ] } ] }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;${description}\u0026#34;, \u0026#34;wrap\u0026#34;: true } ] } Quick view provides us more control over the display as we can build any kind of Adaptive card possible using Adaptive card designers from https://adaptivecards.io/designer/\nConclusion In this article, we have learned how to create your first SPFx ACE and also understood the code structure and importance of files which will help us extend this Hello World ACEs component to your required business needs. More or less, if you are familiar with SPFx development and React, it would be easy to understand the concept and use state management to make this component dynamic in nature. We can get data from Graph API calls or any external API to display data in card view or quick view to pass it as parameters in the data method. ACE can also post data to any API using action type as Action.Submit on button click etc.\nHope this helps to understand the SPFx Adaptive Card Extension concept, Happy coding..!!!\nReference links https://docs.microsoft.com/sharepoint/dev/spfx/viva/get-started/build-first-sharepoint-adaptive-card-extension\nhttps://nanddeepnachanblogs.com/posts/2021-09-21-build-ace-spfx/\n","image":"https://pnp.github.io/blog/post/create-your-first-adaptive-card-extensions-aces-with-spfx/images/img_61cbfcc5a7e38-1024x369_hud6437be8bb137ae58f131a68e1a95b32_245814_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/create-your-first-adaptive-card-extensions-aces-with-spfx/","tags":["Adaptive Card Extensions","SharePoint Framework (SPFx)"],"title":"Create your first Adaptive Card Extensions(ACEs) with SPFx"},{"categories":[],"contents":"Let’s make this process simple by using power automate automated flow wherein whenever a new employee is added in Organization’s Team -\u0026gt; General Channel -\u0026gt; Warm welcoming adaptive card will be posted in the channel where the new employee will also be mentioned.\nSounds interesting, isn’t it?\nLet’s dig into more details\nIn this article you will see few easy steps as shown in Fig 1.1, in which whenever a new employee is added this flow will be triggered, will get new employee details then post an adaptive card in the Teams General channel @mentioning new employee in the post.\nLet’s look at the high-level Automation flow from Fig 1.1, then will look at trigger and actions in details\n   Fig 1.1 - High level automated flow steps\nLet’s take a closer look at trigger and actions in the flow\nStep 1 - This is the trigger on which this flow will be automated, so from the Teams section, choose When a new Team member is added trigger.\nIn Fig 1.2 - Give your organization Team Name\n   Fig 1.2 - When a new team member is added selected as trigger\nStep 2 - Add an action and select get user profile (v2) from the list of options, this will bring all the details about the new employee which will use in adaptive card\nIn Fig 1.3 - Pass the user Id from the first step using the dynamic content, you can also pass some selected fields of the user like surname, department, etc keep it blank to get all the details in Select fields\n   In Fig 1.3 - Get user profile (v2)\nStep 3 - Now we have the user details, let’s get the new employees @mention token so that we can use it in adaptive card. So, from all the connectors select Get an @mention token for a user.\nIn Fig 1.4 - You just need to pass the user Id from Step 1 using dynamic content\n   Fig 1.4 - This will get the @mention token of the new employee\nStep 4 - This is the final and important step of the flow, From the list of actions select, “Post an adaptive card in chat or channel”.\nIn Fig 1.5 -\n In Post as Select from the list of dropdown options like User, Flow bot or Power Virtual Agent. This field is to know who has posted this adaptive card Post in - Select where you want to post, for new employees it is preferred to post in the Organization Team -\u0026gt; General Channel, so select channel Team - Select the Team’s name Channel - Select the Channel name Adaptive card - Post the JSON of your adaptive card. I have added the sample below. Refer that or create a design as per your choice in adaptive https://adaptivecards.io/designer/ Welcome Message - You can also give a welcome message headline for your adaptive card     Fig 1.5 - Post an adaptive card in chat or channel\nSample Adaptive card JSON:\n{ \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.5\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Image\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;{Give the location URL of your Image file}\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;Welcome @{body(\u0026#39;Get_user_profile_(V2)\u0026#39;)?[\u0026#39;displayName\u0026#39;]}\u0026#34;, \u0026#34;fontType\u0026#34;: \u0026#34;Default\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;Dark\u0026#34;, \u0026#34;isSubtle\u0026#34;: false, \u0026#34;style\u0026#34;: \u0026#34;heading\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Container\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;Medium\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Hi everyone, please join me in welcoming @{body(\u0026#39;Get_an_@mention_token_for_a_user\u0026#39;)?[\u0026#39;atMention\u0026#39;]} , who will be joining as a @{body(\u0026#39;Get_user_profile_(V2)\u0026#39;)?[\u0026#39;jobTitle\u0026#39;]}, and will sit in @{body(\u0026#39;Get_user_profile_(V2)\u0026#39;)?[\u0026#39;officeLocation\u0026#39;]}. Please stop by to say hello.\\n\\n@{body(\u0026#39;Get_user_profile_(V2)\u0026#39;)?[\u0026#39;givenName\u0026#39;]}, please reach out if you need any help to access documents or resources.\\n\\nWelcome @{body(\u0026#39;Get_user_profile_(V2)\u0026#39;)?[\u0026#39;givenName\u0026#39;]}!!\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;spacing\u0026#34;: \u0026#34;Small\u0026#34;, \u0026#34;fontType\u0026#34;: \u0026#34;Default\u0026#34;, \u0026#34;style\u0026#34;: \u0026#34;default\u0026#34;, \u0026#34;isSubtle\u0026#34;: true } ] } ] } ], \u0026#34;style\u0026#34;: \u0026#34;emphasis\u0026#34; } ] } In Fig 1.6 - This is a part of JSON code, here you can see we have used the dynamic content from the Get user profile connector and @mention token is used in the text message. This part of code is already added in the sample JSON use that or select dynamically.\n   Fig 1.6 - Adaptive card message with the user profile details fetched dynamically and @mentioned user in the card.\nNow it’s the time to reveal the flow outcome. When a new employee will be added to the Team, an adaptive card will be posted with all the user details in Teams General Channel as shown in the Figure below\n   I hope this article will help many organizations where they are looking out for a solution of welcoming newly onboarded employee, they can use this automated flow to welcome new employee in Teams by posting an adaptive card.\nStay tuned for my upcoming blogs.\nKeep Reading, Keep Sharing!\n","image":"https://pnp.github.io/blog/post/welcome-new-employee-in-teams-using-adaptive-card/images/ShrushtiShah_0-1642687727071_hu6da3f544aa35e808c0599f3a8798bc11_26725_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/welcome-new-employee-in-teams-using-adaptive-card/","tags":["Microsoft Teams","Adaptive cards"],"title":"Welcome new employee in Teams using Adaptive card"},{"categories":[],"contents":"In this article, we will learn about Graph Toolkit and how to integrate Graph toolkit in Teams App.\nWhat is Graph Toolkit? Microsoft Graph Toolkit is a library that provides us a collection of reusable components that can be easily configured in our applications(mobile, web, SPA, teams app), etc which takes care of underlying authentication and accessing the data from Graph API and display it to the user. Graph Toolkit provides various authentication providers that also can be used based on our business case. These providers are to be initialized once and then all the components available in Graph Toolkit will automatically use this auth and authorization flow and get data from Graph API.\nOnce everything is configured properly, it would just take a couple of lines to use the components Available.\nLet us see step by step how to use Graph Toolkit in Microsoft Teams App(tab)\nNote- if you don’t have Teams Yeoman Generator installed, use the below command to install it\nnpm install generator-teams@preview --global Step 1 – Create Teams App of type Tab Open command prompt, create a new folder of your choice in your drive where you wish to create the solution. Run the below command.\nyo teams We would be asked with series of questions, please refer to the below screenshot for options you have to choose.\nFor this sample, we are going to create a tab without SSO support.\n   Note – As we are choosing SSO support as No, the user will have to log in to Teams Tab separately if you wish to make the Graph API calls…We won’t be able to use the Teams Login token to make Graph API calls but have to make separate calls. It is also possible to have SSO support where users don’t have to log in but we would also need to have a backend(server) making use of ID token from Teams App and getting access token to make Graph API call on behalf of the user flow… I would try to write a separate article on it.\n   It will take some time and finally you should be able to see below.\nStep – Install Microsoft Graph Toolkit Let us install required packages via npm, run the below command.\nnpm install /teams-js /mgt-element /mgt-teams-msal2-provider /mgt-components /mgt Note – To use Toolkit, we have to also install Teams SDK and required providers and components.\nIn this sample we are going to use Teams Provider which uses MSAL provider internally, you can read about Teams provider at the below link\nIdeally, we should use Teams MSAL2Provider for authentication purposes as it is more secure, but I had some difficulties making it run while writing this article so went ahead and used Teams Provider….After raising the issue in the repo, the Toolkit team has provided me instructions on a mistake I was making and it fixed it…but as all the screenshots, etc was referring to TeamsProvider I have kept the same as in this article…but later I tried with MSAL2Provider and it worked fine…so I have given a side note at end of the article to specify changes to make it work with MSAL2Provider.\nSo I have separately installed @microsoft/mgt package, make sure you are also doing so.\n   Open your solution in Visual Studio code using code .\nStep 3 – Creating the auth popup page As mentioned before, the user needs to sign in to make use of Graph Toolkit and indirectly get data from Graph API. So in this step, we will create a page in our app that will open in a popup to follow the auth flow. On this particular page, we have to use import the provider class and call handleAuth method, we can make it as fancy as we want based on our need but ideally, if this method would be called it will be automatically asking the user to sign in when the log in Graph Toolkit component is used.\nCreate a new page in a public folder as src\\public\\auth.html. Copy below code:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;script src=\u0026#34;https://unpkg.com/@microsoft/teams-js/dist/MicrosoftTeams.min.js\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://unpkg.com/@microsoft/mgt/dist/bundle/mgt-loader.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script\u0026gt; mgt.TeamsProvider.handleAuth(); \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Step 4- Create a new app registration in Azure Active Directory Go to portal.azure.com\nChoose Azure Active Directory\nSelect App Registration from left Blade, Select New Registration\n   Provide the name of your App ‘TeamsAppGraphToolkit1 ‘. Select Register at the bottom of the page\n   Once created, select Authentication on the left blade, choose Add platform and select Single-page application\n   Enter ‘Redirect URIs’ as http://localhost for a sample, ideally, once you publish this app, it should be the domain of your team’s app. We will also have to change this to ngrok URL while doing testing.\nNext thing here we have to enable Implicit this App registration supports. As Teams Provider user MSAL(not MSAL2) which only supports Implicit Flow for OAuth, we have enabled both Access tokens and ID tokens.    Save it and note down the client Id of this App from the Overview tab, we would require it later.\nStep – Install Microsoft Graph Toolkit React components. Run the below command to install mgt react components to be used.\nnpm i /mgt-react Step – Modify code to use Graph Toolkit components Go to src\\client\\graphToolkitDemoTab\\GraphToolkitDemoTab.tsx\nImport below libraries\nimport {Providers, TeamsProvider} from \u0026#39;@microsoft/mgt\u0026#39; import { Login } from \u0026#39;@microsoft/mgt-react\u0026#39;; Modify the Tab component and on top, initialize the Teams Provider\nexport const GraphToolkitDemoTab = () =\u0026gt; { TeamsProvider.microsoftTeamsLib = microsoftTeams; Providers.globalProvider = new TeamsProvider({ clientId: \u0026#39;\u0026lt;span style=\u0026#34;color: #ff6600;\u0026#34;\u0026gt;4t2eba12-24c4-4e23-b1d8-c22c4051545b\u0026lt;/span\u0026gt;\u0026#39;, scopes: [\u0026#39;User.Read\u0026#39;,\u0026#39;Mail.ReadBasic\u0026#39;], authPopupUrl:\u0026#34;/auth.html\u0026#34; }); //..... Modify the client ID you noted earlier from Azure AD App Registration.\nNext, let us add the Login component to the render method to display the Sign In button.\nreturn ( \u0026lt;Provider theme={theme}\u0026gt; \u0026lt;Flex fill={true} column styles={{ padding: \u0026#34;.8rem 0 .8rem .5rem\u0026#34; }}\u0026gt; \u0026lt;Flex.Item\u0026gt; \u0026lt;Header content=\u0026#34;This is your tab\u0026#34; /\u0026gt; \u0026lt;/Flex.Item\u0026gt; \u0026lt;Flex.Item\u0026gt; \u0026lt;div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;Text content={entityId} /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;Button onClick={() =\u0026gt; alert(\u0026#34;It worked!\u0026#34;)}\u0026gt;A sample button\u0026lt;/Button\u0026gt; \u0026lt;span style=\u0026#34;color: #ff6600;\u0026#34;\u0026gt; \u0026lt;Login /\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/Flex.Item\u0026gt; \u0026lt;Flex.Item styles={{ padding: \u0026#34;.8rem 0 .8rem .5rem\u0026#34; }}\u0026gt; \u0026lt;Text size=\u0026#34;smaller\u0026#34; content=\u0026#34;(C) Copyright Siddharth Vaghasia\u0026#34; /\u0026gt; \u0026lt;/Flex.Item\u0026gt; \u0026lt;/Flex\u0026gt; \u0026lt;/Provider\u0026gt; ); Step – Test the app Once you have all the above setup, let us first see if everything works fine, and then we will try different Graph Toolkit components.\nGo to command prompt and run the below command, this command comes with yo teams which run ngrok in the background and also create teams app package for us.\ngulp ngrok-serve Once it has run successfully, it should show some like below\n   Next thing, we will have to add the ngrok URL in Azure AD App registration as a redirect URL.\n   Step – Test the App in Teams Go to teams and select Apps on the left panel and then select upload a custom app(this button will only be visible if sideloading is enabled by Teams Administrator)\n   Select Upload a custom app, then Upload for me and my teams,\nSelect the zip package at D:\\SP\\samples\\teamsapps\\teams-graphtoolkit\\package\\teamsgraphtoolkit.zip\nNote -This zip file will be updated everything you run gulp ngrok-serve, so you have to make sure you upload the latest zip package whenever you have a new ngrok url and also update the same in App Registration in Azure portal.\nSelect Add\n   Once installed, we should see below output\n   As you see the Sign In button has come from Login Component which we added. Click on it, it should open below auth popup and ask us to log in\n   Once logged in, we should see below that our integration with Graph Toolkit worked    Now let us see how we can use another component with some minor changes.\nAgenda Component The agenda component will display the currently logged-in user’s meeting. You can read about the Agenda component in the Microsoft documentation First, modify import to include the Agenda component\nimport { Login ,Agenda} from \u0026#39;@microsoft/mgt-react\u0026#39;; Then add Scope to add permission for the user’s constant.\nProviders.globalProvider = new TeamsProvider({ clientId: \u0026#39;4t2eba12-24c4-4e23-b1d8-c22c4051545b\u0026#39;, scopes: [\u0026#39;User.Read\u0026#39;,\u0026#39;Mail.ReadBasic\u0026#39;,\u0026#39;Calendars.Read\u0026#39;], authPopupUrl:\u0026#34;/auth.html\u0026#34; }); Add Agenda component to render method\nreturn ( \u0026lt;Provider theme={theme}\u0026gt; \u0026lt;Flex fill={true} column styles={{ padding: \u0026#34;.8rem 0 .8rem .5rem\u0026#34; }}\u0026gt; \u0026lt;Flex.Item\u0026gt; \u0026lt;Header content=\u0026#34;This is your tab\u0026#34; /\u0026gt; \u0026lt;/Flex.Item\u0026gt; \u0026lt;Flex.Item\u0026gt; \u0026lt;div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;Text content={entityId} /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;Button onClick={() =\u0026gt; alert(\u0026#34;It worked!\u0026#34;)}\u0026gt;A sample button\u0026lt;/Button\u0026gt; \u0026lt;Login /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; My Meetings \u0026lt;div\u0026gt; \u0026lt;Agenda \u0026gt;\u0026lt;/Agenda\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/Flex.Item\u0026gt; \u0026lt;Flex.Item styles={{ padding: \u0026#34;.8rem 0 .8rem .5rem\u0026#34; }}\u0026gt; \u0026lt;Text size=\u0026#34;smaller\u0026#34; content=\u0026#34;(C) Copyright Siddharth Vaghasia\u0026#34; /\u0026gt; \u0026lt;/Flex.Item\u0026gt; \u0026lt;/Flex\u0026gt; \u0026lt;/Provider\u0026gt; You need to rerun the solution again as we have added new scope permission. Run the gulp ngrok-serve command again, add the URL in Azure AD app registration and add the new package to Teams,\nSelect Sign In, you must provide consent again as we have added new Scope. Once you Sign In, we should see the current user’s meeting as below\n   Conclusion In this article, we have seen step by step guide on how to integrate Graph Toolkit in your Teams app and use the available component by just configuration. You can read more about all the components available in the MGT documentation\nAs of today, the below components are available which can be used easily and there are many configurations also available for each component to customize.\n   Side Note If you want to use MSAL2Provider, you have just made the below changes, everything else should work as it is as we are just changing the provider we are using.\nThe initialize provider code would look like below GraphToolkitDemoTab\nTeamsProvider.microsoftTeamsLib = microsoftTeams; Providers.globalProvider = new TeamsMsal2Provider({ clientId: \u0026#39;123213-123-4233-232-c72232312345b\u0026#39;, scopes: [\u0026#39;User.Read\u0026#39;,\u0026#39;Mail.ReadBasic\u0026#39;,\u0026#39;Calendars.Read\u0026#39;], authPopupUrl:\u0026#34;/auth.html\u0026#34; }); Below would be library imports\nimport {Providers, TeamsProvider} from \u0026#39;@microsoft/mgt\u0026#39; In your auth.html, there would be below code\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;script src=\u0026#34;https://unpkg.com/@microsoft/teams-js/dist/MicrosoftTeams.min.js\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://unpkg.com/@microsoft/mgt/dist/bundle/mgt-loader.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script\u0026gt; mgt.TeamsMsal2Provider.handleAuth(); \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hope this helps…Happy Coding..!!!\n","image":"https://pnp.github.io/blog/post/how-to-use-graph-toolkit-in-teams-app-inside-teams-tab/images/img_61d08358e702f_hu033d1b459a5c788ecefb8a9f69332fe5_37982_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-use-graph-toolkit-in-teams-app-inside-teams-tab/","tags":["Microsoft Graph Toolkit","Microsoft Teams"],"title":"How to use Graph Toolkit in Teams App inside Teams Tab"},{"categories":[],"contents":"What\u0026rsquo;s it all about Ever needed a small feature in your webpart to show a list of flows from Power Automate or maybe show a history of one specific flow or maybe disable/enable a flow straight from you SPFx solution?\nWell did you ever wondered how to go about this? Lately I did, and since not that long ego I wanted to reproduce this behavior I figured I will write it down in a small article to have something to get back to and maybe it will be also helpful for someone else.\nHow to start First approach that I was thinking to use was the Microsoft Graph REST API as this should always be the way to go if it is supported and possible of course. So I checked out the API reference (also the beta one) and it turned out there is no Flow/PowerAutomate endpoint in the API 🥲 (at least I didn\u0026rsquo;t find one 😀.\nOk so my next attempt to investigate how may I retrieve the list of flows was by checking out how it is already done in the tools used in Microsoft 365 world like the CLI for M365. The CLI offers many many helpful commands that allow you to manage your tenant (but not only that so I strongly encourage you to have a check on this tool as well). I checked out how the `m365 flow list` command was developed (this is the power of the Open Source and PnP Community, why try to figure out all things from scratch when you may check how it was done by someone else and potentially totally better then your approach). Ok and it turned out that the CLI for M365 uses this endpoint ${this.resource}providers/Microsoft.ProcessSimple${args.options.asAdmin ? '/scopes/admin' : ''}/environments/${encodeURIComponent(args.options.environment)}/flows?api-version=2016-11-01\n to get the flow lists (or adds `/scopes/admin` to the URL if you want to get the flow list as admin). Where the resource is `https://api.flow.microsoft.com`. Now that\u0026rsquo;s nice 😀. Lets try to use this same approach in SPFx webpart.\nLets create a simple HelloWorld webpart using SPFx Yeoman and lets just modify the link button and attach a click method to it.\npublic render(): React.ReactElement\u0026lt;IHelloWorldProps\u0026gt; { return ( \u0026lt;div className={styles.helloWorld}\u0026gt; \u0026lt;div className={styles.container}\u0026gt; \u0026lt;div className={styles.row}\u0026gt; \u0026lt;div className={styles.column}\u0026gt; \u0026lt;span className={styles.title}\u0026gt;Welcome to SharePoint!\u0026lt;/span\u0026gt; \u0026lt;p className={styles.subTitle}\u0026gt;flow test\u0026lt;/p\u0026gt; \u0026lt;p className={styles.description}\u0026gt;{escape(this.props.description)}\u0026lt;/p\u0026gt; {/* here we made a small change */} \u0026lt;button className={styles.button} onClick={() =\u0026gt; this.getFlowProperties()}\u0026gt; \u0026lt;span className={styles.label}\u0026gt;Learn more\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; ); } // here we added the new method  private async getFlowProperties(): Promise\u0026lt;void\u0026gt; {} Now lets start working on our getFlowProperties method. First thing that we will need to run this endpoint request is the `{environment}` which is your environment Id. So of course you may get it for example from the power platform admin center after picking the correct environment the id is in the url. But hardcoding the id would make your solution not reusable so it\u0026rsquo;s always better to try to retrieve the environment id. Ok but how we could do that. Well we may retrieve the id from the AadToken (which will we need any way for authentication). So what we may do is\nconst provider: AadTokenProvider = await this.props.context.aadTokenProviderFactory.getTokenProvider(); const token: any = await provider.getToken(\u0026#34;https://service.flow.microsoft.com/\u0026#34;); const decodedToken: any = jwt_decode(token); const envId: string = decodedToken.tid; So we get the token using the aadTokenProviderFactory from the flow service. The aadTokenProviderFactory is given as part of WebPartContext so we may just pass it in the props of the component from the webpart using this.context. Then we decode the token using JWT (in order to use this we need to add jwt-decode to our package.json and add import jwt\\_decode from \u0026quot;jwt-decode\u0026quot; at the top of our webpart). After the token is decoded we may get the id from the tid (tenant Id) property. Ok since we have the envId lets create our URL to get the flow list.\nconst url: string = `https://api.flow.microsoft.com/providers/Microsoft.ProcessSimple/environments/Default-${envId}/flows?api-version=2016-11-01\u0026amp;$filter=properties/isActive+eq+\u0026#39;true\u0026#39;`; What\u0026rsquo;s worth noticing here is that the API also supports filtering so we may for example filter out only the active flows from the list.\nOk now lets do the http request, wait for the response and console.log it. We will be using standard httpClient that we may also get from the WebPartContext.\nconst response = await this.props.context.httpClient .get(url, HttpClient.configurations.v1, { headers: { authorization: `Bearer ${token}`, accept: \u0026#34;application/json\u0026#34; }, }); const result = await response.json(); console.log(result); One thing worth mentioning is the authorization. Since This is not a standard SharePoint REST API or MS Graph API we need to pass the authorization token which we got from the provider.\nOk so lets run gulp serve and check out what we have will be hopefully working.\n   Well ok so it turned out it doesn\u0026rsquo;t !🤦. That’s cool !😄. But what we see in the error message is an AuthError and that the admin needs to consent to use the application with ID… and so on so on. Ok lets try to extend permissions of this app. When we search for it in the AAD App registrations we will find the \u0026lsquo;SharePoint Online Client Extensibility Web Application Principal\u0026rsquo;. Ok so lets try to add appropriate permissions to make it work. Lets add Flow Service: Flows.Read.All permissions to the app and consent to it.\n   Ok this seems about right lets retry our solution and check it out now.\n   Sweet it turns out it works 😀. That’s nice 🤩. As you may see as a result we got the list of active flows from current environment. That’s a good starting point to develop any functionality using this API in our SPFx solution.\nStarting point If you want to start from something working (git pull \u0026gt; gulp bundle \u0026gt; gulp package-solution \u0026gt; deploy \u0026gt; gulp serve kind of approach 😀 you may check out something I developed some time ego. It is a small SPFx application extension that allows the user to check list of flows and their current status and details that follows the same approach and concept presented in this article. To check it out please visit the PnP community sp-dev-fx-extensions\nConclusion I\u0026rsquo;m not sure if I have any 😀. If you ever had a requirement like that to include power automate flow information in you SPFx solution now you have a good starting point.\n","image":"https://pnp.github.io/blog/post/using-power-automate-flow-api-in-your-spfx-solution/images/flowTitle_hua044bb5d0befa98b75fc7518b02d5501_410752_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/using-power-automate-flow-api-in-your-spfx-solution/","tags":["Power Automate","SharePoint Framework (SPFx)"],"title":"Using Power Automate flow API in your SPFx solution"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from January 25th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 880+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring this month and next. Upcoming AMAs on PnP React Controls and on Graph and MGT. Tune into the weekly  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics – hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Microsoft 365 PnP Weekly - Videos, Podcasts focused on the latest news and topics on Microsoft 365 hosted by Vesa Juvonen and Waldek Mastykarz   Hear about the latest 4 Microsoft 365 Platform related stories and absorb 3 demos delivered by Microsoft presenters on latest capabilities of the Microsoft 365 platform.  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout and live at end of the call. Microsoft 365 Platform News Flash  Learn how to set up decentralized identities on Azure Experience high-fidelity audio in Microsoft Teams ‘Without Microsoft Teams, my business wouldn’t be open right now’ January 2022 – Viva Topics Updates and Year End Recap  Actions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  PnP Sharing is Caring - AMA (Ask Me Anything) - SPFx React Controls – Tuesday, February 22nd, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) \u0026ndash; Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST First Time Contributor Session – To be scheduled Community Docs Session – 2022 Sessions Coming Soon  Power Platform Samples – First Time Contributor – Tuesday, January 25th, 2pm PST PnP – SPFx Developer Workstation Setup – Tuesday, February 8th, 2pm PST PnP SPFx Samples – Solving SPFx version differences using Node Version Manager – Wednesday, January 26th, 7am PST First Time Presenter – Wednesday, February 9th, 9am PST More than Code with VSCode – Tuesday, February 15th, 2pm PST Maturity Model Practitioners – Tuesday, February 15th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) – TBS soon PnP Office Hours – 1:1 session – Register PnP Buddy System – Request a Buddy   Request a Demo spot on the call – https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call – https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Thank you everybody for joining the call today. Great to see a full auditorium. Demos Demos delivered in this session\n  Latest with Microsoft Graph connectors – used to bring external data into Microsoft Search and other Microsoft 365 experiences. Overview including supported hubs, query experience, development, and Administration. 130+ connectors currently. Build a custom connector – create a connection (container for external data on Graph), register the schema (define labels or metadata for data), ingest items (into the connection). Customize for verticals, setup custom filters. See how data renders in Microsoft Search.   When to build Viva Connections Adaptive Card Extensions – and not a web part? Think Lightweight (mobile first), Immediate (single idea, actionable) and Personal (provide direct value to user). Link out to richer experiences – Teams apps, SharePoint page, SaaS solutions. ACE use cases include – solicit feedback, track task status, check paystub, clock in/out, book travel\u0026hellip; ACEs can be location based, allow audience targeting, and deliver an organization’s mobile portal experience.   Microsoft Graph Toolkit – Using the Teams Channel Picker Component in your solutions – this session opens with an overview of Microsoft Graph then dives into the Teams Channel Picker component that can display channels user is a member, find a channel and show members, and send a message to channel users. Not only can you get data from Graph, but post data via Graph and optionally add a custom template experience. See code and rendering side-by-side.\n  Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform – Vesa Juvonen (Microsoft) | @vesajuvonen – 7:01 D1: Latest with Microsoft Graph connectors – Arvind Ravi (Microsoft) – 10:09 D2: When to build Viva Connections Adaptive Card Extensions – Patrick Rodgers (Microsoft) | @mediocrebowler – 26:02 D3: Microsoft Graph Toolkit – Using the Teams Channel Picker Component in your solutions – Sébastien Levert (Microsoft) | @sebastienlevert – 38:13  Resources Additional resources around the covered topics and links from the slides.\n  D1: Repo - Microsoft Graph connector Sample   D1: Documentation - Overview of Microsoft Graph connectors | aka.ms/GraphConnectors\n  D1: Documentation - Microsoft Graph connectors overview | aka.ms/GraphConnectorsAPI\n  D1: Catalog - Microsoft Graph connectors | aka.ms/GraphConnectorsCatalog\n  D1: Feedback - Feedback: Microsoft Graph Connectors | aka.ms/GraphConnectorsFeedback\n  D1: Preview - Preview of Microsoft Graph Connectors and features - sign up here | aka.ms/GraphConnectorPreview\n  D1: Blog - What’s new and what’s next for Microsoft Graph connectors |   D2: PnP JS Library - @pnp/odata/caching   D2: Repo - SharePoint Framework Reference Samples   D3: Documentation - Microsoft Teams Channel Picker component in the Microsoft Graph Toolkit   D3: Repo - MGT Sandbox Seb’s demos   D3: MGT Playground – Teams Channel Picker   D3: Repo – Microsoft Graph Toolkit | aka.ms/mgt\n  D3: Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/MGT/docs\n  D3: Learn - Develop apps with the Microsoft Graph Toolkit | aka.ms/mgt/learn\n  Previous demos delivered by Sébastien Levert on Microsoft Graph Toolkit (MGT)\n Discover the Microsoft Graph Toolkit – 7 December 2021 Microsoft Graph Toolkit – Using Login Component in your solutions – 14 December 2021 Microsoft Graph Toolkit – Using the Person Component in your solutions – 4 January 2022 Microsoft Graph Toolkit – Using the People Component in your solutions – 11 January 2022 Microsoft Graph Toolkit – Using the People Picker Component in your solutions – 18 January 2022    PnP Weekly – Episode 150 (January 24th) with London, UK-based SharePoint developer architect and MVP, Anoop Tatti (Content+Cloud) | @anooptells | video | podcast\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on Github PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Viva Connections \u0026amp; SharePoint Framework call – January 27th at 7:00 am PST | https://aka.ms/spdev-spfx-call Microsoft 365 platform call – February 1st at 8:00 am PST | https://aka.ms/m365-dev-call M365 General Dev call – February 3rd at 7:00 am PST | https://aka.ms/m365-dev-sig Office add-in monthly call – February 9th at 8:00 am PST | https://aka.ms/officeaddinscall Adaptive Cards monthly call – February 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall Power Apps monthly call – February 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall Microsoft Identity Platform call – February 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members. More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\nRelated documents   M365 platform - Weekly 20220125.pptx (281 KB)  _“Sharing is caring”_ * * * _Microsoft 365 PnP team, Microsoft - 26th of January 2022_ ","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-25th-of-january-2022/images/recording-25th-jan_hu041b98b07eac3998425b808b707d9eec_549981_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-25th-of-january-2022/","tags":["Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 Platform Call – 25th of January, 2022"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by London, UK-based SharePoint developer architect and MVP, Anoop Tatti (Content+Cloud) | @anooptells Topics discussed in this session:\n Anoop’s role as developer-architect and how came to be in London. Typical SPFx projects – web parts, application customizers, integration with Microsoft Lists, using PnP Search web parts, and communications with Azure functions.  How teach peers about using SPFx?  Tips on becoming an MVP – Learn more, share more, care more (which does not stop upon becoming an MVP). What changed upon becoming an MVP? Tips for people looking into a career in development. The driver behind building Microsoft Viva Connections ACE extensions and many other samples.  We also covered 14 articles published by Microsoft and the PnP Community over the last week. This week  Waldek – following up after releasing new version of CLI for Microsoft 365 that includes new command for updating Planner tasks and commands for managing M365 apps. Evaluating the idea of M365 App Quick Reference cards - latest and best developer resources on a topic. Comments? Vesa – focusing on releasing SPFx v1.14 beta this week, RC next week, GA to follow. Top 2 features for the v1.14 release - ACE caching, more templates.  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, January 24, 2022. Enjoy the show.  Video at Microsoft 365 Community YouTube channel.    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. “Sharing is caring!” Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  January 2022 – Viva Topics Updates and Year End Recap - Chris McNulty (Microsoft) | @cmcnulty2000 Microsoft Teams YouTube Channel - Microsoft  Community articles  Samples from Microsoft 365 Unified Sample Gallery by Anoop - Anoop Tatti (Content+Cloud) | @anooptells  Make a bot for simple interactions in Teams using a Webhook - Lee Ford (Symity Ltd) | @Lee_ford Quickly set up Viva Connections app in Microsoft Teams using Teams admin center - Shrusti Shah (Rapid Circle) Create folders on SharePoint Document Library from CSV - David Ramalho (Storm Technology Ltd) | @davRamalho New Power Automate Trigger – When a File is Classified By a SharePoint Syntex Model - Leon Armston (Intelogy) | @LeonArmston Create your first Adaptive Card Extensions(ACEs) with SPFx - Siddharth Vaghasia | @siddh_me Power Automate Security - Liam Cleary | @helloitsliam Teams UI Toolkit for Makers: an introduction - Carmen Ysewijn (Qubix) | @CarmenYsewijn Use CLI for Microsoft 365 to get HaveIBeenPwned status - Albert-Jan Schot (BLIS.digital) | @appieschot Handle unmanaged changes made to tables in the default solution in the Power Platform - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Disable editing of your production apps and flows in the Power Platform - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Episode #190 - Identity and Security Governance via Microsoft Graph - Paolo Pialorsi (PiasSys) | @PaoloPia  Additional resources  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you’d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors – please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026quot; ","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-150-anoop-tatti-content-cloud/images/Thumb-Ep150-January24_hu43371b1202f9444b63a102d3cc45b938_471026_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-150-anoop-tatti-content-cloud/","tags":["Office Add-ins","Extensions","Microsoft 365","Microsoft Graph","Microsoft Teams","SharePoint","SharePoint Framework (SPFx)"],"title":"Microsoft 365 PnP Weekly - Episode 150 - Anoop Tatti (Content+Cloud)"},{"categories":["Microsoft Identity platform community call"],"contents":"Call summary This month’s in-depth topic: Secure DevOps with the Microsoft Identity platform. In this session, learn how to put the “Sec” in DevOps by securing your release pipeline with the Microsoft Identity platform running on Azure. Bring your own developer tools, services and platforms, i.e., ARM, Bicep, Terraform or Pulumi, integrated with Microsoft’s developer ecosystem. Eliminate secrets and sensitive information from your code once and for all. Microsoft Identity provides a number of features such as Service Principals, Managed Identities and, the newest kid on the block, federated workload identities to allow you to deploy and access cloud resources without the need for secrets or keys in your code and release pipelines. This session was delivered by Christos Matskas - Sr Program Manager (Microsoft) | @ChristosMatskas. Recorded January 20, 2022. Q\u0026amp;A in chat and at end of call.\nReferenced in this call  Blog - Join us to build solutions using Decentralized Identities  Blog – The 425 Show | aka.ms/425Show/blog Documentation – Azure Command-Line Interface (CLI) – Overview  Documentation - Workload identity federation (preview)  Documentation - ASP.NET documentation  Documentation - About Azure Key Vault secrets  Documentation - Safe storage of app secrets in development in ASP.NET Core  Q\u0026amp;A - Azure ad* | aka.ms/425show/help Sessions - See Decentralized Identity service sessions on The 425 Show | aka.ms/425show Repos – The 425 Show | https://github.com/425show Samples – Azure Identity, Resource Management, and Storage sample  Demo - The Config secret is: I\u0026rsquo;m a config secret   Actions  Join our Hackathon – Microsoft Decentralized Identity – January 27 – 31, 2022 Check out The 425 Show – aka.ms/425show Download and go through the developer guide available at https://aka.ms/ztdev Let us know how we’re doing and suggest topics for future calls, please complete this survey https://aka.ms/IDDevCommunityCallSurvey Join us for the next Microsoft Identity Platform community call on February 17th at 9:00am PT Join our Discord community https://aka.ms/425Show/Discord/Join   Resources in General   Documentation - Microsoft identity platform documentation   Microsoft Security - Integrate modern identity capabilities into your apps   Developer – Microsoft Identity Platform\n  Stay connected  Twitter https://twitter.com/microsoft365dev​ and @azuread YouTube https://aka.ms/M365DevYouTube​ (Developer channel) and https://aka.ms/m365pnp/videos (Community channel) Blogs https://aka.ms/m365pnp/community/blog Recurrent Invite https://aka.ms/IDDevCommunityCalendar Join us for the next Microsoft Identity Platform community call on February 17th at 9:00am PT  [Secure DevOps with the Microsoft Identity platform.pptx]({{ \u0026ldquo;assets/blog/microsoft-identity-platform-community-call-january-2022/Secure DevOps with the Microsoft Identity platform.pptx\u0026rdquo; | absURL }})\n{{ \u0026ldquo;mystyle.css\u0026rdquo; | absURL }} → \u0026ldquo;https://example.com/hugo/mystyle.css\u0026quot; }} {{ \u0026ldquo;mystyle.css\u0026rdquo; | relURL }} → \u0026ldquo;/hugo/mystyle.css\u0026rdquo;}} {{ \u0026ldquo;http://gohugo.io/\u0026quot; | relURL }} → \u0026ldquo;http://gohugo.io/\u0026quot;}} {{ \u0026ldquo;http://gohugo.io/\u0026quot; | absURL }} → \u0026ldquo;http://gohugo.io/\u0026quot;3\n","image":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-january-2022/images/identity-call-Thumbnail-January-2022_hu3388a3c143524da85ba74d96c043ad08_132871_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-january-2022/","tags":["Microsoft 365","Azure","Microsoft Identity Platform"],"title":"Microsoft Identity Platform community call – January 2022"},{"categories":["Microsoft 365 developer podcast"],"contents":"Nik Charlebois returns to provide an update on Microsoft Graph Data Connect.\n Listen to the show here: Microsoft Graph Data Connect with Nik Charlebois(m365devpodcast.com)\nLinks from the show  Overview of Microsoft Graph Data Connect https://aka.ms/M365Seeder  Microsoft News  New Single Sign-on service for Office Add-ins rolling out in Office on the web Microsoft Graph Mailbag - Using LargeFileUploadTask with Microsoft Graph SDKs Azure AD to Microsoft Graph migration changes in Azure PowerShell New features in Microsoft Graph Bookings APIs provide enhanced booking infrastructure  Community Links  Create a Collaborative App for Microsoft 365, that runs across Teams, Outlook and Office.com (@wicto\u0026hellip; Developing Enterprise-Ready Microsoft Teams Apps with Teams ToolKit v3.0 (@girlie_mac)  ","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-microsoft-graph-data-connect-with-nik/","tags":[],"title":"M365 Dev Podcast - Microsoft Graph Data Connect with Nik Charlebois"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary  One location the Microsoft 365 tenant \u0026ndash; script samples gallery (134 scenarios and 182 scripts) including recently added Teams PowerShell support!  Sign up and attend an AMA and other events this month hosted by Sharing is Caring. At the same time, sign up for the PnP Recognition Program.  Heads down on PnP projects.  Check out the TeamsFx authentication provider preview in MGT!  To see current releases and latest updates/nightly builds, access the Repos via the links in table below.  There were 7 new/updated script, 5 Power Platform samples delivered this week.  Wanted! \u0026ndash; Teams Samples.  Open-source project status (Bold indicates new this call)\n   Project Current Version Release/Status     PnP .NET Libraries - PnP Framework v1.8.0 GA with .NET 6.0 support added Prepping v1.9   PnP .NET Libraries - PnP Core SDK v1.5.0 GA with .NET 6.0 support added Prepping v1.6   PnP PowerShell v1.9.0 GA In progress: V2 POC, Prepping for v1.8, nightly releases   Yo teams - generator-teams v3.5.0 GA v4.0.0-next   Yo teams - yoteams-build-core v1.5.0 GA, Next: v1.6.0-next.1     Yo teams \u0026ndash; yoteams-deploy v1.1.0 GA     Yo teams - msteams-react-base-component v3.1.1     Microsoft Graph Toolkit (MGT) v2.3.1 GA, TeamsFx authentication provider preview! Preparing v2.3.1 release, working on v3.0.0 - Aligning all Toolkit components to Fluent UI Web Components    Note\nWhile version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities.\n The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\n Opt into PnP Recognition Program | aka.ms/m365pnp-recognition Join us at the next Microsoft 365 platform call 25th of January @ 8 AM PT  Latest news from Microsoft engineering on Microsoft 365 topics Demos:  Arvind Ravi \u0026ndash; Latest with Microsoft Graph connectors Patrick Rodgers \u0026ndash; Best practices on building Viva Connections extensibility Sébastien Levert \u0026ndash; Introduction to Microsoft Graph Toolkit control     Register for Sharing is Caring Events:  PnP Sharing is Caring - AMA (Ask Me Anything) - SPFx React Controls \u0026ndash; Tuesday, February 22nd, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) -- Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST First Time Contributor Session \u0026ndash; Tuesday, January 25th, 2pm PST Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; Tuesday, January 25th, 2pm PST PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; Tuesday, February 8th, 2pm PST PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; Wednesday, January 26th, 7am PST First Time Presenter \u0026ndash; Wednesday, February 9th, 9am PST More than Code with VSCode \u0026ndash; Tuesday, February 15th, 2pm PST Maturity Model Practitioners \u0026ndash; Tuesday, February 15th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig Call attention to your great work by using the #PnPWeekly on Twitter.  Microsoft Teams Development Samples (https://aka.ms/TeamsSampleBrowser)\n Wanted! Teams Samples  Microsoft Power Platform Samples (https://aka.ms/powerplatform-samples)\n COVID Vaccine Survey App - Siddharth Vaghasia | @siddh_me \u0026amp; Mayuresh Joshi Employee Tip of the Day Flow - Adam Wójcik | @Adam25858782 Icon Button Component - Pavel Kovalevskij  JSON Object to Power Fx Table Function - Bartolome Sorrentino | @bsorrentinoJ Power Wordle - April Dunnam | @aprildunnam  Script Samples https://aka.ms/script-samples\n4 new scenarios and 3 script updates contributed by\n Adam Wójcik | @Adam25858782 Chandani Prajapati | @Chandani_SPD Ganesh Sanap | @GaneshSanap20 Kunj Balkrishna Sangani | @sanganikunj Kasper Bo Larsen | @kasperbolarsen Leon Armston | @LeonArmston Reshmee Auckloo | @reshmeeauckloo  Blog: Getting started with PnP Script Samples \u0026ndash; aka.ms/script-samples/getting-started\n\u0026ndash; Many thanks!\nTogether Mode!  Thanks everyone for joining the call today. You are an awesome community. Demos Demos delivered in this session\nGetting started on building a Microsoft Teams bot with yo teams what is yo teams (a Microsoft Teams app generator) and how to use it to build a bot. After installing Yeoman generator and Gulp CLI task manager, install npm i -g generator-teams. Create a project. In VS Code step through files generated by yo teams. Use gulp build, gulp manifest and gulp serve. Upload created bot to Teams site and appreciate its out-of-box capabilities. Microsoft List Formatting - Challenges and Solutions appreciate results of one person\u0026rsquo;s winter lock down \u0026ndash; List Formatting samples categorized by emotions, multiple person, color picker, bar option, slider, and Teams Group. Solutions include discussion board, events mobile and payment. Graphical tree along with LABs (show how handle manual actions from users) for Tic Tac Toe and roll dice. UI/script shown on slides, live in demo. Samples available in List Formatting Repo soon. Updates on Independent Publisher Connectors \u0026amp; GoQR Connector Demo 49 connectors in production, 40 in pipeline today! The GoQR connector generates QR codes. In Power Apps, render the QR Code image alone or embed the QR code image in a document or pdf, i.e., an invoice. Simple build - a text field, a button (calls connector with action create) and a flow. This connector is now available to anyone in the world. Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics Topics covered in this call\n PnP .NET library updates - Bert Jansen (Microsoft) | @O365bert \u0026ndash; 7:01 PnP PowerShell updates - Bert Jansen (Microsoft) | @O365bert \u0026ndash; 8:33 yo Teams updates - Stephan Bisser (Solvion) | @stephanbisser \u0026ndash; 9:44 Microsoft Graph Toolkit updates - Sébastien Levert (Microsoft) | @sebastienlevert \u0026ndash; 11:57 Microsoft Script Samples - Paul Bullock (CaPa Creative Ltd) | @pkbullock \u0026ndash; 2:33 Microsoft Teams Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 13:39 Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam \u0026ndash; 13:56 Demo 1: Getting started on building a Microsoft Teams bot with yo teams \u0026ndash; Stephan Bisser[ (Solvion) | @stephanbisser ]\u0026ndash; 16:14 Demo 2[: Microsoft List Formatting - Challenges and solutions \u0026ndash;]** **André Lage[ (Datalynx AG) | @aaclage \u0026ndash; 28:44] [Demo 3[: Updates on Independent Publisher Connectors \u0026amp; GoQR Connector Demo \u0026ndash; ]Natalie Pienkowska[ (Microsoft) | @NataliePienkow1 \u0026amp; ]Rui Santos[ (Microsoft) ]]\u0026ndash; 47:41  Resources Additional resources around the covered topics and links from the slides.\n  D1: Repo - Microsoft Teams App Project Generator - #YoTeams | aka.ms/yoteams\n  D1: Documentation - Yo Teams - the Microsoft Teams app generator   D1: Documentation - Single sign-on (SSO) support for bots   D2: List Formatting Samples - List Formatting Samples   D3: Documentation - GoQR (Independent Publisher) (Preview)   D3: Repo \u0026ndash; GoQR   D3: Connectors - Welcome to the Independent Publisher Connector Directory!\n  PnP Weekly \u0026ndash; Episode 149 (January 17th) with Brisbane, Queensland, Australia-based Cloud Developer Advocate for Microsoft Teams and Graph, Rabia Williams (Microsoft) | @williamsrabia | video | podcast\n  PnP Weekly \u0026ndash; Episode 148 (January 9th) with Belgium-based Power Platform Architect and Business Applications MVP, Carmen Ysewijn (Qubix) | @CarmenYsewijn | video | podcast   General resources  Script Samples - Getting started with PnP Script Samples \u0026ndash; aka.ms/script-samples/getting-started Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v3.x | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Microsoft 365 platform call \u0026ndash; January 25th at 8:00 am PST | https://aka.ms/m365-dev-call\n  Viva Connections \u0026amp; SharePoint Framework call \u0026ndash; January 27th at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  M365 General Dev call \u0026ndash; February 3rd at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Office add-in monthly call \u0026ndash; February 9th at 8:00 am PST | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash;February 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; February 16th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; February 17th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar\n  General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls!\nYou can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n \u0026ldquo;Sharing is caring\u0026rdquo;\nMicrosoft 365 Community (PnP) team, Microsoft - 21st of January 2022\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-20th-of-january/images/recording-20th-jan_hucc1ac96e36de230086610d28c2b93163_185162_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-20th-of-january/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 20th of January, 2021"},{"categories":["Power Apps community call"],"contents":"Call summary Topics covered in this month’s community call includes 2 demos: Power Audio Player (Canvas app, modified audio control functionality, SharePoint list back-end) - Shadrack Inusah (DreamOval) and New Pay as you go Features (Public Preview - Power Apps Premium environments with Azure subscription) - Kavishi Agarwal (Microsoft), Recent Power Apps News and Community Contributions (Power Platform ALM Accelerator, Power Apps portals and Power Apps Ideas) – Todd Baginski (Canviz) and learn about 5 new PnP Power Apps Samples – April Dunnam (Microsoft). This call included the first ever Power Apps Community Call Quiz – using a Power App and played during the live call. This call was hosted by Todd Baginski (Canviz).\nThe call was recorded on January 19, 2022. Questions addressed in chat throughout the call. Thank for attending the call or viewing it on demand. Agenda  Demo 1: Power Audio Player - Shadrack Inusah (DreamOval) | @kojo_shaddy – 3:25 Demo 2: New Pay as you go Features - Kavishi Agarwal (Microsoft) – 28:53 Recent Power Apps News and Community Contributions – Todd Baginski (Canviz) | @ToddBaginski – 46:36 Latest PnP Power Apps Samples – April Dunnam (Microsoft) | @aprildunnam – 49:25 Power Apps Community Call Quiz - April Dunnam (Microsoft) | @aprildunnam – 51:17  Demos   Power Audio Player – an integration of a Canvas app front-end with SharePoint list backend for images and audio files. In fact, created the Power App Canvas app from within SharePoint. App UI is composed of labels, icons, navigation, image containers, etc. Used the layout template. Modified out-of-box audio control to look and function differently. Step through the code for the audio control buttons.   New Pay as you go Features – in Public Preview - for premium Power Apps, pay only for what you use after you use it. Link your Power Apps environment to an Azure Subscription. The Subscription comes with base Dataverse capacity for Power Apps storage requirements and pay only for storage overages. Manage Azure Subscription and Power Apps environment from admin portal where you can add/delete apps and get usage reports.   Recent News \u0026amp; Cool Stuff   Introducing the ALM Accelerator for Power Platform\n  Power Apps portals: Introducing the portals search powered by Microsoft Dataverse search API (previe\u0026hellip;\n  Power Apps Ideas: New enhancements and increased capabilities\n  Actions  Power Platform User Groups - Find a user group in your area.  Power Platform user groups Dynamics 365 user groups    Register for the Global Power Platform Bootcamp - Dates TBD Check out the SCOTTISH SUMMIT 2022 - 25th \u0026amp; 26th February 2022  PnP Samples - We welcome your Power Platform samples! View or be a Guest on The Low Code Revolution show | aka.ms/LowCodeRevolutionShow Join us for our next call: February 16, 2022, at 08:00am PST | aka.ms/powerappscommunitycall  Referenced in this session   D1: Repo - Power-Audio-Player\u0026ndash;PowerApps-   D2: Documentation – Preview: Pay-as-you-go plan | aka.ms/powerplatformPAYG\n  D2: Questions/Feedback – PowerPlatformPAYG@microsoft.com\n  Learn more  See the full blog post for this call on the Tech Community Blog - https://aka.ms/m365pnp/community/blog Microsoft’s Power Platform website Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - https://aka.ms/PowerAppsCommunitySamples Power Apps Community Videos - https://aka.ms/PowerAppsCommunityVideos PowerPlatformLearn Resources | https://www.powerplatformlearn.academy PnP Power Platform Samples | https://www.aks.ms/powerplatform-samples Power Addicts Hangout - https://wearepoweraddicts.com #LessCodeMorePower Video Series - https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Share more - draw attention to your great work - #PowerAppsCC  Stay connected  Twitter: https://twitter.com/MSPowerPlat Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/m365pnp/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/powerappscommunitycall  Related documents   Power Apps Community Call - January 2022.pptx (265 KB)  ","image":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-january-2022/images/PowerApps%20Thumb%20January%202022_hu05f5fa49ef0956f0f6a7582cfd8b61ed_241685_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-january-2022/","tags":["Extensions","Microsoft 365","Power Apps","SharePoint"],"title":"Power Apps Community Call – January 2022"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from January 18th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call Summary\nWelcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 880+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring this month and next. Upcoming AMAs on PnP React Controls and on Graph and MGT. Tune into the weekly  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Microsoft 365 PnP Weekly - Videos, Podcasts focused on the latest news and topics on Microsoft 365 hosted by Vesa Juvonen and Waldek Mastykarz   Hear about the latest 2 Microsoft 365 Platform related stories and absorb 3 demos delivered by Microsoft presenters on latest capabilities of the Microsoft 365 platform. Microsoft 365 Community (PnP) \u0026ndash; January 2022 update is available!  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout and live at end of the call. Microsoft 365 Platform News Flash\n  New Single Sign-on service for Office Add-ins rolling out in Office on the web\n  Graph API support for new content type sync enhancements\n  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n PnP Sharing is Caring - AMA (Ask Me Anything) - SPFx React Controls \u0026ndash; Tuesday, February 22nd, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) -- Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST First Time Contributor Session \u0026ndash; Tuesday, January 25th, 2pm PST Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; Tuesday, January 25th, 2pm PST PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; Tuesday, February 8th, 2pm PST PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; Wednesday, January 26th, 7am PST First Time Presenter \u0026ndash; Wednesday, February 9th, 9am PST More than Code with VSCode \u0026ndash; Tuesday, February 15th, 2pm PST Maturity Model Practitioners \u0026ndash; Tuesday, February 15th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo\n  Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call\n  Call attention to your great work by using the #PnPWeekly on Twitter. Thank you everybody for joining the call today. Brilliant to see many familiar faces week after week\n  Demos Demos delivered in this session\n  Show a user\u0026rsquo;s emails in an ASP.NET Core app with Microsoft Graph \u0026ndash; configure .NET app (or Python, Java Script, Java) to retrieve emails using Microsoft Graph, secure messages using Microsoft Identity. Define queries that break up large data sets - emails into batches. Demo follows learn module steps - create app, register app in AAD, configure/add middleware, create and use GraphEmailClient, and render Emails. Start by cloning repo, run sample on your Microsoft 365 developer tenant.   Deep dive on Viva Connections Adaptive Card Extension development \u0026ndash; State management \u0026ndash; what is State in SPFx ACEs and how use State in SPFx apps to maximize initial load times, UI performance, and limit network traffic. State is shared across all views in SPFx ACES. Be mindful of tradeoffs between state and storage. Load as little as you need into State at any given time but load enough to optimize network calls. Cache previous states.\n  Microsoft Graph Toolkit \u0026ndash; Using the People Picker Component in your solutions \u0026ndash; this session focuses on the Microsoft Graph People picker control and options for customization. Search for users and/or groups (DG, SG, M365, Teams groups) in an organization from inside your apps and forms. Find people trending around me, groups, users from a group, direct reports, newly added to team, people by e-mail address. Build a custom People picker component. See code and rendering side-by-side.\n  Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 6:08 Monthly contributors on the Microsoft 365 platform community efforts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 7:17 D1: Show a user\u0026rsquo;s emails in an ASP.NET Core app with Microsoft Graph \u0026ndash; Dan Wahlin (Microsoft) | @DanWahlin \u0026ndash; 10:21 D2: Deep dive on Viva Connections Adaptive Card Extension development \u0026ndash; State management \u0026ndash; Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 28:38 D3: Microsoft Graph Toolkit \u0026ndash; Using the People Picker Component in your solutions \u0026ndash; Sébastien Levert (Microsoft) | sebastienlevert \u0026ndash; 40:24  Resources Additional resources around the covered topics and links from the slides.\n  D1: Learn - Show a user\u0026rsquo;s emails in an ASP.NET Core app with Microsoft Graph   D1: Tool \u0026ndash; Graph Explorer | aka.ms/ge\n  D2: PnP/PnPjs Library - @pnp/odata/caching   D2: Samples - SharePoint Framework Reference Samples   D2: Demo - State referenced in Introduction to Adaptive Card Extensions (ACEs) for Microsoft Viva Connections \u0026ndash; Paolo Pialorsi (PiaSys) | @PaoloPia\n  D3: Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/mgt/docs\n  D3: Documentation - People-Picker component in the Microsoft Graph Toolkit   D3: MGT Playground \u0026ndash; People Picker   D3: Repo \u0026ndash; Microsoft Graph Toolkit | aka.ms/mgt\n  D3: Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/MGT/docs\n  D3: Learn - Develop apps with the Microsoft Graph Toolkit | aka.ms/mgt/learn\n  Previous demos delivered by Sébastien Levert on Microsoft Graph Toolkit (MGT)\n Discover the Microsoft Graph Toolkit \u0026ndash; 7 December 2021 Microsoft Graph Toolkit \u0026ndash; Using Login Component in your solutions \u0026ndash; 14 December 2021 Microsoft Graph Toolkit \u0026ndash; Using the Person Component in your solutions \u0026ndash; 4 January 2022 Microsoft Graph Toolkit \u0026ndash; Using the People Component in your solutions \u0026ndash; 11 January 2022    PnP Weekly \u0026ndash; Episode 149 (January 17th) with Brisbane, Queensland, Australia-based Cloud Developer Advocate for Microsoft Teams and Graph, Rabia Williams (Microsoft) | rabwill | video | podcast\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Power Apps monthly call\u0026ndash; January 19th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  M365 General Dev call \u0026ndash; January 20th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Microsoft Identity Platform call \u0026ndash; January 20th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar\n  Microsoft 365 platform call \u0026ndash; January 25th** **at 8:00 am PST | https://aka.ms/m365-dev-call\n  Viva Connections \u0026amp; SharePoint Framework call \u0026ndash; January 27th at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; February 9th at 8:00 am PST | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call **\u0026ndash; **February 10th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.    More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 19th of January 2022\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-18th-of-january-2022/images/recording-18th-jan_hu041b98b07eac3998425b808b707d9eec_561521_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-18th-of-january-2022/","tags":[],"title":"Microsoft 365 Platform Call -- 18th of January, 2022"},{"categories":["Office add-in developer community call"],"contents":"Call summary This month\u0026rsquo;s community call features updates on Excel shortcut customization APIs (introducing 3 new APIs to assist with keyboard shortcuts management) from Abid Rahman (Microsoft), an SSO update for Office Add-in (call to action: add new SSO service in Azure for your SSO enabled add-ins) by Matt Geimer (Microsoft), and the latest Outlook event-based activation on Mac (announcing Mailbox 1.10 APIs and Event-based add-ins are GA in New Outlook for Mac) from Ashima Mathur (Microsoft). This month\u0026rsquo;s Community spotlight recognizes Eric Legault (Eric Legault Consulting) and Maarten van Stam (Deloitte) for their continued contributions to this community. Q\u0026amp;A both at end of call and in chat throughout call. Please register for the PnP Recognition Program. The call was hosted by Alex Jerabek (Microsoft). Recorded January 12, 2022.\nMicrosoft Presenters  Alex Jerabek, Dev Writer  Abid Rahman, Program Manager Matt Geimer, Senior Program Manager Ashima Mathur, Program Manager   Agenda  Excel shortcut customization APIs \u0026ndash; Abid Rahman, Program Manager (Microsoft) \u0026ndash; 00:38 SSO update for Office Add-in \u0026ndash; Matt Geimer, Senior Program manager (Microsoft) \u0026ndash; 13:48 Outlook event-based activation on Mac \u0026ndash; Ashima Mathur, Program Manager (Microsoft) \u0026ndash; 18:42 Community spotlight \u0026ndash; Eric Legault (Eric Legault Consulting) and Maarten van Stam (Deloitte) \u0026ndash; 24:06 Q\u0026amp;A \u0026ndash; 24:45  Actions  Use Excel KeyboardShortcuts 1.1 API set. If you\u0026rsquo;re using SSO on the web, add the new SSO service in Azure Portal for your SSO enabled add-ins. See New Single Sign-on service for Office Add-ins rolling out in Office on the web blog post. Update to the latest builds of Mailbox 1.10 APIs and Event-based add-ins on new Outlook for Mac and test your add-ins. Register for the PnP Recognition Program.  Q\u0026amp;A (Question \u0026amp; Answers) Will shortcut key APIs be available on all hosts?\nShortcut key APIs are only available on Excel right now. We don\u0026rsquo;t have plans for the other hosts yet.\nIf a shortcut key is already in use by another add-in, is there a way for the user to override it?\nYes, the host (Excel) will prompt the user to make a choice between them. For more information, see Add custom keyboard shortcuts to your Office Add-ins.\n\nCan I display a local image in a task pane? I want to use a path to a file, like file:///C:/Users/user/Downloads/logo.png, but the browser forbids this action with the error \u0026ldquo;Not allowed to load local resource.\u0026rdquo;\nDue to the sandboxed nature of how Office Add-ins run in a browser, this isn\u0026rsquo;t possible. Access files from a URL location on OneDrive, or other locations. Please consider submitting a feature request with more details about this scenario at https://aka.ms/m365dev-suggestions.\n\nFor the new SSO service, if the group authorization id is already in the list of authorized client applications, then there are no changes required?\nCorrect, but you may still want to do a quick test with the new auth option to make sure you don\u0026rsquo;t see any issues.\n\nAre there any advantages to using SSO in Office, instead of MSAL, apart from the amount of code you have to write?\nYou should still use MSAL as a fallback authentication approach (when using Microsoft identity platform), in case SSO isn\u0026rsquo;t available or has an error. The advantage of SSO is you get the token without opening dialogs, and extra steps for the user. With SSO you can also enable admin consent via centrally deployed add-ins.\nIs there a way at runtime to determine if we\u0026rsquo;re in Compose or Read mode? Currently I can check certain APIs to see if they are available or not, but a global option to tell me which mode we\u0026rsquo;re in would be very helpful.\\\nIf you\u0026rsquo;re trying to execute different functions in Compose vs Read mode, specify that in the different extension points. For event-based add-ins, you can specify on which event the add-in should automatically launch (such as on message compose).\nThe latest Outlook requirement set is 1.11. but iOS and Android only support requirement set 1.5. Are there plans to update those platforms to support later requirement sets?\nWe are exploring specific scenarios for Outlook mobile extensibility. While the exact requirement sets may not be replicated, we plan to unlock some of the key scenarios with specific API support.\nAzure AD provides a way to disable user consent entirely to always require administrator consent for all applications. Without resorting to this option, is there a way to grant administrator consent (on behalf of your organization\u0026rsquo;s users) to an app and in doing so, entirely bypass the user consent flow for a smoother first-use experience?​\nFor add-ins using SSO, there is a mechanism via centralized deployment that allows an admin to consent for the permissions for all users, even if the user was allowed to consent. You can also utilize this mechanism using tenant-wide admin consent in Azure. For more details, see Grant tenant-wide admin consent to an application​. Can Microsoft Outlook Policy Tips be used in conjunction with add-ins REST/EWS send API? Full description of problem described on Stack Overflow: https://stackoverflow.com/questions/70619981/can-microsoft-outlook-policy-tips-be-used-in-conjunctio... ​\n​The team is looking into this question and will follow up on Stack Overflow.\nResources Excel shortcut customization APIs  Sample Repo \u0026ndash; Use keyboard shortcuts for Office add-in actions  Documentation \u0026ndash; Add custom keyboard shortcuts to your Office Add-ins  Documentation \u0026ndash; Keyboard Shortcuts 1.1 requirement sets  Documentation \u0026ndash; Avoid key combinations in use by other add-ins  Documentation \u0026ndash; Enable custom keyboard shortcuts for specific users (preview)  Feedback Repo \u0026ndash; Issues \u0026ndash; OfficeDev/Office-js{style=\u0026ldquo;color: inherit; font-family: inherit; font-size: 18px;\u0026rdquo;}  SSO Update for Office Add-in  Documentation \u0026ndash; Privacy and security for Office Add-ins  Documentation \u0026ndash; Register an Office Add-in that uses SSO with the Azure AD v2.0 endpoint  Blog post \u0026ndash; New Single Sign-on service for Office Add-ins rolling out in Office on the web   Outlook event-based activation on Mac  Documentation \u0026ndash; Outlook add-in API requirement set 1.10   Q\u0026amp;A  Documentation \u0026ndash; Grant tenant-wide admin consent to an application  Question \u0026ndash; Can Microsoft Outlook Policy Tips be used in conjunction with add-ins REST/EWS send API?   Office Add-ins community call  Upcoming agenda and previous call resources Recurring, monthly community call calendar invite Community call topic requests and questions Community call recordings on the YouTube Microsoft 365 community channel  Office Add-ins feedback  Technical questions \u0026ndash; Microsoft Q\u0026amp;A (office-js-dev), (office-addins-dev) Issues \u0026ndash; GitHub Recommendations and suggestions \u0026ndash; Microsoft 365 Developer Platform ideas   ","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-january-12-2022/images/office-add-ins-Thumb%20Jan%202022_hub64745d899c7da7ce6e3c451adec032f_259423_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-january-12-2022/","tags":[],"title":"Office Add-ins community call - January 12, 2022"},{"categories":["Community post"],"contents":"Introduction Have you ever had an idea to ask a bot to perform a simple interaction? Then this article is for you.\nA simple interaction could be an answer to a question you asked:\n You: What time is it? Bot: It\u0026rsquo;s 3.56PM  You could achieve this (and more) by building a bot using tools such as Power Virtual Agents or Bot Framework, but that is a little overkill for a simple interaction.\nInstead, let\u0026rsquo;s use Webhooks to achieve this.\nThe idea Before we begin, let\u0026rsquo;s fictionalize a use case. The idea is that users need to quickly be able to check the current and forecasted for any location from within a Team.\n   The solution    The solution is a Webhook in Teams and a Bot (surprised?). This works as follows:\n User @ mentions the Webhook (same as a would any other bot) in a Team channel This will trigger some external service (bot) HTTP, in this case an Azure Function The external service (Bot) will call a weather API and then return the weather information to the Team channel  Let\u0026rsquo;s break this down by component.\nWebhook A Webhook is a way for two applications that can communicate with each other. In our case, a simple bot and Teams.\nTeams supports two types of Webhooks:\n Incoming Webhook - An application sends a message to Teams using a Webhook address generated in Teams. This could be used if you wanted to automate some sort of alert or notification in to a Team Outgoing Webhook - Teams sends a message (request) to a Webhook address created outside of Teams. The external Webhook address is an application that then responds to your request with message (response)  For this solution, it is an Outgoing Webhook.\nThere are some limitations to using a Webhook in Teams, so bear these in mind when choosing Webhooks for your own idea:\n Webhooks are associated to a single Team. You cannot deploy the same Webhook to multiple Teams or outside of a Team (personal context) Everybody in the Team can see the interaction. If the interaction should be private (between the user and the bot), this should not be used This will work with a simple request and response, or question and answer. It will not work with branching dialogs, or multiple questions  The API To get the weather information, OpenWeatherMap API will be used. You can register for an API key.\nThe Bot The bot is where the magic happens. It is code hosted externally to Teams that can be called over HTTP (via the Webhook). What that code does, where it is hosted, is all up to you. For this scenario, there is an (written in TypeScript), which can be found here: Azure Function HTTP Trigger.\nYou are free to use the linked code as a basis for your own idea, or create your own code in your choice of programming language. The basic construct of a bot behavior needs to be as follows:\n Authenticate request (using a token from Teams) Get weather information from API Send response to request. This MUST be a bot \u0026ldquo;Activity\u0026rdquo;, with an attached Adaptive Card otherwise Teams will not handle the response correctly  Setup The setup of this solution comprises of two parts:\n Bot code accessible via HTTP Outgoing Webhook in Teams  Bot A Azure Function HTTP Trigger hosting the code is created. The URL of the trigger needs to be copied for the next step\n    Disregard the trailing question mark and any other text past this\n Teams Webhook To add an Outgoing Webhook, the following is done:\n  Find the Team to host the Webhook\n  Select the ellipsis (...) on the Team and choose Manage team\n     Under the Apps tab, at the bottom right of the page, there will be an option to Create an outgoing webhook\n   Provide the following:\n  Name: A short name that will be used to @ mention the Webhook. Keep it to one word if you can e.g. Weather\n  Callback URL: This is where the URL of the bot is entered (e.g. URL of the Azure Functions HTTP Trigger)\n  Description: A description of the purpose and functionality of the webhook e.g. Provides current and forecasted weather for any location\n  Icon: Image that will appear next to the Webhook\n       Once the Webhook is created, take a note of the Security token of the Webhook as it will only be shown once and will be required for authentication to the bot\n     Configure Bot With the bot and webhook created, one final step is to configure the bot. In this case, the following is added under Configuration on the Azure Function:\n TeamsSecurityToken: The Security token from the Teams Outgoing Webhook. This is used for the bot to validate requests are from a trusted source (your Team) WeatherAPIKey: The API key to grant access to the OpenWeatherMap API      To simplify this example, I have stored these in application settings. In a production environment, please ensure this is held somewhere more secure, such as Azure KeyVault references that can be accessed using Managed Identity\n Demo time With everything in place, all that is left is to try it! Simply mention the Webhook and enter a location, and the weather is returned!\n ","image":"https://pnp.github.io/blog/post/make-a-bot-for-simple-interactions-in-teams-using-a-webhook/images/149174368-58562d12-5554-4625-a902-0df103e00cff_hu5b14b5f4027b54bc886b3a09ef1b208e_109842_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/make-a-bot-for-simple-interactions-in-teams-using-a-webhook/","tags":["Azure","Microsoft Teams"],"title":"Make a bot for simple interactions in Teams using a Webhook"},{"categories":["Community post"],"contents":"As we all know, Viva connection is a part of Employee Experience Platform.\nIn this article you can expect to quickly add your home site portal as Viva connection app right into your Microsoft Teams\nBefore we move ahead, a quick note,\n If you don\u0026rsquo;t have an existing home site in your tenant you can Create a SharePoint Home Site by navigating to SharePoint Admin Centre \u0026gt; Active sites \u0026gt; Select any site you want to convert it to Home Site, you will see an option in the command bar like Change Home Site as shown in Fig 1.1     Fig 1.1 \u0026ndash; Change Home Site Setting\n Select the Change Home site, a panel will open where you will be asked to add your communication site URL which you want to convert to Home Site as shown in Fig 1.2     Fig1.2 \u0026ndash; Convert site to Home Site Panel\n In few seconds your communication site will be converted to home site Make sure you have global left navigation enabled in your communication site Let\u0026rsquo;s move ahead, if you have the home site with global left navigation now, we are ready to use this in Viva connections Step 1: Go to Teams Admin center Step 2: Navigate to Teams Apps \u0026gt; Manage Apps as shown in Fig 1.3     Fig 1.3 \u0026ndash; Manage Apps Step 3: By default, Microsoft has blocked the Viva connections app. So, in the manage apps, you will find a search box, search for viva connections, you will find Viva Connections app, with status as Blocked Select the app, select Allow from the top command bar, the status will be changed to Allowed as shown in Fig 1.4\n   Fig 1.4 \u0026ndash; Viva connection app changes status to Allowed as by default it is set to Blocked Step 5: You can also customize your app by selecting the app and clicking on customize option from the top command bar as shown in Fig 1.5\n   Fig 1.5 \u0026ndash; Customize Viva Connection app from Teams admin centre Step 6: Now let\u0026rsquo;s navigate to Microsoft Teams Step 7: In add an app, search by App name (Viva connections),from the Fig 1.6, I changed the app name to Intranet portal, hence in the Fig 1.6 you will find the different App name\n   Fig 1.6 \u0026ndash; Viva connections app in Microsoft Teams Step 8: Voila, now, after creating a Home site into your SharePoint portal. As shown in Fig 1.7, Your home site is up and running in your Viva Connections app and right from Microsoft Teams app, you can edit and make changes to your Home site.\n   Fig 1.7 \u0026ndash; Viva connections app with your SharePoint home site.\nI hope you all got a brief understanding on how you can quickly set up Viva connections app into your Microsoft Teams from Microsoft Teams Admin center.\n","image":"https://pnp.github.io/blog/post/quickly-set-up-viva-connections-app-in-microsoft-teams-using/images/ShrushtiShah_7-1642505452452_huaeea9b515be6405eecbfb0d42611bca5_92077_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/quickly-set-up-viva-connections-app-in-microsoft-teams-using/","tags":["Microsoft Teams"],"title":"Quickly set up Viva Connections app in Microsoft Teams using Teams admin center"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Brisbane, Queensland, Australia-based Cloud Developer Advocate for Microsoft Teams and Graph, Rabia Williams (Microsoft) | @williamsrabia. Topics discussed in this session:\n On becoming an MVP and subsequently joining Microsoft during a Pandemic.  Our digital connection today as opposed to traveling to connect in the old days.  Top 3 surprises after joining Microsoft?  What does a Microsoft Cloud Developer Advocate (CDA) do? Career tips for women considering a job in IT? Representation matters.   We also covered 21 articles published by Microsoft and the PnP Community over the last week. Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, January 17, 2022. Enjoy the show. YouTube Video at Microsoft 365 Community YouTube channel\n  Podcast Podcast format at https://pnpweekly.podbean.com.\n These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Most used SharePoint Framework solutions from the Store - December 2021 - Vesa Juvonen (Microsoft) | @vesajuvonen Microsoft Graph Mailbag \u0026ndash; Using LargeFileUploadTask with Microsoft Graph SDKs - Brian Jackett (Microsoft) | @BrianTJackett New Single Sign-on service for Office Add-ins rolling out in Office on the web - Microsoft Graph API support for new content type sync enhancements - Shreya Ganguly (Microsoft) January 2022 \u0026ndash; Syntex Licensing Updates and New Year Reflections - Chris McNulty (Microsoft) | @cmcnulty2000 Syntex content assembly and the content lifecycle - Chris McNulty (Microsoft) | @cmcnulty2000 Easily manage your Microsoft 365 apps with CLI for Microsoft 365 - Waldek Mastykarz (Microsoft) | @waldekm Power Apps Collections Basics - April Dunnam (Microsoft) | @aprildunnam  Community articles  CLI for Microsoft 365 on your mobile - Adam Wójcik (Hitachi Energy) | @Adam25858782 PnP PowerShell or CLI for Microsoft 365 or both or other - Adam Wójcik (Hitachi Energy) | @Adam25858782 Microsoft 365 self-service using Power Apps - Jan Bakker | @janbakker_ Working with Custom Connectors in Power Platform for beginners - Michael Roth (IT-P Information Technology-Partner GmbH) | @MichaelRoth42 Working with APIs in Power Platform for beginners - Michael Roth (IT-P Information Technology-Partner GmbH) | @MichaelRoth42 PnP PowerShell/CSOM Now Works With SharePoint Sites.Selected Permission using Azure AD App - Leon Armston (Intelogy) | @LeonArmston Working with Apps for Microsoft Teams meetings - Vardhaman Deshpande (Valo Solutions) | @vrdmn How to create a To Do list using SharePoint and Microsoft Lists view formatting \u0026ndash; Part 3 - João Ferreira (Beezy) | @joao12ferreira Configure Teams Tab applications - Markus Möller (Avanade) | @Moeller2_0 Set the task priority in Microsoft Planner using Power Automate - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Episode #189 - Shared Files Governance via Microsoft Graph - Paolo Pialorsi (PiasSys) | @PaoloPia Role Touchpoints during Information Governance and Records Management Implementation - Joanne Klein | @JoanneCKlein Where to share important corporate documents - Sarah Haase (U.S. Bank) | @sarahhaase  Additional resources  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n*\u0026ldquo;Sharing is caring!\u0026rdquo; *\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-149-rabia-williams-microsoft/images/Thumb-Ep149-January%2017_huf1859665ad6ce364c3e3aeba003c8d81_494289_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-149-rabia-williams-microsoft/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 149 - Rabia Williams (Microsoft)"},{"categories":["Community post"],"contents":"Recently Tetsuya and Michel shared some great examples of a new option in List formatting, the setValue action within List formatting. This blog shows an example on how to use list formatting to create registration or sign-up formatting in a SharePoint list.   Course Registration  One of the examples I have seen a lot on the Power Automate community is registration or sign-up in a SharePoint list. A lot of times a Power Automate flow would be needed to meet the requirements in these kind of scenarios. In this article I am going to show you can use the setValue action to meet most of your requirements without the need of building a flow. Assume we have the following requirements:\n A user can register for one or several courses A course has a number of available places, when all places are taken registration is not possible There is a registration end date, after this registration is not possible   SharePoint Online list  First of all you would need to create the SharePoint Online list and the columns. To give you a head-start a create a PnP PowerShell script for this. Feel free to reuse it. \u0026lt;# .SYNOPSISCreate list for Course registration. .DESCRIPTIONYou need to have the latest version of PnP PowerShell Create list for Course registration. .PARAMETERSiteCollection Specifies the site collection Url of the SharePoint Online environment. .PARAMETERListName Specifies the name of the SharePoint Online list. .NOTESAuthor: Expiscornovus Current Version: 0.1 Version History: 0.1 - First minor version .EXAMPLEPS\u0026gt; .\\create_courseregistration_spolist.ps1 -SiteCollection \u0026#34;https://contoso.sharepoint.com/sites/formatting\u0026#34; -ListName \u0026#34;Courses\u0026#34; #\u0026gt; param ([Parameter(Mandatory)]$SiteCollection,[Parameter(Mandatory)]$ListName) Connect-PnPOnline -Url $SiteCollection -Interactive New-PnPList -Title $ListName -Template GenericList Add-PnPField -List $ListName -DisplayName \u0026#34;Registration End Date\u0026#34; -InternalName \u0026#34;RegistrationEndDate\u0026#34; -Type DateTime Add-PnPField -List $ListName -DisplayName \u0026#34;Course Date\u0026#34; -InternalName \u0026#34;CourseDate\u0026#34; -Type DateTime Add-PnPField -List $ListName -DisplayName \u0026#34;Register\u0026#34; -InternalName \u0026#34;Register\u0026#34; -Type Text Add-PnPField -List $ListName -DisplayName \u0026#34;Number of Available Places\u0026#34; -InternalName \u0026#34;NumberofPlaces\u0026#34; -Type Number Add-PnPFieldFromXml -List $ListName -FieldXml \u0026#39;\u0026lt;Field Type=\u0026#34;UserMulti\u0026#34; DisplayName=\u0026#34;People Who Registered\u0026#34; UserSelectionMode=\u0026#34;PeopleOnly\u0026#34; StaticName=\u0026#34;PeopleWhoRegistered\u0026#34; Name=\u0026#34;PeopleWhoRegistered\u0026#34; Mult=\u0026#34;TRUE\u0026#34; /\u0026gt;\u0026#39; Add-PnPView -List $ListName -Title \u0026#34;All Courses\u0026#34; -Fields \u0026#34;Title\u0026#34;,\u0026#34;RegistrationEndDate\u0026#34;,\u0026#34;CourseDate\u0026#34;,\u0026#34;Register\u0026#34;,\u0026#34;NumberofPlaces\u0026#34;,\u0026#34;PeopleWhoRegistered\u0026#34; Disconnect-PnPOnline  Change format Register column   Navigate to your newly created list and select Column settings \u0026gt; Format this column.    Insert the json below and select save.   { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;flex-directon\u0026#34;: \u0026#34;row\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;align-items\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;flex-wrap\u0026#34;: \u0026#34;nowrap\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(indexOf([$PeopleWhoRegistered.email], ) == -1 \u0026amp;\u0026amp; length([$PeopleWhoRegistered]) != [$NumberofPlaces] \u0026amp;\u0026amp; @now \u0026lt;= [$RegistrationEndDate], \u0026#39;inherit\u0026#39;,\u0026#39;none\u0026#39;)\u0026#34;, \u0026#34;flex-directon\u0026#34;: \u0026#34;row\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;align-items\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;flex-wrap\u0026#34;: \u0026#34;wrap\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;button\u0026#34;, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;setValue\u0026#34;, \u0026#34;actionInput\u0026#34;: { \u0026#34;Text\u0026#34;: \u0026#34;Update\u0026#34;, \u0026#34;PeopleWhoRegistered\u0026#34;: \u0026#34;=appendTo([$PeopleWhoRegistered], )\u0026#34; } }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-themePrimary ms-fontColor-themeDarker--hover\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;border\u0026#34;: \u0026#34;none\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;cursor\u0026#34;: \u0026#34;pointer\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-directon\u0026#34;: \u0026#34;row\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;align-items\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;flex-wrap\u0026#34;: \u0026#34;wrap\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;AddTo\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;padding\u0026#34;: \u0026#34;0px\u0026#34; } } ] } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;Already Registered\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(indexOf([$PeopleWhoRegistered.email], ) == -1, \u0026#39;none\u0026#39;,\u0026#39;inherit\u0026#39;)\u0026#34;, \u0026#34;padding-left\u0026#34;: \u0026#34;5px\u0026#34;, \u0026#34;word-break\u0026#34;: \u0026#34;keep-all\u0026#34; } } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;Course is full\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(length([$PeopleWhoRegistered]) != [$NumberofPlaces], \u0026#39;none\u0026#39;,\u0026#39;inherit\u0026#39;)\u0026#34;, \u0026#34;padding-left\u0026#34;: \u0026#34;5px\u0026#34;, \u0026#34;word-break\u0026#34;: \u0026#34;keep-all\u0026#34; } } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;Registration has ended\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(@now \u0026lt;= [$RegistrationEndDate], \u0026#39;none\u0026#39;,\u0026#39;inherit\u0026#39;)\u0026#34;, \u0026#34;padding-left\u0026#34;: \u0026#34;5px\u0026#34;, \u0026#34;word-break\u0026#34;: \u0026#34;keep-all\u0026#34; } } ] } ] }  Explanation of the json  First we try to handle the showing/hiding of the register button. This is done in the display property of the div. if(indexOf([$PeopleWhoRegistered.email], ) == -1 \u0026amp;\u0026amp; length([$PeopleWhoRegistered]) != [$NumberofPlaces] \u0026amp;\u0026amp; @now \u0026lt;= [$RegistrationEndDate], \u0026#39;inherit\u0026#39;,\u0026#39;none\u0026#39;)  In this formula I am using a conditional operator if(). In that if statement I am checking if three things are all true.\n If the e-mail of the person who is creating the list item is not registered. This expression is using a IndexOf binary operator and a @me special string value. When the expression returns -1 it hasn\u0026rsquo;t found the e-mail and the button will still be shown. It will compare the length unary operator to check the number of people registered for the current course. When that isn\u0026rsquo;t equal the number of available places the register button will still be shown. If the current date is before the registration date the register button will still be shown. The @now special string value is used for this. In the bottom of the json I am using the same expressions only in individual divs and the true false values will be in reserve. This is to show a custom message when one of the conditions is met.   { \u0026#34;elmType\u0026#34;: \u0026#34;button\u0026#34;, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;setValue\u0026#34;, \u0026#34;actionInput\u0026#34;: { \u0026#34;Text\u0026#34;: \u0026#34;Update\u0026#34;, \u0026#34;PeopleWhoRegistered\u0026#34;: \u0026#34;=appendTo([$PeopleWhoRegistered], )\u0026#34; } }  And finally the start of this blog, the customRowAction with a setValue. In this case I am using a appendTo binary operation to add the person who is creating the list item to the existing list of people who registered.\n","image":"https://pnp.github.io/blog/post/course-registration-with-list-formatting/images/51695169286_ae7588984b_c_hu68994a4c48a930545f0b1ba437f9f32f_16826_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/course-registration-with-list-formatting/","tags":["List formatting","SharePoint","PnP PowerShell"],"title":"Course registration with List formatting"},{"categories":["Microsoft 365 Platform Community update"],"contents":"Microsoft 365 Community (PnP) January 2021 update is out with a summary of the latest guidance, samples, and solutions from Microsoft or from the community for the community. This article is a summary of all the different areas and topics around the community work we do around Microsoft 365 ecosystem during the past month. Thank you for being part of this success. Sharing is caring!\nWhat is Microsoft 365 Community (PnP) Microsoft 365 PnP is a nick-name for Microsoft 365 platform community activities coordinated by numerous teams inside of the Microsoft 365 engineering organizations. PnP is a community-driven open-source initiative where Microsoft and external community members are sharing their learning\u0026rsquo;s around implementation practices for Microsoft 365. Topics vary from Microsoft Viva, Microsoft Graph, Microsoft Teams, Power Platform, OneDrive and SharePoint. Active development and contributions happen in GitHub by providing contributions to the samples, reusable components, and documentation for different areas. PnP is owned and coordinated by Microsoft engineering, but this is work done by the community for the community.\n  See more details from New Microsoft 365 Patterns and Practices (PnP) team model with new community leads The initiative is facilitated by Microsoft, but we have multiple community members as part of the PnP team (see team details in end of the article) and we are always looking to extend the PnP team with more community members. Notice that since this is open-source community initiative, so there\u0026rsquo;s no SLAs for the support for the samples provided through GitHub. Obviously, all officially released components and libraries are under official support from Microsoft. Main resources around Microsoft 365 Community:\n  Microsoft 365 Community - http://aka.ms/m365pnp - One location for all the resources and news around Microsoft 365 platform\n  Microsoft 365 community blog - http://aka.ms/m365pnp/community/blog\n  Microsoft 365 development blog - http://aka.ms/m365pnp-blog\n  Microsoft 365 Community Channel on YouTube - http://aka.ms/m365pnp-videos\n  Microsoft 365 Developer YouTube channel - https://aka.ms/M365DevYouTube\n  ✍ Latest Dev Blog posts Here are the latest blog posts and announcements around Microsoft 365 development topics from https://developer.microsoft.com/microsoft-365/blogs.\n 21st of December - New features in Microsoft Graph Bookings APIs provide enhanced booking infrastructure 21st of December - Microsoft Graph Bookings APIs now available on the v1 endpoint Latest community posts at https://aka.ms/m365pnp/community/blog 11th of January - Adam Wójcik (Hitachi Energy) | @Adam2585878 - PnP PowerShell or CLI for Microsoft 365 or both or other 11th of January - Adam Wójcik (Hitachi Energy) | @Adam2585878 - CLI for Microsoft 365 on your mobile 8th of January - Garry Trinder (Microsoft) | @garrytrinder - CLI for Microsoft 365 v4.3 5th of January - Chandani Prajapati (Rapid Circle) | @Chandani_SPD - How to convert HTML content or file to PDF using the Muhimbi API? Community call recording blog posts: 7th of January - Adaptive Cards community call \u0026ndash; November 2021 7th of January - Microsoft 365 Developer Community Call recording \u0026ndash; 6th of January, 2021 5th of January - Microsoft 365 Platform Call \u0026ndash; 4th of January, 2022 31st of December - Viva Connections \u0026amp; SharePoint Framework Community Call \u0026ndash; 30th of December, 2021 30th of December - Microsoft Identity Platform community call \u0026ndash; December 2021 22nd of December - Microsoft 365 Platform Call \u0026ndash; 21st of December, 2021 20th of December - Office Add-in Samples - December 2021 update Microsoft 365 Developer Podcasts In the Microsoft 365 Developer Podcast, Jeremy Thake and Paul Schaeflein talk Microsoft 365 with fellow industry experts. The show formerly known as Office 365 Podcast is back! New episodes out soon!  blog\nMicrosoft 365 PnP Weekly Podcasts and vlogs PnP Weekly is a recurrent podcast with visitors where Vesa and Waldek talk about the latest news and announcements in Microsoft 365 and SharePoint areas.  11th of January - Microsoft 365 PnP Weekly - Episode 148 - Carmen Ysewijn (Qubix)  Community Calls There are numerous different community calls on different areas. All calls are being recorded and published either from Microsoft 365 Developer or Microsoft 365 Community (PnP) YouTube channels. Recordings are typically released within the following 24 hours after the call. You can find a detailed agenda and links to specific covered topics on blog post articles at the Microsoft 365 developer blog when the videos are published.\n Microsoft 365 Platform Call - https://aka.ms/m365-dev-call - Updates and demos from Microsoft as weekly call on Tuesdays - topics vary from Microsoft Teams, Microsoft Graph, Power Platform, SharePoint, OneDrive and more Adaptive Cards https://aka.ms/adaptivecardscommunitycall - Updates and news around Adaptive Cards with live demos Microsoft identity platform https://aka.ms/IDDevCommunityCalendar - Latest on the identity side Office Add-ins https://aka.ms/officeaddinscommunitycall - News and community work around Office add-ins with live demos PowerApps https://aka.ms/PowerAppsMonthlyCall - Monthly summary on PowerApps community with live demos M365 Community Call https://aka.ms/spdev-sig-call - Bi-weekly - General topics on Microsoft 365 Dev from various aspects - Microsoft Teams, Microsoft Graph Toolkit, Provisioning, Automation, Scripting, Power Automate, Solution design Viva Connections \u0026amp; SharePoint Framework Community call https://aka.ms/spdev-spfx-call - Bi-weekly - Consists of topics around SharePoint Framework and JavaScript-based development in the Microsoft Teams and in SharePoint platform. If you are interested in doing a live demo of your solution or sample in these calls, please do reach out to the PnP Team members (contacts later in this post) and they are able to help with the right setup. These are great opportunities to gain visibility for example for existing MVPs, for community members who would like to be MVPs in the future or any community member who\u0026rsquo;d like to share some of their learnings.  Microsoft 365 Community (PnP) Ecosystem in GitHub Most of the community driven repositories are in the PnP GitHub organization as samples are not product specifics as they can contain numerous different solutions or the solution works in multiple different applications.\n  Microsoft Graph Toolkit - Repository and project on Microsoft Graph Toolkit controls - welcomes community contributors\n  PnPjs - PnPjs Framework repository\n  CLI Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings\n  generator-spfx - Open-source Yeoman generator which extends the out-of-the-box Yeoman generator for SharePoint with additional capabilities\n  generator-teams - Open-source Microsoft Teams Yeoman generator - Bots, Messaging Extensions, Tabs, Connectors, Outgoing Web hooks and more\n  teams-dev-samples - Microsoft Teams targeted samples from community and Microsoft engineering\n  script-samples - Scripting samples for automating operations in Microsoft 365 with PowerShell modules or CLIs\n  Sharing is Caring - Getting started on learning how to contribute and be active on the community from GitHub perspective.\n  pnpcore - The PnP Core SDK is an SDK designed to work against Microsoft 365 with Microsoft Graph API first approach\n  powershell - PnP PowerShell module which is PowerShell Core module targeted for Microsoft 365\n  pnpframework - PnP Framework is a .Net Standard 2.0 library targeting Microsoft 365 containing the PnP Provisioning engine and a ton of other useful extensions\n  spfx-reference-scenarios - Samples for the Microsoft Teams and Viva Connections, implemented using SharePoint Framework\n  sp-dev-fx-aces - Samples on the Adaptive Card Extensions for Microsoft Viva\n  sp-dev-fx-webparts - Client-side web part samples from community and Microsoft engineering\n  sp-dev-fx-extensions - Samples and tutorial code around SharePoint Framework Extensions\n  sp-dev-fx-library-components - Samples and tutorial code around the SharePoint Framework library components\n  sp-starter-kit - Starter kit solution for SharePoint modern experiences\n  sp-dev-build-extensions - Different build extensions like gulp tasks and gulp plugins from the community and engineering around SharePoint development\n  sp-dev-solutions - Repository for more polished and fine-tuned reusable solutions build with SharePoint Framework\n  sp-dev-samples - Repository for other samples related on the SharePoint development topics - WebHooks etc.\n  sp-dev-fx-controls-react - Reusable content controls for SharePoint Framework solutions build with React\n  sp-dev-fx-property-controls - Reusable property pane controls to be used in web parts\n  list-formatting - Open-source community-driven repository for the column and view formatting JSON definitions\n  sp-dev-site-scripts - Open-source community-driven repository for community Site Designs and Site Scripts\n  sp-dev-modernization - Tooling and guidance around modernizing SharePoint from classic to modern\n  sp-power-platform-solutions - Solution and sample code for SharePoint Power Platform solutions\n  powerfx-samples - Samples that demonstrate different usage patterns for the Power Fx low-code programming language\\\n  powerapps-samples - Samples that demonstrate different usage patterns for Power Apps\n  powerautomate-samples - Samples that demonstrate different usage patterns for Power Automate\n  powerva-samples - Samples that demonstrate different usage patterns for Power Virtual Agents\n  AdaptiveCards-Templates - Samples on showcasing the art of possible with adaptive cards All SharePoint specific repositories or services supported directly by Microsoft are located in the SharePoint GitHub organization\n\\\n  sp-dev-docs - Source for new SharePoint dev center documentation exposed from http://docs.microsoft.com/sharepoint/dev\n  sp-dev-provisioning-templates - Open-source templates used by the SharePoint Look Book site\n  sp-provisioning-service - Source code of the SharePoint look book site Classic PnP named repositories - older tooling\n  PnP-Tools - Tools and scripts targeted more for IT Pro\u0026rsquo;s and for on-premises for SP2013 and SP2016\n  PnP-Provisioning-Schema - PnP Provisioning engine schema repository Repositories in the GitHub Microsoft Search organization controlled by the PnP initiative\n  pnp-modern-search - Home of PnP Modern Search solutions, see more from the documentation Other related resources from GitHub\n  Office add-in Patterns and Practices in GitHub - Community contributions welcome!\n  Microsoft Graph GitHub organization\n  OfficeDev GitHub organization - Includes all Microsoft Teams samples from Microsoft\n  What\u0026rsquo;s supportability story around the community tooling and assets? Following statements apply across all of the community lead and contributed samples and solutions, including samples, core component(s) and solutions, like SharePoint Starter Kit, yo teams or PnP PowerShell. All Microsoft released SDKs and tools are supported based on the specific tool policies.\n PnP guidance and samples are created by Microsoft \u0026amp; by the Community PnP guidance and samples are maintained by Microsoft \u0026amp; community PnP uses supported and recommended techniques PnP is an open-source initiative by the community \u0026ndash; people who work on the initiative for the benefit of others, have their normal day job as well PnP is NOT a product and therefore it\u0026rsquo;s not supported by Premier Support or other official support channels PnP is supported in similar ways as other open source projects done by Microsoft with support from the community by the community There are numerous partners that utilize PnP within their solutions for customers. Support for this is provided by the Partner. When PnP material is used in deployments, we recommend being clear with your customer/deployment owner on the support model Please see the specifics on the supportability on the tool, SDK or component repository or download page.  Microsoft 365 PnP team model    In April 2020 we announced our new Microsoft 365 PnP team model and grew the MVP team quite significantly. PnP model exists for having more efficient engagement between Microsoft engineering and community members. Let\u0026rsquo;s build things together. Your contributions and feedback is always welcome! During August, we also crew the team with 5 new members. PnP Team coordinates and leads the different open-source and community efforts we execute in the Microsoft 365 platform. We welcome all community members to get involved on the community and open-source efforts. Your input do matter!\n New Microsoft 365 Patterns and Practices (PnP) team members \u0026ndash; November 2021 - Geetha Sivasailam (Artis Consulting) | @GSiVed, Natalie Pienkowska (Microsoft) | @NataliePienkow1, Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp, João J. Mendes (Valo) | joaojmendes, Joel Rodrigues (Storm Technology) | @JoelFMRodrigues, Rick Van Rousselt (Advantive) | @RickVanRousselt, Stephan Bisser (Solvion) | @stephanbisser, Tetsuya Kawahara | @techan_k, and Thomas Gölles (Solvion) | @thomyg New Microsoft 365 Patterns and Practices (PnP) team members - May 2021 - Gautam Sheth (Valo) and Patrick Lamber (Experts Inside AG) New Microsoft 365 Patterns and Practices (PnP) team members - February 2021 - April Dunnam (Microsoft), Emily Mancini (Sympraxis Consulting) and Veronique Lengelle (CPS) New Microsoft 365 Patterns and Practices (PnP) team members - December 2020 - Luise Freese and Sébastien Levert  New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 - Albert-Jan Schot (BLIS Digital), Koen Zomers (Microsoft), Paul Bullock (CaPa Creative), Rabia Williams (Microsoft) and Yannick Plenevaux (PVX Solutions) Got feedback, suggestions or ideas? - Please let us know. Everything we do in this program is for your benefit. Feedback and ideas are more than welcome so that we can adjust the process for benefitting you even more.   Microsoft 365 PnP Recognition Program    We are excited to announce new community contributor program for all the active community members. Through this program you can get officially acknowledged with the a Credly badge around your work on our open-source and community channels. See more from\nhttps://aka.ms/m365pnp-recognition. Thank you for being part of this journey with us.\n⚙ Area-specific updates These are different areas which are closely involved on the community work across the PnP initiative. Some are lead and coordinated by engineering organizations, some are coordinated by the community and MVPs.\nMicrosoft Graph Toolkit    Microsoft Graph Toolkit is engineering lead initiative, which works closely with the community on the open-source areas. The Microsoft Graph Toolkit is a collection of reusable, framework-agnostic web components and helpers for accessing and working with Microsoft Graph. The components are fully functional right of out of the box, with built in providers that authenticate with and fetch data from Microsoft Graph.\n Latest version currently is 2.3.1 See the v2.3 announcement blog post for more details - Announcing a new Microsoft Teams authentication provider and file upload feature in the Microsoft Gr... mgt.dev - Microsoft Graph Toolkit Playground Getting started with Microsoft Graph Toolkit guidance video from developer community call by Beth Pan (Microsoft) Latest code and preview versions from https://aka.ms/mgt All the latest updates on the Microsoft Graph Toolkit is being presented in our bi-weekly Microsoft 365 Generic Dev community call, including the latest community contributors.  Microsoft 365 Community docs    Community docs model was announced in the April 2020 and it\u0026rsquo;s great to see the interest for community to help each other by providing new guidance on the non-dev areas. See more on the announcement from the SharePoint blog - Announcing the Microsoft 365 Community Docs. We do welcome contributions from the community - our objective is to build a valuable location for articles from Microsoft and community together.\nNew articles\n  Advanced Highlighted Content Web Part - Patrick Doran (NCDIT) | @swearpointjs Have ideas for articles or want to contribute yourself? - Get involved! Here are also some additional resources explaining the model more detailed.\n  YouTube - Introducing Microsoft 365 Community Docs\n  GitHub issue list with articles ideas\n  SharePoint Framework development samples    These are the updated SharePoint Framework samples which are available from the different repositories.\n New sample react-taxonomy-file-explorer by Markus Möller (Avanade) | @Moeller2_0, that renders a given termset as a tree and incorporates files similar than a folder structure in file explorer. Updated sample react-calendar by Mohammad Amer (Atea Global Services) | @Mohammad3mer Updated sample ImageCard-TodaysLunch by Giuliano De Luca | @delucagiulian Updated sample react-quotes by Yves Habersaat (Sword Group) | @yhabersaat Updated sample react-my-teams by Yves Habersaat (Sword Group) | @yhabersaat Updated sample react-advanced-page-properties by Abderahman Moujahid | Abderahman88 Other adjustments to numerous samples by our awesome community members! How to find what\u0026rsquo;s relevant for you? Take advantage of our SharePoint Framework web part and extension sample galleries - also includes solutions which work in Microsoft Teams Web Part sample gallery - http://aka.ms/spfx-webparts Extensions sample gallery - http://aka.ms/spfx-extensions Viva Connections Adaptive Card samples - http://aka.ms/spfx-aces Microsoft Teams samples build with SharePoint Framework - https://github.com/pnp/spfx-teams - These will be relocated soon  Microsoft Teams community samples    These are samples which have been contributed on the community samples since last summary. We do welcome all Microsoft Teams samples to this gallery. They can be implemented using in any technology.\n Numerous adjustments on existing samples and solutions If you are interested on Microsoft Teams samples, we have just released also new Microsoft Teams sample gallery. Contributions to Microsoft Teams samples is also more than welcome. This gallery already surfaces all Microsoft samples, Microsoft Teams app templates and community samples.  Power Platform samples     New PowerFX sample table-functions by Bartolomeo Sorrentino (soulsoftware) | @bsorrentinoJ that allows to transform a Record in a Table New Power Apps sample covid-vaccine-survey by Siddharth Vaghasia | @siddh_me, that enables companies to collect surveys (data) on the vaccination status of their employees New Power Automate sample new-employee-tip-of-the-day by Adam Wójcik (Hitachi Energy) | @Adam2585878 that improves onboarding experience  There was also numerous smaller updates on the different Power Platforms samples. See more details on available samples from following location\n Power Platform sample gallery - https://aka.ms/powerplatform-samples If you have any existing samples which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative. Here to help.  Microsoft 365 Script Samples    We have released new Microsoft 365 Script Sample gallery within past month. We welcome all scripts on Microsoft 365 automation to this centralized repository, targeted to help to manage and automate day-to-day operations. Here are the latest updates on the Script Samples\n   New Inventory Guest Sign-In Activity with CLI for M365 and Microsoft Graph by Pete Skelly (ThreeWill, LLC) | @pskelly\n   New List guests within Teams in a tenant by Jiten Palmer | @Jitenpa44241205\n   New Add Large List items to PnP Template by Jiten Palmer | @Jitenpa44241205\n   New Collect and export Teams templates by Rodrigo Pinto (Storm Technology) | @ScoutmanPt\n   Updated Improved reporting\\performance on clone team operation by Rodrigo Pinto (Storm Technology) | @ScoutmanPt\n   New Create a Teams based on a existing team template by Rodrigo Pinto (Storm Technology) | @ScoutmanPt\n   New Delete a library exceeding the list threshold limit by Reshmee Auckloo | @reshmeeauckloo\n   New Create bulk dummy documents, including minor/major versions, in SharePoint Document library by Kasper Bo Larsen (Fellowmind Denmark) | @kasperbolarsen\n   New Export a csv report on all Microsoft Stream videos by Rodrigo Pinto (Storm Technology) | @ScoutmanPt\n   New Run jobs in parallel using ForEach-Object -Parallel to iterate SharePoint site collections by Kasper Bo Larsen (Fellowmind Denmark) | @kasperbolarsen If you have any existing scripts which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative.   Microsoft 365 Script Samples - https://aka.ms/script-samples Independent Connectors Program   Microsoft Power Platform comes with a huge variety of already built-in connectors and also provides you with the ability of creating your own custom connectors. As of July 2021, anyone can submit the connectors they built to Microsoft Power Platform so that they can be used by others as well. Previously, only API owners could publish their connectors. The Independent Publisher Connector Program\u0026rsquo;s mission is to bring the best together: the best people, connecting great ideas to data, apps, and flows. We want to make it easier for connector developers to collaborate on connectors. For more information, you can watch this video on Publish a connector to the Publish a connector to the Power Platform with Independent Publisher Connector Program gram and check out Microsoft Power Platform Connectors on GitHub These are the latest connectors:   Accuweather - Ahmad Najjar (Infoworker) | @ahmadn82\n  Bronnoysundregistrene - Ahmad Najjar (Infoworker) | @ahmadn82\n  OpenCage Geocoding - Ahmad Najjar (Infoworker) | @ahmadn82\n  Yelp - Ahmad Najjar (Infoworker) | @ahmadn82\n  ORB Intelligence - Ankita Singh and Aaryan Arora\n  Notion - Chandra Sekhar \u0026amp; Harshini Varma (Capgemini) | @HarshiniVarmaa\n  Spotify - Daniel Laskewitz (Sogeti) | @laskewitz\n  Toggl Plan - Daniel Laskewitz (Sogeti) | @laskewitz\n  Discord - Daniel Laskewitz (Sogeti) | @laskewitz \u0026amp; Michal Guzowski (Developico) | @abcguzowski\n  ClickUp Team Manager \u0026ndash; Duke DeVan (Hitachi Solutions) | @AyoSurice\n  Dexcom - Joe Unwin (Hitachi Solutions) | @Flow_Joe\n  Weather Forecast - Haimantika Mitra (Microsoft) | @HaimantikaM\n  Carbon Intensity \u0026ndash; Hasan Unlu\n  LibreBor - Mario Trueba (KPMG) | @ mariotrueba365 \u0026amp; Marco Amoedo (KPMG)| @marcoamoedo\n  CQC - Martyn Lesbirel (Dynamiti)\n  UK Government Bank Holidays - Martyn Lesbirel (Dynamiti) |\n  What3Words - Matt Beard (Data8) | @mattybeard\n  FreeAgent - Nirmal| @Nirmal_kumar\n  ITGlue - Nirmal | @Nirmal_kumar\n  Jira Search- Paul Culmsee (Seven Sigma) | @paulculmsee\n  Coinbase \u0026ndash; Roy Paar (Microsoft)\n  Microsoft D365CE v9 OnPrem - Roy Paar (Microsoft)\n  New York Times - Roy Paar (Microsoft)\n  The Weather Channel - Roy Paar (Microsoft)\n  GoQR - Rui Santos (Microsoft)\n  myStrom - Tomasz Poszytek| @TomaszPoszytek\n  Clearbit - Troy Taylor (Hitachi Solutions) | troystaylor\n  EONET by NASA - Troy Taylor (Hitachi Solutions) | troystaylor\n  Etsy - Troy Taylor (Hitachi Solutions) | troystaylor\n  Federal Reserve Economic Data - Troy Taylor (Hitachi Solutions) | troystaylor\n  Hashify - Troy Taylor (Hitachi Solutions) | troystaylor\n  HubSpot CMS - Troy Taylor (Hitachi Solutions) | troystaylor\n  HubSpot CRM - Troy Taylor (Hitachi Solutions) | troystaylor\n  HubSpot Marketing - Troy Taylor (Hitachi Solutions) | troystaylor\n  Launch Library 2 - Troy Taylor (Hitachi Solutions) | troystaylor\n  Loripsum - Troy Taylor (Hitachi Solutions) | troystaylor\n  Mailbox Validator - Troy Taylor (Hitachi Solutions) | troystaylor\n  Secure Code Warrior - Troy Taylor (Hitachi Solutions) | troystaylor\n  SpaceX - Troy Taylor (Hitachi Solutions) | troystaylor\n  Unix Timestamp- Troy Taylor (Hitachi Solutions) | troystaylor\n  Airtable \u0026ndash; Woong Choi (Seven Sigma)\n  Sharing is Caring initiative    The \u0026ldquo;Sharing Is Caring\u0026rdquo; imitative is targeted for learning the basics around making changes in Microsoft Docs, in GitHub, submitting pull requests to the PnP repositories and in GitHub in general. Take advantage of this instructor lead training for learning how to contribute to docs or to open-source solutions. Everyone is welcome to learn how to get started on contributing to open-source docs or code!\n See more from the guidance documentation - including all upcoming instructor lead sessions which you can participate!  ✍ Different Microsoft 365 related open-source initiatives build together with the community See exact details on the latest updates from the specific open-source project release notes. You can also follow up on the project updates from our community calls. There are numerous active projects which are releasing new versions with the community even on weekly basis. Get involved!\n Microsoft Look Book - Discover the modern experiences you can build with SharePoint in Microsoft 365. Look book provides design examples for SharePoint Online which can be automatically provisioned to any tenant in the world. See more from https://lookbook.microsoft.com. This service is also provided as open-source solution sample from GitHub. yo teams - Open-source Yeoman generator for Microsoft Teams extensibility. Supports creation of bots, messaging extensions, tabs (with SSO), connectors and outgoing Webhooks. See more from https://aka.ms/yoteams. PnP Framework - .NET Standard 2.0 SDK containing the classic PnP Sites Core features for SharePoint Online. More around this package from GitHub. PnP Core SDK - The PnP Core SDK is an SDK designed to work for Microsoft 365 with Graph API first approach. It provides a unified object model for working with SharePoint Online and Teams which is agnostic to the underlying API\u0026rsquo;s being called. See more around the SDK from documentation. PnP PowerShell - PnP PowerShell is a .NET Core 3.1 / .NET Framework 4.6.1 based PowerShell Module providing over 400 cmdlets that work with Microsoft 365 environments and more specifically SharePoint Online and Microsoft Teams. See more details from documentation. Reusable SharePoint Framework controls - Reusable controls for SharePoint Framework web part and extension development. Separate projects for React content controls and Property Pane controls for web parts. These controls are using Office UI Fabric React controls under the covers and they are SharePoint aware to increase the productivity of developers. CLI for Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings. See release notes for latest updates.  PnPJs - PnPJs encapsulates SharePoint REST APIs and provides a fluent and easily usable interface for querying data from SharePoint sites. It\u0026rsquo;s a replacement of already deprecated pnp-js-core library. See changelog for the latest updates. PnP Provisioning Engine and PnP CSOM Core - PnP provisioning engine is part of the PnP CSOM extension. They encapsulate complex business driven operations behind easily usable API surface, which extends out-of-the-box CSOM NuGet packages. See changelog for the latest updates. PnP PowerShell - PnP PowerShell cmdlets are open-source complement for the SharePoint Online cmdlets. There are more than 300 different cmdlets to use and you can use them to manage tenant settings or to manipulate actual SharePoint sites. They See changelog for the latest updates. PnP Modern Search solution - The PnP \u0026lsquo;Modern Search\u0026rsquo; solution is a set of SharePoint Online modern Web Parts allowing SharePoint super users, webmasters and developers to create highly flexible and personalized search based experiences in minutes. See more details on the different supported capabilities from https://aka.ms/pnp-search. Modernization tooling - All tools and guidance on helping you to transform you SharePoint to modern experiences from http://aka.ms/sppnp-modernize. SharePoint Starter Kit v2 - Building modern experiences with Microsoft Teams flavors for SharePoint Online and SharePoint 2019 - reference solution in GitHub. List formatting definitions - Community contributed samples around the column and view formatting in GitHub. Site Designs and Site Scripts - Community contributed samples around SharePoint Site Designs and Site Scripts in GitHub. **DevOps tooling and scripts **- Community contributed scripts and tooling automation around DevOps topics (CI/CD) in GitHub. Teams provisioning solution - Set of open-source Azure Functions for Microsoft Teams provisioning. See more details from GitHub.  ✍ Documentation updates Please see all the Microsoft 365 development documentation updates from the related documentation sets and repositories as listed below:\n Microsoft Teams platform documentation - Microsoft Docs | GitHub SharePoint Developer documentation - Microsoft Docs | GitHub Microsoft Graph documentation - Microsoft Docs | GitHub Office add-in documentation - Microsoft Docs | GitHub  Microsoft 365 Developer and Microsoft 365 Community YouTube video channels You can find all Microsoft 365 related videos on our YouTube Channel at http://aka.ms/m365pnp/videos or at Microsoft 365 Dev. These channels contains already a significant amount of detailed training material, demo videos, and community call recordings. Here are the new Microsoft demo or guidance videos released since the last monthly summary:\n Student Ambassador shows survey solution built with Power Platform and Microsoft Teams - Ayca Bas (Microsoft)- @aycabs, Lee Stott (Microsoft) | @Lee_Stott, Japhlet Nwamu (Microsoft) | @japhletnwamu Community demos as following:  Using inline editing with list formatting \u0026ndash; inlineEditField attribute - Chris Kent (DMI) | @theChrisKent Updates on Independent Publisher Connectors \u0026amp; Notion Connector Demo - Natalie Pienkowska (Microsoft) | @NataliePienkow1 and Harshini Varma (Capgemini) | @HarshiniVarmaa and Chandra Sekhar Malla (Royal Group LLC) | @ChandraSMalla Introduction to the Microsoft 365 developer program and to the instant development environment - Vesa Juvonen (Microsoft) | @vesajuvonen Building Xbox games with Power Apps - Brian Dang (Microsoft) | @mrdang Discover the Microsoft Graph Toolkit -Sébastien Levert (Microsoft) | @SebastienLevert Outlook: Microsoft Ignite 2021 recap on the latest announcements - Juan Balmori Labra, Principal Program Manager (Microsoft) | @juaneloBalmor Getting started with using PnP Search Web Parts v4 - Mikael Svenson (Microsoft) | @mikaelsvenson and Franck Cornu | @FranckCornu Introduction to HtwoO React library \u0026ndash; Fluent UI experiences easily - Julie Turner (Sympraxis Consulting) | @jfj1997  Key contributors to the January 2021 update Here\u0026rsquo;s the list of active contributors (in alphabetical order) since last release details in GitHub repositories or community channels. PnP is really about building tooling and knowledge together with the community for the community, so your contributions are highly valued across the Microsoft 365 customers, partners and obviously also at Microsoft. Thank you for your assistance and contributions on behalf of the community. You are truly making a difference! If we missed someone, please let us know.\n  Abderahman Moujahid - Abderahman88\n  Adam Wójcik (Hitachi Energy) | @Adam2585878\n  Aimery Thomas | @aimery_thomas\n  Albert-Jan Schot (BLIS Digital) | @appieschot\n  André Lage (Datalynx AG) | @aaclage\n  Andrew Burns (AmSty) | @SharePointRox\n  Andrew Connell (Voitanos) | @andrewconnell\n  Andy Harmon (Oldham Metropolitan Borough Council) | @andygharmon\n  Anoop Tatti (Content+Cloud) | @anooptells\n  Antti Pajunen (Forward Forever) | @anttipajunen\n  Aric Bost (North Carolina Housing Finance Agency) | @1CyberState\n  Arjun Menon (Tata Consulting Services) | @arjunumenon\n  Asad Refai (Intelogy) | @asadrefai\n  Bartolomeo Sorrentino (soulsoftware) | @bsorrentinoJ\n  Beau Cameron (Aerie Consulting) | @Beau__Cameron\n  Carmen Ysewijn (Qubix) | @carmenysewijn\n  Chandani Prajapati (Rapid Circle) | @Chandani_SPD\n  Chandra Sekhar Malla (Royal Group LLC) | @ChandraSMall\n  Chris Kent (DMI) | @theChrisKent\n  Christopher Graves (Arvato) | @Christo48927551\n  Daniel Laskewitz (Sogeti) | @laskewitz\n  Daniel Westerdale (Westerdale Solutions Ltd) | @westerdaled\n  Danish Shafi | @builtbydan\n  David Warner II (Catapult) | @DavidWarnerII\n  Derek Cash Peterson (Sympraxis Consulting) | @spdcp\n  Dipen Shah (Rapid Circle) | @Dips_365\n  Elio Struyf (Struyf Consulting) | @eliostruyf\n  Emily Mancini (Sympraxis Consulting) | @EEMancini\n  Eric Overfield (PixelMill) | @EricOverfield\n  Erwin van Hunen (Valo Intranet) | @erwinvanhunen   Franck Cornu | @FranckCornu\n  Gautam Sheth (Valo Solutions) | @gautamdsheth\n  Geetha Sivasailam (Artis Consulting) | @GSiVed\n  Giuliano De Luca | @delucagiulian\n  Harshini Varma (Capgemini) | @HarshiniVarmaa\n  Japhlet Nwamu (Microsoft) | @japhletnwamu\n  Jasey Waegebaert (MI group) | Jwaegebaert\n  Jiten Palmer | @Jitenpa44241205\n  João Ferreira | @joaoferreira\n  João J. Mendes (Valo Solutions) | @joaojmendes\n  Joel Rodrigues (Storm Technology) | @JoelFMRodrigues\n  Jono Duncan (JourneyTEAM) | @SuaveJono\n  Julie Turner (Sympraxis Consulting) | @jfj1997\n  Kasper Bo Larsen (Fellowmind Denmark) | @kasperbolarsen\n  Kathleen Boilek (Alaka\u0026rsquo;ina Foundation) | @kaboilek\n  Kevin McDonnell (CPS) | @kevmcdonk\n  Lance Yoder (Cerner) | @lyoder\n  Laura Kokkarinen (Sulava) | @LauraKokkarinen\n  Lee Stott (Microsoft) | @Lee_Stott\n  Lindsay Shelton (Stowers Institute for Medical Research) | @lshelton_tech\n  Loïc Cimon (Sogeti) | @LoicCimon\n  Luise Freese (M365Princess) | @LuiseFreese\n  Marc Anderson, Sympraxis Consulting | @sympmarc\n  Markus Möller (Avanade) | @Moeller2_0\n  Matt Beard (Data8) | @mattybeard\n  Michal Guzowski (Developico) | @abcguzowski\n  Mike Dumka (Habanero Consulting) | @mikedumka\n  Mohammad Amer (Atea Global Services) | @Mohammad3mer\n  Nanddeep Nachan | @NanddeepNachan   Nikki Chapple (NTT Cloud Communications) | @chapplenikki\n  Paolo Pialorsi (PiaSys.com) | @PaoloPia\n  Patrick Doran (NCDIT) | @swearpointjs\n  Patrik Hellgren (Sherpas Group) | @patrikhellgren\n  Patrick Lamber (ExpertsInside AG) | @patricklamber\n  Paul Bullock (CPS) | @pkbullock\n  Paul Culmsee (Seven Sigma) | @paulculmsee\n  Paul Schaeflein (AddIn365) - @paulschaeflein\n  Pedro Monte (BindTuning) | PedroMordeP\n  Pete Skelly (ThreeWill ) | @pskelly\n  Phil McNiven | phil0074\n  Ralph Rivas (Sogeti) | @bigpix2000\n  Reshmee Auckloo | @reshmeeauckloo\n  Rick Van Rousselt (Advantive) | @RickVanRousselt\n  Robert Dyjas (EQTek) | @Robdy\n  Rodrigo Pinto (Storm Technology) | @ScoutmanPt\n  Russell Gove (tronox) | @russgove\n  Sekar Thangavel (IBM) | SekarThangavel\n  Sergei Sergeev | @sergeev_srg\n  Siddharth Vaghasia | @siddh_me\n  Someleze Diko | @DikoSomeleze\n  Stefan Bauer (n8d) | @StfBauer\n  Stephan Bisser (Solvion) | @stephanbisser\n  Tetsuya Kawahara | @techan_k\n  Thomas Gölles (Solvion) | @thomyg\n  Todd Baginski (Canviz) - @toddbaginski\n  Tomasz Poszytek | @TomaszPoszytek\n  Veronique Lengelle (CPS) | @veronicageek\n  Vipul Kelkar (Rapid Circle) | @vipulkelkar\n  Yannick Plenevaux (PVX Solutions) | @yp_code\n  Yves Habersaat (Sword Group) | @yhabersaat\n  Companies: Here\u0026rsquo;s the companies, which provided support the community initiative for this month by allowing their employees working for the benefit of others in the community. There were also people who contributed from other companies during last month, but we did not get their logos and approval to show them in time for these communications. If you still want your logo for this month\u0026rsquo;s release, please let us know and share the logo with us. Thx.\n    Addin365 Arvo Systems BLIS Digital Canviz Solutions Catapult Systems ClearPeople CPS Content+Cloud DMI Fellowmind Intelogy N8D NTT Digital Business Solutions Piasys PixelMill Pramerica PVX Solutions Qubix Rapid Circle Sherpas Solvion Sogeti Storm Technology Struyf Consulting Sulava Sympraxis Consulting ThreeWill Valo Voitanos\n\\  Microsoft people: Here\u0026rsquo;s the list of Microsoft people who have been closely involved with the PnP work during last month.\n Aakash Bhardwaj (Microsoft) | @aakash_316 Alex Terentiev | @alexaterentiev Aline Tognini - alinefmr Allen Snow - @asnow003 Andrey Esipov (Microsoft) April Dunnam (Microsoft) | @aprildunnam Arijit Mondal (Microsoft) Ayca Bas (Microsoft)- @aycabs +Bert Jansen (Microsoft) | @O365Bert Beth Pan - @beth_panx Beverly Kim - bvandaal +Bob German (Microsoft) | @Bob1German Brian Dang (Microsoft) | @mrdang Brian Jackett (Microsoft) | @BrianTJackett Bryan Petersen - petey121175 Cathy Dew (Microsoft) | @catpaint Charles Sterling - @chass Christer Ljung (Microsoft) Dan Wahlin | @DanWahlin David Chesnut (Microsoft) | @davidchesnut Doğan Erişen - derisen Dragan Panjkov | @panjkov Ed Averett | @Ed_Averett Emily Lynam (Microsoft) Elizabeth Samuel - ElizabethSamuel-MSFT Garry Trinder (Microsoft) | @garrytrinder Haimantika Mitra (Microsoft) | @HaimantikaM Holger Lutz - HolgerLutz +Hugo Bernier (Microsoft) | @bernier Igor Ribeiro (Microsoft) James Eccles - jameseccles Japhlet Nwamu (Microsoft) | @japhletnwamu Jasmine Hoegh (Microsoft) | @sbjishu Jason Johnston - jasonjoh John Nguyen - johnguy0 John Sudds | @jsuddsjr Jos Verlinde - Josverl Jyoti Pal (Microsoft) Kevin Coughlin - @kevintcoughlin Keyur Patel - keyur32 Koen Zomers | @koenzomers Holland Kaviani - Holland-ODSP Laura Graham - Lauragra Linda Lu Cannon - lindalu-MSFT Loki Meyburg (Microsoft)- @lokimeyburg Luca Bandinelli - lucaband Mathangi Chakrapani (Microsoft) Matthijs Hoekstra | @mahoekst Max Kulakov (Microsoft) Michael Aldridge (Microsoft) Mikael Svenson | @mikaelsvenson Natalie Pienkowska | @NataliePienkow1 Natalie Pienkowska - NataliePienkow1 Nik Charlebois (Microsoft) | @NikCharlebois Nicolas Vogt - vogtn Niko | NikoMix Nikola Metulev - @metulev Orion O\u0026rsquo;Malley (Microsoft) Pam Green (Microsoft) | @contextuallib Parag Jain (Microsoft) Pat Miller - @PatMill_MSFT Patrick Rodgers | @mediocrebowler Rabia Williams (Microsoft) | @williamsrabia Richard Astbury (Microsoft) | @richorama Rick Kirkham | Rick-Kirkham Roy Paar Rui Santos  Sam Larson | salarson Shane Weaver | shweaver-MSFT  +Shreyansh Agrawal (Microsoft) Sébastien Levert | @sebastienlevert Srinivas Varukala (Microsoft) | @svarukala Steven Jia | Steven-Jia Shubham Gatkal (Microsoft) Tejas Mehta | @tpmehta Tom Resing | @resing Tomomi Imura (Microsoft) | @girlie_mac Vesa Juvonen (Microsoft) | @vesajuvonen Wajeed Shaikh | Wajeed-msft +Waldek Mastykarz (Microsoft) | @waldekm Wictor Wilen | @wictor Vincent Biret (Microsoft) | @baywet   MVP Community team MVP Community team (PnP Team) manages the PnP community work in the GitHub and also coordinates different open-source projects around Microsoft 365 topics. PnP Team members have a significant impact on driving adoption of Microsoft 365 topics. They have shown their commitment to the open-source and community-driven work by constantly contributing to the benefit of the others in the community. Thank you for all that you do!\n Albert-Jan Schot (BLIS Digital) | @appieschot Andrew Connell (Voitanos) | @andrewconnell Andrew Koltyakov (ARVO Systems) | @andrewkoltyakov Beau Cameron (Aerie Consulting) | @Beau__Cameron Chris Kent (DMI) | @theChrisKent David Warner II (Catapult) | @DavidWarnerII +Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp Elio Struyf (Struyf Consulting) | @eliostruyf Emily Mancini (Sympraxis Consulting) | @EEMancini Eric Overfield (PixelMill) | @EricOverfield +Erwin van Hunen (Valo Intranet) | @erwinvanhunen  Gautam Sheth (Valo Solutions) | @gautamdsheth Geetha Sivasailam (Artis Consulting) | @GSiVed João J. Mendes (Valo Solutions) | joaojmendes Joel Rodrigues (Storm Technology) | @JoelFMRodrigues +Julie Turner (Sympraxis Consulting) | @jfj1997 Laura Kokkarinen (Sulava) | @LauraKokkarinen Luise Freese | @LuiseFreese Marc D Anderson (Sympraxis Consulting) | @sympmarc Paolo Pialorsi (Piasys.com) | @PaoloPia Patrick Lamber (Expertsinside AG) | @patricklamber Paul Bullock (CPS) | @pkbullock Rick Van Rousselt (Advantive) | @RickVanRousselt Stefan Bauer (n8d) | @StfBauer Stephan Bisser (Solvion) | @stephanbisser Tetsuya Kawahara | @techan_k Thomas Gölles (Solvion) | @thomyg Velin Georgiev (Pramerica) | @velingeorgiev Veronique Lengelle (CPS) | @veronicageek Yannick Plenevaux (PVX Solutions) | @yp_code Here are the Microsoft Internal PnP Core team members: Alex Terentiev | @alexaterentiev April Dunnam | @aprildunnam Bert Jansen | @O365Bert Bob German | @Bob1German Garry Trinder | garrytrinder Hugo Bernier | @bernierh Koen Zomers | @koenzomers Mikael Svenson | @MikaelSvenson Natalie Pienkowska | @NataliePienkow1 Patrick Rodgers | @mediocrebowler Rabia Williams | rabwill Sébastien Levert | sebastienlevert Vesa Juvonen | @vesajuvonen Waldek Mastykarz | @waldekm Wictor Wilen | @wictor  Next steps See all of the available community calls, tools, components and other assets from https://aka.ms/m365pnp. Get involved! Got ideas or feedback on the topics to cover, additional partnerships, product feature capabilities? - let us know. Your input is important for us, so that we can support your journey in Microsoft 365. \u0026ldquo;Sharing is caring!\u0026rdquo;\n Microsoft 365 Community (PnP) \u0026ndash; January 13th 2021\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-january-2022-update/images/pnp-january-2022-update_hu10705e42d53e327eaae5f84bebb20b40_551926_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-january-2022-update/","tags":[],"title":"Microsoft 365 PnP Community -- January 2022 update"},{"categories":["Community post"],"contents":"I recently learned how to work with APIs and the different methods to call them. I started with a straight forward example that\u0026rsquo;s not too complex. I used an open API (that means I don\u0026rsquo;t need authentication for my request) to get the number of the day from a website called MathTOOLS. I want this number of the day to be posted as a chat message in Microsoft Teams.\nLet\u0026rsquo;s start with some theory first\nWhat\u0026rsquo;s an API? API is an acronym for Application Programming Interface and they allow applications to communicate with each other and exchange data. An API lists operations that it can perform and which you can use, if you know how to trigger them. Usually the operations are...\n GET(read) POST(write) PUT(update) PATCH(update, but only partially) DELETE(remove)  How to address APIs? An API is an interface that you can call and communicate with. You can perform different operations, like getting data, writing things, and so on. But you need to know the correct language, that the API will understand, you need to know the correct direct dial and You need to know what to tell the API to make it do what you want it to do. The language you need is HTTP, which is an acronym for Hypertext Transfer Protocol.\nIf the browser on your computer wants to communicate with a server somewhere on the world, it sends an HTTP request (it asks politely) and when we did everything in the right way, we will get a polite answer, an HTTP response.\nAn HTTP request gives us the ability to communicate with an API. So much for the theory, now let\u0026rsquo;s get our hands dirty 👏 and let\u0026rsquo;s see how it looks in Power Automate.\nHTTP request As I mentioned earlier an HTTP request consists of a view things. We will need a...\n Method URL Headers and a body     Method Luckily we know the methods already.\n Method Action GET read PUT update POST write PATCH update partially DELETE remove\n In this use case we want to get the number of the day, so we choose the GET method.\nURL Now for the URL we need to know the URL (kind of obvious, isn\u0026rsquo;t it of the service we want to address. But not only that, we will also need the endpoint. This is something like the direct call, putting you to that exact point that you want. Usually an API will tell you how the endpoint looks:\n   The endpoint of the website MathTOOLS is `https://api.math.tools`, but if we read carefully (I usually struggle with that), we get more details for the API of the number of the day:\n   The endpoint for the number of the day is `https://api.math.tools/numbers/nod`. The API documentation even provides us with the information of how the HTTP response will look like:\n   It\u0026rsquo;s a very long JSON object (if you want to get started with JSON, I recommend the amazing blog from Bob German Introduction to JSON.\nBut let\u0026rsquo;s stay at our HTTP request in Power Automate. We know the Method, we know the URL and we know that we don\u0026rsquo;t need any authentication. That means we can fill out all mandatory fields in that flow action and it looks like this:\n   Let\u0026rsquo;s run this flow on a daily basis and see what the result looks like:\n   (Since you can hardly see the result, I paste the body here once again)\n   And that\u0026rsquo;s it, we used an HTTP request to GET information from a API. Now for the last part of this blog, we want to use some information from this result to be posted in a chat in Teams.\nUse a certain information from a JSON object in a chat message\nNow it would make a lot of sense, if we cover the question, how to use a certain information from that JSON object in, let\u0026rsquo;s say a chat message, right?\nLet\u0026rsquo;s say, we want to post the number of the day in a daily Microsoft Teams chat. We need just two steps for that:\n  put the information of that JSON file in a variable, so it\u0026rsquo;s always up to date\n  use that variable in message in a Microsoft Teams chat\n  To use a certain information in a variable, you first need to initialize a variable and fill out all the information:\nName: I called mine NrOfDay\nType: We want to use a string here (a string is a sequence of characters, that can include letters or numbers, but it will be recognized as a \u0026ldquo;text\u0026rdquo;)\nValue: Here we want to define the value of this variable. In our case that means that particular information from this long JSON object.\n   We want the value of the property \u0026ldquo;number\u0026rdquo;\nNotice, that this JSON element consists of three different objects. We have the objects \u0026ldquo;success\u0026rdquo;, \u0026ldquo;copyright\u0026rdquo; and \u0026ldquo;content\u0026rdquo;. The object \u0026ldquo;content\u0026rdquo; contains an object called \u0026ldquo;nod\u0026rdquo;, which contains two more objects called \u0026ldquo;category\u0026rdquo; and \u0026ldquo;numbers\u0026rdquo;.\n   As stated earlier, we want the value of the property \u0026ldquo;number\u0026rdquo;, which is located in the object \u0026ldquo;numbers\u0026rdquo; (which is part of the object \u0026ldquo;nod\u0026rdquo;, which is part of the object \u0026ldquo;content\u0026rdquo;).\n   Now we can tell our variable in Power Automate the exact location of the value we want to use in this variable. The expression to \u0026ldquo;navigate\u0026rdquo; to the value of this property looks like this:\n`body(\u0026lsquo;HTTP_-_GETnon\u0026rsquo;)[\u0026lsquo;contents\u0026rsquo;][\u0026rsquo;nod\u0026rsquo;][\u0026rsquo;numbers\u0026rsquo;][\u0026rsquo;number\u0026rsquo;]`\nThe first part (`body(\u0026lsquo;HTTP_-_GETnon\u0026rsquo;)`) tells where we want to look, the later parts are navigating through the JSON object until we reach the exact object and the exact property. With this method you can get any value of any JSON object you like.\nNow you can build in the variable in a \u0026ldquo;Post message in a chat or channel\u0026rdquo; action as dynamic content in Flow and it will always show the value of the property of that JSON object.\n   That\u0026rsquo;s it. That is how you call an API, get a JSON object back and use certain values from that object in Power Automate. I hope you liked it and it helps you. If anything is unclear, or you have questions, please feel free to reach out to me. Easiest way would be twitter.\nAs I mentioned in the beginning, I will further work with APIs. If you want to learn more, here\u0026rsquo;s what I\u0026rsquo;m going to work on next. If you have specific questions, please ask me or make suggestions. I\u0026rsquo;m always eager to learn new things.\nNext API topic: What\u0026rsquo;s a custom connector, where is the difference between a http request and a custom connector and when to use what.\n","image":"https://pnp.github.io/blog/post/working-with-apis-in-power-platform-for-beginners/images/HTTPrequest_hu6772cc6264afcf8538004e5005c65ea1_34743_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/working-with-apis-in-power-platform-for-beginners/","tags":["Power Apps","Power Automate"],"title":"Working with APIs in Power Platform for beginners"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"Viva Connections \u0026amp; SharePoint Framework bi-weekly community call recording from January 13th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary  Tune in each Tuesday for the Microsoft 365 platform community call. Next call on the 18th of January @ 8 AM PT  Latest news from Microsoft engineering on Microsoft 365 topics Dan Wahlin \u0026ndash; Show a user\u0026rsquo;s emails in an ASP.NET Core app with Microsoft Graph Patrick Rodgers \u0026ndash; Deep dive on Viva Connections Adaptive Card Extension development Sébastien Levert \u0026ndash; Introduction to Microsoft Graph Toolkit control   Register for training events this quarter hosted by Sharing is Caring Just added AMA (PnP React Controls) \u0026ndash; Feb 22nd and AMA (Graph \u0026amp; MGT) \u0026ndash; March 1st Register for the PnP Recognition Program. SharePoint Framework updates - The Road Ahead after 1.14 Join the updated Microsoft 365 ISV Benefit program - get help with Microsoft Teams and Microsoft Viva development PnP project activities in the last two weeks:  CLI for Microsoft 365 v4.3 PnP Modern Search v4.5.3   8 new/updated web parts and 2 ACEs were delivered in the last two weeks! Your contributions are greatly appreciated by many.  **Latest project updates include: **(Bold indicates update from previous report 2 weeks ago)  PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.13 GA, v1.14 public developer preview v1.14.0 beta early January, GA targeted for end of January PnPjs Client-Side Libraries v2.11.0 GA, v3.0.0 Preview. v 2.12 Delayed nightly builds of v3 CLI for Microsoft 365 v4.3.0 GA Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.5.0 3.5.0 supports SPFx v1.13 Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.3.0 3.3.0 supports SPFx v1.13 PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.5.3, v3.23.0  The host of this call is Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place as always in chat throughout the call. Thank you for joining the call today and/or for viewing the recording. Awesome to see many of you on the screen.\nActions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  PnP Sharing is Caring - AMA (Ask Me Anything) - SPFx React Controls \u0026ndash; Tuesday, February 22nd, 9am PST PnP Sharing is Caring - AMA (Ask Me Anything) -- Microsoft Graph Toolkit - Tuesday, March 1st, 9am PST First Time Contributor Session \u0026ndash; Tuesday, January 25th, 2pm PST Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; Tuesday, January 18th, 1pm PST PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; Tuesday, February 8th, 2pm PST PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; Wednesday, January 26th, 7am PST First Time Presenter \u0026ndash; Wednesday, February 9th, 9am PST More than Code with VSCode \u0026ndash; Tuesday, February 15th, 2pm PST Maturity Model Practitioners \u0026ndash; Tuesday, January 18th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Building Emoji Rating Web Part with SharePoint Framework \u0026ndash; a simple way for employees to give feedback on internal communications (news/article/post) and for managers to view sentiment in report. Web part uses star-based rating system, captures text comments, stores ratings in SharePoint list, and aligns data to page name. Configurations \u0026ndash; link to list, background colors, ratings text, emoji images, enable/disable comments and count. Use flow to add web part to page at creation.   Introduction to Adaptive Card Extensions (ACEs) for Microsoft Viva Connections \u0026ndash; working with State and Properties in ACEs \u0026ndash; includes managing interfaces for Properties (Property pane or code) and State (code) used by CardView and QuickViews. The basic property pane is generated by the SPFx scaffolding tool. Learn about building functions into ACE component and exposing the functions to your ACEs cards. See how State is updated only for the active component, if 2 components displayed.   SharePoint Framework Design Patterns \u0026ndash; Custom Web Part Properties (Part 3) \u0026ndash; regarding web part properties and property panes, having a configurable property pane allows you to go from a single-use to a multi-use component with many variations while using same code! The Quick links web part for example can look very different by changing layout properties - just rendering differences. Demo focuses on modifications to the getPropertyPaneConfiguration( ) method that contains pages, groups and fields.\n  SPFx extension samples: (https://aka.ms/spfx-extensions)\n Next call  SPFx web part samples: (https://aka.ms/spfx-webparts)\n Property Control SVG - Jonah | corkindustry Quotes - Yves Habersaat | @yhabersaat My Teams - Yves Habersaat | @yhabersaat List Search - Alberto Gutierrez Perez | @albertogperez NEW: Drag and Drop Followed Sites* - Adam Wójcik | @Adam25858782 Star Rating - Takashi Shinohara | @karamem0 Advanced Page Properties - Abderahman Moujahid | Abderahman88 Follow Documents - André Lage | @aaclage  * Link to be live soon! PnP SPFx ACEs: (https://aka.ms/spfx-aces)\n My Emails* - Siddharth Vaghasia | @siddh_me My Groups* - Nanddeep Nachan | nanddeepn  * To be posted soon. Thank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 7:30 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 10:09 CLI for Microsoft 365 - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 11:17 PnP SPFx Controls - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 12:13 PnP Modern Search - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 12:55 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 13:26 PnP SPFx ACEs Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 15:47  Demos   Demo 1: Building Emoji Rating Web Part with SharePoint Framework \u0026ndash; Siddharth Vaghasia | @siddh_me [\u0026ndash;][ 17:47]\n  Demo 2: Introduction to Adaptive Card Extensions (ACEs) for Microsoft Viva Connections \u0026ndash; Paolo Pialorsi (PiaSys) | @PaoloPia [\u0026ndash;][ 31:11]\n  Demo 3: SharePoint Framework Design Patterns \u0026ndash; Custom Web Part Properties (Part 3) \u0026ndash; Hugo Bernier (Microsoft) | @bernierh [\u0026ndash;][ 43:52][ ]\n  Resources Additional resources around the covered topics and links from the slides.\n D1: Sample - Emoji Ratings  D3: Documentation - Use the Quick Links web part  D3: Documentation - Make your SharePoint client-side web part configurable  D3: Documentation - Integrate web part properties with SharePoint  D3[: ]Previous demos from Hugo Bernier[ (Microsoft) | @bernierh,][ on SPFx Design Patterns series]  SPFx Design Patterns \u0026ndash; Custom Properties (Part 2) \u0026ndash; 30 December SPFx Design Patterns \u0026ndash; Custom Properties (Part 1) \u0026ndash; 4 November SPFx Design Patterns \u0026ndash; Property Panes - 21 October   PnP Weekly \u0026ndash; Episode 148 (January 9th) with Belgium-based Power Platform Architect and Business Applications MVP, Carmen Ysewijn (Qubix) | @CarmenYsewijn | video | podcast  General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned   SharePoint dev documentation\n  SharePoint dev issue list **Upcoming calls | Recurrent invites: **\n  Microsoft 365 platform call \u0026ndash; January 18th at 8:00 am PST | https://aka.ms/m365-dev-call\n  Power Apps monthly call\u0026ndash; January 19th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  M365 General Dev call \u0026ndash; January 20th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Microsoft Identity Platform call \u0026ndash; January 20th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Viva Connections \u0026amp; SharePoint Framework call \u0026ndash; January 27th at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; February 9th at 8:00 am PST | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash;February 10th** **at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Viva Connections \u0026amp; SharePoint Framework bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Connections, Microsoft Teams, SharePoint Online, and also on-premises. Calls are used for the following objectives.\n SharePoint Framework engineering update from Microsoft Talk about PnP JavaScript Core libraries Office 365 CLI Updates SPFx reusable controls PnP SPFx Yeoman generator Share code samples and best practices Possible engineering asks for the field - input, feedback, and suggestions Cover any open questions on the client-side development Demonstrate SharePoint Framework in practice in Microsoft Viva, Microsoft Teams or SharePoint context You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 14th of January 2022\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-13th-of/images/recording-13th-jan_hu3bc1ad1bd242467858d78da442108314_254776_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-13th-of/","tags":[],"title":"Viva Connections \u0026 SharePoint Framework Community Call -- 13th of January, 2021"},{"categories":["Community post"],"contents":"Many organizations are moving towards a modern workplace. And most of the time, that does not happen overnight. It\u0026rsquo;s a big change for both end-users, management, and IT staff.\nI’m a big fan of self-service and believe that organizations can benefit from it as well. It improves adoption and lowers help desk calls. Being a consultant, I\u0026rsquo;m involved in a lot of projects around Microsoft 365, Microsoft Endpoint Manager, and Azure AD. And projects often start with pilots. Most of the time, those pilots are narrowed down to IT folks. But wouldn\u0026rsquo;t it be cool if the \u0026lsquo;regular user\u0026rsquo; could also participate in pilots, those who are eager to learn, explore and test out new features? This solution is built upon Power Apps and can serve many, many use-cases.\nThis blog post is a showcase for a Power App around self-service. It is also a perfect example of fusion development. Microsoft made sure we have an API we can use to assign the settings we want. The Power App is already set up to use those connections, and you as a citizen developer only need to make sure the app interacts with those as you desire, with a minimum of coding effort.\n   The idea behind the app The concept of this app is straightforward: it puts users into groups. And the best part is: they can do it themselves. Now, Microsoft 365 offers a broad set of self-service capabilities already, but for some organizations, that can be really scary. By default, users can even create their own groups and teams themselves, but this feature is often disabled by IT. It also might not be the most user-friendly option.\nBack to the concept of groups. These can be either security or Microsoft 365 groups. Using this app, you can offer self-service to your end-users, while staying in control. Next to that, you can make it a user-friendly experience, because you can design your own User Interface around it. So, you can put additional information in the UI, as we did in this app. Since it can be used for every group in Azure AD, this can be used within all integrated services like Office 365, Microsoft Endpoint Manager, and even security features like Azure AD Authentication policies, and Conditional Access.\nThe ultimate goal of this app thus is a UI where any end-user in the organization can select what pilot programs they want to be part of. In the demo, there are several different UI elements to help users with their selection ranging from toggles to sliders.\nFeatures The idea behind the slider is to bring your users in control of their modern workplace, easier put: on what pace updates will get delivered to their Windows device. By choosing a different update channel, they will be assigned to a specific Windows Update for Business ring in the back-end.\n   The toggles can be used to let the user participate in different pilots or features that Microsoft 365 offers. It can also be used to request licenses, for example, if the user needs Power-BI Pro for a specific project. You could even build an additional flow that will ask for manager approval first, or you can make use of Azure Active Directory Access Reviews to review the groups periodically.\nGroup-based licensing Leveraging Azure Premium P1, we could use group-based licensing to automatically assign licenses to users based on group membership.\nIn the Azure portal, go to Azure Active Directory -\u0026gt; Licenses. Select the preferred licenses, then go to the Licensed groups blade, and select + Assign.\n   From the list, select the underlying services that you want to assign to the group.\n   As soon as the user is added to the group, the license is automatically assigned. When the user is removed, also the license will be unassigned.\nHow does the app work under the hood?\nThe app is using Power Automate to connect to the Graph API. Inside the Power Automate flow, we use the HTTP connector to send out the API calls. Based on the parameters that we define in Power Apps, the user is either added or removed from the group.\n   The flow is using the switch feature to determine what action should be taken. This can be either “add”,”remove”, or “fetch”. More details on the app and flow can be found in the extended documentation on GitHub.\n[      How to get started? This demo app is on GitHub and can be up and running in minutes. Reach out to this repository for detailed information and step-by-step instructions Also [make sure to check out this YouTube video for a short tutorial\nConclusion We hope to have provided some inspiration in facilitating your end users with a self-service experience using the Power Platform. Allowing your users to interact with an easy interface and requesting [the features they feel add[ value will make sure you stay in control!\n","image":"https://pnp.github.io/blog/post/microsoft-365-self-service-using-power-apps/images/1641653378_hu6391db758752ec8d4e2b0c69df33f08b_468398_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/microsoft-365-self-service-using-power-apps/","tags":["Power Apps"],"title":"Microsoft 365 self-service using Power Apps"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from January 11th, is now available from the Microsoft 365 Community YouTube channel athttp://aka.ms/m365pnp/videos\nCall Summary\nWelcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 780+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring during January - February. Upcoming Ask Me Anything (AMA) session - Open Discussions 2022! New class coming Viva Connections ACEs (Feb 2022) Tune into the weekly  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Microsoft 365 PnP Weekly - Videos, Podcasts focused on the latest news and topics on Microsoft 365 hosted by Vesa Juvonen and Waldek Mastykarz   Hear about the latest 2 Microsoft 365 Platform related stories and take in 3 demos delivered by Microsoft presenters on latest capabilities of the Microsoft 365 platform.  The host of this call was Brian T. Jackett (Microsoft) *| *@BrianTJackett. Q\u0026amp;A takes place in chat throughout and live at end of the call. Microsoft 365 Platform News Flash\n  Microsoft Graph Mailbag \u0026ndash; Using LargeFileUploadTask with Microsoft Graph SDKs\n  How to Manage Microsoft Teams Meeting Recording Auto-Expiration\n  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; Tuesday, January 25th, 2pm PST Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; Tuesday, January 18th, 1pm PST PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; Tuesday, February 8th, 2pm PST PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; Wednesday, January 26th, 7am PST First Time Presenter \u0026ndash; Wednesday, February 9th, 9am PST More than Code with VSCode \u0026ndash; Tuesday, February 15th, 2pm PST Maturity Model Practitioners \u0026ndash; Tuesday, January 18th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo\n  Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call\n  Call attention to your great work by using the #PnPWeekly on Twitter. It\u0026rsquo;s clear, we need a larger room here. The house is full! Thank you everybody for joining the call today.   Demos Demos delivered in this session\n  Introduction to Microsoft Graph connectors SDK - learn about the connectors SDK that will be available for preview in February. The SDK allows developers to write reliable and scalable custom Graph Connectors that are subsequently installed, configured and managed by Admins. Review connector terminology, development, implementation, and management (via Admin portal). Many capabilities of connector development are now addressed by components in the SDK. Register for the Preview today.   Building a Microsoft Teams bot for scheduling tasks and to get reminders - this sample \u0026ldquo;Bot daily task reminder\u0026rdquo; is about sending a proactive chat message/request to app users. Users are able to schedule a recurring task and get a reminder at scheduled times via Adaptive Cards. Comprehensive walk-through from cloning sample repo, to creating and registering an Azure bot, to updating endpoints, creating App manifest file and sideloading into your dev tenant.   Microsoft Graph Toolkit \u0026ndash; Using the People Component in your solutions \u0026ndash; this session focuses on the Microsoft Graph People control and options for customization. See how to use the People component to display a group of people or contacts (photos or initials). Find people trending around you, users from a group or array, show their presence, see managers and direct reports. Build a custom People component with custom templating. See code and rendering side-by-side.\n  Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Brian T. Jackett (Microsoft) *| *@BrianTJackett \u0026ndash; 5:21 D1: Introduction to Microsoft Graph connectors SDK \u0026ndash; Rajdeep Chandra (Microsoft) \u0026ndash; 7:31 D2: Building a Microsoft Teams bot for scheduling tasks and to get reminders \u0026ndash; Wajeed Shaikh (Microsoft) \u0026ndash; 19:38 D3: Microsoft Graph Toolkit \u0026ndash; Using the People Component in your solutions \u0026ndash; Sébastien Levert (Microsoft) | @sebastienlevert \u0026ndash; 36:03  Resources Additional resources around the covered topics and links from the slides.\n  D1: Registration - Microsoft Graph connectors SDK - Preview Sign Up | aka.ms/gcsdkpreview\n  D2: Microsoft Teams Samples - Bot daily task reminder   D2: Documentation \u0026ndash; Send Proactive Messages   D2: Documentation \u0026ndash; Proactive Messages   D2: Feedback \u0026ndash; Teams Feedback | aka.ms/TeamsPlatformFeedback\n  D3: Documentation - People component in the Microsoft Graph Toolkit   D3: Playgound \u0026ndash; People component   D3: Repo \u0026ndash; Microsoft Graph Toolkit | aka.ms/mgt\n  D3: Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/MGT/docs\n  D3: Learn - Develop apps with the Microsoft Graph Toolkit | aka.ms/mgt/learn\n   Previous demos delivered by Sébastien Levert on Microsoft Graph Toolkit (MGT)\n Discover the Microsoft Graph Toolkit \u0026ndash; 7 December, 2021 Microsoft Graph Toolkit \u0026ndash; Using Login Component in your solutions \u0026ndash; 14 December 2021 Microsoft Graph Toolkit \u0026ndash; Using the Person Component in your solutions \u0026ndash; 4 January 2022    PnP Weekly \u0026ndash; Episode 148 (December 10th) with Belgium-based Power Platform Architect and Business Applications MVP, Carmen Ysewijn (Qubix) | @CarmenYsewijn | video | podcast\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Office add-in monthly call \u0026ndash; January 12th at 8:00 am PST | https://aka.ms/officeaddinscall\n  SharePoint Framework call \u0026ndash; January 13th at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Adaptive Cards monthly call \u0026ndash;January 13th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Microsoft 365 platform call \u0026ndash; January 18th** **at 8:00 am PST | https://aka.ms/m365-dev-call\n  Power Apps monthly call\u0026ndash; January 19th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  M365 General Dev call \u0026ndash; January 20th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Microsoft Identity Platform call \u0026ndash; January 20th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar\n  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.  More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 12th of January 2022\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-11th-of-january-2022/images/recording-11th-january_hu041b98b07eac3998425b808b707d9eec_555578_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-11th-of-january-2022/","tags":[],"title":"Microsoft 365 Platform Call -- 11th of January, 2022"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on ][Microsoft 365][, hosts \u0026ndash; ][Vesa Juvonen][https://twitter.com/vesajuvonen]( (Microsoft) | @vesajuvonen, )Waldek Mastykarz[ (Microsoft) | @waldekm are joined by Antwerp, Belgium-based Power Platform Architect and Business Applications MVP, Carmen Ysewijn (Qubix) | @CarmenYsewijn. ]\nTopics discussed in this session:\n On becoming an MVP in January 2022. What does it mean to be an MVP? The role of Power Platform Architect at Qubix.  The thing about blogging as a communications vehicle  The best thing about Power Platform and what Microsoft could do better. Components of the Power Platform. Tips on Power Platform customization \u0026ndash; integration of functionality and graphic design, building for mobile and desktop.  Advice to women looking at a career in IT.   We also covered 23 articles published by Microsoft and the PnP Community over the last 3 weeks. Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded on Monday, January 10, 2022. Enjoy the show.  Video at Microsoft 365 Community YouTube channel    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  What\u0026rsquo;s New in Microsoft Teams | December 2021 - Microsoft SharePoint Roadmap Pitstop: December 2021 - Mark Kashman (Microsoft) | @mkashman Teams JS SDK v2 public preview update: Teams apps in Outlook Web - Zakiullah Khan (Microsoft) Microsoft Graph Data Connect: Demystifying User Scopes - Nik Charlebois (Microsoft) | @NikCharlebois Microsoft Graph Bookings APIs now available on the v1 endpoint - Microsoft New features in Microsoft Graph Bookings APIs provide enhanced booking infrastructure - Microsoft  Community articles  How to convert HTML content or file to PDF using the Muhimbi API? - Chandani Prajapati (Rapid Circle) | @Chandani_SPD CLI for Microsoft 365 v4.3 - Garry Trinder (Microsoft) | garrytrinder Async Render in SPFx Web Parts - Alex Terentiev (Microsoft) | @alexaterentiev Inventory Microsoft 365 Guest SignInActivity with CLI for M365 - Pete Skelly (ThreeWill) | @pskelly Build a Power Apps Waffle Menu - 5 Ways - Laura Rodgers (IW Mentor) | @WonderLaura My Power Apps UI Design Process - April Dunnam (Microsoft) | @aprildunnam Understand difference SharePoint Framework generator related packages - Andrew Connell (Voitanos) | @andrewconnell Building PnP Provisioning notifier Bot - Sergei Sergeev | @sergeev_srg Run the CLI for Microsoft 365 with PowerToys Run - Albert-Jan Schot (BLIS.digital) | @appieschot A SharePoint File Explorer based on Managed Metadata and SPFx - Markus Möller (Avanade) | @Moeller2_0 Show files as cards using Microsoft Graph Toolkit and hTWOo - Waldek Mastykarz (Microsoft) | @waldekm Building a Microsoft Teams bot: Sending custom data from an adaptive card button to the bot - Vardhaman Deshpande (Valo Solutions) | @vrdmn Maturity Model for Microsoft Teams Development - Albert-Jan Schot (BLIS.digital) | @appieschot Contributing as a holiday season present - Martin Lingstuyl (I4-YOU Business Solutions B.V.) | @martinlingstuyl Apply a DevOps process to your SPFx project (Part 1) - Michaël Maillot (onepoint) | @michael_maillot Export Microsoft Teams Chat Conversations using PowerShell - Arjun Menon (Tata Consultancy Services) | @arjunumenon Episode #188 - Presence Notifications with Microsoft Graph SDK 4 - Paolo Pialorsi (PiasSys) | @PaoloPia  Additional resources  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n*\u0026ldquo;Sharing is caring!\u0026rdquo; *\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-148-carmen-ysewijn-qubix/images/THumb%20148_hu8c8eff9aeb446dfb3239bf340a026603_518996_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-148-carmen-ysewijn-qubix/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 148 - Carmen Ysewijn (Qubix)"},{"categories":["Community post"],"contents":"The intro (what\u0026rsquo;s up) There are many ways we may manage Microsoft 365. To name a few we may use Microsoft Graph PowerShell SDK or SharePoint Online Management Shell or PnP PowerShell or CLI for Microsoft 365. During my SP consultant/dev work I most of the times used the last two. From time to time I got the question: which one is better? And probably you are expecting the answer to this question at the conclusion of this article but since this is one of my first articles ever I will do it a bit differently and give my answer now 😀. IMO we should use both, I mean it\u0026rsquo;s not about which one is better but in the end it\u0026rsquo;s all about which tool is more suitable for the task you are up against and the more tools you know (or you may use in your company) the more possibilities you have to succeed in your task.\nPnP PowerShell This one is almost always used and it\u0026rsquo;s quite understandable. I mean usually many of SP consultants used to work with the OnPrem version of SharePoint, and sooner or later there was always a need of some small provision or other setup kind of script to be created (at least this was my story and most of the people I worked with). The first thing usually used was the SharePoint PowerShell. The next cool thing that happened was the SharePointPnPPowerShell 2013/16/19 and all the improvements it gave. After some time it was the \u0026lsquo;must have tool\u0026rsquo; when it comes to developing PowerShell scripts to manage SharePoint. Now it\u0026rsquo;s all about the cloud and every company wants to be Online and not only use SharePoint Online but all of Microsoft 365 capabilities. PnP PowerShell is a newer version of the SharePointPnPPowerShellOnline module (which is not maintained anymore) which is cross platform, that\u0026rsquo;s right, it will work not only on Windows but on MacOS or Linux as well, all thanks to PowerShell Core. So it\u0026rsquo;s natural many just picked PnP PowerShell. Currently it has almost 600 commands (check full docs list) that gives the possibility to manage SharePoint Online, Microsoft Teams, Microsoft Planner and Power Platform (mainly Power Automate (for PowerApps there is also thePowerApps.PowerShell which may be used. It\u0026rsquo;s straight forward and easy to use and it\u0026rsquo;s a perfect pick for any quick day to day tenant management as well as for huge scripts that may run every day to add that additional logic to your tenant (either reporting or maintenance or provisioning or other). And Like every other SharePoint module you may just install it using\nInstall-Module -Name \u0026#34;PnP.PowerShell\u0026#34; command and you\u0026rsquo;re good to go. Maybe you would like to contribute? You would like to make something new or do a fix. That\u0026rsquo;s great, as it is written in C# (so how hard can it be right?), it uses CSOM (as expected for C# code and SP Online things) but also MS Graph, and there even is a ready guide to help you get started\nCLI for Microsoft 365 And What\u0026rsquo;s this? And why would I need this? TBH those were my questions when I first go to know this tech. Please be aware at that time SharePointPnPPowerShellOnline (as the PnP.PowerShell was not out yet) was only for Windows (it could only run on windows PowerShell because of its dependencies), so the huge advantage of CLI for M365 was that you may use it on every platform just like that. Now of course PnP.PowerShell is also cross platform. You may use CLI for Microsoft 365 to manage many things. To name a few, you may manage OneDrive, Planner, Power Apps and Automate, Teams, Yammer, SharePoint (of course), now there is even a dedicated command to help you set up Viva and the list keeps on growing an growing. But that\u0026rsquo;s not only about managing Microsoft 365. CLI helps you also manage your own spfx environment (check out the doctor) or projects (rename, upgrade etc.). This is something I think PnP.PowerShell does not have. Some commands do simple things but some actually are ready to use scenarios all done under a single command. Check out the full list of commands That\u0026rsquo;s nice right. But how does it work. Well CLI for M365 is given as a npm package, that\u0026rsquo;s right you need Node.js (that\u0026rsquo;s why it\u0026rsquo;s cross platform), and if you are guessing that it\u0026rsquo;s probably all written in javascript than you are right again. How cool is that. I mean if it\u0026rsquo;s not cool for you then I will just bring a life example I had. Usually when you apply for an SharePoint dev kind of role there always is a PowerShell skill in the \u0026lsquo;must have\u0026rsquo; in the job description. That\u0026rsquo;s understandable but still there are not many SharePoint developers so usually companies are looking for web developers. For SharePoint online maybe the story is not that different, at least not like for an SP OnPrem version where feature model is still used\u0026hellip; now those are very specific skills and knowledge you need. Now for the SP Online a web developer may seem like a perfect fit but the PowerShell skill may seem a bit challenging for a developer who now using javascript may basically do all she or he needs (web page frontend using React or Angular or whatever + a backend web API using node.js). But now\u0026hellip; well now (thanks to CLI for M365) with javascript that web developer may also manage Microsoft 365 and the PowerShell skills in the job description may not be that \u0026lsquo;must have\u0026rsquo; as it used to be before. If you haven\u0026rsquo;t used it before probably you are also wondering how similar it is to PnP.PowerShell (in terms of commands). Check out this map table You may also think how much it is used? To answer this please check out PnP script samples gallery matrix and checkout were you see the most likes (yes in the CLI for M365 column). So maybe you would like to contribute? You tried it out and something did not work well and you want to add a fix. That\u0026rsquo;s great! It is written in javascript and mainly uses MS Graph and standard Web API (like SharePoint Rest API). Please check the contribute wiki page to get you started BTW did you know there are also ready to use CLI for Microsoft 365 GitHub actions you may use for you CI/CD workflows. Ever had this \u0026ldquo;ye and when we push on the master branch it would be nice if the webpart would be build and pushed to a test/QA tenant\u0026rdquo;. If yes then you have to see this GitHub Actions - CLI for Microsoft 365 pnp.github.io\nWhen? What? Why? Using either PnP.PowerShell or CLI for M365 is rather simple and totally logical. Lets have a look at this very simple script from PnP Script Sample gallery (https://pnp.github.io/script-samples) added by Paul Bullock. The script gets the site and disables the delete option on a list.\nConnect-PnPOnline -Url \u0026#34;https://\u0026lt;tenant\u0026gt;.sharepoint.com\u0026#34; -Interactive $list = Get-PnPList -Identity \u0026#34;\u0026lt;list or library\u0026gt;\u0026#34; $list.AllowDeletion = $false $list.Update() Invoke-PnPQuery Write-Host \u0026#34;Done! :-)\u0026#34; -ForegroundColor Green source: Remove delete option on a document library | PnP Samples So the flow is simple. We connect to the site to which we want to make some changes, we do those changes and that\u0026rsquo;s it. Now lets look at the same thing done with CLI for M365.\n$m365Status = m365 status if ($m365Status -eq \u0026#34;Logged Out\u0026#34;) { m365 login } $site = \u0026#34;\u0026lt;site\u0026gt;\u0026#34; $list = \u0026#34;\u0026lt;list or library\u0026gt;\u0026#34; $json = m365 spo list get --title $list --webUrl $site $json = $json | ConvertFrom-Json m365 spo list set --webUrl $site --id $json.Id --allowDeletion false Write-Host \u0026#34;Done! :-)\u0026#34; -ForegroundColor Green What is the flow here? First we login (or we check if we are still logged in) to the tenant. And then we execute commands to get and/or modify passing the web url as an param. It does look very similar don\u0026rsquo;t you think? Both are really readable, logical and easy to maintain. Of course there will be scenarios when one is better over the other or one just does not support it (yet). In this simple example above we see the way we \u0026lsquo;connect\u0026rsquo; is different. In PnP.PowerShell we usually connect to the site we want to change but in CLI for M365 we connect to the tenant, and not only that, the CLI persists the connection. This is very handy when you do CLI work on your tenant every day on multiple sites and you don\u0026rsquo;t want to start every time from logging in (connecting). Also it would seem that CLI for M365 would be better for a scenario were we have a list of sites we need to loop and apply some change. So lets say we have\n$sites = @(\u0026#39;https://thisisverycooltenant.sharepoint.com/sites/hr-live\u0026#39;, \u0026#39;https://thisisverycooltenant.sharepoint.com/sites/demoportal\u0026#39;) And now when using PnP.PowerShell we may do it like this\n$Credential = Get-Credential [SecureString]$SecurePass = ConvertTo-SecureString $Credential.GetNetworkCredential().password -AsPlainText -Force [System.Management.Automation.PSCredential]$PSCredentials = New-Object System.Management.Automation.PSCredential($Credential.GetNetworkCredential().username, $SecurePass) foreach ($site in $sites) { Connect-PnPOnline -Url $site -Credentials $PSCredentials Set-PnPWeb -Title \u0026#39;test\u0026#39; Disconnect-PnPOnline } Of course we would not need to pass the credentials, as there are other authenticate options we might use like credential manager (but then it\u0026rsquo;s windows only) or Microsoft.PowerShell.SecretManagement and Microsoft.PowerShell.SecretStore (multi platform), please check this link for more info. But regardless of authenticate option still the concept of connecting and disconnecting would remain. Now when using CLI for M365 we might just do\n$m365Status = m365 status if ($m365Status -eq \u0026#34;Logged Out\u0026#34;) { m365 login } foreach ($site in $sites) { m365 spo web set --webUrl $site --title \u0026#39;test\u0026#39; } Now should we say that one approach is better over the other\u0026hellip; I don\u0026rsquo;t know ;). For me both tools did what I needed in a reasonable amount of time. The above example is just a simple case were but we may already have a feeling when and why we could use one tool over the other.\nBoth... really? Using those both together. Now that\u0026rsquo;s strange. TBH I totally agree, but let\u0026rsquo;s think of example case were we already have some script ready in PnP.PowerShell doing something on the site (let\u0026rsquo;s say changing the title so the example will be similar to the previous one) but we just don\u0026rsquo;t know which sites should be modified and we need to query the lists of sites that match some pattern and apply changes only there. Well there is a single line for it in the CLI for M365, and it would be a shame not to use it.\n$m365Status = m365 status if ($m365Status -eq \u0026#34;Logged Out\u0026#34;) { m365 login } $sites = m365 spo site list --type CommunicationSite --filter \u0026#34;Url -like \u0026#39;demoportal\u0026#39;\u0026#34; $sites = $sites | ConvertFrom-Json $Credential = Get-Credential [SecureString]$SecurePass = ConvertTo-SecureString $Credential.GetNetworkCredential().password -AsPlainText -Force [System.Management.Automation.PSCredential]$PSCredentials = New-Object System.Management.Automation.PSCredential($Credential.GetNetworkCredential().username, $SecurePass) foreach ($site in $sites) { Connect-PnPOnline -Url $site.Url -Credentials $PSCredentials Set-PnPWeb -Title \u0026#39;test123\u0026#39; Disconnect-PnPOnline } Now I totally wouldn\u0026rsquo;t recommend this kind of approach for any script which is supposed to be scheduled and runed iteratively. This is because the authorization process may be hard to maintain. But if this was some kind of one time task we need to do, why not combine the tools and the skills we already have and just go on with your work. Sticking to one tool and one approach only, may make our work less efficient. Of course it is almost always possible to do the same things in both tools but if one of those allows to do something easier why not combine the two and do what needs to done faster.\nThe End? Already? Yes... I hope you will agree with me that using both, rather than picking the better one is the correct approach. If you are already using one of those tools try the other one. I strongly encourage you to try to reproduce one of your existing scripts you already have in tech you did not use to see the difference and maybe notice some improvements it might bring (or not). If you are already using both I would really love to here your opinion. Are you already using PnP.PowerShell or CLI for Microsoft 365? Or maybe both? Do you see some benefits of one over the other? Do you think one of those tools are lacking something important? Any comment is appreciated and also may be a good tip for the repo maintainers or friendly contributors.\n","image":"https://pnp.github.io/blog/post/pnp-powershell-or-cli-for-microsoft-365-or-both-or-other/images/post-thumb_hu8e227211d67abc79c03609a6d3c355d8_186954_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/pnp-powershell-or-cli-for-microsoft-365-or-both-or-other/","tags":["CLI for Microsoft 365","PnP PowerShell"],"title":"PnP PowerShell or CLI for Microsoft 365 or both or other"},{"categories":["Community post"],"contents":" \u0026ldquo;Hey, do you have 5 min?\u0026rdquo;\n\u0026ldquo;Could you check one simple thing and let me know asap?\u0026rdquo;\n\u0026ldquo;I see you are available, could you do\u0026hellip;\u0026rdquo; 😒\n Ever got one of those message on Teams? Now when working \u0026lsquo;home office\u0026rsquo; I noticed this trend and I usually get one of those over the phone during shopping and usually couple of lines in CLI for Microsoft 365 may do the trick but I don\u0026rsquo;t always carry my laptop with me (I know\u0026hellip; strange). I always considered CLI for M365 as an ace up my sleeve but I never found any cards in my pocket\u0026hellip; but a mobile phone 🤩, now that\u0026rsquo;s a different story. So lets see if we may use CLI on Android.\nBut first of all what is CLI for Microsoft 365? Quick introduction if your already know\u0026hellip; skip this part😀 CLI for Microsoft 365 is a cross platform command line tool you may use to manage many things. To name a few, you may manage OneDrive, Planner, Power Apps and Automate, Teams, Yammer, SharePoint (of course), now there is even a dedicated command to help you set up Viva. The list keeps on growing and growing, check out the CLI for Microsoft 365. But it\u0026rsquo;s not only about managing Microsoft 365. The CLI helps you also manage your own spfx environment (check out the doctor) or projects (rename, upgrade etc.). This is very unique that many similar command line tools don\u0026rsquo;t have. Some commands do simple things but some actually are ready to use scenarios all done under a single command. Check out the full list ofcommands That\u0026rsquo;s nice right. But how does it work. Well CLI for M365 is given as a npm package, that\u0026rsquo;s right you need Node.js (that\u0026rsquo;s why it\u0026rsquo;s cross platform). How cool is that. If only we could use Node on Android right 😀.\nCLI everywhere, why not on mobile? So let\u0026rsquo;s check how we may use CLI for Microsoft 365 on Andriod.\n  First we need a terminal to install Node. For this we may use\nTermux on play store. We just go to the play store, search for the app install. Done. Lets move on\n  Next we need to usually update the terminal\napt update \u0026amp;\u0026amp; apt upgrade   Now we need to install Node\napt install nodejs   Now we need to install CLI for M365\nnpm i -g @pnp/cli-microsoft365   \u0026hellip; done. Lets check what we have using bash\nm365    CLI for Microsoft 365 is up and running\u0026hellip; Nice. Now to manage the tenant we only need to login. This is done like always\nm365 login    After successful login we may check the connection status running\nm365 status    Now lets try any command. Lets check my sites on tenant running\nm365 spo site list    Or lets check my ToDo tasks\nm365 todo task list --listName \u0026#39;Test list    I think I may mark the \u0026lsquo;Try to write something close to an article\u0026rsquo; as done 🤩 So there you have it. CLI for Microsoft 365 running everywhere you need, also on your mobile. Now you may also do the simple request during shopping. The question is, if you should? Maybe it\u0026rsquo;s better to focus on the shopping list and respond to the message during working hours😀 I hope you liked the article. Please leave a comment if you tried it out and/or if you think it may be helpful. BTW if you didn\u0026rsquo;t try CLI for Microsoft 365 yet I strongly encourage you to do so CLI for Microsoft 365. Check out the PnP script samples gallery to see in what cases other people already use the CLI Script Samples | PnP Samples. Something not working and should? Or maybe you see something missing in the CLI. No worries, open an issue and let the maintainers (or a friendly contributor) know Issues · pnp/cli-microsoft365\n","image":"https://pnp.github.io/blog/post/cli-for-microsoft-365-on-your-mobile/images/Prezentacja1_hu64c198ed62767dac5a499f52e8819bf5_288412_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/cli-for-microsoft-365-on-your-mobile/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 on your mobile"},{"categories":["CLI for Microsoft 365"],"contents":"Manage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use. While building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects. New version of CLI for Microsoft 365 \u0026ndash; v4.3 Following our monthly release cadence, we\u0026rsquo;ve released a new version of the CLI for Microsoft 365 with some new capabilities. Here are a few of the most noteworthy additions. Changes We\u0026rsquo;ve continued improving the CLI, building upon the changes we introduced in the previous version. Upgrade SharePoint Framework projects to SPFx v1.14.0 Public Preview With the announcement of the availability of public preview of the SharePoint Framework (SPFx) 1.14 \u0026ndash; with updates for Viva Connections, Microsoft Teams and SharePoint Online experiences, we have added support for upgrading your SPFx projects to the latest preview version, v1.14.0-beta.4. To upgrade your SPFx project to this version, change the working directory to your project and execute: m365 spfx project upgrade --preview --output md \u0026gt; report.md  We\u0026rsquo;d also recommend that you try a richer upgrade report based on the Visual Studio Code CodeTour extension: m365 spfx project upgrade --preview --output tour  For more information about upgrading SharePoint Framework projects, see the CLI documentation. CSV output mode In this release we have added a new global output mode to return information from Microsoft 365 in CSV format, adding to the JSON and Text output modes that we already have. To retrieve information about a given SharePoint site as CSV output, execute: m365 spo web get --webUrl https://contoso.sharepoint.com --output csv  Support for returning Power Apps in a given environment An environment is a space to store, manage, and share your organization\u0026rsquo;s business data, apps, chatbots, and flows. It also serves as a container to separate apps that might have different roles, security requirements, or target audiences. Previously you could only return a list of Power Apps in the default environment, however we have extended the pa app list command so that you can return a list of apps from any environment in your tenant. To retrieve a list of Power Apps in a given environment, execute: m365 pa app list --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5  Support for returning Azure AD users by email We\u0026rsquo;ve simplified returning information about a given Azure AD user, by adding support for using their email address as an identifier, adding to ID and UPN which we also support. To retrieve information about a given user by their email address, execute: m365 aad user get --email AarifS@contoso.onmicrosoft.com  New commands We\u0026rsquo;ve introduced several commands in this release providing new capabilities across Microsoft 365. Retrieve Azure AD app registration When building apps and integrations against Microsoft 365, the first thing you need to do is authenticate and for that you need to register Azure AD applications to setup that trust and assign permissions accordingly. We\u0026rsquo;ve added a new command that returns information about given Azure AD app registrations. To retrieve an Azure AD app registration by its name, execute: m365 aad app get --name \u0026#34;My app\u0026#34;  Check a user\u0026rsquo;s password against the organisation\u0026rsquo;s password validation policy In Azure Active Directory you can you can define fine-grained password policies that control account lockout settings or minimum password length and complexity. We\u0026rsquo;ve added a new command that simplifies the ability for you to test and validate example passwords against your organisation\u0026rsquo;s policy. To validate the password cli365P@ssW0rd against your organisation\u0026rsquo;s password validation policy, execute: m365 aad user password validate --password \u0026#34;cli365P@ssW0rd\u0026#34;  List API permissions for current Azure AD app Previously we added the ability for you to create an Azure AD app registration and store information about the registration in a file called .m365rc.json, in this release we have added a new command that retrieves the API permissions of the app registration stored locally. To create a new Azure AD app registration with a specified name and store the information locally in a .m365rc.json file, execute: m365 aad app add --name \u0026#39;My AAD app\u0026#39; --save  To list the API permissions for the Azure AD app registered in the .m365rc.json file, execute: m365 app permission list  Create new external connection for Microsoft Search Microsoft Search indexes all your Microsoft 365 data to make it searchable for users. Using the Microsoft Graph to create new external connections, your organization can index third-party data so it appears in Microsoft Search results, for example, indexing HR data in SQL Server. We\u0026rsquo;ve added a new command that helps you expand the types of content sources that are searchable in your Microsoft 365 productivity apps and the broader Microsoft ecosystem. To create a new external connection definition for Microsoft Search, execute: m365 search externalconnection add --id MyApp --name \u0026#34;My application\u0026#34; --description \u0026#34;Description of your application\u0026#34;  Create new Planner task Microsoft Planner provides a simple visual way to organise teamwork, we\u0026rsquo;ve added a new command that provides the ability to create new tasks in a Planner board but also assign those tasks to team members and set due dates. To create a task in a given plan and bucket by their IDs, execute: m365 planner task add --title \u0026#34;My Planner Task\u0026#34; --planId \u0026#34;8QZEH7b3wkSbGQobscsM5gADCBa\u0026#34; --bucketId \u0026#34;IK8tuFTwQEa5vTonM7ZMRZgAKdna\u0026#34;  To create a completed task in a plan owned by a group, execute: m365 planner task add --title \u0026#34;My Planner task\u0026#34; --planName \u0026#34;My Planner Plan\u0026#34; --ownerGroupName \u0026#34;My Planner Group\u0026#34; --bucketId \u0026#34;IK8tuFTwQEa5vTonM7ZMRZgAKdna\u0026#34; --percentComplete 100  To create a task assigned to multiple users and set the due date, execute: m365 planner task add --title \u0026#34;My Planner Task\u0026#34; --planId \u0026#34;8QZEH7b3wkSbGQobscsM5gADCBa\u0026#34; --bucketId \u0026#34;IK8tuFTwQEa5vTonM7ZMRZgAKdna\u0026#34; --assignedToUserNames \u0026#34;Allan.Carroll@contoso.com,Ida.Stevens@contoso.com\u0026#34; --dueDateTime \u0026#34;2021-12-16\u0026#34;  Retrieve list of installed languages in a SharePoint site If your organisation spans a diverse population, you may want to make content in your SharePoint sites available in multiple languages. SharePoint Online currently supports 50 different languages and we\u0026rsquo;ve added a command to return the list of installed languages in a give SharePoint site to help you identify the languages available for use in that site. To retrieve all installed languages from a given site, execute: m365 spo web installedlanguage list --webUrl https://contoso.sharepoint.com New script samples  CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts.\n If you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\nCopy list items between SharePoint lists This script helps you to copy SharePoint List Items from a destination SharePoint Online list to another target SharePoint Online list in another Site Collection.\n ## Contributors This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order):  Robert Dyjas Vipul Kelkar Patrick Lamber Waldek Mastykarz Kevin McDonnell Arjun Menon Abderahman Moujahid Nanddeep Nachan Albert-Jan Schot Danish Shafi Sekar Thangavel Jasey Waegebaert Adam Wójcik   Work in progress Here are some things that we\u0026rsquo;re currently working on. CLI for Microsoft 365 v4 Themes Following our latest major release, we have started thinking about themes for the coming year but we would love to know what you think we should concentrate on next. We are of course looking at topics as Microsoft Viva and the Power Platform but if you have any suggestions, please let us know by adding your suggestion to our open discussion on GitHub. Microsoft 365 app commands When building apps for Microsoft 365, next to your code, you also need to manage how your app is exposed to Microsoft 365. You need to register your application in Azure Active Directory, and depending what type of app you build, you might need to deploy it to an app catalog as well. All these properties are managed in different locations and we\u0026rsquo;re thinking of ways that we could simplify it for you. What else could we simplify? Let us know what you think by helping out with one of our open issues or chime in on our open discussion! Power Platform commands Business application built using the Power Platform, most notably Power Apps and Power Automate, are becoming ubiquitous with Microsoft 365. We are looking at adding more commands in the future to simplify the management of your Power Apps, Flows and Solutions, starting with the ability to register Power Apps management applications in your environments. What else could we simplify? Let us know what you think by helping out with one of our open issues or chime in on our open discussion! More commands, what else Microsoft 365 is evolving and new capabilities are being released every day. With CLI for Microsoft 365, we aim to help you manage your tenant on any platform in a consistent way, no matter which part of Microsoft 365 you interact with. While we keep adding new commands to CLI for Microsoft 365 each release, we still barely scratched the surface with what\u0026rsquo;s possible in Microsoft 365. In the upcoming versions of the CLI for Microsoft, you can expect us to add more commands across the different workloads in Microsoft 365. Azure AD Graph API Deprecation We have started to prepare changes for the next major version of CLI for Microsoft 365 which will introduce breaking changes. Some of the changes we are looking to make are to refactor commands where we currently use the Azure AD Graph API, which will be officially deprecated on 30th June 2022, to instead use supported endpoints in the Microsoft Graph API. Script examples In every release of the CLI for Microsoft 365, we introduce new commands for managing Microsoft 365. With over 350 commands across the different Microsoft 365 services, the CLI for Microsoft 365 has become a powerful tool, not just for managing your tenant but also for automating your daily work. We\u0026rsquo;d love to show you how you can use the CLI for Microsoft 365 to build automation scripts in PowerShell Core and Bash. If you have any scripts using SPO or PnP PowerShell that you use frequently, please share them with us so that we can learn more about the common automation scenarios. Try it today Get the latest release of the CLI for Microsoft 365 from npm by executing: npm i -g @pnp/cli-microsoft365  Alternatively, you can get the latest release from Docker by executing: docker run --rm -it m365pnp/cli-microsoft365:latest  If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365. If you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v4-3/images/banner-cli-m365_hudf0438f961ff7b005fc2ad64065ff955_577192_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v4-3/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 v4.3"},{"categories":["Adaptive Cards community call"],"contents":"The following topics are covered in this month\u0026rsquo;s community call:\n Viva Connections + Adaptive Cards (Dashboard overview, 6 different Quick View card layouts, and comparing card renderings from Designer and Dashboard) Emily Lynam (Microsoft), Max Kulakov (Microsoft), and Siddharth Gulati (Microsoft), v1.5 Blog Post + Website Changes (feature details in latest blog post and v1.5 features added to Designer) - J.P. Roca (Microsoft) and Q\u0026amp;A \u0026ndash; members of the Developer and PM teams fielded questions on a host of topics for the last 25 minutes on this call. Questions on Power Apps, Viva Connections, Adaptive Cards, AC in Azure Logic Apps, Adaptive Components, AC Designer, Universal Actions, Teams, Outlook integration\u0026hellip; This call was hosted by J.P. Roca (Microsoft) | @jpthepm. Recorded on November 11, 2021.  Agenda  Viva Connections + Adaptive Cards 🤝 - Emily Lynam (Microsoft), Max Kulakov (Microsoft), and Siddharth Gulati (Microsoft) | @sidvaani \u0026ndash;00:45 v1.5 Blog Post + Website Changes 📢 - J.P. Roca (Microsoft) | @jpthepm \u0026ndash; 13:53 Q\u0026amp;A ❔ - with members of Microsoft Developer and PM teams \u0026ndash; 14:53  Demo Viva Connections + Adaptive Cards - overview Viva Connections Dashboard, elements of Dashboard, card layouts, information flow, rendering differences between web and mobile. Viva Connections has 3 pillars \u0026ndash; Dashboard, Applications and Feeds. Deep dive into Authoring a Quick View card in both Dashboard and in Adaptive Cards Designer \u0026ndash; note same JSON, renders similar card, due to same Fluent UI/React behind scenes. Step through 6 different Quick View card layouts. Referenced in this call  Blog - Announcing Adaptive Cards 1.5 | https://adaptivecards.io/blog/ Blog - Guidance on implementing partner offerings for Viva Connections with ACEs and custom APIs  Blog - Viva Connections mobile and new partner integrations are now generally available   Resources in General  Let us know the features you need https://aka.ms/ACRoadmap Schema Explorer - https://adaptivecards.io/explorer/Action.Execute.html Designer - https://adaptivecards.io/designer/  Get started with Templating - https://aka.ms/ACTemplating Browse the Adaptive Cards Code - https://aka.ms/ACRepo Find tools, sample cards and more - https://www.madewithcards.io Contribution Guidelines \u0026ndash; https://aka.ms/ACRepo   Stay connected  Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365PnP/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/adaptivecardscommunitycall Next call \u0026ndash; December 9th at 09:00am PST  ","image":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-november-2021/images/adaptive-cards-November%20THumb_hudc61ccbdbaa937fc1a76945457776c89_305528_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-november-2021/","tags":["Adaptive Cards"],"title":"Adaptive Cards community call -- November 2021"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary Welcome to the New Year. It\u0026rsquo;s a great time to visit the Microsoft 365 tenant \u0026ndash; script samples gallery (129 scenarios and 173 scripts) including recently added Teams PowerShell support! Sign up and attend an AMA and other events this month hosted by Sharing is Caring. At the same time, sign up for the PnP Recognition Program. Released PnP Core SDK v1.5.0 and PnP PowerShell v1.9.0, and much work is being done on other projects. Check out the TeamsFx authentication provider preview in MGT! To see current releases and latest updates/nightly builds, access the Repos via the links in table below. There were 7 new/updated script samples delivered this week. Open-source project status (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.8.0 GA with .NET 6.0 support added Prepping v1.9 PnP .NET Libraries - PnP Core SDK v1.5.0 GA with .NET 6.0 support added Prepping v1.6 PnP PowerShell v1.9.0 GA In progress: V2 POC, Prepping for v1.8, nightly releases Yo teams - generator-teams v3.5.0 GA v4.0.0-next Yo teams - yoteams-build-core v1.5.0 GA, Next: v1.6.0-next.1 Yo teams \u0026ndash; yoteams-deploy v1.1.0 GA Yo teams - msteams-react-base-component v3.1.1 Microsoft Graph Toolkit (MGT) v2.3.1 GA, TeamsFx authentication provider preview! Preparing v2.3.1 release, working on v3.0.0 - Aligning all Toolkit components to Fluent UI Web Components\n Note\nWhile version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities.\n The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\nActions   Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Join us at the next** Microsoft 365 platform call 11th of January @ 8 AM PT**\n Latest news from Microsoft engineering on Microsoft 365 topics Demos:  Rajdeep Chandra \u0026ndash; Introduction to Microsoft Graph connectors SDK Wajeed Shaikh \u0026ndash; Building a Microsoft Teams bot for scheduling tasks and to get reminders Sébastien Levert \u0026ndash; Introduction to Microsoft Graph Toolkit control      **Register for Sharing is Caring Events: **\n Ask me anything (AMA) PnP Search \u0026ndash; Tuesday, January 11th, 9am PST First Time Contributor Session \u0026ndash; Tuesday, January 25th, 2pm PST Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; Tuesday, January 18th, 1pm PST PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; Tuesday, February 8th, 2pm PST PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; Wednesday, January 26th, 7am PST First Time Presenter \u0026ndash; Wednesday, February 9th, 9am PST More than Code with VSCode \u0026ndash; Tuesday, February 15th, 2pm PST Maturity Model Practitioners \u0026ndash; Tuesday, January 18th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) \u0026ndash; February 2022 PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  no samples this week **Microsoft Power Platform Samples: **(https://aka.ms/powerplatform-samples)\n  no samples this week **Script Samples: **(https://aka.ms/script-samples)\n  6 new scenarios and 1 script update contributed by\n Rodrigo Pinto (Storm Technology) | @ScoutmanPt Reshmee Auckloo | @reshmeeauckloo Kasper Larsen | @kasperbolarsen Jiten Parmar  Blog: Getting started with PnP Script Samples \u0026ndash; aka.ms/script-samples/getting-started \u0026ndash; Many thanks!\nTogether Mode!  Happy New Year! Awesome to see everyone 170+ attendees in the call today. Please keep the feedback coming.\nDemos Demos delivered in this session\nBuilding enterprise solutions with Power Platform - Things to do and not to do \u0026ndash; based on learnings from creating Teams ProvisionGenie that uses Power Apps Canvas app as UI, Dataverse as relational database and Azure Logic Apps to handle provisioning, Power Platform and supporting technologies are great, but plan differently when creating enterprise ready solutions. Optimize developer experience, performance and security by using right tool for job. Don\u0026rsquo;ts and recommended do\u0026rsquo;s for process flows, identity management, and database presented. SharePoint site provisioning with Microsoft Teams Notifications using Bot Framework \u0026ndash; see how the PnP Framework (containing PnP Provisioning engine) is used to provision a new site based on the PnP template. Azure provisioning web job is triggered by a queue message from a custom site template (previously known as site design). Microsoft Teams bot pushes proactive notifications about current provisioning state to the configured channel via Adaptive Card updates. Notifications are electively disabled/enabled from card. Updates on Independent Publisher Connectors \u0026amp; Coinbase Connector Demo \u0026ndash;\n49 connectors in production, 34 in pipeline today! The Coinbase platform allows anyone to get crypto exchange rates, currencies, and current crypto market rates at a point in time. This connector was built by a non-developer in a Power Apps sandbox. Required creating first pull request and working through publishing process. Canvas app calls a flow that uses connector to get currency information. Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics Topics covered in this call\n  PnP .NET library updates - Bert Jansen (Microsoft) | @O365bert \u0026ndash; 6:50\n  PnP PowerShell updates - Bert Jansen (Microsoft) | @O365bert \u0026ndash; 8:54\n  yo Teams updates - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 9:45\n  Microsoft Graph Toolkit updates - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 10:19\n  Microsoft Script Samples - Paul Bullock (CaPa Creative Ltd) | @pkbullock \u0026ndash; 2:40\n  Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German \u0026ndash; 10:58\n  Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam \u0026ndash; 12:19\n  Demo 1: Building enterprise solutions with Power Platform - Things to do and not to do \u0026ndash; Luise Freese[ | @LuiseFreese ]\u0026ndash; 14:24\n  Demo 2: SharePoint site provisioning with Microsoft Teams Notifications using Bot Framework \u0026ndash; Sergei Sergeev (Mastaq) | @sergeev_srg \u0026ndash; 27:22\n  Demo 3: Updates on Independent Publisher Connectors \u0026amp; Coinbase Connector Demo \u0026ndash; Natalie Pienkowska (Microsoft) | @NataliePienkow1 \u0026amp; Roy Paar (Microsoft) | @RoyPaar ** ** ** **\n\u0026ndash; 40:50\n  Resources Additional resources around the covered topics and links from the slides.\n  D1: Site \u0026ndash; ProvisionGenie\n  D1: Blog \u0026ndash; Luise Freese\n  [[D2: ]]Article \u0026ndash; Building PnP Provisioning notifier Bot\n  [D2: ]Repo - Sample code which demonstrates how to use MS Teams bot to send PnP Provisioning progress notificatio...   [D2: ]Repo - PnP Framework   [D3: ]Repo - PowerPlatformConnector \u0026ndash; Coinbase   [D3: ]paconn 0.0.19 - Microsoft Power Platform Connectors CLI   [D3: ]API \u0026ndash; Coinbase Introduction   [D3: ]Sandbox \u0026ndash; Your Environment | (resolves to your organizations Power Apps environment)\n  [D3: ]Connectors - Welcome to the Independent Publisher Connector Directory!\n  General resources  Script Samples - Getting started with PnP Script Samples[ aka.ms/script-samples/getting-started] Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Microsoft 365 platform call \u0026ndash; January 11th at 8:00 am PST | https://aka.ms/m365-dev-call\n  Office add-in monthly call \u0026ndash; January 12th at 8:00 am PST | https://aka.ms/officeaddinscall\n  SharePoint Framework call \u0026ndash; January 13th at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Adaptive Cards monthly call \u0026ndash;January 13th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; January 19th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  M365 General Dev call \u0026ndash; January 20th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Microsoft Identity Platform call \u0026ndash; January 20th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n   \u0026ldquo;Sharing is caring\u0026rdquo;\nMicrosoft 365 PnP team, Microsoft - 7th of January 2022\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-6th-of-january/images/recording-6th-jan_hucedc8bb4ac4476dd1b7b832e5e4c0348_226918_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-6th-of-january/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 6th of January, 2021"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from January 4th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call Summary\nWelcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 640+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring during January - February. Upcoming Ask Me Anything (AMA) sessions for PnP Search in January! New class Viva Connections ACEs (Feb 2022) Tune into the weekly  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Microsoft 365 PnP Weekly - Videos, Podcasts focused on the latest news and topics on Microsoft 365 hosted by Vesa Juvonen and Waldek Mastykarz   Hear about what\u0026rsquo;s new with Teams and see 3 demos delivered by Microsoft presenters on latest capabilities of the Microsoft 365 platform.  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout and live at end of the call. Microsoft 365 Platform News Flash\n  What\u0026rsquo;s New in Microsoft Teams | December 2021\n  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n Ask me anything (AMA) PnP Search \u0026ndash; Tuesday, January 11th, 9am PST First Time Contributor Session \u0026ndash; Tuesday, January 25th, 2pm PST Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; Tuesday, January 18th, 1pm PST PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; Tuesday, February 8th, 2pm PST PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; Wednesday, January 26th, 7am PST First Time Presenter \u0026ndash; Wednesday, February 9th, 9am PST More than Code with VSCode \u0026ndash; Tuesday, February 15th, 2pm PST Maturity Model Practitioners \u0026ndash; Tuesday, January 18th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo\n  Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call\n  Call attention to your great work by using the #PnPWeekly on Twitter.\n   Welcome to the first call of the new year - 2022. Glad you\u0026rsquo;re here. See you soon. Demos Demos delivered in this session\n  **Introduction to Microsoft Teams ISV app monetization capabilities \u0026ndash; ** in addition to purchasing a Teams app in AppSource, users now see a subscription \u0026ldquo;button\u0026rdquo; when accessing an app in the Teams App Store as well as in the Microsoft Teams Admin Center. The button is accessing your published app in AppSource along with the platform\u0026rsquo;s transaction capabilities. Learn about the 5-step publishing process, license options, purchase options, and financial incentives.   Microsoft Graph Toolkit \u0026ndash; Using the Person Component in your solutions \u0026ndash; this session focuses on the Microsoft Graph Person control and options for customization. See how to use the Person component to get profile and image information on you, on another, on a group of others, on an other\u0026rsquo;s manager, presence, and on a person outside Graph. As well see customizing for rendering (styles) and for events. See code and rendering side-by-side.\n  Introduction to new Adaptive Cards samples for Viva Connections Quick View designs \u0026ndash; quick review of Viva Connections and 3 key experiences, the 3-layer Viva Connections Adaptive Card Extension architecture specifically for mobile, and finally Card design templates created in the last month that you can paste into the Dashboard Card designer or Adaptive Card Designer to create refined mobile experiences. Demo on Viva Connections adaptive cards designs guidance, samples and possible modification options reviewed.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 8:12 D1: Introduction to Microsoft Teams ISV app monetization capabilities \u0026ndash; James Skay (Microsoft) | @JamesSkay \u0026ndash; 10:43 D2: Microsoft Graph Toolkit \u0026ndash; Using the Person Component in your solutions \u0026ndash; Sébastien Levert (Microsoft) | sebastienlevert \u0026ndash; 19:18 D3: Introduction to new Adaptive Cards samples for Viva Connections Quick View designs \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 45:21  Resources Additional resources around the covered topics and links from the slides.\n  D1: Documentation - Include a SaaS offer with your Microsoft Teams app | aka.ms/teamsmonetization/getstarted\n  D2: Tools - Microsoft Graph Toolkit Playground   D2: Documentation - Person component in the Microsoft Graph Toolkit   D2: Repo \u0026ndash; Microsoft Graph Toolkit | aka.ms/mgt\n  D2: Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/MGT/docs\n  D2: Learn - Develop apps with the Microsoft Graph Toolkit | aka.ms/mgt/learn\n  D2: First session - 7 December 2021 - Discover the Microsoft Graph Toolkit \u0026ndash; Sébastien Levert (Microsoft) | sebastienlevert\n  D2: Second session \u0026ndash; 14 December 2021 - Microsoft Graph Toolkit \u0026ndash; Using Login Component in your solutions \u0026ndash; Sébastien Levert (Microsoft) | sebastienlevert   D3: Samples - Adaptive Card templates - design examples   D3: Documentation - Overview of Viva Connections Extensibility   D3: Tools \u0026ndash; Adaptive Cards Designer   D3: Documentation \u0026ndash; Overview of Viva Connections Extensibility   D3: Training - Extend Microsoft Viva Connections   D3: Documentation - Designing Viva Connections custom cards for your dashboard   General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   M365 General Dev call \u0026ndash; January 6th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Microsoft 365 platform call \u0026ndash; January 11th at 8:00 am PST | https://aka.ms/m365-dev-call\n  Office add-in monthly call \u0026ndash;January 12that 8:00 am PST | https://aka.ms/officeaddinscall\n  SharePoint Framework call \u0026ndash; January 13th at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Adaptive Cards monthly call \u0026ndash;January 13th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; January 19th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; January 20th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar\n  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.  More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 5th of January 2022\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-4th-of-january-2022/images/recording-4th-january_hu3c93dac9e7e228af834eec70cabc3f72_563396_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-4th-of-january-2022/","tags":[],"title":"Microsoft 365 Platform Call -- 4th of January, 2022"},{"categories":["Community post"],"contents":"Introduction This article is used whenever you are getting any content from SharePoint List/Library or anything else and rendering it in any component then it is difficult to get HTML from that component and extract CSS as well so here we will create a dynamic HTML (List or Table or anything else as per our requirement) and we can add some inline CSS as well. So in this article, we will see step-by-step implementations.\nImplementation 1. Register to Muhimbi API To get the trial version API key, Register to www.muhimbi.com. After registration, you have to activate a subscription and then you will get an API key, Access token, and Subscription ID on the registered email ID. To check API response, you can refer to https://api.muhimbi.com/api-docs/v1/index.html?url=/api-docs/v1/swagger.json#/Convert. After this, we will use the API key in the SPFx web part while calling an API.\n2. Create the SPFx web part\n Open a command prompt Move to the path where you want to create a project Create a project directory using: md muhimbi-export-html-content-to-pdf Move to the above-created directory using: cd muhimbi-export-html-content-to-pdf  Now execute the below command to create an SPFx solution: yo @microsoft/sharepoint It will ask some questions, as shown below,\n   After a successful installation, we can open a project in any source code tool. Here, I am using the VS code, so I will execute the command: code . Now go to the src \u0026gt; webparts \u0026gt; webpart \u0026gt; components \u0026gt; I{webpartname}Props.ts file and at here we will create some properties.\nimport { WebPartContext } from \u0026#34;@microsoft/sp-webpart-base\u0026#34;; import { HttpClient } from \u0026#34;@microsoft/sp-http\u0026#34;; export interface IMuhimbiExportHtmlContentToPdfProps { description: string; context: WebPartContext; apiKey: string; apiUrl: string; }  Create a file *I{webpartname}State.ts *inside src \u0026gt; webparts \u0026gt; webpart \u0026gt; components and create a state interface as below,\nexport interface IMuhimbiExportHtmlContentToPdfState{ showLoader: boolean; }  Create a service folder inside the src folder and then in this folder create a file called ConvertFileService.ts. And in this file, we will create services to download a file, create a blob, and covert file. We need to convert content to base64 string as API needs based64 content to convert a file.\n  Create a function to generate a blob as per the base64 string.   Create a function to download a file. We will use API key and API URL from the property pane so here we will pass it as an argument. and then in the download file function, we will use the POST method of a httpClient.\n  Now in the convertToPDF function, we will convert HTML content to base64, create a body, and pass some required properties to the downlaodFile function.   import { HttpClient, IHttpClientOptions, HttpClientResponse } from \u0026#39;@microsoft/sp-http\u0026#39;; import { WebPartContext } from \u0026#34;@microsoft/sp-webpart-base\u0026#34;; declare global { interface Navigator { msSaveBlob?: (blob: any, defaultName?: string) =\u0026gt; boolean; msSaveOrOpenBlob: (blob: Blob) =\u0026gt; void } } export class ConvertFileService { constructor(private context: WebPartContext) { } public generateBlob(base64string) { var file_bytes = atob(base64string); var byte_numbers = new Array(file_bytes.length); for (var i = 0; i \u0026lt; file_bytes.length; i++) { byte_numbers[i] = file_bytes.charCodeAt(i); } var byte_array = new Uint8Array(byte_numbers); var file_blob = new Blob([byte_array], { type: \u0026#34;application/pdf\u0026#34; }); return file_blob; } public async downloadFile(API_Key: string, url: string, fileName: string, request: any, extension: string) { if (API_Key == \u0026#39;\u0026#39;) return; try { var input_data = JSON.stringify(request); const requestHeaders: Headers = new Headers(); requestHeaders.append(\u0026#39;Content-type\u0026#39;, \u0026#39;application/json\u0026#39;); requestHeaders.append(\u0026#39;API_key\u0026#39;, API_Key); const httpClientOptions: IHttpClientOptions = { headers: requestHeaders, body: input_data }; return this.context.httpClient.post(url, HttpClient.configurations.v1, httpClientOptions) .then(async (response: HttpClientResponse) =\u0026gt; { let data = await response.json(); if (data[\u0026#39;result_code\u0026#39;] == \u0026#34;Success\u0026#34;) { var file_blob = this.generateBlob(data[\u0026#39;processed_file_content\u0026#39;]); if ((window.navigator as any).msSaveBlob) { (window.navigator as any).msSaveOrOpenBlob(file_blob, data[\u0026#39;base_file_name\u0026#39;] + extension); } else { var download_link = window.document.createElement(\u0026#34;a\u0026#34;); download_link.href = window.URL.createObjectURL(file_blob); download_link.download = fileName; download_link.click(); } } return data; }).catch((error: any): Promise\u0026lt;any\u0026gt; =\u0026gt; { console.log(\u0026#34;Getting error while dowloading file:\u0026#34;, error); return error; }); } catch (error) { console.log(error.message); } } public convertToPDF(API_Key: string, apiUrl: string, htmlContent: string, fileName: string) { const base64data = btoa(htmlContent); const postURL = apiUrl; const body = { \u0026#34;use_async_pattern\u0026#34;: false, \u0026#34;source_file_name\u0026#34;: `${fileName}.html`, \u0026#34;source_file_content\u0026#34;: base64data, \u0026#34;output_format\u0026#34;: \u0026#34;PDF\u0026#34;, }; return this.downloadFile(API_Key, postURL, fileName, body, \u0026#39;.pdf\u0026#39;); } }  Now move to the {WebpartName}WebPart.ts file.\n  Initialize service in onInit()\n  Create an API key and API URL properties in property pane configuration.\n  Set properties value in render() so we can use it in the component.   import * as React from \u0026#39;react\u0026#39;; import * as ReactDom from \u0026#39;react-dom\u0026#39;; import { Version } from \u0026#39;@microsoft/sp-core-library\u0026#39;; import { IPropertyPaneConfiguration, PropertyPaneTextField } from \u0026#39;@microsoft/sp-property-pane\u0026#39;; import { BaseClientSideWebPart, WebPartContext } from \u0026#39;@microsoft/sp-webpart-base\u0026#39;; import * as strings from \u0026#39;MuhimbiExportHtmlContentToPdfWebPartStrings\u0026#39;; import MuhimbiExportHtmlContentToPdf from \u0026#39;./components/MuhimbiExportHtmlContentToPdf\u0026#39;; import { IMuhimbiExportHtmlContentToPdfProps } from \u0026#39;./components/IMuhimbiExportHtmlContentToPdfProps\u0026#39;; import { HttpClient } from \u0026#34;@microsoft/sp-http\u0026#34;; import { ConvertFileService } from \u0026#39;../../services/ConvertFileService\u0026#39;; export interface IMuhimbiExportHtmlContentToPdfWebPartProps { description: string; context: WebPartContext; apiKey: string; apiUrl: string; } export default class MuhimbiExportHtmlContentToPdfWebPart extends BaseClientSideWebPart\u0026lt;IMuhimbiExportHtmlContentToPdfWebPartProps\u0026gt; { private _services: ConvertFileService = null; public onInit(): Promise\u0026lt;void\u0026gt; { return super.onInit().then(_ =\u0026gt; { this._services = new ConvertFileService(this.context); }); } public render(): void { const element: React.ReactElement\u0026lt;IMuhimbiExportHtmlContentToPdfProps\u0026gt; = React.createElement( MuhimbiExportHtmlContentToPdf, { description: this.properties.description, apiKey: this.properties.apiKey ? this.properties.apiKey : \u0026#34;8878a0cb-371f-4ff3-b223-af122514bd2a\u0026#34;, apiUrl: this.properties.apiUrl ? this.properties.apiUrl : \u0026#34;https://api.muhimbi.com/api/v1/operations/convert\u0026#34;, //\u0026#34;https://api.muhimbi.com/api/v1/operations/convert_html\u0026#34;,  context: this.context } ); ReactDom.render(element, this.domElement); } protected onDispose(): void { ReactDom.unmountComponentAtNode(this.domElement); } protected get dataVersion(): Version { return Version.parse(\u0026#39;1.0\u0026#39;); } protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration { return { pages: [ { header: { description: strings.PropertyPaneDescription }, groups: [ { groupName: strings.BasicGroupName, groupFields: [ PropertyPaneTextField(\u0026#39;description\u0026#39;, { label: strings.DescriptionFieldLabel }), PropertyPaneTextField(\u0026#39;apiKey\u0026#39;, { label: \u0026#34;API Key\u0026#34; }), PropertyPaneTextField(\u0026#39;apiUrl\u0026#39;, { label: \u0026#34;API Url\u0026#34; }) ] } ] } ] }; } }  Move to the {webpartname}.tsx file and then bind the service using the current context. At here for a demo purpose, I am using static HTML content with some inline CSS. Apart from this, you can create your own HTML as per your requirement or if you want to create dynamic HTML as per your content then we can also create it. Create a exportToPDF() to call service to convert from HTML to PDF. So here we will update the showLoader state and as per state, we will render data and spinner while the file is downloading. import * as React from \u0026#39;react\u0026#39;; import styles from \u0026#39;./MuhimbiExportHtmlContentToPdf.module.scss\u0026#39;; import { IMuhimbiExportHtmlContentToPdfProps } from \u0026#39;./IMuhimbiExportHtmlContentToPdfProps\u0026#39;; import { IMuhimbiExportHtmlContentToPdfState } from \u0026#39;./IMuhimbiExportHtmlContentToPdfState\u0026#39;; import { ConvertFileService } from \u0026#39;../../../services/ConvertFileService\u0026#39;; import { PrimaryButton, Stack } from \u0026#39;office-ui-fabric-react\u0026#39;; import { Spinner, SpinnerSize } from \u0026#39;office-ui-fabric-react/lib/Spinner\u0026#39;; export default class MuhimbiExportHtmlContentToPdf extends React.Component\u0026lt;IMuhimbiExportHtmlContentToPdfProps, IMuhimbiExportHtmlContentToPdfState\u0026gt; { private _services: ConvertFileService = null; private htmlContent = `\u0026lt;table style=\u0026#34;width:100%;border: 1px solid black;border-collapse: collapse;\u0026#34;\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th style=\u0026#34;border: 1px solid black;border-collapse: collapse;padding: 5px;\u0026#34;\u0026gt;Firstname\u0026lt;/th\u0026gt; \u0026lt;th style=\u0026#34;border: 1px solid black;border-collapse: collapse;padding: 5px;\u0026#34;\u0026gt;Lastname\u0026lt;/th\u0026gt; \u0026lt;th style=\u0026#34;border: 1px solid black;border-collapse: collapse;padding: 5px;\u0026#34;\u0026gt;Age\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid black;border-collapse: collapse;padding: 5px;\u0026#34;\u0026gt;Jill\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid black;border-collapse: collapse;padding: 5px;\u0026#34;\u0026gt;Smith\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid black;border-collapse: collapse;padding: 5px;\u0026#34;\u0026gt;50\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid black;border-collapse: collapse;padding: 5px;\u0026#34;\u0026gt;Eve\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid black;border-collapse: collapse;padding: 5px;\u0026#34;\u0026gt;Jackson\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid black;border-collapse: collapse;padding: 5px;\u0026#34;\u0026gt;94\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid black;border-collapse: collapse;padding: 5px;\u0026#34;\u0026gt;John\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid black;border-collapse: collapse;padding: 5px;\u0026#34;\u0026gt;Doe\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid black;border-collapse: collapse;padding: 5px;\u0026#34;\u0026gt;80\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt;`; constructor(props: IMuhimbiExportHtmlContentToPdfProps) { super(props); this.state = { showLoader: false } this._services = new ConvertFileService(this.props.context); } public exportToPDF = () =\u0026gt; { this.setState({ showLoader: true }); this._services.convertToPDF(this.props.apiKey, this.props.apiUrl, this.htmlContent, \u0026#39;test.pdf\u0026#39;).then(result =\u0026gt; { this.setState({ showLoader: false }); }).catch(error =\u0026gt; { console.log(\u0026#34;Getting error in export to PDF:\u0026#34;, error); this.setState({ showLoader: false }); }); } public render(): React.ReactElement\u0026lt;IMuhimbiExportHtmlContentToPdfProps\u0026gt; { const { description } = this.props; const { showLoader } = this.state; return ( \u0026lt;div className={styles.muhimbiExportHtmlContentToPdf}\u0026gt; \u0026lt;h1\u0026gt;{description}\u0026lt;/h1\u0026gt; \u0026lt;Stack\u0026gt; {showLoader \u0026amp;\u0026amp; \u0026lt;Spinner label=\u0026#34;Wait, wait..., file is downloading\u0026#34; size={SpinnerSize.large} /\u0026gt; } \u0026lt;PrimaryButton disabled={showLoader ? true : false} style={{ width: \u0026#39;200px\u0026#39;, display: \u0026#39;flex\u0026#39;, alignSelf: \u0026#39;end\u0026#39;, marginBottom: \u0026#39;15px\u0026#39; }} text=\u0026#34;Download as PDF\u0026#34; onClick={this.exportToPDF} allowDisabledFocus /\u0026gt; \u0026lt;div dangerouslySetInnerHTML={{ __html: this.htmlContent }} /\u0026gt; \u0026lt;/Stack\u0026gt; ); } }  Output ![Muhimbi - Export to pdf.gif](images/Muhimbi - Export to pdf.gif) Please find my source code.\nSummary In this article, we have seen the step-by-step implementation of Muhimbi API in the SPFx Web part.\n","image":"https://pnp.github.io/blog/post/how-to-convert-html-content-or-file-to-pdf-using-the-muhimbi-api/images/ChandaniPrajapati_0-1639758794000_hudd69b642523639c1769fd721c1856a48_56646_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-convert-html-content-or-file-to-pdf-using-the-muhimbi-api/","tags":["SharePoint framework (SPFx)"],"title":"How to convert HTML content or file to PDF using the Muhimbi API?"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"Viva Connections \u0026amp; SharePoint Framework bi-weekly community call recording from December 30th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary  Tune in each Tuesday for the Microsoft 365 platform community call. Next call on the 4th of January @ 8 AM PT  Latest news from Microsoft engineering on Microsoft 365 topics Michael Aldridge \u0026ndash; Introduction to Microsoft Teams ISV app monetization capabilities Sébastien Levert \u0026ndash; Introduction to Microsoft Graph Toolkit control Vesa Juvonen \u0026ndash; Introduction to new Adaptive Cards samples for Viva Connections Quick View designs   Register for training events in January - February hosted by Sharing is Caring. Register for the PnP Recognition Program. The Road Ahead after 1.14 and future PnP project activities in the last two weeks \u0026ndash; Happy New Year!  PnPjs client-side libraries - v3.0.0 update CLI for Microsoft 365 v4.3 beta update Reusable SPFx React Controls v3.5.0 released (support for SPFx v1.13) Reusable SPFx React Property Controls v3.3.0 released (support for SPFx v1.13)   1 extension, 3 web parts and 1 ACE was delivered in the last two weeks!  **Latest project updates include: **(Bold indicates update from previous report 2 weeks ago)  PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.13 GA, v1.14 public developer preview v1.14.0 beta early January, GA targeted for end of January PnPjs Client-Side Libraries v2.11.0 GA, v3.0.0 Preview. v 2.12 Delayed nightly builds of v3 CLI for Microsoft 365 v4.2.0 GA, v4.3 beta Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.5.0 3.5.0 supports SPFx v1.13 Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.3.0 3.3.0 supports SPFx v1.13 PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.5.2, v3.23.0 Release expected by calendar year end\n The host of this call is David Warner II (Catapult Systems) @DavidWarnerII. Q\u0026amp;A takes place as always in chat throughout the call. [Check out the new ship shape seating situation. Perfect for rocketing into the New Year! Hang on, see you soon. ]\nActions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Holiday Break Challenge!!! Choose and update an SPFx sample v1.7, v1.8, v1.9, earn a special Credly badge.  Register for Sharing is Caring Events:  Ask me anything (AMA) PnP Search \u0026ndash; Tuesday, January 11th, 9am PST First Time Contributor Session \u0026ndash; Tuesday, January 25th, 2pm PST Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; Tuesday, January 18th, 1pm PST PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; Tuesday, February 8th, 2pm PST PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; Wednesday, January 26th, 7am PST First Time Presenter \u0026ndash; Wednesday, February 9th, 9am PST More than Code with VSCode \u0026ndash; Tuesday, February 15th, 2pm PST Maturity Model Practitioners \u0026ndash; Tuesday, January 18th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Viva Connections \u0026ndash; Adaptive Card Extension for Microsoft Planner Tasks \u0026ndash; this ACE shows all Microsoft Planner tasks (consolidated view) for logged-in user\u0026rsquo;s associated plans, deep links to specific tasks directly in Planner, and filters tasks based on selected plan. Uses aysnc dropdown property pane field to fetch current user\u0026rsquo;s associated plans and Microsoft Graph to get plans and tasks. Submit action handling in ACE and Quick View, view multiple tasks within a single Adaptive Card.   SPFx Design Patterns \u0026ndash; Custom Properties (Part 2) - this demo focuses on Property Pane Field types and defining those types. Look at Property Pane fields, helpers, binding, property interface, attributes, indexing attributes, preconfigured/default values and dynamic values. Ways a user can edit a web part \u0026ndash; rich text or through properties. Adding methods to first party web parts and defining attributes that enable people to browse, search, subscribe to your web part content.   Viva Connections ACEs CardView Types in SharePoint Framework \u0026ndash; overview on three ACE CardView types - BaseBasicCardView, BasePrimaryTextCardView and BaseImage CardView. All extensions you create in scaffolding tool rely on these 3 card types and rendering is predefined by Microsoft. Look at properties, capabilities, and code for each type. Essentially BaseBasic (one text field, title and icon), BasePrimary (two text fields, title and icon), BaseImage (one text field, title, icon, image and buttons).\n  SPFx extension samples: (https://aka.ms/spfx-extensions)\n Show All Entries for Multiple Lines of Text Field Customizer * - Kinga Kazala | @kinga_kazala  * Link to be live soon!\nSPFx web part samples: (https://aka.ms/spfx-webparts)\n My Teams - Yves Habersaat | @yhabersaat Calendar - Mohammed Amer | @Mohammad3mer Taxonomy File Explorer * - Markus Möller (Avanade) | @moeller2_0 Advanced Page Properties - Abderahman Moujahid | @Abderahman88  * Link to be live soon!\n**PnP SPFx ACEs **https://aka.ms/spfx-aces\n **COVID Indicator* - **João Mendes | @joaojmendes  * to be posted soon. Thank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 6:32 PnPjs Client-Side Libraries - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 8:05 CLI for Microsoft 365 - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 8:45 PnP SPFx Controls - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 9:17 PnP Modern Search - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 10:09 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 10:38 PnP SPFx ACEs Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 13:14  Demos   Demo 1: Viva Connections \u0026ndash; Adaptive Card Extension for Microsoft Planner Tasks \u0026ndash; Ejaz Hussain (Content and Cloud) | @EjazHussain_ [\u0026ndash;][ 15:20]\n  Demo 2[: SPFx Design Patterns \u0026ndash; Custom Properties (Part 2) \u0026ndash; ]Hugo Bernier[ | @bernierh \u0026ndash; 26:59 ]\n  Demo 3: Viva Connections ACEs CardView Types in SharePoint Framework \u0026ndash; Paolo Pialorsi (PiaSys) | @PaoloPia [\u0026ndash;][ 44:30][ ]\n  Resources Additional resources around the covered topics and links from the slides.\n  D1: Sample - Planner Tasks   D2: Demo - SPFx Design Patterns \u0026ndash; Custom Properties (Part 1)| Hugo Bernier(Microsoft) | @bernierh, November 4   D2: Documentation - Make your SharePoint client-side web part configurable   D2: Documentation - Integrate web part properties with SharePoint   D3: Blog \u0026ndash; Viva blog | aka.ms/viva/blog   D3: Documentation - Overview of Viva Connections Extensibility | aka.ms/viva/connections/extensibility\n  D3: Samples - Viva Connection Adaptive Card Extensions (ACEs) sample repository | aka.ms/spfx-aces\n  PnP Weekly \u0026ndash; Episode 147 (December 13th) with Munich, Germany-based consultant and MVP, Markus Möller (Avanade) | @Moeller2_0 | video | podcast\n  PnP Weekly \u0026ndash; Episode 146 (December 6th) with Reykjavik, Iceland-based Consultant and MVP, Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp\n  General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned   SharePoint dev documentation\n  SharePoint dev issue list **Upcoming calls | Recurrent invites: **\n  Microsoft 365 platform call \u0026ndash; January 4that 8:00 am PST | https://aka.ms/m365-dev-call\n  M365 General Dev call \u0026ndash; January 6th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Office add-in monthly call \u0026ndash; January 12that 8:00 am PST | https://aka.ms/officeaddinscall\n  SharePoint Framework call \u0026ndash; January 13th at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Adaptive Cards monthly call \u0026ndash;January 13th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; January 19th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; January 20th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar\n  Viva Connections \u0026amp; SharePoint Framework bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Connections, Microsoft Teams, SharePoint Online, and also on-premises. Calls are used for the following objectives.\n SharePoint Framework engineering update from Microsoft Talk about PnP JavaScript Core libraries Office 365 CLI Updates SPFx reusable controls PnP SPFx Yeoman generator Share code samples and best practices Possible engineering asks for the field - input, feedback, and suggestions Cover any open questions on the client-side development Demonstrate SharePoint Framework in practice in Microsoft Viva, Microsoft Teams or SharePoint context You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 31st of December 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-30th-of/images/recording-30th-dec_hu53f284f92108119ce40e7c0fa2f8a327_229244_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-30th-of/","tags":[],"title":"Viva Connections \u0026 SharePoint Framework Community Call -- 30th of December, 2021"},{"categories":["Microsoft Identity platform community call"],"contents":"Call summary This month\u0026rsquo;s in-depth topic: A Zero Trust primer for developers. In this session, we begin by introducing developers quickly to the core Zero Trust principles: Verify explicitly, Use least privilege access, and Assume breach. We then expand why developer\u0026rsquo;s participation is critical in supporting Zero Trust policy rollouts by the IT team. We then proceed to lay down a few steps that developers can take to begin their journey towards building a good Zero trust ready app. We start with learning how to effectively use claims provided in tokens to [verify a user/subject explicitly]{.underline}, and then continue to discuss recommended practices for mobile apps. The Continuous Access Evaluation (CAE) feature is discussed in detail for developers, and we hope it will help jumpstart a developer\u0026rsquo;s journey to this absolutely critical piece of security that is becoming a must for all cloud apps. We then proceed to discuss a few steps to enable least privilege, like how to best publish and consume permissions for an API and then we finally move to discuss topics that help apps [recover swiftly from breaches]{.underline}, like practicing solid credential hygiene, and logging rich information.\n Bottom line \u0026ndash; developers play a critical role in building trustworthy applications as transition from a culture of implicit trust to that of explicit verification. The full developer guide of practices to build a Zero trust app is available at aka.ms/ztdev.\n This session was delivered by Kalyan Krishna - Sr Program Manager, Microsoft. Recorded December 16, 2021. Q\u0026amp;A in chat and at end of call.\nReferenced in this session  eBook - Developer guide to Zero Trust - Zero Trust for the Microsoft identity platform developer | aka.ms/ztdev Demo \u0026ndash; Continuous Access Evaluation (CAE) demo | aka.ms/caedemo Demo - Managed Identities with KeyVault demo | aka.ms/midemo Sample \u0026ndash; An ASP.NET Core web app that signs-in users with Azure AD and calls Microsoft Graph | aka.ms/identity-zerotrust-sample Documentation - Building Zero Trust ready apps with the Microsoft identity platform | aka.ms/zerotrustforidentitydeveloper Blog series - Achieving Zero Trust readiness in your apps #1: Why it matters | aka.ms/ZTRappsblog-part1 Documentation - Code samples for developers | aka.ms/aadcodesamples Sample - Add app roles to your application and receive them in the token | aka.ms/approles  Sample - Use groups \u0026amp; group claims to an ASP.NET Core Web app that signs-in users | aka.ms/groupssample Documentation \u0026ndash; Token Validation | aka.ms/validatetokens Sample - How to manually validate a JWT access token using the Microsoft identity platform | aka.ms/extendtokenvalidation Documentation - Developers\u0026rsquo; guide to Conditional Access authentication context - aka.ms/stepupauthn Documentation - Claims challenges, claims requests, and client capabilities | aka.ms/ClaimsChallenge  Documentation - Sign in any Azure Active Directory user using the multi-tenant application pattern | aka.ms/multi-tenant Documentation - Overview of the Microsoft Authentication Library (MSAL) | aka.ms/msal Documentation - Microsoft identity platform documentation | aka.ms/identityplatform   Actions  Download and go through the developer guide available at https://aka.ms/ztdev Let us know how we\u0026rsquo;re doing and suggest topics for future calls, please complete this survey https://aka.ms/IDDevCommunityCallSurvey Join us for the next Microsoft Identity Platform community call on January 20^th^ at 9:00am PT   Stay connected  Twitter https://twitter.com/microsoft365dev​ and @azuread YouTube https://aka.ms/M365DevYouTube​ (Developer channel) and https://aka.ms/m365pnp/videos (Community channel) Blogs https://aka.ms/m365pnp/community/blog Recurrent Invite https://aka.ms/IDDevCommunityCalendar   ","image":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-december-2021/images/identity-call-THumbnail-November-2021_huf5cc024d707c70e25b8672bc015b4d91_128184_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-december-2021/","tags":[],"title":"Microsoft Identity Platform community call -- December 2021"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from December 28th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos\nCall summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets. For development usage only! Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 640+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring during January-February. Upcoming Ask Me Anything (AMA) sessions for PnP Search and Open Discussions in January! New class Viva Connections ACEs (Feb 2022) Join us for Viva Connections and SharePoint Framework community call, 30th of December @7:00 AM PT. Three demos will be delivered - Building Viva Connection ACE extension or managing Planner Tasks, Viva Connections ACEs CardView Types in SharePoint Framework, and SharePoint Framework design patterns. Hear the summary of two recently published Microsoft 365 Platform related posts. Thank you for the 2021, we are looking forward on the 2022 together with you\u0026hellip; Q\u0026amp;A / AMA / Discussion / Ad-hoc demos / and more... Discussion and Resources referenced below   The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Discussion takes place throughout this call. Microsoft 365 Platform News Flash\n New features in Microsoft Graph Bookings APIs provide enhanced booking infrastructure Microsoft Graph Bookings APIs now available on the v1 endpoint  Actions  Submit a Sample request to create a web part that replicates the on prem capability - Check Permissions.  Holiday Break Challenge!!! Choose and update an SPFx sample v1.7, v1.8, v1.9, earn a special Credly badge.  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  Ask me anything (AMA) PnP Search \u0026ndash; Tuesday, January 11th, 9am PST First Time Contributor Session \u0026ndash; Tuesday, January 25th, 2pm PST Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; Tuesday, January 18th, 1pm PST PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; Tuesday, February 8th, 2pm PST PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; Wednesday, January 26th, 7am PST First Time Presenter \u0026ndash; Wednesday, February 9th, 9am PST More than Code with VSCode \u0026ndash; Tuesday, February 15th, 2pm PST Maturity Model Practitioners \u0026ndash; Tuesday, January 18th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Always nice to see YOU and the actual people who are behind the scenes of this community. Wishing you a happy and healthy entry into 2022. **Discussion and Resources referenced **in this session\n Developer tenant renewals and possibility of multi-geo and GCC dev tenants. Cloud adoption challenges/opportunities WW including supporting work related to personal data security in EU. https://servicetrust.microsoft.com Global datacenters - Where your Microsoft 365 customer data is stored Updates on combining PnP Community calls \u0026ndash; no changes at present. Microsoft 365 Developer call promotion (agenda, recordings, demos) on twitter @Microsoft365Dev and on Facebook https://www.facebook.com/M365Dev.  Logic behind not provisioning Site Assets library when providing site? Code at SharePoint Provisioning Service, In Script Samples Library see Ensure the Site Assets Library is created. Plugs for Unified Sample Solution Gallery and PnP Recognition Program Microsoft Loop \u0026ndash; previewed at Ignite, details to come in 2022. Fluid Framework is behind Microsoft Loop. See Fluid Framework Documentation and learn about connecting to the Azure Fluid Relay. Post \u0026ndash; Stay in sync with Microsoft Loop.   Agenda  Latest updates and news on the Microsoft 365 platform \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 7:19 Open discussion on any topics around Microsoft 365 \u0026ndash; 9:37  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   SharePoint Framework call \u0026ndash; December 30th at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Microsoft 365 platform call \u0026ndash; January 4that 8:00 am PST | https://aka.ms/m365-dev-call\n  M365 General Dev call \u0026ndash; January 6th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Office add-in monthly call \u0026ndash; January 12that 8:00 am PST | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash;January 13that 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; January 19th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; January 20th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.    More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 29th of December 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-28th-of-december-2021/images/recording-28th-dec_hub995d9bfd68ee1a544fc74ae29d67eab_495282_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-28th-of-december-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 28th of December, 2021"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary It\u0026rsquo;s the perfect time to visit the Microsoft 365 tenant \u0026ndash; script samples gallery (123 scenarios and 168 scripts) today. Sign up and attend an AMA and other events in January-February hosted by Sharing is Caring. At the same time, sign up for the PnP Recognition Program. PnP project version releases this week include - PnP .NET Libraries - PnP Framework v1.8.0 GA, PnP Core SDK v1.5.0 GA, PnP PowerShell v1.9.0 GA and Yo teams - yoteams-build-core Next: v1.6.0-next.1.** ** To see current releases and latest updates/nightly builds, access the Repos via the links in table below. 8 new/updated script samples, 1 Microsoft Teams sample and 5 Power Apps samples were delivered this week! Open-source project status (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.8.0 GA with .NET 6.0 support added PnP .NET Libraries - PnP Core SDK v1.5.0 GA with .NET 6.0 support added PnP PowerShell v1.9.0 GA In progress: V2 POC, Prepping for v1.8, nightly releases Yo teams - generator-teams v3.5.0 GA v4.0.0-next Yo teams - yoteams-build-core v1.5.0 GA, Next: v1.6.0-next.1 Yo teams \u0026ndash; yoteams-deploy v1.1.0 GA Yo teams - msteams-react-base-component v3.1.1 Microsoft Graph Toolkit (MGT) v2.3.1 GA Preparing v2.3.1 release, working on v3.0.0 - Aligning all Toolkit components to Fluent UI Web Components\n Note\nWhile version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities.\n The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\nActions\n  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Join us at the next** Microsoft 365 platform call 28th of December @ 8 AM PT,** Social gathering for coffee/tea or your chosen drink. Got questions? \u0026ndash; Join and let\u0026rsquo;s have a chat.\n  Provide feedback to project teams or roll up your sleeves and join a project team.   Holiday Break Challenge!!! Choose and update an SPFx sample v1.7, v1.8, v1.9 and earn a special Credly badge.\n  Create a sample, i.e., for Teams visit https://aka.ms/teams-sample-wishlist[ ]\n  **Register for Sharing is Caring Events: **\n Ask me anything (AMA) PnP Search \u0026ndash; Tuesday, January 11th, 9am PST First Time Contributor Session \u0026ndash; Tuesday, January 25th, 2pm PST Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; Tuesday, January 18th, 1pm PST PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; Tuesday, February 8th, 2pm PST PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; Wednesday, January 26th, 7am PST First Time Presenter \u0026ndash; Wednesday, February 9th, 9am PST More than Code with VSCode \u0026ndash; Tuesday, February 15th, 2pm PST Maturity Model Practitioners \u0026ndash; Tuesday, January 18th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) \u0026ndash; February 202 PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Tab Meeting StageView basic - Microsoft Teams App - Markus Möller (Avanade) | @Moeller2_0 **Microsoft Power Platform Samples: **(https://aka.ms/powerplatform-samples)\n  COVID Vaccine Survey PowerApp - Siddharth Vaghasia | @siddh_me \u0026amp; Mayuresh Joshi\n  New Employee Tip of the Day Flow - Adam Wójcik | @Adam25858782\n  Icon Button Component - Pavel Kovalevskij   Refresh Microsoft Graph Data in Power BI - Scott McKenzie | @365EDUBI\n  JSON Object to Power Fx Table Function - Bartolome Sorrentino** **| @bsorrentinoJ **Script Samples: **(https://aka.ms/script-samples)\n  5 new and 3 updated scenario samples contributed by\n Adam Wójcik | @Adam25858782 Chandani Prajapati | @Chandani_SPD Pete Skelly | @pskelly Siddharth Vaghasia | @siddh_me Kasper Bo Larsen | @kasperbolarsen Paul Bullock | @pkbullock \u0026ndash; Many thanks!  Together Mode!  [Together here during the holiday\u0026rsquo;s because - why not? Great seeing everyone today. Happy holidays and new year to you and family. ]\nDemos Demos delivered in this session\nTeams Meetings Apps: Emoji feedback with bot and Adaptive Card universal action model \u0026ndash; enables meeting participants to provide feedback at the end of the meeting using a simple emoji. Action is triggered by end of meeting event in Activity Handler. The bot sends an adaptive card to the meeting\u0026rsquo;s chat with 5 emoji buttons requesting feedback. Once voted, voters see current sentiment of all voters. Uses adaptive card universal action model (UAM).\nIntroduction to Microsoft 365 Universal Sample Gallery \u0026ndash; opens with a cleaver Night Before Christmas story of expectations, deadlines, and miracles. A wish granted \u0026ndash; a single curated access point for samples from GitHub Repos encompassing the Microsoft 365 suite of products. Samples are vetted, metadata tagged/refinable by product, technology, author, compatibility\u0026hellip;, include supporting documents, author profile, and demo video, if exist. Site is launched, instruction on how to request and/or deliver samples. Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics Topics covered in this call\n PnP .NET library updates - Paolo Pialorsi (PiaSys.com) | @paolopia \u0026ndash; 6:08 PnP PowerShell updates - Paolo Pialorsi (PiaSys.com) | @paolopia \u0026ndash; 7:46 yo Teams updates - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 8:40 Microsoft Graph Toolkit updates - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 9:14 Microsoft Script Samples - Paul Bullock (CaPa Creative Ltd) | @pkbullock \u0026ndash; 2:22 Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German \u0026ndash; 9:55 Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam \u0026ndash; 11:22 Demo 1: Teams Meetings Apps: Emoji feedback with bot and Adaptive Card universal action model \u0026ndash; Markus Möller (Avanade) | @Moeller2_0 \u0026ndash; 13:36 Demo 2: Introduction to Microsoft 365 Universal Sample Gallery \u0026ndash; Hugo Bernier | @bernierh \u0026amp; Bob German | @Bob1German \u0026ndash; 25:09  Resources Additional resources around the covered topics and links from the slides.\n D1: Article \u0026ndash; Meeting feedback with Microsoft Teams Meeting App  D1: Sample \u0026ndash; bot meeting lifecycle feedback - Microsoft Teams App  D1: Documentation - Prerequisites for apps in Teams meetings  D2: Website - Drive value with Microsoft 365 adoption tools  D2: Samples - Sample Solution Gallery  D2: Issues - Issue: 🧪 Sample request  PnP Weekly \u0026ndash; Episode 147 (December 13th) with Munich, Germany-based consultant and MVP, Markus Möller (Avanade) | @Moeller2_0 | video | podcast  General resources  Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Microsoft 365 platform call \u0026ndash; December 28th at 8:00 am PST | https://aka.ms/m365-dev-call\n  SharePoint Framework call \u0026ndash; December 30th at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  M365 General Dev call \u0026ndash; January 6th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Office add-in monthly call \u0026ndash; January 12th at 8:00 am PST | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash;January 13th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; January 19th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; January 20th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n   \u0026ldquo;Sharing is caring\u0026rdquo;\nMicrosoft 365 PnP team, Microsoft - 24th of December 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-23rd-of/images/recording-23rd-dec_hu6af2d9930539735c1f48566f3af56d83_186718_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-23rd-of/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 23rd of December, 2021"},{"categories":["Microsoft 365 platform call"],"contents":"[Microsoft 365 Platform Community Call - weekly community call recording from December 21st, is now available from the Microsoft 365 Community YouTube channel at]http://aka.ms/m365pnp/videos\nCall summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  On the 28th of December, we\u0026rsquo;ll have this call like this one - a social gathering for coffee/tea or your chosen drink and questions with discussion \u0026ndash; Looking forward to the chat. Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 639+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring during December-January. Upcoming Ask Me Anything (AMA) sessions for PnP Search and Open Discussions in January! New class Viva Connections ACEs (Feb 2022) Four recent Microsoft 365 Platform related stories. Q\u0026amp;A / AMA / Discussion / Ad-hoc demos / and more... - Discussion and Resources referenced below   The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Discussion takes place throughout this call. Microsoft 365 Platform News Flash\n Microsoft Graph Data Connect: Demystifying User Scopes Teams JS SDK v2 public preview update: Teams apps in Outlook Web Stay in sync with Microsoft Loop Connecting networks of information with Microsoft Graph connector partners   Actions  Submit a Sample request to create a web part that replicates the on prem capability - Check Permissions.  Holiday Break Challenge!!! Choose and update an SPFx sample v1.7, v1.8, v1.9, earn a special Credly badge.  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  Ask me anything (AMA) PnP Search \u0026ndash; Tuesday, January 11th, 9am PST First Time Contributor Session \u0026ndash; Tuesday, January 25th, 2pm PST Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; Tuesday, January 18th, 1pm PST PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; Tuesday, February 8th, 2pm PST PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; Wednesday, January 26th, 7am PST First Time Presenter \u0026ndash; Wednesday, February 9th, 9am PST More than Code with VSCode \u0026ndash; Tuesday, February 15th, 2pm PST Maturity Model Practitioners \u0026ndash; Tuesday, January 18th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Thank you for being part of this community in 2021, we are looking forward to continuing sharing and caring with community in 2022. **Discussion and Resources referenced **in this session\n Vesa\u0026rsquo;s work-in-progress on Adaptive Card Design samples https://github.com/pnp/AdaptiveCards-Templates. When complete the samples will be surfaced through the Sample Solution Gallery.  OneDrive file retention and transfer options. Using PnP PowerShell and provisioning templates to create sites. Templates at https://lookbook.microsoft.com and at SharePoint Provisioning Templates. Calling Microsoft Graph to get members of a shared mailbox. Get Outlook messages in a shared or delegated folder. See current request in Graph ideas - https://aka.ms/graphrequests for Graph API manage shared mailbox access. Applicable to you, then vote for the capability.  Presently product organizations are transitioning suggestions from User Voice to Microsoft 365 Developer Platform ideas site (Tech Community site) to final place Feedback Portal (Microsoft.com).  How to list all sites in a tenant that user has access and how to display all users with any level of access to a site collection? Options Get-PnPUser cmdlet; Use PnP PowerShell and scripts for this task - PnP PowerShell, Script Samples; look at the Security Grid web part sample. Challenge \u0026ndash; submit a Sample request to create a web part that replicates the on prem capability - Check Permissions.  When is CSOM (tenant/admin) stuff moving to Graph? It\u0026rsquo;s happening presently and will continue over time. Can multiple developers use a single developer sandbox? Yes, but watch code overlap.  Using SharePoint webhooks to subscribe to multiple SharePoint lists in a Flow. Implementation and licensing options are discussed. What is the future of MGT (Microsoft Graph Toolkit)? Presently integrating with Fluent and with other products as MGT is becoming the de facto standard for creating Microsoft 365 connected experiences. Options for creating a Viva Connections Dashboard in a browser - ACE card designer, dynamic cards, 1st[ and 2]nd[ party cards. ]  Topics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 10:01 Open discussion on any topics around Microsoft 365 \u0026ndash; 14:12  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   M365 General Dev call \u0026ndash; December 23rd at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Microsoft 365 platform call \u0026ndash; December 28that 8:00 am PST | https://aka.ms/m365-dev-call\n  SharePoint Framework call \u0026ndash; December 30th at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; January 12that 8:00 am PST | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash;January 13that 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; January 19th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; January 20th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.    More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 22nd of December 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-21st-of-december-2021/images/recording-21st-dec_hud3ff3fbca5813c936c91f8e148d5e226_460787_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-21st-of-december-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 21st of December, 2021"},{"categories":["Microsoft 365 Platform Community update"],"contents":"Microsoft 365 Community (PnP) December 2021 update is out with a summary of the latest guidance, samples, and solutions from Microsoft or from the community for the community. This article is a summary of all the different areas and topics around the community work we do around Microsoft 365 ecosystem during the past month. Thank you for being part of this success.\nSharing is caring!\nWhat is Microsoft 365 Community (PnP) Microsoft 365 PnP is a nick-name for Microsoft 365 platform community activities coordinated by numerous teams inside of the Microsoft 365 engineering organizations. PnP is a community-driven open-source initiative where Microsoft and external community members are sharing their learning\u0026rsquo;s around implementation practices for Microsoft 365. Topics vary from Microsoft Viva, Microsoft Graph, Microsoft Teams, Power Platform, OneDrive and SharePoint. Active development and contributions happen in GitHub by providing contributions to the samples, reusable components, and documentation for different areas. PnP is owned and coordinated by Microsoft engineering, but this is work done by the community for the community.\n  See more details from New Microsoft 365 Patterns and Practices (PnP) team model with new community leads The initiative is facilitated by Microsoft, but we have multiple community members as part of the PnP team (see team details in end of the article) and we are always looking to extend the PnP team with more community members. Notice that since this is open-source community initiative, so there\u0026rsquo;s no SLAs for the support for the samples provided through GitHub. Obviously, all officially released components and libraries are under official support from Microsoft. Main resources around Microsoft 365 Community:\n  Microsoft 365 Community - http://aka.ms/m365pnp - One location for all the resources and news around Microsoft 365 platform\n  Microsoft 365 community blog - http://aka.ms/m365pnp/community/blog\n  Microsoft 365 development blog - http://aka.ms/m365pnp-blog\n  Microsoft 365 Community Channel on YouTube - http://aka.ms/m365pnp-videos\n  Microsoft 365 Developer YouTube channel - https://aka.ms/M365DevYouTube\n  ✍ Latest Dev Blog posts Here are the latest blog posts and announcements around Microsoft 365 development topics from https://developer.microsoft.com/microsoft-365/blogs.\n  16th of December -Microsoft Graph Data Connect: Demystifying User Scopes - Nik Charlebois (Microsoft) | @NikCharlebois\n  15th of December Teams JS SDK v2 public preview update: Teams apps in Outlook Web Zakiullah Khan (Microsoft)\n  15th of December - Stay in sync with Microsoft Loop - Mathangi Chakrapani (Microsoft)\n  15th of December - Connecting networks of information with Microsoft Graph connector partners\n  14th of December - Announcing the public preview of To Do Tasks API\n  13th of December - Announcing delta query support for the Microsoft Graph Assignments API\n  8 t of December - Public preview of SharePoint Framework 1.14 \u0026ndash; with updates for Viva Connections, Microsoft Teams and... - Vesa Juvonen (Microsoft) | @VesaJuvonen\n  7th of December - Understanding Azure AD Single Sign-on for Microsoft Teams apps - Bob German (Microsoft) | @Bob1German\n  2nd of December - Developing enterprise-ready Microsoft Teams apps with Teams ToolKit v3.0 - Tomomi Imura (Microsoft) | @girlie_mac\n  1st of December Let\u0026rsquo;s decode: Single Sign-on in Microsoft Teams tabs - Rabia Williams (Microsoft) | @williamsrabia Latest community posts at https://aka.ms/m365pnp/community/blog\n  20th of December - David Chesnut (Microsoft) | @davidchesnut - Office Add-in Samples - December 2021 update\n  11th of December - Tomasz Poszytek| @TomaszPoszytek - Display images in Adaptive Cards\n  10th of December - Albert-Jan Schot (BLIS Digital) | @appieschot - A JMESPath cheat sheet for the CLI for Microsoft 365\n  3rd of December - Anand Ragav (Ericsson) | @AnandVRagav - Creating a video portal in SharePoint with JSON formatted document library\n  26th of November - Albert-Jan Schot (BLIS Digital) | @appieschot - CLI for Microsoft 365 v4.2\n  24th of November - Arjun Menon (Tata Consulting Services) | @arjunumenon - Monitor and Notify M365 health using CLI for Microsoft 365\n  23rd of November - Anand Ragav (Ericsson) | @AnandVRagav - Create an event page with SharePoint, SharePoint Spaces and formatted Lists Community call recording blog posts:\n  17th of December - Viva Connections \u0026amp; SharePoint Framework Community Call \u0026ndash; 16th of December, 2021\n  16th of December - Power Apps Community Call \u0026ndash; December 2021\n  16th of December - Power Apps Community Call \u0026ndash; November 2021\n  16th of December - Office Add-ins community call \u0026ndash; December 8, 2021\n  15th of December - Microsoft 365 Platform Call \u0026ndash; 14th of December, 2021\n  10th of December - Microsoft 365 Developer Community Call recording \u0026ndash; 9th of December, 2021\n  7th of December - Microsoft 365 Platform Call \u0026ndash; 7th of December, 2021\n  3rd of December - Viva Connections \u0026amp; SharePoint Framework Community Call \u0026ndash; 2nd of December, 2021\n  1st of December - Office Add-ins community call \u0026ndash; November 10, 2021\n  1st of December - Microsoft 365 Platform Call \u0026ndash; 30th of November, 2021\n  26th of November - Microsoft 365 Developer Community Call recording \u0026ndash; 25th of November, 2021\n  24th of November - Microsoft 365 Platform Call \u0026ndash; 23rd of November, 2021 Microsoft 365 Developer Podcasts\n  13th of December - M365 Dev Podcast - Onboarding Developers with Ahmed El Herazy and Wes Hackett\n  7th of December - M365 Dev Podcast - Kiota, the OpenAPI SDK Generator with Vincent Biret\n  23rd of November - M365 Dev Podcast - Microsoft News: November 2021 Microsoft 365 PnP Weekly Podcasts and vlogs\n  14th of December - Microsoft 365 PnP Weekly - Episode 147 - Markus Möller (Avanade)\n  7th of December - Microsoft 365 PnP Weekly - Episode 146 - Derek Cash-Peterson (Sympraxis Consulting)\n  30th of November - Microsoft 365 PnP Weekly - Episode 145 - Rabeb Othmani (Microsoft)\n  Community Calls There are numerous different community calls on different areas. All calls are being recorded and published either from Microsoft 365 Developer or Microsoft 365 Community (PnP) YouTube channels. Recordings are typically released within the following 24 hours after the call. You can find a detailed agenda and links to specific covered topics on blog post articles at the Microsoft 365 developer blog when the videos are published.\n Microsoft 365 Platform Call - https://aka.ms/m365-dev-call - Updates and demos from Microsoft as weekly call on Tuesdays - topics vary from Microsoft Teams, Microsoft Graph, Power Platform, SharePoint, OneDrive and more Adaptive Cards https://aka.ms/adaptivecardscommunitycall - Updates and news around Adaptive Cards with live demos Microsoft identity platform https://aka.ms/IDDevCommunityCalendar - Latest on the identity side Office Add-ins https://aka.ms/officeaddinscommunitycall - News and community work around Office add-ins with live demos PowerApps https://aka.ms/PowerAppsMonthlyCall - Monthly summary on PowerApps community with live demos M365 Community Call https://aka.ms/spdev-sig-call - Bi-weekly - General topics on Microsoft 365 Dev from various aspects - Microsoft Teams, Microsoft Graph Toolkit, Provisioning, Automation, Scripting, Power Automate, Solution design Viva Connections \u0026amp; SharePoint Framework Community call https://aka.ms/spdev-spfx-call - Bi-weekly - Consists of topics around SharePoint Framework and JavaScript-based development in the Microsoft Teams and in SharePoint platform.  If you are interested in doing a live demo of your solution or sample in these calls, please do reach out to the PnP Team members (contacts later in this post) and they are able to help with the right setup. These are great opportunities to gain visibility for example for existing MVPs, for community members who would like to be MVPs in the future or any community member who\u0026rsquo;d like to share some of their learnings.\nMicrosoft 365 Community (PnP) Ecosystem in GitHub Most of the community driven repositories are in the PnP GitHub organization as samples are not product specifics as they can contain numerous different solutions or the solution works in multiple different applications.\n Microsoft Graph Toolkit - Repository and project on Microsoft Graph Toolkit controls - welcomes community contributors PnPjs - PnPjs Framework repository CLI Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings generator-spfx - Open-source Yeoman generator which extends the out-of-the-box Yeoman generator for SharePoint with additional capabilities generator-teams - Open-source Microsoft Teams Yeoman generator - Bots, Messaging Extensions, Tabs, Connectors, Outgoing Web hooks and more teams-dev-samples - Microsoft Teams targeted samples from community and Microsoft engineering script-samples - Scripting samples for automating operations in Microsoft 365 with PowerShell modules or CLIs Sharing is Caring - Getting started on learning how to contribute and be active on the community from GitHub perspective. pnpcore - The PnP Core SDK is an SDK designed to work against Microsoft 365 with Microsoft Graph API first approach powershell - PnP PowerShell module which is PowerShell Core module targeted for Microsoft 365 pnpframework - PnP Framework is a .Net Standard 2.0 library targeting Microsoft 365 containing the PnP Provisioning engine and a ton of other useful extensions spfx-reference-scenarios - Samples for the Microsoft Teams and Viva Connections, implemented using SharePoint Framework sp-dev-fx-aces - Samples on the Adaptive Card Extensions for Microsoft Viva sp-dev-fx-webparts - Client-side web part samples from community and Microsoft engineering sp-dev-fx-extensions - Samples and tutorial code around SharePoint Framework Extensions sp-dev-fx-library-components - Samples and tutorial code around the SharePoint Framework library components sp-starter-kit - Starter kit solution for SharePoint modern experiences sp-dev-build-extensions - Different build extensions like gulp tasks and gulp plugins from the community and engineering around SharePoint development sp-dev-solutions - Repository for more polished and fine-tuned reusable solutions build with SharePoint Framework sp-dev-samples - Repository for other samples related on the SharePoint development topics - WebHooks etc. sp-dev-fx-controls-react - Reusable content controls for SharePoint Framework solutions build with React sp-dev-fx-property-controls - Reusable property pane controls to be used in web parts list-formatting - Open-source community-driven repository for the column and view formatting JSON definitions sp-dev-site-scripts - Open-source community-driven repository for community Site Designs and Site Scripts sp-dev-modernization - Tooling and guidance around modernizing SharePoint from classic to modern sp-power-platform-solutions - Solution and sample code for SharePoint Power Platform solutions powerfx-samples - Samples that demonstrate different usage patterns for the Power Fx low-code programming language\\ powerapps-samples - Samples that demonstrate different usage patterns for Power Apps powerautomate-samples - Samples that demonstrate different usage patterns for Power Automate powerva-samples - Samples that demonstrate different usage patterns for Power Virtual Agents  All SharePoint specific repositories or services supported directly by Microsoft are located in the SharePoint GitHub organization\n sp-dev-docs - Source for new SharePoint dev center documentation exposed from http://docs.microsoft.com/sharepoint/dev sp-dev-provisioning-templates - Open-source templates used by the SharePoint Look Book site sp-provisioning-service - Source code of the SharePoint look book site Classic PnP named repositories - older tooling PnP-Tools - Tools and scripts targeted more for IT Pro\u0026rsquo;s and for on-premises for SP2013 and SP2016 PnP-Provisioning-Schema - PnP Provisioning engine schema repository  Repositories in the GitHub Microsoft Search organization controlled by the PnP initiative\n pnp-modern-search - Home of PnP Modern Search solutions, see more from the documentation Other related resources from GitHub Office add-in Patterns and Practices in GitHub - Community contributions welcome! Microsoft Graph GitHub organization OfficeDev GitHub organization - Includes all Microsoft Teams samples from Microsoft  What\u0026rsquo;s supportability story around the community tooling and assets? Following statements apply across all of the community lead and contributed samples and solutions, including samples, core component(s) and solutions, like SharePoint Starter Kit, yo teams or PnP PowerShell. All Microsoft released SDKs and tools are supported based on the specific tool policies.\n PnP guidance and samples are created by Microsoft \u0026amp; by the Community PnP guidance and samples are maintained by Microsoft \u0026amp; community PnP uses supported and recommended techniques PnP is an open-source initiative by the community \u0026ndash; people who work on the initiative for the benefit of others, have their normal day job as well PnP is NOT a product and therefore it\u0026rsquo;s not supported by Premier Support or other official support channels PnP is supported in similar ways as other open source projects done by Microsoft with support from the community by the community There are numerous partners that utilize PnP within their solutions for customers. Support for this is provided by the Partner. When PnP material is used in deployments, we recommend being clear with your customer/deployment owner on the support model Please see the specifics on the supportability on the tool, SDK or component repository or download page.  Microsoft 365 PnP team model    In April 2020 we announced our new Microsoft 365 PnP team model and grew the MVP team quite significantly. PnP model exists for having more efficient engagement between Microsoft engineering and community members. Let\u0026rsquo;s build things together. Your contributions and feedback is always welcome! During August, we also crew the team with 5 new members. PnP Team coordinates and leads the different open-source and community efforts we execute in the Microsoft 365 platform. We welcome all community members to get involved on the community and open-source efforts. Your input do matter!\n New Microsoft 365 Patterns and Practices (PnP) team members \u0026ndash; November 2021 - Geetha Sivasailam (Artis Consulting) | @GSiVed, Natalie Pienkowska (Microsoft) | @NataliePienkow1, Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp, João J. Mendes (Valo) | joaojmendes, Joel Rodrigues (Storm Technology) | @JoelFMRodrigues, Rick Van Rousselt (Advantive) | @RickVanRousselt, Stephan Bisser (Solvion) | @stephanbisser, Tetsuya Kawahara | @techan_k, and Thomas Gölles (Solvion) | @thomyg New Microsoft 365 Patterns and Practices (PnP) team members - May 2021 - Gautam Sheth (Valo) and Patrick Lamber (Experts Inside AG) New Microsoft 365 Patterns and Practices (PnP) team members - February 2021 - April Dunnam (Microsoft), Emily Mancini (Sympraxis Consulting) and Veronique Lengelle (CPS) New Microsoft 365 Patterns and Practices (PnP) team members - December 2020 - Luise Freese and Sébastien Levert  New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 - Albert-Jan Schot (BLIS Digital), Koen Zomers (Microsoft), Paul Bullock (CaPa Creative), Rabia Williams (Microsoft) and Yannick Plenevaux (PVX Solutions)  Got feedback, suggestions or ideas? - Please let us know. Everything we do in this program is for your benefit. Feedback and ideas are more than welcome so that we can adjust the process for benefitting you even more. Microsoft 365 PnP Recognition Program    We are excited to announce new community contributor program for all the active community members. Through this program you can get officially acknowledged with the a Credly badge around your work on our open-source and community channels. See more from https://aka.ms/m365pnp-recognition. Thank you for being part of this journey with us.\n⚙ Area-specific updates These are different areas which are closely involved on the community work across the PnP initiative. Some are lead and coordinated by engineering organizations, some are coordinated by the community and MVPs.\nMicrosoft Graph Toolkit    Microsoft Graph Toolkit is engineering lead initiative, which works closely with the community on the open-source areas. The Microsoft Graph Toolkit is a collection of reusable, framework-agnostic web components and helpers for accessing and working with Microsoft Graph. The components are fully functional right of out of the box, with built in providers that authenticate with and fetch data from Microsoft Graph.\n Latest version currently is 2.3.1 See the v2.3 announcement blog post for more details - Announcing a new Microsoft Teams authentication provider and file upload feature in the Microsoft Gr... mgt.dev - Microsoft Graph Toolkit Playground Getting started with Microsoft Graph Toolkit guidance video from developer community call by Beth Pan (Microsoft) Latest code and preview versions from https://aka.ms/mgt  All the latest updates on the Microsoft Graph Toolkit is being presented in our bi-weekly Microsoft 365 Generic Dev community call, including the latest community contributors.\nMicrosoft 365 Community docs    Community docs model was announced in the April 2020 and it\u0026rsquo;s great to see the interest for community to help each other by providing new guidance on the non-dev areas. See more on the announcement from the SharePoint blog - Announcing the Microsoft 365 Community Docs. We do welcome contributions from the community - our objective is to build a valuable location for articles from Microsoft and community together.\nNew articles  Building Great Content for Your Intranet - Paul Bullock (CPS) | @pkbullock Microsoft 365 Search Technologies \u0026ndash; David Mehr (IOZ AG)  Updated articles  Power Automate vs Logic Apps \u0026ndash; updated by Richard Astbury (Microsoft) | @richorama  All Microsoft 365 Community Content at docs.microsoft.com Have ideas for articles or want to contribute yourself? - Get involved! Here are also some additional resources explaining the model more detailed.\n YouTube - Introducing Microsoft 365 Community Docs GitHub issue list with articles ideas  SharePoint Framework development samples    These are the updated SharePoint Framework samples which are available from the different repositories.\n New sample react-teams-graph-upload-as-pdf by Markus Möller (Avanade) | @Moeller2_0 which allows a user to upload a supported file type via drag and drop while the uploaded file will be converted as PDF New sample js-application-microsoft-clarity by João Ferreira | @joaoferreira that allows to use Clarity in SharePoint New sample PrimaryTextCard-Graph-UnreadEmails by Nick Brown (Cardiff University) | @techienickb that uses Microsoft Graph to get unread emails in your inbox and displays that as an ACE Other adjustments to numerous samples by our awesome community members!  How to find what\u0026rsquo;s relevant for you? Take advantage of our SharePoint Framework web part and extension sample galleries - also includes solutions which work in Microsoft Teams\n Web Part sample gallery - http://aka.ms/spfx-webparts Extensions sample gallery - http://aka.ms/spfx-extensions Viva Connections Adaptive Card samples - http://aka.ms/spfx-aces Microsoft Teams samples build with SharePoint Framework - https://github.com/pnp/spfx-teams - These will be relocated soon  Microsoft Teams community samples    These are samples which have been contributed on the community samples since last summary. We do welcome all Microsoft Teams samples to this gallery. They can be implemented using in any technology.\n Numerous adjustments on existing samples and solutions If you are interested on Microsoft Teams samples, we have just released also new Microsoft Teams sample gallery. Contributions to Microsoft Teams samples is also more than welcome. This gallery already surfaces all Microsoft samples, Microsoft Teams app templates and community samples.  Power Platform samples    There was numerous smaller updates on the different Power Platforms samples. See more details on available samples from following location:\n Power Platform sample gallery - https://aka.ms/powerplatform-samples If you have any existing samples which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative. Here to help.  Microsoft 365 Script Samples    We have released new Microsoft 365 Script Sample gallery within past month. We welcome all scripts on Microsoft 365 automation to this centralized repository, targeted to help to manage and automate day-to-day operations.\nHere are the latest updates on the Script Samples\n Updated Export all flows in environment by Leon Armston (Intelogy) | @LeonArmston Updated Report of Private Teams channels to Excel by Adam Wójcik (Hitachi Energy) | @Adam25858782 New Export all PowerApps details and its Role assignments from Tenant in CSV format by Siddharth Vaghasia (Independent Consultant) | @siddh_me New Export / Import list formatting by Kinga Kazala (SharePoint and Azure Architect) | @kinga_kazala New Add/Remove users(bulk) from PowerApps from CSV file by Siddharth Vaghasia (Independent Consultant) | @siddh_me New Reports to Excel where the specified Term is used by Kasper Bo Larsen (Fellowmind Denmark) | @kasperbolarsen Updated Remove delete option on a document library by Adam Wójcik (Hitachi Energy) | @Adam25858782 New Create bulk dummy documents in SharePoint Document library by Siddharth Vaghasia (Independent Consultant) | @siddh_me New Get All Apps From The App Catalog And Export It To CSV by Chandani Prajapati (Rapid Circle) | @Chandani_SPD Updated List all external users in all site collections by Paul Bullock (CPS) | @pkbullock Updated Generate Markdown Report of LCIDs by Adam Wójcik (Hitachi Energy) | @Adam25858782  If you have any existing scripts which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative.  Microsoft 365 Script Samples - https://aka.ms/script-samples Independent Connectors Program     Microsoft Power Platform comes with a huge variety of already built-in connectors and also provides you with the ability of creating your own custom connectors. As of July 2021, anyone can submit the connectors they built to Microsoft Power Platform so that they can be used by others as well. Previously, only API owners could publish their connectors. The Independent Publisher Connector Program\u0026rsquo;s mission is to bring the best together: the best people, connecting great ideas to data, apps, and flows. We want to make it easier for connector developers to collaborate on connectors. For more information, you can watch this video on Publish a connector to the Publish a connector to the Power Platform with Independent Publisher Connector Program gram and check out Microsoft Power Platform Connectors on GitHub\nThese are the latest connectors:  Accuweather - Ahmad Najjar (Infoworker) | @ahmadn82 Bronnoysundregistrene - Ahmad Najjar (Infoworker) | @ahmadn82 OpenCage Geocoding - Ahmad Najjar (Infoworker) | @ahmadn82 Yelp - Ahmad Najjar (Infoworker) | @ahmadn82 ORB Intelligence - Ankita Singh and Aaryan Arora Notion - Chandra Sekhar \u0026amp; Harshini Varma (Capgemini) | @HarshiniVarmaa Spotify - Daniel Laskewitz (Sogeti) | @laskewitz Toggl Plan - Daniel Laskewitz (Sogeti) | @laskewitz Discord - Daniel Laskewitz (Sogeti) | @laskewitz \u0026amp; Michal Guzowski (Developico) | @abcguzowski ClickUp Team Manager \u0026ndash; Duke DeVan (Hitachi Solutions) | @AyoSurice Dexcom - Joe Unwin (Hitachi Solutions) | @Flow_Joe Weather Forecast - Haimantika Mitra (Microsoft) | @HaimantikaM Carbon Intensity \u0026ndash; Hasan Unlu LibreBor - Mario Trueba (KPMG) | @ mariotrueba365 \u0026amp; Marco Amoedo (KPMG)| @marcoamoedo CQC - Martyn Lesbirel (Dynamiti) UK Government Bank Holidays - Martyn Lesbirel (Dynamiti) | What3Words - Matt Beard (Data8) | @mattybeard FreeAgent - Nirmal| @Nirmal_kumar ITGlue - Nirmal | @Nirmal_kumar Jira Search- Paul Culmsee (Seven Sigma) | @paulculmsee Coinbase \u0026ndash; Roy Paar (Microsoft) Microsoft D365CE v9 OnPrem - Roy Paar (Microsoft) New York Times - Roy Paar (Microsoft) The Weather Channel - Roy Paar (Microsoft) GoQR - Rui Santos (Microsoft) myStrom - Tomasz Poszytek| @TomaszPoszytek Clearbit - Troy Taylor (Hitachi Solutions) | troystaylor EONET by NASA - Troy Taylor (Hitachi Solutions) | troystaylor Etsy - Troy Taylor (Hitachi Solutions) | troystaylor Federal Reserve Economic Data - Troy Taylor (Hitachi Solutions) | troystaylor Hashify - Troy Taylor (Hitachi Solutions) | troystaylor HubSpot CMS - Troy Taylor (Hitachi Solutions) | troystaylor HubSpot CRM - Troy Taylor (Hitachi Solutions) | troystaylor HubSpot Marketing - Troy Taylor (Hitachi Solutions) | troystaylor Launch Library 2 - Troy Taylor (Hitachi Solutions) | troystaylor Loripsum - Troy Taylor (Hitachi Solutions) | troystaylor Mailbox Validator - Troy Taylor (Hitachi Solutions) | troystaylor Secure Code Warrior - Troy Taylor (Hitachi Solutions) | troystaylor SpaceX - Troy Taylor (Hitachi Solutions) | troystaylor Unix Timestamp- Troy Taylor (Hitachi Solutions) | troystaylor Airtable \u0026ndash; Woong Choi (Seven Sigma)  Sharing is Caring initiative    The \u0026ldquo;Sharing Is Caring\u0026rdquo; imitative is targeted for learning the basics around making changes in Microsoft Docs, in GitHub, submitting pull requests to the PnP repositories and in GitHub in general. Take advantage of this instructor lead training for learning how to contribute to docs or to open-source solutions. Everyone is welcome to learn how to get started on contributing to open-source docs or code!\n See more from the guidance documentation - including all upcoming instructor lead sessions which you can participate!  ✍ Different Microsoft 365 related open-source initiatives build together with the community See exact details on the latest updates from the specific open-source project release notes. You can also follow up on the project updates from our community calls. There are numerous active projects which are releasing new versions with the community even on weekly basis. Get involved!\n Microsoft Look Book - Discover the modern experiences you can build with SharePoint in Microsoft 365. Look book provides design examples for SharePoint Online which can be automatically provisioned to any tenant in the world. See more from https://lookbook.microsoft.com. This service is also provided as open-source solution sample from GitHub. yo teams - Open-source Yeoman generator for Microsoft Teams extensibility. Supports creation of bots, messaging extensions, tabs (with SSO), connectors and outgoing Webhooks. See more from https://aka.ms/yoteams. PnP Framework - .NET Standard 2.0 SDK containing the classic PnP Sites Core features for SharePoint Online. More around this package from GitHub. PnP Core SDK - The PnP Core SDK is an SDK designed to work for Microsoft 365 with Graph API first approach. It provides a unified object model for working with SharePoint Online and Teams which is agnostic to the underlying API\u0026rsquo;s being called. See more around the SDK from documentation. PnP PowerShell - PnP PowerShell is a .NET Core 3.1 / .NET Framework 4.6.1 based PowerShell Module providing over 400 cmdlets that work with Microsoft 365 environments and more specifically SharePoint Online and Microsoft Teams. See more details from documentation. Reusable SharePoint Framework controls - Reusable controls for SharePoint Framework web part and extension development. Separate projects for React content controls and Property Pane controls for web parts. These controls are using Office UI Fabric React controls under the covers and they are SharePoint aware to increase the productivity of developers. Office 365 CLI - Using the Office 365 CLI, you can manage your Microsoft Office 365 tenant and SharePoint Framework projects on any platform. See release notes for the latest updates. PnPJs - PnPJs encapsulates SharePoint REST APIs and provides a fluent and easily usable interface for querying data from SharePoint sites. It\u0026rsquo;s a replacement of already deprecated pnp-js-core library. See changelog for the latest updates. PnP Provisioning Engine and PnP CSOM Core - PnP provisioning engine is part of the PnP CSOM extension. They encapsulate complex business driven operations behind easily usable API surface, which extends out-of-the-box CSOM NuGet packages. See changelog for the latest updates. PnP PowerShell - PnP PowerShell cmdlets are open-source complement for the SharePoint Online cmdlets. There are more than 300 different cmdlets to use and you can use them to manage tenant settings or to manipulate actual SharePoint sites. They See changelog for the latest updates. PnP Modern Search solution - The PnP \u0026lsquo;Modern Search\u0026rsquo; solution is a set of SharePoint Online modern Web Parts allowing SharePoint super users, webmasters and developers to create highly flexible and personalized search based experiences in minutes. See more details on the different supported capabilities from https://aka.ms/pnp-search. Modernization tooling - All tools and guidance on helping you to transform you SharePoint to modern experiences from http://aka.ms/sppnp-modernize. SharePoint Starter Kit v2 - Building modern experiences with Microsoft Teams flavors for SharePoint Online and SharePoint 2019 - reference solution in GitHub. List formatting definitions - Community contributed samples around the column and view formatting in GitHub. Site Designs and Site Scripts - Community contributed samples around SharePoint Site Designs and Site Scripts in GitHub. **DevOps tooling and scripts **- Community contributed scripts and tooling automation around DevOps topics (CI/CD) in GitHub. Teams provisioning solution - Set of open-source Azure Functions for Microsoft Teams provisioning. See more details from GitHub.  ✍ Documentation updates Please see all the Microsoft 365 development documentation updates from the related documentation sets and repositories as listed below:\n Microsoft Teams platform documentation - Microsoft Docs | GitHub SharePoint Developer documentation - Microsoft Docs | GitHub Microsoft Graph documentation - Microsoft Docs | GitHub Office add-in documentation - Microsoft Docs | GitHub  Microsoft 365 Developer and Microsoft 365 Community YouTube video channels You can find all Microsoft 365 related videos on our YouTube Channel at http://aka.ms/m365pnp/videos or at Microsoft 365 Dev. These channels contains already a significant amount of detailed training material, demo videos, and community call recordings. Here are the new Microsoft demo or guidance videos released since the last monthly summary:\n Student Ambassadors share their low code QnA bot for Microsoft Teams - Ayca Bas (Microsoft)- @aycabs, Lee Scott (Microsoft) | @Lee_stott, Haimantika Mitra (Microsoft) | @HaimantikaM, Someleze Diko | @DikoSomeleze, and Ansh Mishra Ask the Expert: Windows 11 Deployment \u0026ndash; Thomas Trembley Understanding single sign-on (SSO) with Azure AD and Microsoft Teams - Bob German (Microsoft) | @Bob1German Ask the Expert: Windows 365 Adoption \u0026ndash; Bryan Taylor and Christiaan Brinkhoff (Microsoft) | @Brinkhoff_C Microsoft AI MVP shows how he built a Teams chat bot with Azure and Microsoft 365 - Ayca Bas (Microsoft)- @aycabs and Stephan Bisser (Solvion) | @stephanbisser Community demos as following:  Contributors Corner - GitHub Contributions using the VS Code Web Editor - David Warner II (Catapult) | @DavidWarnerII Create an event page in SharePoint with SharePoint Spaces and custom Lists - Anand Ragav (Ericsson) | @AnandVRagav Introduction to Microsoft Graph Go SDK - Vincent Biret (Microsoft) | @baywet  Consume a multi-tenant API within Viva Connections Adaptive Card Extensions (ACEs) Paolo Pialorsi (PiaSys.com) | @PaoloPia and Vesa Juvonen (Microsoft) | @vesajuvonen CodeTwo Outlook Add-in for email signature management - Michał Królewicz (CodeTwo) Using Randomization with List Formatting - Chris Kent (DMI) | @theChrisKent Power Apps Christmas Calendar + Games - Craig Gregory | @CrashLongJohns Microsoft Learn Module - Extend Microsoft Viva Connections with Application Customizers - Waldek Mastykarz (Microsoft) | @waldekm and Vesa Juvonen (Microsoft) | @vesajuvonen Introduction to SharePoint on-prem Microsoft Graph connector - Parag Jain (Microsoft) Building custom Application Secrets Expiration Web Part - Aimery Thomas | @aimery_thomas Microsoft 365 instant sandbox - Michael Aldridge (Microsoft) SPFx Extension for Copying and Moving List Items - Sudharsan Kesavanarayanan (NTT Ltd) | @sudharsank Microsoft Teams Provision Automation with ProvisionGenie - Carmen Ysewijn (Qubix) | @carmenysewijn and Luise Freese (M365Princess) | @LuiseFreese Viva Connections \u0026ndash; Adaptive Card Showcase Gallery Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp Unit testing Office JavaScript with Office-Addin-Mock library - Igor Ribeiro (Microsoft) Building a custom React News Web Part - Alison Collins Microsoft Learn Module - Extend Microsoft Viva Connections with Web Parts - Vesa Juvonen (Microsoft) | @vesajuvonen and Waldek Mastykarz (Microsoft) | @waldekm Viva Connections + Adaptive Cards - • Emily Lynam (Microsoft), Max Kulakov (Microsoft), and Siddharth Gulati (Microsoft) Getting started on building Microsoft Teams tabs with Adaptive Cards - Loki Meyburg (Microsoft)- @lokimeyburg List item filtering on modern pages with complex dynamic view formatting - Chris Kent (DMI) | @theChrisKent Protect your brand with Azure Active Directory B2C and Zero Trust Security \u0026ndash; November 2021 - Christer Ljung (Microsoft) Introduction to Embedded Search Box - Shubham Gatkal (Microsoft) Microsoft Learn Module - Extend Microsoft Viva Connections with Adaptive Card Extensions - Waldek Mastykarz (Microsoft) | @waldekm and Vesa Juvonen (Microsoft) | @vesajuvonen SPFx Design Patterns - Custom Properties (Part 1) - Hugo Bernier (Microsoft) | @bernier Microsoft 365 Tenant Service Health - Viva Connections Adaptive Card Extension - Anoop Tatti (Content+Cloud) | @anooptells Automatically recognize your team champions 🏆 with CLI for Microsoft 365 - Albert-Jan Schot (BLIS Digital) | @appieschot  Key contributors to the December 2021 update Here\u0026rsquo;s the list of active contributors (in alphabetical order) since last release details in GitHub repositories or community channels. PnP is really about building tooling and knowledge together with the community for the community, so your contributions are highly valued across the Microsoft 365 customers, partners and obviously also at Microsoft.\nThank you for your assistance and contributions on behalf of the community. You are truly making a difference! If we missed someone, please let us know.\n Abderahman Moujahid - Abderahman88 Adam Wójcik (Hitachi Energy) | @Adam2585878 Aimery Thomas | @aimery_thomas Albert-Jan Schot (BLIS Digital) | @appieschot Alexander Ernon (Amplexor) Alexander Møller | alexanmo Alison Collins Anand Ragav (Ericsson) | @anandVragav Andre | @theq2020 André Lage (Datalynx AG) | @aaclage Andrew Benson (InElec) - @ViewPorter Andrew Connell (Voitanos) | @andrewconnell Andy Harmon (Oldham Metropolitan Borough Council) | @andygharmon Andy Dawson | Andy-Dawson Anoop Tatti (Content+Cloud) | @anooptells Antti Pajunen (Forward Forever) | @anttipajunen Ari Gunawan (DevStack) - @arigunawan3023 Aric Bost (North Carolina Housing Finance Agency) | @1CyberState Arjun Menon (Tata Consulting Services) | @arjunumenon Asad Refai (Intelogy) | @asadrefai Aslan Imanalin (GDC ICL Services) | @aslan-im Beau Cameron (Aerie Consulting) | @Beau__Cameron Bharath Arja | @Bharath_arja Brett Olson (C.H. Robinson) Carianne Wong (Majesco) | @cw_marie Carmen Ysewijn (Qubix) | @carmenysewijn Chad Austerberry (HYDAC) | @cjahydac Chandani Prajapati (Rapid Circle) | @Chandani_SPD Chris Berry Chris Kent (DMI) | @theChrisKent Chris OConnor | @GrumpyWookie Christian Schneider Christopher Graves (Arvato) | @Christo48927551 Chuck Piotrowski (PIOT) | @chuckpiot Craig Gregory | @crashlongjohns Dan Myhre (Baird) | @danmyhre Daniel George| @Dgeorge318 Daniel Huber | @danielhu0611 Daniel Laskewitz (Sogeti) | @laskewitz Daniel Westerdale (Westerdale Solutions Ltd) | @westerdaled Danish Shafi | @builtbydan Dave Gerrard (Crackerbox) | @CrackerboxDave Dave Young | @klarkykhat David Aeschlimann (Post CH AG) | TashunkoWitko David Mehr (IOZ AG) David Warner II (Catapult) | @DavidWarnerII Derek Cash Peterson (Sympraxis Consulting) | @spdcp Dipen Shah (Rapid Circle) | @Dips_365 Dom Kardokas | dkardokas Edmund David (Insentra) Edris Kakembo (WFP) | @kaxeddie Elio Struyf (Struyf Consulting) | @eliostruyf Ellis Karim (University of Cambridge Institute for Sustainability Leadership) | @MrCaptainKarim Emily Mancini (Sympraxis Consulting) | @EEMancini Erfan Darroudi | edarroudi Eric Overfield (PixelMill) | @EricOverfield Erwin van Hunen (Valo Intranet) | @erwinvanhunen  Franck Cornu | @FranckCornu Gautam Sheth (Valo Solutions) | @gautamdsheth Geert de Kooter (Learnia) | @gdekooter Geetha Sivasailam (Artis Consulting) | @GSiVed Gerard Simpson (SSE Renewables) | @powerfanaddict Giacomo Pozzoni (Fellowmind) | @PozzoniGiacomo Guillermo A. Irahola Guillermo del Teso | @guilledelteso Henrik Yllemo (Ylltec Sweden AB) | @yllemo Hoang Phuong (KDDI Vietnam) | @marckeno Igor Karon (Clean Energy) Jack Strapopoulos | JackStrap Jarbas Horst (Valo Solutions) | @devjhorst Jasey Waegebaert (MI group) | Jwaegebaert Jason Lambiris (Apex Digital Solutions) | @ApexEmpowers Jason McDougall (Deptive) Jennifer Kimball | @dnagirl Joakim Högberg (Bravero) | @joakimhogberg João Ferreira | @joaoferreira João J. Mendes (Valo Solutions) | @joaojmendes Joel Rodrigues (Storm Technology) | @JoelFMRodrigues Johan van Dyk (BCX) | @johanvandy John Mello (SIG) | @Iczer1  Jono Duncan (JourneyTEAM) | @SuaveJono Joy Muehlenbein (Edwards Lifesciences) | @huh_larious Julie Turner (Sympraxis Consulting) | @jfj1997 Kasper Bo Larsen (Fellowmind Denmark) | @kasperbolarsen Kat Memenza (W. L. Gore \u0026amp; Associates) Kathleen Boilek (Alakaâ€™Ina Foundation) | @kaboilek Katrin Rannaste Kerry Lambert (NI) | @kazoogal23 Kevin McDonnell (CPS) | @kevmcdonk Kinga Kazala (SharePoint and Azure Architect) | @kinga_kazala  Kirt Spaulding Lance Yoder {.underline}(Cerner) | @lyoder Larry (Decision Inc.) Lars Fernhomberg (Net at Work GmbH) | lafe Laura Kokkarinen (Sulava) | @LauraKokkarinen Laurent | @lioncoding Laurie Danison | @ljd144 Leon Armston (Intelogy) | @LeonArmston Lindsay Shelton (Stowers Institute for Medical Research) | @lshelton_tech Luise Freese (M365Princess) | @LuiseFreese Lynette Stokes  Marc Anderson, Sympraxis Consulting | @sympmarc Marcus Cadena | @marcusc83 Markus Möller (Avanade) | @Moeller2_0 Maarten van Stam (Deloitte Nederland) | @aafvstam Matt Beard (Data8) | @mattybeard Matthew Burback (ManpowerGroup) Matthew Stark (Making Things Work) | @thastark Michal Guzowski (Developico) | @abcguzowski Michał Królewicz (CodeTwo) Michelle Heisler (Hennepin County) Michelle Wong | @MichelleWongNL Miguel Angel García Martínez (ClearPeople) | magarma Mike Duffy (Boardwalk Pipelines) | @mike_duffy Mike Dumka (Habanero Consulting) | @mikedumka Mike Markett (DFC) Mohammad Amer (Atea Global Services) | @Mohammad3mer Nanddeep Nachan | @NanddeepNachan Nick Brown (Cardiff University) | @techienickb Nicole Fleming (Sherwin Williams) Nikki Chapple (NTT Cloud Communications) | @chapplenikki outorted | outorted Paolo Pialorsi (PiaSys.com) | @PaoloPia Patrik Hellgren (Sherpas Group) | @patrikhellgren Patrick Lamber (Expertsinside AG) | @patricklamber Patrick Williamson (Anglia Ruskin University) | @pwmusic Paul Bullock (CPS) | @pkbullock Paul Culmsee (Seven Sigma) | @paulculmsee Paul Schaeflein (AddIn365) - @paulschaeflein Pedro Monte (BindTuning) | PedroMordeP Pete Simpkins (Fluid Interiors) | @simpkinspete Pete Skelly (ThreeWill ) | @pskelly Petter Skodvin-Hvammen (Puzzlepart) | @pettersh Peter Holme Obrestad | phoob Phil McNiven | @phil0074 Ralph Rivas (Sogeti) | @bigpix2000 Ricardo Bunge (Confluent) Richard Gigan (Claranet) | PooLP Rick Van Rousselt (Advantive) | @RickVanRousselt Rocio Holub (DAI) | @rsholub Roy Wizeman (AudioCodes) | @Roywizeman Ryan Jordan (City of Dallas) | @rj0435 Sabrina Faragoza (Cognizant\u0026rsquo;s Microsoft Business Group) Sam Bridegroom (Allied Solutions) | @sambridegroom Samuele Furnari (NTT DATA Italia) | SamueleFurnari Sandra Macaulay Robinson (Meridian Design Studio) | @AgileChef Sekar Thangavel (IBM) | SekarThangavel Sergei Sergeev | @sergeev_srg Shane Peters (BT) | @peters_shane Shijuraj J Siddharth Vaghasia | @siddh_me Simon Hudson (Novia Works) | @simonjhudson Simon Thompson (Experience Applied) | @Thompsonsimon Someleze Diko | @DikoSomeleze Stefan Bauer (n8d) | @StfBauer Stephan Bisser (Solvion) | @stephanbisser Stéphane Chandonnet (Université Laval) | @Stchandonnet Stian Grepperud | stigre Sudharsan Kesavanarayanan (NTT Ltd) | @sudharsank Tetsuya Kawahara | @techan_k Thomas Gölles (Solvion) | @thomyg Thomas Trembley Tim Balk (Wellmark) | @tlbalk Todd Baginski (Canviz) - @toddbaginski Tom German | @T0mGerman Tomasz Poszytek | @TomaszPoszytek Valeras Narbutas (Macaw) | @ValerasNarbutas Varun (MVA)| @varunms365 Veronique Lengelle (CPS) | @@veronicagee Vipul Kelkar (Rapid Circle) | @vipulkelkar Yannick Plenevaux (PVX Solutions) | @yp_code Yaser | @recod21  Companies Here are the companies which provided support the community initiative for this month by allowing their employees working for the benefit of others in the community. There were also people who contributed from other companies during last month, but we did not get their logos and approval to show them in time for these communications. If you still want your logo for this month\u0026rsquo;s release, please let us know and share the logo with us. Thx.\n    Addin365 Arvo Systems BLIS Digital Canviz Solutions Catapult Systems ClearPeople CPS Content+Cloud DMI Fellowmind Intelogy Macaw N8D NTT Digital Business Solutions Piasys PixelMill Pramerica PVX Solutions Qubix Rapid Circle Sherpas Solvion Sogeti Storm Technology Struyf Consulting Sulava Sympraxis Consulting ThreeWill Valo Voitanos\n\\  Microsoft people Here\u0026rsquo;s the list of Microsoft people who have been closely involved with the PnP work during last month.\n Aakash Bhardwaj (Microsoft) | @aakash_316 Alex Terentiev | @alexaterentiev Aline Tognini - alinefmr Allen Snow - @asnow003 Andrey Esipov (Microsoft) April Dunnam (Microsoft) | @aprildunnam Arijit Mondal (Microsoft) Ayca Bas (Microsoft)- @aycabs Bert Jansen (Microsoft) | @O365Bert Beth Pan - @beth_panx Beverly Kim - bvandaal Bob German (Microsoft) | @Bob1German Brian Jackett (Microsoft) | @BrianTJackett Bryan Petersen - petey121175 Cathy Dew (Microsoft) | @catpaint Charles Sterling - @chass Christer Ljung (Microsoft) Dan Wahlin | @DanWahlin David Chesnut (Microsoft) | @davidchesnut Doğan Erişen - derisen Dragan Panjkov | @panjkov Ed Averett | @Ed_Averett Emily Lynam (Microsoft) Elizabeth Samuel - ElizabethSamuel-MSFT Garry Trinder | @garrytrinder Haimantika Mitra (Microsoft) | @HaimantikaM Holger Lutz - HolgerLutz Hugo Bernier (Microsoft) | @bernier Igor Ribeiro (Microsoft) James Eccles - jameseccles Jasmine Hoegh (Microsoft) | @sbjishu Jason Johnston - jasonjoh John Nguyen - johnguy0 John Sudds | @jsuddsjr Jos Verlinde - Josverl Jyoti Pal (Microsoft) Kevin Coughlin - @kevintcoughlin Keyur Patel - keyur32 Koen Zomers | @koenzomers Holland Kaviani - Holland-ODSP Laura Graham - Lauragra Linda Lu Cannon - lindalu-MSFT Loki Meyburg (Microsoft)- @lokimeyburg Luca Bandinelli - lucaband Mathangi Chakrapani (Microsoft) Matthijs Hoekstra | @mahoekst Max Kulakov (Microsoft) Michael Aldridge (Microsoft) Mikael Svenson | @mikaelsvenson Natalie Pienkowska | @NataliePienkow1 Natalie Pienkowska - NataliePienkow1 Nik Charlebois (Microsoft) | @NikCharlebois Nicolas Vogt - vogtn Niko | NikoMix Nikola Metulev - @metulev Orion O\u0026rsquo;Malley (Microsoft) Pam Green (Microsoft) | @contextuallib Parag Jain (Microsoft) Pat Miller - @PatMill_MSFT Patrick Rodgers | @mediocrebowler Rabia Williams (Microsoft) | @williamsrabia Richard Astbury (Microsoft) | @richorama Rick Kirkham | Rick-Kirkham Roy Paar Rui Santos  Sam Larson | salarson Shane Weaver | shweaver-MSFT  Shreyansh Agrawal (Microsoft) Sébastien Levert | @sebastienlevert Srinivas Varukala (Microsoft) | @svarukala Steven Jia | Steven-Jia Shubham Gatkal (Microsoft) Tejas Mehta | @tpmehta Tom Resing | @resing Tomomi Imura (Microsoft) | @girlie_mac Vesa Juvonen (Microsoft) | @vesajuvonen Wajeed Shaikh | Wajeed-msft Waldek Mastykarz (Microsoft) | @waldekm Wictor Wilen | @wictor Vincent Biret (Microsoft) | @baywet   MVP Community team MVP Community team (PnP Team) manages the PnP community work in the GitHub and also coordinates different open-source projects around Microsoft 365 topics. PnP Team members have a significant impact on driving adoption of Microsoft 365 topics. They have shown their commitment to the open-source and community-driven work by constantly contributing to the benefit of the others in the community.\nThank you for all that you do!\n Albert-Jan Schot (BLIS Digital) | @appieschot Andrew Connell (Voitanos) | @andrewconnell Andrew Koltyakov (ARVO Systems) | @andrewkoltyakov Beau Cameron (Aerie Consulting) | @Beau__Cameron Chris Kent (DMI) | @theChrisKent David Warner II (Catapult) | @DavidWarnerII Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp Elio Struyf (Struyf Consulting) | @eliostruyf Emily Mancini (Sympraxis Consulting) | @EEMancini Eric Overfield (PixelMill) | @EricOverfield Erwin van Hunen (Valo Intranet) | @erwinvanhunen  Gautam Sheth (Valo Solutions) | @gautamdsheth Geetha Sivasailam (Artis Consulting) | @GSiVed João J. Mendes (Valo Solutions) | joaojmendes Joel Rodrigues (Storm Technology) | @JoelFMRodrigues Julie Turner (Sympraxis Consulting) | @jfj1997 Laura Kokkarinen (Sulava) | @LauraKokkarinen Luise Freese | @LuiseFreese Marc D Anderson (Sympraxis Consulting) | @sympmarc Paolo Pialorsi (Piasys.com) | @PaoloPia Patrick Lamber (Expertsinside AG) | @patricklamber Paul Bullock (CPS) | @pkbullock Rick Van Rousselt (Advantive) | @RickVanRousselt Stefan Bauer (n8d) | @StfBauer Stephan Bisser (Solvion) | @stephanbisser Tetsuya Kawahara | @techan_k Thomas Gölles (Solvion) | @thomyg Velin Georgiev (Pramerica) | @velingeorgiev Veronique Lengelle (CPS) | @veronicageek Yannick Plenevaux (PVX Solutions) | @yp_code  Here are the Microsoft Internal PnP Core team members:\n Alex Terentiev | @alexaterentiev April Dunnam | @aprildunnam Bert Jansen | @O365Bert Bob German | @Bob1German Garry Trinder | garrytrinder Hugo Bernier | @bernierh Koen Zomers | @koenzomers Mikael Svenson | @MikaelSvenson Natalie Pienkowska | @NataliePienkow1 Patrick Rodgers | @mediocrebowler Rabia Williams | rabwill Sébastien Levert | sebastienlevert Vesa Juvonen | @vesajuvonen Waldek Mastykarz | @waldekm Wictor Wilen |@wictor  Next steps See all of the available community calls, tools, components and other assets from https://aka.ms/m365pnp. Get involved!\nGot ideas or feedback on the topics to cover, additional partnerships, product feature capabilities? - let us know. Your input is important for us, so that we can support your journey in Microsoft 365.\nSharing is caring!\n Microsoft 365 Community (PnP) \u0026ndash; December 22nd 2021\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-december-2021-update/images/dec-2021-pnp-promo_hudf89d8adf891ba52e102f364fdbc429e_564658_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-december-2021-update/","tags":[],"title":"Microsoft 365 PnP Community -- December 2021 update"},{"categories":["Office add-in developer community call"],"contents":"The Office Add-ins developer platform team has new updates to share this month on Office Add-in samples.\nEncrypt attachments and more with Outlook event-based activation       Contributed by Eric Legault\nThis sample showcases how to use event-based activation in an Outlook add-in when the user composes an email or appointment/meeting request. It demonstrates how to run tasks based on events that fire when certain data changes when the user:\n adds an attachment to an email or appointment/meeting request adds recipients or distributions lists as required or optional attendees in a meeting request changes the start or end date or time in an appointment/meeting request adds a notification message to the item when a new email or appointment/meeting request is created, instructing the user to open the task pane for further information  Check out the code sample: Use Outlook event-based activation to encrypt attachments, process meeting request attendees and rea...\nGet started with hello world samples    Learn how to build the simplest Office Add-in with only a manifest, HTML web page, and a logo. These samples will help you understand the fundamental parts of an Office Add-in.\nGet started with the following code samples:\n Excel hello world Outlook hello world PowerPoint hello world Word hello world  Contributors Thank you to our contributors who are actively helping each month with the Office Add-ins community effort.\n   Maarten van Stam\nHelping review PRs and issues on Office-Add-ins-samples.\n  Eric Legault\nCreating the sample for encrypting attachments in Outlook using event-based activation. Office Add-ins are part of the Microsoft 365 PnP community. Please consider contributing by going to https://github.com/officedev/Office-Add-in-samples and helping with PRs, issues, or contributing new samples.\nAdditional resources  Get started with Office development by joining the Microsoft 365 developer program. Try out some samples and get coding quickly with Office add-ins by downloading Script Lab. Automate your solutions with Office Scripts.  ","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-in-samples-december-2021-update/images/outlook-event-based-activation_hu18e221637f32b2b2c5d7e8b05a6d567f_56634_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-in-samples-december-2021-update/","tags":[],"title":"Office Add-in Samples - December 2021 update"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"Viva Connections \u0026amp; SharePoint Framework bi-weekly community call recording from December 16th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary  Tune in each Tuesday for the Microsoft 365 platform community call. Next call on the 21st of December @ 8 AM PT \u0026ndash; Social gathering for coffee/tea or your chosen drink. Got questions? \u0026ndash; Join and let\u0026rsquo;s have a chat. Register for training events in January - February hosted by Sharing is Caring. Register for the PnP Recognition Program. The Road Ahead after 1.14 and future PnP project activities in the last two weeks \u0026ndash; Happy Holiday\u0026rsquo;s!  SharePoint Framework (SPFx) v1.14 public developer preview released PnPjs client-side libraries - v 2.12 delayed CLI for Microsoft 365 v4.3 beta released Reusable SPFx React Controls v3.5.0 released PnP Modern Search v4.5.2, v3.23.0 released   1 ACE was delivered as well. Thank you, João Mendes! Interesting summary on Samples by SPFx version   **Latest project updates include: **(Bold indicates update from previous report 2 weeks ago)  PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.14 public developer preview v1.14.0 GA targeted for January PnPjs Client-Side Libraries v2.11.0 GA, v3.0.0 Preview. v 2.12 Delayed nightly builds of v3 CLI for Microsoft 365 v4.2.0 GA, v4.3 beta Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.5.0 3.5.0 with SPFx v1.13 support is coming soon Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1) 3.3.0 with SPFx v1.13 support is coming soon PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.5.2, v3.23.0 Release expected by calendar year end\n The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place as always in chat throughout the call. Great to see all of you today. Happy Holidays. Enjoy some down time from work and up time with family, friends, hobbies.\nActions  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Weigh in \u0026ndash; Should we drop support for CommonJS modules in PnPjs v3.0?  Holiday Break Challenge!!! Choose and update an SPFx sample v1.7, v1.8, v1.9, earn a special Credly badge.  Register for Sharing is Caring Events:  Ask me anything (AMA) PnP Search \u0026ndash; Tuesday, January 11th, 9am PST First Time Contributor Session \u0026ndash; Tuesday, January 25th, 2pm PST Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; Tuesday, January 18th, 1pm PST PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; Tuesday, February 8th, 2pm PST PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; Wednesday, January 26th, 7am PST First Time Presenter \u0026ndash; Wednesday, February 9th, 9am PST More than Code with VSCode \u0026ndash; Tuesday, February 15th, 2pm PST Maturity Model Practitioners \u0026ndash; Tuesday, January 18th, 7am PST (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs (2-part session) \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Building advanced Enterprise Search Center with PnP Search Web Parts v4 \u0026ndash; presenter highlights extensibility and customization layout options for PnP Modern Search. Non SPFx customization options include \u0026ndash; the slots, edit Handlebars, edit results template with conditional rendering, create a template in place or point to an external template. The SPFx option - install PnP Modern Search \u0026ndash; Extensibility library v4.5.2 (many samples) and create flexible and personalized search based layout templates in minutes.\n  Building a custom React based Microsoft Graph Group Viewer experience \u0026ndash; this web part with a single text field provides the functionality to search using Microsoft Graph for groups in your tenant and allow users to view the details of a selected group, view a list of group members as well as to export the list of members to a CSV file. Concise code walkthrough.   Introduction to Adaptive Card Extensions (ACEs) for Microsoft Viva Connections \u0026ndash;\nstarting with a high-level overview of Microsoft Viva with full integration with Microsoft Teams for developers. Extend Viva Connections with SPFx, exclusively. Step-by-step showing how to create your very first configurable (Property Pane) ACE with SPFx on SharePoint Workbench. Scaffold an SPFx project, register views and step through the files to understand what exactly was created. Subsequent demos will go deep in areas.   SPFx extension samples: (https://aka.ms/spfx-extensions)\n Holiday Break Challenge!!! Choose and update an SPFx sample v1.7, v1.8, v1.9, earn a special Credly badge.  SPFx web part samples: (https://aka.ms/spfx-webparts)\n Holiday Break Challenge!!! Choose and update an SPFx sample v1.7, v1.8, v1.9, earn a special Credly badge.  **PnP SPFx ACEs **https://aka.ms/spfx-aces\n **COVID Indicator* - **João Mendes | joaojmendes  * to be posted soon. Thank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 3:25 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 4:56 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 7:22 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 8:09 PnP Modern Search - Mikael Svenson (Microsoft) | @mikaelsvenson \u0026ndash; 8:52 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 9:43 PnP SPFx ACEs Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 11:52  Demos   D1: Building advanced Enterprise Search Center with PnP Search Web Parts v4 \u0026ndash; Franck Cornu | @FranckCornu \u0026ndash; 13:43\n  D2: Building a custom React based Microsoft Graph Group Viewer experience \u0026ndash; Zach Roberts | @ZachSPODev \u0026ndash; 28:40\n  D3: Introduction to Adaptive Card Extensions (ACEs) for Microsoft Viva Connections \u0026ndash; Paolo Pialorsi (PiaSys) | @PaoloPia \u0026ndash; 33:50   Resources Additional resources around the covered topics and links from the slides.\n  D1: GitHub - PnP Modern Search v4 | https://aka.ms/pnp-search\n  D1: Samples - PnP Modern Search - Extensibility samples   D1: Documentation - Store custom templates in SharePoint   D1: Repo - helpers/handlebars-helpers   D2: Sample Repo - Graph Group Viewer\n  [[D3: ]]Blog - Microsoft Viva: Empowering every employee for the new digital age[ | ]http://aka.ms/viva/blog\n  D3: Documentation - Overview of Viva Connections Extensibility | https://aka.ms/viva/connections/extensibility\n  D3: Sample Repo - Viva Connection Adaptive Card Extensions (ACEs) sample repository | https://aka.ms/spfx-aces\n  PnP Weekly \u0026ndash; Episode 147 (December 13th) with Munich, Germany-based consultant and MVP, Markus Möller (Avanade) | @Moeller2_0 | video | podcast\n  PnP Weekly \u0026ndash; Episode 146 (December 6th) with Reykjavik, Iceland-based Consultant and MVP, Derek Cash-Peterson (Sympraxis Consulting) | @spdcp | video | podcast\n  General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install --g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned   SharePoint dev documentation\n  SharePoint dev issue list **Upcoming calls | Recurrent invites: **\n  Microsoft 365 platform call \u0026ndash; December 21st at 8:00 am PST | https://aka.ms/m365-dev-call\n  M365 General Dev call \u0026ndash; December 23rd at 7:00 am PST | https://aka.ms/m365-dev-sig\n  SharePoint Framework call \u0026ndash; December 30th at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; January 12th at 8:00 am PST | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash;January 13th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; January 19th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; January 20th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Viva Connections \u0026amp; SharePoint Framework bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Connections, Microsoft Teams, SharePoint Online, and also on-premises. Calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Viva, Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 17th of December 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-16th-of/images/recording-16th-december_hu2e7f010c6f7df78b23fc1cf50f2e9144_256286_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-16th-of/","tags":[],"title":"Viva Connections \u0026 SharePoint Framework Community Call -- 16th of December, 2021"},{"categories":["Office add-in developer community call"],"contents":"![office-add-ins-Thumb Dec 2021.png](images/office-add-ins-Thumb Dec 2021.png) Call summary This month\u0026rsquo;s community call features an Outlook: Ignite recap from Juan Balmori (Microsoft) highlighting the release of Mailbox 1.11 GA and demos for Event-based add-ins and Smart Alerts for Outlook. Then appreciate an Outlook sample: Use event-based activation to encrypt attachments delivered by Eric Legault (Eric Legault Consulting), with 3 scenarios demonstrating automated task execution, messages displayed in information bar and related code step-through. This month\u0026rsquo;s Community spotlight recognizes Michał Królewicz, Maarten van Stam, and Eric Legault for their continued contributions to this community. Please complete the Office add-in developing experience survey and register for the PnP Recognition Program. Q\u0026amp;A both in chat throughout call and at end of call. The call was hosted by David Chesnut (Microsoft) Recorded December 8, 2021.\nPresenters   David Chesnut, Senior Dev Writer (Microsoft) | @davidchesnut\n  Juan Balmori Labra[, Principal Program Manager (Microsoft) | @juaneloBalmori]\n  Eric Legault, Principal (Eric Legault Consulting) | @elegault\n  Agenda  **D1: Outlook: Ignite recap **\u0026ndash; Juan Balmori (Microsoft) | @juaneloBalmori \u0026ndash; 1:10 D2: Outlook sample: Use event-based activation to encrypt attachments \u0026ndash; Eric Legault, (Eric Legault Consulting) | @elegault \u0026ndash; 22:41 Community spotlight: Michał Królewicz, Maarten van Stam, and Eric Legault \u0026ndash; 37:47 Q\u0026amp;A \u0026ndash; 39:02  Topics   D1: Outlook: Ignite recap \u0026ndash; new features to create Outlook add-ins that improve collaboration in a hybrid world. Mailbox 1.11 with [more]{.underline} Events is GA and Smart Alerts preview is now available. Event-based add-ins + Smart Alerts for Outlook = better emails. Demo of Event-based add-ins for new events including handling email signatures for external and internal recipients. A second demo shows why Smart Alerts help users send better emails.   **D2: Outlook sample: Use event-based activation to encrypt attachments \u0026ndash; event-based activations from an Outlook add-in when user initiates email, appointment, or meeting request. Run tasks and create notification messages in information bar each time an attachment, recipient, meeting attendee, or meeting times are updated. UI and code scenarios shown: Encryption based on attachment change events, Notifications based on recipient changes, and Notifications based on date/time changes. **Good-to-knows, pre-demo jingle, and samples in repo. ** **\n  Actions  Please complete the Office Add-in developing experience survey Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets  Earn contributor badges, sign up for the PnP Recognition program  Save the date. The next Office Add-ins community call is January 12th at 08:00am PST - https://aka.ms/officeaddinscommunitycall  Q\u0026amp;A (Question \u0026amp; Answers) When the Outlook REST API is decommissioned in October 2022, what API should add-ins deployed to customer-hosted Exchange Servers (2016/2019) use for mobile support? Will the Outlook REST API remain active for Exchange Server and just be decommissioned for O365 accounts?\nThe Outlook REST API is set to be decommissioned in October 2022, but mobile add-ins do not support the necessary requirement set to get access tokens for the suggested alternative of the MS Graph API. Does this mean the Outlook add-ins on mobile will have no way to make Graph API calls without forcing user interaction? Does this mean there is no migration path to keep the existing functionality we have with the REST API implementation on mobile add-ins?\nThanks for these questions. We understand there are many add-ins that rely on the Outlook REST APIs. The team is working on guidance that we hope to provide soon. The Outlook REST API is not supported in Exchange on-premise (2016/2019), with the exception of hybrid environments. A hybrid environment does support Microsoft Graph so we still encourage looking into the Microsoft Graph APIs for new solutions. For access tokens we recommend looking to the SSO documentation on how to access Microsoft Graph.\nThe Microsoft Graph SSO documentation focuses on calling Graph from server-side once an access token is obtained using a bootstrap token. For our add-in, we would prefer to pass that token back to the client and have the add-in initiate the MS Graph calls using the obtained token. Is this not recommended, and if so, why not?\nPassing a token to the client increases the risk of it getting leaked through browser history, caching, or other mechanisms. Keeping tokens on the server is a more secure way of managing them. For more guidance we recommend reaching out to the Microsoft identity platform team at https://docs.microsoft.com/azure/active-directory/develop/developer-support-help-options.\nI have a question on unit testing. I created my office.js add-in for Word, that is working with existing documents, and it is blocking/unblocking sections inside the document. As I understand, unit tests that are written in examples are working on the blank document. Is it possible to run unit tests on a custom document, and how can we accomplish that?\nUnit tests don\u0026rsquo;t run against an actual document. This sounds more like an end-to-end test, or UI testing. Unfortunately, there isn\u0026rsquo;t a good way to load a custom document and test against it. Many customers use manual testing for these types of scenarios. We\u0026rsquo;re hoping to improve this story down the road.\nOur Word add-in loads on Microsoft 365 Word on desktop and Microsoft 365 Word on the browser. But the add-in fails to load on the Office Online Server 2019 version of the Word Web App. We get an error message saying that it is unable to load the add-in, and that we should use Word on desktop instead.\nUnfortunately, Word add-ins are not supported on Office Online Server. For these scenarios, we recommend that you check that Office is properly initialized as described in https://docs.microsoft.com/office/dev/add-ins/develop/initialize-add-in.\nCan the Outlook event-based add-in be triggered by a user typing a certain word (similar to spell-check)?\nNo, we don\u0026rsquo;t have a specific event for this. It would be expensive to handle an event on every keypress. We recommend using another event such as OnMessageSend to trigger a check.\nIs there an Outlook event planned for when the Sender (From) changes? In desktop, if you have multiple mailboxes, you can select the sender. It would be useful to know when signatures might be different from senders.\nThis is on our backlog, but we don\u0026rsquo;t yet have an ETA for when this will be available. Which email signature system did you use in the demo?\nThe demo used a simple signature built by the engineering team. But we have awesome partners like CodeTwo, LetSignIt, and Exclaimer who provide solutions in this market. Can the email signature pull information from Active Directory attributes?\nYes Do smart alerts work on Outlook on the web?\nThe preview is only on Outlook on Windows. We are planning to add support for Outlook on the web next, and eventually all platforms. `onSend` add-ins can\u0026rsquo;t be published to the store. Will it possible to publish add-ins with smart alerts to the store?\nYes, add-ins using smart alerts can be published to Microsoft AppSource.\nIf session data needs to be stored centrally (so individual sessions / all users in an org can pull current, dynamic data) I\u0026rsquo;d love to understand where to place the centralized data repository in order to integrate it successfully\nIf you need to store settings that apply to all users of the add-in within the organization, you need to provide a data repository for it. You should choose a repository of your choice in the cloud. Some customers use SharePoint, for example.\nIf it\u0026rsquo;s web first, then I\u0026rsquo;m guessing somewhere in SharePoint users can fill out the form then sync that into AD (Azure AD Connect) then save that info into the on-premise AD?\nIt\u0026rsquo;s really your decision on which data repository you want to store such settings.\nAny progress on support for shared mailbox add-ins on OWA?\nThis is now in preview for Outlook on Windows. The Outlook team is looking to enable the same experience on Outlook on Windows, and we might have more updates to share early next year.\nWhat about supported platforms for the smart alerts? Can we expect mobile clients (iOS and Android) getting this feature enabled?\nYes! We are multiplatform by nature and eventually smart alerts will be added to all platforms. We are starting the beta with Outlook on Windows and the next platform will be on the web.\nSo, next year we may expect Win32 and Web availability of smart alerts. Is there any estimation for the mobile?\nOur goal is to GA no later than Q2 next year. Outlook on mobile will support event-based add-ins first, and then smart alerts. We don\u0026rsquo;t have concrete dates for the smart alerts on mobile yet.\nHow is the demo obtaining the document attached? It was easy when the document had a URL. But this is from a work machine. Do we have a sample in script lab?\nThere is an API in Office.js to get the attachments. Check out the Office.AttachmentContent interface. In script lab for Outlook search for \u0026ldquo;Get attachments\u0026rdquo; in the samples and you will find a sample.\nAny news when the current PowerPoint Preview API will go live?\nWe are looking at early next year.\nResources   D1: Article - What\u0026rsquo;s new for Office Add-ins at Ignite 2021   D2: Repo - Use Outlook event-based activation to encrypt attachments, process meeting request attendees and rea...   D2: Documentation - Configure your Outlook add-in for event-based activation   D2: Documentation - Outlook add-in API requirement set 1.11   D2: Documentation - Authenticate a user with a single-sign-on token in an Outlook add-in   D2: Song \u0026ndash; Office Add-ins Song   Office Add-ins community call  Upcoming agenda and previous call resources Recurring, monthly community call calendar invite Community call topic requests and questions Community call recordings on the YouTube Microsoft 365 community channel  Office Add-ins feedback  Technical questions \u0026ndash; Microsoft Q\u0026amp;A (office-js-dev), (office-addins-dev) Issues \u0026ndash; GitHub Recommendations and suggestions \u0026ndash; Microsoft 365 Developer Platform ideas   ","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-december-8-2021/images/office-add-ins-Thumb%20Dec%202021_hu2d84509e45f9551a9dd95957b9668ec7_230689_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-december-8-2021/","tags":[],"title":"Office Add-ins community call -- December 8, 2021"},{"categories":["Power Apps community call"],"contents":"  Building Xbox games with Power Apps \u0026ndash; (create an Xbox controller\n  Office like commenting \u0026amp; co-authoring (add commenting capability and Experimental co-authoring with git integration, to a canvas app**)** - Emma Cooper (Microsoft).\n  Recent Power Apps News and Community Contributions (Visualize data in model-driven apps with Power BI (preview, and December Developer Tools Refresh) \u0026ndash; Charles Sterling (Microsoft). Latest PnP Power Apps Samples \u0026ndash; April Dunnam (Microsoft). This call was hosted by Todd Baginski (Canviz).\n  The call was recorded on December 15, 2021. Questions were addressed in chat throughout the call.\nThank for attending the call or viewing it on demand. Agenda  Demo 1: Building Xbox games with Power Apps \u0026ndash; Brian Dang (Microsoft) | @mrdang \u0026ndash; 3:03 Demo 2: Office like commenting \u0026amp; co-authoring \u0026ndash; Emma Cooper (Microsoft) | \u0026ndash; 29:57 Recent Power Apps News and Community Contributions \u0026ndash; Charles Sterling (Microsoft) | @chass \u0026ndash; 50:59 Latest PnP Power Apps Samples \u0026ndash; April Dunnam (Microsoft) | @aprildunnam \u0026ndash; 54:55  Demos   Demo 1: Building Xbox games with Power Apps \u0026ndash; presenter steps through several apps and explains which Xbox sticks and buttons are used to navigate app. Follow along and start to build a game. The process: Set up environment, create a player with attributes, see techniques for moving the player around screen, refine movement using functions, and rotate player. Games = manipulate a player inside a table. Games are tables with skins. Have a bug crawling around your screen in no time!\n  Demo 2: Office like commenting \u0026amp; co-authoring \u0026ndash; 2 useful collaboration capabilities. Add comments, reply to threads, resolve and delete comments, @mention people, and receive an email across Power Platform products like done in Office apps. Roadmap for comments GA CYQ1'22, comments in Canvas apps CYQ2'22. Experimental co-authoring with git integration available now (as experimental) in canvas apps. Users intentionally decide when to publish/merge edits to shared document. Update history stored in back-end.   Recent News \u0026amp; Cool Stuff   Visualize data in model-driven apps with Power BI (preview) - Combine the capabilities of Power Apps, Power BI and Dataverse to help you visualize and understand your data \u0026ndash; with one click.\n  December Developer Tools Refresh   Actions  Power Platform User Groups - Find a user group in your area.  Power Platform user groups Dynamics 365 user groups    Global Power Platform Bootcamp  SCOTTISH SUMMIT 2022 - 25th \u0026amp; 26th February 2022 - PnP Samples - We welcome your Power Platform samples! Power Apps 4 Kids \u0026ndash; December 16, 5:00pm \u0026ndash; 6:00pm GMT  Join us for our next call: January 19, 2022, at 08:00am PST | https://aka.ms/powerappscommunitycall  Referenced in this session   D1: Repo - gamepad   D1: Documentation - Power Apps component framework overview (PCF Component)   D1: Website \u0026ndash; Gamepad Tester   D2: Article - Experimental Co-authoring for Power Apps Studio\n  D2: Documentation - Co-authoring in canvas apps (experimental)\n  Learn more  See the full blog post for this call on the Tech Community Blog - https://aka.ms/m365pnp/community/blog Microsoft\u0026rsquo;s Power Platform website Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - https://aka.ms/PowerAppsCommunitySamples Power Apps Community Videos -https://aka.ms/PowerAppsCommunityVideos PowerPlatformLearn Resources | https://www.powerplatformlearn.academy PnP Power Platform Samples | https://www.aks.ms/powerplatform-samples Power Addicts Hangout - https://wearepoweraddicts.com #LessCodeMorePower Video Series - https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Share more - draw attention to your great work - #PowerAppsCC  Stay connected  Twitter: https://twitter.com/MSPowerPlat Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/m365pnp/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/powerappscommunitycall  ","image":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-december-2021/images/PowerApps%20Thumb%20DEcember%202021_hua7d5f8bd502284c11252af106f62962d_240377_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-december-2021/","tags":[],"title":"Power Apps Community Call -- December 2021"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from December 14th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos.\nCall summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  On 21st and 28th of December we\u0026rsquo;ll have this call as usual, but more as a social gathering for coffee/tea or your chosen drink. Got questions? \u0026ndash; Join and let\u0026rsquo;s have a chat. Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 630+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring during December-January. Upcoming Ask Me Anything (AMA) sessions for PnP Search in January! New class Viva Connections ACEs (Feb 2022) Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). PnP Weekly \u0026ndash; Episode 147 (December 13th) with Munich, Germany-based consultant and MVP, Markus Möller (Avanade) | @Moeller2_0 | video | podcast Hear about the top 4 Microsoft 365 Platform related stories and view not 2, but 3 demos this week from Microsoft presenters about the latest capabilities of the Microsoft 365 platform.  The host of this call was Brian T. Jackett (Microsoft) | @BrianTJackett. Q\u0026amp;A takes place in chat throughout and live at end of the call. Microsoft 365 Platform News Flash\n  Public preview of SharePoint Framework 1.14 \u0026ndash; with updates for Viva Connections, Microsoft Teams and...\n  Understanding Azure AD Single Sign-on for Microsoft Teams apps\n  New and improved search results experience on Microsoft Teams\n  Announcing delta query support for the Microsoft Graph Assignments API   Register for Sharing is Caring Events:\n Ask me anything (AMA) PnP Search \u0026ndash; January 11th First Time Contributor Session \u0026ndash; December 15th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; 2022 Sessions Coming Soon PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; 2022 Sessions Coming Soon  First Time Presenter \u0026ndash; 2022 Sessions Coming Soon More than Code with VSCode \u0026ndash; More Dates Coming Soon  Maturity Model Practitioners \u0026ndash; January 18th (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo\n  Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call\n  Call attention to your great work by using the #PnPWeekly on Twitter. Thank you for joining the call. It is great to see over 200 attendees on this call today.\n  Demos Demos delivered in this session\n  Script buttons for Office Scripts \u0026ndash; what are Office Scripts, target user and usage scenario? What are script buttons and how you can get involved evolving Office scripts. Create buttons in Excel using the Action Recorder (capture actions and record them into a script \u0026ndash; great for seeing how the automations are built \u0026ndash; includes comments!) or the Code Editor (JS/Type Script call Office Script APIs). Also, Power Automate integration. Automations sharable within tenant.\n  Planning to build experiences for the US Government Cloud - what are the differences \u0026ndash; quick introduction to Microsoft 365 Government Community Cloud (GCC). Comparison of Commercial and Government cloud - GCC, GCC High and DoD. Reviewed differences in security and compliance as well as by product \u0026ndash; OneDrive, SharePoint, Microsoft Teams and Microsoft Graph. Capabilities by cloud found in Microsoft 365 Roadmap. Government cloud capabilities are limited. Connect with the Microsoft Federal Teams Developer Community.\n  Microsoft Graph Toolkit \u0026ndash; Using Login Component in your solutions \u0026ndash; the second session in Seb\u0026rsquo;s MGT series. This session focuses on the Login Component \u0026ndash; to sign-in (leveraging Microsoft Identity platform authentication) and read user profile from Microsoft Graph. Create a basic html page in VSCode and load MGT. Create and register an app in Azure AD. Add msal2 provider to the html page to handle authentication (AAD app) and the login component for user information.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Brian T. Jackett (Microsoft) | @BrianTJackett \u0026ndash; 6:21 D1: Script buttons for Office Scripts \u0026ndash; Nancy Wang (Microsoft) | @nancyatMSFT \u0026ndash; 9:47 D2: Planning to build experiences for the US Government Cloud - what are the differences \u0026ndash; Jay Hangan (Microsoft) \u0026ndash; 29:01 D3: Microsoft Graph Toolkit \u0026ndash; Using Login Component in your solutions \u0026ndash; Sébastien Levert (Microsoft) | @sebastienlevert \u0026ndash; 39:35  Resources Additional resources around the covered topics and links from the slides.\n  D1: Portal \u0026ndash; Office Scripts | aka.ms/office-scripts\n  D1: Documentation \u0026ndash; Office Scripts documentation | aka.ms/officedevscripts\n  D1: Samples - Basic scripts for Office Scripts in Excel on the web | aka.ms/officesamplescripts\n  D1: Feedback - Office Scripts Makers | aka.ms/oscripts   D2: Roadmap - Microsoft 365 roadmap\n  D2: [Documentation - Office 365 Government]\n  D3: Repo \u0026ndash; Microsoft Graph Toolkit | aka.ms/mgt\n  D3: Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/MGT/docs\n  D3: Sandbox - Microsoft Graph Toolkit Playground | aka.ms/MGT/Dev\n  D3: Learn - Develop apps with the Microsoft Graph Toolkit | aka.ms/mgt/learn\n  D3: First session - 7 December, 2021 - Discover the Microsoft Graph Toolkit \u0026ndash; Sébastien Levert (Microsoft) | @sebastienlevert\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Power Apps monthly call\u0026ndash; December 15th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; December 16th at 7:00 am PST | https://aka.ms/spdev-spfx-call Microsoft Identity Platform call \u0026ndash; December 16th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Microsoft 365 platform call \u0026ndash; December 21st at 8:00 am PST | https://aka.ms/m365-dev-call M365 General Dev call \u0026ndash; December 23rd at 7:00 am PST | https://aka.ms/m365-dev-sig Office add-in monthly call \u0026ndash; January 12th at 8:00 am PST | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash;January 13that 9:00 am PST | https://aka.ms/adaptivecardscommunitycall  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.  More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 15th of December 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-14th-of-december-2021/images/recording-14th-dec_huc205088bccfd4f3d750f8d783a555edc_462505_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-14th-of-december-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 14th of December, 2021"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365 hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen,Waldek Mastykarz (Microsoft) | @waldekm are joined by Munich, Germany-based consultant and MVP, Markus Möller (Avanade) | @Moeller2_0. Topics discussed in this session:\n Marcus\u0026rsquo; personal and technical journey to date.  On becoming an MVP \u0026ndash; and on what\u0026rsquo;s changed as a result of this achievement? Marcus\u0026rsquo; development focus that spans the Microsoft 365 platform and including authentication.  A challenge - the dreams vs reality/cost conversation with customers.  Microsoft 365 business priorities in Germany \u0026ndash; modernization/optimization. Microsoft Teams is the next wave and a driver behind Marcus\u0026rsquo; personal commitment to up skilling and sharing his learnings - for example recent Teams Development samples.  Marcus\u0026rsquo; Role in Avanade and why his organization supports him and his contributions to community.  Motivations behind sharing with community. Give/Get  We also covered 11 articles or videos by Microsoft and the community from the last week.\nPlease remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded in our rooms in front of a non-audience on Monday, December 13, 2021. Enjoy the show.  Video at Microsoft 365 Community YouTube channel    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Explore the new Microsoft Teams Store and discover apps for work and collaboration - Microsoft New and improved search results experience on Microsoft Teams - Hari Sudhakar (Microsoft) | harisudhakar VPD Understanding Azure AD Single Sign-on for Microsoft Teams apps - Bob German (Microsoft) | @Bob1German Public preview of SharePoint Framework 1.14 \u0026ndash; with updates for Viva Connections, Microsoft Teams and... - Vesa Juvonen (Microsoft) | @vesajuvonen Most used SharePoint Framework solutions from the Store - November 2021 - Vesa Juvonen (Microsoft) | @vesajuvonen  Community articles  Adoption with fun - Robert Crane | @directorcia Microsoft Ignite November 2021 announcements summary - Teams, Power Platform, Viva, Syntex and new p... - Chris O\u0026rsquo;Brien (Content+Cloud) | @ChrisO_Brien Teams Meeting apps \u0026ndash; Stage view basics - Markus Möller (Avanade) | @Moeller2_0 3 reasons on: Does the SharePoint App Bar really matter? - Stefan Bauer (N8D) | @StfBauer Episode #184 - Consuming Microsoft Graph from iOS \u0026ndash; Part 1 - Paolo Pialorsi (PiaSys) | @paolopia  Additional resources  Extend Microsoft Viva Connections - Microsoft Learn Consume a multi-tenant API within a set of Microsoft Viva Connections Adaptive Card Extensions (ACEs... solution in GitHub Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-147-markus-m%c3%b6ller-avanade/images/Thumb-Ep147-December1322_hu4e4a48f24418420186b51b77d96e5032_522187_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-147-markus-m%c3%b6ller-avanade/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 147 - Markus Möller (Avanade)"},{"categories":["Microsoft 365 developer podcast"],"contents":"Wes Hackett and Ahmed El Herazy talk with Paul and share their story of onboarding a developer into a team and ensuring the process is positive for all involved.\nListen to the show here: Onboarding Developers with Ahmed El Herazy and Wes Hackett m365devpodcast.com\n","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-onboarding-developers-with-ahmed-el-herazy-and/","tags":[],"title":"M365 Dev Podcast - Onboarding Developers with Ahmed El Herazy and Wes Hackett"},{"categories":["Community post"],"contents":"Images always enricher Adaptive Cards designs. However in Microsoft Teams max. message payload is just 25KB and that includes also the size of card\u0026rsquo;s JSON. Therefore it is very often not possible to display even the smallest image inline. What other options we have? Images in Adaptive Cards Basically images are displayed in Adaptive Cards using \u0026ldquo;Image\u0026rdquo; element. In its properties you need to type the URL to an image:   Important! Image\u0026rsquo;s URL must start with https and be a direct link to a file itself (ending up with jpg, png, tiff, etc\u0026hellip;). Ok, so what are the options to display images in Adaptive Cards? Actually two:\n Via an absolute hyperlink to the file itself Via data uri \u0026ndash; base64 encoded file contents The first approach I already explained above. It\u0026rsquo;s quite simple. The second one requires to take file contents and encode them using base64. This can be done upfront, manually, using online services eg. Base64 Image Encoder. Or, using expression dataUri(file content) in Power Automate:       What is returned, looks like the following string: data\u0026amp;colon;image/jpeg;base64,/9j/4AAJRgABAQ….QP//Z. The longer that string is, the bigger the file is. Finally, that string (or expression in Power Automate) must be put as a value inside Url property of the Image element in Adaptive Card design. Important! Microsoft Teams message payload can have a size of **max. 25KB **as of today \u0026ndash; that includes the JSON. So if you encode image into base64 it\u0026rsquo;s easy to realize, that having so many characters will push the payload to easily exceed that limit. 25KB is 25 000 bytes, while one character is encoded as 1 to 4 bytes. Just an example, $ needs one byte, whereas € needs 3 bytes.\nWhere to store images? Basically, the image that is going to be displayed must be available anonymously. This is because, Adaptive Card in MS Teams is displayed by a Teams Bot, not the authenticated user\u0026rsquo;s account, therefore it is not having the same access permissions as the user who displays the card. Knowing that, it is not possible to store and display images from SharePoint using absolute path. You can try, by first converting images to data uri, but remember the payload size :) What other places can be used then?\n Anonymous FTP server Some online image services like Imgur WordPress Azure Blob Storage others, allowing to access contents without authentication OneDrive cannot be used as a storage to host images, since even when we select to share an image with anyone:       The generated link is still not a valid, absolute link to a file itself, but to a page that displays the image, so when you put it as a Url property, it won\u0026rsquo;t display the image:   How to store images securely, but still display them in Adaptive Cards? In such case you need to look for services that allow to secure contents with connection string/ SAS (shared access signature) that can be added to absolute URL as url parameters. My favorite is Azure Blob Storage. Let me show you how.  Sign in to Azure portal and create new Storage account:      Once account is provisioned, open it and:  Navigate to Containers Select to create new container Provide its name and set its access to Private      Now upload image you would like to display in Adaptive Card:  Select the Upoad link Choose a file you want to upload and select all properties as per your choice Finally after upload navigate to Shared access tokens page      And finally generate the SAS token, that you can append to the absolute image link to make it available for display.  Define type of permissions \u0026ndash; for this scenario only Read is sufficient Define expiration dates \u0026ndash; when token will expire and asset will become inaccessible again Select HTTPS only, since that is what Adaptive Cards support Select to Generate SAS token and URL Copy the SAS token   Now you\u0026rsquo;re ready to navigate back to container contents, open file details, copy its path and append with SAS token:   Then paste such URL back to Url property of Image element in Adaptive Card and voilla! There it is:   I hope you will find this short tutorial useful. Please write down in comments what other providers you use to securely host images and access    ","image":"https://pnp.github.io/blog/post/display-images-in-adaptive-cards/images/image-5_hu2ca45629e11e0f5b14058d2ac0072ab2_50591_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/display-images-in-adaptive-cards/","tags":["Adaptive cards","Azure"],"title":"Display images in Adaptive Cards"},{"categories":["Community post"],"contents":"JMESPath The CLI documentation explains some of the basics of filtering. So for the common scenario\u0026rsquo;s like filtering on a Title it still I found the cases pretty straight forward. You can filter on any properties that are returned.\nYet for some other options I found it harder to find samples, especially if the CLI does return nested objects.\nCLI for Microsoft 365 data If you are working with CLI you get your data returned as JSON by default. So you can test your queries live at JMESPath.org using a response from the CLI. Some simplified JSON for listing all sites using the m365 spo site classic list --output json would look as follows.\n[{ \u0026#34;_ObjectType_\u0026#34;: \u0026#34;Microsoft.Online.SharePoint.TenantAdministration.SiteProperties\u0026#34;, \u0026#34;AllowDownloadingNonWebViewableFiles\u0026#34;: true, \u0026#34;AllowEditing\u0026#34;: false, \u0026#34;Title\u0026#34;: \u0026#34;Demo 1\u0026#34; }, { \u0026#34;_ObjectType_\u0026#34;: \u0026#34;Microsoft.Online.SharePoint.TenantAdministration.SiteProperties\u0026#34;, \u0026#34;AllowDownloadingNonWebViewableFiles\u0026#34;: false, \u0026#34;AllowEditing\u0026#34;: false, \u0026#34;Title\u0026#34;: \u0026#34;A Demo 2\u0026#34; }, { \u0026#34;_ObjectType_\u0026#34;: \u0026#34;Microsoft.Online.SharePoint.TenantAdministration.SiteProperties\u0026#34;, \u0026#34;AllowDownloadingNonWebViewableFiles\u0026#34;: true, \u0026#34;AllowEditing\u0026#34;: false, \u0026#34;Title\u0026#34;: \u0026#34;Sample 1\u0026#34; }] The most common queries are either to filter based on a specific property, or use a contains, starts_with or ends_with on a specific property. The final scenario is to limit the return values to have a smaller data set:  [?Title == 'Demo 1'] would return only the first item as it matches on the title Demo 1 [?contains(Title, 'Demo')] would return the first two items as it matches the Title on the word Demo [?contains(*, 'Demo 1')] would return any item in the array where the value of any property would be Demo 1, currently only the first item. [?starts_with(Title, 'Demo')] would only return the first item as it filters the title to start with Demo [?ends_with(Title, '1')] returns the first and last item, as the title ends with a 1 [?contains(Title, 'Demo') \u0026amp;\u0026amp; AllowDownloadingNonWebViewableFiles] returns only the first item as it combines two filters. [*].Title returns only the Titles for all items. [*].{Title: Title} returns all items as array with a Title property.  You can also use filters on sizing using comparison operators [?value \u0026lt; 100]. This can come in handy if you want to filter out based on sizes. For more complex scenario JMESPath can also help out. Besides filtering you can use sorting options. Obviously you can sort your data set using PowerShell or Bash. However in in some cases you might want to apply the logic with JMESPath so it would work cross platform. As with the previous sample, some dummy json and you can test your queries. [ { \u0026#34;Report Refresh Date\u0026#34;: \u0026#34;2021-06-15\u0026#34;, \u0026#34;User Principal Name\u0026#34;: \u0026#34;garthf@contoso.com\u0026#34;, \u0026#34;Is Deleted\u0026#34;: \u0026#34;False\u0026#34;, \u0026#34;Deleted Date\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;Last Activity Date\u0026#34;: \u0026#34;2020-07-07\u0026#34;, \u0026#34;Viewed Or Edited File Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Synced File Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Shared Internally File Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Shared Externally File Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Visited Page Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Assigned Products\u0026#34;: \u0026#34;OFFICE 365 E3\u0026#34;, \u0026#34;Report Period\u0026#34;: \u0026#34;7\u0026#34; }, { \u0026#34;Report Refresh Date\u0026#34;: \u0026#34;2021-06-15\u0026#34;, \u0026#34;User Principal Name\u0026#34;: \u0026#34;sands@contoso.com\u0026#34;, \u0026#34;Is Deleted\u0026#34;: \u0026#34;False\u0026#34;, \u0026#34;Deleted Date\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;Last Activity Date\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;Viewed Or Edited File Count\u0026#34;: \u0026#34;152\u0026#34;, \u0026#34;Synced File Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Shared Internally File Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Shared Externally File Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Visited Page Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Assigned Products\u0026#34;: \u0026#34;OFFICE 365 E3\u0026#34;, \u0026#34;Report Period\u0026#34;: \u0026#34;7\u0026#34; }, { \u0026#34;Report Refresh Date\u0026#34;: \u0026#34;2021-06-15\u0026#34;, \u0026#34;User Principal Name\u0026#34;: \u0026#34;janets@contoso.com\u0026#34;, \u0026#34;Is Deleted\u0026#34;: \u0026#34;True\u0026#34;, \u0026#34;Deleted Date\u0026#34;: \u0026#34;2021-05-15\u0026#34;, \u0026#34;Last Activity Date\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;Viewed Or Edited File Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Synced File Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Shared Internally File Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Shared Externally File Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Visited Page Count\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Assigned Products\u0026#34;: \u0026#34;OFFICE 365 E3\u0026#34;, \u0026#34;Report Period\u0026#34;: \u0026#34;7\u0026#34; } ]  sort_by(@, \u0026amp;\u0026quot;Last Activity Date\u0026quot;) would return the result set with the oldest Last Activity Date on top. That means empty dates first. reverse(sort_by(@, \u0026amp;\u0026quot;Last Activity Date\u0026quot;)) would reverse the order, shows the newest last activity date on top. reverse(sort_by(@, \u0026amp;\u0026quot;Viewed Or Edited File Count\u0026quot;)) would return the user with the most edited items on top. reverse(sort_by(@, \u0026amp;\u0026quot;Viewed Or Edited File Count\u0026quot;))[*].\u0026quot;User Principal Name would sort and only return the User Principal Name sorted by the most edited files on top. reverse(sort_by(@, \u0026amp;\u0026quot;Viewed Or Edited File Count\u0026quot;)) | [0].\u0026quot;User Principal Name\u0026quot; would sort and return the User Principal Name for the user with the most edited files. reverse(sort_by(@, \u0026amp;\u0026quot;Viewed Or Edited File Count\u0026quot;)) | [?\u0026quot;Is Deleted\u0026quot; == 'False'].\u0026quot;User Principal Name\u0026quot; sorts by then Viewed Or Edited File Count, then filters out deleted users and finally returns the User Principal Name  The last two commands show in the previous sample use a | to pipe the command. This allows you to further filter or tweak your set. Besides using | [*] to retrieve all results, or using | [0] to get the first item from the array you can also specify | [0:3] to get the top 3 items.\nYou can also combine different options as sorting and selecting. So given the previous data sample you can thus use reverse(sort_by(@, \u0026amp;\u0026quot;Viewed Or Edited File Count\u0026quot;)) | [0:3].\u0026quot;User Principal Name\u0026quot;. The query would sort and return the User Principal Name for top three users with the most edited files. Hope this cheat sheet helps you in case you are working with JMESPath queries and don\u0026rsquo;t hesitate to share your common scenario\u0026rsquo;s as well!\n#SharingIsCaring\n","image":"https://pnp.github.io/blog/post/display-images-in-adaptive-cards/images/image-5_hu2ca45629e11e0f5b14058d2ac0072ab2_50591_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/a-jmespath-cheat-sheet-for-the-cli-for-microsoft-365/","tags":["CLI for Microsoft 365"],"title":"A JMESPath cheat sheet for the CLI for Microsoft 365"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary Why not visit the Microsoft 365 tenant \u0026ndash; script samples gallery (118 scenarios and 161 scripts) today. Now there is support for Power Apps PowerShell scripts! Sign up and attend an AMA and other events in December-January hosted by Sharing is Caring. At the same time, sign up for the PnP Recognition Program. No major PnP project version releases this week, but much work is being done. To see current releases and latest updates/nightly builds, access the Repos via the links in table below. There were 2 new script samples delivered this week. Open-source project status (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.7.0 GA, PnP Provisioning Engine Schema v202103 Prepping for v1.8.0 - Winter 2022, .NET 6 support PnP .NET Libraries - PnP Core SDK v1.4.0 GA, PnP Transformation Framework: Public Preview released! Prepping for v1.5.0 - Winter 2022, .NET 6 support PnP PowerShell v1.8.0 GA In progress: V2 POC, Prepping for v1.8, nightly releases Yo teams - generator-teams v3.5.0 GA v4.0.0-next Yo teams - yoteams-build-core v1.5.0 GA Yo teams \u0026ndash; yoteams-deploy v1.1.0 GA Yo teams - msteams-react-base-component v3.1.1 Microsoft Graph Toolkit (MGT) v2.3.1 GA Preparing v2.3.1 release, working on v3.0.0 - Aligning all Toolkit components to Fluent UI Web Components\n Note\nWhile version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities.\n The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\nActions   Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Join us at the next** Microsoft 365 platform call 14th of December @ 8 AM PT**\n Latest news from Microsoft engineering on Microsoft 365 topics Demos:  Arvind Ravi - Latest with Microsoft Graph connectors Nancy Wang - Script buttons for Office Scripts Jay Hangan - Planning to build experiences for the US Government Cloud - what are the differences      Provide feedback to project teams or roll up your sleeves and join a project team.   Create a sample, i.e., for Teams visit https://aka.ms/teams-sample-wishlist   Register for Sharing is Caring Events:\n Ask me anything (AMA) PnP Search \u0026ndash; January 11th First Time Contributor Session \u0026ndash; December 15th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; 2022 Sessions Coming Soon PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; 2022 Sessions Coming Soon  First Time Presenter \u0026ndash; 2022 Sessions Coming Soon More than Code with VSCode \u0026ndash; More Dates Coming Soon  Maturity Model Practitioners \u0026ndash; January 18th (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Please do share your great work. **Microsoft Power Platform Samples: **(https://aka.ms/powerplatform-samples)\n  Please continue to share your great work. **Script Samples: ** (https://aka.ms/script-samples)\n  2 New Samples - Scenarios contributed by\n Siddharth Vaghasia | @siddh_me Kinga Kazala    \u0026ndash; Many thanks!\nTogether Mode!  The house is full! Great seeing everyone today. Coordinated stadium style wave rehearsals starting soon. Demos Demos delivered in this session\n  Updates on Independent Publisher Connectors \u0026amp; Notion Connector Demo \u0026ndash; 44 connectors in production, 32 in certification pipeline today! The Notion Connector is used to access Notion pages, databases and users. Notion is a cross platform note taking application. Presenters step through copying content from a Notion page into a Microsoft List. Steps - create a new integration, make Notion page content available to API, create flow that extracts data from Notion page.   What\u0026rsquo;s new with Learning Pathways \u0026ndash; overview of Learning Pathways, integration with Viva Learning, platform updates, making Microsoft training materials available in your tenant, configuring to expose certain content to your organization, and adding your customer\u0026rsquo;s training materials to a custom playlist. All content flowing into Learning Pathways is flowing into Viva Learning. Translation - if you\u0026rsquo;ve invested in Learning Pathways, that content is being integrated into Viva Learning.\n  Using inline editing with list formatting \u0026ndash; inlineEditField attribute \u0026ndash; field targeted editing. Scenario: Track toy construction progress in a list where status is displayed in tile view format. Tiles show an image, randomization (Elf quote), and multi-level progress bar using images. The inlineEditField attribute allows user to edit completion status field. Supported and unsupported field types reviewed. Full code in sample. Part 2 of demo (setValue attribute) to be delivered on December 23rd.\n  Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics Topics covered in this call\n  PnP .NET library updates - Bert Jansen (Microsoft) | @O365bert \u0026ndash; 5:54\n  PnP PowerShell updates - Bert Jansen (Microsoft) | @O365bert \u0026ndash; 7:41\n  yo Teams updates - Rick Van Rousselt (Advantive) | @rickvanrousselt \u0026ndash; 9:20\n  Microsoft Graph Toolkit updates - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 10:54\n  Microsoft Script Samples - Paul Bullock (CaPa Creative Ltd) | @pkbullock \u0026ndash; 2:25\n  Microsoft Teams Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 11:25\n  Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam \u0026ndash; 11:53\n  ****Demo 1: ****[Updates on Independent Publisher Connectors \u0026amp; Notion Connector Demo \u0026ndash; Natalie Pienkowska (Microsoft) | @NataliePienkow1, Harshini Varma (Capgemini) | @HarshiniVarmaa \u0026amp; Chandra Sekhar Malla (Royal Group LLC) | @ChandraSMalla \u0026ndash; 14:09 ]\n  Demo 2: What\u0026rsquo;s new with Learning Pathways \u0026ndash; Mike Hollinshead (Microsoft) | @mahollinshead \u0026amp; Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp \u0026ndash; 33:21\n  Demo 3: Using inline editing with list formatting \u0026ndash; inlineEditField attribute \u0026ndash; Chris Kent (DMI) | @thechriskent  \u0026ndash; 47:48\n  Resources Additional resources around the covered topics and links from the slides.\n **D1: **Repo - Microsoft Power Platform Connectors  **D1: **Connector \u0026ndash; Notion  **D1: ** API - Start building with the Notion API  **D1: ** User Group - SCMENA Power Platform User Group  D2: Documentation - Microsoft 365 Learning Pathways Content Updates (December update)  **D2:**Documentation - Microsoft 365 learning pathways  **D2:**Look book \u0026ndash; SharePoint look book  **D2:**Repo \u0026ndash; Microsoft 365 learning pathways  **D3: **Repo - Elf Progress Board  D3: Documentation - Use column formatting to customize SharePoint | aka.ms/spdocs-column-formatting PnP Weekly \u0026ndash; Episode 146 (December 6th) with Reykjavik, Iceland-based Consultant and MVP, Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp PnP Weekly \u0026ndash; Episode 145 (November 30th) with Bristol, England, United Kingdom-based Senior Program Manager on the Microsoft Graph Dev-X team Rabeb Othmani | @Rabeb_Othmani | video | podcast  General resources  Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Microsoft 365 platform call \u0026ndash; December 14that 8:00 am PST | https://aka.ms/m365-dev-call Power Apps monthly call\u0026ndash; December 15th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; December 16th at 7:00 am PST | https://aka.ms/spdev-spfx-call Microsoft Identity Platform call \u0026ndash; December 16th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar M365 General Dev call \u0026ndash; December 23rd at 7:00 am PST | https://aka.ms/m365-dev-sig Office add-in monthly call \u0026ndash; January 12th at 8:00 am PST | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash;January 13th[at 9:00 am PST | ]https://aka.ms/adaptivecardscommunitycall  General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n \u0026ldquo;Sharing is caring\u0026rdquo;\nMicrosoft 365 PnP team, Microsoft - 10th of December 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-9th-of-december/images/recording-9th-december_hu8885d06a1e12bd9aedcd033403fd3656_256668_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-9th-of-december/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 9th of December, 2021"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from December 7th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  Register for the Microsoft 365 Developer Program and get a free E5 developer tenant with instant availability and other assets.  Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with 640+ samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring during December-January. Upcoming Ask Me Anything (AMA) sessions for PnP Search in January!  Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). PnP Weekly \u0026ndash; Episode 146 (December 6th) with Reykjavik, Iceland-based Consultant and MVP, Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp Hear about the top 2 Microsoft 365 Platform related stories and view 2 demos from Microsoft presenters about working with the Microsoft 365 platform.  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout and live at end of the call. Microsoft 365 Platform News Flash\n  Let\u0026rsquo;s decode: Single Sign-on in Microsoft Teams tabs\n  Developing enterprise-ready Microsoft Teams apps with Teams ToolKit v3.0\n  Register for Sharing is Caring Events:\n Ask me anything (AMA) PnP Search \u0026ndash; January 11th First Time Contributor Session \u0026ndash; December 15th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; 2022 Sessions Coming Soon PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; 2022 Sessions Coming Soon  First Time Presenter \u0026ndash; 2022 Sessions Coming Soon More than Code with VSCode \u0026ndash; More Dates Coming Soon  Maturity Model Practitioners \u0026ndash; January 18th (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo\n  Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call\n  Call attention to your great work by using the #PnPWeekly on Twitter.   Thank you for joining the call today including many who are presently at the Microsoft 365 Collaboration Conference in Las Vegas this week! Demos Demos delivered in this session\n  Discover the Microsoft Graph Toolkit (MGT) \u0026ndash; first of several sessions on MGT. What is MGT and why use it? Step through 12 major components \u0026ndash; purpose and how invoked. Each component brings a wealth of information securely to your app. Look at resources \u0026ndash; Repo, documentation, Playground, and training. Subsequent sessions to go deeper into components and settings; customization with styles, templates and caching; and integrations with React, SPFx, and providers.\n  Introduction to the Microsoft 365 developer program and to the instant development environment \u0026ndash; join the program and install the instantly available, secure and completely isolated, pre-provisioned Developer tenant. Create a profile and tour the structures and content. The E5 Developer tenant comes with all Office apps, 16 sample users, mail, events, data, templates, reports, AAD, Microsoft Teams and SharePoint sites. The E5 tenant renews every 90 days, if used and does not supplant your existing E3 developer tenant.\n  Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 5:50 D1: Discover the Microsoft Graph Toolkit \u0026ndash; Sébastien Levert (Microsoft) | sebastienlevert \u0026ndash; 7:56 D2: Introduction to the Microsoft 365 developer program and to the instant development environment \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 29:11 General Q\u0026amp;A \u0026ndash; Microsoft 365 Platform Team \u0026ndash; 47:56  Resources Additional resources around the covered topics and links from the slides.\n  D1: Repo \u0026ndash; Microsoft Graph Toolkit | aka.ms/mgt\n  D1: Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph | aka.ms/MGT/docs\n  D1: Sandbox - Microsoft Graph Toolkit Playground | aka.ms/MGT/Dev\n  D1: Learn - Develop apps with the Microsoft Graph Toolkit | aka.ms/mgt/learn   D2: Program - Microsoft 365 Developer Program | aka.ms/m365/devprogram\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Office add-in monthly call \u0026ndash; December 8th at 8:00 am PST | https://aka.ms/officeaddinscall M365 General Dev call \u0026ndash; December 9th at 7:00 am PST | https://aka.ms/m365-dev-sig Microsoft 365 platform call \u0026ndash; December 14that 8:00 am PST | https://aka.ms/m365-dev-call Power Apps monthly call\u0026ndash; December 15th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; December 16th at 7:00 am PST | https://aka.ms/spdev-spfx-call Microsoft Identity Platform call \u0026ndash; December 16th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Adaptive Cards monthly call \u0026ndash;January 13that 9:00 am PST | https://aka.ms/adaptivecardscommunitycall  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.  More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 8th of December 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-7th-of-december-2021/images/recording-7th-dec_hu3c93dac9e7e228af834eec70cabc3f72_550126_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-7th-of-december-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 7th of December, 2021"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Reykjavik, Iceland-based Consultant and MVP, Derek Cash-Peterson (Sympraxis Consulting) | @spdcp. Topics discussed in this session:\n How Derek came to be based in Reykjavik, Iceland The one-week anniversary of becoming an Office Developer MVP and how to become an MVP.  Latest focus on ACEs and Teams samples development Career progression from educator to developer, technical project manager, architect\u0026hellip; Thoughts on server-side and client-side development, Viva Connections, and Azure functions.  About selecting the right tool for the job. \u0026ldquo;Appropriate customization\u0026rdquo; Strategy for positioning Viva to customers who want Viva, but not sure what it is. Tips for those considering a career in consulting. A glimpse at what Waldek and Vesa have on their plates to calendar year end \u0026ndash; thinking, experimenting, updates to CLI, releasing SPFx v1.14 Beta and more, always more.  1, 300 registered attendees were at the European Collaboration Summit last week! One more episode of Microsoft 365 PnP Weekly in 2021 \u0026ndash; releasing on 14^th^ of December.  We also covered 13 articles or videos by Microsoft and the community from the last week.\nPlease remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded in front of a non-audience on Monday, December 6, 2021. Enjoy the show.  Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.  These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  What\u0026rsquo;s New in Microsoft Teams | November 2021 - Microsoft SharePoint Roadmap Pitstop: November 2021 - Mark Kashman (Microsoft) | @mkashman The journey to Viva Topics adoption success: Implement - Matt Wolodarsky (Microsoft) | @mwolodarsky Let\u0026rsquo;s decode: Single Sign On (SSO) in Microsoft Teams Tabs - Rabia Williams (Microsoft) | rabwill Developing enterprise-ready Microsoft Teams apps with Teams ToolKit v3.0 - Tomomi Imura (Microsoft) | @girlie_mac   Community articles  Creating a video portal in SharePoint with JSON formatted document library - Anand Ragav (Ericsson) | @AnandVRagav Dataverse search: the good, the bad and the ugly - Joris Poelmans (Inetum-Realdolmen) | @jopxtwits Become part of your presentation with Presenter Modes in Microsoft Teams - Pieter Veenstra (HybrIT Services) | @PieterVeenstra How to update field values in SharePoint using Microsoft Graph - Eli H. Schei (Point Taken AS) | @acupof_dev Testing an Azure Function using delegated access with Postman - Markus Möller (Avanade) | @Moeller2_0 Extract All Table Data (Rows) In A Form Using SharePoint Syntex - Leon Armston (Intelogy) | @LeonArmston Episode #183 - Extending Microsoft Viva Connections Desktop with SPFx - Paolo Pialorsi (PiaSys) | @paolopia 📽️️How to create a video library view with List Formatting in SharePoint - Giuliano De Luca | @delucagiulian  Additional resources  Extend Microsoft Viva Connections - Microsoft Learn Consume a multi-tenant API within a set of Microsoft Viva Connections Adaptive Card Extensions (ACEs... solution in GitHub Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n*\u0026ldquo;Sharing is caring!\u0026rdquo; *\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-146-derek-cash-peterson/images/pnp-weekly-146_hue2be8bddd15d99e2f3994b5591a74cd7_700164_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-146-derek-cash-peterson/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 146 - Derek Cash-Peterson (Sympraxis Consulting)"},{"categories":["Microsoft 365 developer podcast"],"contents":"Vincent Biret sits down with Jeremy to talk about Kiota - the new SDK generator from Microsoft.\nListen to the show here: Kiota, the OpenAPI SDK Generator with Vincent Biret (m365devpodcast.com)\nLinks from the show  https://microsoft.github.io/kiota/  ","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-kiota-the-openapi-sdk-generator-with-vincent/","tags":[],"title":"M365 Dev Podcast - Kiota, the OpenAPI SDK Generator with Vincent Biret"},{"categories":["Community post"],"contents":"Often times we store videos in SharePoint and use the file viewer or the highlighted content web parts to display videos on the homepage of the site. With Microsoft Stream also moving towards SharePoint for storing meeting recordings, the use of videos in SharePoint site pages could increase. Recently I worked on an event page in SharePoint and thought it would be useful to have a video portal created for the event to store and display event session recordings.   In this post are the details of the document library and how to display that in the SharePoint site page. Document library The document library exists at the same level as the default shared documents library on the site.   Video files are uploaded to the document library.   Additional columns can be created in the library, these additional columns provide rich information that can be displayed in the video portal. Rich metadata such as title, description, people, tools/topics covered, social sharing options like yammer, share and like buttons can compliment the video portal experience.   When video files are uploaded and the metadata fields are filled in with the information, the default \u0026ldquo;All Documents\u0026rdquo; view can look like this.   The default view or a new view can be created with all the columns included. The view can be formatted using JSON to get the card view in a gallery style layout. Each card has the video title, a description, tools covered using icons from Flicon.io, people featuring in the video with hover cards opening their office profile and a timestamp to indicate when the video was published. The \u0026ldquo;Watch\u0026rdquo; button opens the video in a new browser tab, the learning button opens the item in a learning application like a Learning Management system so user can add to their profile, the Yammer button opens the connected thread in Yammer for conversations, the share button opens the default share option within SharePoint/OneDrive so user can send the item through email or copy link, the thumbs-up button registers user likes in the \u0026ldquo;User\u0026rdquo; person column using the recently released setValue function in List formatting.   To achieve this formatting, the view needs to be formatted using JSON.     The complete JSON is provided below. { \u0026#34;schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/view-formatting.schema.json\u0026#34;, \u0026#34;height\u0026#34;: 400, \u0026#34;width\u0026#34;: 280, \u0026#34;debugMode\u0026#34;: true, \u0026#34;hideSelection\u0026#34;: true, \u0026#34;hideColumnHeader\u0026#34;: true, \u0026#34;formatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-borderColor-neutralLight\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;box-sizing\u0026#34;: \u0026#34;border-box\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;border-width\u0026#34;: \u0026#34;2px\u0026#34;, \u0026#34;box-shadow\u0026#34;: \u0026#34;0px 1.6px 3.6px 0 #00000024, 0px 0.3px 0.9px 0 #00000024\u0026#34;, \u0026#34;border-style\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 0 0 0px\u0026#34;, \u0026#34;margin-bottom\u0026#34;: \u0026#34;2px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;column\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontSize-s\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;line-height\u0026#34;: \u0026#34;1.5em\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;padding-left\u0026#34;: \u0026#34;16px\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;=if([$Track] ==\u0026#39;Keynote\u0026#39;, \u0026#39;#0fc373\u0026#39;, if([$Track] ==\u0026#39;Product Roundtables\u0026#39;, \u0026#39;#ff8c0a\u0026#39;, if([$Track] ==\u0026#39;Breakout\u0026#39;, \u0026#39;#af78d2\u0026#39; \u0026#39;#0082f0\u0026#39;)))\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;13.5px\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;[$Track]\u0026#34; }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: {}, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;flex\u0026#34;: \u0026#34;0px 1px 1px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;align-items\u0026#34;: \u0026#34;center\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;[$Image.serverRelativeUrl]\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;float\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;100%\u0026#34; } } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;flex\u0026#34;: \u0026#34;0 0 0px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-wrap\u0026#34;: \u0026#34;wrap\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;column\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;flex\u0026#34;: \u0026#34;0 0 0px\u0026#34;, \u0026#34;box-sizing\u0026#34;: \u0026#34;border-box\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;10px\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontSize-xl\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;border\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;left\u0026#34;: \u0026#34;10px\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;40px\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;cursor\u0026#34;: \u0026#34;pointer\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;[$Session]\u0026#34;, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;defaultClick\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontSize-m\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;line-height\u0026#34;: \u0026#34;1.5em\u0026#34;, \u0026#34;margin-bottom\u0026#34;: \u0026#34;8px\u0026#34;, \u0026#34;padding-top\u0026#34;: \u0026#34;6px\u0026#34; }, \u0026#34;customCardProps\u0026#34;: { \u0026#34;openOnEvent\u0026#34;: \u0026#34;hover\u0026#34;, \u0026#34;directionalHint\u0026#34;: \u0026#34;rightCenter\u0026#34;, \u0026#34;isBeakVisible\u0026#34;: true, \u0026#34;beakStyle\u0026#34;: { \u0026#34;backgroundColor\u0026#34;: \u0026#34;#3c3c3c\u0026#34; }, \u0026#34;formatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;#3c3c3c\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;300px\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;10px\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;[$About]\u0026#34; } }, \u0026#34;txtContent\u0026#34;: \u0026#34;=if(indexOf([$About] + \u0026#39;|\u0026#39;, \u0026#39;|\u0026#39; ) \u0026gt; 180, substring([$About], 0, 180) + \u0026#39;...\u0026#39;, [$About])\u0026#34; }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-row-listPadding\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;left\u0026#34;: \u0026#34;10px\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;320px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;13px\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=if([$Age] \u0026lt;=1, \u0026#39;Today\u0026#39;, [$Age] + \u0026#39; days ago\u0026#39;)\u0026#34; }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;10%\u0026#34;, \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;left\u0026#34;: \u0026#34;12px\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;165px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;row\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;forEach\u0026#34;: \u0026#34;choiceIterator in [$Tool]\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-bgColor-themePrimary ms-fontColor-white ms-fontSize-xl\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;=[$choiceIterator]\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;=if([$choiceIterator] == \u0026#39;Teams\u0026#39;, \u0026#39;TeamsLogo\u0026#39; , if([$choiceIterator] == \u0026#39;Forms\u0026#39;, \u0026#39;OfficeFormsLogo\u0026#39; , if([$choiceIterator] == \u0026#39;SharePoint\u0026#39;, \u0026#39;SharepointLogo\u0026#39; , if([$choiceIterator] == \u0026#39;Whiteboard\u0026#39;, \u0026#39;WhiteboardApp32\u0026#39; , if([$choiceIterator] == \u0026#39;Stream\u0026#39;, \u0026#39;StreamLogo\u0026#39; , if([$choiceIterator] == \u0026#39;Office\u0026#39;, \u0026#39;OfficeLogo\u0026#39; , if([$choiceIterator] == \u0026#39;Computer\u0026#39;, \u0026#39;System\u0026#39; , if([$choiceIterator] == \u0026#39;PowerApps\u0026#39;, \u0026#39;PowerApps\u0026#39; , if([$choiceIterator] == \u0026#39;Power Automate\u0026#39;, \u0026#39;MicrosoftFlowLogo\u0026#39; , if([$choiceIterator] == \u0026#39;Mobile\u0026#39;, \u0026#39;CellPhone\u0026#39; , if([$choiceIterator] == \u0026#39;Outlook\u0026#39;, \u0026#39;OutlookLogo\u0026#39; , if([$choiceIterator] == \u0026#39;Planner\u0026#39;, \u0026#39;PlannerLogo\u0026#39; , if([$choiceIterator] == \u0026#39;To-Do\u0026#39; ,\u0026#39;ToDoLogoInverse\u0026#39;, if([$choiceIterator] == \u0026#39;Security\u0026#39; , \u0026#39;LaptopSecure\u0026#39;, \u0026#39;SharePointLogo\u0026#39;)))))))))\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;25px\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;20px\u0026#34;, \u0026#34;text-align\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;2px\u0026#34;, \u0026#34;margin\u0026#34;: \u0026#34;1px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;=if([$choiceIterator] == \u0026#39;Teams\u0026#39;, \u0026#39;#6264a7\u0026#39;, if([$choiceIterator] == \u0026#39;SharePoint\u0026#39;, \u0026#39;#036C70\u0026#39;, if([$choiceIterator] == \u0026#39;Forms\u0026#39;, \u0026#39;#007F70\u0026#39;, if([$choiceIterator] == \u0026#39;Outlook\u0026#39;, \u0026#39;#0078D4\u0026#39;, if([$choiceIterator]== \u0026#39;Stream\u0026#39;, \u0026#39;#BC1948\u0026#39;, if([$choiceIterator] == \u0026#39;PowerApps\u0026#39;, \u0026#39;#752875\u0026#39;, if([$choiceIterator] == \u0026#39;Mobile\u0026#39;, \u0026#39;#0E41B1\u0026#39;, if([$choiceIterator] == \u0026#39;Computer\u0026#39;, \u0026#39;#73276C\u0026#39;, if([$choiceIterator] == \u0026#39;Power BI\u0026#39;, \u0026#39;#EDBF2C\u0026#39;, if([$choiceIterator] == \u0026#39;Whiteboard\u0026#39;, \u0026#39;#1E8EE5\u0026#39;, if([$choiceIterator] == \u0026#39;To-Do\u0026#39; , \u0026#39;#175BBD\u0026#39;, \u0026#39;#252423\u0026#39; )))))))))\u0026#34; } } ] } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-bgColor-transparent sp-css-borderColor-neutralLight\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;right\u0026#34;: \u0026#34;8px\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;150px\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-previewColumnContainer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;p\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-userEmptyText\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=if(length([$Responsible]) == 0, \u0026#39;–\u0026#39;, \u0026#39;\u0026#39;)\u0026#34; }, { \u0026#34;forEach\u0026#34;: \u0026#34;personIterator in [$Responsible]\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;a\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;=if(loopIndex(\u0026#39;personIterator\u0026#39;) \u0026gt;= 5, \u0026#39;sp-card-userContainer\u0026#39;, \u0026#39;sp-card-userContainer sp-card-keyboard-focusable\u0026#39;)\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(loopIndex(\u0026#39;personIterator\u0026#39;) \u0026gt;= 5, \u0026#39;none\u0026#39;, \u0026#39;\u0026#39;)\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;defaultHoverField\u0026#34;: \u0026#34;[$personIterator]\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;=getUserImage([$personIterator.email], \u0026#39;S\u0026#39;)\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;[$personIterator.title]\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;sp-card-userThumbnail\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(length([$Responsible]) \u0026gt; 5 \u0026amp;\u0026amp; loopIndex(\u0026#39;personIterator\u0026#39;) \u0026gt;= 4, \u0026#39;none\u0026#39;, \u0026#39;\u0026#39;)\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;50%\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;-1px\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-bgColor-neutralLight ms-fontColor-neutralSecondary sp-card-userOthers\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(length([$Responsible]) \u0026gt; 5 \u0026amp;\u0026amp; loopIndex(\u0026#39;personIterator\u0026#39;) == 4, \u0026#39;\u0026#39;, \u0026#39;none\u0026#39;)\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;50%\u0026#34; }, \u0026#34;customCardProps\u0026#34;: { \u0026#34;formatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-personCallout\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;forEach\u0026#34;: \u0026#34;personIterator in [$Responsible]\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-userContainer sp-card-userCustomCard\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(loopIndex(\u0026#39;personIterator\u0026#39;) \u0026lt; 4, \u0026#39;none\u0026#39;, \u0026#39;\u0026#39;)\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;50%\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;defaultHoverField\u0026#34;: \u0026#34;[$personIterator]\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;=getUserImage([$personIterator.email], \u0026#39;S\u0026#39;)\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;[$personIterator.title]\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;sp-card-userThumbnail\u0026#34; } } ] } ] }, \u0026#34;openOnEvent\u0026#34;: \u0026#34;hover\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;=\u0026#39;+\u0026#39; + toString(length([$Responsible]) - (4))\u0026#34; } ] } ] } ] } ] } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;flex\u0026#34;: \u0026#34;0px 10px 0px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;row\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;button\u0026#34;, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;defaultClick\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;left\u0026#34;: \u0026#34;-1px\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;350px\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;60px\u0026#34;, \u0026#34;margin-left\u0026#34;: \u0026#34;10px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;border-color\u0026#34;: \u0026#34;#0082f0\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;Watch\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-row-button ms-borderColor-blue sp-row-button ms-bgColor-purpleDark--hover ms-fontWeight-semibold ms-fontColor-black\u0026#34; } } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;a\u0026#34;, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;defaultClick\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;left\u0026#34;: \u0026#34;110px\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;348px\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;40px\u0026#34;, \u0026#34;margin-left\u0026#34;: \u0026#34;10px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;4px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Join the conversation\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;sp-row-button sp-row-button ms-bgColor-purpleDark--hover ms-fontWeight-semibold ms-fontColor-black\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;=if([$Yammer] == \u0026#39;\u0026#39;, \u0026#39;https://web.yammer.com/main/topics/eyJfdHlwZSI6IlRvcGljIiwiaWQiOiI2NzYwNDM4OTg4OCJ9/all\u0026#39;, [$Yammer])\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;_blank\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;color\u0026#34;: \u0026#34;#0082f0\u0026#34;, \u0026#34;align-content\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;6px\u0026#34;, \u0026#34;padding-left\u0026#34;: \u0026#34;12px\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;YammerLogo\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-font-xl\u0026#34; } } ] } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;button\u0026#34;, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;setValue\u0026#34;, \u0026#34;actionInput\u0026#34;: { \u0026#34;User\u0026#34;: \u0026#34;=if(indexOf([$User.email] , @me) \u0026gt; -1 , removeFrom([$User.email] , @me) , appendTo([$User.email] , @me))\u0026#34; } }, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;right\u0026#34;: \u0026#34;45px\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;350px\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;40px\u0026#34;, \u0026#34;margin-left\u0026#34;: \u0026#34;10px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;4px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;sp-row-button sp-row-button ms-bgColor-purpleDark--hover ms-fontWeight-semibold ms-fontColor-black\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;color\u0026#34;: \u0026#34;#0082f0\u0026#34;, \u0026#34;align-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;=if(indexOf([$User.email] , @me) \u0026gt; -1 ,\u0026#39;LikeSolid\u0026#39;, \u0026#39;Like\u0026#39;)\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-font-xl\u0026#34; } } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-row-listPadding\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;left\u0026#34;: \u0026#34;230px\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;358px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;18px\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=if(length([$User]) \u0026gt; 0, length([$User]), \u0026#39;\u0026#39;\u0026#34; } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;button\u0026#34;, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;share\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;left\u0026#34;: \u0026#34;150px\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;350px\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;40px\u0026#34;, \u0026#34;margin-left\u0026#34;: \u0026#34;10px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;4px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Share it\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;sp-row-button sp-row-button ms-bgColor-purpleDark--hover ms-fontWeight-semibold ms-fontColor-black\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;color\u0026#34;: \u0026#34;#0082f0\u0026#34;, \u0026#34;align-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;Share\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-font-xl\u0026#34; } } ] } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;a\u0026#34;, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;defaultClick\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;left\u0026#34;: \u0026#34;70px\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;348px\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;40px\u0026#34;, \u0026#34;margin-left\u0026#34;: \u0026#34;10px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;4px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Join the conversation\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;sp-row-button sp-row-button ms-bgColor-purpleDark--hover ms-fontWeight-semibold ms-fontColor-black\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;[$Learning]\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;_blank\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;color\u0026#34;: \u0026#34;#0082f0\u0026#34;, \u0026#34;align-content\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;6px\u0026#34;, \u0026#34;padding-left\u0026#34;: \u0026#34;12px\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;D365TalentLearn\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-font-xl\u0026#34; } } ] } ] } ] } ] } ] } }  The final step is then to embed this view in the SharePoint site page using the Document library web part.   And choosing the library to be embedded. \u0026ldquo;Session recordings\u0026rdquo; is the name of my library.   Editing the web part to set the correct view, hiding the command bar and \u0026ldquo;See all\u0026rdquo; buttons.   The final result can look like this. Optionally a support list to filter down videos by topic or category can be added to enhance the experience.   Hope you found this useful. I would be interested to hear your thoughts and if you would use this and how you might enhance this. ","image":"https://pnp.github.io/blog/post/creating-a-video-portal-in-sharepoint-with-json-formatted/images/AnandVRagav_1-1638227104052_huec0ce68f13a85f3347a32c1d0280de51_586435_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/creating-a-video-portal-in-sharepoint-with-json-formatted/","tags":["SharePoint","List formatting"],"title":"Creating a video portal in SharePoint with JSON formatted document library"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"Viva Connections \u0026amp; SharePoint Framework bi-weekly community call recording from December 2nd is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary  Tune in each Tuesday for the Microsoft 365 platform community call. Featured topics for the December 7th call - Introduction to Microsoft 365 Instant Sandbox - Michael Aldridge, Introduction to Microsoft Graph Connectors SDK - Rajdeep Chandra, and Microsoft Graph Toolkit Controls - Sébastien Levert  Register for training events in December - January hosted by Sharing is Caring. Register for the PnP Recognition Program. SharePoint Framework 1.13.1 released - npm install -g @microsoft/generator-sharepoint The Road Ahead after 1.13.1 \u0026ndash; 1.14 and future. Modernized app catalog for SharePoint Framework solutions - Preview PnP project releases in the last two weeks  SharePoint Framework (SPFx) v1.13.1 GA CLI for Microsoft 365 v4.2.0 GA. **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago)      PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.13.1 GA v1.14.0 January target PnPjs Client-Side Libraries v2.11.0 GA, v3.0.0 Preview nightly builds of v3 CLI for Microsoft 365 v4.2.0 GA Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.4.0 3.5.0 with SPFx v1.13 support is coming soon Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1) 3.3.0 with SPFx v1.13 support is coming soon PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.4.1 Preview, v4.3.0 \u0026amp; v3.21.0 Release expected by calendar year end\n Additionally, there were 2 extensions, 2 web parts and 2 ACE samples were delivered! Triple 2\u0026rsquo;s are just great! Your contributions are greatly appreciated by many. The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place as always in chat throughout the call. Awesome to see many of you seated in those plush brown seats and others joining off camera on the call today. It\u0026rsquo;s December!\nActions  Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  Ask me anything (AMA) PnP Search \u0026ndash; January 11th First Time Contributor Session \u0026ndash; December 15th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; 2022 Sessions Coming Soon  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; 2022 Sessions Coming Soon PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; 2022 Sessions Coming Soon  First Time Presenter \u0026ndash; 2022 Sessions Coming Soon More than Code with VSCode \u0026ndash; More Dates Coming Soon  Maturity Model Practitioners \u0026ndash; January 18th (every 3rd Tuesday of month, 7:00am PT) Getting Started with Viva Connection ACEs \u0026ndash; TBS soon PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Introduction to HtwoO React library \u0026ndash; Fluent UI experiences easily \u0026ndash; learn about the new open-source HtwoO React library created by Julie Turner containing atomic components built by Stephan Bauer. Step through installing and initializing the library in an SPFx project. Then build a Splash card page containing multiple sub-components. Copy sample code from library into components and add components to a page \u0026ndash; modular development. Alpha library available now, will go GA shortly.   Getting started with using PnP Search Web Parts v4 \u0026ndash; create a modern Search Center page in minutes using 4 key PnP web parts - Search Results, Search Filters, Search Box and Search Verticals. Get v4 package on GitHub and add to App Catalog. Add web parts to a page. Configure data sources \u0026ndash; SharePoint or Microsoft Search, layouts, create search queries and connections between web parts, refine filtering. Package updated by year end.    SPFx extension samples: (https://aka.ms/spfx-extensions)\n Microsoft Clarity for Modern SharePoint - João Ferreira | @joao12ferreira Follow Document- André Lage | @aaclage  SPFx web part samples https://aka.ms/spfx-webparts\n React Calendar - Mohammed Amer | @Mohammad3mer Follow Document - André Lage | @aaclage  PnP SPFx ACEs https://aka.ms/spfx-aces\n  My Notifications -*João Mendes | @joaojmendes\n  Follow Document* - André Lage | @aaclage\n  to be posted soon. Thank you for your great work. Samples are often showcased in Demos.   Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 6:56 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 9:29 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 11:46 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 12:34 PnP Modern Search - Franck Cornu (aequos) | @FranckCornu \u0026ndash; 13:18 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 13:56 PnP SPFx ACEs Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 16:01  Demos   D1: Introduction to HtwoO React library \u0026ndash; Fluent UI experiences easily \u0026ndash; Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 18:31\n  D2: [Getting started with using PnP Search Web Parts v4 \u0026ndash; ][Franck Cornu][https://twitter.com/FranckCornu]( | @FranckCornu \u0026amp; )Mikael Svenson[ (Microsoft) | @mikaelsvenson \u0026ndash; 38:10]\n  Resources Additional resources around the covered topics and links from the slides.\n  D1: Tools - Getting Started with HTWOO-REACT   D1: Icons - hTWOo UI Icons   D1: Article - ABOUT HTWOO UI   D1: Splash card \u0026ndash; Welcome to your hTWOo Splash card   D2: Repo - [PnP Modern Search Solution]https://github.com/microsoft-search/pnp-modern-search\n  D2: GitHub - [PnP Modern Search v4]https://microsoft-search.github.io/pnp-modern-search/\n  PnP Weekly \u0026ndash; Episode 145 (November 30th) with Bristol, England, United Kingdom-based Senior Program Manager on the Microsoft Graph Dev-X team Rabeb Othmani | @Rabeb_Othmani | video | podcast\n  PnP Weekly \u0026ndash; Episode 144 (November 22nd) with Atlanta, US-based Senior Program Manager on the Viva Connections Platform team - Catherine Chuaga | video | podcast\n  General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned   SharePoint dev documentation\n  SharePoint dev issue list **Upcoming calls | Recurrent invites: **\n  Microsoft 365 platform call \u0026ndash; December 7that 8:00 am PST | https://aka.ms/m365-dev-call\n  Office add-in monthly call \u0026ndash; December 8th at 8:00 am PST | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; December 9th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call \u0026ndash;December 9that 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; December 15th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  SharePoint Framework call \u0026ndash; December 16th at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Microsoft Identity Platform call \u0026ndash; December 16th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar\n  Viva Connections \u0026amp; SharePoint Framework bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Connections, Microsoft Teams, SharePoint Online, and also on-premises. Calls are used for the following objectives.\n SharePoint Framework engineering update from Microsoft Talk about PnP JavaScript Core libraries Office 365 CLI Updates SPFx reusable controls PnP SPFx Yeoman generator Share code samples and best practices Possible engineering asks for the field - input, feedback, and suggestions Cover any open questions on the client-side development Demonstrate SharePoint Framework in practice in Microsoft Viva, Microsoft Teams or SharePoint context You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 3rd of December 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-2nd-of/images/recording-2nd-of-dec_huc3f857c21e272e7a64f5c4de41daa996_259544_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-2nd-of/","tags":[],"title":"Viva Connections \u0026 SharePoint Framework Community Call -- 2nd of December, 2021"},{"categories":["Microsoft 365 platform call"],"contents":" Microsoft 365 Platform Community Call - weekly community call recording from November 30th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  New to Microsoft 365 Platform development? Join the Microsoft 365 Developer Program today and get a free E5 developer tenant with instant availability, and other assets. Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training! Preview the Microsoft 365 Sample Solution Gallery with more than 600 samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring during December-January. Upcoming Ask Me Anything (AMA) sessions for PnP Search in January!  Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). PnP Weekly \u0026ndash; Episode 145 (November 29th) with Bristol, England, United Kingdom-based Senior Program Manager Rabeb Othmani | @Rabeb_Othmani, on the Microsoft Graph Dev-X team. | video | podcast The great people, supportive organizations and solid work done in this community over the last month is recognized today! Available now - the Microsoft 365 Community (PnP) \u0026ndash; November 2021.   The host of this call was Sébastien Levert (Microsoft) | sebastienlevert. Q\u0026amp;A takes place in chat throughout the call. Microsoft 365 Platform News Flash\n What\u0026rsquo;s New in Microsoft Teams | November 2021  Actions  Register for Sharing is Caring Events:  Ask me anything (AMA) PnP Search \u0026ndash; January 11th First Time Contributor Session \u0026ndash; December 15th (EMEA, APAC \u0026amp; US friendly times available) Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; December 15th Maturity Model Practitioners \u0026ndash; January 18th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   It\u0026rsquo;s great to see everyone today. Some of you are joining from the European Collaboration Summit in Düsseldorf, Germany!\nDemos Demos delivered in this session\n  Microsoft 365 Application Certification \u0026ndash; Microsoft 365 App compliance program overview, publisher verification \u0026ndash; how to add a verified publisher to your app, and Microsoft 365 app certification experiences within Azure AD. *Unfortunately, due to a technical hiccup, we did not capture Arpitha\u0026rsquo;s entire demo in the session recording. We will work with Arpitha to re-record her demo and communicate its availability through social channels. *   Consume a multi-tenant API within Viva Connections Adaptive Card Extensions (ACEs) \u0026ndash; this reference (Order management) solution shows surfacing relevant partner hosted business data from a secured API hosted through Azure AD and how to consume a multi-tenant API within a set of Microsoft Viva Connections Adaptive Card Extensions (ACEs) developed with SharePoint Framework (SPFx). The API needs to be consented and API permissions approved to be called in the customer\u0026rsquo;s tenant.\n  Introduction to Microsoft Graph Go SDK \u0026ndash; Preview SDK that allows Go developers to access Microsoft Graph with streamlined authentication and more. Specifically \u0026ndash; the Microsoft Graph Go SDK allows you to connect and retrieve data for any of the supported Microsoft 365 services that are available on Microsoft Graph. Key benefits \u0026ndash; authentication (Azure Identity), Fluent Style UI, and a Middleware pipeline (handlers). Go code snippets are rendered in Graph Explorer.\n  Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Sébastien Levert (Microsoft) | @sebastienlevert \u0026ndash; 9:00 D1: Microsoft 365 Application Certification - Arpitha Dhanapathi (Microsoft) | Intro only as technical issues precluded capturing the full recording. \u0026ndash; 12:01 D2: Consume a multi-tenant API within Viva Connections Adaptive Card Extensions (ACEs) \u0026ndash; Paolo Pialorsi (PiaSys) | @PaoloPia \u0026amp; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 14:33 D3: Introduction to Microsoft Graph Go SDK \u0026ndash; Vincent Biret (Microsoft) | @baywet \u0026ndash; 28:56  Resources Additional resources around the covered topics and links from the slides.\n  D1: Documentation - Microsoft 365 App Compliance Program   D2: Article - Guidance for implementing partner offerings for Viva Connections with ACEs and custom APIs   D2: Sample - Consume a multi-tenant API within a set of Microsoft Viva Connections Adaptive Card Extensions (ACEs...   D3: Article - Go developers can now access Microsoft Graph with streamlined authentication and more   D3: Documentation - Install the Microsoft Graph SDKs   D3: Repo - Microsoft Graph SDK for Go   D3: Documentation - Azure for Go developers   D3: Q\u0026amp;A \u0026ndash; aka.askgraphdk   General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   SharePoint Framework call \u0026ndash; December 2nd at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Microsoft 365 platform call \u0026ndash; December 7th at 8:00 am PST | https://aka.ms/m365-dev-call\n  Office add-in monthly call \u0026ndash; December 8th at 8:00 am PST | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; December 9th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call \u0026ndash;December 9that 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; December 15th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; December 16th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.    More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 1st of December 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-30th-of-november-2021/images/recording-30th-nov-platform_hu3c93dac9e7e228af834eec70cabc3f72_574728_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-30th-of-november-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 30th of November, 2021"},{"categories":["Office add-in developer community call"],"contents":"  Call summary This month\u0026rsquo;s community call features a customer presentation - CodeTwo Outlook Add-in for email signature management - (email signature manager designed for Microsoft 365) Michał Królewicz - Technical Marketing Manager (CodeTwo), Microsoft 365 instant sandbox (turnkey E5 developer sandbox all M365 workloads and Sample Data Packs) - Michael Aldridge \u0026ndash; Principal Program Manager (Microsoft), and a demo - Unit testing Office JavaScript with Office-Addin-Mock library (an NPM library to facilitate unit testing) - Igor Ribeiro \u0026ndash; Software Engineer (Microsoft)\nThis month\u0026rsquo;s Community spotlight recognizes MVP Maarten van Stam and Eric Legault for their continued contributions to this community. Greatly appreciated! Register for the PnP Recognition Program. Q\u0026amp;A live and in chat throughout call. The call was hosted by David Chesnut (Microsoft) | @davidchesnut. Recorded November 10, 2021.\nPresenters  Michał Królewicz - Technical Marketing Manager​ at CodeTwo Michael Aldridge - Principal Content Program Manager Igor Ribeiro - Software Engineer  Topics  CodeTwo Outlook Add-in for email signature management \u0026ndash; Microsoft Gold Partner CodeTwo demonstrates their email signature manager Outlook Web add-in product that leverages Microsoft Event based add-in capabilities recently released at Microsoft Ignite 2021. Their product allows Admins to centrally manage email signatures and legal disclaimers on mails sent to internal and external recipients. Client-side and server-side (Cloud) capabilities including preview are available on all Office 365 devices. Code sample in GitHub.  Microsoft 365 instant sandbox \u0026ndash; turnkey prototype environment. Join the Microsoft 365 Developer program and get a pre-provisioned E5 tenant with Teams Developer Portal, all M365 workloads and Sample Data Packs. Teams sideloading pre-installed, App Studio pre-installed, Full Sample Teams environment with 16 fictitious users, chats, channels and teams pre-installed. Existing developer program members can create a 2nd Microsoft 365 Instant Sandbox E5 developer subscription at end of November.  Unit testing Office JavaScript with Office-Addin-Mock library - a new NPM library to facilitate unit testing. Provides a way to unit test the Office JavaScript API and Does not depend on Office. Compatible with major unit testing JavaScript frameworks, such as Mocha or Jest. Supports all Office hosts. Works for JavaScript and TypeScript. Office Addin Mock along with test examples are available now. Future work items called out.   Agenda  T1: Customer presentation: CodeTwo Outlook Add-in for email signature management - Michał Królewicz (CodeTwo) \u0026ndash; 1:21 T2: Tools: Microsoft 365 instant sandbox - Michael Aldridge (Microsoft) \u0026ndash; 15:39 T3: Demo: Unit testing Office JavaScript with Office-Addin-Mock library - Igor Ribeiro (Microsoft) \u0026ndash; 25:46 Community spotlight: Maarten van Stam and Eric Legault \u0026ndash; 35:00 Q\u0026amp;A \u0026ndash; 35:44  Actions  Provide input on Mocking Office.js for unit tests \u0026ndash; Standard way to unit test and mock office-js API  Earn contributor badges - sign up for the PnP Recognition program: https://pnp.github.io/recognitionprogram/  Follow channels in twitter \u0026ndash; for call agendas and summaries, release announcements,\u0026hellip;  https://twitter.com/microsoft365dev https://twitter.com/m365pnp   Next community call \u0026ndash; December 8th at 08:00am PST - https://aka.ms/officeaddinscommunitycall  Q\u0026amp;A (Question \u0026amp; Answers) Microsoft 365 developer program and instant sandbox Is the developer subscription as persistent as a paid subscription? To mimic a real environment I also attached my custom domain. Is that still possible?\nIt is a durable subscription. If you\u0026rsquo;re coming from Visual Studio, this subscription will automatically update as part of the Visual Studio subscription. Otherwise, you need to show developer activity within 90 days to be renewed. You don\u0026rsquo;t control the domain name in the sandbox. To configure the domain name, you\u0026rsquo;ll need the customizable sandbox (the previous sandbox experience). So now we can get two sandboxes using one dev account?\nYes. When you enroll in the Microsoft 365 developer program, can you choose an instant or a provisioned account?\nYes, you choose when you sign up. How do we reset a sandbox? Today we don\u0026rsquo;t have the ability to reset. However your old tenant will expire naturally if you don\u0026rsquo;t use it. Is Visio included in the Microsoft 365 developer program? Visio is not included in the Microsoft 365 developer program E5 subscription today.\nUnit testing with the Office JS Office-Addin-Mock library** How do we unit test or integrate Cypress into an Outlook plugin?\nIt doesn\u0026rsquo;t seem likely this would work as Cypress is more focused on end-to-end testing, while the unit testing library we provide is designed for unit testing frameworks. How do we unit test if we are using Excel.run?\nYes, there\u0026rsquo;s a sample demonstrating this: https://github.com/OfficeDev/Office-Addin-TaskPane/tree/master/test/unit Miscellaneous  With the Outlook REST API being decommissioned in November 2022 in favor of Graph API, what happens to on-premise Exchange REST API support at that time? We have add-ins that use the REST API for mobile. Will the REST API still be usable at that time and does the decommissioning just apply to Office 365? Are there any plans to publish a migration guide or best practices to Microsoft Graph from the Outlook REST API, which will be decommissioned in November 2022? The Outlook REST API is being decommissioned next year. Can you outline what exactly the impact of this will be? For example, will the service be turned off for Office 365 causing mobile add-ins that were using the add-in to stop working? Will Exchange 2016 environments continue to work, or will an update be pushed out to turn off the API on those?  Thanks for the inquiries about the Outlook REST API! We understand there are many add-ins that rely on the Outlook REST APIs. The team is working on guidance that we hope to provide soon. In the meantime, we still encourage you to look into the Microsoft Graph APIs for new solutions.\n\nWhat is the best approach to follow to distribute an Office-Add-in in a single tenant scenario? Since every customer has a different URL, every manifest should be customized to communicate with the customer\u0026rsquo;s web app instance.\nFor a single tenant, the best approach is typically to have the admin distribute your add-in by using centralized deployment. For more information, see Deploy add-ins in the admin center. If you are planning to use a separate manifest for each customer, then you will still want to use centralized deployment and provide the correct version of the manifest to each customer. If you want to support multiple customers with one manifest, then we recommend to Publish your add-in on Microsoft AppSource. I am an Office Add-in developer, eager to work with the new PowerPoint Shape API since the August 2021 community call. When I run the \u0026ldquo;Insert shape, line and text box\u0026rdquo; sample code on Script Lab, unlike what happens with all other samples there, I get an error. Could it be because I am not in the Office Insider Program?\nYes, these are preview APIs right now, so most likely, you\u0026rsquo;ll need to use the insider version of Office to work with them. You can sign up for Office Insider at https://insider.office.com/. Is there an API we can use for previewing files in Office on the web?\nIf you intend to render something such as a thumbnail preview, then no, we don\u0026rsquo;t have any APIs around this today. However, it would be great to learn more about your scenario. Please consider submitting a feature request for this at https://aka.ms/m365dev-suggestions. If you intend to read a file then this is possible. Please refer to the OneDrive file storage API overview - Microsoft Graph | Microsoft Docs.\nAny news when the current PowerPoint Preview API will go live?\nWe are looking to release the tags API set to general availability (GA) by end of month. The rest of the API\u0026rsquo;s will GA tentatively sometime early next year.\nResources  T1: Website - www.codetwo.com  T1: Blog - What\u0026rsquo;s new for Office Add-ins at Ignite 2021  T1: Blog - CodeTwo Squad Blog  T1: Sample \u0026ndash; Sample signatures add-in  T2: Blog post - Microsoft 365 Developer Program launches new instant sandbox with Teams sample data pack  T2: Program \u0026ndash; Microsoft 365 Developer Program  T3: NPM - Office-Addin-Mock  T3: Repo - Test Examples  T3: Issues \u0026ndash; GitHub Issues   Office Add-ins community call  Upcoming agenda and previous call resources Recurring, monthly community call calendar invite Community call topic requests and questions Community call recordings on the YouTube Microsoft 365 community channel  Office Add-ins feedback  Technical questions \u0026ndash; Microsoft Q\u0026amp;A (office-js-dev), (office-addins-dev) Issues \u0026ndash; GitHub Recommendations and suggestions \u0026ndash; Microsoft 365 Developer Platform ideas   ","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-november-10-2021/images/office-add-ins-Thumb-Nov_huebbc531df7831825c572b2dd745c44e1_275430_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-november-10-2021/","tags":[],"title":"Office Add-ins community call -- November 10, 2021"},{"categories":["PnP Weekly"],"contents":" In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Bristol, England, United Kingdom-based Senior Program Manager Rabeb Othmani | @Rabeb_Othmani, on the Microsoft Graph Dev-X team.\n Topics discussed in this session:\n  Rabeb\u0026rsquo;s role in the Microsoft Graph team, about working remotely, and career development before joining team - Mixed Radio, Xamarin, Tree shaking. Work on Graph Explorer and Kyota \u0026ndash; a SDK generator to help developers generate tailored SDKs Thoughts for women and for men working with women in IT that include allyships, avoiding positive discrimination, giving and receiving guidance, education, unintentional microaggressions, celebrating differences, respecting other\u0026rsquo;s experiences and more.   [We also covered 7 articles or videos by Microsoft and the community from the last week. ]\n Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n  This session was recorded in front of a non-audience on Friday, November 26, 2021. Enjoy the show.   Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.   These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot;  Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\n Microsoft articles   The journey to Viva Topics adoption success: Initiate - Matt Wolodarsky (Microsoft) | @mwolodarsky   Community articles   Monitor and Notify M365 health using CLI for Microsoft 365 - Arjun Menon (Tata Consultancy Services) | @arjunumenon Create an event page with SharePoint, SharePoint Spaces and formatted Lists - Anand Ragav (Ericsson) | @AnandVRagav M365 Dev Podcast - Microsoft News: November 2021 - Jeremy Thake (Microsoft) | @jthake \u0026amp; Paul Schaeflein (AddIn365) | @paulschaeflein Microsoft Graph PowerShell SDK 1.9.0 Released - Liam Cleary | @helloitsliam Episode #182 - Navigation in Adaptive Card Extensions (ACEs) - Paolo Pialorsi (PiaSys) | @paolopia Learn how to use Microsoft Loop with me - Darrell Webster (Modern Workplace Change) | @darrellaas   Additional resources   Extend Microsoft Viva Connections - Microsoft Learn Consume a multi-tenant API within a set of Microsoft Viva Connections Adaptive Card Extensions (ACEs... solution in GitHub Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp   If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n *\u0026ldquo;Sharing is caring!\u0026rdquo; *\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-145-rabeb-othmani-microsoft/images/Thumb-Ep145-November29_hu50737f7a69d18b47164fb2c5b1eb6b97_504476_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-145-rabeb-othmani-microsoft/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 145 - Rabeb Othmani (Microsoft)"},{"categories":["Microsoft 365 Platform Community update"],"contents":"Microsoft 365 Patterns and Practices (PnP) Community November 2021 update is out with a summary of the latest guidance, samples, and solutions from Microsoft or from the community for the community. This article is a summary of all the different areas and topics around the community work we do around Microsoft 365 ecosystem during the past month. Thank you for being part of this success. Sharing is caring! ?\nWhat is Microsoft 365 Community (PnP) Microsoft 365 PnP is a nick-name for Microsoft 365 platform community activities coordinated by numerous teams inside of the Microsoft 365 engineering organizations. PnP is a community-driven open source initiative where Microsoft and external community members are sharing their learning\u0026rsquo;s around implementation practices for Microsoft 365. Topics vary from Microsoft Viva, Microsoft Graph, Microsoft Teams, Power Platform, OneDrive and SharePoint. Active development and contributions happen in GitHub by providing contributions to the samples, reusable components, and documentation for different areas. PnP is owned and coordinated by Microsoft engineering, but this is work done by the community for the community.\n  See more details from New Microsoft 365 Patterns and Practices (PnP) team model with new community leads The initiative is facilitated by Microsoft, but we have multiple community members as part of the PnP team (see team details in end of the article) and we are always looking to extend the PnP team with more community members. Notice that since this is open source community initiative, so there\u0026rsquo;s no SLAs for the support for the samples provided through GitHub. Obviously, all officially released components and libraries are under official support from Microsoft. Main resources around Microsoft 365 Community:\n  Microsoft 365 Community - http://aka.ms/m365pnp - One location for all the resources and news around Microsoft 365 platform\n  Microsoft 365 community blog - http://aka.ms/m365pnp/community/blog\n  Microsoft 365 development blog - http://aka.ms/m365pnp-blog\n  Microsoft 365 Community Channel on YouTube - http://aka.ms/m365pnp-videos\n  Microsoft 365 Developer YouTube channel - https://aka.ms/M365DevYouTube\n  ✍ Latest Dev Blog posts Here are the latest blog posts and announcements around Microsoft 365 development topics from https://developer.microsoft.com/microsoft-365/blogs.\n 18th of November - Go developers can now access Microsoft Graph with streamlined authentication and more - Vincent Biret (Microsoft) | @baywet  18th of November - Microsoft Teams development: All you need to know - Rabia Williams (Microsoft) | rabwill 17th of November - Developing real-time collaborative apps with Azure, Microsoft 365, Power Platform, and GitHub - Dan Wahlin | @DanWahlin 16th of November Guidance for implementing partner offerings for Viva Connections with ACEs and custom APIs - Vesa Juvonen (Microsoft) | @VesaJuvonen 15th of November Announcing Teams JS SDK v2 in public preview: Extend Teams apps across Microsoft 365 - Zakiullah Khan (Microsoft) 10th of November - Breaking changes to attendance report in Microsoft Graph onlineMeeting API (beta)  3rd of November - Ignite 2021: Excel add-ins and data types - Chris Gross (Microsoft)  2nd of November - Ignite 2021: Building apps for collaboration in a hybrid world - Ben Summers (Microsoft) 2nd of November - Announcing public preview of Azure Fluid Relay service @ Ignite 2021 - Mathangi Chakrapani (Microsoft) 2nd of November - Microsoft Graph @ Ignite 2021 2nd of November - Microsoft 365 Developer Program launches new instant sandbox with Teams sample data pack - Michael Aldridge (Microsoft) 2nd of November - What\u0026rsquo;s new for Office Add-ins at Ignite 2021 28th of October - Learn how to extend Microsoft Viva Connections - Rabia Williams (Microsoft) | @williamsrabia 25th of October - OData property changes to Microsoft 365 usage reports API in Microsoft Graph 21st of October -Announcing SharePoint Framework 1.13 \u0026ndash; Extending Microsoft Viva Connections Latest community posts at https://aka.ms/m365pnp/community/blog 19th of November - Michel Mendes (Storm Technology) | @michelcarlo - Quick SharePoint Approvals using List formatting JSON to set field values 18th of November - Luise Freese (M365Princess) | @LuiseFreese - Let\u0026rsquo;s tame Dataverse: How to reference Many-to-Many-relationships in Azure Logic Apps 18th of November - Patrick Lamber (Expertsinside AG) | @patricklamber - Remove orphaned redirect sites using the CLI for Microsoft 365 16th of November - Chandani Prajapati | @Chandani_SPD - How to Convert Word Document to PDF in SharePoint Document Library using Power Automate? 11th of November - Carmen Ysewijn (Qubix) | @carmenysewijn -Matching the logged in user in a canvas app with a person column in SharePoint 8th of November - Patrick Lamber (Expertsinside AG) | @patricklamber - Export/Backup all your flows from an environment using the CLI for Microsoft 365 26th of October - Chandani Prajapati | @Chandani_SPD - How to use Microsoft graph toolkit react people picker control in SPFx Webpart? 23rd of October - Luise Freese (M365Princess) | @LuiseFreese - How 3 makers, 2 devs and a princess came together to save kittens for a hackathon Community call recording blog posts: 18th of November - Viva Connections \u0026amp; SharePoint Framework Community Call \u0026ndash; 18th of November, 2021 16th of November - Microsoft 365 Platform Call \u0026ndash; 16th of November, 2021 11th of November - Microsoft 365 Developer Community Call recording \u0026ndash; 11th of November, 2021 10th of November - Adaptive Cards community call \u0026ndash; October 2021 10th of November - Microsoft 365 Platform Call \u0026ndash; 9th of November, 2021 5th of November - Microsoft 365 Platform Call \u0026ndash; 2nd of November, 2021 - Microsoft Ignite 2021 watch party 4th of November - SharePoint Framework Community Call \u0026ndash; 4th of November, 2021 - Microsoft Tech Community 28th of October - Microsoft 365 Developer Community Call recording \u0026ndash; 28th of October, 2021 26th of October - Microsoft 365 Platform Call \u0026ndash; 26th of October, 2021 25th of October - Power Apps Community Call \u0026ndash; October 2021 22nd of October - Office Add-ins community call \u0026ndash; October 13, 2021 21st of October - SharePoint Framework Community Call \u0026ndash; 21st of October, 2021 Microsoft 365 Developer Podcasts 18th of October - M365 Dev Podcast - yo Teams Generator Update with Wictor Wilén 11th of October - M365 Dev Podcast - Building a Solution with Low-Code Tools with Carmen Ysewijn and Luise Freese Microsoft 365 PnP Weekly Podcasts and vlogs 23rd of November - Microsoft 365 PnP Weekly - Episode 144 - Catherine Chuaga (Microsoft) 16th of November - Microsoft 365 PnP Weekly - Episode 143 - Roina Ochieng (Microsoft) 9th of November - Microsoft 365 PnP Weekly - Episode 142 - Natalie Pienkowska (Microsoft) 8th of November - M365 Dev Podcast - Exchange Deprecations with Greg Taylor 2nd of November - Microsoft 365 PnP Weekly - Episode 141 - Joel Rodrigues (Storm Technologies) 26th of October - Microsoft 365 PnP Weekly - Episode 140 - Simon Ågren (Advania)  Community Calls There are numerous different community calls on different areas. All calls are being recorded and published either from Microsoft 365 Developer or Microsoft 365 Community (PnP) YouTube channels. Recordings are typically released within the following 24 hours after the call. You can find a detailed agenda and links to specific covered topics on blog post articles at the Microsoft 365 developer blog when the videos are published.\n Microsoft 365 Platform Call - https://aka.ms/m365-dev-call - Updates and demos from Microsoft as weekly call on Tuesdays - topics vary from Microsoft Teams, Microsoft Graph, Power Platform, SharePoint, OneDrive and more Adaptive Cards https://aka.ms/adaptivecardscommunitycall - Updates and news around Adaptive Cards with live demos Microsoft identity platform https://aka.ms/IDDevCommunityCalendar - Latest on the identity side Office Add-ins https://aka.ms/officeaddinscommunitycall - News and community work around Office add-ins with live demos PowerApps https://aka.ms/PowerAppsMonthlyCall - Monthly summary on PowerApps community with live demos M365 Community Call https://aka.ms/spdev-sig-call - Bi-weekly - General topics on Microsoft 365 Dev from various aspects - Microsoft Teams, Microsoft Graph Toolkit, Provisioning, Automation, Scripting, Power Automate, Solution design SharePoint Framework Community call https://aka.ms/spdev-spfx-call - Bi-weekly - Consists of topics around SharePoint Framework and JavaScript-based development in the Microsoft Teams and in SharePoint platform. If you are interested in doing a live demo of your solution or sample in these calls, please do reach out to the PnP Team members (contacts later in this post) and they are able to help with the right setup. These are great opportunities to gain visibility for example for existing MVPs, for community members who would like to be MVPs in the future or any community member who\u0026rsquo;d like to share some of their learnings.  Microsoft 365 Community (PnP) Ecosystem in GitHub Most of the community driven repositories are in the PnP GitHub organization as samples are not product specifics as they can contain numerous different solutions or the solution works in multiple different applications.\n  Microsoft Graph Toolkit - Repository and project on Microsoft Graph Toolkit controls - welcomes community contributors\n  PnPjs - PnPjs Framework repository\n  CLI Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings\n  generator-spfx - Open-source Yeoman generator which extends the out-of-the-box Yeoman generator for SharePoint with additional capabilities\n  generator-teams - Open-source Microsoft Teams Yeoman generator - Bots, Messaging Extensions, Tabs, Connectors, Outgoing Web hooks and more\n  teams-dev-samples - Microsoft Teams targeted samples from community and Microsoft engineering\n  script-samples - Scripting samples for automating operations in Microsoft 365 with PowerShell modules or CLIs\n  Sharing is Caring - Getting started on learning how to contribute and be active on the community from GitHub perspective.\n  pnpcore - The PnP Core SDK is an SDK designed to work against Microsoft 365 with Microsoft Graph API first approach\n  powershell - PnP PowerShell module which is PowerShell Core module targeted for Microsoft 365\n  pnpframework - PnP Framework is a .Net Standard 2.0 library targeting Microsoft 365 containing the PnP Provisioning engine and a ton of other useful extensions\n  spfx-reference-scenarios - Samples for the Microsoft Teams and Viva Connections, implemented using SharePoint Framework\n  sp-dev-fx-aces - Samples on the Adaptive Card Extensions for Microsoft Viva\n  sp-dev-fx-webparts - Client-side web part samples from community and Microsoft engineering\n  sp-dev-fx-extensions - Samples and tutorial code around SharePoint Framework Extensions\n  sp-dev-fx-library-components - Samples and tutorial code around the SharePoint Framework library components\n  sp-starter-kit - Starter kit solution for SharePoint modern experiences\n  sp-dev-build-extensions - Different build extensions like gulp tasks and gulp plugins from the community and engineering around SharePoint development\n  sp-dev-solutions - Repository for more polished and fine-tuned reusable solutions build with SharePoint Framework\n  sp-dev-samples - Repository for other samples related on the SharePoint development topics - WebHooks etc.\n  sp-dev-fx-controls-react - Reusable content controls for SharePoint Framework solutions build with React\n  sp-dev-fx-property-controls - Reusable property pane controls to be used in web parts\n  list-formatting - Open-source community-driven repository for the column and view formatting JSON definitions\n  sp-dev-site-scripts - Open-source community-driven repository for community Site Designs and Site Scripts\n  sp-dev-modernization - Tooling and guidance around modernizing SharePoint from classic to modern\n  sp-power-platform-solutions - Solution and sample code for SharePoint Power Platform solutions\n  powerfx-samples - Samples that demonstrate different usage patterns for the Power Fx low-code programming language\\\n  powerapps-samples - Samples that demonstrate different usage patterns for Power Apps\n  powerautomate-samples - Samples that demonstrate different usage patterns for Power Automate\n  powerva-samples - Samples that demonstrate different usage patterns for Power Virtual Agents All SharePoint specific repositories or services supported directly by Microsoft are located in the SharePoint GitHub organization\n\\\n  sp-dev-docs - Source for new SharePoint dev center documentation exposed from http://docs.microsoft.com/sharepoint/dev\n  sp-dev-provisioning-templates - Open-source templates used by the SharePoint Look Book site\n  sp-provisioning-service - Source code of the SharePoint look book site Classic PnP named repositories - older tooling\n  PnP-Tools - Tools and scripts targeted more for IT Pro\u0026rsquo;s and for on-premises for SP2013 and SP2016\n  PnP-Provisioning-Schema - PnP Provisioning engine schema repository Repositories in the GitHub Microsoft Search organization controlled by the PnP initiative\n  pnp-modern-search - Home of PnP Modern Search solutions, see more from the documentation Other related resources from GitHub\n  Office add-in Patterns and Practices in GitHub - Community contributions welcome!\n  Microsoft Graph GitHub organization\n  OfficeDev GitHub organization - Includes all Microsoft Teams samples from Microsoft\n  What\u0026rsquo;s supportability story around the community tooling and assets? Following statements apply across all of the community lead and contributed samples and solutions, including samples, core component(s) and solutions, like SharePoint Starter Kit, yo teams or PnP PowerShell. All Microsoft released SDKs and tools are supported based on the specific tool policies.\n PnP guidance and samples are created by Microsoft \u0026amp; by the Community PnP guidance and samples are maintained by Microsoft \u0026amp; community PnP uses supported and recommended techniques PnP is an open-source initiative by the community \u0026ndash; people who work on the initiative for the benefit of others, have their normal day job as well PnP is NOT a product and therefore it\u0026rsquo;s not supported by Premier Support or other official support channels PnP is supported in similar ways as other open source projects done by Microsoft with support from the community by the community There are numerous partners that utilize PnP within their solutions for customers. Support for this is provided by the Partner. When PnP material is used in deployments, we recommend being clear with your customer/deployment owner on the support model Please see the specifics on the supportability on the tool, SDK or component repository or download page.  Microsoft 365 PnP team model    In April 2020 we announced our new Microsoft 365 PnP team model and grew the MVP team quite significantly. PnP model exists for having more efficient engagement between Microsoft engineering and community members. Let\u0026rsquo;s build things together. Your contributions and feedback is always welcome! During August, we also crew the team with 5 new members. PnP Team coordinates and leads the different open-source and community efforts we execute in the Microsoft 365 platform. We welcome all community members to get involved on the community and open-source efforts. Your input do matter!\n New Microsoft 365 Patterns and Practices (PnP) team members \u0026ndash; November 2021 - Geetha Sivasailam (Artis Consulting) | @GSiVed, Natalie Pienkowska (Microsoft) | @NataliePienkow1, Derek Cash-Peterson (Sympraxis Consulting) | @spdcp, João J. Mendes (Valo) | @joaojmendes, Joel Rodrigues (Storm Technology) | @JoelFMRodrigues, Rick Van Rousselt (Advantive) | @RickVanRousselt, Stephan Bisser (Solvion) | @stephanbisser, Tetsuya Kawahara | @techan_k, and Thomas Gölles (Solvion) | @thomyg New Microsoft 365 Patterns and Practices (PnP) team members - May 2021 - Gautam Sheth (Valo) and Patrick Lamber (Experts Inside AG) New Microsoft 365 Patterns and Practices (PnP) team members - February 2021 - April Dunnam (Microsoft), Emily Mancini (Sympraxis Consulting) and Veronique Lengelle (CPS) New Microsoft 365 Patterns and Practices (PnP) team members - December 2020 - Luise Freese and Sébastien Levert  New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 - Albert-Jan Schot (BLIS Digital), Koen Zomers (Microsoft), Paul Bullock (CaPa Creative), Rabia Williams (Microsoft) and Yannick Plenevaux (PVX Solutions) Got feedback, suggestions or ideas? - Please let us know. Everything we do in this program is for your benefit. Feedback and ideas are more than welcome so that we can adjust the process for benefitting you even more.   Microsoft 365 PnP Recognition Program    We are excited to announce new community contributor program for all the active community members. Through this program you can get officially acknowledged with the a Credly badge around your work on our open-source and community channels. See more from\nhttps://aka.ms/m365pnp-recognition. Thank you for being part of this journey with us.\n⚙ Area-specific updates These are different areas which are closely involved on the community work across the PnP initiative. Some are lead and coordinated by engineering organizations, some are coordinated by the community and MVPs.\nMicrosoft Graph Toolkit    Microsoft Graph Toolkit is engineering lead initiative, which works closely with the community on the open-source areas. The Microsoft Graph Toolkit is a collection of reusable, framework-agnostic web components and helpers for accessing and working with Microsoft Graph. The components are fully functional right of out of the box, with built in providers that authenticate with and fetch data from Microsoft Graph.\n Latest version currently is 2.3 See the v2.3 announcement blog post for more details - Announcing a new Microsoft Teams authentication provider and file upload feature in the Microsoft Gr... mgt.dev - Microsoft Graph Toolkit Playground Getting started with Microsoft Graph Toolkit guidance video from developer community call by Beth Pan (Microsoft) Latest code and preview versions from https://aka.ms/mgt All the latest updates on the Microsoft Graph Toolkit is being presented in our bi-weekly Microsoft 365 Generic Dev community call, including the latest community contributors.  Microsoft 365 Community docs    Community docs model was announced in the April 2020 and it\u0026rsquo;s great to see the interest for community to help each other by providing new guidance on the non-dev areas. See more on the announcement from the SharePoint blog - Announcing the Microsoft 365 Community Docs. We do welcome contributions from the community - our objective is to build a valuable location for articles from Microsoft and community together.\n  Microsoft 365 Community Content at docs.microsoft.com Have ideas for articles or want to contribute yourself? - Get involved! Here are also some additional resources explaining the model more detailed.\n  YouTube - Introducing Microsoft 365 Community Docs\n  GitHub issue list with articles ideas\n  SharePoint Framework development samples    These are the updated SharePoint Framework samples which are available from the the different repositories.\n New sample react-find-parker by Adam Wójcik (Hitachi Energy) | @Adam25858782 to showcase gamification like \u0026ldquo;where is Wally\u0026rdquo; on a site New sample react-documents-links-accordion by João J. Mendes (Valo Solutions) | @joaojmendes that allows user create a accordion with documents links grouped by any column of document library. New sample react-star-ratings by Takashi Shinohara | @karamem0 that allows users to add star ratings to SharePoint new New sample react-emoji-ratings by Siddharth Vaghasia | @siddh_me that can collect user\u0026rsquo;s reactions using an emoji-based feedback for news/articles/post New sample react-graph-groupviewer by Zach Roberts | @ZachSPODev that allows users to search for groups in their tenant and allows them to view the details of the selected group as well as view a list of group members and export the list of members to a CSV file. New sample react-command-change-page-layouttype by Sudharsan Kesavanarayanan (NTT Ltd) | @sudharsank that provides a list view command button to change the modern page layout type New sample js-field-animated-progess by Ari Gunawan (DevStack) - @arigunawan3023 that shows an animated progress bar in the list view using SPFx extension field customizer. New sample react-application-my-flows-list by Adam Wójcik (Hitachi Energy) | @Adam25858782 that represents the user flow list New sample ImageCard-HybridWork-Checkin by Derek Cash-Peterson (Sympraxis Consulting) | @spdcp that provides option for employees to check-in in hybrid work environment about their preference of work place and self declaration related to Covid. Data is managed in a SharePoint list. New sample ImageCard-TodaysLunch by Luis Manez (ClearPeople Ltd) | @luismanez that renders information about Today´s lunch. Data is managed in a SharePoint list with a list item per day of the week Other adjustments to numerous samples by our awesome community members!  How to find what\u0026rsquo;s relevant for you? Take advantage of our SharePoint Framework web part and extension sample galleries - includes also solutions which work in Microsoft Teams Web Part sample gallery - http://aka.ms/spfx-webparts Extensions sample gallery - http://aka.ms/spfx-extensions Viva Connections Adaptive Card samples - http://aka.ms/spfx-aces Microsoft Teams samples build with SharePoint Framework - https://github.com/pnp/spfx-teams - These will be relocated soon  Microsoft Teams community samples    These are samples which have been contributed on the community samples since last summary. We do welcome all Microsoft Teams samples to this gallery. They can be implemented using in any technology.\n New sample tab-sso-graph-upload-as-pdf by Markus Möller (Avanade) | @Moeller2_0 to enable users to upload files via drag n drop and convert the file to a PDF using the current channel as a folder name If you are interested on Microsoft Teams samples, we have just released also new Microsoft Teams sample gallery. Contributions to Microsoft Teams samples is also more than welcome. This gallery already surfaces all Microsoft samples, Microsoft Teams app templates and community samples.  Power Platform samples    There was numerous smaller updates on the different Power Platforms samples. See more details on available samples from following location:\n\\\n Power Platform sample gallery - https://aka.ms/powerplatform-samples If you have any existing samples which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative. Here to help.  Microsoft 365 Script Samples    \nWe have released new Microsoft 365 Script Sample gallery within past month. We welcome all scripts on Microsoft 365 automation to this centralized repository, targeted to help to manage and automate day-to-day operations. Here are the latest updates on the Script Samples\n  Updated Clean Up Unwanted Site Columns from Content Types and Lists/Libraries by Adam Wójcik (Hitachi Energy) | @Adam25858782\n  New Clone a Microsoft Team by Rodrigo Pinto (Storm Technology) | @ScoutmanPt\n  Updated Create list and libraries from CSV file by Valeras Narbutas (Macaw) | @ValerasNarbutas\n  New SharePoint Modern Page URL Report by Paul Bullock (CPS) | @pkbullock\n  Updated Export all List and Libraries with Item count and Permission in CSV by Adam Wójcik (Hitachi Energy) | @Adam25858782\n  New Flow run day summary by Adam Wójcik (Hitachi Energy) | @Adam25858782\n  New Create and add list template to SharePoint site with content types,site columns and list views by Reshmee Auckloo | @reshmeeauckloo\n  New List out all Azure AD Apps along with their KeyCredentials and PasswordCredentials along with Expira... by Srinivas Varukala (Microsoft) | @svarukala\n  Updated Add a tenant theme to SharePoint Online by Adam Wójcik (Hitachi Energy) | @Adam25858782\n  Updated Read SharePoint List Items Using CAML Query by Adam Wójcik (Hitachi Energy) | @Adam25858782\n  New Force Team Files Tab Provision by Rodrigo Pinto (Storm Technology) | @ScoutmanPt\n  New Teams Full Report by Rodrigo Pinto (Storm Technology) | @ScoutmanPt\n  New Create multiple document libraries using custom list template by Reshmee Auckloo | @reshmeeauckloo\n  New Run A Seach Query And Export To CSV by Jim Love (ID Live Ltd) | @jimmywim\n  Updated Create and add site design to SharePoint site with site columns, content type by Valeras Narbutas (Macaw) | @ValerasNarbutas\n  Updated Export CSV To SharePoint List Data by Adam Wójcik (Hitachi Energy) | @Adam25858782\n  Updated Add a document library web part to a page (and only show a specific folder) by Adam Wójcik (Hitachi Energy) | @Adam25858782\n  New SharePoint Modern Page Publishing Report by Paul Bullock (CPS) | @pkbullock\n  New Adding a new modern calendar view to a SharePoint list by Leon Armston (Intelogy) | @LeonArmston\n  Updated Export all flows in environment by Leon Armston (Intelogy) | @LeonArmston\n  Updated Report of Private Teams channels to Excel by Adam Wójcik (Hitachi Energy) | @Adam25858782 If you have any existing scripts which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative.   Microsoft 365 Script Samples - https://aka.ms/script-samples Independent Connectors Program   Microsoft Power Platform comes with a huge variety of already built-in connectors and also provides you with the ability of creating your own custom connectors. As of July 2021, anyone can submit the connectors they built to Microsoft Power Platform so that they can be used by others as well. Previously, only API owners could publish their connectors. The Independent Publisher Connector Program\u0026rsquo;s mission is to bring the best together: the best people, connecting great ideas to data, apps, and flows. We want to make it easier for connector developers to collaborate on connectors. For more information, you can watch this video on Publish a connector to the Publish a connector to the Power Platform with Independent Publisher Connector Program gram and check out Microsoft Power Platform Connectors on GitHub These are the latest connectors:   Accuweather - Ahmad Najjar (Infoworker) | @ahmadn82\n  Bronnoysundregistrene - Ahmad Najjar (Infoworker) | @ahmadn82\n  OpenCage Geocoding - Ahmad Najjar (Infoworker) | @ahmadn82\n  Yelp - Ahmad Najjar (Infoworker) | @ahmadn82\n  ORB Intelligence - Ankita Singh and Aaryan Arora\n  Notion - Chandra Sekhar \u0026amp; Harshini Varma (Capgemini) | @HarshiniVarmaa\n  Spotify - Daniel Laskewitz (Sogeti) | @laskewitz\n  Toggl Plan - Daniel Laskewitz (Sogeti) | @laskewitz\n  Discord - Daniel Laskewitz (Sogeti) | @ laskewitz \u0026amp; Michal Guzowski (Developico) | @abcguzowski\n  ClickUp Team Manager \u0026ndash; Duke DeVan (Hitachi Solutions) | @AyoSurice\n  Dexcom - Joe Unwin (Hitachi Solutions) | @Flow_Joe\n  Weather Forecast - Haimantika Mitra (Microsoft) | @HaimantikaM\n  Carbon Intensity \u0026ndash; Hasan Unlu\n  LibreBor - Mario Trueba (KPMG) | @ mariotrueba365 \u0026amp; Marco Amoedo (KPMG)| @marcoamoedo\n  CQC - Martyn Lesbirel (Dynamiti)\n  UK Government Bank Holidays - Martyn Lesbirel (Dynamiti) |\n  What3Words - Matt Beard (Data8) | @mattybeard\n  FreeAgent - Nirmal| @nirmal_kumar\n  ITGlue - Nirmal | @nirmal_kumar\n  Jira Search- Paul Culmsee (Seven Sigma) | @paulculmsee\n  Coinbase \u0026ndash; Roy Paar (Microsoft)\n  Microsoft D365CE v9 OnPrem - Roy Paar (Microsoft)\n  New York Times - Roy Paar (Microsoft)\n  The Weather Channel - Roy Paar (Microsoft)\n  GoQR - Rui Santos (Microsoft)\n  myStrom - Tomasz Poszytek| @TomaszPoszytek\n  Clearbit - Troy Taylor (Hitachi Solutions) | @troystaylor\n  EONET by NASA - Troy Taylor (Hitachi Solutions) | @troystaylor\n  Etsy - Troy Taylor (Hitachi Solutions) | @troystaylor\n  Federal Reserve Economic Data - Troy Taylor (Hitachi Solutions) | @troystaylor\n  Hashify - Troy Taylor (Hitachi Solutions) | @troystaylor\n  HubSpot CMS - Troy Taylor (Hitachi Solutions) | @troystaylor\n  HubSpot CRM - Troy Taylor (Hitachi Solutions) | @troystaylor\n  HubSpot Marketing - Troy Taylor (Hitachi Solutions) | @troystaylor\n  Launch Library 2 - Troy Taylor (Hitachi Solutions) | @troystaylor\n  Loripsum - Troy Taylor (Hitachi Solutions) | @troystaylor\n  Mailbox Validator - Troy Taylor (Hitachi Solutions) | @troystaylor\n  Secure Code Warrior - Troy Taylor (Hitachi Solutions) | @troystaylor\n  SpaceX - Troy Taylor (Hitachi Solutions) | @troystaylor\n  Unix Timestamp- Troy Taylor (Hitachi Solutions) | @troystaylor\n  Airtable \u0026ndash; Woong Choi (Seven Sigma)\n  Sharing is Caring initiative    The \u0026ldquo;Sharing Is Caring\u0026rdquo; imitative is targeted for learning the basics around making changes in Microsoft Docs, in GitHub, submitting pull requests to the PnP repositories and in GitHub in general. Take advantage of this instructor lead training for learning how to contribute to docs or to open-source solutions. Everyone is welcome to learn how to get started on contributing to open-source docs or code!\n See more from the guidance documentation - including all upcoming instructor lead sessions which you can participate!  ✍ Different Microsoft 365 related open-source initiatives build together with the community See exact details on the latest updates from the specific open-source project release notes. You can also follow up on the project updates from our community calls. There are numerous active projects which are releasing new versions with the community even on weekly basis. Get involved!\n Microsoft Look Book - Discover the modern experiences you can build with SharePoint in Microsoft 365. Look book provides design examples for SharePoint Online which can be automatically provisioned to any tenant in the world. See more from https://lookbook.microsoft.com. This service is also provided as open-source solution sample from GitHub. yo teams - Open-source Yeoman generator for Microsoft Teams extensibility. Supports creation of bots, messaging extensions, tabs (with SSO), connectors and outgoing Webhooks. See more from https://aka.ms/yoteams. PnP Framework - .NET Standard 2.0 SDK containing the classic PnP Sites Core features for SharePoint Online. More around this package from GitHub. PnP Core SDK - The PnP Core SDK is an SDK designed to work for Microsoft 365 with Graph API first approach. It provides a unified object model for working with SharePoint Online and Teams which is agnostic to the underlying API\u0026rsquo;s being called. See more around the SDK from documentation. PnP PowerShell - PnP PowerShell is a .NET Core 3.1 / .NET Framework 4.6.1 based PowerShell Module providing over 400 cmdlets that work with Microsoft 365 environments and more specifically SharePoint Online and Microsoft Teams. See more details from documentation. Reusable SharePoint Framework controls - Reusable controls for SharePoint Framework web part and extension development. Separate projects for React content controls and Property Pane controls for web parts. These controls are using Office UI Fabric React controls under the covers and they are SharePoint aware to increase the productivity of developers. Office 365 CLI - Using the Office 365 CLI, you can manage your Microsoft Office 365 tenant and SharePoint Framework projects on any platform. See release notes for the latest updates. PnPJs - PnPJs encapsulates SharePoint REST APIs and provides a fluent and easily usable interface for querying data from SharePoint sites. It\u0026rsquo;s a replacement of already deprecated pnp-js-core library. See changelog for the latest updates. PnP Provisioning Engine and PnP CSOM Core - PnP provisioning engine is part of the PnP CSOM extension. They encapsulate complex business driven operations behind easily usable API surface, which extends out-of-the-box CSOM NuGet packages. See changelog for the latest updates. PnP PowerShell - PnP PowerShell cmdlets are open-source complement for the SharePoint Online cmdlets. There are more than 300 different cmdlets to use and you can use them to manage tenant settings or to manipulate actual SharePoint sites. They See changelog for the latest updates. PnP Modern Search solution - The PnP \u0026lsquo;Modern Search\u0026rsquo; solution is a set of SharePoint Online modern Web Parts allowing SharePoint super users, webmasters and developers to create highly flexible and personalized search based experiences in minutes. See more details on the different supported capabilities from https://aka.ms/pnp-search. Modernization tooling - All tools and guidance on helping you to transform you SharePoint to modern experiences from http://aka.ms/sppnp-modernize. SharePoint Starter Kit v2 - Building modern experiences with Microsoft Teams flavors for SharePoint Online and SharePoint 2019 - reference solution in GitHub. List formatting definitions - Community contributed samples around the column and view formatting in GitHub. Site Designs and Site Scripts - Community contributed samples around SharePoint Site Designs and Site Scripts in GitHub. **DevOps tooling and scripts **- Community contributed scripts and tooling automation around DevOps topics (CI/CD) in GitHub. Teams provisioning solution - Set of open-source Azure Functions for Microsoft Teams provisioning. See more details from GitHub.  ✍ Documentation updates Please see all the Microsoft 365 development documentation updates from the related documentation sets and repositories as listed below:\n Microsoft Teams platform documentation - Microsoft Docs | GitHub SharePoint Developer documentation - Microsoft Docs | GitHub Microsoft Graph documentation - Microsoft Docs | GitHub Office add-in documentation - Microsoft Docs | GitHub  Microsoft 365 Developer and Microsoft 365 Community YouTube video channels You can find all Microsoft 365 related videos on our YouTube Channel at http://aka.ms/m365pnp/videos or at Microsoft 365 Dev. These channels contains already a significant amount of detailed training material, demo videos, and community call recordings. Here are the new Microsoft demo or guidance videos released since the last monthly summary:\n Building custom search layout experiences in SharePoint with Microsoft Search - Jyoti Pal (Microsoft) Getting started on using Microsoft Viva Connections in your tenant - Tejas Mehta (Microsoft) | @ tpmehta Introduction to Microsoft Viva Connections extensibility - Ed Averett (Microsoft) | @ed_Averett Azure AD Verifiable Credentials - Request API \u0026ndash; October 2021 - Matthijs Hoekstra (Microsoft) | @mahoekst and Rohit Gulati (Microsoft) Feedback bot using the new Adaptive Card capabilities - Rabia Williams (Microsoft) | rabwill Office Add-ins - Getting Started - Hello World code sample - David Chesnut (Microsoft) | @davidchesnut Latest on Microsoft Graph Data Connect - Nik Charlebois (Microsoft) | @NikCharlebois Introduction to Universal Print - Rachelle Cheung (Microsoft) SPFx Design Patterns \u0026ndash; Property Panes - Hugo Bernier (Microsoft) | @bernierh Getting started with hub associations in SharePoint - building the hub of hubs - Cathy Dew (Microsoft) | @catpaint Progressive Web Apps and Beyond: Supercharging OneDrive \u0026amp; SharePoint web apps - Andrey Esipov (Microsoft) Configuration-as-Code for Microsoft 365 with Microsoft365DSC - Nik Charlebois (Microsoft) | @NikCharlebois Microsoft 365 Certification: How to get certified - Orion O\u0026rsquo;Malley (Microsoft) Single Sign On (SSO) in Microsoft Teams tabs with Azure Active Directory - Rabia Williams (Microsoft) | rabwill and Bob German (Microsoft) | @Bob1German Get started building Microsoft Teams apps | Learn Together - Rabia Williams (Microsoft) | rabwill and Bob German (Microsoft) | @Bob1German Build real-time collaborative apps with Azure Fluid Relay - Ahmed Bisht (Microsoft)  Introducing New Instant Sandbox for Microsoft 365 Developer Program  Ignite 2021: What\u0026rsquo;s new in Microsoft Outlook  Synchronize your hybrid work with Microsoft Teams + Atlassian  Learn how to extend Microsoft Viva Connections - Rabia Williams (Microsoft) | rabwill Demo - Access specific files and download files with Microsoft Graph - Andrew Connell ( Voitanos) | @andrewconnell Microsoft Graph and Microsoft identity - Andrew Connell ( Voitanos) | @andrewconnell Create, update, and delete users with Microsoft Graph - Andrew Connell ( Voitanos) | @andrewconnell Demo - Create ASP.NET MVC web app and register Azure AD app - Andrew Connell ( Voitanos) | @andrewconnell Build ASP.NET MVC web applications with the Microsoft Graph .NET SDK - Andrew Connell ( Voitanos) | @andrewconnell Work with file relationships and trends in OneDrive - Andrew Connell ( Voitanos) | @andrewconnell Demo - Create Azure AD app to work with users using Microsoft Graph - Andrew Connell ( Voitanos) | @andrewconnell Demo - Create, update, and delete users with the Microsoft Graph - Andrew Connell ( Voitanos) | @andrewconnell Demo - Incorporate the Microsoft Authentication Library into ASP.NET MVC web apps - Andrew Connell ( Voitanos) | @andrewconnell Incorporate Microsoft Graph into ASP.NET MVC web apps - Andrew Connell ( Voitanos) | @andrewconnell Access Files with Microsoft Graph - Andrew Connell ( Voitanos) | @andrewconnell Demo - Create .NET console app to display all the user\u0026rsquo;s files with Microsoft Graph - Andrew Connell ( Voitanos) | @andrewconnell Access User Data from Microsoft Graph - Andrew Connell ( Voitanos) | @andrewconnell Integrate apps with OneDrive  - Andrew Connell ( Voitanos) | @andrewconnell Demo - Upload small and large files to OneDrive - Andrew Connell ( Voitanos) | @andrewconnell Demo - Display the currently signed in user\u0026rsquo;s details - Andrew Connell ( Voitanos) | @andrewconnell Configure a built-in tab with Microsoft Graph - Andrew Connell ( Voitanos) | @andrewconnell User profile photos and related users - Andrew Connell ( Voitanos) | @andrewconnell Demo - User profile photos and related users - Andrew Connell ( Voitanos) | @andrewconnell Task-oriented interactions in Microsoft Teams with messaging extensions with action commands - Andrew Connell ( Voitanos) | @andrewconnell Link unfurling message extensions for Microsoft Teams - Andrew Connell ( Voitanos) | @andrewconnell Demo - Obtain an access token to call Microsoft Graph - Andrew Connell ( Voitanos) | @andrewconnell Demo - Code a bot for Microsoft Teams that supports SSO - Andrew Connell ( Voitanos) | @andrewconnell Demo - Load and test the Microsoft Teams SSO bot - Andrew Connell ( Voitanos) | @andrewconnell Demo - Using adaptive cards and deep links in task modules - Andrew Connell ( Voitanos) | @andrewconnell Learn Together: Developing Real-Time Collaborative Apps with Azure, M365, Power Platform, and GitHub - April Dunnam (Microsoft) | @aprildunnam and Dan Wahlin (Microsoft) | @DanWahlin Community demos as following:  Customizing Microsoft Lists best practices with MVP, Norm Young - YouTube - Norm Young (Unlimited Viz) | @Stormin_30 Updates on Independent Publisher Connectors for Power Platform \u0026amp; UK Bank Holidays Connector Demo - NataliePienkow1 (Microsoft) | @NataliePienkow1 and Martyn Lesbirel (Dynamiti)  Surface an embedded web chat that can communicate with users in a Teams Channel - Lee Ford (Symity) | @Lee_ford Teams Toolkit v2 with Blazor - Teams Leaderboard sample \u0026ndash; Measure Channel engagement - Thomas Gölles (Solvion) | @thomy M365 Maturity Model - October 2021 - Marc Anderson, Sympraxis Consulting | @sympmarc Microsoft Teams Meeting App \u0026ndash; Record and playback attendee names - Markus Möller (Avanade) | @Moeller2_0 Introduction to the new PnP Transformation Framework - Bert Jansen (Microsoft) | @O365Bert and Paolo Pialorsi (PiaSys.com) | @PaoloPia At a Glance Web Part and Viva Adaptive Card Extension - Anoop Tatti (Content+Cloud) | @anooptells Share to Teams \u0026ndash; SharePoint Framework Command Set Extensions - Kunj Sangani (Cognizant) | @sanganikun How to get Microsoft Certified in the Power Platform - Sheryl Netley | @SherylNetley and Jese Navaranjan (Avanade) | @JeseNav PokéBubbles Game created with Power Apps - Michelle Wong | @MichelleWongNL Introduction on building and using multi-tenant Azure AD APIs in Viva Connections (series 1/4) - Paolo Pialorsi (PiaSys.com) | @PaoloPia Calling custom Azure AD secured APIs from Viva Connections ACEs (series 2/4) Paolo Pialorsi (PiaSys.com) | @PaoloPia Implementing custom Azure AD secured APIs for Viva Connections ACEs (series 3/4) - Paolo Pialorsi (PiaSys.com) | @PaoloPia Registering and securing custom Azure AD secured APIs for Viva Connection ACEs (series 4/4) - Paolo Pialorsi (PiaSys.com) | @PaoloPia FactSet + Adaptive Cards - Matt Pineau (FactSet) and Andrew Curtice (FactSet) Updates on Independent Publisher Connectors \u0026amp; Care Quality Commissions Connector Demo - Natalie Pienkowska (Microsoft) | @NataliePienkow1 and Martyn Lesbirel (Dynamiti)  Key contributors to the November2021 update Here\u0026rsquo;s the list of active contributors (in alphabetical order) since last release details in GitHub repositories or community channels. PnP is really about building tooling and knowledge together with the community for the community, so your contributions are highly valued across the Microsoft 365 customers, partners and obviously also at Microsoft. Thank you for your assistance and contributions on behalf of the community. You are truly making a difference! If we missed someone, please let us know.\n Abderahman Moujahid - Abderahman88 Adam Wójcik (Hitachi Energy) | @Adam2585878 Ahmad Najjar (Infoworker) | @ahmadn82 [Aimery Thomas]{.underline} | @aimery_thomas Albert-Jan Schot (BLIS Digital) | @appieschot [Alex Moumne]{.underline} (Fluidmaster) | @afhmoumne Alexander Ernon (Amplexor) Alexander Møller [Alistair Pugin]{.underline} (Tangent Solutions) | @alistairpugin Alison Collins Anand Ragav (Ericsson) | @anandVragav [Andre]{.underline} | @theq2020 André Lage (Datalynx AG) - @aaclage Andrew Benson (InElec) - @ViewPorter [Andrew Burns]{.underline} (AmSty) | @SharePointRox Andrew Connell (Voitanos) | @andrewconnell Andrew Curtice (FactSet) Andrew Koltyakov (ARVO Systems) | @andrewkoltyakov Andy Dawson [Andy Harmon]{.underline} (Oldham Metropolitan Borough Council) |@andygharmon Anna Fritsch-Weninger [Anna Sanfilippo]{.underline} (ATNS) | @scumezza Annie Torres (Coppin State University) Anoop Tatti (Content+Cloud) | @anooptells [Anthony Escobedo]{.underline} (Concurrency Inc) | @anton3sco [Anthony White]{.underline} | @candidatekey [Antti Pajunen]{.underline} (Forward Forever) | @anttipajunen Anup Khanal Anthony Alamartine (Exakis-Nelite) [Apoorva Sharma]{.underline} (Avanade) | @apoorvaconsult Ari Gunawan (DevStack) - @arigunawan3023 [Aric Bost]{.underline} (North Carolina Housing Finance Agency) | @1CyberState Arjun Menon (Tata Consulting Services) | @arjunumenon [Asad Refai]{.underline} (Intelogy) | @asadrefai [Aslan Imanalin]{.underline} (GDC ICL Services) Bart-Jan Dekker Beau Cameron (Aerie Consulting) | @Beau__Cameron [Bharath Arja]{.underline} | @bharath_arja Bob Morris (ThreeWill) [Brett Olson]{.underline} (C.H. Robinson) Carmen Ysewijn (Qubix) | @carmenysewijn [Chad Austerberry]{.underline} (HYDAC) Chandani Prajapati (Rapid Circle) | @Chandani_SPD [Charles Ndiaye]{.underline} (Netexio, A2DG) | @manusquall Chris Bao (aiib) Chris Kent (DMI) | @theChrisKent Chris OConnor | @GrumpyWookie Chris Sparrow (PA Consulting) Christian Zuellig (Monday Coffee AG) | @ChristianZuell1 [Christine Zeravica]{.underline} Christophe Humbert | @Path2SharePoint [Christopher Graves]{.underline} (Arvato) | @Christo48927551 [Chuck Piotrowski]{.underline} (PIOT) | @chuckpiot Colette Effel (Metabo HPT) Collin Argo (Insiten) [Dan Myhre]{.underline} (Baird) | @danmyhre [Daniel George]{.underline} | @Dgeorge318 Daniel Huber | @danielhu0611 Daniel Laskewitz (Sogeti) | @laskewitz [Daniel Westerdale]{.underline} (Westerdale Solutions Ltd) | @westerdaled [David Fulcher]{.underline} | @rdfgoalie David Warner II (Catapult) | @DavidWarnerII Derek Cash-Peterson (Sympraxis Consulting) | @spdcp Dinos Konstantinou [Dipen Shah]{.underline} (Rapid Circle) | @Dips_365 [Don Kirkham]{.underline} | @DonKirkham Duke DeVan (Hitachi Solutions) | @AyoSurice [Edris Kakembo]{.underline} (WFP) | @kaxeddie [Ellis Karim]{.underline} (University of Cambridge Institute for Sustainability Leadership) | @MrCaptainKarim Elio Struyf (Struyf Consulting) | @eliostruyf Emily Mancini (Sympraxis Consulting) | @EEMancini [Eric Mases]{.underline} (Genmab A/S) | @Mases Eric Overfield (PixelMill) | @EricOverfield [Eric Vaughn]{.underline} (The Verrecia Group) erkanch Erwin van Hunen (Valo Intranet) | @erwinvanhunen  Faizal Khatri Frank Cornu - @FranckCornu fdafadf Fredrik Thorild (Sogeti) | @taxonomythorild Ganesh Sanap | @ganeshsanap20 [Garrick]{.underline} | @Kod3m0ng3 Gautam Sheth (Valo Solutions) | @gautamdsheth gdk-max [Geert de Kooter]{.underline} (Learnia) | @gdekooter Geetha Sivasailam (Artis Consulting) | @GSiVed [Gennady]{.underline} (AM Bell Solutions) [Gerard Simpson]{.underline} (SSE Renewables) | @powerfanaddict Giacomo Pozzoni (Fellowmind) | @PozzoniGiacomo Guillermo A. Irahola Harshini Varma (Capgemini) | @HarshiniVarmaa Hasan Unlu [Henrik Yllemo]{.underline} (Ylltec Sweden AB) | @yllemo [Hoang Phuong]{.underline} (KDDI Vietnam) [Jaco Kleynhans]{.underline} (NINJACO) | @Bettasnack Jake Stanger | @cakestanger Jarbas Horst (Valo Solutions) | @devjhorst Jason Stuart  [Jeffrey Schmitt]{.underline} [Jennifer Erzen]{.underline} (SUNY Upstate Medical University) | @jennifererzen [Jennifer Kimball]{.underline} [Jenny Bruce]{.underline} | @JenniferBruce13 [Jeremy Hancock]{.underline} | @ozippy Jese Navaranjan (Avanade) | @JeseNav Jim Love (ID Live Ltd) | @jimmywim João J. Mendes (Valo Solutions) | @joaojmendes Joakim Högberg (Bravero) | @joakimhogberg Joe Unwin (Hitachi Solutions) | @Flow_Joe [Joe\u0026rsquo;l Brenny]{.underline} | @jbrenny Joel Rodrigues (Storm Technology) | @JoelFMRodrigues Joseph Velliah | @JosephVelliah Jouni Pohjolainen (Valo Solutions) Julie Turner (Sympraxis Consulting) | @jfj1997 Justin [Katie Krushinskie]{.underline} (Dell) [Kerry Lambert]{.underline} (NI) | @kazoogal23 Kinga Kunj Sangani (Cognizant) | @sanganikun [Lance Yoder]{.underline} (Cerner)| @lyoder Lars Höög Laura Kokkarinen (Sulava) | @LauraKokkarinen [Laurie Danison]{.underline} | @ldanison Lee Ford (Symity) | @Lee_ford Leon Armston (Intelogy) | @LeonArmston [Lindsay Shelton]{.underline} (Stowers Institute for Medical Research) | @lshelton_tech Louis Pineau Luise Freese (M365Princess) | @LuiseFreese Luis Manez (ClearPeople Ltd) | @luismanez Magnus Ellinge (Consid AB) [Manjunath Siddappa]{.underline} | @manjunathsiddappa  [Manjunath Puttaswamy]{.underline} (Momentive Performance Materials India Private Limited) | @ManjunathPutta3 [Mantas Umbrasas]{.underline} (UAB Macaw)| @umbrasas_mantas Marc Lafferty (AmerisourceBergen) [Marcis]{.underline} (SIA INTEGRIS)| @marcisl Marc Anderson, Sympraxis Consulting | @sympmarc [Marcus Cadena]{.underline} | @marcusc83 Markus Möller (Avanade) | @Moeller2_0 Martyn Lesbirel (Dynamiti) Mario Trueba (KPMG) | @mariotrueba365 Matt Beard (Data8) | @mattybeard Matt Pineau (FactSet) Michaël Maillot (OnePoint) | @michael_maillot Michal Guzowski (Developico) | @abcguzowski Michel Mendes (Storm Technology) | @michelcarlo Michelle Wong | @MichelleWongNL [Mike Dumka]{.underline} (Habanero Consulting Group) | @mikedumka Mike Markett (DFC) Mohammed Amer (Atea Global Services Ltd.) | @Mohammad3mer Monalisa Baltatescu [Nabil Cherchali]{.underline} (OpenText) | @ncherchali Nanddeep Nachan | @NanddeepNachan [Natalie Harzic]{.underline} | @harzicn Nicole Fleming (Sherwin Williams) [Nikki Chapple]{.underline} (NTT Cloud Communications) | @chapplenikki Nirmal | @nirmal_kumar [Nizar Grindi]{.underline} (Avanade) | @nizar_grindi Norm Young (Unlimited Viz) | @Stormin_30 [Omar Stewart]{.underline} (Deloitte) | @OmarStewe [Oscar Fuentes]{.underline} (Conviva Care Solutions, LLC.) | @oappdev Patrick Lamber (Expertsinside AG) | @patricklamber Paolo Pialorsi (PiaSys.com) | @PaoloPia Patrik Hellgren (Sherpas Group) | @patrikhellgren Paul Culmsee (Seven Sigma) | @paulculmsee [Paul Lindsay]{.underline} (Montana State University) | @MSU_UITMarCom Paul Bullock (CPS) | @pkbullock Paul Schaeflein (AddIn365) - @paulschaeflein [Pete Simpkinsu]{.underline} (Fluid Interiors) | @simpkinspete [Peter Chirwa]{.underline} (Yellow solar Africa) | @Peter Peter Paul Kirschner (Cubido Business Solutions GmbH) | @petkir_at [Phil McNiven]{.underline} Pär Aronsson (Sherpas Group AB) [Rachel Spannuth]{.underline} (Thermo Fisher Scientific) | @racheloflight [Ralph Rivas]{.underline} (Sogeti) | @bigpix2000 [Reidar Husmo]{.underline} (PointTaken) | @reidarhusmo Reshmee Auckloo | @reshmeeauckloo Rick Van Rousselt (Advantive) | @RickVanRousselt Rob Bell (Kizan technologies) Rodrigo Pinto (Storm Technology) | @ScoutmanPt [Rocio Holub]{.underline} (DAI) [Roy Wizeman]{.underline} (AudioCodes) [Russell Gove]{.underline} (tronox)| @russgove [Ryan Jordan]{.underline} (City of Dallas) | @rj0435 Sabrina Faragoza (Cognizant\u0026rsquo;s Microsoft Business Group) Samuele Furnari (NTT DATA Italia)  [Sandra Macaulay Robinson]{.underline} (Meridian Design Studio) | @AgileChef Sean Garvin [Seb Matthews]{.underline} (ProvisionPoint Ltd ) | @sebmatthews [Shane Peters]{.underline} (BT) [Sharon Weaver]{.underline} (Smarter Consulting) | @sharoneweaver [Shaun Jennings]{.underline} | @Goldenfir Sheryl Netley | @SherylNetley Siddharth Vaghasia | @siddh_me [Simon Doy]{.underline} (iThink 365) | @simondoy [Simon Hudson]{.underline} (Novia Works) | @simonjhudson [Simon Thompson]{.underline} (Experience Applied) | @Thompsonsimon Smita Nachan - @SmitaNachan Stefan Bauer (n8d) | @StfBauer Stephan Bisser (Solvion) | @stephanbisser Sudharsan Kesavanarayanan (NTT Ltd) | @sudharsank Takashi Shinohara | @karamem0 Tammy Dupuy (CSULB) Tetsuya Kawahara | @techan_k Theresa DeMichiei - tdemichieiSCI Thomas Conway Thomas Daly (SoHo Dragon) | @_tomdaly_ Thomas Gölles (Solvion) | @thomyg [Tim Balk]{.underline} (Wellmark)| @tlbalk Todd Baginski (Canviz) - @toddbaginski [Todd Klindt]{.underline} (Sympraxis Consulting) | @toddklindt Tomasz Poszytek | @TomaszPoszytek [Tony Derricott]{.underline} (BYUI) | @computx Tomi Tavela (Visma Solutions) | @tavikukko Troy Taylor (Hitachi Solutions) | @troystaylor Valeras Narbutas (Macaw) | @ValerasNarbutas [Varun]{.underline} (MVA)| @varunms365 Velin Georgiev (Pramerica) | @velingeorgiev Veronique Lengelle (CPS) | @veronicageek Vijay Sisodia (Accenture) - @ec0321 Vipul Kelkar (Rapid Circle) | @vipulkelkar [Wout Kolkman]{.underline} [Woong Choi (Seven Sigma)]{.underline} [Yaser]{.underline} Yannick Plenevaux (PVX Solutions) | @yp_code [Yuxiang]{.underline} (McMaster University) | @guan_yuxiang [Yves Habersaat]{.underline} | @yhabersaat Zach Roberts | @ZachSPODev zylantha Companies: Here\u0026rsquo;s the companies, which provided support the community initiative for this month by allowing their employees working for the benefit of others in the community. There were also people who contributed from other companies during last month, but we did not get their logos and approval to show them in time for these communications. If you still want your logo for this month\u0026rsquo;s release, please let us know and share the logo with us. Thx.    Addin365 Arvo Systems BLIS Digital Canviz Solutions Catapult Systems CPS cubido business solutions GmbH Content+Cloud devstack.ds DMI Fellowmind iThink 365 MondayCoffee N8D NTT Digital Business Solutions onepoint Piasys PixelMill Pramerica PVX Solutions Qubix Rapid Circle Sherpas SoHo Dragon Solvion Sogeti Storm Technology Struyf Consulting Sulava Sympraxis Consulting ThreeWill Valo Voitanos\n\\  Microsoft people: Here\u0026rsquo;s the list of Microsoft people who have been closely involved with the PnP work during last month.\n Aakash Bhardwaj (Microsoft) | @aakash_316 Alex Terentiev | @alexaterentiev Aline Tognini - alinefmr Allen Snow - @asnow003 Andrey Esipov (Microsoft) April Dunnam (Microsoft) | @aprildunnam [Arijit Mondal]{.underline} (Microsoft) Ayca Bas - @aycabs Bert Jansen (Microsoft) | @O365Bert Beth Pan - @beth_panx Beverly Kim - bvandaal Bob German (Microsoft) | @Bob1German Brian Jackett (Microsoft) | @BrianTJackett Bryan Petersen - petey121175 Cathy Dew (Microsoft) | @catpaint Charles Sterling - @chass Dan Wahlin | @DanWahlin David Chesnut (Microsoft) | @davidchesnut Doğan Erişen - derisen Dragan Panjkov | @panjkov Ed Averett | @Ed_Averett Elizabeth Samuel - ElizabethSamuel-MSFT Garry Trinder | @garrytrinder Haimantika Mitra (Microsoft) | @HaimantikaM Holger Lutz - HolgerLutz Hugo Bernier (Microsoft) | @bernier James Eccles - jameseccles [Jasmine Hoegh]{.underline} (Microsoft) | @sbjishu Jason Johnston - jasonjoh John Nguyen - johnguy0 Jos Verlinde - Josverl Jyoti Pal (Microsoft) Kevin Coughlin - @kevintcoughlin Keyur Patel - keyur32 Koen Zomers | @koenzomers Holland Kaviani - Holland-ODSP Laura Graham - Lauragra Linda Lu Cannon - lindalu-MSFT Loki Meyburg - @lokimeyburg Luca Bandinelli - lucaband Matthijs Hoekstra | @mahoekst Mikael Svenson | @mikaelsvenson Natalie Pienkowska | @NataliePienkow1 Natalie Pienkowska - NataliePienkow1 Nik Charlebois (Microsoft) | @NikCharlebois Nicolas Vogt - vogtn Nikola Metulev - @metulev Orion O\u0026rsquo;Malley (Microsoft) [Pam Green]{.underline} (Microsoft) | @contextuallib Pat Miller - @PatMill_MSFT Patrick Rodgers | @mediocrebowler Rabia Williams (Microsoft) | @williamsrabia Rick Kirkham | Rick-Kirkham Roy Paar Rui Santos  Sam Larson | salarson Shane Weaver | shweaver-MSFT  Shreyansh Agrawal (Microsoft) Sébastien Levert | @sebastienlevert Srinivas Varukala (Microsoft) | @svarukala Steven Jia | Steven-Jia Tejas Mehta | @tpmehta Tom Resing | @resing Tomomi Imura | @girlie_mac Vesa Juvonen | @vesajuvonen Wajeed Shaikh | Wajeed-msft Waldek Mastykarz | @waldekm Wictor Wilen | @wictor Vincent Biret (Microsoft) | @baywet   MVP Community team MVP Community team (PnP Team) manages the PnP community work in the GitHub and also coordinates different open-source projects around Microsoft 365 topics. PnP Team members have a significant impact on driving adoption of Microsoft 365 topics. They have shown their commitment to the open-source and community-driven work by constantly contributing to the benefit of the others in the community. Thank you for all that you do!\n Albert-Jan Schot (BLIS Digital) | @appieschot Andrew Connell (Voitanos) | @andrewconnell Andrew Koltyakov (ARVO Systems) | @andrewkoltyakov Beau Cameron (Aerie Consulting) | @Beau__Cameron Chris Kent (DMI) | @theChrisKent David Warner II (Catapult) | @DavidWarnerII Derek Cash-Peterson (Sympraxis Consulting) | @spdcp Elio Struyf (Struyf Consulting) | @eliostruyf Emily Mancini (Sympraxis Consulting) | @EEMancini Eric Overfield (PixelMill) | @EricOverfield Erwin van Hunen (Valo Intranet) | @erwinvanhunen  Gautam Sheth (Valo Solutions) | @gautamdsheth Geetha Sivasailam (Artis Consulting) | @GSiVed João J. Mendes (Valo Solutions) | @joaojmendes Joel Rodrigues (Storm Technology) | @JoelFMRodrigues Julie Turner (Sympraxis Consulting) | @jfj1997 Laura Kokkarinen (Sulava) | @LauraKokkarinen Luise Freese | @LuiseFreese Marc D Anderson (Sympraxis Consulting) | @sympmarc Paolo Pialorsi (Piasys.com) | @PaoloPia Patrick Lamber (Expertsinside AG) | @patricklamber Paul Bullock (CPS) | @pkbullock Rick Van Rousselt (Advantive) | @RickVanRousselt Stefan Bauer (n8d) | @StfBauer Stephan Bisser (Solvion) | @stephanbisser Tetsuya Kawahara | @techan_k Thomas Gölles (Solvion) | @thomyg Velin Georgiev (Pramerica) | @velingeorgiev Veronique Lengelle (CPS) | @veronicageek Yannick Plenevaux (PVX Solutions) | @yp_code Here are the Microsoft Internal PnP Core team members: Alex Terentiev | @alexaterentiev April Dunnam | @aprildunnam Bert Jansen | @O365Bert Bob German | @Bob1German Garry Trinder | @garrytrinder Hugo Bernier | @bernierh Koen Zomers | @koenzomers Mikael Svenson | @mikaelsvenson Natalie Pienkowska | @NataliePienkow1 Patrick Rodgers | @mediocrebowler Rabia Williams | @williamsrabia Sébastien Levert | @sebastienlevert Vesa Juvonen | @vesajuvonen Waldek Mastykarz | @waldekm Wictor Wilen | @wictor\n\\  Next steps See all of the available community calls, tools, components and other assets from https://aka.ms/m365pnp. Get involved!\nGot ideas or feedback on the topics to cover, additional partnerships, product feature capabilities? - let us know. Your input is important for us, so that we can support your journey in Microsoft 365.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 Community (PnP) \u0026ndash; November 26th 2021\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-november-2021-update/images/pnp-nov-update_hu490a685f460fa51a11ce08e976cb2957_598253_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-november-2021-update/","tags":[],"title":"Microsoft 365 PnP Community -- November 2021 update"},{"categories":["CLI for Microsoft 365"],"contents":"Manage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use. While building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects. New version of CLI for Microsoft 365 \u0026ndash; v4.2 Following our monthly release cadence, we\u0026rsquo;ve released a new version of the CLI for Microsoft 365 with some new capabilities. Here are a few of the most noteworthy additions. Updates  Upgrade SharePoint Framework projects to SPFx v1.13.1  With the release of SharePoint Framework v1.13.1 we made sure to provide you with the tools to upgrade your solutions using the CLI for Microsoft 365. To upgrade your SPFx project to this version, change the working directory to your project and execute: m365 spfx project upgrade --preview --output md \u0026gt; report.md  We\u0026rsquo;d also recommend that you try a richer upgrade report based on the Visual Studio Code CodeTour extension: m365 spfx project upgrade --preview --output tour  You can verify your environment configuration for using the specific version of the SharePoint Framework using the following command: m365 spfx doctor  For more information about upgrading SharePoint Framework projects, see the CLI documentation. Extended \u0026lsquo;aad app add\u0026rsquo; with save With the new save option, when creating a new Azure AD app, you can store the information about the created app in a local .m365rc.json file. By storing this information, you can keep track which app(s) you use in your current project. In the future versions of CLI for Microsoft 365, we\u0026rsquo;ll release dedicated commands that allow you to easily manage Azure AD apps used in your solutions without having to manually look them up in the Azure Portal! For more information about the different settings when creating new apps with the CLI for Microsoft 365 see the documentation. Adding a service principal to a registered Azure AD app If you register an application in the portal, an application object as well as a service principal object are automatically created in your home tenant. If you register an application using CLI for Microsoft 365 or the Microsoft Graph, you\u0026rsquo;ll need to create the service principal separately. With the new aad sp add command, you can now add a service principal to an existing Azure AD app. For more information about the adding service principals and the options see the documentation. Retrieving files In this version of CLI for Microsoft 365 we introduced the new file list command. This command is an improved version of the spo file list command. The main difference between the two commands is, that file list uses Microsoft Graph and properly supports retrieving files from large lists and folders. For more information about retrieving files using this new command and the options see the documentation. New script samples CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts. If you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios. Use CLI for Microsoft 365 access token This sample script shows how to handle scenario\u0026rsquo;s where the CLI for Microsoft 365 does not provide you with a command. It shows how to use the CLI for Microsoft 365 access token and call a REST method to retrieve information around attachments. Something currently not available in the CLI for Microsoft 365. Export all channels from a team This sample script shows how to all channels from a Microsoft Teams team to a CSV including details like description and e-mail address. Contributors This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order):\n Joakim Högberg Sudharsan Kesavanarayanan Vipul Kelkar Patrick Lamber Michaël Maillot Waldek Mastykarz Abderahman Moujahid Nanddeep Nachan Smita Nachan Joseph Velliah Adam Wójcik Rabia Williams   Work in progress Here are some things that we\u0026rsquo;re currently working on. CLI for Microsoft 365 v4 Themes Following our latest major release, we have started thinking about themes for the coming year but we would love to know what you think we should concentrate on next. We are of course looking at topics as Microsoft Viva and the Power Platform but if you have any suggestions, please let us know by adding your suggestion to our open discussion on GitHub. Microsoft 365 app commands When building apps for Microsoft 365, next to your code, you also need to manage how your app is exposed to Microsoft 365. You need to register your application in Azure Active Directory, and depending what type of app you build, you might need to deploy it to an app catalog as well. All these properties are managed in different locations and we\u0026rsquo;re thinking of ways that we could simplify it for you. In this version of CLI for Microsoft 365, we introduced the ability for you to store the information about your Azure AD app in your current project. In the future versions, we\u0026rsquo;ll add commands to help you manage Azure AD apps like changing the redirect URI or managing API permissions. What else could we simplify? Let us know what you think by helping out with one of our open issues or chime in on our open discussion! More commands, what else Microsoft 365 is evolving and new capabilities are being released every day. With CLI for Microsoft 365, we aim to help you manage your tenant on any platform in a consistent way, no matter which part of Microsoft 365 you interact with. While we keep adding new commands to CLI for Microsoft 365 each release, we still barely scratched the surface with what\u0026rsquo;s possible in Microsoft 365. In the upcoming versions of the CLI for Microsoft, you can expect us to add more commands across the different workloads in Microsoft 365. Script examples In every release of the CLI for Microsoft 365, we introduce new commands for managing Microsoft 365. With over 350 commands across the different Microsoft 365 services, the CLI for Microsoft 365 has become a powerful tool, not just for managing your tenant but also for automating your daily work. We\u0026rsquo;d love to show you how you can use the CLI for Microsoft 365 to build automation scripts in PowerShell Core and Bash. If you have any scripts using SPO or PnP PowerShell that you use frequently, please share them with us so that we can learn more about the common automation scenarios. Try it today Get the latest release of the CLI for Microsoft 365 from npm by executing: npm i -g @pnp/cli-microsoft365  Alternatively, you can get the latest release from Docker by executing: docker run --rm -it m365pnp/cli-microsoft365:latest  If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365. If you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter. ","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-november-2021-update/images/pnp-nov-update_hu490a685f460fa51a11ce08e976cb2957_598253_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v4-2/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 v4.2"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call Summary Have you visited the Microsoft 365 tenant \u0026ndash; script samples gallery (116 scenarios and 160 scripts, using CLI for Microsoft 365, PnP PowerShell, SPO Management Shell tooling and more\u0026hellip;)? Sign up and attend an AMA and other events in November-December hosted by Sharing is Caring. At the same time, sign up for the PnP Recognition Program. Welcome to 9 new members to the Microsoft 365 PnP Team! We\u0026rsquo;re thrilled you have joined us.  Geetha Sivasailam | @GSiVed João Mendes (independent/Storm Technologies Ltd) | @joaojmendes Stephan Bisser (Solvion) | @stephanbisser  Natalie Pienkowska (Microsoft) | @NataliePienkow1 Joel Rodrigues (Storm Technology Ltd) | @JoelFMRodrigues Tetsuya Kawahara (MVP) | @techan_k Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp Rick Van Rousselt (Advantive) | @rickvanrousselt Thomy Gölles (Solvion) | @thomyg Project releases this week include Yo teams - generator-teams - v3.5.0 GA, Yo teams - yoteams-build-core - v1.5.0 GA, Yo teams \u0026ndash; yoteams-deploy - v1.1.0 GA and Microsoft Graph Toolkit (MGT) - v2.3.1 GA. Also added .NET 6 support to PnP .NET libraries.  Open-source project status (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.7.0 GA, PnP Provisioning Engine Schema v202103 Prepping for v1.8.0 - Winter 2022, .NET 6 support PnP .NET Libraries - PnP Core SDK v1.4.0 GA, PnP Transformation Framework: Public Preview released! Prepping for v1.5.0 - Winter 2022, .NET 6 support PnP PowerShell v1.8.0 GA In progress: V2 POC, Prepping for v1.8, nightly releases Yo teams - generator-teams v3.5.0 GA v4.0.0-next Yo teams - yoteams-build-core v1.5.0 GA Yo teams \u0026ndash; yoteams-deploy v1.1.0 GA Yo teams - msteams-react-base-component v3.1.1 Microsoft Graph Toolkit (MGT) v2.3.1 GA Preparing v2.3.1 release, Working on v3.0.0 - Aligning all Toolkit components to Fluent UI Web Components\n Note\nWhile version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities.\n As well, there were 6 new/updated script samples this week! The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\n  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Join us at the next Microsoft 365 platform call 30th of November @ 8 AM PT\n Latest news from Microsoft engineering on Microsoft 365 topics Demos:  Arpitha Dhanapathi - Microsoft 365 Application Certification Vesa Juvonen \u0026amp; Paolo Pialorsi \u0026ndash; Building a Viva Connections partner solution using multi-tenant APIs and Adaptive Card Extensions (ACEs) Maisa Rissi \u0026amp; Vincent Biret - Introduction to Microsoft Graph Go SDK    Submit Samples\n  Give us feedback on the new consolidated M365 sample gallery   Register for Sharing is Caring Events:\n Ask me anything (AMA) MGT \u0026ndash; November 30th Ask me anything (AMA) PnP Search \u0026ndash; January 11th First Time Contributor Session \u0026ndash; December 15th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; TBS  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; TBS  Maturity Model Practitioners \u0026ndash; January 18th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Please do share your great work. **Microsoft Power Platform Samples: **(https://aka.ms/powerplatform-samples)\n  Please do share your great work.   *Check the site for this latest sample **Script Samples: ** (https://aka.ms/script-samples)\n 2 New Samples + 4 Updated Samples🤩 \u0026ndash; WOW! Contributed by  Adam Wójcik | @Adam25858782 Leon Armston | @LeonArmston    \u0026ndash; Fabulous!\nTogether Mode!  Great seeing everyone today. See you at the European Collaboration and Cloud Summit in Düsseldorf, Germany or perhaps at the Microsoft 365 Collaboration Conference in Las Vegas, Nevada, US. Demos Demos delivered in this session\n  Contributors Corner - GitHub Contributions using the VS Code Web Editor \u0026ndash; interactively step through the creation of your first Pull Request using a new simplified GitHub contribution tool. Create an account in GitHub and scan the Barcode from demo to pull up a page and repository to edit. Open VS Code in Web Editor, create a ReadMe-UserName.md (Markdown) file, commit (save) changes to GitHub, open and update Pull Request (PR) template and submit your PR!\n  Create an event page in SharePoint with SharePoint Spaces and custom Lists \u0026ndash; see how Spaces, 4 lists, a timer web part and a quick links web part for UI supported by an Events list in the backend are blended to create a sharp Event page in SharePoint. Step through the Spaces embed, column formatting, list and list view set up for Sessions, Tracks, People and About Event. Informational pop ups, event filtering, registration and more.   Using Randomization with List Formatting \u0026ndash; render a randomly generated stack of informational cards with the last card in the list showing up at the top of the stack. Whenever one visits the page hosting this list view - a \u0026ldquo;randomly shown fact card\u0026rdquo; will render. Randomization is based on the calculation of time in milliseconds - Number(@now) function. The resulting value is used to select an image.   Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics Topics covered in this call\n PnP .NET library updates - Bert Jansen (Microsoft) | @O365bert \u0026ndash; 7:11 PnP PowerShell updates - Bert Jansen (Microsoft) | @O365bert \u0026ndash; 8:49 yo Teams updates - Wictor Wilén (Microsoft) | @wictor \u0026ndash; 10:28 Microsoft Graph Toolkit updates -Sébastien Levert (Microsoft) | sebastienlevert \u0026ndash; 13:00 Microsoft Script Samples -Paul Bullock (CaPa Creative Ltd) | @pkbullock \u0026ndash; 2:30 Microsoft Teams Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 15:12 Microsoft Power Platform Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 15:40 **Demo 1: **[Contributors Corner - GitHub Contributions using the VS Code Web Editor \u0026ndash; ]David Warner[ (Catapult) | @DavidWarnerII ]\u0026ndash; 17:26 Demo 2:[ Create an event page in SharePoint with SharePoint Spaces and custom Lists \u0026ndash; ]Anand Ragav[ | @AnandVRagav ]\u0026ndash; 31:59 [Demo 3:[ Using Randomization with List Formatting \u0026ndash; ]Chris Kent[ (DMI) | @thechriskent ]]\u0026ndash; 45:34  Resources Additional resources around the covered topics and links from the slides.\n  D1: First Time Contributor training \u0026ndash; sharing-is-caring   D1: Website \u0026ndash; Sharing Is Caring | pnp.github.io/sharing-is-caring/   D1: Extension - GitHub Repositories   D2: Article - Create an event page with SharePoint, SharePoint Spaces and formatted Lists   D3: Documentation \u0026ndash; Use column formatting to customize SharePoint   D3: Samples \u0026ndash; List formatting samples \u0026gt; random-item   PnP Weekly \u0026ndash; Episode 144 (November 22nd ) with Atlanta, US-based Senior Program Manager on the Viva Connections Platform team - Catherine Chuaga | video | podcast\n  PnP Weekly \u0026ndash; Episode 143 (November 15th) with Nairobi, Kenya-based Program Manager at Microsoft - Roina Ochieng | @roinochieng | video | podcast\n  General resources  Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Microsoft 365 platform call \u0026ndash; November 30th at 8:00 am PST | https://aka.ms/m365-dev-call\n  SharePoint Framework call \u0026ndash; December 2nd at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; December 8th at 8:00 am PST | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; December 9th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call \u0026ndash;December 9th at 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; December 15th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; December 16th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n   \u0026ldquo;Sharing is caring\u0026rdquo;\nMicrosoft 365 PnP team, Microsoft - 26th of November 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-25th-of/images/recording-25th-nov_huf6eecc19a885a8e02e7cbc78e0bda132_254320_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-25th-of/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 25th of November, 2021"},{"categories":["CLI for Microsoft 365"],"contents":"Are you an IT Pro who wants to have a solution that checks the status of your Microsoft 365 Tenant.\nHow about if you get notified when something goes wrong with your tenant and you get that information before your users complain. Awesome, right? Fair Warning : This blog post is a lengthy one since it talks about how I created the solution. If you are only interested in script sample, head directly to the Complete Script Section\nSolution In this blog, I am showing a way where you can schedule a script that will check the status of your tenant. If something is not right with the tenant, it will save the information to a SharePoint List and will notify the user. I am also giving a bonus solution where I have created a simple Power Automate which will identify the changes and will complete some of the processes which are designed for notification.\nCLI for Microsoft 365 provides some powerful and lightweight commands via which you can get the health status of your Office 365 Tenant. With the combination of multiple commands, you can create a full-fledged and powerful solution through which you can get updates, notified if some of the services are not working as expected.\nIn this blog, I am using Windows for showing the use case. You as a user are not restricted to use PowerShell since CLI for Microsoft 365 is a cross-platform CLI and is independent of the OS platform which you use.\nIndex  Solution Index Implementation  Authentication and Login Get status of Tenant Pushing to SharePoint list when Services are not normal  SharePoint List Adding to SharePoint List if a Service is not Normal   Send email to any users using CLI for Microsoft 365  Send email when the service is NOT Operational Send email when the service is back to Operational     Bonus Solution - Configure Power Automate for doing any Business Process  Power Automate - Creation Trigger Power Automate - On Modified   PowerShell Scripts  Complete Script - Easily understandable Simple Script - Production Ready (Lines of Code : 4)   Schedule the script Complete Scripts Need to know more on how to use CLI for Microsoft 365  Implementation Authentication and Login The biggest advantage CLI for Microsoft 365 has is its ability to Persist Connection Information.\nAfter logging in to Microsoft 365, the CLI for Microsoft 365 will persist the information about the connection until you explicitly log out from Microsoft 365. Once you have authenticated to the tenant, your scripts will be executed without the need for authentication every time. Since the solution is not a confidential or had complex business process, it is safe to go ahead with this approach. CLI for Microsoft 365 also provides logging in using a certificate if you prefer that approach.\nGet status of Tenant The first step for the script is to get the current status using tenant status list command. In our case, we just want to get the services which are not normal. Here, we use the tenant status list command and would pass JMESPath Query since CLI for Microsoft 365 supports that. This query is supported in cross-platform as well. We will retrieve all the services which are not running normally and hence we would the JMESPath query would be something like ?Status != 'ServiceOperational'{.language-plaintext .highlighter-rouge}.\nBased on that, our command may look something like below\nm365 tenant status list --query \u0026#34;value[?Status != \u0026#39;ServiceOperational\u0026#39;]\u0026#34; --output json  Another biggest advantage of CLI for Microsoft 365 is that all the command provides an option for you to return the values in a JSON string. With JSON, it is super powerful and flexible and you can easily manipulate the data in your scripts.\n Pushing to SharePoint list when Services are not normal SharePoint List Here we are using a SharePoint List in one of the SharePoint sites. The advantage of that is, you can have the information kept and you can tag it to a Power Automate if you want to build some logics (I have created a Power Automate solution so that can you can have a look into that and design your requirements accordingly). In my case, SharePoint List look something like below\n   Adding to SharePoint List if a Service is not Normal We will be using spo listitem add which will add the item to SharePoint List. Since we are already authenticated to your tenant, all we need to do is to use the command directly. Before we do that, we will just check the current SharePoint list whether the outage is already added. We plan to have the script running in a fixed interval, say every 15 minutes or 30 minutes. In that case, there is a chance that the outage is still there and we do not need the entry to be duplicated. So we would get the items from the current SharePoint List using the command spo listitem get and will check whether the current outage is already there in the List.\n If it is there,  Then we will not do anything.   If the entry is not there,  we will use the command spo listitem add{.language-plaintext .highlighter-rouge} and add the status information to SharePoint List    The complete command may look something like below,\n$workLoads = m365 tenant status list --query \u0026#34;value[?Status != \u0026#39;ServiceOperational\u0026#39;]\u0026#34; --output json | ConvertFrom-Json $currentOutageServices = (m365 spo listitem list --webUrl $webURL --title $listName --fields \u0026#34;Title, Workload, Id\u0026#34; --output json).Replace(\u0026#34;ID\u0026#34;, \u0026#34;_ID\u0026#34;) | ConvertFrom-Json #Adding items if any of the workload is not available $workLoads | ?{$_.Workload -notin $currentOutageServices.Workload} | %{ $addedWorkLoad = m365 spo listitem add --webUrl $webURL --listTitle $listName --contentType Item --Title $_.WorkloadDisplayName --Workload $_.Workload --FirstIdentifiedDate (Get-Date -Date $_.StatusTime -Format \u0026#34;MM/dd/yyyy HH:mm\u0026#34;) --WorkflowJSONData (Out-String -InputObject $_ -Width 100) } You can see that, we are even pushing the JSON Data of the complete status information so that you as an IT Pro will have detailed logs without going to the Admin Center. Once you have the data pushed, your status information for a particular outage may look something like below.    Send email to any users using CLI for Microsoft 365 Send email when the service is NOT Operational CLI for Microsoft 365 gives us the power of sending an email using the command outlook sendmail. With this command, it uses the logged in user\u0026rsquo;s outlook to send an email.\nSuper Tip : You can also use a flag saveToSentItems{.language-plaintext .highlighter-rouge} using which you can disable to have the email saved in your sent folder. Awesome, isn\u0026rsquo;t it?\nCommand may look something like below,\n#Send notification using CLI Commands m365 outlook mail send --to \u0026#34;recipient@yourtenant.onmicrosoft.com\u0026#34; --subject \u0026#34;Outage Reported in $($workload.WorkloadDisplayName)\u0026#34; --bodyContents \u0026#34;Any outage has been reported for the Service : $($workload.WorkloadDisplayName) \u0026lt;a href=\u0026#39;https://yourtenant.sharepoint.com/sites/M365CLI/Lists/O365%20Health%20Status\u0026#39;\u0026gt;Access the Health Status List\u0026lt;/a\u0026gt;\u0026#34; --bodyContentType HTML Send email when the service is back to Operational Getting notification when the service is back to normal is equally important compared to the notification when a Service is not Operational. This would enable you as an IT Pro to notify the concerned team and your organization on that.\nIn the above steps, we had saved the data to a SharePoint list when service are not operational. When our script checks the status and identifies that the service which was there in SharePoint List is no more there in the non-operational list of Tenant Workloads, we can assume that the tenant Service was NOT Operational is back to Operational\nCode which handles that is given below,\nForeach ($currentOutageService in $currentOutageServices){ if($currentOutageService.Workload -notin $workLoads.Workload){ $RemovedRecord = m365 spo listitem remove --webUrl $webURL --listTitle $listName --id $currentOutageService.Id #Send notification using CLI Commands m365 outlook mail send --to \u0026#34;arjun@yourtenant.onmicrosoft.com\u0026#34; --subject \u0026#34;Outage RESOLVED for $($currentOutageService.WorkloadDisplayName)\u0026#34; --bodyContents \u0026#34;Outage which was reported for the Service : $($workload.WorkloadDisplayName) is RESOLVED.\u0026#34; --bodyContentType HTML } } What we do in the above code is,\n If the item in SharePoint list is not there in list of Service which is NOT Operational Remove the Item from the SharePoint list using the command spo listitem remove{.language-plaintext .highlighter-rouge}  IF you want you can also copy item to another list for any historical purpose if needed   Send email to recipients informing that the Service is back to Normal  Bonus Solution - Configure Power Automate for doing any Business Process As we may know Power Automate provides rich features which we can leverage if you want to do any action based on the available triggers. Say e.g., when your SharePoint service is not Operational, need to initiate a Service Request in your Help Desk support system automatically, we can always define the logic in Power Automate and once an outage is identified, Power Automate will initiate a Service Request in your help-desk system along with notifying concerned team. In our case, we are using SharePoint list item Creation / Modification as the trigger for initiating Process. Since we are adding list item using CLI for Microsoft 365, we can easily take that as the triggering point\nIn my case, what I have done is that,\n  Create 1 Flow which will get triggered when an item is created and another flow which will get triggered if an item is modified\n  If the Still in Outage{.language-plaintext .highlighter-rouge} flag in SharePoint List is YES (Creation Triggered Flow)\n Send notification via email informing about Outage Send a Push Notification to the configured user    If the Still in Outage{.language-plaintext .highlighter-rouge} flag in SharePoint List is No (Modified Trigger Flow)\n Send notification via email about Service becoming Operational    As I said, mine is a super simple implementation just to demonstrate the Power of Power Automate which goes hand in hand with scripting tools. If you have some business logic which needs to be in place with this, it always gives you the flexibility for the same. Just giving a glimpse of my simple Power Automate screen below,\nPower Automate - Creation Trigger Below Power Automate will do the process when a new outage is reported by the script    Power Automate - On Modified Below is the Power Automate which is created when existing outage is modified, which means one of the current Service which was NOT OPERATIONAL is changed to OPERATIONAL\n      PowerShell Scripts As mentioned above, in my case, I have used PowerShell for scripting the requirement. You can access the scripts which I have used from below.\nComplete Script - Easily understandable Below script is the similar implementation of the Production Read Script. Rather than using PowerShell piping, we are using conventional For-Each so that script is easily readable. #Check the Login Status $LoginStatus = m365 status if($LoginStatus -Match \u0026#34;Logged out\u0026#34;){ #Exiting the execution exit; } $webURL = \u0026#34;https://contoso.sharepoint.com/sites/HealthStatusSite\u0026#34; $listName = \u0026#34;O365 Health Status\u0026#34; $workLoads = m365 tenant status list --query \u0026#34;value[?Status != \u0026#39;ServiceOperational\u0026#39;]\u0026#34; --output json | ConvertFrom-Json $currentOutageServices = (m365 spo listitem list --webUrl $webURL --title $listName --fields \u0026#34;Title, Workload, Id\u0026#34; --output json).Replace(\u0026#34;ID\u0026#34;, \u0026#34;_ID\u0026#34;) | ConvertFrom-Json Foreach ($workload in $workLoads){ if($workload.Workload -notin $currentOutageServices.Workload){ $addedWorkLoad = m365 spo listitem add --webUrl $webURL --listTitle $listName --contentType Item --Title $workload.WorkloadDisplayName --Workload $workload.Workload --FirstIdentifiedDate (Get-Date -Date $workload.StatusTime -Format \u0026#34;MM/dd/yyyy HH:mm\u0026#34;) --WorkflowJSONData (Out-String -InputObject $workload -Width 100) #Send notification using CLI Commands m365 outlook mail send --to \u0026#34;arjun@contoso.onmicrosoft.com\u0026#34; --subject \u0026#34;Outage Reported in $($workload.WorkloadDisplayName)\u0026#34; --bodyContents \u0026#34;Any outage has been reported for the Service : $($workload.WorkloadDisplayName)\u0026lt;a href=\u0026#39;https://contoso.sharepoint.com/sites/HealthStatusSite/Lists/O365%20Health%20Status\u0026#39;\u0026gt;Access the Health Status List\u0026lt;/a\u0026gt;\u0026#34; --bodyContentType HTML } } #Updating the status to IsInOutage to NO the list item if the service is back to normal Foreach ($currentOutageService in $currentOutageServices){ if($currentOutageService.Workload -notin $workLoads.Workload){ $RemovedRecord = m365 spo listitem remove --webUrl $webURL --listTitle $listName --id $currentOutageService.Id #Send notification using CLI Commands m365 outlook mail send --to \u0026#34;arjun@contoso.onmicrosoft.com\u0026#34; --subject \u0026#34;Outage RESOLVED for $($currentOutageService.WorkloadDisplayName)\u0026#34; --bodyContents \u0026#34;Outage which was reported for the Service : $($workload.WorkloadDisplayName)is RESOLVED.\u0026#34; --bodyContentType HTML } } Simple Script - Production Ready (Lines of Code : 4) In the below script, I have used PowerShell piping and hence the script may look complicated. But it hardly has 3 lines of code which does the complete operation and these kind of scripts will be ideal for your production like environment. If you need to understand the script, you can view easily understandable script. $webURL = \u0026#34;https://contoso.sharepoint.com/sites/M365HealthStatus\u0026#34; $listName = \u0026#34;O365 Health Status\u0026#34; $workLoads = m365 tenant status list --query \u0026#34;value[?Status != \u0026#39;ServiceOperational\u0026#39;]\u0026#34; --output json | ConvertFrom-Json $currentOutageServices = (m365 spo listitem list --webUrl $webURL --title $listName --fields \u0026#34;Title, Workload, Id\u0026#34; --output json).Replace(\u0026#34;ID\u0026#34;, \u0026#34;_ID\u0026#34;) | ConvertFrom-Json $workLoads | ?{$_.Workload -notin $currentOutageServices.Workload} | %{ $addedWorkLoad = m365 spo listitem add --webUrl $webURL --listTitle $listName --contentType Item --Title $_.WorkloadDisplayName --Workload $_.Workload --FirstIdentifiedDate (Get-Date -Date $_.StatusTime -Format \u0026#34;MM/dd/yyyy HH:mm\u0026#34;) --WorkflowJSONData (Out-String -InputObject $_ -Width 100)} $currentOutageServices | ?{$_.Workload -notin $workLoads.Workload} | %{ $UpdatedWorkflod = m365 spo listitem set --webUrl $webURL --listTitle $listName --contentType Item --id $_.Id --StillinOutage \u0026#34;false\u0026#34; }  Schedule the script The last part of the solution is to schedule the script which we have created. In my case, I have scheduled the script to run every half an hour. Schedule could be decided depending on your business case.\nIn my case, since I am using a Windows machine and hence I would be using PowerShell as my scripting tool. Since CLI for Microsoft 365 is OS agnostic, you are free to use script based on your Operating System, be it on Windows or Mac OS or Linux.\nIn this blog, we will not be covering about scheduling the scripts in PowerShell since it is a straight forward activity. You can view this blog where it has explained how to configure PowerShell\nComplete Scripts Too lazy to build scripts. Don\u0026rsquo;t worry. We got your back. Now the complete script package is available in the CLI for Microsoft 365 sample scripts section. Photo by Austin Distel on Unsplash\n","image":"https://pnp.github.io/blog/post/monitor-and-notify-m365-health-using-cli-for-microsoft-365/images/ArjunMenon_0-1637745741073_hu8ef7731d1544a667d08f0134e1a2d757_12162_460x200_fill_q100_box_smart1.jpeg","permalink":"https://pnp.github.io/blog/post/monitor-and-notify-m365-health-using-cli-for-microsoft-365/","tags":["CLI for Microsoft 365"],"title":"Monitor and Notify M365 health using CLI for Microsoft 365"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from November 23rd, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call Summary\nWelcome to the weekly call focused on capabilities of the Microsoft 365 platform.  New to Microsoft 365 Platform development? Join the Microsoft 365 Developer Program today and get a free E5 developer tenant with instant availability, and other assets. Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Now with new Viva Connections training!  Preview the Microsoft 365 Sample Solution Gallery with more than 600 samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and participate in one of a growing number of events hosted by Sharing is Caring during November-December. Upcoming Ask Me Anything (AMA) sessions for PnPjs and for MGT in November and for PnP Search in January!  Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). PnP Weekly \u0026ndash; Episode 144 (November 22nd ) with Atlanta, US-based Senior Program Manager on the Viva Connections Platform team - Catherine Chuaga | video | podcast The great people, supportive organizations and solid work done in this community over the last month is recognized today! The Microsoft 365 Community (PnP) \u0026ndash; November 2021, update will be available soon.  Hear about the 5 top Microsoft 365 Platform related stories and view 2 demos from Microsoft presenters about working with the Microsoft 365 platform.  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call. Microsoft 365 Platform News Flash\n Go developers can now access Microsoft Graph with streamlined authentication and more Microsoft Teams development: All you need to know Developing real-time collaborative apps with Azure, Microsoft 365, Power Platform, and GitHub The journey to Viva Topics adoption success: Initiate The journey to Viva Topics adoption success: Intro    Actions  Sign up for the \u0026ndash; Graph Connector Private Preview Register for Sharing is Caring Events:  Ask me anything (AMA) MGT \u0026ndash; November 30th Ask me anything (AMA) PnP Search \u0026ndash; January 11th First Time Contributor Session \u0026ndash; December 15th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; TBS  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; November 24th, December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; TBS  Maturity Model Practitioners \u0026ndash; January 18th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter. Everyone do the Seb Rockelwave! Thank you again to community members and organizations on your November contributions.   Demos Demos delivered in this session\n  Introduction to SharePoint on-prem Microsoft Graph connector \u0026ndash; the SharePoint on-prem connector shown at Ignite 2021 is in Private Preview. The on-prem agent-based connector supports SharePoint 2013/2016/2019. Has ability to crawl sites, site collections, documents. Supports exclusion list \u0026amp; ACL. Secure and compliant by design, basic and Windows Auth. Allows Admins to bring SharePoint on-premises instances to Microsoft Search, Viva, more. Graph accessibility as with entire cloud-based Microsoft 365 ecosystem.   Microsoft Learn Module - Extend Microsoft Viva Connections with Application Customizers - with Viva Connections toolkit installed, step through creating an application customizer from scratch, edit the application customizer code, test the application customizer on a page, and deploy it to a Viva Connections site. Unlike web parts that can be positioned and configured by users, Application Customizers are created and positioned by developers, configured by Site Admins and work only with Viva Connections desktop experience.\n  Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 7:24 Demo 1: Introduction to SharePoint on-prem Microsoft Graph connector - Parag Jain (Microsoft) \u0026ndash; 13:00 Demo 2: Microsoft Learn Module - Extend Microsoft Viva Connections with Application Customizers - Waldek Mastykarz (Microsoft) | @waldekm \u0026amp; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 21:07  Resources Additional resources around the covered topics and links from the slides.\n  D1: Preview \u0026ndash; Graph Connector Private Preview   D1: Article - What\u0026rsquo;s new and what\u0026rsquo;s next for Microsoft Graph connectors   D1: Documentation - Microsoft Graph connector agent   D2: Learn module - Extend Microsoft Viva Connections with application customizers   D2: Tools - Viva Connections Toolkit (SPFx 1.13) | npm install -g @microsoft/generator-sharepoint   D2: Look book \u0026ndash; SharePoint look book   General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   M365 General Dev call \u0026ndash; November 25th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  Microsoft 365 platform call \u0026ndash; November 30that 8:00 am PST | https://aka.ms/m365-dev-call\n  SharePoint Framework call \u0026ndash; December 2nd at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; December 8th at 8:00 am PST | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash;December 9that 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; December 15th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; December 16th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.    More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 24th of November 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-23rd-of-november-2021/images/recording-23rd-nov-platform_hu3c93dac9e7e228af834eec70cabc3f72_559183_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-23rd-of-november-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 23rd of November, 2021"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Atlanta, US-based Senior Program Manager on the Viva Connections Platform team - Catherine Chuaga. Topics discussed in this session:\n Delivering impact as voice of the developer ecosystem focused on moving the Viva Connections Partner Experience to the next level Unlearning things from past jobs and geographic locations to grow in a new role and country.  Strategy for approaching Product Experience Reviews within Microsoft The thrill of joining Microsoft and the exhilaration of controlled drowning. 4 Tips for woman looking at starting, advancing, transitioning to a career in IT.  We also covered 18 articles or videos by Microsoft and the community from the last week.\nPlease remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded in front of a non-audience on Monday, November 22, 2021. Enjoy the show.  Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.  These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Go developers can now access Microsoft Graph with streamlined authentication and more - Vincent Biret (Microsoft) | @baywet Announcing Teams JS SDK v2 in public preview: Extend Teams apps across Microsoft 365 - Zakiullah Khan (Microsoft) Guidance for implementing partner offerings for Viva Connections with ACEs and custom APIs - Vesa Juvonen (Microsoft) | @vesajuvonen Developing real-time collaborative apps with Azure, Microsoft 365, Power Platform, and GitHub - Dan Wahlin (Microsoft) | @DanWahlin Microsoft Teams development: All you need to know - Rabia Williams (Microsoft) | rabwill The journey to Viva Topics adoption success: Intro - Matt Wolodarsky (Microsoft) | @mwolodarsky Most used SharePoint Framework solutions from the Store (October 2021) - Vesa Juvonen (Microsoft) | @vesajuvonen Submit your OneDrive and SharePoint ideas to the Microsoft Feedback portal - Cathy Dew (Microsoft) | @catpaint1  Community articles  Quick SharePoint Approvals using list formatting JSON to set field values - Michel Mendes (Storm Technology) | @michelcarlo Upload files to SharePoint with JavaScript using Microsoft Graph and Microsoft Authentication Librar... - Eli H. Schei (Point Taken AS) | @acupof_dev Using Collapsible Sections with User Experience in Mind - Emily Mancini (Sympraxis Consulting) | @EEMancini Interactively authenticate Microsoft Graph .NET SDK with Azure Identity library - Vardhaman Deshpande (Valo Solutions) | @vrdmn Update SharePoint User Profiles based on Azure Group Membership - Octavie van Haaften (Rapid Circle) | @eivatco Connect to Microsoft Graph PowerShell using an App Registration - Liam Cleary | @helloitsliam Create recursive flows in Power Automate - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Speaking at the European Collaboration Summit 2021 - Infuse AI into your Power Platform solutions - Chris O\u0026rsquo;Brien (Content+Cloud) | @ChrisO_Brien Episode #181 - Creating forms with Adaptive Card Extensions in SPFx - Paolo Pialorsi (PiaSys) | @paolopia Installing and Using the Microsoft Lists Desktop App - Daniel Glenn (InfoWorks) | @DanielGlenn  Additional resources  Extend Microsoft Viva Connections - Microsoft Learn Consume a multi-tenant API within a set of Microsoft Viva Connections Adaptive Card Extensions (ACEs... solution in GitHub Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n*\u0026ldquo;Sharing is caring!\u0026rdquo; *\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-144-catherine-chuaga-microsoft/images/Thumb-Ep144-November22_huc0e4ee1e206bf8eaaae538f6c25fcdbf_466234_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-144-catherine-chuaga-microsoft/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 144 - Catherine Chuaga (Microsoft)"},{"categories":["Microsoft 365 developer podcast"],"contents":"Jeremy and Paul recap the latest news from Microsoft\nListen to the show here: (m365devpodcast.com)\nIgnite  Ignite 2021: Building apps for collaboration in a hybrid world Microsoft Graph @ Ignite 2021 What\u0026rsquo;s new for Office Add-ins at Ignite 2021  Microsoft News Exam MS-600:\n Grow your skills and build collaborative solutions: Exam MS-600 Building Applications and Solutions ... Exam MS-600 - Learn  Teams:\n Microsoft 365 Developer Program launches new instant sandbox with Teams sample data pack Microsoft Teams development: All you need to know Build tabs with Adaptive Cards microsoft-teams-library-js: v2.0.0-beta.0  Graph:\n Breaking changes to attendance report in Microsoft Graph onlineMeeting API (beta) What\u0026rsquo;s new and what\u0026rsquo;s next for Microsoft Graph connectors  Feedback:\n Submit your OneDrive and SharePoint ideas to the Microsoft Feedback portal Preview of Feedback for Microsoft Teams now available  ","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-microsoft-news-november-2021/","tags":[],"title":"M365 Dev Podcast - Microsoft News: November 2021"},{"categories":["Community post"],"contents":"Recently I shared with the PnP community an event page I was working on and how I used SharePoint, Spaces and formatted Lists to design the user experience. In this post is explained the details of how the page, space and lists are made.\n   I will break down the components first and then go into the details one by one.\n a headerless SharePoint page as the event page a SharePoint Space an events list in SharePoint a SharePoint list to store the sessions information Optional: a SharePoint list to store session track a SharePoint list to store people information] a timer web part an about list web part.   A headerless page For the event page, I chose to have a headerless page in my SharePoint site. My intention was to save some real-estate on the page because there is no header image banner on a headerless page. To create the headerless page, make a copy of the site homepage (the default home page created when you create a new site does not have a header and title at the top), rename the URL and rename the page title in page properties. The copy gets added to the page library with url ending \u0026ldquo;..home1.aspx\u0026rdquo;. For comparison see the amount of space saved below.   For comparison see the amount of space saved below.    For the page layout choose the vertical section. This puts a vertical section for the full length of the page on the right-hand-side.   SharePoint Space Within the same SharePoint site, I activated Spaces. Spaces is a feature that needs to be activated at each site level. Do that from Site settings \u0026gt; Manage Site features \u0026gt; Spaces \u0026gt; Activate.\n   You can learn how to create Spaces from the Microsoft support documentation [Below image snapshot shows the design of my Space and the web parts I used.]   [Now with the Space created, copy the URL to the Space and to add it to the event page (the headerless page) using the embed web part on the page.]   [Paste the URL to the Space in the embed web part and save the page. If you want to customize the height and width properties of the embedded Space, use an iFrame embed code like the below and adjust the properties to taste.] \u0026lt;iframe src=\u0026#34;https://\u0026lt;Replace with your Space URL\u0026gt;\u0026#34; width=\u0026#34;100%\u0026#34; height=\u0026#34;550\u0026#34; style=\u0026#34;border:1px solid black;\u0026#34;\u0026gt; \u0026lt;/iframe\u0026gt; [To get a similar result as shown below you may need to adjust the positions of the web parts in the Space by checking how they are aligned once embedded on the event page.]   Events list The sessions are scheduled using the events calendar in the SharePoint site. However I chose not to display them on the event page using the events web part; instead I chose a SharePoint list (details in next section). From the events calendar, for each event we can get the event URL. This information is needed to let users add the event to their calendars. To create the events, use the Events web part on a separate hidden page or use the events list from the backend through Site contents. Use Microsoft support documentation for help list****to display the sessions information: **[To display the sessions on the event page, I created a list in the SharePoint site with the below columns. The field labels for the columns were renamed later to suit the event needs.   style=\u0026ldquo;width: 999px;\u0026rdquo;} [If you are new to lists and want to learn how to work with lists and add entries, follow the Microsoft documentation.\nAfter adding the session entries, I formatted the columns using JSON to give it a better format and styling like the below. I recommend creating a separate view before proceeding with formatting the columns. That way you have a view to embed on the event page and another view in the backend for editing purposes.   Let\u0026rsquo;s look at the formatting, let us take them column by column starting with the Session column. The session column is a single line text column and has a left-hand-side border, session title and a share button. The share button opens the default share option for list items to allow users to share session links through email or copy the link to share through Teams or another channel.\n   To get that format, use the below JSON code. Open the drown-down arrow next to the column header \u0026gt; select column settings \u0026gt; select Format this column. Then paste the below JSON and select save.\n{ \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-css-backgroundColor-neutralBackground\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;border-color\u0026#34;: \u0026#34;=if([$Sessiontrack] ==\u0026#39;Keynote\u0026#39;, \u0026#39;#0fc373\u0026#39;, if([$Sessiontrack] ==\u0026#39;Product Roundtables\u0026#39;, \u0026#39;#ff8c0a\u0026#39;, if([$Sessiontrack] ==\u0026#39;Breakout\u0026#39;, \u0026#39;#af78d2\u0026#39; \u0026#39;#0082f0\u0026#39;)))\u0026#34;, \u0026#34;border-left-style\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;border-width\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;sp-css-backgroundColor-neutralBackground\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding-top\u0026#34;: \u0026#34;0px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;row\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;60px\u0026#34;, \u0026#34;margin-left\u0026#34;: \u0026#34;-10px\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;margin-left\u0026#34;: \u0026#34;3px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;column\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;center\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;padding-top\u0026#34;: \u0026#34;0px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;row\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;padding\u0026#34;: \u0026#34;6px\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;13.5px\u0026#34;, \u0026#34;font-weight\u0026#34;: \u0026#34;400\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;@currentField\u0026#34; }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;align-content\u0026#34;: \u0026#34;right\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;right\u0026#34;, \u0026#34;padding-left\u0026#34;: \u0026#34;2px\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;button\u0026#34;, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;share\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-themePrimary ms-fontColor-themeDark--hover\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Share Item\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;padding-top\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;border\u0026#34;: \u0026#34;none\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;cursor\u0026#34;: \u0026#34;pointer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;align-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;Share\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-font-l\u0026#34; } } ] } ] } ] } ] } ] }  The About column is a multi-line text column and has the below formatting applied.   { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;flex-direction\u0026#34;: \u0026#34;row\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;start\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;=substring(@currentField, 0, 70) + \u0026#39;...\u0026#39;\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;2px 0\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;13px\u0026#34;, \u0026#34;margin\u0026#34;: \u0026#34;6px 4px 4px -6px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;@currentField.description\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralPrimary sp-card-content sp-card-urlContent sp-card-content sp-card-highlightedContent\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;MoreVertical\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;margin-top\u0026#34;: \u0026#34;1px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;13px\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 4px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;black\u0026#34;, \u0026#34;pointer-events\u0026#34;: \u0026#34;=if (@currentField == \u0026#39;\u0026#39;, \u0026#39;none\u0026#39;, \u0026#39;auto\u0026#39;)\u0026#34;, \u0026#34;text-decoration\u0026#34;: \u0026#34;=if (@currentField == \u0026#39;\u0026#39;, \u0026#39;none\u0026#39;, \u0026#39;auto\u0026#39;)\u0026#34; }, \u0026#34;customCardProps\u0026#34;: { \u0026#34;openOnEvent\u0026#34;: \u0026#34;hover\u0026#34;, \u0026#34;directionalHint\u0026#34;: \u0026#34;rightCenter\u0026#34;, \u0026#34;isBeakVisible\u0026#34;: true, \u0026#34;beakStyle\u0026#34;: { \u0026#34;backgroundColor\u0026#34;: \u0026#34;#3c3c3c\u0026#34; }, \u0026#34;formatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;#3c3c3c\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;300px\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;10px\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;@currentField\u0026#34; } } } ] }  The Host column is a Person type column and allows multi selection. It has the below formatting.\n   { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;forEach\u0026#34;: \u0026#34;personIterator in @currentField\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;border-color\u0026#34;: \u0026#34;#0050ca\u0026#34;, \u0026#34;border-style\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;border-width\u0026#34;: \u0026#34;2px\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;30px\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;30px\u0026#34;, \u0026#34;overflow\u0026#34;: \u0026#34;hidden\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;50%\u0026#34;, \u0026#34;margin\u0026#34;: \u0026#34;2px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;=if(loopIndex(\u0026#39;personIterator\u0026#39;) \u0026gt;= 3, \u0026#39;none\u0026#39;, \u0026#39;\u0026#39;)\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;=\u0026#39;/_layouts/15/userphoto.aspx?size=S\u0026amp;accountname=\u0026#39; + [$personIterator.email]\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;[$personIterator.title]\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;relative\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;50%\u0026#34;, \u0026#34;left\u0026#34;: \u0026#34;50%\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;auto\u0026#34;, \u0026#34;margin-left\u0026#34;: \u0026#34;-50%\u0026#34;, \u0026#34;margin-top\u0026#34;: \u0026#34;-50%\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;=if(length(@currentField) \u0026gt; 3 \u0026amp;\u0026amp; loopIndex(\u0026#39;personIterator\u0026#39;) \u0026gt;= 2, \u0026#39;none\u0026#39;, \u0026#39;\u0026#39;)\u0026#34;, \u0026#34;vertical-align\u0026#34;: \u0026#34;baseline\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;=join(@currentField.title, \u0026#39;, \u0026#39;)\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-bgColor-neutralLight ms-fontColor-neutralSecondary\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;text-align\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;line-height\u0026#34;: \u0026#34;30px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;14px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;=if(length(@currentField) \u0026gt; 3 \u0026amp;\u0026amp; loopIndex(\u0026#39;personIterator\u0026#39;) == 2, \u0026#39;\u0026#39;, \u0026#39;none\u0026#39;)\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;=\u0026#39;+\u0026#39; + toString(length(@currentField) - (2))\u0026#34; } ] } ] } ] }  The Day 1 and Day 2 columns are Hyperlink columns and have the below formatting. The time value is stored in the Description field of the Hyperlink field. The \u0026ldquo;Add to calendar\u0026rdquo; element holds the URL to the event in the events list.]   { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;flex-wrap\u0026#34;: \u0026#34;wrap\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;135px\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;column\u0026#34;, \u0026#34;border-color\u0026#34;: \u0026#34;#0050ca\u0026#34;, \u0026#34;border-style\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;border-width\u0026#34;: \u0026#34;1px\u0026#34;, \u0026#34;box-sizing\u0026#34;: \u0026#34;border-box\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;4px 8px 5px 8px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;align-items\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;wrap\u0026#34;, \u0026#34;overflow\u0026#34;: \u0026#34;hidden\u0026#34;, \u0026#34;margin\u0026#34;: \u0026#34;6px 4px 4px -5px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-bgColor-themePrimary sp-css-borderColor-themePrimary sp-card-borderHighlight sp-card-subContainer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;a\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;@currentField.description\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralPrimary sp-card-content sp-card-urlContent sp-card-content sp-card-highlightedContent\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;@currentField\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;=if (@currentField== \u0026#39;\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;_blank\u0026#39;)\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;margin-bottom\u0026#34;: \u0026#34;6px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;14px\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 4px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;pointer-events\u0026#34;: \u0026#34;=if (@currentField == \u0026#39;\u0026#39;, \u0026#39;none\u0026#39;, \u0026#39;auto\u0026#39;)\u0026#34;, \u0026#34;text-decoration\u0026#34;: \u0026#34;=if (@currentField == \u0026#39;\u0026#39;, \u0026#39;none\u0026#39;, \u0026#39;auto\u0026#39;)\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=\u0026#39; \u0026#39;+\u0026#39;@currentField.desc\u0026#39;\u0026#34; }, { \u0026#34;elmType\u0026#34;: \u0026#34;a\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;@currentField.description\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralPrimary sp-card-content sp-card-urlContent sp-card-content sp-card-highlightedContent\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;@currentField\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;=if (@currentField== \u0026#39;\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;_blank\u0026#39;)\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;AddEvent\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;margin-top\u0026#34;: \u0026#34;1px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;13px\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 4px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;pointer-events\u0026#34;: \u0026#34;=if (@currentField == \u0026#39;\u0026#39;, \u0026#39;none\u0026#39;, \u0026#39;auto\u0026#39;)\u0026#34;, \u0026#34;text-decoration\u0026#34;: \u0026#34;=if (@currentField == \u0026#39;\u0026#39;, \u0026#39;none\u0026#39;, \u0026#39;auto\u0026#39;)\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34; View/save event\u0026#34;, \u0026#34;customCardProps\u0026#34;: { \u0026#34;openOnEvent\u0026#34;: \u0026#34;hover\u0026#34;, \u0026#34;directionalHint\u0026#34;: \u0026#34;rightCenter\u0026#34;, \u0026#34;isBeakVisible\u0026#34;: true, \u0026#34;beakStyle\u0026#34;: { \u0026#34;backgroundColor\u0026#34;: \u0026#34;#3c3c3c\u0026#34; }, \u0026#34;formatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;color\u0026#34;: \u0026#34;White\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;#3c3c3c\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;100px\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;10px\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;View/add to calendar\u0026#34; } } } ] } ] } The Join columns are of type Hyperlink and have the below formatting applied. The URLs stored in the Hyperlink fields are URLs to meetings created in Microsoft Teams   { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;flex-wrap\u0026#34;: \u0026#34;wrap\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;box-sizing\u0026#34;: \u0026#34;border-box\u0026#34;, \u0026#34;border-color\u0026#34;: \u0026#34;=if(Date(\u0026#39;11/17/2021\u0026#39;) \u0026lt;= @now + 86400000, \u0026#39;#464775\u0026#39;, \u0026#39;gray\u0026#39;\u0026#34;, \u0026#34;border-style\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;border-width\u0026#34;: \u0026#34;1px\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;=if(Date(\u0026#39;11/17/2021\u0026#39;) \u0026lt;= @now + 86400000, \u0026#39;#464775\u0026#39;, \u0026#39;gray\u0026#39;)\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;4px 8px 5px 8px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;50px\u0026#34;, \u0026#34;align-items\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;nowrap\u0026#34;, \u0026#34;overflow\u0026#34;: \u0026#34;hidden\u0026#34;, \u0026#34;margin\u0026#34;: \u0026#34;6px 4px 4px -5px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-field-borderBottomRegular sp-field-borderBottomSolid sp-css-borderColor-WhiteFont\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;font-size\u0026#34;: \u0026#34;14px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;=if(Date(\u0026#39;11/17/2021\u0026#39;) \u0026lt;= @now + 86400000, \u0026#39;white\u0026#39;, \u0026#39;black\u0026#39;)\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;inline-block\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 6px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;TeamsLogo\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;a\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;@currentField.description\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralPrimary sp-card-content sp-card-urlContent sp-card-content sp-card-highlightedContent\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;=if(Date(\u0026#39;11/17/2021\u0026#39;) \u0026lt;= @now + 86400000, [$Link], \u0026#39;\u0026#39;\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;=if ([$Link] == \u0026#39;\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;_blank\u0026#39;)\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;font-size\u0026#34;: \u0026#34;13px\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 6px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;=if(Date(\u0026#39;11/17/2021\u0026#39;) \u0026lt;= @now + 86400000, \u0026#39;white\u0026#39;, \u0026#39;\u0026#39;)\u0026#34;, \u0026#34;pointer-events\u0026#34;: \u0026#34;=if ([$Link] == \u0026#39;\u0026#39;, \u0026#39;none\u0026#39;, \u0026#39;auto\u0026#39;)\u0026#34;, \u0026#34;text-decoration\u0026#34;: \u0026#34;=if ([$Link] == \u0026#39;\u0026#39;, \u0026#39;none\u0026#39;, \u0026#39;auto\u0026#39;)\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;Join\u0026#34;, \u0026#34;customCardProps\u0026#34;: { \u0026#34;openOnEvent\u0026#34;: \u0026#34;hover\u0026#34;, \u0026#34;directionalHint\u0026#34;: \u0026#34;rightCenter\u0026#34;, \u0026#34;isBeakVisible\u0026#34;: true, \u0026#34;beakStyle\u0026#34;: { \u0026#34;backgroundColor\u0026#34;: \u0026#34;#3c3c3c\u0026#34; }, \u0026#34;formatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;#3c3c3c\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;100px\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;10px\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=if(Date(\u0026#39;11/17/2021\u0026#39;) \u0026lt;= @now + 86400000, \u0026#39;Join the session\u0026#39;, \u0026#39;Check back on the 17th\u0026#39;\u0026#34; } } } ] } ] }  The Session tracks column is a Single line text column with below formatting applied.   { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;flex-wrap\u0026#34;: \u0026#34;wrap\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;135px\u0026#34;, \u0026#34;box-sizing\u0026#34;: \u0026#34;border-box\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;4px 8px 5px 8px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;50px\u0026#34;, \u0026#34;align-items\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;nowrap\u0026#34;, \u0026#34;overflow\u0026#34;: \u0026#34;hidden\u0026#34;, \u0026#34;margin\u0026#34;: \u0026#34;6px 4px 4px -12px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: { \u0026#34;operator\u0026#34;: \u0026#34;:\u0026#34;, \u0026#34;operands\u0026#34;: [ { \u0026#34;operator\u0026#34;: \u0026#34;==\u0026#34;, \u0026#34;operands\u0026#34;: [ \u0026#34;[$Sessiontrack]\u0026#34;, \u0026#34;Keynote\u0026#34; ] }, \u0026#34;sp-css-backgroundColor-BgWhite sp-field-borderBottomRegular sp-field-borderBottomSolid sp-css-borderColor-WhiteFont\u0026#34;, { \u0026#34;operator\u0026#34;: \u0026#34;:\u0026#34;, \u0026#34;operands\u0026#34;: [ { \u0026#34;operator\u0026#34;: \u0026#34;==\u0026#34;, \u0026#34;operands\u0026#34;: [ \u0026#34;[$Sessiontrack]\u0026#34;, \u0026#34;Product Roundtables\u0026#34; ] }, \u0026#34;sp-css-backgroundColor-BgDarkWhite sp-field-borderBottomRegular sp-field-borderBottomSolid sp-css-borderColor-WhiteFont\u0026#34;, { \u0026#34;operator\u0026#34;: \u0026#34;:\u0026#34;, \u0026#34;operands\u0026#34;: [ { \u0026#34;operator\u0026#34;: \u0026#34;==\u0026#34;, \u0026#34;operands\u0026#34;: [ \u0026#34;[$Sessiontrack]\u0026#34;, \u0026#34;Breakout\u0026#34; ] }, \u0026#34;sp-css-backgroundColor-BgWhite sp-field-borderBottomRegular sp-field-borderBottomSolid sp-css-borderColor-WhiteFont\u0026#34;, { \u0026#34;operator\u0026#34;: \u0026#34;:\u0026#34;, \u0026#34;operands\u0026#34;: [ { \u0026#34;operator\u0026#34;: \u0026#34;==\u0026#34;, \u0026#34;operands\u0026#34;: [ \u0026#34;[$Sessiontrack]\u0026#34;, \u0026#34;\u0026#34; ] }, \u0026#34;\u0026#34;, \u0026#34;\u0026#34; ] } ] } ] } ] } }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;overflow\u0026#34;: \u0026#34;hidden\u0026#34;, \u0026#34;text-overflow\u0026#34;: \u0026#34;ellipsis\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 3px\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;[$Sessiontrack]\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: { \u0026#34;operator\u0026#34;: \u0026#34;:\u0026#34;, \u0026#34;operands\u0026#34;: [ { \u0026#34;operator\u0026#34;: \u0026#34;==\u0026#34;, \u0026#34;operands\u0026#34;: [ \u0026#34;[$Sessiontrack]\u0026#34;, \u0026#34;Keynote\u0026#34; ] }, \u0026#34;sp-field-fontSizeSmall sp-css-color-BlackFont\u0026#34;, { \u0026#34;operator\u0026#34;: \u0026#34;:\u0026#34;, \u0026#34;operands\u0026#34;: [ { \u0026#34;operator\u0026#34;: \u0026#34;==\u0026#34;, \u0026#34;operands\u0026#34;: [ \u0026#34;[$Sessiontrack]\u0026#34;, \u0026#34;Product Roundtables\u0026#34; ] }, \u0026#34;sp-field-fontSizeSmall sp-css-color-BlackFont\u0026#34;, { \u0026#34;operator\u0026#34;: \u0026#34;:\u0026#34;, \u0026#34;operands\u0026#34;: [ { \u0026#34;operator\u0026#34;: \u0026#34;==\u0026#34;, \u0026#34;operands\u0026#34;: [ \u0026#34;[$Sessiontrack]\u0026#34;, \u0026#34;Breakout\u0026#34; ] }, \u0026#34;sp-field-fontSizeSmall sp-css-color-BlackFont\u0026#34;, { \u0026#34;operator\u0026#34;: \u0026#34;:\u0026#34;, \u0026#34;operands\u0026#34;: [ { \u0026#34;operator\u0026#34;: \u0026#34;==\u0026#34;, \u0026#34;operands\u0026#34;: [ \u0026#34;[$Sessiontrack]\u0026#34;, \u0026#34;\u0026#34; ] }, \u0026#34;\u0026#34;, \u0026#34;\u0026#34; ] } ] } ] } ] } } } ] } ] }  Now that the formatting is done, the list is embedded on the event page. Select the view to be shown, hide the command bar and Apply. We will cover the Dynamic filtering in the next section.   Optional: a SharePoint list to store session tracks information I added a support list in my site to help users filter down the sessions by tracks. This list is what is used to dynamically filter the sessions list as you see in the image above. So, when the user selects the track in the Tracks list, they will see sessions listed under the selected track in the Sessions list. The Tracks list has two columns, the default Title column and an About column, which is a multi-line text column.     I have used JSON formatting of the view on this list. Create a view for the list and apply the below JSON under \u0026ldquo;Format view\u0026rdquo;   View format JSON: { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/tile-formatting.schema.json\u0026#34;, \u0026#34;height\u0026#34;: 105, \u0026#34;width\u0026#34;: 310, \u0026#34;hideSelection\u0026#34;: false, \u0026#34;fillHorizontally\u0026#34;: false, \u0026#34;formatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-row-card sp-card-borderHighlight\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;310px\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;105px\u0026#34;, \u0026#34;border-color\u0026#34;: \u0026#34;=if([$Title] ==\u0026#39;Keynote\u0026#39;, \u0026#39;#0fc373\u0026#39;, if([$Title] ==\u0026#39;Product Roundtables\u0026#39;, \u0026#39;#ff8c0a\u0026#39;, if([$Title] ==\u0026#39;Breakout\u0026#39;, \u0026#39;#af78d2\u0026#39; \u0026#39;#0082f0\u0026#39;)))\u0026#34;, \u0026#34;border-style\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;border-width\u0026#34;: \u0026#34;2.5px\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;4px\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;4px 4px 4px 4px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;13px\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;column\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-bgColor-white sp-css-borderColor-neutralLight sp-card-subContainer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-displayColumnContainer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;4px 4px 4px 4px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;17px\u0026#34;, \u0026#34;font-weight\u0026#34;: \u0026#34;600\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;[$Title]\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralPrimary sp-card-content sp-card-highlightedContent\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=if ([$Title] == \u0026#39;\u0026#39;, \u0026#39;–\u0026#39;, [$Title])\u0026#34; } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0px 4px 4px 4px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;14px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-lastTextColumnContainer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;p\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;[$About]\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralPrimary sp-card-content \u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=if ([$About] == \u0026#39;\u0026#39;, \u0026#39;–\u0026#39;, [$About])\u0026#34; } ] } ] } ] } }  Next, on the event page, embed the Tracks list on the right hand side column in line with the Sessions list web part.   With the Tracks list now embedded, we can now look at the Dynamic filtering of the Sessions list. Connect the two lists as show in the image illustration below and save the page.    a SharePoint list to store people information For every event there are people behind it and I have used a third list to show this information. The reason I chose a list instead of the native people web part is, in the available space on page, I can show 5 people in one row using the list as opposed to 3 people with the people web part. I also get additional control with lists in terms of formatting and what information of the people is shown. The people list has two columns, the default Title column and a Person column.    Create a view for the list and apply the below JSON under \u0026ldquo;Format view\u0026rdquo;\n{ \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/tile-formatting.schema.json\u0026#34;, \u0026#34;height\u0026#34;: 76, \u0026#34;width\u0026#34;: 254, \u0026#34;hideSelection\u0026#34;: false, \u0026#34;fillHorizontally\u0026#34;: true, \u0026#34;formatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-container\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;button\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-defaultClickButton\u0026#34;, \u0026#34;role\u0026#34;: \u0026#34;presentation\u0026#34; }, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;defaultClick\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-bgColor-white sp-css-borderColor-neutralLight sp-card-borderHighlight sp-card-subContainer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-previewColumnContainer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;p\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-userEmptyText\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=if(length([$Member]) == 0, \u0026#39;–\u0026#39;, \u0026#39;\u0026#39;)\u0026#34; }, { \u0026#34;forEach\u0026#34;: \u0026#34;personIterator in [$Member]\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;a\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;=if(loopIndex(\u0026#39;personIterator\u0026#39;) \u0026gt;= 5, \u0026#39;sp-card-userContainer\u0026#39;, \u0026#39;sp-card-userContainer sp-card-keyboard-focusable\u0026#39;)\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(loopIndex(\u0026#39;personIterator\u0026#39;) \u0026gt;= 5, \u0026#39;none\u0026#39;, \u0026#39;\u0026#39;)\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;defaultHoverField\u0026#34;: \u0026#34;[$personIterator]\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;=getUserImage([$personIterator.email], \u0026#39;S\u0026#39;)\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;[$personIterator.title]\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;sp-card-userThumbnail\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(length([$Member]) \u0026gt; 5 \u0026amp;\u0026amp; loopIndex(\u0026#39;personIterator\u0026#39;) \u0026gt;= 4, \u0026#39;none\u0026#39;, \u0026#39;\u0026#39;)\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-bgColor-neutralLight ms-fontColor-neutralSecondary sp-card-userOthers\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(length([$Member]) \u0026gt; 5 \u0026amp;\u0026amp; loopIndex(\u0026#39;personIterator\u0026#39;) == 4, \u0026#39;\u0026#39;, \u0026#39;none\u0026#39;)\u0026#34; }, \u0026#34;customCardProps\u0026#34;: { \u0026#34;formatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-personCallout\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;forEach\u0026#34;: \u0026#34;personIterator in [$Member]\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-userContainer sp-card-userCustomCard\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(loopIndex(\u0026#39;personIterator\u0026#39;) \u0026lt; 4, \u0026#39;none\u0026#39;, \u0026#39;\u0026#39;)\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;defaultHoverField\u0026#34;: \u0026#34;[$personIterator]\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;=getUserImage([$personIterator.email], \u0026#39;S\u0026#39;)\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;[$personIterator.title]\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;sp-card-userThumbnail\u0026#34; } } ] } ] }, \u0026#34;openOnEvent\u0026#34;: \u0026#34;hover\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;=\u0026#39;+\u0026#39; + toString(length([$Member]) - (4))\u0026#34; } ] } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-userTitle\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if(length([$Member]) == 1, \u0026#39;\u0026#39;, \u0026#39;none\u0026#39;)\u0026#34; }, \u0026#34;defaultHoverField\u0026#34;: \u0026#34;[$personIterator]\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;[$Member.title]\u0026#34; } ] } ] } ] } ] } }  The result is a formatted people web part. Another good thing about this it also lets the users hover/select the people to get their office profile information.   Other web parts in the vertical section on the right-hand-side. Countdown timer: In the vertical section I thought it would be useful to have the countdown timer web part with a countdown towards the event date.   About web part  I used the fourth list web part to show \u0026ldquo;what\u0026rdquo;, \u0026ldquo;when\u0026rdquo;, \u0026ldquo;where\u0026rdquo;, \u0026ldquo;who\u0026rdquo; of the event.   The list is view formatted with the below JSON { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/tile-formatting.schema.json\u0026#34;, \u0026#34;height\u0026#34;: 350, \u0026#34;width\u0026#34;: 300, \u0026#34;hideSelection\u0026#34;: true, \u0026#34;fillHorizontally\u0026#34;: true, \u0026#34;formatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-row-card\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: {}, \u0026#34;customRowAction\u0026#34;: {} }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-bgColor-white sp-card-subContainer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-displayColumnContainer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;inline-block\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 4px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralSecondary sp-card-label\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;Info\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;inline-block\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 4px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;[!Title.DisplayName]\u0026#34; } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;p\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0px 0px 10px 28px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;[$Title]\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralPrimary sp-card-content sp-card-highlightedContent\u0026#34;, \u0026#34;role\u0026#34;: \u0026#34;heading\u0026#34;, \u0026#34;aria-level\u0026#34;: \u0026#34;3\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=if ([$Title] == \u0026#39;\u0026#39;, \u0026#39;–\u0026#39;, [$Title])\u0026#34; } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-displayColumnContainer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;inline-block\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 4px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralSecondary sp-card-label\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;Event\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;inline-block\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 4px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;[!When.DisplayName]\u0026#34; } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;p\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0px 0px 10px 28px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;[$Title]\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralPrimary sp-card-content sp-card-highlightedContent\u0026#34;, \u0026#34;role\u0026#34;: \u0026#34;heading\u0026#34;, \u0026#34;aria-level\u0026#34;: \u0026#34;3\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=if ([$When] == \u0026#39;\u0026#39;, \u0026#39;–\u0026#39;, [$When])\u0026#34; } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-card-displayColumnContainer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;inline-block\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 4px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralSecondary sp-card-label\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;TeamsLogo\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;inline-block\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 4px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;[!Where.DisplayName]\u0026#34; } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;p\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0px 0px 10px 28px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;[$Title]\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralPrimary sp-card-content sp-card-highlightedContent\u0026#34;, \u0026#34;role\u0026#34;: \u0026#34;heading\u0026#34;, \u0026#34;aria-level\u0026#34;: \u0026#34;3\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=if ([$Where] == \u0026#39;\u0026#39;, \u0026#39;–\u0026#39;, [$Where])\u0026#34; } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;sp-row-cardr\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;inline-block\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 4px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralSecondary sp-card-label\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;Group\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;inline-block\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0 4px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;[!Who.DisplayName]\u0026#34; } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;p\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;background-color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;white-space\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;0px 0px 10px 28px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;15px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;[$Title]\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-neutralPrimary sp-card-content sp-card-highlightedContent\u0026#34;, \u0026#34;role\u0026#34;: \u0026#34;heading\u0026#34;, \u0026#34;aria-level\u0026#34;: \u0026#34;3\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=if ([$Who] == \u0026#39;\u0026#39;, \u0026#39;–\u0026#39;, [$Who])\u0026#34; } ] } ] } ] } }  Finally towards the end of the event page, I added a Microsoft Forms link to collect a Net promoter score feedback question, and this would help me understand how users feedback the event. The final result is an event page made with SharePoint, and enhanced by SharePoint Spaces, Formatted Lists and other web parts.\n I believe SharePoint offers some amazing opportunities to create pages that can meet a variety of business needs. Hope you found the information in this post useful and I would love to see how you implement this and how you might enhance this. Feel free to comment.\n","image":"https://pnp.github.io/blog/post/create-an-event-page-with-sharepoint-sharepoint-spaces-and/images/AnandVRagav_0-1637611061380_hu375eed672066772b49e7430ffb43d0e5_2389166_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/create-an-event-page-with-sharepoint-sharepoint-spaces-and/","tags":["SharePoint"],"title":"Create an event page with SharePoint, SharePoint Spaces and formatted Lists"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"Viva Connections \u0026amp; SharePoint Framework bi-weekly community call recording from November 18th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary  Tune in each Tuesday for the Microsoft 365 platform community call. Featured topics for the November 23rd call - Introduction to SharePoint on-premises Microsoft Graph connector (Parag Jain) and Microsoft Learn module - Extend Microsoft Viva Connections with application customizers (Waldek Mastykarz \u0026amp; Vesa Juvonen). Register for training events in November \u0026ndash; December hosted by Sharing is Caring. Register for the PnP Recognition Program. New guidance released - Implementing partner offerings for Viva Connections with ACEs and custom APIs The Road Ahead after 1.13 \u0026ndash; 1.14 and future. PnP project releases in the last two weeks:  PnPjs Client-Side Libraries v2.11 GA CLI for Microsoft 365 v4.2.0 Preview. **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago)      PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.13.0 GA v1.14.0 January target PnPjs Client-Side Libraries v2.11.0 GA, v3.0.0 Preview nightly builds of v3 CLI for Microsoft 365 v4.0.0 GA, v4.2.0 Preview beta Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.4.0 3.5.0 with SPFx v1.13 support is coming soon Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1) 3.3.0 with SPFx v1.13 support is coming soon PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.4.1 Preview, v4.3.0 \u0026amp; v3.21.0 Release expected any day\n Additionally, there were 1 web part and 2 ACE samples delivered! Nice work! Your contributions are appreciated by many.\nThe host of this call is David Warner II (Catapult Systems) @DavidWarnerII. Q\u0026amp;A takes place as always in chat throughout the call. Great to see all of you today - humans and ghosts. Possibly some will meet in Düsseldorf or in Las Vegas later this year. Actions  Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  Ask me anything (AMA) MGT \u0026ndash; November 30th Ask me anything (AMA) PnP Search \u0026ndash; January 11th First Time Contributor Session \u0026ndash; December 15th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; November 24th, December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; TBS  Maturity Model Practitioners \u0026ndash; January 18th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   SPFx Extension for Copying and Moving List Items \u0026ndash; this application customizer displays a command button named Copy/Move Item(s) in custom lists. Using this option, the items can be copied or moved from one list to another within the site. User maps source and destination fields. Supported field types \u0026ndash; Single line of text, Choice, Number, DateTime, \u0026amp; Yes/No. Uses batch method to copy/move (50 items) at a time. Download extension from AppSource.\n  Viva Connections \u0026ndash; Adaptive Card Showcase Gallery \u0026ndash; shows art-of-the-possible - layout options on 11 Adaptive Card Extensions (ACE). Layouts - agenda, company news, expense report, flight itinerary, form sample, image rotator, stock ticker, task list, Twitter card, video card and weather. Focusing specifically on video card, it was initially created/tested in Adaptive Cards Designer. Then the JSON was copied into the ACE. Handling dynamic data is discussed in Q\u0026amp;A.   Application Secrets Expiration Web Part \u0026ndash; monitor expiration dates of secrets and certificates for your applications registered in Azure Active Directory. The web part displays app IDs, app names, app secrets, certificates and expiration dates in a list. Code walkthrough - see using Graph to retrieve applications/secrets/certificates from AAD. Organize items into a list that\u0026rsquo;s rendered using React controls. Search, sort and group by app, type and expiration date.   SPFx extension samples https://aka.ms/spfx-extensions\n **missing you! **  SPFx web part samples https://aka.ms/spfx-webparts\n  Teams Graph Upload as PDF - Markus Moeller | @moeller2_0 **PnP SPFx ACEs **https://aka.ms/spfx-aces\n  Hybrid Work Employee Check-in* - Arijit Mondal | linkedin.com/in/arijit-cloud\n  Upcoming Events* \u0026ndash; Updates - Jake Stanger | @cakestanger\n  * to be posted soon. Thank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 6:09 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 9:08 CLI for Microsoft 365 - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 11:33 PnP SPFx Controls - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 12:00 PnP Modern Search - Mikael Svenson (Microsoft) | @MikaelSvenson \u0026ndash; 12:36 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 13:35 PnP SPFx ACEs Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 16:02  Demos   D1: SPFx Extension for Copying and Moving List Items \u0026ndash; Sudharsan Kesavanarayanan (NTT Digital Business Solutions) | @sudharsank [\u0026ndash;][ 17:51]\n  D2:[ Viva Connections \u0026ndash; Adaptive Card Showcase Gallery \u0026ndash; ]Derek Cash-Peterson[ (Sympraxis Consulting) | @Spdcp \u0026ndash; 24:21]\n  D3:[ Application Secrets Expiration Web Part \u0026ndash; ]Aimery Thomas[ (Avanade) | @aimery_thomas][ \u0026ndash; 44:01]\n  Resources Additional resources around the covered topics and links from the slides.\n  D1: Repo - Copy/Move Item(s)   **D1: ** AppSource - Items Replicator   D2: Repo - ace-cardgallery\n  D2: Adaptive Cards - Samples and Templates   D2: Adaptive Cards \u0026ndash; Designer   D2: Video Demo - Building a COVID attestation solution for Microsoft Teams and Viva Connections with SPFx   D2: Sample - Covid Self-Attestation Microsoft Teams Personal App\n  D3: Samples - Applications Secrets Expiration\n  D3: Blog - Use Power Automate to Notify of Upcoming Azure AD App Client Secrets and Certificate Expirations\n  D3: LinkedIn \u0026ndash; Aimery Thomas\n  PnP Weekly \u0026ndash; Episode 143 (November 15th) with Nairobi, Kenya-based Program Manager at Microsoft - Roina Ochieng | @roinochieng | video | podcast\n  PnP Weekly \u0026ndash; Episode 142 (November 8th) with New York, US / Porto, Portugal-based Program Manager at Microsoft - Natalie Pienkowska | @ NataliePienkow1. | video | podcast\n  General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned   SharePoint dev documentation\n  SharePoint dev issue list **Upcoming calls | Recurrent invites: **\n  Microsoft 365 platform call \u0026ndash; November 23rdat 8:00 am PST | https://aka.ms/m365-dev-call\n  M365 General Dev call \u0026ndash; November 25th at 7:00 am PST | https://aka.ms/m365-dev-sig\n  SharePoint Framework call \u0026ndash; December 2nd at 7:00 am PST | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; December 8th at 8:00 am PST | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash;December 9that 9:00 am PST | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; December 15th at 8:00 am PST | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; December 16th at 9:00 am PST | https://aka.ms/IDDevCommunityCalendar Viva Connections \u0026amp; SharePoint Framework bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Connections, Microsoft Teams, SharePoint Online, and also on-premises. Calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Viva, Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 19th of November 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-18th-of/images/recording-18th-nov_hu67f794754e6b0a4a8216e9cd1eae4e3c_254857_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/viva-connections-amp-sharepoint-framework-community-call-18th-of/","tags":[],"title":"Viva Connections \u0026 SharePoint Framework Community Call -- 18th of November, 2021"},{"categories":["Community post"],"contents":"This week it came to attention two new possible actions to be used in buttons created using list formatting:\n setValue: Updates a field value openContextMenu: Displays the default context menu for the list item  With the first one, we can update the values of any field in the list item. And update multiple field values with a single click. Not only this but we can use dynamic values and do calculations using the JSON formatting formulas, for example, we could increment/decrement a number value by clicking a custom button created with JSON formatting. With that in mind, after seeing some samples on Twitter published by @techan_k, I thought this could be useful for approvals scenarios. For example, we can update the item status and who approved the item with a single click, so as in the example below:\n![quick app 2.gif](images/quick app 2.gif)\nThe structure behind the example\nThree list columns are needed:\n A Choice column for the status (Suggested name: \u0026lsquo;Item Status\u0026rsquo;), with the possible values: Pending, Approved, Rejected. The standard configurable formatting for the Choice column can do the trick as below:      A user field to register who approved or rejected the item (Suggested name \u0026lsquo;Approval Action By\u0026rsquo;) A dummy field to add the JSON template and display the buttons separately. The suggestion is to add a calculated field named \u0026lsquo;Approval\u0026rsquo;.  The logic behind the sample To make the functionality cleaner, the buttons would need to be displayed only when the items have not been approved. So we simply set the CSS display property to \u0026lsquo;none\u0026rsquo; when the status is not empty and is different than \u0026lsquo;Pending\u0026rsquo;. And display a text message stating that the item was already approved or rejected. On each button, we set as the customRowAction, an action using the new setField action, and pass two fields on each using their internal names. Note that to set the current user as the value, we simply pass the @me formula. Approval: \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;setValue\u0026#34;, \u0026#34;actionInput\u0026#34;: { \u0026#34;ItemStatus\u0026#34;: \u0026#34;Approved\u0026#34;, \u0026#34;ApprovalActionBy\u0026#34;: \u0026#34;@me\u0026#34; } }  Rejection: \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;setValue\u0026#34;, \u0026#34;actionInput\u0026#34;: { \u0026#34;ItemStatus\u0026#34;: \u0026#34;Rejected\u0026#34;, \u0026#34;ApprovalActionBy\u0026#34;: \u0026#34;@me\u0026#34; } }  Full sample To add this to any SharePoint list, create the columns as stated above, and add the following JSON template to the Approval field (resize it to get the buttons to be displayed horizontally/vertically as you wish). Tweak the internal names as needed in case your list uses different field names: { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;flex-directon\u0026#34;: \u0026#34;row\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;align-items\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;flex-wrap\u0026#34;: \u0026#34;nowrap\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if([$ItemStatus] == \u0026#39;Pending\u0026#39; || [$ItemStatus] == \u0026#39;\u0026#39;, \u0026#39;inherit\u0026#39;,\u0026#39;none\u0026#39;)\u0026#34;, \u0026#34;flex-directon\u0026#34;: \u0026#34;row\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;align-items\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;flex-wrap\u0026#34;: \u0026#34;wrap\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;button\u0026#34;, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;setValue\u0026#34;, \u0026#34;actionInput\u0026#34;: { \u0026#34;ItemStatus\u0026#34;: \u0026#34;Approved\u0026#34;, \u0026#34;ApprovalActionBy\u0026#34;: \u0026#34;@me\u0026#34; } }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-themePrimary ms-fontColor-themeDarker--hover\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;border\u0026#34;: \u0026#34;none\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;cursor\u0026#34;: \u0026#34;pointer\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-directon\u0026#34;: \u0026#34;row\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;align-items\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;flex-wrap\u0026#34;: \u0026#34;wrap\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;SkypeCircleCheck\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;padding\u0026#34;: \u0026#34;4px\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;Approve\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;word-break\u0026#34;: \u0026#34;keep-all\u0026#34; } } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;button\u0026#34;, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;setValue\u0026#34;, \u0026#34;actionInput\u0026#34;: { \u0026#34;ItemStatus\u0026#34;: \u0026#34;Rejected\u0026#34;, \u0026#34;ApprovalActionBy\u0026#34;: \u0026#34;@me\u0026#34; } }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-themePrimary ms-fontColor-themeDarker--hover\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;border\u0026#34;: \u0026#34;none\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;cursor\u0026#34;: \u0026#34;pointer\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-directon\u0026#34;: \u0026#34;row\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;align-items\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;flex-wrap\u0026#34;: \u0026#34;wrap\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;Blocked\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;padding\u0026#34;: \u0026#34;4px\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;Reject\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;word-break\u0026#34;: \u0026#34;keep-all\u0026#34; } } ] } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;=\u0026#39;This item is \u0026#39; + toLowerCase([$ItemStatus])\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;=if([$ItemStatus] == \u0026#39;Pending\u0026#39; ||[$ItemStatus] == \u0026#39;\u0026#39; , \u0026#39;none\u0026#39;,\u0026#39;inherit\u0026#39;)\u0026#34;, \u0026#34;padding-left\u0026#34;: \u0026#34;5px\u0026#34;, \u0026#34;word-break\u0026#34;: \u0026#34;keep-all\u0026#34; } } ] } ] }  Conclusion\nBy using list formatting and the new setValue action, we can now update field values, expanding a lot the possibilities of what can be done in SharePoint/Microsoft Lists without the need of the SharePoint Framework field customizers or other techniques (calling a Flow for example). This example is just a simple one to show how to update two fields at the same time and use the native formulas as values, but the possibilities now have expanded massively. Note:\nFor this approach to work correctly, all fields used in the JSON template need to be added to the list view where the custom buttons will be added.\n","image":"https://pnp.github.io/blog/post/quick-sharepoint-approvals-using-list-formatting-json-to-set/images/choices_hu7f664128fb6bd2fa0df28de1533744ef_14348_460x200_fill_box_smart1_3.PNG","permalink":"https://pnp.github.io/blog/post/quick-sharepoint-approvals-using-list-formatting-json-to-set/","tags":["SharePoint","List formatting"],"title":"Quick SharePoint Approvals using List formatting JSON to set field values"},{"categories":["Community post"],"contents":"While building an app that stores data in Dataverse, I came across a not easy to resolve problem. If you already follow me for a bit longer, you may assume that this is about ProvisionGenie, and so I will use this use case of provisioning Microsoft Teams teams and storing data about that as an example. To explain the issue, we first need to understand some basics, which I will cover here first:\nWhat is Dataverse    Dataverse is a is a secure and scalable SaaS data service, that sits right in Power Platform. Dataverse\u0026rsquo;s database is Azure SQL, and often, people refer to Dataverse just as \u0026lsquo;a database\u0026rsquo;, but it is so much more\n   I will not go into full detail in this blog post, but cover something that people with a background in Microsoft 365/SharePoint might not be aware of:\nHow does Dataverse distinguish from SharePoint lists and what makes it a \u0026lsquo;real database\u0026rsquo;? In Dataverse, we store data in tables, we can either use predefined ones or we can creates our own tables. We can choose from different kind of column types to store data just as needed. The beautiful thing that get our Dynamics 365 colleagues excited is, that Dataverse can serve as a \u0026lsquo;relational database\u0026rsquo;, which means that we can create all kinds of relationships between data, which gives us a better overview on data as we can put data into context.\nAlso, we have role-based access control (RBAC), which means that we can granularly control who can view, edit, delete etc. data, while this isn\u0026rsquo;t possible with SharePoint lists. If we use a list as data source for a Power Apps, we need to share the entire list with all users of that application, which means that users can even bypass the app and manipulate and delete data directly on the SharePoint site.\nNow you may ask, what is it about relationships in Dataverse that makes it so special?\nWhat kind of relationships do exist in Dataverse? [[   1-to-many relationships In a 1:N (1-to-many) relationship we associate a (1) row of a table to many other rows in a related table with a lookup column. We can see a list of the related rows that are associated with our primary table.\nYou will come across the term \u0026lsquo;N:1(many-to-1)\u0026rsquo; as well - it is the same thing as a 1:N relationship- just viewed from the related table, not from the parent/primary table.\nAs an example, please imagine a table Teams Requests and another related table Teams Channels. Each Team can have many channels, but a channel can be only associated with one Team (represented in the Teams Request table). This means, that we need to have a 1:N relationship between Teams Requests table and the Teams Channels table. We reference this like this: [   We get the correct environment, fetch the table Team Channels and filter by TeamsRequestId so that only the related channels to that Teams request will be returned.\nMany-to-many relationships An N:N (many-to-many) relationship depends on a special relationship table (intersect table), so that many rows of one table can be related to many rows of another table. We can see a list of all rows in the related table that our primary table is associated with.\nAs an example, please image now the Teams Requests table again that needs to be related to a Teams Users table. In this Teams Users table we want to store information on members and owners of the teams in the Teams Requests table.\nA Teams can have many users as members, and each user can be a member of different Teams.\nAlso, a team can have many users as owners and these users can be owners of several different teams.\nThis means, that we need to have two N:N relationships between teams Requests table and Teams Users table.\n[   Now the intersection tables come into play: They make sure that we can associate many rows of the related table to the primary table.\nIn Dataverse, we don\u0026rsquo;t get to see these intersection tables, but we can customize their name:\n   and we can make them visible when we create a model of the data in Power BI. This also helps us understand, what the intersection table is and how this works: The intersection tables sit in between of the primary table and the related table: primary table (1) --\u0026gt;(N) intersection table(N) \u0026lt;-- related table\n  How can you reference Many-to-Many Relationships in Azure Logic Apps? Now that the distinguishing element between an Owner of a Team and a Member of that Team is in the relationship, we need to reference that intersection table in a Logic App flow in order to fetch the right rows from the Teams User table to add them with the correct role to the Team that we want to provision.\nIn order to do so, we select the correct environment, and type the name of the relationship table followed by a set, then we filter for the correct Teams Request ID so that only members for that specific team will be returned.\n   The very same applies to the relationship table for the owners.\n   Conclusion Before you build your Power Platform solution, its absolutely worth it to spend a couple of thoughts on the data model. If you\n need more relationships than a simple lookup column need granular control who can access which rows a performant place to store data a highly scalable solution  then its very likely, that Dataverse is a service that you should consider.\nIn order to take full advantage of Dataverse\u0026rsquo;s capabilities in terms of being a \u0026lsquo;relational database\u0026rsquo; its worth it to understand what is an intersection table and how you can reference it.\nLet me know what you think in the comments :)\n","image":"https://pnp.github.io/blog/post/let-s-tame-dataverse-how-to-reference-many-to-many-relationships/images/platform_hu0d5cdade34ea0d899aec170822b1546b_41819_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/let-s-tame-dataverse-how-to-reference-many-to-many-relationships/","tags":["Dataverse"],"title":"Let's tame Dataverse: How to reference Many-to-Many-relationships in Azure Logic Apps"},{"categories":["CLI for Microsoft 365"],"contents":"Changing the URL of a site results in a new site type: a Redirect Site. However this redirect site does not get removed if you delete the newly renamed site. This could result in orphaned redirect site collections that redirect to nothing. This script provides you with an overview of all orphaned redirect sites and allows you to quickly delete them. This post will show you one of the most popular sample scripts created for the CLI for Microsoft 365. The original script was created by our community member Albert-Jan Schot.\n$sites = m365 spo site classic list --t \u0026#34;REDIRECTSITE#0\u0026#34; --output json | ConvertFrom-Json $sites | ForEach-Object { Write-Host -f Green \u0026#34;Processing redirect site: \u0026#34; $_.Url $siteUrl = $_.Url $redirectSite = Invoke-WebRequest -Uri $_.Url -MaximumRedirection 0 -SkipHttpErrorCheck $body = $null $siteUrl = $_.Url if($redirectSite.StatusCode -eq 308) { Try { [string]$newUrl = $redirectSite.Headers.Location; Write-Host -f Green \u0026#34; Redirects to: \u0026#34; $newUrl $body = Invoke-WebRequest -Uri $newUrl -SkipHttpErrorCheck } Catch{ Write-Host $_.Exception } Finally { If($body.StatusCode -eq \u0026#34;200\u0026#34;){ Write-host -f Yellow \u0026#34; Target location still exists\u0026#34; } If($body.StatusCode -eq \u0026#34;404\u0026#34;){ Write-Host -f Red \u0026#34; Target location no longer exists, should be removed\u0026#34; m365 spo site remove --url $siteUrl } } } } You can find this and many more samples on how to use the CLI for Microsoft 365 in our official samples section.\nWhat is the CLI for Microsoft 365? CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use. While building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects.\nTry it today Get the latest release of the CLI for Microsoft 365 from npm by executing:\nnpm i -g @pnp/cli-microsoft365 If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365.\nIf you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/post/let-s-tame-dataverse-how-to-reference-many-to-many-relationships/images/platform_hu0d5cdade34ea0d899aec170822b1546b_41819_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/remove-orphaned-redirect-sites-using-the-cli-for-microsoft-365/","tags":[],"title":"Remove orphaned redirect sites using the CLI for Microsoft 365"},{"categories":["Power Apps community call"],"contents":" Call summary Topics covered in this month\u0026rsquo;s community call include demos Power Apps Christmas Calendar + Games (Advent calendar with engaging games unlocked on Dec 18th and 23rd) - Craig Gregory @CrashLongJohns and\nTeams Provision Genie (Canvas app that simplifies the configuration and deployment of enterprise ready Teams sites) - Luise Freese | @LuiseFreese \u0026amp; Carmen Ysewijn | @CarmenYsewijn.\nRecent Power Apps News and Community Contributions (16 Power Apps announcements at Ignite and more) \u0026ndash; Charles Sterling (Microsoft) | @chass. This call was hosted by Todd Baginski (Canviz).\nThe call was recorded on November 17, 2021. Questions were addressed in chat throughout the call along with some live discussion. Thank for attending the call or viewing it on demand. Agenda  Power Apps Christmas Calendar + Games - Craig Gregory | @crashlongjohns \u0026ndash; 4:05 Teams Provision Genie - Luise Freese | @LuiseFreese \u0026amp; Carmen Ysewijn (Qubix) | @CarmenYsewijn \u0026ndash; 27:05 Recent Power Apps News and Community Contributions \u0026ndash; Charles Sterling (Microsoft) | @chass \u0026ndash; 63:44  Demos   D1: Power Apps Christmas Calendar + Games \u0026ndash; a 12-month countdown to fun that begins in December. Open a window each day, peeking ahead will not work. On 2 days in December, play games - Capture the Reindeer on the 18th and Catch This Elf on the 23rd. Game levels - easy, normal and hard. Uses timers, location, duration, shuffle and many images. Kid approved; the app will be published soon!\n  D2: Teams Provision Genie - The Canvas app that looks like a Teams Native app, deliberately prompts a team owner through the entire provisioning process. With support from Power Apps, Azure Logic Apps, Managed Identity, Dataverse (full), Graph, Deployment tools and Documentation Genie delivers a reliable, secure, informative, easy to deploy and truly enterprise ready solution. The presenters\u0026rsquo; step through the configuration of a Team that\u0026rsquo;s provisioned by Logic Apps.\n  Recent News \u0026amp; Cool Stuff  Blog (16 announcements) - Round up of the Ignite announcements for Power Apps!   Actions  Groups - Public Preview for User Groups  Join us for our next call: December 15, 2021 at 08:00am PST | https://aka.ms/powerappscommunitycall  Referenced in this session  D1: Wiki - Power Apps Advent Calendar Games D2: Blog - ProvisionGenie - an open-source provisioning engine for Microsoft Teams  D2: Documentation - ProvisionGenie  D2: Repo \u0026ndash; ProvisionGenie   Learn more  See the full blog post for this call on the Tech Community Blog - https://aka.ms/m365pnp/community/blog Microsoft\u0026rsquo;s Power Platform website Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - https://aka.ms/PowerAppsCommunitySamples Power Apps Community Videos -https://aka.ms/PowerAppsCommunityVideos PowerPlatformLearn Resources | https://www.powerplatformlearn.academy PnP Power Platform Samples | https://www.aks.ms/powerplatform-samples Power Addicts Hangout - https://wearepoweraddicts.com #LessCodeMorePower Video Series - https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Share more - draw attention to your great work - #PowerAppsCC  Stay connected  Twitter: https://twitter.com/MSPowerPlat Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/m365pnp/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/powerappscommunitycall  ","image":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-november-2021/images/PowerApps%20Thumb%20November%202021_hue7741d0f688a2e8d7531842da173fc89_235156_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-november-2021/","tags":[],"title":"Power Apps Community Call -- November 2021"},{"categories":["Microsoft 365 platform call"],"contents":" Microsoft 365 Platform Community Call - weekly community call recording from November 16th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call Summary\nWelcome to the weekly call focused on capabilities of the Microsoft 365 platform.  New to Microsoft 365 Platform development? Join the Microsoft 365 Developer Program today and instantly get a free E5 developer tenant and other assets.  Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Preview the Microsoft 365 Sample Solution Gallery with more than 600 samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and experience one of a growing number of events hosted by Sharing is Caring in November-December. Upcoming Ask Me Anything (AMA) sessions for PnPjs and for MGT in November and for PnP Search in January!  Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). PnP Weekly \u0026ndash; Episode 143 (November 15th) with Nairobi, Kenya-based Program Manager at Microsoft - Roina Ochieng | @roinochieng | video | podcast Hear about this week\u0026rsquo;s top 9 Microsoft 365 Platform related stories and view 2 demos from Microsoft presenters about working with the Microsoft 365 platform.  The host of this call was Brian T. Jackett (Microsoft) |@BrianTJackett. Q\u0026amp;A takes place in chat throughout the call\nMicrosoft 365 Platform News Flash\n  Breaking changes to attendance report in Microsoft Graph onlineMeeting API (beta)\n  Announcing Teams JS SDK v2 in public preview: Extend Teams apps across Microsoft 365\n  Guidance on implementing partner offerings for Viva Connections with ACEs and custom APIs\n  Register for Sharing is Caring Events:\n Ask me anything (AMA) MGT \u0026ndash; November 30th Ask me anything (AMA) PnP Search \u0026ndash; January 11th First Time Contributor Session \u0026ndash; December 15th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; November 24th, December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; TBS  Maturity Model Practitioners \u0026ndash; December 21st (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo\n  Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call\n  Call attention to your great work by using the #PnPWeekly on Twitter. It\u0026rsquo;s a full house and it\u0026rsquo;s great seeing each and everyone of you.   Demos Demos delivered in this session\n  Getting started on building Microsoft Teams tabs with Adaptive Cards - appreciate a unified developer experience - power everything in Teams with a Bot back-end and an Adaptive Cards front-end - Chat bots, message extensions, task modules and tabs! Step through setting up a Bot in Azure, building a tab with Adaptive Cards, adding a new card - creating card in Designer and copying JSON into VS Code, and finally rendering new card in Tab.   **Microsoft Learn Module - Extend Microsoft Viva Connections with Web Parts. **Objective \u0026ndash; build a SPFx 1.13 web part to surface important announcements (from a list) on Viva connections Desktop. Test web part in localhost, bundle and deploy. Developers own the web part\u0026rsquo;s UI \u0026ndash; the HTML and CSS, leaving content owners to add and configure web parts on a page. This demo focuses on Web Parts. Related demos focus on Adaptive Card Extensions and Application Customizers.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Brian T. Jackett (Microsoft) | @BrianTJackett \u0026ndash; 5:45 Demo 1: Getting started on building Microsoft Teams tabs with Adaptive Cards - Loki Meyburg | @LokiMeyburg \u0026ndash; 8:30 Demo 2: Microsoft Learn Module - Extend Microsoft Viva Connections with Web Parts - Waldek Mastykarz | @waldekm \u0026amp; Vesa Juvonen | @vesajuvonen \u0026ndash; 27:34  Resources Additional resources around the covered topics and links from the slides.\n  D1: Documentation - Build tabs with Adaptive Cards   **D1: **Designer - adaptivecards.io/designer   D2: Learn \u0026ndash; Extend Microsoft Viva Connections   D2: Documentation - Plan, build, and launch a home site for your organization   D2: Documentation - Support for Adaptive Cards   D2: Exercise - Extend Viva Connections desktop with web parts    General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Power Apps monthly call\u0026ndash; November 17th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; November 18th at 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft Identity Platform call \u0026ndash; November 18th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar Microsoft 365 platform call \u0026ndash; November 23rd at 8:00 am PDT | https://aka.ms/m365-dev-call M365 General Dev call \u0026ndash; November 25th at 7:00 am PDT | https://aka.ms/m365-dev-sig Office add-in monthly call \u0026ndash; December 8th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash;December 9th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.  More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 17th of November 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-16th-of-november-2021/images/recording-16th-m365-platform_hu84bc162d07daaf03f78a94922ceb07a6_552584_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-16th-of-november-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 16th of November, 2021"},{"categories":["Community post"],"contents":"Introduction In this article, we will see how to convert a Word Document to PDF in SharePoint Document Library using Power Automate without using any license version. Using this method will be a bit lengthy but if we don\u0026rsquo;t have the power to automate premium licenses then we can also achieve a solution. ![Group 1.png](images/Group 1.png)\nImplementation   Go to Power Automate \u0026gt; My flows \u0026gt; Select New flow \u0026gt; Select Automated Cloud Flow     It will ask for the flow name and trigger. Add flow name and choose a trigger when a file is created (properties only). A trigger is depending on our business requirement you can also choose when a file is created or modified too.     Select **Create.\n  Basically, we don\u0026rsquo;t have direct action to convert to PDF for SharePoint so first, we will create a library item/file in OneDrive and in one drive has an action to conversion so we will use one drive converter to convert to pdf format, and then we will move it to the library and delete it from one drive.*\nAt the end, our flow will be as below,\n   Now let\u0026rsquo;s see an implementation.\n  When a file is created (properties only)   Properties Value Site Address Select Site URL or Add Custom Site URL on which you want to run this flow Library Name Select Library Name\n    Get File content   Action: Select SharePoint Get file content\n Site Address Select Site URL or Add Custom Site URL on which you want to run this flow File Identifier [Select ]       Create a file to OneDrive  Action: Create a file for OneDrive for business  Folder Path Select folder path of one drive where you want or create a file File Name [Select ][File Name with extension] File Content [Select File Content - which we have created in the previous action]       Convert file to PDF - Action: Convert a file for OneDrive for business  Properties Value File Select Id [which we have created in the previous action] Target Type [Select ]\n   Create PDF File to OneDrive   Action: Create a file for OneDrive for business\n Folder Path Select folder path of one drive where you want or create a file File Name [Select ][File Name with extension] File Content [Select File Content - which we have created in the previous action]       Create PDF file to Document Library  Action: Create a file for SharePoint  Site Address Select Site URL Folder Path Select folder path of one drive where you want or create a file File Name [Select ][File Name with extension] File Content [Select File Content - which we have created in the previous action]       Delete word file from OneDrive   Action: Delete a file for OneDrive for business\n Properties Value Id Select eDrive word file ID\n      Delete PDF file from OneDrive   Action: Delete a file for OneDrive for business\n Properties Value Id Select eDrive PDF file ID\n   Output    Summary In this article, we have seen how to convert Word Document to PDF in SharePoint Document Library using Power Automate. Hope this helps! Sharing is caring!\n","image":"https://pnp.github.io/blog/post/how-to-convert-word-document-to-pdf-in-sharepoint-document/images/ChandaniPrajapati_0-1636792320998_hub760c87bd121d82d7feea875077c95ea_39800_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-convert-word-document-to-pdf-in-sharepoint-document/","tags":["Power Automate","SharePoint"],"title":"How to Convert Word Document to PDF in SharePoint Document Library using Power Automate?"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Nairobi, Kenya-based Program Manager at Microsoft - Roina Ochieng | @roinochieng, who works in the Microsoft Graph team focusing on the SDKs and tooling.\nTopics discussed in this session:  Working for a global organization with widely dispersed teams and with a growth mindset.  Thoughts on changes to how we work today - delivering impact vs activities.  Importance of local community engagement and events.  Being a woman in tech in sub-Saharan Africa. How might outsiders want to engage with regional communities? In Africa, consider problem led innovation. What\u0026rsquo;s coming in Graph SDK work? Project Kiota and all things enabling low friction tooling that helps people integrate with Microsoft 365 more easily.  We also covered 12 articles or videos by Microsoft and the community from the last week.\nPlease remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded in front of a non-audience on Monday, November 15, 2021. Enjoy the show.  Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.  These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Viva Connections mobile and new partner integrations are now generally available - Michael Holste (Microsoft) | @Mike_Holste Microsoft Tech Community Live: Microsoft Viva Edition - Microsoft  Community articles  New Microsoft 365 Patterns and Practices (PnP) team members \u0026ndash; November 2021 - Vesa Juvonen (Microsoft) | @vesajuvonen Matching the logged in user in a canvas app with a person column in SharePoint - Carmen Ysewijn (Qubix) | @CarmenYsewijn Collaborating on a Loop: Preparing for Microsoft Loop and the collaborative canvas - Rebecca Jackson (Avanade) | @RebeccaJLJ Cleaning Up Content Types Orphaned from the Content Type Hub - Marc D Anderson (Sympraxis Consulting) | @sympmarc Building a Microsoft Teams Bot: Deep linking to a Teams message from an Adaptive Card button - Vardhaman Deshpande (Valo Solutions) | @vrdmn Using the Graph Explorer to help Execute Graph PowerShell Commands - Liam Cleary | @helloitsliam How to Setup Teams \u0026amp; Microsoft 365 for Streamlined Knowledge Sharing Sessions (aka Lunch \u0026amp; Learn or ... - Cameron Dwyer (OnePlace Solutions) | @CameronDwyer Building a partner offering with Azure AD secured multi-tenant APIs and Viva Connections Adaptive Ca...- Paolo Pialorsi (PiaSys) | @paolopia Episode #180 - Consuming 3rd Party APIs in SPFx ACEs - Paolo Pialorsi (PiaSys) | @paolopia November 2021 DIWUG Meetup  Additional resources  Extend Microsoft Viva Connections - Microsoft Learn Consume a multi-tenant API within a set of Microsoft Viva Connections Adaptive Card Extensions (ACEs... solution in GitHub Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n*\u0026ldquo;Sharing is caring!\u0026rdquo; *\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-143-roina-ochieng-microsoft/images/Thumb-Ep143-November15_hua08bad852fb262a0a1a54edcb238b822_508989_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-143-roina-ochieng-microsoft/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 143 - Roina Ochieng (Microsoft)"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary Visit the Microsoft 365 tenant \u0026ndash; script samples gallery (114 scenarios and 156 scripts, using CLI for Microsoft 365, PnP PowerShell, SPO Management Shell tooling and more\u0026hellip;)? Sign up and attend an AMA and other events in November-December hosted by Sharing is Caring. At the same time, sign up for the PnP Recognition Program. Welcome to 9 new members to the Microsoft 365 PnP Team! We\u0026rsquo;re thrilled you have joined us.  Geetha Sivasailam | @GSiVed João Mendes (independent/Storm Technologies Ltd) | joaojmendes Stephan Bisser (Solvion) | @stephanbisser  Natalie Pienkowska (Microsoft) | @NataliePienkow1 Joel Rodrigues (Storm Technology Ltd) | @JoelFMRodrigues Tetsuya Kawahara (MVP) | @techan_k Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp Rick Van Rousselt (Advantive) | @rickvanrousselt Thomy Gölles (Solvion) | @thomyg  Project releases this week include Yo teams - generator-teams - v3.5.0 Preview and Yo teams - yoteams-build-core - v1.5.0 Preview2, and Yo teams \u0026ndash; yoteams-deploy - v1.1.0 Preview2. Open-source project status: (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.7.0 GA, PnP Provisioning Engine Schema v202103 Prepping for v1.8.0 - Winter 2022 PnP .NET Libraries - PnP Core SDK v1.4.0 GA, PnP Transformation Framework: Public Preview released! Prepping for v1.5.0 - Winter 2022, .NET 6 support PnP PowerShell v1.8.0 GA In progress: V2 POC, Prepping for v1.8, nightly releases Yo teams - generator-teams v3.4.0 GA, v3.5.0 Preview Support for Teams JS SDK v2.0 Yo teams - yoteams-build-core v1.4.0 GA, v1.5.0 Preview2 Yo teams \u0026ndash; yoteams-deploy v1.0.1 GA, v1.1.0 Preview2 Yo teams - msteams-react-base-component v3.1.1 Microsoft Graph Toolkit (MGT) v2.3.0 GA Preparing v2.3.1 release, Working on v3.0.0 - Aligning all Toolkit components to Fluent UI Web Components\n Note\nWhile version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities.\n ** **\nAs well, there were 14 new/updated script samples and 2 Power Platform Samples this week! The host of this call was Paolo Pialorsi (PiaSys.com) | @paolopia. Q\u0026amp;A takes place in chat throughout the call.\n  Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Give us feedback on the new consolidated M365 sample gallery   Register for Sharing is Caring Events:\n Ask me anything (AMA) PnPjs \u0026ndash; November 16th Ask me anything (AMA) MGT \u0026ndash; November 30th Ask me anything (AMA) PnP Search \u0026ndash; January 11th First Time Contributor Session \u0026ndash; December 15th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; November 24th, December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; TBS  Maturity Model Practitioners \u0026ndash; November 16th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Please do share your great work. **Microsoft Power Platform Samples: **(https://aka.ms/powerplatform-samples)\n  Template HelpDesk 2021*- Neiy Darry   Power Fx Date Functions* - Matthew Devaney | @mattbdevaney \u0026amp;\nLoïc Cimon | @LoicCimon\n  *Check the site for this latest sample **Script Samples: ** (https://aka.ms/script-samples)\n 8 New Samples + 6 Updated Samples🤩 \u0026ndash; WOW! Contributed by  Adam Wójcik | @Adam25858782 Valeras Narbutas (Macaw) | @ValerasNarbutas Rodrigo Pinto (Storm Technology) | @ScoutmanPt Srinivas Varukala (Microsoft) | @svarukala Jim Love | @jimmywim Reshmee Auckloo | @reshmeeauckloo    \u0026ndash; Fabulous!\nTogether Mode!  Great seeing everyone today. Perhaps we will meet in person soon at the European Collaboration and Cloud Summit in Düsseldorf, Germany and/or at the Microsoft 365 Collaboration Conference in Las Vegas, Nevada, US. Events are filling up, register soon. Demos Demos delivered in this session\n  **ProvisionGenie - a Teams provisioning engine on Power Apps and Azure Logic Apps \u0026ndash; **ProvisionGenie blends learning with the provisioning process. Elegantly and non-technically prompts user through Group, Site and Channel configuration. Team owner adds members and owners, libraries, columns and lists. Uses Logic Apps behind scenes to provision resources. Integrates Power Apps for UI, Azure Logic Apps (flows - actions), Managed Identity (authentication), Dataverse (data storage), Deployment (script and ARM template files) and has great documentation.\n  List item filtering on modern pages with complex dynamic view formatting \u0026ndash; make a list with topics and lengthy descriptions more readable and interactive. Create 2 new views (list and gallery) for the same list. Gallery view for button like navigation (topics), and List view to create mini navigation \u0026ndash; to move up/down through item descriptions. Use \u0026ldquo;ID\u0026rdquo; attribute that links everything together with anchors. Expose views on webpage. All bowser - client-side with out-of-the-box formatting.\n  Updates on Independent Publisher Connectors \u0026amp; myStrom Connector Demo \u0026ndash;\npresently there are 38 MVP produced certified connectors in production and 19 in the pipeline. Connectors are used by Power Automate, Power Apps, Azure Logic Apps. The myStrom connector handles authentication and basic switching capabilities (on/off, trigger automations) for home control system devices. Presenter\u0026rsquo;s solution triggers home control system actions based on current weather and air quality - displayed on a PowerBI dashboard.    Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics Topics covered in this call\n PnP .NET library updates -Paolo Pialorsi (PiaSys.com) | @paolopia \u0026ndash; 6:53 PnP PowerShell updates - Paolo Pialorsi (PiaSys.com) | @paolopia \u0026ndash; 8:51 yo Teams updates - Stephan Bisser (Solvion) | @stephanbisser \u0026ndash; 10:05 Microsoft Graph Toolkit updates -Sébastien Levert (Microsoft) | sebastienlevert \u0026ndash; 11:14 Microsoft Script Samples - Paul Bullock (CaPa Creative Ltd) | @pkbullock \u0026ndash; 2:36 Microsoft Teams Samples - Paolo Pialorsi (PiaSys.com) | @paolopia \u0026ndash; 13:12 Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam \u0026ndash; 13:51 Demo 1: ProvisionGenie - a Teams provisioning engine on Power Apps and Azure Logic Apps \u0026ndash; Luise Freese | @LuiseFreese \u0026amp; Carmen Ysewijn (Qubix) | @CarmenYsewijn [\u0026ndash;][ 15:56] Demo 2:[ List item filtering on modern pages with complex dynamic view formatting \u0026ndash; ]Chris Kent[ (DMI) | @theChrisKent \u0026ndash; 29:05] Demo 3:[ Updates on Independent Publisher Connectors \u0026amp; myStrom Connector Demo \u0026ndash; ]Natalie Pienkowska[ (Microsoft) | @NataliePienkow1 \u0026amp; ]Tomasz Poszytek[ | @TomaszPoszytek ][\u0026ndash;][ 41:46]  Resources Additional resources around the covered topics and links from the slides.\n D1: Repo \u0026ndash; ProvisionGenie  D1: Documentation - ProvisionGenie  D2: Documentation - Use column formatting to customize SharePoint  D2: Samples \u0026ndash; List Formatting (View samples \u0026gt; Content-browser) | (Sample available very soon) D3: Repo - Microsoft Power Platform Connectors  D3: Guidance - INDEPENDENT PUBLISHER CONNECTOR STEP BY STEP  D3: Video - Independent Publisher connector step by step  D3: Article - MICROSOFT FLOW IS NOT ONLY FOR BUSINESS  D3: Website \u0026ndash; MyStrom API for Developers  PnP Weekly \u0026ndash; Episode 142 (November 8th) with New York, US / Porto, Portugal-based Program Manager at Microsoft - Natalie Pienkowska | @ NataliePienkow1. | video | podcast  General resources  Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Microsoft 365 platform call \u0026ndash; November 16th at 8:00 am PDT | https://aka.ms/m365-dev-call Power Apps monthly call\u0026ndash; November 17th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; November 18th at 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft Identity Platform call \u0026ndash; November 18th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar M365 General Dev call \u0026ndash; November 25th at 7:00 am PDT | https://aka.ms/m365-dev-sig Office add-in monthly call \u0026ndash; December 8th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash;December 9th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall  General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n \u0026ldquo;Sharing is caring\u0026rdquo;\nMicrosoft 365 PnP team, Microsoft - 12th of November 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-11th-of/images/recording-11th-november_hu92238f2ff49c937a9af146155ad9c930_255815_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-11th-of/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 11th of November, 2021"},{"categories":["Community post"],"contents":"We are excited to announce that we are again extending our virtual Microsoft 365 Patterns and Practices (PnP) team with additional community members. PnP team is responsible of the different Microsoft 365 community activities in different community channels, including our open-source work in the GitHub. This team consist of Microsoft employees and community members (MVPs) focused on helping the community the best use of Microsoft products, like Microsoft Teams, Microsoft Viva, Power Platform, OneDrive, SharePoint or API layer like Microsoft Graph.\nWe announced our new PnP team model in April 2020 with additional community members (link fixing in progress) and are now further extending this team with 9 new community members. We believe that by working together as a one unified team across the organization barriers, we can make even larger worldwide impact and helping other community member to succeed on adopting different practices within [Microsoft 365] platform. \u0026ldquo;We are committed on building the best tech community in the world where everyone feels welcome and we help to empower each and every community member to achieve more.\u0026rdquo; 🧡\n Geetha Sivasailam - Business Applications MVP and an App Dev Architect\n   Geetha is a Business Applications MVP and an App Dev Architect with Artis Consulting a Microsoft Partner delivering business solutions leveraging Power Platform, Microsoft Azure, Custom App Dev implementations and various emerging technologies. She is passionate about enabling others to expand their possibilities and act more effectively with emerging tools and trends. She is also the co-founder of the Dallas Fort-Worth Power Platform UG.\nYou can follow her on Twitter, GitHub \u0026amp; blog. Natalie Pienkowska - Program Manager\n   Natalie Pienkowska is a Program Manager II at Microsoft on the Ecosystem Integrations team, where she leads the Microsoft Power Platform Connector Ecosystem, which includes Independent Publisher connector program and the Certified connector program. She is a Boston University alum who lives in New York City with her cat, enjoys biking around the city, and is passionate about environmental sustainability. Derek Cash-Peterson - Principal Architect\n   Derek is a Principal Architect at Sympraxis Consulting. Formerly a resident of Boston he is currently living with his family in Reykjavik, Iceland. He is a developer that focuses on design and user experience using M365 technologies. He is a co-maintainer of the PnP SPFX Adaptive Card Extension GitHub repository, co-maintainer of the Microsoft learning pathways GitHub repository, and a contributor to Sharing is Caring initiative.\nYou can read his blog at spdcp.com and his random thoughts on twitter @Spdcp\nOutside of work he can be seen wandering the streets of Reykjavik looking for new restaurants or pubs\nJoão J. Mendes - Senior SharePoint Developer and MVP\n   Hi, my name is João Mendes, I\u0026rsquo;m Portuguese living in Porto, Portugal. I\u0026rsquo;m Senior SharePoint Developer at Valo, my key role is to create applications for the Microsoft 365 ecosystem using SPFx, FluentUI, React, TypeScript. and node.js . I love to develop front-end applications. I am an active member of the PnP community, with several contributions in repositories such as SharePoint Framework Client-Side Extensions, Reusable React controls, SharePoint Framework Client-Side Web Part. I love contributing to the community and sharing knowledge and helping others. When I\u0026rsquo;m not coding, I love hanging out with my family, getting to know new places and cultures, taking some pictures and listening music. You can follow me on twitter or on https://joaojmendes.com Joel Rodrigues - SharePoint Developer and MVP\n   Joel is a Microsoft MVP for Office development and SharePoint developer at Storm Technology where he builds business solutions for multiple clients.\n\nHe is also a maintainer of the PnP Controls repositories and a contributor to other PnP repositories. Occasional blogger and conference speaker. He strongly believes that contributing to the technical community is the best way to help the technology evolve. His blog is available at www.m365-dev.com and you can follow him on @JoelFMRodrigues. Outside of work, I am generally keeping my young son busy and visiting places around the UK.\nRick Van Rousselt - Managing Consultant\\Technical Evangelist \u0026amp; MVP\n   Rick is a consultant, speaker and author living in Belgium. He\u0026rsquo;s been working with SharePoint since 2007 and made the transition to Office 365 and Azure. His main focus is development, but as you all know... working with SharePoint, Microsoft 365 and Azure will require you to understand a bit from everything. He\u0026rsquo;s a managing partner @Advantive Belgium and you can connect with him on various platforms. If Rick is not online he\u0026rsquo;s spending time with his family or visiting a community event.\nStephan Bisser - Technical Lead \u0026amp; MVP\n   Stephan is a technical lead working for Solvion from Austria focusing on the topics Teams platform and Conversational AI. Therefore his aim is to bring as much intelligent applications like bots and others into the customer\u0026rsquo;s modern workplace. In April 2018, Stephan was also awarded as a Microsoft MVP for AI for contributing to various open-source projects, speaking at many conferences, sharing his knowledge on his blog or even writing his very own book. Apart from work, as a already retired football player, Stephan loves to play football or spend time otherwise with his kids \u0026amp; family. Tetsuya Kawahara - SharePoint Developer and MVP\n   Tetsuya is a Microsoft MVP in Office Development and a SharePoint Developer. He has been working with SharePoint since SharePoint Server 2013, building internal workflow systems and bulletin boards.\n\nHe also loves List Formatting in SharePoint development and contributes to the community GitHub repository. You can read his blogs at https://mynote365.hatenadiary.com and tweets @techan_k.\n\nWhen Tetsuya is not working, he often watches manga, anime, and movies. Thomas Gölles - Head of Modern Workplace Solutions and MVP\n   Together with his colleagues, Thomas is responsible for a business unit that delivers customer projects on top of Microsoft 365 and selected Azure services at Solvion in Graz, Austria. His personal focus at the moment is on Teams apps based on .NET and Blazor. As an active member of the Microsoft365 community and Microsoft MVP, he is co-organizer of CollabDays Vienna, Office 365 Meetup Graz, Office 365 Meetup Vienna. Together with friends he is running pod/videocasts at selectedtech.show and at365.de. Outside of work Thomas is a football fan that likes to cook and loves spending time with his young family and friends.\n If you are looking for more details on what [Microsoft 365]{.brand} Patterns and Practices (PnP) is all about, see more details on the different activities and projects from https://aka.ms/m365pnp, including all community calls, open-source projects, samples and more. There are also numerous exciting new projects under development which will be released as open-source solutions soon addressing Microsoft Teams, OneDrive, Microsoft Graph and SharePoint areas. We want to thank also the countless of other community members who have been involved on this journey for past years. We still consider this as just a start and are looking your feedback and input to further improve the processes and model we use. Got ideas, feedback, comments on our community work? Don\u0026rsquo;t hesitate to let us know. We are here for you. Everyone is welcome!\nSharing is Caring!\nPrevious related announcements\n New Microsoft 365 Patterns and Practices (PnP) team members \u0026ndash; May 2021 - Gautam Sheth (Valo Solutions) and Patrick Lamber (Experts Inside AG) New Microsoft 365 Patterns and Practices (PnP) team members - February 2021 - April Dunnam (Microsoft), Emily Mancini (Sympraxis Consulting) and Veronique Lengelle (CPS) New Microsoft 365 Patterns and Practices (PnP) team members - December 2020 - Luise Freese and Sébastien Levert  New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 - Albert-Jan Schot (Portiva), Koen Zomers (Microsoft), Paul Bullock (CaPa Creative), Rabia Williams (Microsoft) and Yannick Plenevaux (PVX Solutions)   Friday 7th of May, 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-11th-of/images/recording-11th-november_hu92238f2ff49c937a9af146155ad9c930_255815_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/new-microsoft-365-patterns-and-practices-pnp-team-members/","tags":[],"title":"New Microsoft 365 Patterns and Practices (PnP) team members -- November 2021"},{"categories":["Community post"],"contents":"Recently, I came across an interesting issue using people columns in a SharePoint list. We were working with a list in which multiple roles had been identified (reviewer, approver, etc.). Depending on the role a certain person had for a specific item, they should be able to take different actions in the canvas app built on top of that list. For example: approve an item if they are listed as the approver. We tried to achieve this by checking that the logged in user\u0026rsquo;s email corresponds to the email of the person for that role. In most cases, this worked. However, in some cases, a user that is listed as an approver for an item did not see the approve/reject option. After some debugging, we figured out this was due to the fact that there was a mismatch between the result of the User().Email function in canvas apps, which returns the email of the logged in user, and the Approver.Email result, which is the email of the person in the Approver column.\nThe problem To illustrate this problem, and the solution, I built a simple Holiday approval canvas app with a similar setup to the client application. In the below screenshots, you can see the logged-in user\u0026rsquo;s email address in the top right corner of the application, below their display name. One or more of the items in the list are assigned to each of the users. If the logged in user is the approver, they should have the Approve/Reject option available in the list, which is indicated with the canvas apps \u0026ldquo;DockCheckIcon\u0026rdquo; icon.        The first user, Hermione, does not give any issues. The email address of the logged-in user matches that of the approver in the SharePoint list, so the icon is visible. For the second user, Harry, the logged-in user\u0026rsquo;s email is listed as Harry.Potter@domain.com. However, in the list it is Chosen.One@domain.com, the primary alias that was defined for the user. Since these do not match, the icon is not visible. Finally, for the third user, Ron, only the capitalization between the two email addresses differs, giving the same result: the icon is not visible. The root cause here is that we are comparing different things: the result of the User().Email function and Approver.Email property in the SharePoint list is not based on the same thing. I suspect User().Email actually provides the UPN (User Principal Name) of the user, whereas the **Approver.Email **property is the primary email. This is not necessarily constant, and can change for multiple reasons. Therefore, this is not a valid check to make.\nThe solution Instead of comparing two different things, we should compare the UPN for both the logged-in user and the approver in the SharePoint list. Let\u0026rsquo;s first get the UPN for the logged-in user. Since I am only [**assuming **]{.mark .has-inline-color .has-secondary-color}that the User().Email function returns the UPN, but I\u0026rsquo;m not sure about this (and this could potentially change in the future), I will not user this for the check. Instead, I will create a global variable for the UPN in the OnStart of the app and use the Office365Users connector and the available MyProfileV2() function to return the profile of the user currently logged in to the app. The profile contains a UserPrincipalName property, which is what we need. The **OnStart **of the app is as follows:\nSet(varLoggedInUserUPN,Office365UsersV2.MyProfile().userPrincipalName)\nFor the approvers, we will need a different function, since we don\u0026rsquo;t need the logged in user\u0026rsquo;s profile, but the profile of the user specified in the approver column for each item in the list. In this case, I\u0026rsquo;m using the UserProfileV2() function. ⚠ Make sure to use V2 for this one. The UserProfile() function without V2 will not work with the email address, only with the UPN (which we don\u0026rsquo;t have, we are looking for it). To make the icon visible only when there is a match, set the Visible property of the icon to\nOffice365Users.UserProfileV2(ThisItem.Approver.Email).userPrincipalName = varLoggedInUserUPN If we now go back to the application for our 3 users, the approve icon will be visible when relevant for them.\nFor Hermione, the result is exactly the same. For Harry and Ron, it now looks different.      A closing note This approach is not ideal, especially when working with larger datasets. Since every item in the gallery items causes a call to the Office 365 Users connector to get the user profile, this may cause some delay in loading the screen and specifically the approve icon. An alternative to avoid this call, could be using the Claims property that you can get from the Approver column properties (and trimming the prefix). In my tests, this seemed to be the user principal name (in lowercase), but I could not immediately find any confirmation for this. For this reason, and the fact that at the customer the dataset was rather small too, I have not used this approach. If you would be taking this approach however, make sure to decapitalize the UPN for the logged-in user too, otherwise there might be a mismatch still.\n","image":"https://pnp.github.io/blog/post/matching-the-logged-in-user-in-a-canvas-app-with-a-person-column/images/Hermione-IconVisible_hu793da6a876921edae0d7f2e7ee9bd9a1_1007750_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/matching-the-logged-in-user-in-a-canvas-app-with-a-person-column/","tags":["Power Apps","SharePoint"],"title":"Matching the logged in user in a canvas app with a person column in SharePoint"},{"categories":["Microsoft 365 platform call"],"contents":" Microsoft 365 Platform Community Call - weekly community call recording from November 9th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call Summary\nWelcome to the weekly call focused on capabilities of the Microsoft 365 platform.  New to Microsoft 365 Platform development? Join the Microsoft 365 Developer Program today and instantly get a free E5 developer tenant and other assets. Get started with free training modules to accelerate learning Microsoft 365 platform capabilities. Preview the Microsoft 365 Sample Solution Gallery with more than 600 samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and attend one of a growing list of events hosted by Sharing is Caring in November-December. Upcoming Ask Me Anything (AMA) sessions for PnPjs and for MGT in November and for PnP Search in January!  Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). View or audio only the latest episode of PnP Weekly \u0026ndash; Episode 142 (November 8th) with New York, US / Porto, Portugal-based Program Manager at Microsoft - Natalie Pienkowska | @ NataliePienkow1. | video | podcast Hear about this week\u0026rsquo;s top 9 Microsoft 365 Platform related stories and view 2 demos from Microsoft presenters about working with the Microsoft 365 platform.  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call Microsoft 365 Platform News Flash\n  Ignite 2021: Excel add-ins and data types\n  Ignite 2021: Building apps for collaboration in a hybrid world\n  Microsoft Graph @ Ignite 2021\n  Announcing public preview of Azure Fluid Relay service @ Ignite 2021\n  Stay in the flow of work with new collaborative apps for Microsoft Team\n  Microsoft 365 Developer Program launches new instant sandbox with Teams sample data pack\n  Microsoft Ignite Fall 2021: Innovations coming to Microsoft Teams\n  Viva Connections mobile and new partner integrations are now generally available\n  Announcing new Microsoft Viva partner integrations\n  Actions\n Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition Give us feedback on the new consolidated M365 sample gallery  Register for Sharing is Caring Events:  Ask me anything (AMA) PnPjs \u0026ndash; November 16th Ask me anything (AMA) MGT \u0026ndash; November 30th Ask me anything (AMA) PnP Search \u0026ndash; January 11th First Time Contributor Session \u0026ndash; December 15th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; November 24th, December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; TBS  Maturity Model Practitioners \u0026ndash; November 16th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Thank you everybody (200+) for being part of this community call today. Awesome to see everyone in the house.\nDemos Demos delivered in this session\n  Introduction to Embedded Search Box (ESB) \u0026ndash; with few lines of code, add Microsoft search box to any intranet site/page for easy and secure access to internal information. Merges web and work experiences. Uses familiar Bing UX to call Microsoft search and catalog behind scenes. Does not use the Bing Search Engine. Pulls people, file, conversations, PowerBI results and more. No cost with E3+ and Govt Cloud licensing.\n  Microsoft Learn Module - Extend Microsoft Viva Connections with Adaptive Card Extensions \u0026ndash; use Viva Connections to communicate important announcements to employees. Designate a home site and create announcements list on SharePoint. Demo shows creating/scaffolding project, configuring in VS Code how important announcements are surfaced, testing card functionality in localhost, packaging and installing card in App Catalog, deploying card to tenant, to site and adding card to dashboard. Develop one card used in both desktop and mobile.\n  Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 7:52 Demo 1: Introduction to Embedded Search Box \u0026ndash; Shubham Gatkal (Microsoft) \u0026ndash; 11:45  Demo 2:[ Microsoft Learn Module - Extend Microsoft Viva Connections with Adaptive Card Extensions \u0026ndash; ]Waldek Mastykarz[ (Microsoft) | @waldekm \u0026amp; ]Vesa Juvonen[ (Microsoft) | @vesajuvonen ]\u0026ndash; 22:35  Resources Additional resources around the covered topics and links from the slides.\n  D1: Documentation - Add a search box to your intranet site   D1: Documentation - Security and Privacy for Microsoft Search in Bing   D2: Learn - Extend Microsoft Viva Connections   D2: Documentation - Plan, build, and launch a home site for your organization   General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Office add-in monthly call \u0026ndash; November 10th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; November 11th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call \u0026ndash;November 11th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Microsoft 365 platform call \u0026ndash; November 16th at 8:00 am PDT | https://aka.ms/m365-dev-call\n  Power Apps monthly call\u0026ndash; November 17th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  SharePoint Framework call \u0026ndash; November 18th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Microsoft Identity Platform call \u0026ndash; November 18th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.    More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 10th of November 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-9th-of-november-2021/images/recording-9th-november_hu3c93dac9e7e228af834eec70cabc3f72_541254_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-9th-of-november-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 9th of November, 2021"},{"categories":["Adaptive Cards community call"],"contents":"The following topics are covered in this month\u0026rsquo;s community call:\n FactSet + Adaptive Cards (rendering Adaptive Cards in their products) Matt Pineau (FactSet) and Andrew Curtice (FactSet), v1.5 Release (shipped v1.5 of our schema! New features include: RTL support, Input.Text masking, ActionSet overflow, Tooltip for Actions, Table element, Static filtered choicesets and Action.isEnabled) - J.P. Roca (Microsoft) and finally Q\u0026amp;A \u0026ndash; members of the Developer and PM teams fielded questions on a host of topics for the last 20 minutes on this call.  This call was hosted by J.P. Roca (Microsoft) | @jpthepm. Recorded on October 14, 2021.  Agenda  FactSet + Adaptive Cards 🤝- Matt Pineau (FactSet) and Andrew Curtice (FactSet) \u0026ndash; 00:29 v1.5 Release 📢 - J.P. Roca (Microsoft) | @jpthepm \u0026ndash; 23:42 Q\u0026amp;A ❔ - with members of Microsoft Developer and PM teams \u0026ndash; 26:58  Demo **FactSet + Adaptive Cards **FactSet - a financial services company, utilizes and has extended Adaptive Cards in their Signals product to proactively deliver brief and atomic information to customers. Adaptive Cards are integrated through Power Automate into Microsoft Teams and Outlook. FactSet\u0026rsquo;s WorkStation product uses the Extensibility feature of Adaptive Cards in its Fusion UI renderer to deliver responsiveness across platforms with little code. Q\u0026amp;A throughout.\nReferenced in this call  API - signals-api | https://developer.factset.com/api-catalog/signals-api (includes the /events/adaptive-cards URL endpoints AND a document Client Workflow and Triggers for each Signal, that shows example adaptive cards. General website - FactSet.com | http://factset.com  Resources in General  Let us know the features you need https://aka.ms/ACRoadmap Schema Explorer - https://adaptivecards.io/explorer/Action.Execute.html Designer - https://adaptivecards.io/designer/  Get started with Templating - https://aka.ms/ACTemplating Browse the Adaptive Cards Code - https://aka.ms/ACRepo Find tools, sample cards and more - https://www.madewithcards.io Contribution Guidelines \u0026ndash; https://aka.ms/ACRepo   Stay connected  Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365PnP/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/adaptivecardscommunitycall Next call \u0026ndash; November 11th at 09:00am PDT  ","image":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-october-2021/images/adaptive-cards-October%20THumb_huda05566ddc1ec30513e796397392dfdf_292469_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-october-2021/","tags":["Adaptive Cards"],"title":"Adaptive Cards community call -- October 2021"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by New York, US / Porto, Portugal-based Program Manager at Microsoft - Natalie Pienkowska | @ NataliePienkow1.\n Topics discussed in this session \u0026ndash;\n  How Natalie got involved in community, in Microsoft, and in community work at Microsoft.  Learn about Natalie\u0026rsquo;s Power Platform Connectors program and how you your work can be in products used by organizations Worldwide.  The necessity of a \u0026ldquo;workcation\u0026rdquo; in Porto, Portugal \u0026ndash; flexibility in a hybrid going asynchronous work world. 3 solid tips for woman in IT. Evolution of the external connectors program that now includes Credly badges.   [We also covered 15 articles or videos by Microsoft and the community from the last week. ]\n Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n  This session was recorded in front of a non-audience on Monday, November 8, 2021. Enjoy the show.   Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.   These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot;  Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\n Microsoft articles   Microsoft Ignite 2021 - Book of News - Microsoft Rich, secure content and collaboration for hybrid work \u0026ndash; Ignite 2021 announcements - Jeff Teper (Microsoft) | @jeffteper Announcing new Microsoft Viva partner integrations - Geeta Ramakrishnan Stay in the flow of work with new collaborative apps for Microsoft Teams - Nicole Herskowitz (Microsoft) | @nicolelamb Ignite 2021: Building apps for collaboration in a hybrid world - Ben Summers (Microsoft) | @bensum365 Microsoft 365 Developer Program launches new instant sandbox with Teams sample data pack - Michael Aldridge Power Platform News Rewind Microsoft Ignite 2021 - April Dunnam (Microsoft) | @aprildunnam New Microsoft 365 hybrid work and collaboration experiences to save you time - Omar Shahine (Microsoft) | @OmarShahine   Community articles   Displaying User Photos in Modern Lists and Libraries \u0026ndash; Modern Settings - Marc D Anderson (Sympraxis Consulting) | @sympmarc SharePoint Site Scripts and Site Designs in Power Automate - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Working with MSAL and multiple Azure AD accounts in a React SPA - Vardhaman Deshpande (Valo Solutions) | @vrdmn Configure Postman to be easily used with any Azure AD protected API (SharePoint, Graph, custom etc.) - Sergei Sergeev | @sergeev_srg Episode #179 - Consuming Microsoft Graph data in SPFx ACEs - Paolo Pialorsi (PiaSys) | @paolopia How to create custom site templates in SharePoint - Giuliano De Luca | @delucagiulian How to use Microsoft Loop components early in Microsoft Teams - Darrell Webster (WM Reply) | @DarrellaaS   Additional resources   Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp   If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n *\u0026ldquo;Sharing is caring!\u0026rdquo; *\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-142-natalie-pienkowska/images/Thumb-Ep142-November8_huc966a3b4035c5dbe3148f68a11f6a231_556942_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-142-natalie-pienkowska/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 142 - Natalie Pienkowska (Microsoft)"},{"categories":["Microsoft 365 developer podcast"],"contents":"Greg Taylor brings his wealth of experience in Exchange to the show, discussing the upcoming deprecations in the Exchange online service.\nListen to the show here: Exchange Deprecations with Greg Taylor (m365devpodcast.com)\nLinks from the show  Upcoming API Deprecations in Exchange Web Services for Exchange Online - Microsoft Tech Community Basic Authentication and Exchange Online \u0026ndash; September 2021 Update https://http://aka.ms/graphtapform  Microsoft News  Announcing SharePoint Framework 1.13 \u0026ndash; Extending Microsoft Viva Connections Microsoft Ignite 2021 guide to SharePoint, OneDrive, Viva, Lists, Syntex, Stream, Visio and more  Community Links  Getting working hours/time zones for other users using Microsoft Graph API Simple Teams Tab Single-Sign-On with Microsoft Graph (@wictor) Sending e-mails with Microsoft Graph using .NET (@zimmergren) Sending Emails Using Microsoft Graph PowerShell (@helloitsliam) Microsoft Graph PowerShell \u0026ndash; Backticks vs. Splatting vs. Class Objects (@helloitsliam)  ","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-exchange-deprecations-with-greg-taylor/","tags":[],"title":"M365 Dev Podcast - Exchange Deprecations with Greg Taylor"},{"categories":["CLI For Microsoft 365"],"contents":"When was the last time you backed up all the flows in your environment?\nBy combining the CLI for Microsoft 365 and PowerShell we can make this task easy and repeatable. This script will get all flows in your default environment and export them as both a ZIP file for importing back into Power Automate and as a JSON file for importing into Azure as an Azure Logic App. This post will show you one of the most popular sample scripts created for the CLI for Microsoft 365. The original script was created by our community member Garry Trinder. Write-Output \u0026#34;Getting environment info...\u0026#34; $environment = m365 flow environment list --query \u0026#39;[?contains(displayName,`default`)] .name\u0026#39; Write-Output \u0026#34;Getting Flows info...\u0026#34; $flows = m365 flow list --environment $environment --asAdmin --output json | ConvertFrom-JSON Write-Output \u0026#34;Found $($flows.Count)Flows to export...\u0026#34; $flows | ForEach-Object { Write-Output \u0026#34;Exporting as ZIP \u0026amp; JSON... $($_.displayName)\u0026#34; $filename = $_.displayName.Replace(\u0026#34; \u0026#34;,\u0026#34;\u0026#34;) $timestamp = Get-Date -Format \u0026#34;yyyymmddhhmmss\u0026#34; $exportPath = \u0026#34;$($filename)_$($timestamp)\u0026#34; $flowId = $_.Name m365 flow export --id $flowId --environment $environment --packageDisplayName $_.displayName --path \u0026#34;$exportPath.zip\u0026#34; m365 flow export --id $flowId --environment $environment --format json --path \u0026#34;$exportPath.json\u0026#34; } Write-Output \u0026#34;Complete\u0026#34;  You can find this and many more samples on how to use the CLI for Microsoft 365 in our official samples section.\nWhat is the CLI for Microsoft 365? CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use. While building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects. Try it today Get the latest release of the CLI for Microsoft 365 from npm by executing: npm i -g @pnp/cli-microsoft365  If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365. If you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/export-backup-all-your-flows-from-an-environment-using-the-cli/","tags":[],"title":"Export/Backup all your flows from an environment using the CLI for Microsoft 365"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from November 4th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary Tune in each Tuesday for the Microsoft 365 platform community call. Featured topics for the November 9th call - Introduction to Embedded Search Box (Shubham Gatkal) and Progressive Web Apps and Microsoft Learn Module - Extend Microsoft Viva Connections with Adaptive Card Extensions (Waldek Mastykarz \u0026amp; Vesa Juvonen). Register for training events in November \u0026ndash; December hosted by Sharing is Caring. Register for the PnP Recognition Program. Adaptive Card Extensions (ACEs) design guidance is now available. SharePoint Framework v1.13 is now GA with Viva Connections extensibility support. Engineering focus laid out in Road Ahead for SPFx v1.14. PnP project releases in the last two weeks - PnPjs Client-Side Libraries v3.0.0 Preview, CLI for Microsoft 365 v4.2.0 Preview, and PnP Modern Search v4.4.1 Preview. **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago)  PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.13.0 GA v1.14.0 January target PnPjs Client-Side Libraries v2.10.0 GA, v3.0.0 Preview nightly builds of v3 CLI for Microsoft 365 v4.0.0 GA, v4.2.0 Preview Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.4.0 3.5.0 with SPFx v1.13 support is coming soon Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1) 3.3.0 with SPFx v1.13 support is coming soon PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.4.1 Preview, v4.3.0 \u0026amp; v3.21.0 Release expected any day\n Additionally, there was 1 extension, 5 web part and 3 ACE samples delivered! Outstanding! Your contributions are greatly appreciated by many. The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place as always in chat throughout the call. Great to see all of you today. Looking forward to seeing some of you in Düsseldorf or in Las Vegas later this year. Actions  Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; December 15th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; November 24th, December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; November 9th  Maturity Model Practitioners \u0026ndash; November 16th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Microsoft 365 Tenant Service Health - Viva Connections Adaptive Card Extension \u0026ndash; building an ACE to keep Tenant Admins up to date on tenant service health via mobile and desktop devices. The extension uses card view and multiple quick views to display affected issues and services in a tenant. Microsoft Graph is used to get service health data (issues). Submit action handling in ACE and Quick View, theme-based display. Complete and neatly delivered code walkthrough.\n  React News Web Part \u0026ndash; presentation opens with a demo of the SPFx ReactNewsWebpart that displays thumbnail, article, link to article, preview description, creation date, likes and comments from SharePoint site(s) the logged in user is authorized to view. In properties, select display style (stack, single), show author, and select sites to search. Nice code step through until technical issues prematurely ended the demo.   SPFx Design Patterns - Custom Properties (Part 1) \u0026ndash; an overview of OOB Property Field Types \u0026ndash; Boolean, Choice, Slider\u0026hellip; with practical tips for deciding which types to use to deliver concise and predictable options to user. This demo was cut short due to technical issues, so Part 2 to be delivered in a future call, will focus on custom - not out-of-the-box Property Field Types you may want to add to your solution.\n  SPFx extension samples: (https://aka.ms/spfx-extensions)\n Change Page Layout Type \u0026ndash; Sudharsan K. | @sudharsank  SPFx web part samples: (https://aka.ms/spfx-webparts)\n  List Items Menu \u0026ndash; João Mendes | joaojmendes\n  Kanban Board \u0026ndash; Alex Terentiev | @alexaterentiev\n  React Calendar \u0026ndash; Mohammed Amer | @Mohammad3mer\n  Modern Calendar \u0026ndash; Peter Paul Kirschner | @petkir_at\n  Find Parker \u0026ndash; Adam Wojcik | @Adam25858782   * to be posted soon. **PnP SPFx ACEs **https://aka.ms/spfx-aces\n  Today\u0026rsquo;s Lunch Information* \u0026ndash; Luis Mañez | @luismanez\n  Service Health - Updates* \u0026ndash; Anoop Tatti | @anooptells\n  Transport for London Status* - Updates \u0026ndash; Anoop Tatti | @anooptells\n  * to be posted soon. Thank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 7:07 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 9:55 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 11:34 PnP SPFx Controls -Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 12:26 PnP Modern Search - Mikael Svenson (Microsoft) | @MikaelSvenson PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 14:00 PnP SPFx ACEs Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 16:58  Demos   D1: Microsoft 365 Tenant Service Health - Viva Connections Adaptive Card Extension \u0026ndash; Anoop Tatti (Content+Cloud) | @anooptells [\u0026ndash;][ 19:26]\n  D2: React News Web Part \u0026ndash; Alison Collins | ReactIntern [\u0026ndash;][ 43:21]\n  D3: SPFx Design Patterns - Custom Properties \u0026ndash; Hugo Bernier (Microsoft) | @bernierh [\u0026ndash;][ 32:47]\n  Resources Additional resources around the covered topics and links from the slides.\n  D1: Sample - Service health   D1: Video - Getting started on building Microsoft Viva Connection adaptive card components using SPFx   D1: Ignite Session \u0026ndash; Get started with Microsoft Viva Connections Extensibility \u0026ndash; Vesa Juvonen \u0026amp; Waldek Mastykarz   D2: Blog site \u0026ndash; Graphgod   D2: LinkedIn - Alison Collins   D2: Sample - SharePoint News Posts with SPFx   D2: PnP Samples site - Samples by Framework   D2: PnP SPFx Controls - Reusable React controls for your SharePoint Framework solutions\n  D3: Documentation - Make your SharePoint client-side web part configurable   D3: Documentation - Integrate web part properties with SharePoint   Microsoft 365 PnP Weekly \u0026ndash; Episode 140 (October 25th) with Sweden based MVP and Chief Technical Architect at Advania - Simon Ågren | @AgrenPoint\n  Microsoft 365 PnP Weekly - Episode 141 (November 1st) with UK-based SharePoint developer and MVP at Storm Technology - Joel Rodrigues | @JoelFMRodrigues. | video | podcast\n  General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned   SharePoint dev documentation\n  SharePoint dev issue list Upcoming calls | Recurrent invites: (Subject to Updates in September)\n  Microsoft 365 platform call \u0026ndash; November 9th at 8:00 am PDT | https://aka.ms/m365-dev-call\n  Office add-in monthly call \u0026ndash; November10th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; November 11th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call \u0026ndash;November 11th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; November 17th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  SharePoint Framework call \u0026ndash; November 18th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Microsoft Identity Platform call \u0026ndash; November 18th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 5th of November 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-4th-of-november-2021/images/recording-4th-november_hud3837ac579417fa03d46ec94546f2a98_262852_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-4th-of-november-2021/","tags":[],"title":"SharePoint Framework Community Call -- 4th of November, 2021"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from November 2nd, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call Summary\nWelcome to the weekly call focused on capabilities of the Microsoft 365 platform.  New to Microsoft 365 Platform development? Join the Microsoft 365 Developer Program today and get a free E5 developer tenant and other assets. New Learning Path - Extend Microsoft Viva Connections - free training modules to accelerate learning Microsoft 365 platform capabilities. Preview the Microsoft 365 Sample Solution Gallery with more than 600 samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and attend one of a growing list of events hosted by Sharing is Caring in November. Upcoming Ask Me Anything (AMA) sessions for CLI for Microsoft 365 and for PnPjs.  Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). View or Cast the latest episode of Microsoft 365 PnP Weekly \u0026ndash; Episode 141 (November 1st) with UK-based SharePoint developer and MVP at Storm Technology - Joel Rodrigues | @JoelFMRodrigues. | video | podcast Microsoft 365 Community (PnP) \u0026ndash; October 2021 update is now available. Hear about this week\u0026rsquo;s top Microsoft 365 Platform related stories Ignite watch party: Microsoft Ignite 2021 opening keynote \u0026ndash; Satya Nadella (Microsoft) | @satyanadella. Event wrap \u0026ndash; keynote highlights - favorite announcements shared by call viewers.  The host of this call was Sébastien Levert (Microsoft) | sebastienlevert. Q\u0026amp;A takes place in chat throughout the call Microsoft 365 Platform News Flash\n  Learn how to extend Microsoft Viva Connections\n  New Microsoft Teams features improve call and meeting quality\n  Introducing Microsoft Teams Real-time Call Quality Analytics\n  What\u0026rsquo;s New in Microsoft Teams | October 2021\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; November 3rd (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; November 24th, December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; November 9th  Maturity Model Practitioners \u0026ndash; November 16th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo\n  Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call\n  Call attention to your great work by using the #PnPWeekly on Twitter. Here we in a large, but comfortably intimate expo hall at Microsoft Ignite 2021! Thank you for taking the time to join us today. Hope you have a great event.   Microsoft Ignite 2021 announcements (and there will be more!)\n Blog post - Microsoft Ignite Fall 2021: Innovations coming to Microsoft Teams Blog post - Rich, secure content and collaboration for hybrid work \u0026ndash; Ignite 2021 announcements Blog post - New Power Platform capabilities announced at Microsoft Ignite Blog post - Microsoft Lists announcements - Ignite 2021 (Nov.2-4) Blog post - What\u0026rsquo;s new and coming to files experiences in Microsoft 365 at Microsoft Ignite Blog post - Announcing new Microsoft Viva partner integrations  Blog post - What\u0026rsquo;s new in Security and Compliance in SharePoint, OneDrive, and Teams \u0026ndash; Ignite 2021 Announcements Blog post - Microsoft Graph @ Ignite 2021 Blog post - Ignite 2021: Building apps for collaboration in a hybrid world  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Microsoft Identity Platform call \u0026ndash; November 18th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar \n  SharePoint Framework call \u0026ndash; November 4th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Microsoft 365 platform call \u0026ndash; November 9th at 8:00 am PDT | https://aka.ms/m365-dev-call\n  Office add-in monthly call \u0026ndash; November 10th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; November 11th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call \u0026ndash;November 11th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; November 17th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.    More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 3rd of November 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-2nd-of-november-2021-microsoft/images/recording-2nd-nov_hu3c93dac9e7e228af834eec70cabc3f72_485262_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-2nd-of-november-2021-microsoft/","tags":[],"title":"Microsoft 365 Platform Call -- 2nd of November, 2021 - Microsoft Ignite 2021 watch party"},{"categories":["PnP Weekly"],"contents":" In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by UK-based SharePoint developer and MVP at Storm Technology - Joel Rodrigues | @JoelFMRodrigues.\n Topics discussed in this session \u0026ndash;\n  Cultural differences experienced in career transition from Portugal to UK How Joel became an MVP Joel\u0026rsquo;s PnP focus - PnP Controls and PnPjs.  Why contribute?  How to juggle day-to-day work and community work?  Embracing and maintaining different code styles across a project.  Upon submitting code to community, start thinking about scale from day one.  Microsoft vs Community owned tools. Joel\u0026rsquo;s recent focus \u0026ndash; Azure functions, authentication and PnP Provision engine work. Samples vs blueprints    [We also covered 13 articles by Microsoft and the community from the last week. ]\n Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n  This session was recorded in front of a non-audience on Monday, November 1, 2021. Enjoy the show.   Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.   These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot;  Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\n Microsoft articles   What\u0026rsquo;s New in Microsoft Teams | October 2021 - Microsoft Preview of Feedback for Microsoft Teams now available - Alex Olsen (Microsoft) How the Microsoft 365 App Compliance program helps enable a secure Teams app ecosystem - John Gruszczyk (Microsoft) New Microsoft Teams features improve call and meeting quality - Robert Aichner (Microsoft) Your Guide to Microsoft Teams at Microsoft Ignite Fall 2021 - Microsoft Microsoft Ignite 2021 guide to SharePoint, OneDrive, Viva, Lists, Syntex, Stream, Visio and more - Mark Kashman (Microsoft) | @mkashman SharePoint Roadmap Pitstop: October 2021 - Mark Kashman (Microsoft) | @mkashman Learn how to extend Microsoft Viva Connections - Rabia Williams (Microsoft) | rabwill OData property changes to Microsoft 365 usage reports API in Microsoft Graph - Microsoft Graph team   Community articles   It\u0026rsquo;s finally here! Developers can now charge money for Microsoft Teams apps in the App Store - Tom Morgan (Modality) | @tomorgan Managing Microsoft Teams using the Microsoft Graph PowerShell - Liam Cleary | @helloitsliam spfx-fast-serve with SPFx 1.13 support - Sergei Sergeev | @sergeev_srg Working with MSAL and multiple Azure AD accounts in a React SPA - Vardhaman Deshpande (Valo Solutions) | @vrdmn   Additional resources   Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp   If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n *\u0026ldquo;Sharing is caring!\u0026rdquo; *\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-141-joel-rodrigues-storm/images/Thumb-Ep141-November1_hu8e69d2f5540ac1dee9d5c58d91bab005_446943_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-141-joel-rodrigues-storm/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 141 - Joel Rodrigues (Storm Technologies)"},{"categories":["Microsoft 365 Developer Community Call"],"contents":" Call summary SharePoint Framework v1.13 is now generally available! Have you visited the Microsoft 365 tenant \u0026ndash; script samples gallery (106 scenarios and 142 scripts, using CLI for Microsoft 365, PnP PowerShell, SPO Management Shell tooling and more\u0026hellip;)? Last chance to register for Hacktoberfest 2021 \u0026ndash; submit pull requests by October 31st. Sign up and attend a session in November hosted by Sharing is Caring. At the same time, sign up for the PnP Recognition Program. Join your community mates during the Microsoft 365 platform call on November 2nd @ 8 AM PT for a Microsoft Ignite watch party. Project releases this week include Yo teams - generator-teams - v3.4.0 GA and Yo teams - yoteams-build-core - v1.4.0. Open-source project status: (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.7.0 GA, PnP Provisioning Engine Schema v202103 Prepping for v1.8.0 - Winter 2022 PnP .NET Libraries - PnP Core SDK v1.4.0 GA, PnP Transformation Framework: Public Preview released! Prepping for v1.5.0 - Winter 2022 PnP PowerShell v1.8.0 GA In progress: V2 POC, Prepping for v1.8, nightly releases Yo teams - generator-teams v3.4.0 GA Yo teams - yoteams-build-core v1.4.0 GA Yo teams \u0026ndash; yoteams-deploy v1.0.1 GA Yo teams - msteams-react-base-component v3.1.1 Microsoft Graph Toolkit (MGT) v2.3.0 GA Working on v3.0.0\n Note\nWhile version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities.\n As well, there were 12 new/updated script samples and 1 Power Platform Samples this week. The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\n  Next Tuesday, join us during the Microsoft 365 platform call for the PnP Community Ignite watch party \u0026ndash; Satya Nadella\u0026rsquo;s keynote @ 8 AM PT. Note: Possible daylight savings time changes in your country. Call created in US Pacific Time Zone.\n  Register today for Hacktoberfest 2021 \u0026ndash; https://hacktoberfest.digitalocean.com \u0026ndash; Event closes October 31st.\n  Register for Microsoft Ignite 2021 (Digital event) - November 2-4, 2021   Opt into PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; November 3rd (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor \u0026ndash; November 24th, December 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; November 9th  Maturity Model Practitioners \u0026ndash; November 16th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Operators standing by for your sample **Microsoft Power Platform Samples: **(https://aka.ms/powerplatform-samples)\n  Covid Vaccine Survey* - Siddharth Vaghasia | @siddh_me *Check the site for this latest sample **Script Samples: ** (https://aka.ms/script-samples)\n  11 New Samples + 6 Updated Samples🤩 \u0026ndash; WOW! Contributed by\n Valeras Narbutas (Macaw) | @ValerasNarbutas Adam Wójcik | @Adam25858782 Rodrigo Pinto (Storm Technology) | @ScoutmanPt Marc D Anderson (Sympraxis Consulting LLC) | @sympmarc Russell Gove (Tronox) | @russgove    \u0026ndash; Thank you 👏\nTogether Mode!  Are there ghosts or shadows occupying seats in this week\u0026rsquo;s Together Mode photo? Mention during call about people \u0026quot;beaming up/down\u0026quot; to the theater today? Demos Demos delivered in this session\n  Configuration-as-Code for Microsoft 365 with Microsoft365DSC Desire State Configuration \u0026ndash; a PowerShell Module that represents your entire Microsoft 365 tenant\u0026rsquo;s configuration as code and allows DevOps to monitor and control configuration discrepancies. Capabilities include automate, export, synchronize, access, monitor, and report. Learn what it is, how to use PowerShell script to find/create a policy, import/export a configuration, monitor config drift, ways to maintain a desired state, etc. Q\u0026amp;A throughout.\n  Automatically recognize your team champions 🏆 with CLI for Microsoft 365 \u0026ndash; with existing cmdlets in CLI, query criteria and a business objective (ID champions), Tenant Admins can modify general site wide reporting (i.e., chat, file activity) to identify top active Microsoft Teams contributors or SharePoint users within a timeframe. For chat ranking in a channel - count messages, replies, likes, comments by contributor, return top 3. Via Webhook, send Adaptive Card to communicate champion status.   Updates on Independent Publisher Connectors \u0026amp; Care Quality Commissions Connector Demo \u0026ndash; 13 custom connectors added in October. Create a connector earn a Credly badge. Get a look at the CQC connector that takes data from the Care Quality Commission in England - independently gathers data on care service providers. A Power App elegantly displays care provider rankings by location calling 2 flows that get location details via the connector in the back-end.    Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics Topics covered in this call\n  PnP .NET library updates -Bert Jansen (Microsoft) | @O365bert \u0026ndash; 7:39\n  yo Teams updates - Albert-Jan Schot (BLIS.digital) | @appieschot \u0026ndash; 9:30\n  Microsoft Graph Toolkit updates - Sébastien Levert (Microsoft) | sebastienlevert \u0026ndash; 11:27\n  Microsoft Script Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 3:17\n  Microsoft Teams Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 13:14\n  Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam \u0026ndash; 13:50\n  D1: Configuration-as-Code for Microsoft 365 with Microsoft365DSC \u0026ndash; Nik Charlebois (Microsoft) | @NikCharlebois [\u0026ndash;][ 16:02]\n  D2: Automatically recognize your team champions 🏆 with CLI for Microsoft 365 \u0026ndash; Albert-Jan Schot (BLIS.digital) | @appieschot [\u0026ndash;][ 35:42]\n  D3: Updates on Independent Publisher Connectors \u0026amp; Care Quality Commissions Connector Demo \u0026ndash; Natalie Pienkowska (Microsoft) | @NataliePienkow1 \u0026amp; Martyn Lesbirel (Dynamiti) \u0026ndash; 48:09\n  Resources Additional resources around the covered topics and links from the slides.\n D1: Repo - Microsoft365DSC  D1: Repo \u0026ndash; Microsoft365DSC Resources List  D1: Tool - Microsoft365DSC - Configuration-as-Code for the Cloud  D2: Tools - CLI for Microsoft 365 | https://aka.ms/cli-m365 D2: Repo - CLI for Microsoft 365  D2: Article - Recognize active team members with the CLI for Microsoft 365  D2: Article - Recognize contributions using the CLI for Microsoft 365  D2: Article - How to send Adaptive Cards with CLI Microsoft 365  D2: Tool \u0026ndash; Adaptive Cards IO Designer  D3: Repo - Microsoft Power Platform Connectors  D3: Article - Power Apps Loading Spinners, Saving Spinners and Progress Bars  PnP Weekly \u0026ndash; Episode 140 (October 25th) with Sweden based MVP and Chief Technical Architect at Advania - Simon Ågren | @AgrenPoint  General resources  Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Microsoft 365 platform call \u0026ndash; November 2nd at 8:00 am PDT | https://aka.ms/m365-dev-call\n  SharePoint Framework call \u0026ndash; November 4th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; November10th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; November 11th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call \u0026ndash;November 11th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; November 17th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; November 18th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n   \u0026ldquo;Sharing is caring\u0026rdquo;\nMicrosoft 365 PnP team, Microsoft - 29th of October 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-28th-of-october/images/recording-28th-oct_huc6b3600bc5deb68acb6c7b6ae73c9766_246599_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-28th-of-october/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 28th of October, 2021"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from October 26th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  New to Microsoft 365 Platform development? Join the Microsoft 365 Developer Program today and get a free E5 developer tenant and other assets. New Learning Path - Extend Microsoft Viva Connections - free training modules to accelerate learning Microsoft 365 platform capabilities. Preview the Microsoft 365 Sample Solution Gallery with more than 600 samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and attend one of a growing list of events hosted by Sharing is Caring in November. Upcoming Ask Me Anything (AMA) sessions for CLI for Microsoft 365 and for PnPjs.  Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). View or Cast the latest episode of PnP Weekly \u0026ndash; Episode 140 (October 25th) with Sweden based MVP and Chief Technical Architect at Advania - Simon Ågren | @AgrenPoint Registration for Microsoft Ignite (Digital event) and join the Ignite watch party. Microsoft 365 Community (PnP) \u0026ndash; October 2021 update is now available. Hear about this week\u0026rsquo;s top Microsoft 365 Platform related stories and view 2 demos from Microsoft presenters about working with the Microsoft 365 platform.  The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call Microsoft 365 Platform News Flash\n  Announcing SharePoint Framework 1.13 \u0026ndash; Extending Microsoft Viva Connections\n  OData property changes to Microsoft 365 usage reports API in Microsoft Graph\n  Use end-to-end encryption for one-to-one Microsoft Teams calls\n  Actions  Next week, join your PnP Community mates in this regularly scheduled Microsoft 365 Platform Community Call time slot for a Microsoft Ignite 2021 watch party. View Satya Nadella\u0026rsquo;s keynote, comment in chat. Note: Possible daylight savings time conflicts in your country as this call was created in US - Pacific Time Zone. Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; November 3rd (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor - October 27th Inaugural session PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  Ask Me Anything (AMA) - CLI for Microsoft 365 \u0026ndash; November 9th Ask Me Anything (AMA) \u0026ndash; PnPjs \u0026ndash; November 16th First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; November 9th  Maturity Model Practitioners \u0026ndash; November 16th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Thank you everybody for being part of the call today. Join us next Tuesday at this same time for a Microsoft Ignite 2021 watch party. Demos Demos delivered in this session\n  Getting started with hub associations in SharePoint - building the hub of hubs \u0026ndash; learn about associated hubs and actions - how to set up a hub (designate a site as a hub), register a hub site, associate sites to a hub, and associating hubs to hubs. What can be done from Site Settings vs Admin Center. Hub association limits - 2000 hubs, 3 levels. Associate hubs primarily to associate content \u0026ndash; search of designated sites, no theme inheritance.   Progressive Web Apps and Beyond: Supercharging OneDrive \u0026amp; SharePoint web apps \u0026ndash; learn about Project Nucleus is a client-side component + local Smart Cache and web server that runs alongside the OneDrive sync app, expressly to increase \u0026ndash; speed and consistency, whether on-line or off-line, of apps supported by OneDrive and SharePoint. Project Nucleus works in concert with Progressive Web Apps responsible for rendering apps when off-line. Preview the integration between Project Nucleus and Microsoft Lists, Q\u0026amp;A, Roadmap.\n  Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 8:42 Demo 1: Getting started with hub associations in SharePoint - building the hub of hubs \u0026ndash; Cathy Dew (Microsoft) | @catpaint1 \u0026ndash; 12:06 Demo 2: Progressive Web Apps and Beyond: Supercharging OneDrive \u0026amp; SharePoint web apps \u0026ndash; Andrey Esipov (Microsoft) \u0026ndash; 33:03  Resources Additional resources around the covered topics and links from the slides.\n  D1: Documentation - SharePoint hub sites overview   D1: Documentation - Planning your SharePoint hub sites   D1: Article - Associate a SharePoint site with a hub site   D2: Documentation - Overview of Progressive Web Apps (PWAs)   PnP Weekly \u0026ndash; Episode 140 (October 25th) with Sweden based MVP and Chief Technical Architect at Advania - Simon Ågren | @agrenpoint. | video | podcast\n  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) |\n@jthake and Paul Schaeflein (Addin365) | pschaeflein\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   M365 General Dev call \u0026ndash; October 28th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Microsoft 365 platform call (Ignite Watch Party) **\u0026ndash; **November 2nd at 8:00 am PDT | https://aka.ms/m365-dev-call\n  SharePoint Framework call \u0026ndash; November 4th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; November 10th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash; November 11th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; November 17th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; November 18th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.    More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 27th of October 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-26th-of-october-2021/images/recording-26th-oct_hu95608713b9150dff13fd7cee4b4fbc2a_590538_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-26th-of-october-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 26th of October, 2021"},{"categories":["PnP Weekly"],"contents":" In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Sweden based MVP and Chief Technical Architect at Advania - Simon Ågren | @agrenpoint. Simon was last on PnP Weekly exactly 100 episodes ago.  Topics discussed in this session include: \\\n Simon\u0026rsquo;s role as Chief Technical Architect focusing on Modern Work in the Knowledge Factory within Advania. Top of mind with customers right now \u0026ndash; Microsoft Viva and maximizing value of Microsoft 365 product investments - a strategy conversation.  How you can use the Microsoft 365 Maturity Model with customers to measure their success/progress. Change the place you work and change the way you work - hybrid, remote, asynchronous. Microsoft Teams\u0026rsquo; evolution and a transitioning corporate culture \u0026ndash; meeting dynamics, remote synchronous vs asynchronous work, decision empowerment, knowledge sharing, and embracing a diversity of workstyles.  Simon\u0026rsquo;s latest important contribution to the Microsoft Graph Toolkit. It all started with a blog post and a commitment to single sign-on in Teams.  Why Simon contributes to open source? It\u0026rsquo;s a desire to learn, share, simplify, participate. Mutual positive experiences as with working with the Microsoft Graph Team.   We also covered 15 articles by Microsoft and the community from the last week.  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n  This session was recorded in front of web cams in totally audience free rooms on Monday, October 25, 2021.\n  Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.   These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot;  Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\n Microsoft articles   Manage your Microsoft Teams apps with the Developer Portal - Karthig Balendran (Microsoft) | @KarthigBalendr1 Developing real-time collaborative apps with Azure, Microsoft 365, Power Platform, and GitHub - Dan Wahlin (Microsoft) | @DanWahlin Announcing SharePoint Framework 1.13 \u0026ndash; Extending Microsoft Viva Connections - Microsoft   Community articles   Customizing Lists best practices [guest blog and video] - Norm Young (UnlimitedViz) | @stormin_30 How 3 makers, 2 devs and a princess came together to save kittens for a hackathon - Luise Freese | @LuiseFreese CLI for Microsoft 365 v4.1 - Garry Trinder (Microsoft) | garrytrinder Connecting to SharePoint Online to On-Premises Databases with SharePoint Framework - Simon Doy (iThink365) | @simondoy Azure Cloud Shell issue when using CLI for Microsoft 365 - Workaround - Arjun Menon (Tata Consultancy Services) | @arjunumenon Connect Modern SharePoint Web Parts - Laura Rogers (IW Mentor) | @WonderLaura Sparsely Populated SharePoint Complex Columns and Power BI - Mark Anderson (Sympraxis Consulting) | @sympmarc Simple Teams Tab Single-Sign-On with Microsoft Graph - Wictor Wilen (Microsoft) | @wictor Microsoft Graph PowerShell \u0026ndash; Backticks vs. Splatting vs. Class Objects - Liam Cleary | @helloitsliam Microsoft Graph PowerShell Filtering Working and Failures - Liam Cleary | @helloitsliam Episode #177 - Data Binding in SharePoint Framework ACEs - Paolo Pialorsi (PiaSys) | @PaoloPia How to Build a Pretty Power Apps People Picker with Office365 Users - April Dunnam (Microsoft) | @aprildunnam   Additional resources   Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp   If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n *\u0026ldquo;Sharing is caring!\u0026rdquo; *\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-140-simon-%c3%a5gren-advania/images/Thumb-Ep140October25_hu531ddbaae03fc783e1140c2fbd6d2019_470429_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-140-simon-%c3%a5gren-advania/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 140 - Simon Ågren (Advania)"},{"categories":["Community post"],"contents":"Purpose We can use this when we have a requirement to show Azure AD users in People picker control.\nMicrosoft Graph Toolkit with React The Microsoft Graph Toolkit React components (mgt-react) allow React developers to use the Microsoft Graph Toolkit in their React applications. The library wraps all Microsoft Graph Toolkit components and exports them as React components. All components are available via the npm package and are named using PascalCase. To use a component, first, import it at the top. For more details refer to use-toolkit-with-react.\nImplementation  Open a command prompt Move to the path where you want to create a project Create a project directory using: md rect-azure-users Move to the above-created directory using: cd rect-azure-users Now execute the below command to create an SPFx solution: yo @microsoft/sharepoint It will ask some questions, as shown below,     Now install a Microsoft Graph toolkit React NPM package as below, npm i @microsoft/mgt-react After a successful installation, we can open a project in any source code tool. Here, I am using the VS code, so I will execute the command: code . Move to the package-solution.json and add the below permissions in webApiPermissionRequests, \u0026#34;webApiPermissionRequests\u0026#34;: [ { \u0026#34;resource\u0026#34;: \u0026#34;Microsoft Graph\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;User.Read.All\u0026#34; }, { \u0026#34;resource\u0026#34;: \u0026#34;Microsoft Graph\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;GroupMember.Read.All\u0026#34; }, { \u0026#34;resource\u0026#34;: \u0026#34;Microsoft Graph\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;Group.Read.All\u0026#34; }, { \u0026#34;resource\u0026#34;: \u0026#34;Microsoft Graph\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;Directory.Read.All\u0026#34; } ],  Now go to the src \u0026gt; webparts \u0026gt; webpart \u0026gt; components \u0026gt; I{webpartname}Props.ts file, Here we will create a property for graph Client and context as below, import { MSGraphClient } from \u0026#34;@microsoft/sp-http\u0026#34;; import { WebPartContext } from \u0026#34;@microsoft/sp-webpart-base\u0026#34;; export interface IReactAzureadUsersProps { description: string; graphClient: MSGraphClient; context: WebPartContext; }  Now create a file to manage the state. The filename should be I{webpartname}State.ts. And in this, we will create two properties groupID and members. export interface IReactAzureadUsersState { groupId: string, memers: any[] }  Move to the {webpartname}.ts file. Here we will get the graph client and context and then we will pass it to the property,\n  Import required packages like MSGraphClient, Providers, and SharePointProvider.\n  In OnInit(), get context and graph client.\n  In render(), pass properties so we can use them in our component.   import * as React from \u0026#39;react\u0026#39;; import * as ReactDom from \u0026#39;react-dom\u0026#39;; import { Version } from \u0026#39;@microsoft/sp-core-library\u0026#39;; import { IPropertyPaneConfiguration, PropertyPaneTextField } from \u0026#39;@microsoft/sp-property-pane\u0026#39;; import { BaseClientSideWebPart } from \u0026#39;@microsoft/sp-webpart-base\u0026#39;; import * as strings from \u0026#39;ReactAzureadUsersWebPartStrings\u0026#39;; import ReactAzureadUsers from \u0026#39;./components/ReactAzureadUsers\u0026#39;; import { IReactAzureadUsersProps } from \u0026#39;./components/IReactAzureadUsersProps\u0026#39;; import { MSGraphClient } from \u0026#39;@microsoft/sp-http\u0026#39;; import { Providers, SharePointProvider } from \u0026#39;@microsoft/mgt-spfx\u0026#39;; export interface IReactAzureadUsersWebPartProps { description: string; } export default class ReactAzureadUsersWebPart extends BaseClientSideWebPart\u0026lt;IReactAzureadUsersWebPartProps\u0026gt; { private graphClient: MSGraphClient; public onInit(): Promise\u0026lt;void\u0026gt; { if (!Providers.globalProvider) { Providers.globalProvider = new SharePointProvider(this.context); } return new Promise\u0026lt;void\u0026gt;((resolve: () =\u0026gt; void, reject: (error: any) =\u0026gt; void): void =\u0026gt; { this.context.msGraphClientFactory .getClient() .then((client: MSGraphClient): void =\u0026gt; { this.graphClient = client; resolve(); }, err =\u0026gt; reject(err)); }); } public render(): void { const element: React.ReactElement\u0026lt;IReactAzureadUsersProps\u0026gt; = React.createElement( ReactAzureadUsers, { description: this.properties.description, graphClient: this.graphClient, context: this.context } ); ReactDom.render(element, this.domElement); } protected onDispose(): void { ReactDom.unmountComponentAtNode(this.domElement); } protected get dataVersion(): Version { return Version.parse(\u0026#39;1.0\u0026#39;); } protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration { return { pages: [ { header: { description: strings.PropertyPaneDescription }, groups: [ { groupName: strings.BasicGroupName, groupFields: [ PropertyPaneTextField(\u0026#39;description\u0026#39;, { label: strings.DescriptionFieldLabel }) ] } ] } ] }; } }  Now move to the {webpartname}.tsx file.\n  Setup the graph context\n  Create a method to get the Azure group Id by group name and set it into the state.\n  Then get group members using by group id and then set it into the state so we can render it.\n  Now render it in PeoplePicker control, so here in People property, we have to pass members.   import * as React from \u0026#39;react\u0026#39;; import { IReactAzureadUsersProps } from \u0026#39;./IReactAzureadUsersProps\u0026#39;; import { IReactAzureadUsersState } from \u0026#39;./IReactAzureadUsersState\u0026#39;; import { graph } from \u0026#34;@pnp/graph\u0026#34;; import \u0026#34;@pnp/graph/users\u0026#34;; import \u0026#34;@pnp/graph/groups\u0026#34;; import { PeoplePicker } from \u0026#39;@microsoft/mgt-react\u0026#39;; export default class ReactAzureadUsers extends React.Component\u0026lt;IReactAzureadUsersProps, IReactAzureadUsersState\u0026gt; { constructor(props: IReactAzureadUsersProps) { super(props); this.state = { groupId: \u0026#39;\u0026#39;, memers: [] } } public onInit(): Promise\u0026lt;void\u0026gt; { graph.setup({ spfxContext: this.context }) return Promise.resolve(); } public componentDidMount() { this.getAzureGroupId() } public async getAzureGroupId() { let groupName = \u0026#34;Employees\u0026#34; let getGroupIDUrl = `groups?$select=id,displayName\u0026amp;$filter=displayName eq \u0026#39;${groupName}\u0026#39;`; if (!this.props.graphClient) { return; } this.props.graphClient .api(getGroupIDUrl) .version(\u0026#34;v1.0\u0026#34;) .get((err: any, res: any): void =\u0026gt; { if (err) { console.log(\u0026#34;Getting error in retrieving azure group =\u0026gt;\u0026#34;, err) } if (res) { if (res \u0026amp;\u0026amp; res.value.length) { console.log(res.value); this.setState({ groupId: res.value[0].id }) } this.getGroupMembers(this.state.groupId); } }); } public getGroupMembers(id: string) { if (!this.props.graphClient) { return; } let getGroupMembersUrl = `groups/${id}/members`; this.props.graphClient .api(getGroupMembersUrl) .version(\u0026#34;v1.0\u0026#34;) .get((err: any, res: any): void =\u0026gt; { if (err) { console.log(\u0026#34;Getting error in retrieving group members =\u0026gt;\u0026#34;, err) } if (res) { if (res \u0026amp;\u0026amp; res.value.length) { console.log(res.value); this.setState({ memers: res.value }) } } }); } public render(): React.ReactElement\u0026lt;IReactAzureadUsersProps\u0026gt; { return ( \u0026lt;React.Fragment\u0026gt; \u0026lt;h2\u0026gt;Azure AD Users\u0026lt;/h2\u0026gt; \u0026lt;PeoplePicker people={this.state.memers} showMax={3} /\u0026gt; \u0026lt;/React.Fragment \u0026gt; ); } }  Output  Find the full source code. Summary In this article, we have seen how to bind AD users in people picker using the MS graph toolkit react library.\nI hope this helps.\nSharing is caring!\n","image":"https://pnp.github.io/blog/post/how-to-use-microsoft-graph-toolkit-react-people-picker-control/images/Implementations_hu4aeb8b4c92b705cbd7344f753b435626_58098_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-use-microsoft-graph-toolkit-react-people-picker-control/","tags":["SharePoint framework (SPFx)","Microsoft Graph toolkit"],"title":"How to use Microsoft graph toolkit react people picker control in SPFx Webpart?"},{"categories":["Microsoft 365 developer podcast"],"contents":"Yaron Hezroni joins Jeremy and Paul to share the Export APIs for Microsoft Teams content.\nListen to the show here: (m365devpodcast.com)\nLinks from the show  Export content with the Microsoft Teams Export APIs Licensing and payment requirements Export APIs:  channel: getAllMessages chats: getAllMessages Create subscription    ","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-exporting-content-using-the-teams-export-api/","tags":[],"title":"M365 Dev Podcast - Exporting Content Using the Teams Export API with Yaron Hezroni"},{"categories":["Community post"],"contents":" The Story (Michael) Just before Southcoast Summit 2021 got started, the organizers hosted the Automate Everything - SS2021 Hackathon where every solution revolves around Flic buttons. Wait, you don\u0026rsquo;t know what a Flic button is? It\u0026rsquo;s basically a wireless smart button that lets you control devices, apps and services. Push once, twice or hold the button and let each variant trigger a different action. There are multiple use cases in business but also in personal life in which Flic buttons make your life easier. Check out the Flic homepage to learn more.\n    Meet Petrol Push. A modern day organization that has a clear mission: Save kittens. There are hundreds of kittens all over Britain that get stuck in trees, get lost within the urban jungle or need help in any other kind of way. Luckily Petrol Push underholds a huge fleet of volunteers to rescue kittens every day.\nthe challenge\nAs you may know there is a petrol shortage happening right now and of course you wonder, how can Petrol Push keep up their noble mission? Flic Buttons and the Microsoft Power Platform gave them the ability to come up with a solutions to help all their volunteers in their day to day work.\nthe solution\nEvery Petrol Push car got a Flic button installed and whenever Petrol Push volunteers pass a gas station, they can indicate with a push of a button, whether the gas station has fuel available or not. This information gets stored on a map so every Petrol Push employee knows where fuel is available and where it\u0026rsquo;s not. This way the volunteers can keep their focus on their mission. They don\u0026rsquo;t need to drive around searching for fuel or worry where to gas up. The community of volunteers takes care of that.\nPetrol Push cares deeply about their volunteers so they don\u0026rsquo;t want to put them in danger in any way. That\u0026rsquo;s why this solution comes with a little extra. Petrol Push workers don\u0026rsquo;t have to check the map over and over again to see whether anything has changed. If one of the volunteers found a gas station where fuel is available, the button gets pushed and the fleet will get notified with a song. That way the drivers know when to check the map for updates.\nWithin these times it might happen that our drivers get in trouble themselves, run out of gas, have a flat tire or something else. Once again, Petrol Push cares about their volunteers deeply so the Flic button provides the opportunity to call other volunteers on the road for help. Once again with a song, so no other driver needs to check their phone. The position gets indicated on the map though, so that help can be arranged quickly. It\u0026rsquo;s only the supervisor that gets an additional text message in order to provide further information.\nNote: you will probably know by know, but this use case exemplifies the ability to combine geographic location with notifications that are not based on text. In this way, we want to draw attention to how versatile Power Platform solutions are and we also want to think about the people who can only use devices in a limited way. Please use this use case to customize it to your needs. And always remember, only as a community we are strong, so let\u0026rsquo;s be inclusive\nNow, let\u0026rsquo;s dive into details and see how this solution actually works\nThe Flic and the flow (Tomasz) In a big picture, the flow was built to get information about location of a driver who triggered it, next to lookup details of the closest petrol station (by using Azure Maps API). Finally to save the station\u0026rsquo;s data together with status into database, so later it can be displayed with a proper color of a pin, inside the app. But in details, it\u0026rsquo;s much more interesting.\n![PetrolFlow - part1.png](images/PetrolFlow - part1.png)\nThe flow can be triggered by any driver (1). Also, for any Flic event, but that will be described later. Next, bot looks up details of the button itself (2), to get its owner (3). This information will be later used to record data along with information about the driver.\n ![PetrolFlow - part2.png](images/PetrolFlow - part2.png)\n Next the flow calls Azure Maps custom connector via a dedicated child flow (1), by passing latitude and longitude of a driver\u0026rsquo;s location. Coordinates are obtained using GPS from driver\u0026rsquo;s phone that is paired with Flic button. Obviously this should be done using the action directly within the parent flow, however for some *unknown reasons *we were facing an issue while saving process with the action inside, so we decided to move it into a child flow. Don\u0026rsquo;t judge :)\nData returned by the child flow, that represents details about the nearest petrol station is then parsed (2).\nFinally bot using postal code is filtering existing stations\u0026rsquo; data to get a match (3). This is done using ODATA expression:\nwoi_postalcode eq '@{first(body('Parse_JSON')?['results'])?['address']?['extendedPostalCode']}'. Then it saves its row ID into variable (4). Naturally, if there\u0026rsquo;s no station for the given postal code, variable will be empty. **We also made an assumption**, that there can be one station for a given postal code :)\n![PetrolFlow - part3.png](images/PetrolFlow - part3.png)\nProcess now checks, if station\u0026rsquo;s row ID is empty (1) - if yes, it means it has to be created. Creation (2) of the record takes all the details returned from Azure Maps API, like full address, station name, lat and lon, information about driver who reported it and finally - the postal code. After that row ID of the created station is being saved into variable.\n![PetrolFlow - part4.png](images/PetrolFlow - part4.png)\nNow process moves to check what kind of action occurred on the Flic. There are 3 possible activities:\n  Single click - means that there\u0026rsquo;s petrol on the station,\n  Double click - means that there\u0026rsquo;s no petrol on the station,\n  Long press - means there\u0026rsquo;s an issue and driver requires assistance.\n  To check what action occurred, we are using switch action (1). For each branch process executes the same actions, just with different statuses. First, bot creates an entry in Activities table (2), to record latest status (to one from Petrol, No petrol, Issue) for the station together with driver details who reported it.\nAfter that is done, it updates status (again to one from Petrol, No petrol, Issue) of the station record itself (3). Then it saves created activity record OData id into a variable. And finally it relates records (4) - petrol station together with the created activity record.\n![PetrolFlow - part5.png](images/PetrolFlow - part5.png)\nWhat is also worth to mention is that the whole process is built using the try-catch pattern. All actions that are executed in terms of the business logic are stored in the \u0026quot;Try\u0026quot; scope (1). If anything fails within the scope, it is caught by the \u0026quot;Catch\u0026quot; scope (2), that has it\u0026rsquo;s \u0026quot;Run after\u0026quot; settings configured to only be executed if previous actions fails, times out or is skipped.\nProcess in the \u0026ldquo;Catch\u0026rdquo; scope first filters (3) results of the \u0026ldquo;Try\u0026rdquo; scope, using the expression result('Try') to leave only those entries which contain information about errors: @equals(createArray('Failed', 'TimedOut'), ''). Next for each such record (4) it is adding information about the details to a string variable. Finally, variable\u0026rsquo;s contents is sent to admin as a notification (5) and the whole process ends up with \u0026quot;Failed\u0026quot; outcome.\nShow me something beautiful - The canvas app (Carmen)  With the data stored in Dataverse, the canvas app can be created to display the available information and inform the people where they can find fuel. The canvas app consists of a header (with the company logo, name and refresh icon) and a map control.\nWe are using the built-in map control, which allows us to display the gas stations with their appropriate color, automatically center on the user\u0026rsquo;s current location and display additional information about each gas station when selecting the location pin.\nTo get the location pins on the map, we added the Dataverse table as a source in the Items property of the map control. We are currently not doing any filtering, but this could be added if needed. The latitude, longitude, labels and colors is each contained in a specific column within the data source. These are provided as values for the following properties (where the text between quotes is the name of the column in the Dataverse table):\n ItemsLabels = \u0026quot;woi_name\u0026quot; ItemsLatitudes = \u0026quot;woi_latitude\u0026quot; ItemsLongitudes= \u0026quot;woi_longitude\u0026quot; ItemsColors** **= \u0026quot;woi_color\u0026quot;  The woi_colors columns is defined as a calculated column that is influenced by the value of the Petrol Status column in the same table. Petrol Status contains the last known status of fuel at the respective station. The colors are defined as hex values with the following mapping:\n Last Known Status Color Color name Petrol \u0026ldquo;#66FF00\u0026rdquo; Light Green No petrol \u0026ldquo;#FF0000\u0026rdquo; Red Issue \u0026ldquo;#FFBF00\u0026rdquo; Amber\n The color of the grouped pins is defined by the PinColor** **property of the map control. It is set to Green, which is a darker color than the green used for the stations with fuel.\nWhen a pin is selected, the info card is shown. This is defined by setting the InfoCards property of the map to Microsoft.Map.InfoCards'.OnClick. The fields that are shown on the info card are defined by editing the **Fields** in the properties pane of the map. Four fields are shown on the info card:\n Name Address Postal code Modified on (to know when the station\u0026rsquo;s status was last updated)  This can be seen on the below screenshot.\n   The resulting app shows a map with all identified gas stations and their last known status, indicated with the color of the pin. Selecting a specific gas station provides the user with more information on that station.\n   We need a real map - The custom connector to Azure Maps (Lee) A key part of the solution is populating a list of petrol stations and their status based on presses of the Flic button. We initially looked to use the built-in Bing maps Power Automate connector and actions to find the current address when a Flic button was used. However, this would return the nearest address, which is not necessarily a petrol station (e.g. it could be a house on the opposite side of the street which is deemed nearer).\nTo work around this, we created an Azure Maps resource in Azure. Azure Maps can return a list of addresses within a certain radius that fit a particular \u0026ldquo;POI (point of interest) category\u0026rdquo; - in this case a petrol station. Using the subscription-key (API key) from the Azure Maps resource, we were able to create a custom connector in Power Automate and query for the nearest petrol stations to the longitude and latitude when the Flic button was pressed.\nBring me the vibes - The Spotify connector (Yannick) We like to celebrate victories and help each other in times of need, and what better way than use music for this? We have a sound system in the office connected to Spotify so let\u0026rsquo;s use that to keep everyone updated on things that happen on the road!\nA new Power Automate flow will trigger every time a new petrol station status is logged, excluding when no petrol was available. In the case someone found Petrol at a gas station, we get super excited for our colleague and play Fuel by Metallica in the office to have a small party. When someone gets in trouble, for whatever reason, we play Trouble by Coldplay (so we know we need to rush to rescue) and a text message is sent to the manager.\nIntegrating with Spotify isn\u0026rsquo;t too difficult (the API is well-documented) but requires the creation of a custom connector with following API actions:\n  Get a User\u0026rsquo;s Available Devices: fetch a list of all devices currently connected to the Spotify service\n  Start/Resume a User\u0026rsquo;s Playback: play a song on a specific device\n  When combining both, we can first fetch all connected devices and then filter them on the device id of our office sound system. If the device is connected, we can play the appropriate song for the occasion with the second API call. And lastly, for the text message we\u0026rsquo;ll use Twilio. Luckily they have an existing connector within Power Automate so it\u0026rsquo;s only a matter of registering for a Twilio account, getting a number to send messages from and configuring the action in our flow.\nThe princess and the push (Luise) Straight from the beginning of the hackathon, we took care of documenting our architecture decisions and how we would implement them. We set up a GitHub repository, invited everyone in the team so they could commit their files. We continued to document all major steps so that everyone could use this as a reference to explain our solution, although each member was only in charge of their workload. Getting all information and documenting while building ensured accuracy but also gave an opportunity to think through the app and reflect on decisions.\nDocumentation includes screenshots of the flows, explains the data model and environment variables. We also published the solution itself in this repository to give community the chance to play with our app.\nWhat can we learn from this epic quest? (everybody) As a group, we discussed the hackathon for quite a while even after it had ended, and we came up with, for us, four important lessons this experience has taught us.\n1. Do one thing the right way, instead of a million things in a messy way What helped us build this solution in a short timespan, was that each person of the team was responsible for a specific part of the solution. There was no context switching between the app studio and building the cloud flow for example. Instead, we made some agreements in the beginning of the day and let each other know verbally and in the documentation if anything needed to change. This allowed all of us to focus on their own part, resulting in finished pieces to the puzzle.\n2. Take care of documentation Since development was decentralized, it was important we could keep each other up to date on what we were doing. Therefore, we documented from the start. Since we were working against the clock, we had one person who constantly went around the table to see what each of us was working on and to make sure it was captured in the documentation. After the individual pieces were finished, this allowed us to piece them together more easily.\n3. 1 + 1 = 3 Or in our case 6 x 1 = 10 (or something). Each of us has a different background, no two are the same. Because of this, we were able to share different perspectives and we were able to find the most efficient way to create the different pieces of the puzzle: e.g. Azure maps for station identification, canvas apps for a quick user interface and cloud flows for logic. Since we were not limited to one area of expertise, our solution combines the best of different worlds. In the process, we all learned from each other, either technical skills or an approach how to tackle something. And since we were all eager to learn from and share with each other, we had a lot of fun doing it.\n4. We are all developers Each of us is building or creating something on a daily basis, be that using no-code, low-code or code-first platforms and tools. During the hackathon, we realized that our commonalities are more important than our differences. We share a common problem-solving and solution-oriented approach. We can define logic and we do it in very similar terms (if - then - else, anyone?). We can conceptualize solutions and explain them to each other. And then each of us can find some way using their own tools to build that solution. This is what makes us developers, not the language or tool set we build things in, but the approach and mindset we share. All of us are developers, and you can be one too.\n![NZ6_5087-focus (2).jpg](images/NZ6_5087-focus (2).jpg)\n","image":"https://pnp.github.io/blog/post/how-3-makers-2-devs-and-a-princess-came-together-to-save-kittens/images/solution-overview_hua821df8bc835e05b642e002ac0881507_78702_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-3-makers-2-devs-and-a-princess-came-together-to-save-kittens/","tags":["Power Automate","Power Apps"],"title":"How 3 makers, 2 devs and a princess came together to save kittens for a hackathon"},{"categories":["Microsoft 365 Platform Community update"],"contents":"Microsoft 365 Patterns and Practices (PnP) Community October 2021 update is out with a summary of the latest guidance, samples, and solutions from Microsoft or from the community for the community. This article is a summary of all the different areas and topics around the community work we do around Microsoft 365 ecosystem during the past month. Thank you for being part of this success. Sharing is caring! 🧡\nWhat is Microsoft 365 Community (PnP) Microsoft 365 PnP is a nick-name for Microsoft 365 platform community activities coordinated by numerous teams inside of the Microsoft 365 engineering organizations. PnP is a community-driven open source initiative where Microsoft and external community members are sharing their learning\u0026rsquo;s around implementation practices for Microsoft 365. Topics vary from Microsoft Viva, Microsoft Graph, Microsoft Teams, Pow Platform, OneDrive and SharePoint. Active development and contributions happen in GitHub by providing contributions to the samples, reusable components, and documentation for different areas. PnP is owned and coordinated by Microsoft engineering, but this is work done by the community for the community.\n See more details from New Microsoft 365 Patterns and Practices (PnP) team model with new community leads The initiative is facilitated by Microsoft, but we have multiple community members as part of the PnP team (see team details in end of the article) and we are always looking to extend the PnP team with more community members. Notice that since this is open source community initiative, so there\u0026rsquo;s no SLAs for the support for the samples provided through GitHub. Obviously, all officially released components and libraries are under official support from Microsoft. 🤩 Some key statistics around Microsoft 365 Community initiative from October 2021: Unique visitors during the past 2 weeks in PnP, OneDrive, Microsoft-Search, OfficeDev and SharePoint GitHub organization repositories - 104,443 Microsoft 365 Community (PnP) YouTube channel had 92,110 views with 6,974 hours of watch time and 25,388 subscribers Microsoft 365 Developer YouTube channel had 85,508 views with 5,836 hours of watch time and 15,960 subscribers Most viewed videos in the Microsoft 365 Community (PnP) YouTube channel during September 2021:   Top 10 hidden gems: Microsoft Lists - Mark Kashman | 2,740 Building a beautifully designed Intranet with SharePoint - latest design and branding capabilities | Cathy Dew (Microsoft) \u0026amp; Katie Swanson (Microsoft) | 2,526 Working with Microsoft Lists (webinar) - Harini Saladi, Miceile Barrett, Chakkaradeep Chandran and Mark Kashman | 2,407 Microsoft Lists workshop, part 1: \u0026ldquo;Creating and collaborating\u0026rdquo; - Mark Kashman | 2,299 Getting started with Site Designs in SharePoint Online - Laura Kokkarinen (Sulava) | 2,245 SharePoint Framework Tutorial 1 - HelloWorld WebPart | 2,139 Introducing: New Employee Onboarding - a Microsoft Teams app template | Nidhi Sharma (Microsoft) | 2,009 Microsoft Lists workshop, part 2: \u0026ldquo;Make Lists work for you\u0026rdquo; - Mark Kashman | 1,439 Latest on Power Automate integration within SharePoint Online - Chakkaradeep Chandran | 1,275 Architecting Your Intranet - Melissa Torres | 1,246\n\\  Most viewed videos in the Microsoft 365 Developer YouTube channel[ during September 2021:]\n Understanding authentication and authorization in Microsoft Graph Explorer - Ayca Bas (Microsoft), Rabia Williams (Microsoft) and Bettirose Ngugi (Microsoft) | 13,030 Demo - Create .NET console app to work with users in the organization with Microsoft Graph - Andrew Connell (Voitanos) | 10,758 Building apps with Microsoft Graph Explorer - Ayca Bas (Microsoft), Rabia Williams (Microsoft) and Bettirose Ngugi (Microsoft) | 6,814 Start calling the Microsoft Graph API in under 5 minutes! | Tips \u0026amp; Tricks - Dan Wahlin | 2,992 Demo: Getting started with Power Apps Portals | Brian Knight (Pragmatic Works) | 1,703 Multi-tenant architecture for SaaS apps with Microsoft 365 and Azure Active Directory - Bob German (Microsoft) \u0026amp; Rabia Williams (Microsoft) | 1,265 Build Outlook Add-ins that integrate your solution seamlessly into your users\u0026rsquo; Outlook experience​ | Juan Balmori, Hitesh Manwar - 1,054 Authenticate and connect with Microsoft Graph - June 2019 | 1,040 Set up your new Microsoft 365 Developer subscription | Tips \u0026amp; Tricks - Bob German (Microsoft) | 881 An introduction to Microsoft Graph for developers - Part I - Getting started - October 2019 - Kalyan Krishna (Microsoft) | 721 Main resources around Microsoft 365 Community:   Microsoft 365 Community - http://aka.ms/m365pnp - One location for all the resources and news around Microsoft 365 platform Microsoft 365 community blog - http://aka.ms/m365pnp/community/blog Microsoft 365 development blog - http://aka.ms/m365pnp-blog Microsoft 365 Community Channel on YouTube - http://aka.ms/m365pnp-videos Microsoft 365 Developer YouTube channel - https://aka.ms/M365DevYouTube  ✍ Latest Dev Blog posts Here are the latest blog posts and announcements around Microsoft 365 development topics from https://developer.microsoft.com/microsoft-365/blogs.\n 18th of October - Developing real-time collaborative apps with Azure, Microsoft 365, Power Platform, and GitHub 18th of October - Manage your Microsoft Teams apps with the Developer Portal 15th of October - Microsoft Teams ISV app monetization capabilities now available in developer preview 14th of October - Announcing SharePoint Framework 1.13 Release Candidate 12th of October - Grow your skills and build collaborative solutions: Exam MS-600 Building Applications and Solutions ... 11th of October - Building great bots for Microsoft Teams with Azure Bot Framework Composer 7th of October - Breaking changes to the settings endpoint in the Microsoft Graph eDiscovery API (beta) 6th of October - New ways for Cloud Storage Partners to integrate their services with Microsoft Teams and Office 1st of October - Announcing general availability of Microsoft Graph Export API for Microsoft Teams messages 20th of September - Multi-tenant architecture for SaaS apps 15th of September - Changes to the Microsoft 365 advanced eDiscovery create case API (beta) 10th of September - Breaking changes to the me/assignments endpoint in the Microsoft Graph Assignments API (beta) 9th of September - Announcing a new Microsoft Teams authentication provider and file upload feature in the Microsoft Gr... Latest community posts at https://aka.ms/m365pnp/community/blog 18th of October - Michel Mendes (Storm Technology) | @michelcarlo - Getting the working hours/time zones for other users using Microsoft Graph API 18th of October - Arjun Menon (Tata Consultancy Services) | @arjunumenon - Azure Cloud Shell issue when using CLI for Microsoft 365 - Workaround 18th of October - Simon Doy (iThink 365) | @simondoy - Connecting to SharePoint Online to On-Premises Databases with SharePoint Framework 12th of October - Albert-Jan Schot (BLIS Digital) | @appieschot - Running a Power App as Edge Extension 7th of October - Garry Trinder (Microsoft) | @garrytrinder - CLI for Microsoft 365 v4 5th of October - Patrick Lamber (Experts Inside AG) | @patricklamber - Bulk add/remove users to Microsoft Teams using the CLI for Microsoft 365 5th of October - Valeras Narbutas (Macaw) - @ValerasNarbutas - TipOfTheDay - Easy Track changes in dataverse table via dataverse API 29th of September - Luise Freese | @LuiseFreese - ProvisionGenie - an open-source provisioning engine for Microsoft Teams 29th of September - Chandani Prajapati (Rapid Circle) | @Chandani_SPD - Guidance On How To Use React DataTable Webpart Guidance On How To Use React DataTable Webpart 29th of September - Arjun Menon (Tata Consultancy Services) | @arjunumenon - Get Permission Report for SharePoint Online or OneDrive File using CLI for Microsoft 365 29th of September - Simon Hudson (Cloud2) | @SimonJHudson - Looking at Things in Profile 20th of September - Reshmee Auckloo (Pension Protection Fund) | @reshmeeauckloo - PnP Batch versus Microsoft Graph Batch in PowerShell to add/delete 3k items 20th of September - Patrick Lamber (Experts Inside AG) | @patricklamber - Export conversations from Microsoft Teams Channels using the CLI for Microsoft 365 18th of September - Luise Freese | @LuiseFreese - 4 ways to level up your Power Automate flows 14th of September - Michel Mendes (Storm Technology) | @michelcarlo - Hiding the SharePoint page title with Power Automate 14th of September - Chandani Prajapati (Rapid Circle) | @Chandani_SPD - How to use loader/Spinner/In Progress indicator in SPFx using fluent UI Spinner? 13th of September - Reshmee Auckloo (Pension Protection Fund) | @reshmeeauckloo - PnP Batch Add or Delete items from very large list, i.e. more than 300k items 13th of September - Dipen Shah (Rapid Circle) | @Dips_365 - Global Navigation In Modern SharePoint Using SPFx, PnP And Fluent UI 13th of September - Siddharth Vaghasia | @siddh_me - Azure Meeting Bot To Capture Meeting Participants Information 9th of September - Luise Freese | @LuiseFreese - How to get started with GitHub and Git 7th of September - Dipen Shah (Rapid Circle) | @Dips_365 - Create Site Script and Site Template Using Power Automate in SharePoint 2nd of September - Dipen Shah (Rapid Circle) | @Dips_365 - Create Report Of Assigned Licenses To Users From Microsoft 365  31st of August - Sudharsan Kesavanarayanan (NTT Digital Business Solutions) | @sudharsank - Browser Local Storage using PnPClientStorage 20th of August - Cameron Dwyer (OnePlace Solutions) | @CameronDwyer - Simulating 429 Throttling in Microsoft Graph API (SharePoint/OneDrive workloads) Community call recording blog posts: 19th of October - Microsoft 365 Platform Call \u0026ndash; 19th of October, 2021 14th of October - Microsoft 365 Developer Community Call recording \u0026ndash; 14th of October, 2021 12th of October - Microsoft 365 Platform Call \u0026ndash; 12th of October, 2021 8th of October - SharePoint Framework Community Call \u0026ndash; 7th of October, 2021 7th of October - Adaptive Cards community call \u0026ndash; September 2021 5th of October - Microsoft 365 Platform Call \u0026ndash; 5th of October, 2021 30th of September - Microsoft 365 Developer Community Call recording \u0026ndash; 30th of September, 2021 28th of September - Microsoft 365 Platform Call \u0026ndash; 28th of September, 2021 23rd of September - SharePoint Framework Community Call \u0026ndash; 23rd of September, 2021 23rd of September - Adaptive Cards community call \u0026ndash; August 2021 21st of September - Microsoft 365 Platform Call \u0026ndash; 21st of September, 2021 17th of September - Microsoft Power Apps Community Call \u0026ndash; September 2021 16th of September - Microsoft 365 Developer Community Call recording \u0026ndash; 16th of September, 2021 16th of September - Office Add-ins community call \u0026ndash; September 8, 2021 15th of September - Microsoft 365 Platform Call \u0026ndash; 14th of September, 2021 9th of September - SharePoint Framework Community Call \u0026ndash; 9th of September, 2021 8th of September - Microsoft 365 Platform Call \u0026ndash; 7th of September, 2021 3rd of September - Microsoft 365 Developer Community Call recording \u0026ndash; 2nd of September, 2021 Microsoft 365 Developer Podcasts 18th of October - M365 Dev Podcast - yo Teams Generator Update with Wictor Wilén 11th of October - M365 Dev Podcast - Building a Solution with Low-Code Tools with Carmen Ysewijn and Luise Freese 5th of October - M365 Dev Podcast - Bot Framework Composer Video series with Ayça Baş and Bob German 27th of September - Microsoft 365 Developer Podcast - Latest Microsoft Graph SDKs with Maisa Rissi and Darrel Miller 20th of September - Microsoft 365 Developer Podcast - Microsoft 365 App Certification with Orion O\u0026rsquo;Malley Microsoft 365 PnP Weekly Podcasts and vlogs 19th of October - Microsoft 365 PnP Weekly - Episode 139 - André Lage (Datalynx AG) 12th of October - Microsoft 365 PnP Weekly - Episode 138 - Carmen Ysewijn (Qubix) and Luise Freese 5th of October - Microsoft 365 PnP Weekly - Episode 137 - Serge Tremblay (Technologia) 28th of September - Microsoft 365 PnP Weekly - Episode 136 - Thomas Vochten (The Cronos Group) 22nd of September - Microsoft 365 PnP Weekly - Episode 135 - Adis Jugo (Nubelus) 14th of September - Microsoft 365 PnP Weekly - Episode 134 - Marc D Anderson (Sympraxis Consulting) 7th of September - Microsoft 365 PnP Weekly - Episode 133 - Gautam Sheth (Valo)  🤩 Community Calls There are numerous different community calls on different areas. All calls are being recorded and published either from Microsoft 365 Developer or Microsoft 365 Community (PnP) YouTube channels. Recordings are typically released within the following 24 hours after the call. You can find a detailed agenda and links to specific covered topics on blog post articles at the Microsoft 365 developer blog when the videos are published.\n Microsoft 365 Platform Call - https://aka.ms/m365-dev-call - Updates and demos from Microsoft as weekly call on Tuesdays - topics vary from Microsoft Teams, Microsoft Graph, Power Platform, SharePoint, OneDrive and more Adaptive Cards https://aka.ms/adaptivecardscommunitycall - Updates and news around Adaptive Cards with live demos Microsoft identity platform https://aka.ms/IDDevCommunityCalendar - Latest on the identity side Office Add-ins https://aka.ms/officeaddinscommunitycall - News and community work around Office add-ins with live demos PowerApps https://aka.ms/PowerAppsMonthlyCall - Monthly summary on PowerApps community with live demos M365 Community Call https://aka.ms/spdev-sig-call - Bi-weekly - General topics on Microsoft 365 Dev from various aspects - Microsoft Teams, Microsoft Graph Toolkit, Provisioning, Automation, Scripting, Power Automate, Solution design SharePoint Framework Community call https://aka.ms/spdev-spfx-call - Bi-weekly - Consists of topics around SharePoint Framework and JavaScript-based development in the Microsoft Teams and in SharePoint platform. If you are interested in doing a live demo of your solution or sample in these calls, please do reach out to the PnP Team members (contacts later in this post) and they are able to help with the right setup. These are great opportunities to gain visibility for example for existing MVPs, for community members who would like to be MVPs in the future or any community member who\u0026rsquo;d like to share some of their learnings.  🤩 Microsoft 365 Community (PnP) Ecosystem in GitHub Most of the community driven repositories are in the PnP GitHub organization as samples are not product specifics as they can contain numerous different solutions or the solution works in multiple different applications.\n  Microsoft Graph Toolkit - Repository and project on Microsoft Graph Toolkit controls - welcomes community contributors\n  PnPjs - PnPjs Framework repository\n  CLI Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings\n  generator-spfx - Open-source Yeoman generator which extends the out-of-the-box Yeoman generator for SharePoint with additional capabilities\n  generator-teams - Open-source Microsoft Teams Yeoman generator - Bots, Messaging Extensions, Tabs, Connectors, Outgoing Web hooks and more\n  teams-dev-samples - Microsoft Teams targeted samples from community and Microsoft engineering\n  script-samples - Scripting samples for automating operations in Microsoft 365 with PowerShell modules or CLIs\n  Sharing is Caring - Getting started on learning how to contribute and be active on the community from GitHub perspective.\n  pnpcore - The PnP Core SDK is an SDK designed to work against Microsoft 365 with Microsoft Graph API first approach\n  powershell - PnP PowerShell module which is PowerShell Core module targeted for Microsoft 365\n  pnpframework - PnP Framework is a .Net Standard 2.0 library targeting Microsoft 365 containing the PnP Provisioning engine and a ton of other useful extensions\n  spfx-reference-scenarios - Samples for the Microsoft Teams and Viva Connections, implemented using SharePoint Framework\n  sp-dev-fx-aces - Samples on the Adaptive Card Extensions for Microsoft Viva\n  sp-dev-fx-webparts - Client-side web part samples from community and Microsoft engineering\n  sp-dev-fx-extensions - Samples and tutorial code around SharePoint Framework Extensions\n  sp-dev-fx-library-components - Samples and tutorial code around the SharePoint Framework library components\n  sp-starter-kit - Starter kit solution for SharePoint modern experiences\n  sp-dev-build-extensions - Different build extensions like gulp tasks and gulp plugins from the community and engineering around SharePoint development\n  sp-dev-solutions - Repository for more polished and fine-tuned reusable solutions build with SharePoint Framework\n  sp-dev-samples - Repository for other samples related on the SharePoint development topics - WebHooks etc.\n  sp-dev-fx-controls-react - Reusable content controls for SharePoint Framework solutions build with React\n  sp-dev-fx-property-controls - Reusable property pane controls to be used in web parts\n  list-formatting - Open-source community-driven repository for the column and view formatting JSON definitions\n  sp-dev-site-scripts - Open-source community-driven repository for community Site Designs and Site Scripts\n  sp-dev-modernization - Tooling and guidance around modernizing SharePoint from classic to modern\n  sp-power-platform-solutions - Solution and sample code for SharePoint Power Platform solutions\n  powerfx-samples - Samples that demonstrate different usage patterns for the Power Fx low-code programming language\\\n  powerapps-samples - Samples that demonstrate different usage patterns for Power Apps\n  powerautomate-samples - Samples that demonstrate different usage patterns for Power Automate\n  powerva-samples - Samples that demonstrate different usage patterns for Power Virtual Agents All SharePoint specific repositories or services supported directly by Microsoft are located in the SharePoint GitHub organization\n\\\n  sp-dev-docs - Source for new SharePoint dev center documentation exposed from http://docs.microsoft.com/sharepoint/dev\n  sp-dev-provisioning-templates - Open-source templates used by the SharePoint Look Book site\n  sp-provisioning-service - Source code of the SharePoint look book site Classic PnP named repositories - older tooling\n  PnP-Tools - Tools and scripts targeted more for IT Pro\u0026rsquo;s and for on-premises for SP2013 and SP2016\n  PnP-Provisioning-Schema - PnP Provisioning engine schema repository Repositories in the GitHub Microsoft Search organization controlled by the PnP initiative\n  pnp-modern-search - Home of PnP Modern Search solutions, see more from the documentation Other related resources from GitHub\n  Office add-in Patterns and Practices in GitHub - Community contributions welcome!\n  Microsoft Graph GitHub organization\n  OfficeDev GitHub organization - Includes all Microsoft Teams samples from Microsoft\n\\\n  🤩 What\u0026rsquo;s supportability story around the community tooling and assets? Following statements apply across all of the community lead and contributed samples and solutions, including samples, core component(s) and solutions, like SharePoint Starter Kit, yo teams or PnP PowerShell. All Microsoft released SDKs and tools are supported based on the specific tool policies.\n PnP guidance and samples are created by Microsoft \u0026amp; by the Community PnP guidance and samples are maintained by Microsoft \u0026amp; community PnP uses supported and recommended techniques PnP is an open-source initiative by the community \u0026ndash; people who work on the initiative for the benefit of others, have their normal day job as well PnP is NOT a product and therefore it\u0026rsquo;s not supported by Premier Support or other official support channels PnP is supported in similar ways as other open source projects done by Microsoft with support from the community by the community There are numerous partners that utilize PnP within their solutions for customers. Support for this is provided by the Partner. When PnP material is used in deployments, we recommend being clear with your customer/deployment owner on the support model Please see the specifics on the supportability on the tool, SDK or component repository or download page.  🤩 Microsoft 365 PnP team model    In April 2020 we announced our new Microsoft 365 PnP team model and grew the MVP team quite significantly. PnP model exists for having more efficient engagement between Microsoft engineering and community members. Let\u0026rsquo;s build things together. Your contributions and feedback is always welcome! During August, we also crew the team with 5 new members. PnP Team coordinates and leads the different open-source and community efforts we execute in the Microsoft 365 platform. We welcome all community members to get involved on the community and open-source efforts. Your input do matter!\n New Microsoft 365 Patterns and Practices (PnP) team members - May 2021 - Gautam Sheth (Valo) and Patrick Lamber (Experts Inside AG) New Microsoft 365 Patterns and Practices (PnP) team members - February 2021 - April Dunnam (Microsoft), Emily Mancini (Sympraxis Consulting) and Veronique Lengelle (CPS) New Microsoft 365 Patterns and Practices (PnP) team members - December 2020 - Luise Freese and Sébastien Levert  New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 - Albert-Jan Schot (BLIS Digital), Koen Zomers (Microsoft), Paul Bullock (CaPa Creative), Rabia Williams (Microsoft) and Yannick Plenevaux (PVX Solutions) Got feedback, suggestions or ideas? - Please let us know. Everything we do in this program is for your benefit. Feedback and ideas are more than welcome so that we can adjust the process for benefitting you even more.   🤩 Microsoft 365 PnP Recognition Program    We are excited to announce new community contributor program for all the active community members. Through this program you can get officially acknowledged with the a Credly badge around your work on our open-source and community channels. See more from\nhttps://aka.ms/m365pnp-recognition. Thank you for being part of this journey with us.\n⚙ Area-specific updates These are different areas which are closely involved on the community work across the PnP initiative. Some are lead and coordinated by engineering organizations, some are coordinated by the community and MVPs.\n🦒 Microsoft Graph Toolkit    Microsoft Graph Toolkit is engineering lead initiative, which works closely with the community on the open-source areas. The Microsoft Graph Toolkit is a collection of reusable, framework-agnostic web components and helpers for accessing and working with Microsoft Graph. The components are fully functional right of out of the box, with built in providers that authenticate with and fetch data from Microsoft Graph.\n Latest version currently is 2.3 See the v2.3 announcement blog post for more details - Announcing a new Microsoft Teams authentication provider and file upload feature in the Microsoft Gr... mgt.dev - Microsoft Graph Toolkit Playground Getting started with Microsoft Graph Toolkit guidance video from developer community call by Beth Pan (Microsoft) Latest code and preview versions from https://aka.ms/mgt All the latest updates on the Microsoft Graph Toolkit is being presented in our bi-weekly Microsoft 365 Generic Dev community call, including the latest community contributors.  Microsoft 365 Community docs    Community docs model was announced in the April 2020 and it\u0026rsquo;s great to see the interest for community to help each other by providing new guidance on the non-dev areas. See more on the announcement from the SharePoint blog - Announcing the Microsoft 365 Community Docs. We do welcome contributions from the community - our objective is to build a valuable location for articles from Microsoft and community together.\n  Microsoft 365 Community Content at docs.microsoft.com Have ideas for articles or want to contribute yourself? - Get involved! Here are also some additional resources explaining the model more detailed.\n  YouTube - Introducing Microsoft 365 Community Docs\n  GitHub issue list with articles ideas\n  SharePoint Framework development samples    These are the updated SharePoint Framework samples which are available from the the different repositories.\n New sample BasicCard-Graph-UpcomingEvents by Derek Cash-Peterson showing how to surface upcoming events of the current user with Microsoft Graph in Viva Connections card New sample ImageCard-At-a-glance by Anoop Tatti demonstrating on implementing a Viva Connection card surfacing news from portal New sample ManageTeam by Dipen Shah demonstrating a Viva Connection ACE card which can be used to manage user settings New sample PrimaryTextCard-CreateTeam by Dipen Shah demonstrating how to provision team from Viva Connections ACE card New sample PrimaryTextCard-PlannerTasks by Ejaz Hussain showing how to build an ACE with a PrimaryText card view and multiple quick views to display logged-in user Planner Tasks from all associated plans. New sample PrimaryTextCard-Service-Health by Anoop Tatti showing how to build an ACE with a card view and multiple quick views to display the status of the affected services in a tenant New sample PrimaryTextCard-TfL-Status by Anoop Tatti showing how to build an ACE with multiple card and quick views to get display status of Transport for London service New sample ace-cardgallery by Derek Cash-Peterson showing 11 custom adaptive card extensions to demonstrate the various features that can be implemented roughly based on the samples provided by the Adaptive Card documentation New sample react-news by Alison Collins which pulls all news which the logged user has access to view New sample react-graph-app-secret-expiration by Aimery Thomas which can be used to view the list of your applications registered in Azure AD along with their associated client secret/certificate expiration date New sample react-command-copy-move-items by Sudharsan Kesavanarayanan adding new command button for copy/move items in all custom lists Updates to react-advanced-page-properties sample by Abderahman Moujahid to enable multilingual support Other adjustments to numerous samples by our awesome community members! How to find what\u0026rsquo;s relevant for you? Take advantage of our SharePoint Framework web part and extension sample galleries - includes also solutions which work in Microsoft Teams Web Part sample gallery - http://aka.ms/spfx-webparts Extensions sample gallery - http://aka.ms/spfx-extensions Viva Connections Adaptive Card samples - http://aka.ms/spfx-aces Microsoft Teams samples build with SharePoint Framework - https://github.com/pnp/spfx-teams - These will be relocated soon  Microsoft Teams community samples    These are samples which have been contributed on the community samples since last summary. We do welcome all Microsoft Teams samples to this gallery. They can be implemented using in any technology.\n New sample bot-meeting-lifecycle-basic by Markus Möller showing a Teams meeting bot app handling lifecycle events New sample bot-meeting-lifecycle-feedback by Markus Möller showing a Teams meeting bot app handling lifecycle events by requesting feedback from the user New sample tab-blazor-leaderboard by Thomy Gölles as a sample Microsoft Teams Toolkit V2 Blazor project to create a simple leaderboard for a Teams Channel New sample tab-meeting-record-name by Markus Möller showing how to implement Teams Tab meeting app to record user names audio New sample tab-mgt-person by Markus Möller showing how to build Teams tab with SSO and Microsoft Graph Toolkit usage If you are interested on Microsoft Teams samples, we have just released also new Microsoft Teams sample gallery. Contributions to Microsoft Teams samples is also more than welcome. This gallery already surfaces all Microsoft samples, Microsoft Teams app templates and community samples.  Power Platform samples These are samples which have been contributed on the community samples since last summary. We do welcome all Power Platform samples to this gallery for providing a centralized location to share samples across the others in the community.\n New sample request-review-and-approval-for-a-selected-file by Lindsay Shelton as a flow which utilizes a SharePoint document library and Approvals to request that a supervisor or user review a file, approve or reject the file, and updates the SharePoint library with this information. New sample sharepoint-collect-feedback by April Dunnam which recreates the SharePoint Collect Feedback Workflow. It will run manually for a selected item in a list and allow you to specify the person(s) to receive feedback from and associate a custom message to the request. New sample sharepoint-hide-page-title by April Dunnam which hides the SharePoint page title, and shows it back in case the flow is executed against the same page.  \nThere was numerous smaller updates on the different Power Platforms samples. See more details on available samples from following location:\n\\\n Power Platform sample gallery - https://aka.ms/powerplatform-samples If you have any existing samples which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative. Here to help.  Microsoft 365 Script Samples    \nWe have released new Microsoft 365 Script Sample gallery within past month. We welcome all scripts on Microsoft 365 automation to this centralized repository, targeted to help to manage and automate day-to-day operations. Here are the latest updates on the Script Samples\n New script spo-setup-example-site by Adam Wójcik and Valeras Narbutas as as starting point for a setup script to create site with some assets like columns, content types, lists, navigation etc. New script spo-export-site-all-content by Rodrigo Pinto as a script which allows us to export all content from an existing SharePoint site New script spo-translate-list by Russell Gove as a script on translating columns in a SharePoint list New script spo-cleanup-site-column-usage by Marc D Anderson to clean up unwanted site columns from content types and lists/libraries New script spo-detect-theme by Dipen Shah as a script to get the currently installed theme in SharePoint site New script spo-export-sitecollection-permission-with-subwebs by Chandani Prajapati as a script for extracting user permission details from the site collection, including all sub webs - for example for auditing purposes New script create-comm-sites-specific-locale by Adam Wójcik for creating communication site in specific locale New script aad-delete-m365-groups-and-sharepoint-sites by Reshmee Auckloo to delete all Microsoft 365 Groups and SharePoint Online sites in your development environment New script spo-set-sharepoint-regional-settings by Valeras Narbutas to set custom regional settings in your SharePoint site New script aad-replace-owner-with-a-different-one by Reshmee Auckloo to find all the Microsoft 365 Groups that a user is an Owner of and replace them with someone else useful for when an employee leaves and ownership needs to be updated New script spo-generate-demo-events by Adam Wójcik to generate demo events for SharePoint events list New script spo-get-lists-libraries-item-count-permissions by Dipen Shah to Export all List and Libraries with Item count and Permission in CSV New script spo-copy-library-view by Reshmee Auckloo to copy a library view across multiple libraries in destination site New script spo-add-multiple-lists-using-csv-file by Valeras Narbutas to Create list and libraries from CSV file New script get-all-site-collections-subwebs by Adam Wójcik on How to to get all site collections with their sub webs New script spo-copy-webparts-to-another-page by Chandani Prajapati to Copy Webparts From One Page To Another Page New script spo-get-list-library-permission-export-to-csv by Chandani Prajapati for getting SharePoint List Or Library Permissions And Export It To CSV New script spo-add-site-design-with-custom-list by Valeras Narbutas to create and add site design to SharePoint site with site columns, content type New script spo-apply-column-format by Valeras Narbutas to apply column formatting definition to SharePoint column New script spo-export-sharepoint-list-items-to-csv by Valeras Narbutas to export SharePoint List Data to CSV with attachments New script spo-export-space-page-as-template-and-save-to-sharepoint by Valeras Narbutas to Extract Space content type Modern page as template and save to SharePoint If you have any existing scripts which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative.  Microsoft 365 Script Samples - https://aka.ms/script-samples  Sharing is Caring initiative    The \u0026ldquo;Sharing Is Caring\u0026rdquo; imitative is targeted for learning the basics around making changes in Microsoft Docs, in GitHub, submitting pull requests to the PnP repositories and in GitHub in general. Take advantage of this instructor lead training for learning how to contribute to docs or to open-source solutions. Everyone is welcome to learn how to get started on contributing to open-source docs or code!\n See more from the guidance documentation - including all upcoming instructor lead sessions which you can participate!  ✍ Different Microsoft 365 related open-source initiatives build together with the community See exact details on the latest updates from the specific open-source project release notes. You can also follow up on the project updates from our community calls. There are numerous active projects which are releasing new versions with the community even on weekly basis. Get involved!\n Microsoft Look Book - Discover the modern experiences you can build with SharePoint in Microsoft 365. Look book provides design examples for SharePoint Online which can be automatically provisioned to any tenant in the world. See more from https://lookbook.microsoft.com. This service is also provided as open-source solution sample from GitHub. yo teams - Open-source Yeoman generator for Microsoft Teams extensibility. Supports creation of bots, messaging extensions, tabs (with SSO), connectors and outgoing Webhooks. See more from https://aka.ms/yoteams. PnP Framework - .NET Standard 2.0 SDK containing the classic PnP Sites Core features for SharePoint Online. More around this package from GitHub. PnP Core SDK - The PnP Core SDK is an SDK designed to work for Microsoft 365 with Graph API first approach. It provides a unified object model for working with SharePoint Online and Teams which is agnostic to the underlying API\u0026rsquo;s being called. See more around the SDK from documentation. PnP PowerShell - PnP PowerShell is a .NET Core 3.1 / .NET Framework 4.6.1 based PowerShell Module providing over 400 cmdlets that work with Microsoft 365 environments and more specifically SharePoint Online and Microsoft Teams. See more details from documentation. Reusable SharePoint Framework controls - Reusable controls for SharePoint Framework web part and extension development. Separate projects for React content controls and Property Pane controls for web parts. These controls are using Office UI Fabric React controls under the covers and they are SharePoint aware to increase the productivity of developers. Office 365 CLI - Using the Office 365 CLI, you can manage your Microsoft Office 365 tenant and SharePoint Framework projects on any platform. See release notes for the latest updates. PnPJs - PnPJs encapsulates SharePoint REST APIs and provides a fluent and easily usable interface for querying data from SharePoint sites. It\u0026rsquo;s a replacement of already deprecated pnp-js-core library. See changelog for the latest updates. PnP Provisioning Engine and PnP CSOM Core - PnP provisioning engine is part of the PnP CSOM extension. They encapsulate complex business driven operations behind easily usable API surface, which extends out-of-the-box CSOM NuGet packages. See changelog for the latest updates. PnP PowerShell - PnP PowerShell cmdlets are open-source complement for the SharePoint Online cmdlets. There are more than 300 different cmdlets to use and you can use them to manage tenant settings or to manipulate actual SharePoint sites. They See changelog for the latest updates. PnP Modern Search solution - The PnP \u0026lsquo;Modern Search\u0026rsquo; solution is a set of SharePoint Online modern Web Parts allowing SharePoint super users, webmasters and developers to create highly flexible and personalized search based experiences in minutes. See more details on the different supported capabilities from https://aka.ms/pnp-search. Modernization tooling - All tools and guidance on helping you to transform you SharePoint to modern experiences from http://aka.ms/sppnp-modernize. SharePoint Starter Kit v2 - Building modern experiences with Microsoft Teams flavors for SharePoint Online and SharePoint 2019 - reference solution in GitHub. List formatting definitions - Community contributed samples around the column and view formatting in GitHub. Site Designs and Site Scripts - Community contributed samples around SharePoint Site Designs and Site Scripts in GitHub. **DevOps tooling and scripts **- Community contributed scripts and tooling automation around DevOps topics (CI/CD) in GitHub. Teams provisioning solution - Set of open-source Azure Functions for Microsoft Teams provisioning. See more details from GitHub.  ✍ Documentation updates Please see all the Microsoft 365 development documentation updates from the related documentation sets and repositories as listed below:\n Microsoft Teams platform documentation - Microsoft Docs | GitHub SharePoint Developer documentation - Microsoft Docs | GitHub Microsoft Graph documentation - Microsoft Docs | GitHub Office add-in documentation - Microsoft Docs | GitHub  🤩 Microsoft 365 Developer and Microsoft 365 Community YouTube video channels You can find all Microsoft 365 related videos on our YouTube Channel at http://aka.ms/m365pnp/videos or at Microsoft 365 Dev. These channels contains already a significant amount of detailed training material, demo videos, and community call recordings. Here are the new Microsoft demo or guidance videos released since the last monthly summary:\n  Introduction to Microsoft Viva Connections extensibility - Ed Averett (Microsoft) | @ed_Averett\n  Getting started on using Microsoft Viva Connections in your tenant - Tejas Mehta (Microsoft) | @tpmehta\n  Building custom search layout experiences in SharePoint with Microsoft Search - Jyoti Pal (Microsoft)\n  Microsoft Teams Sample code showcase - Wajeed Shaikh (Microsoft)\n  Updates on Independent Publisher Connectors for Power Platform \u0026amp; Yelp Connector Demo - Natalie Pienkowska (Microsoft) \u0026amp; Ahmad Najjar (Infoworker)   Preview on new templates for Microsoft Teams and SharePoint in SharePoint Framework - Vesa Juvonen (Microsoft)\n  Microsoft Search and Adaptive Cards - Jyoti Pal (Microsoft)   Excel API v1.14 Preview: Worksheet Protection Changed event - Raymond Lu (Microsoft)\n  Introduction to new modernized SharePoint Store - Yi Han (Microsoft)\n  Latest on SharePoint Site Scripts \u0026ndash; Intro and Roadmap - Cathy Dew (Microsoft)\n  Microsoft Graph JavaScript SDK Updates - Roina Ochieng (Microsoft)\n  Microsoft Graph Toolkit Latest Releases - Elise Yang (Microsoft) \u0026amp; André Lage (Datalynx AG)\n  Introduction to Microsoft Graph CLI - Roina Ochieng (Microsoft) \u0026amp; Samwel Kanda (Microsoft)\n  Getting started with Microsoft Lists templates - Harini Saladi (Microsoft)\n  Updates on Independent Publisher Connectors for Power Platform - Natalie Pienkowska (Microsoft) \u0026amp; Troy Taylor (Hitachi Solutions)\n  Getting started with Microsoft Teams UI Library - Will Shown (Microsoft)\n  Getting started with Microsoft Graph Toolkit - Waldek Mastykarz (Microsoft)\n  Getting started on building Microsoft Viva Connection adaptive card components using SPFx - Patrick Rodgers (Microsoft)   Introduction to Microsoft Graph .NET SDK v4 - Maisa Rissi (Microsoft) \u0026amp; Andrew Omondi (Microsoft)\n  Performance Insights - New Power Apps self-service tool for developers - Varda Shrivastava (Microsoft)\n  Shared mailboxes in Outlook - Juan Balmori (Microsoft) \u0026amp; Ankush Oberoi (Microsoft)\n  Convert table data to Excel and open it in Microsoft Teams for easier collaboration - David Chesnut (Microsoft)\n  Microsoft PowerPoint API update: Shape object - Onur Onder (Microsoft)\n  Building Microsoft Teams meeting apps with Power Apps - April Dunnam (Microsoft)\n  Hybrid work with Microsoft 365 and Teams - Mark Kashman (Microsoft)\n  Exposing business data in Viva Connections or in SharePoint with custom diagram web parts - Hugo Bernier (Microsoft)\n  Developing Real-Time Collaborative Apps with Azure, Microsoft 365, Power Platform, and GitHub\n  Learn how to develop real-time collaborative apps with Azure, Microsoft 365, Power Platform \u0026amp; GitHub - Dan Wahlin (Microsoft)\n  Microsoft 365 App Compliance Program \u0026ndash; Microsoft 365 Certification ensures apps are secure!\n  Multi-tenant architecture for SaaS apps with Microsoft 365 and Azure Active Directory - Rabia Williams (Microsoft) \u0026amp; Bob German (Microsoft)\n  TypeScript Core Concepts - Using interfaces in TypeScript - Dan Wahlin (Microsoft)\n  Microsoft Graph track changes (delta query)\n  Demo - Renewing notifications\n  Demo - Microsoft Graph change notifications\n  Microsoft Graph change notifications\n  Demo - Azure AD apps .NET core web APIs\n  Use Change Notifications and Track Changes with Microsoft Graph\n  Demo - Microsoft Graph track changes (delta query)\n  Teams App Dev Challenge winners show off Node.js and React app\n  Optimize network traffic with Microsoft Graph   TypeScript Core Concepts - Using classes in TypeScript - Dan Wahlin (Microsoft)\n  TypeScript Core Concepts - Getting started with TypeScript types - Dan Wahlin (Microsoft)\n  TypeScript Core Concepts - How to add WebPack to a TypeScript project - Dan Wahlin (Microsoft) New playlist - Bot Framework Series: Who\u0026rsquo;s is online by Ayca Bas (Microsoft) and Bob German (Microsoft)\n\\\n  How to use Bot Framework Composer to build low-code Microsoft Teams bots (Part 1)\n  Get user profile information in your Microsoft Teams bot with Microsoft Graph (Part 2)\n  Check who\u0026rsquo;s online with dialogs in Microsoft Bot Framework Composer (Part 3)\n  Integrate your bot with Azure LUIS (Part 4)\n  Build Adaptive Cards for your bot responses (Part 5)\n  Integrate your bot with Azure QnA Maker (Part 6)\n  Create a cancel intent with Azure Bot Framework Composer to handle interruptions in a bot (Part 7) Community demos as following:   Surface user specific calendar events with my Outlook events web part - Chandani Prajapati | @Chandani_SPD\n  Accessing personal files easily with My OneDrive Web Part - Siddharth Vaghasia | @siddh_me\n  Apply a custom theme or a variation of the current SharePoint theme directly to the web part - Fabio Franzini | @franzinifabio\n  Getting started with Bot Framework Composer for building Teams Task Modules - Stephan Bisser (Solvion) | @stephanbisser\n  List formatting rendering image and details for location and weather - Chris Kent (DMI) | @theChrisKent\n  Visio, Power BI Tiles and Reports in Power Apps! - Reza Dorrani (Catapult) | rdorrani\n  Power Apps Design Philosophy - May Alhajri | @MayAlhajri2\n  Hyperscript Tagged Markup (HTM) Templating with SharePoint Framework - Fabio Franzini | @franzinifabio\n  Building advanced image gallery experience with SharePoint Framework - Yannick Reekmans (Qubix)\n  Modernize your SharePoint Framework projects - Andrew Connell (Voitanos) | @andrewconnell\n  SharePoint Approval Workflow Status Tracking with Column Formatting - Reza Dorrani (Catapult) | rdorrani\n  Build your first conversational chatbot for Microsoft Teams - Stephan Bisser (Solvion)\n  Operators for Precision within List Formatting - Chris Kent (DMI) | @theChrisKent\n  Event Calendar Power App - Juli Reid\n  Getting stated with Microsoft Teams Toolkit and Blazor - Thomas Gölles (Solvion) | @thomyg\n  Building your first Power Platform community connector - Daniel Laskewitz (Sogeti) |@laskewitz\n  How To Feed Your Dragon Game - Gerard Simpson | @PowerFanAddict\n  List Formatting Enhanced Web Part - David Warner II (Catapult Systems) | @DavidWarnerII\n  Executive room reservation tool for Microsoft Teams and Viva Connections built with SPFx - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026amp; Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp\n  Using OneDrive Apps folder to save user\u0026rsquo;s preferences cross-device - Giuliano De Luca | @DeLucaGiulia\n  My Lists Notifications SPFx extensions - João Mendes\n  Getting started with Microsoft Lists - Templates, formatting and more - Chris Kent (DMI) | @theChrisKent\\\n  🧡 Key contributors to the October 2021 update Here\u0026rsquo;s the list of active contributors (in alphabetical order) since last release details in GitHub repositories or community channels. PnP is really about building tooling and knowledge together with the community for the community, so your contributions are highly valued across the Microsoft 365 customers, partners and obviously also at Microsoft. 🤩 Thank you for your assistance and contributions on behalf of the community. You are truly making a difference! If we missed someone, please let us know.\n  Aaron Blair\n  Abderahman Moujahid - Abderahman88\n  Abdur Rahim - @arahimx\n  Abdush Samad Miah (iThink365)\n  Adam Wójcik - @Adam25858782\n  Adis Jugo (Nubelus) - @adisjugo\n  Ahmad Najjar (Infoworker) - @ahmadn82\n  Aimery Thomas (Avanade) - @aimery_thomas\n  Albert-Jan Schot (BLIS Digital) - @appieschot\n  Alison Collins - ReactIntern\n  Alistair Pugin (Tangent Solutions) - @alistairpugin\n  Amin Tavakoli (SoftwareONE)\n  Ananda Vadivelan (Ericsson) - Anandavadivelan\n  André Lage (Datalynx AG) - @aaclage\n  Andrew Benson (InElec) - @ViewPorter\n  Andrew Connell (Voitanos) - @andrewconnell\n  Andrew Koltyakov (ARVO Systems) - @andrewkoltyakov\n  Annie Torres (Coppin State University)\n  Anoop Tatti (Content+Cloud) - @anooptells\n  Anton Brodin - AntonBrodin\n  Anup Khanal\n  April Shindelar - TechGyrl67\n  Ari Gunawan (DevStack) - @arigunawan3023\n  Arjun Menon (Tata Consulting Services) - @arjunumenon\n  Asad Refai (Intelogy) - @asadrefai\n  Ashar Khan (Gig Werks) - @Nicodemeus\n  Asith Wijekoon (Upwork) - @twitasithw\n  Atharva321 - Atharva321\n  Bartolome Sorrentino - bsorrentinoJ\n  Beau Cameron (Aerie Consulting) - @Beau__Cameron\n  Billie Barr\n  Bob Morris (ThreeWill)\n  Brad Wilcox (Mountain America Credit Union)\n  Caleb Miller (Great American Insurance) - @calebmil649\n  Cameron Dwyer (OnePlace Solutions) - @CameronDwyer\n  Chanh Ong - @chanh_ong\n  Chandani Prajapati (Rapid Circle) - @Chandani_SPD\n  Chris Kent (DMI) - @theChrisKent\n  Chris Revell (Consult 365 IT Solutions) - @consult_365\n  Chris Sparrow (PA Consulting)\n  Christian Zuellig (Monday Coffee) \u0026ndash; @ChristianZuell1\n  Christine Green (EBSCO Information Services) - @cacurtica\n  Christopher Graves (Arvato) - @Christo48927551\n  Claire Tasker (Innospec) - taskerciosp\n  Curtis Scheer\n  Dale Pilarczyk (Centric Consulting)\n  Daniel Westerdale (Westerdale Solutions Ltd) - @westerdaled\n  Daniel Laskewitz (Sogeti) - @laskewitz\n  David Aeschlimann (Post CH AG) - TashunkoWitko\n  David Fulcher - rdftech\n  David Warner II (Catapult) - @DavidWarnerII\n  Dennis Kuhn (Fusion5) - DennisKuhn\n  Dinesh (Cognizant) - techbvdinesh\n  Dipen Shah (Rapid Circle) - @Dips_365\n  Django Lohn (InSpark) - @LohnDjango\n  Derek Cash-Peterson (Sympraxis Consulting) - @spdcp\n  Don Shults - donshults\n  Ed Gonzales (EY) - @PoweredByEdG\n  Edris Kakembo (WFP) - @kaxeddie\n  Ejaz Hussain (Content+Cloud) - @EjazHussain_\n  Elia - @_twopill\n  Elio Struyf (Struyf Consulting) - @eliostruyf\n  Ellis Karim - @MrCaptainKarim\n  Emily Mancini (Sympraxis Consulting) - @EEMancini\n  Emmon Johnson (SUNY Oneonta) - johnsoep\n  Eric Overfield (PixelMill) - @EricOverfield\n  Erwin van Hunen (Valo Intranet) - @erwinvanhunen\n  Fabio Franzini - @franzinifabio\n  Frank Cornu (aequos) - @FranckCornu\n  Fredrik Thorild (Sogeti) - @taxonomythorild\n  Ganesh Sanap - @ganeshsanap20\n  Garrick - gthornton7225\n  Garrick George (City of Thornton) - @kod3m0ng3r\n  Gautam Sheth (Valo) - @gautamdsheth\n  Georges Clément KOUASSI\n  Gerard Simpson - @PowerFanAddict\n  Giacomo Pozzoni (DQC Sverige Ab) - @PozzoniGiacomo\n  Gissur Simonarson (Fujitsu) - @gissisim\n  Giuliano De Luca - @delucagiulian\n  Gopi Nagalingam - nvgopi\n  Guido Zambarda - GuidoZam\n  Harold Wolfinger\n  Henrik Yllemo (Ylltec Sweden AB) - @yllemo\n  Hugo Esperanca (Collaboris) - hesperanca\n  Jacob Warrington (Catapult Systems)\n  Jake Stanger - JakeStanger\n  Janne Holm (Meltlake) - jhholm\n  James May - @fowl2\n  Jarbas Horst (Valo) - @devjhorst\n  Jasey Waegebaert - Jwaegebaert\n  Jason Lambiris (Apex Digital Solutions) - @ApexEmpowers\n  Jean-Luc Richer (UMAknow) - umaknow-jeanluc\n  Jennifer Erzen (SUNY Upstate Medical University) - @jennifererzen\n  Jennifer McGee (Wood)\n  Jasey Waegebaert - Jwaegebaert\n  Jeremy Hancock - @ozippy\n  Jim Love (ID Live Ltd) - @jimmywim\n  Joanne Klein (NexNovus Consulting) - @JoanneCKlein\n  João Mendes - @joaojmendes\n  Joe Gasper (University of Florida) - @ReactorJoe\n  Joel Rodrigues (Storm Technology) - @JoelFMRodrigues\n  Joshua Probst (IntraConnect GmbH) - @icJoshuaProbst\n  Jouni Pohjolainen (Valo) - jonepo\n  Juli Reid - LinkedIn\n  Julie Turner (Sympraxis Consulting) - @jfj1997\n  Kathleen Boilek (Alaka\u0026rsquo;Ina Foundation) - @kaboilek\n  Katrin Rannaste\n  Kiryl Shchasny - lirik30\n  [kmrshubham0 - kmrshubham0]{.commit-author .user-mention}\n  [koulchi - koulchi ]{.commit-author .user-mention}\n  Kunj Balkrishna Sangani - kunj-sangani\n  Kyle - skyleguy\n  Lance Yoder (Cerner) - @lyoder\n  Laura Kokkarinen (Sulava) - @LauraKokkarinen\n  Linda Delarvé\n  Lindsay Shelton - @lshelton_tech\n  Luise Freese (Luise Freese M365 Princess) - @LuiseFreese\n  Magnus Ellinge - ellinge\n  Maarten van Stam (Deloitte) - @aafvstam\n  Manjunath Puttaswamy (Momentive Performance Materials India Private Limited) - @ManjunathPutta3\n  Marc D Anderson (Sympraxis Consulting) - @sympmarc\n  Marc Hoffmann (DTI Schweiz AG) - Laetterman\n  Marcelo Lorca - mcselorca\n  Marco Moris - CreativeAcer\n  Marcus Cadena - @marcusc83\n  Mark van Dijk (Ichicraft) - @MarksPoint\n  Markus Möller (Avanade) - @moeller2_0\n  Matt Beard (Data8ltd) - mattybeard\n  Matt Taylor (SJOC Construction Inc.) - matt-sjoc\n  May Alhajri (Schlumberger) - @MayAlhajri2\n  Melissa Declercq (Savaco NV)\n  Michał Romiszewski - @romiszewski\n  Michael Rees Pullen - mrpullen\n  Michaël Maillot (onepoint) - @michael_maillot\n  Michaël Van den Steen (Stad Aalst) - @MichalVandenSt1\n  Michael Krupey (Deloitte) - @mkrupey\n  Michel Mendes (Storm Technology) - @michelcarlo\n  Mike Duffy (Boardwalk Pipelines) - @mike_duffy\n  Mike Dumka (Habanero Consulting Group) - @mikedumka\n  Mike Markett (DFC)\n  Mohammad Amer (Atea Global Services Ltd.) - @Mohammad3mer\n  mrkhandev - mrkhandev\n  Muzna Kanwal (MKDigitrix) - @muzna_kanwal\n  Nader Hadjebi - @nader2015\n  Nagalingam Krishna (First Horizon) - nvgopi\n  Nanddeep Nachan \u0026ndash; @NanddeepNachan\n  Nick Brown (Cardiff University) - @techienickb\n  Nick Sarver - Numuhukumakiakiaialunamor\n  Nicole Fleming (Sherwin Williams)\n  Nigel Bridport - BaronSparky\n  Nitish Kashyap (CNX) - nitishkanu820\n  Ofer Gal (ECG Management Consultants) - @ofergal\n  Omar Stewey - @OmarStewey\n  Omar Stewart (Deloitte) - @OmarStewey\n  Paolo Pialorsi (PiaSys.com) - @PaoloPia\n  Patrik Hellgren (Sherpas Group) - @patrikhellgren\n  Patrick Lamber (Expertsinside AG) - @patricklamber\n  Patrick Tucker (KiZAN) - @Tuckersnet\n  Paul Bullock (CaPa Creative Ltd) - @pkbullock\n  Paul Culmsee - @paulculmsee\n  Paul Lindsay (Montana State University) - @MSU_UITMarCom\n  Paul Schaeflein (AddIn365) - @paulschaeflein\n  Peter Paul Kirschner (cubido business solutions GmbH) - @petkir_at{.Link\u0026ndash;primary}\n  Pete Simpkins (Fluid Interiors) - @simpkinspete\n  Rachel Spannuth (Thermo Fisher Scientific) - @RachelofLight\n  Ralph Rivas (Sogeti) - @bigpix2000\n  Ranjit Mohan (Bosch) - @ranjit_mohan\n  Ravichandran Krishnasamy (Content Formula) - @spfx_blog\n  René Modery - @Modery\n  Reshmee Auckloo (Pension Protection Fund) - @ReshmeeAuckloo\n  reusto - reusto\n  Reshmee Auckloo (Pension Protection Fund) - reshmee011\n  Reza Dorrani (Catapult) - @rezadorrani\n  Rick Van Rousselt (Advantive) - @rickvanrousselt\n  Rob Bell (Kizan technologies)\n  Robert Lindström - robert-lindstrom\n  Rocio Holub (DAI)\n  Rodrigo Pinto (Storm Technology) - @ScoutmanPt\n  Rohit S Patil (C3it) - Rohitspatil\n  Rolands Strakis (Atea Global Services SIA) - wonderplayer\n  Ron Jones (Organogenesis)\n  Rusen Unlu (SQR Systems)\n  Russell Gove (Tronox) - russgove\n  Ryan Healy (365Apps) - @Ryan365Apps\n  Sabrina Faragoza (Cognizant\u0026rsquo;s Microsoft Business Group)\n  Sam Bridegroom (Allied Solutions) - @sambridegroom\n  Sarah Bruty\n  Sean Garvin\n  Sekar Thangavel - @SekThang\n  Sergei Sergeev (Mastaq) - @sergeev_srg\n  Serge Tremblay (Technologia) - @Sergepoint\n  Sharon Weaver (Smarter Consulting) - @sharoneweaver\n  Shantha Kumar T - @ktskumar\n  Siddharth Vaghasia - @siddh_me\n  Simon Doy (iThink 365) - @simondoy\n  Simon Hudson (Cloud2) - @simonjhudson\n  Simon Thompson (Experience Applied) - @Thompsonsimon\n  Simon Ågren (Sogeti) - @Agrenpoint\n  Smita Nachan - @SmitaNachan\n  Spencer Harbar (Triumph Media Limited) - @harbars\n  Srivatsa (Tarento Technologies) - @bssrivatsa\n  Sudharsan Kesavanarayanan (NTT Digital Business Solutions) - @sudharsank\n  Stefan Bauer (n8d) - @StfBauer\n  Stefan Cremer\n  Stephan Bisser (Solvion) - @stephanbisser\n  Steven Chorkawy - Steven-Chorkawy\n  Steven Reid (FTZ) - @Steven_Reid\n  Sudharsan Kesavanarayanan (NTT Digital Business Solutions) - @sudharsank\n  Sue McGuire (Apex Digital Solutions) - @mcguiresue\n  svermaak - svermaak\n  Takashi Shinohara - karamem0\n  Theresa DeMichiei - tdemichieiSCI\n  Theresa Lubelski (First Horizon Bank) - @sharepointmadam\n  Thomas Daly (SoHo Dragon) - @_tomdaly_\n  Thomas Vochten (The Cronos Group) - @ThomasVochten\n  Terry McCullagh - @TerryMcCullagh\n  Tetsuya Kawahara - @techsn_k\n  Tim Balk (Wellmark) - @tlbalk\n  Tim Hahn - timdhahn\n  Thomy Gölles (Solvion) | @thomyg\n  Todd Baginski (Canviz) - @toddbaginski\n  Todd Klindt (Sympraxis Consulting) - @ToddKlindt\n  Tony Derricott (BYUI) - @computx\n  Tora Grufstedt (Forefront Consulting Group)\n  Tracy Sterling - TracyGH\n  Troy Taylor (Hitachi Solutions) - @troystaylor\n  Valeras Narbutas (Macaw) - @ValerasNarbutas\n  Varol Saatcioglu (Cognizant Microsoft Business Group) - @varol_ninja\n  Veronique Lengelle (CPS) - @veronicageek\n  Vipul Kelkar (Rapid Circle) - @vipulkelkar\n  Vijay Sisodia - @ec0321\n  Will Ramirez - @willmx\n  WimVandierendonck - WimVandierendonck\n  Yannick Plenevaux (PVX Solutions) - @yp_code\n  Yannick Reekmans (Qubix365) - @YannickReekmans{.Link\u0026ndash;primary}\n  Zach - zachroberts8668\n  Yuriy Samorodov (Intermedia) - YuriySamorodov\n  Yuxiang (McMaster University) - @guan_yuxiang Companies: Here\u0026rsquo;s the companies, which provided support the community initiative for this month by allowing their employees working for the benefit of others in the community. There were also people who contributed from other companies during last month, but we did not get their logos and approval to show them in time for these communications. If you still want your logo for this month\u0026rsquo;s release, please let us know and share the logo with us. Thx.     Addin365\n  aequous\n  Arvo Systems\n  BLIS Digital\n  Canviz Solutions\n  Catapult Systems\n  CPS\n  cubido business solutions GmbH\n  Content+Cloud\n  devstack.ds\n  DMI\n  dqc\n  iThink 365\n  MondayCoffee\n  N8D\n  NTT Digital Business Solutions\n  onepoint\n  Piasys\n  PixelMill\n  Pramerica\n  PVX Solutions\n  Qubix\n  Rapid Circle\n  Sherpas\n  SoHo Dragon\n  Solvion\n  Sogeti\n  Storm Technology\n  Struyf Consulting\n  Sulava\n  Sympraxis Consulting\n  ThreeWill\n  Valo\n  Voitanos\n\\\n  Microsoft people: Here\u0026rsquo;s the list of Microsoft people who have been closely involved with the PnP work during last month.\n Aakash Bhardwaj - @aakash_316 Alex Terentiev - @alexaterentiev Aline Tognini - alinefmr Allen Snow - @asnow003 April Dunnam - @aprildunnam Ayca Bas - @aycabs Bert Jansen - @O365Bert Beth Pan - @beth_panx Beverly Kim - bvandaal Bob German - @Bob1German Bryan Petersen - petey121175 Charles Sterling - @chass Dan Wahlin - @DanWahlin David Chesnut - davidchesnut Doğan Erişen - derisen Elizabeth Samuel - ElizabethSamuel-MSFT Elise Yang - @elisenyang Garry Trinder - @garrytrinder Holger Lutz - HolgerLutz Hugo Bernier - bernierh James Eccles - jameseccles Jason Johnston - jasonjoh John Nguyen - johnguy0 Jos Verlinde - Josverl Karthig Balendran - @KarthigBalendr1 Kevin Coughlin - @kevintcoughlin Keyur Patel - keyur32 Koen Zomers - @koenzomers Holland Kaviani - Holland-ODSP Laura Graham - Lauragra Linda Lu Cannon - lindalu-MSFT Loki Meyburg - @lokimeyburg Luca Bandinelli - lucaband Mikael Svenson - @mikaelsvenson Natalie Pienkowska - NataliePienkow1 Nik Charlebois - @NikCharlebois Nicolas Vogt - vogtn Nikola Metulev - @metulev Pam Green (Microsoft) - @contextuallib Pat Miller - @PatMill_MSFT Patrick Rodgers - @mediocrebowler Rabia Williams - @williamsrabia Rick Kirkham - Rick-Kirkham Sam Larson - salarson Shane Weaver - shweaver-MSFT Sébastien Levert - @sebastienlevert Steven Jia - Steven-Jia Tom Resing - @resing Tomomi Imura - @girlie_mac Vesa Juvonen - @vesajuvonen Wajeed Shaikh - Wajeed-msft Waldek Mastykarz - @waldekm Wictor Wilen - @wictor Vincent Biret - @baywet  MVP Community team MVP Community team (PnP Team) manages the PnP community work in the GitHub and also coordinates different open-source projects around Microsoft 365 topics. PnP Team members have a significant impact on driving adoption of Microsoft 365 topics. They have shown their commitment to the open-source and community-driven work by constantly contributing to the benefit of the others in the community. Thank you for all that you do!\n Albert-Jan Schot (BLIS Digital) - @appieschot Andrew Connell (Voitanos) \u0026ndash; @andrewconnell Andrew Koltyakov (ARVO Systems) \u0026ndash; @andrewkoltyakov Beau Cameron (Aerie Consulting) - @Beau__Cameron Chris Kent (DMI) \u0026ndash; @theChrisKent David Warner II (Catapult) - @DavidWarnerII Elio Struyf (Struyf Consulting) \u0026ndash; @eliostruyf Emily Mancini (Sympraxis Consulting) - @EEMancini Eric Overfield (PixelMill) - @EricOverfield Erwin van Hunen (Valo Intranet) \u0026ndash; @erwinvanhunen Frank Cornu (aequos) - @FranckCornu Gautam Sheth (Valo Intranet) - @gautamdsheth Julie Turner (Sympraxis Consulting) - @jfj1997 Laura Kokkarinen (Sulava) - @LauraKokkarinen Luise Freese - @LuiseFreese Marc D Anderson (Sympraxis Consulting) - @sympmarc Paolo Pialorsi (Piasys.com) \u0026ndash; @PaoloPia Patrick Lamber (Expertsinside AG) - @patricklamber Paul Bullock (CPS) - @pkbullock Stefan Bauer (n8d) \u0026ndash; @StfBauer Velin Georgiev (Pramerica) \u0026ndash; @velingeorgiev Veronique Lengelle (CPS) - @veronicageek Yannick Plenevaux (PVX Solutions) - @yp_code Here are the Microsoft Internal PnP Core team members: Alex Terentiev - @alexaterentiev April Dunnam - @aprildunnam Bert Jansen \u0026ndash; @O365Bert Bob German - @Bob1German Garry Trinder - @garrytrinder Hugo Bernier - @bernierh Koen Zomers - @koenzomers Mikael Svenson -@mikaelsvenson Patrick Rodgers \u0026ndash; @mediocrebowler Rabia Williams - @williamsrabia Sébastien Levert - @sebastienlevert Vesa Juvonen \u0026ndash; @vesajuvonen Waldek Mastykarz \u0026ndash; @waldekm Wictor Wilen - @wictor\n\\  🤩 Next steps See all of the available community calls, tools, components and other assets from https://aka.ms/m365pnp. Get involved! Got ideas or feedback on the topics to cover, additional partnerships, product feature capabilities? - let us know. Your input is important for us, so that we can support your journey in Microsoft 365.\n\u0026ldquo;Sharing is caring\u0026rdquo; 🧡\n Microsoft 365 Community (PnP) \u0026ndash; October 22nd 2021\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-october-2021-update/images/oct-monthly-summary-promo_hu2c620401714246742e148d9fb7ea7fa3_569360_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-october-2021-update/","tags":[],"title":"Microsoft 365 PnP Community -- October 2021 update"},{"categories":["CLI for Microsoft 365"],"contents":" We\u0026rsquo;ve just published a new version of the CLI for Microsoft 365 with new commands for working with and managing Microsoft 365 tenants and SharePoint Framework projects on any platform. Manage Microsoft 365 and SharePoint Framework projects on any platform  CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use. While building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects. New version of CLI for Microsoft 365 \u0026ndash; v4.1  Following our monthly release cadence, we\u0026rsquo;ve released a new version of the CLI for Microsoft 365 with some new capabilities. Here are a few of the most noteworthy additions. Updates Upgrade SharePoint Framework projects to SPFx v1.13  Recently, Microsoft announced that SPFx v1.13, which was previously in public preview, has now been made Generally Available, introducing new exciting capabilities for extending Viva Connections using Adaptive Card Extensions. To learn more about extending Viva Connections see the new learning path. To upgrade your SPFx project to v1.13 version, change the working directory to your project and execute: m365 spfx project upgrade --output md \u0026gt; report.md  We\u0026rsquo;d also recommend that you try a richer upgrade report based on the Visual Studio Code CodeTour extension: m365 spfx project upgrade --output tour  For more information about upgrading SharePoint Framework projects, see the CLI documentation.\nUpdates information of a specified Azure AD user  User management is one of the core activities of every Microsoft 365 tenant admin. We\u0026rsquo;ve introduced a new command that enables you to update Azure AD users properties and the ability to enable or disable those accounts. To update the properties of a specific user, execute: m365 aad user set --userPrincipalName steve@contoso.onmicrosoft.com --Department \u0026#34;Sales \u0026amp; Marketing\u0026#34; --CompanyName Contoso  To disable a specific user, execute: m365 aad user set --userPrincipalName steve@contoso.onmicrosoft.com --accountEnabled false  For more information about managing Azure AD user accounts, see the CLI documentation. Upgrading commands to Microsoft Graph v1.0 endpoint  When adding new commands to CLI for Microsoft 365, we sometimes take advantage of Microsoft Graph Beta endpoint to provide new capabilities, over time however these endpoints mature and reach General Availability, being made available in the Microsoft Graph v1.0 endpoint. As part of our regular review of commands, we highlighted some commands that could be upgraded. The following commands have been upgraded as part of this release:  aad siteclassification get aad siteclassification enable aad siteclassification set   New Sample Scripts CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts. If you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios. Flow runs day summary report  This sample script creates a report of all flow runs from current day and sends the report as an adaptive card to the provided url. Add users to the Associated SharePoint Groups of a site from a CSV File  This sample script adds multiple users to associated SharePoint groups (Owners, Members, Visitors) of a site from a CSV file. List Microsoft Teams teams, channels, and tabs in the tenant This sample script will list some information about each Teams, channels, and tabs within the tenant. Contributors  This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order):  Atharva321 Shantha Kumar Veronique Lengelle Waldek Mastykarz Arjun Menon Abderahman Moujahid Nanddeep Nachan Garry Trinder Rabia Williams Adam Wojcik  Work in progress  Here are some things that we are currently working on. CLI for Microsoft 365 v4 Themes  Following our latest major release, we have started thinking about themes for the coming year but we would love to know what you think we should concentrate on next. If you have any suggestions, please let us know by adding your suggestion to our open discussion on GitHub. Upgrading commands to Microsoft Graph v1.0  We are constantly evaluating the implementation of our commands to ensure that we are using endpoints that provide the best stability and support, therefore we are will be upgrading commands that use Microsoft Graph Beta endpoint to use their equivalent endpoint in Microsoft Graph v1.0. In addition to upgrading commands that use Microsoft Graph, we have also started work on upgrading commands that use, the now deprecated Azure Active Directory Graph API, which will reach end of life in June 2022. These commands will be be upgraded to use the appropriate Microsoft Graph endpoints. Script examples  In every release of the CLI for Microsoft 365, we introduce new commands for managing Microsoft 365. With over 350 commands across the different Microsoft 365 services, the CLI for Microsoft 365 has become a powerful tool, not just for managing your tenant but also for automating your daily work. We\u0026rsquo;d love to show you how you can use the CLI for Microsoft 365 to build automation scripts in PowerShell Core and Bash. If you have any scripts using SPO or PnP PowerShell that you use frequently, please share them with us so that we can learn more about the common automation scenarios. Try it today  Get the latest release of the CLI for Microsoft 365 from npm by executing: npm i -g @pnp/cli-microsoft365  Alternatively, you can get the latest release from Docker by executing: docker run --rm -it m365pnp/cli-microsoft365:latest  If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365. If you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/images/CLI%20for%20Microsoft%20365%20v4.1","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v4-1/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 v4.1"},{"categories":["Office add-in developer community call"],"contents":"  Call summary This month\u0026rsquo;s community call features presentations - Word API updates (extensibility API updates - Word Online Only APIs, Bookmarks APIs, Shared Runtime Support, and Upcoming APIs), Outlook on Mac API updates (new extensibility updates \u0026ndash; Mailbox 1.9 GA, Upcoming \u0026ndash; Mailbox 1.10 Signature APIs, and Upcoming - Event-based Outlook add-ins), and Demo: Hello World code sample (deliver the iconic greeting from Word, Excel, Outlook, and PowerPoint add-ins). This month\u0026rsquo;s community spotlight recognizes MVP Maarten van Stam and Eric Legault for their continued contributions. Thank so much! Register for the PnP Recognition Program. Q\u0026amp;A live and in chat throughout call. The call was hosted by David Chesnut (Microsoft) | @davidchesnut\nMicrosoft Presenters  Abid Rahman - Program Manager Ashima Mathur - Program Manager David Chesnut - Senior Dev Writer  Agenda  Word API updates - Abid Rahman, Program Manager (Microsoft) \u0026ndash; 1:07 Outlook on Mac API updates Ashima Mathur, Program Manager (Microsoft) - 10:11 Demo: Hello world code sample - David Chesnut, Senior Dev Writer (Microsoft) - 19:19 Community spotlight - Eric Legault, Maarten van Stam \u0026ndash; 29:31 Q\u0026amp;A \u0026ndash; 30:27  Actions  Please reach out to us to provide input on upcoming Word APIs such as the Bookmark APIs: http://aka.ms/wordextensibilitysurvey  Give us feedback on the Hello World sample in the PR: https://github.com/OfficeDev/PnP-OfficeAddins/pull/213 Earn contributor badges - sign up for the PnP Recognition program: https://pnp.github.io/recognitionprogram/   Q\u0026amp;A (Question \u0026amp; Answers) Can you please demo, or provide sample code for events in Office Word add-ins? Go to https://github.com/OfficeDev/ and search for \u0026ldquo;Word\u0026rdquo; to find several code samples that may have the information you need in the archive. For example, https://github.com/OfficeDev/Word-Add-in-JavaScript-AddPopulateBindings shows how to create and bind to content controls. If there are specific scenarios you want to see in a demo or sample, please create an issue at https://github.com/OfficeDev/PnP-OfficeAddins. This is where we publish new samples and it would be great to learn more about what you\u0026rsquo;d like to see in the sample! Are there any plans to allow activating Outlook add-ins to include examining email headers? I\u0026rsquo;ve raised the issue on Developer Platform already but wanted to know if it had come up internally. We don\u0026rsquo;t have plans to enable examining email headers at this time. It looks like a feature request was created for this idea at https://techcommunity.microsoft.com/t5/microsoft-365-developer-platform/activate-contextual-add-ins-using-regex-based-on-headers-in/idi-p/2781149. If developers can upvote or tell us more about this scenario that will help in our planning down the road.\n\nCan we please have the ability for admins to pin Office Add-ins to the toolbar in the new Outlook experience? We don\u0026rsquo;t have plans to support pinning Office Add-ins at this time. If you could create a feature request at https://aka.ms/m365dev-suggestions and tell us more about this scenario that will help in our planning.\n\n**Following up on questions from the November 2020 Call: Could we have a method for Word, Excel, and PowerPoint to save a file? Word and Excel have context.document.save() and context.workbook.save() but they lack options for similar behavior (eg. skip save dialogue). PowerPoint does not have context.presentation.save() yet. Could we have an equivalent method for all 3 (Word, Excel, PowerPoint) with similar options/behaviors? This is really needed for developers. Similar to the previous question, could we have an equivalent method for all 3 (Word, Excel, PowerPoint) to close files with similar options/behaviors? **\nBack in November 2020, we had PowerPoint save and close methods on the roadmap. Unfortunately, we had to shift resources and reprioritize, and these are no longer on the roadmap. So we apologize about the confusion on the planning for these methods. We can\u0026rsquo;t guarantee the roadmap won\u0026rsquo;t change over time but we try to stick to the roadmap as much as we can.\nThe best way to keep these methods on our planning radar is to request them at https://aka.ms/m365dev-suggestions. It looks like there is already a feature request for these methods at https://techcommunity.microsoft.com/t5/microsoft-365-developer-platform/office-js-save-and-close-methods-for-word-excel-and-powerpoint/idi-p/2800214. So if you or anyone is interested in these methods, please upvote and let us know more about your scenarios.\n\nWe\u0026rsquo;d like to hear more about the roadmap of Office.js development for PowerPoint automation. We\u0026rsquo;re interested in the following functionalities: Creating new slides based on different master slide templates, mass updates of footers, and mass updates of text string that follow certain logic (similar to Word placeholders). To insert slides from different slide masters, use the insertSlidesFromBase64() API which supports slide master options (currently in beta).\nWe don\u0026rsquo;t have footer manipulation APIs, or find and replace logic similar to PowerPoint. Please tell us more about these scenarios by creating a feature request at https://aka.ms/m365dev-suggestions.\n\nAre the new Word APIs available cross-platform? In general, new Word APIs are available on Word on the web first. Later they are available for other platforms. The Comments and Footnotes APIs are only available on Word on the web at this time. We do plan to make them available cross-platform in the future.\nIs it possible to download the full beta API library locally instead of using the CDN endpoint at https://appsforoffice.microsoft.com/lib/beta/hosted/office.js? The non-beta library can be downloaded using NuGet, but I can\u0026rsquo;t seem to find the beta. We don\u0026rsquo;t provide a preview (beta) version of the office.js library to be used in offline scenarios. For more information on offline target scenarios, see https://www.npmjs.com/package/@microsoft/office-js.\nTrying out preview APIs requires that you reference the beta endpoint. For more information on how to reference release and preview versions of the APIs, see Referencing the Office JavaScript API library.\nWill the BeforeSave and BeforeClose events be coming for Excel? Will the ability to turn AutoSave off and on be coming for Excel? The BeforeClose event is on our backlog, but we don\u0026rsquo;t yet have an ETA for when it will be ready. The BeforeSave event is not on our roadmap. The ability to turn AutoSave off and on is also not on our roadmap. Currently, we\u0026rsquo;re focusing on building out APIs that apply to all platforms (web, Windows, Mac, mobile.) These features only apply to desktop platforms because web is AutoSave by default. But we\u0026rsquo;d like to understand more about your scenario. Please submit a feature request for this at https://aka.ms/m365dev-suggestions.\nResources Word Extensibility (API) Updates  Documentation \u0026ndash; Word.Comment class Documentation \u0026ndash; Word.NoteItem class GitHub Feedback \u0026ndash; office-js issues Article \u0026ndash; Use the shared JavaScript runtime to improve the UI experience of your Office Add-in Documentation \u0026ndash; Configure your Office Add-in to use a shared JavaScript runtime Survey \u0026ndash; Word Extensibility Survey  Outlook extensibility on Mac API updates  Article \u0026ndash; The new Outlook for Mac Documentation \u0026ndash; Outlook add-in API requirement set 1.9 Documentation \u0026ndash; Outlook add-in API requirement set 1.10  Demo: Hello World code sample  Repo \u0026ndash; Hello world samples Article \u0026ndash; Office Add-ins platform overview  Office Add-ins community call  Upcoming agenda and previous call resources Recurring, monthly community call calendar invite Community call topic requests and questions Community call recordings on the YouTube Microsoft 365 community channel  Office Add-ins feedback  Technical questions \u0026ndash; Microsoft Q\u0026amp;A (office-js-dev), (office-addins-dev) Issues \u0026ndash; GitHub Recommendations and suggestions \u0026ndash; Microsoft 365 Developer Platform ideas   ","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-october-13-2021/images/OctAdd-insRecordingThumb_hua1ffba860dae94be4390a5ec08ddcf8c_1151192_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-october-13-2021/","tags":[],"title":"Office Add-ins community call -- October 13, 2021"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from October 21st is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary A reminder to tune in each Tuesday for the new Microsoft 365 platform community call. Featured topics for the call on October 26th are Getting started with hub associations in SharePoint - building the hub of hubs (Cathy Dew) and Progressive Web Apps and Beyond: Supercharging OneDrive \u0026amp; SharePoint web apps (Andrew Esipov). The time is now to register for Hacktoberfest 2021. Register for training events in October \u0026ndash; November hosted by Sharing is Caring. Register for the PnP Recognition Program. Released SharePoint Framework v1.13 GA with Viva Connections extensibility support, General Availability of Adaptive Card Extensions (ACEs), new Microsoft Teams online developer workbench and more. PnP project releases out the door are PnPjs Client-Side Libraries v2.10.0 GA v3.0.0 early preview, CLI for Microsoft 365 v4.1.0 Preview, Reusable SPFx React Controls v3.4.0 and PnP Modern Search v4.4.0 Preview. **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago) PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.13.0 GA v1.14.0 January target PnPjs Client-Side Libraries v2.10.0 GA, v3.0.0 early preview nightly builds of v3 CLI for Microsoft 365 v3.13.0 Preview, v4.0.0 GA, v4.1.0 Preview Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.4.0 Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1) PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search **v4.4.0 Preview, **v4.3.0 \u0026amp; v3.21.0 Release expected any day\nAdditionally, 1 extension and 6 web part and 1 ACE samples delivered in the last 2 weeks! Grrrreat! Thank you all for your contributions. The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place as always in chat throughout the call. Full house today. Clearly we\u0026rsquo;ve outgrow this venue. Great to see everybody. See you again soon. Actions  Vote: Next SPFx Design Patterns Topic \u0026ndash; November 4, 2021 Register today for Hacktoberfest 2021 \u0026ndash; https://hacktoberfest.digitalocean.com Register for Microsoft Ignite (Digital event) - November 2-4, 2021- https://ignite.microsoft.com Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; November 3rd (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor - October 27th  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  Ask Me Anything (AMA) \u0026ndash; PnP PowerShell \u0026ndash; October 26th Ask Me Anything (AMA) - CLI for Microsoft 365 \u0026ndash; November 9th Ask Me Anything (AMA) \u0026ndash; PnPjs \u0026ndash; November 16th First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; November 9th  Maturity Model Practitioners \u0026ndash; October 19th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   At a Glance Web Part and Viva Adaptive Card Extension \u0026ndash; this sample shows a web part and an ACE, that displays the first few sentences of a news article in a carousel on a SharePoint page (desktop or mobile) or in cards in a Viva Connections Dashboard (Card view with deep link to full article). Control number sentences displayed and display actual, or curator summarized sentences. Clean code to get articles, to extract sentences, to render.   Share to Teams \u0026ndash; SPFx Command Set Extension \u0026ndash; from within SharePoint, this extension allows user to 1-select share site pages, files, folders, and list items directly to selected (from dropdown) channels or groups in Microsoft Teams. A concise 6-step CodeTour familiarizes the viewer with the inner workings of this extension. Use available scripts to create the Share-to-Teams button.   SPFx Design Patterns - Property Panes are web parts designed specifically to configure affiliated web parts. Types of property panes and code reviewed in this demo include Single, Accordion (collapsible sections), and Steps (options presented shaped by previous selectins). Ease of use is a primary design criterion. When to use/not use a property panes is predicated on directness. See property pane samples in the SPFx samples repository.   SPFx extension samples: (https://aka.ms/spfx-extensions)\n Animated Progress Bar* - Ari Gunawan | @AriGunawan3023  * to be posted soon. SPFx web part samples: (https://aka.ms/spfx-webparts)\n  Emoji Reactions* - Siddharth Vaghasia | @siddh_me\n  My Events \u0026ndash; Date Fixed* - Chandani Prajapati | @Chandani_SPD\n  React Org Chart \u0026ndash; Read Users / Managers* - Tom Daly | @_tomdaly_\n  SharePoint News Star Ratings* - Takashi Shinohara | @karamem0\n  React Groups \u0026ndash; Team Tab Support* - Alison Collins | https://github.com/ReactIntern\nReact Documents Accordion* - João Mendes | @joaojmendes\n  * to be posted soon. **PnP SPFx ACEs **https://aka.ms/spfx-aces\n Upcoming Events - Zach Roberts | @ZachSPODev Thank you for your great work. Samples are often showcased in Demos.   Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 7:43 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 10:01 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 12:16 PnP SPFx Controls -Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 13:05 PnP Modern Search - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 14:01 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 14:53 PnP SPFx ACEs Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 16:17   Demos   D1: At a Glance Web Part and Viva Adaptive Card Extension \u0026ndash; Anoop Tatti (Content+Cloud) | @anooptells [\u0026ndash; 18:29]\n  D2: Share to Teams \u0026ndash; SPFx Command Set Extension \u0026ndash; Kunj Sangani (Cognizant) | @sanganikunj [\u0026ndash; 33:45]\n  D3: SPFx Design Patterns Property Panes \u0026ndash; Hugo Bernier (Microsoft) | @bernierh [\u0026ndash;][ 40:50]\n  Resources Additional resources around the covered topics and links from the slides.\n D1: Webpart sample - react-at-a-glance  D1: Sample - News article content at a glance  D1: Video - Getting started on building Microsoft Viva Connection adaptive card components using SPFx  D2: Sample Extension - Share to Teams - Command Set  D2: Documentation - Create Share-to-Teams button  D3: Survey - Next SPFx Design Patterns Topic \u0026ndash; November 4, 2021  PnP Weekly \u0026ndash; Episode 138 (October 11th) with Germany-based Office Apps and Services MVP, consultant, developer Luise Freese | @LuiseFreese and Belgium-based SharePoint/Power Platform developer at Qubix, Carmen Ysewijn | @CarmenYsewijn | video | podcast PnP Weekly \u0026ndash; Episode 139 (October 18th) with Switzerland based MVP and Head of Solutions at Datalynx AG - André Lage | @aaclage | video | podcast  General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned   SharePoint dev documentation\n  SharePoint dev issue list Upcoming calls | Recurrent invites: (Subject to Updates in September)\n  Microsoft 365 platform call \u0026ndash; October 26th at 8:00 am PDT | https://aka.ms/m365-dev-call\n  M365 General Dev call \u0026ndash; October 28th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  SharePoint Framework call \u0026ndash; November 4th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; November 10th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash;November 11th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; November 17th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; November 18th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 22nd of October 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-21st-of-october-2021/images/spfx-call-recording-21st-oct_hu91620bdb666d04d866b297e64c7a4c4f_257366_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-21st-of-october-2021/","tags":[],"title":"SharePoint Framework Community Call -- 21st of October, 2021"},{"categories":["Microsoft 365 platform call"],"contents":" Microsoft 365 Platform Community Call - weekly community call recording from October 19th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform.  New to Microsoft 365 Platform development? Join the Microsoft 365 Developer Program today and get a free E5 developer tenant and other assets. Preview the Microsoft 365 Sample Solution Gallery with more than 600 samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and attend one of a growing list of events hosted by Sharing is Caring in October/November. Upcoming Ask Me Anything (AMA) sessions for PnP PowerShell, CLI for Microsoft 365 and for PnPjs.  Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). View PnP Weekly \u0026ndash; Episode 139 (October 18th) with Switzerland based MVP and Head of Solutions at Datalynx AG - André Lage | @aaclage Microsoft 365 PnP Weekly is hosted by Vesa Juvonen and Waldek Mastykarz.  Registration for Microsoft Ignite (Digital event) \u0026ndash; November 2 - 4 is now open. Hear about this week\u0026rsquo;s top Microsoft 365 Platform related stories and view 2 demos from Microsoft presenters about working with the Microsoft 365 platform.  The host of this call was Brian T. Jackett (Microsoft) *| *@BrianTJackett. Q\u0026amp;A takes place in chat throughout the call. Microsoft 365 Platform News Flash\n Developing real-time collaborative apps with Azure, Microsoft 365, Power Platform, and GitHub Manage your Microsoft Teams apps with the Developer Portal Microsoft Teams ISV app monetization capabilities now available in developer preview Announcing SharePoint Framework 1.13 Release Candidate Grow your skills and build collaborative solutions: Exam MS-600 Building Applications and Solutions ... Building great bots for Microsoft Teams with Azure Bot Framework Composer New Microsoft 365 and Teams solutions to empower frontline workers Viva Topics brings new integrations with Yammer Microsoft Ignite 2021 guide to SharePoint, OneDrive, Viva, Lists, Syntex, Stream, Visio and more  Actions  Register today for Hacktoberfest 2021 \u0026ndash; https://hacktoberfest.digitalocean.com Register for Microsoft Ignite (Digital event) - November 2-4, 2021- https://ignite.microsoft.com Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; November 3rd (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor - October 27th Inaugural session PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  Ask Me Anything (AMA) \u0026ndash; PnP PowerShell \u0026ndash; October 26th Ask Me Anything (AMA) - CLI for Microsoft 365 \u0026ndash; November 9th Ask Me Anything (AMA) \u0026ndash; PnPjs \u0026ndash; November 16th First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; November 9th  Maturity Model Practitioners \u0026ndash; October 19th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter. Thank you everybody for being part of the call today and for being a member of this community.   Demos Demos delivered in this session\n  Introduction to Universal Print \u0026ndash; tools for better Print management. Get the lay-of-the-land - customer challenges, Universal Print solution and architecture. Technology requirements/licensing, Universal Print ecosystem and security + privacy details. Demos of Universal Print for IT Admins (register, share, manage) and for end users (discover, add printer, print). Create custom solutions on top of managed print services via the Graph API.   Latest on Microsoft Graph Data Connect (MGDC) \u0026ndash; that allows you to extract Microsoft 365 data at scale for analytics and insights reporting. Understand availability of current and upcoming data sets - data artifacts, i.e., user profiles, messages, events, chats\u0026hellip;, in Microsoft 365 data. See 3 different Solution Accelerators (assemblage of data sets that together deliver insights for a particular need. ARM templates enable you to create your own Solution Accelerator.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Brian T. Jackett (Microsoft) | @BrianTJackett \u0026ndash; 5:20 Demo 1: Introduction to Universal Print \u0026ndash; Rachelle Cheung (Microsoft) \u0026ndash; 10:36 Demo 2: Latest on Microsoft Graph Data Connect \u0026ndash; Nik Charlebois (Microsoft) | @NikCharlebois \u0026ndash; 27:37  Resources Additional resources around the covered topics and links from the slides.\n  D1: Article - Introducing the Universal Print PowerShell module   D1: Article - Universal Print Lunch \u0026amp; Learn series   D1: Documentation - Universal Print cloud printing API overview   D1: Demo - MS Build SK118 Add cloud-based printing to your application with Universal Print   D1: Feedback \u0026ndash; Universal Print\n  D2: Solution Accelerator - ProjectStaffing application   D2: Solution Accelerator - Conversation Lineage   D2: Solution Accelerator - Watercooler application   D2: Solution Accelerator \u0026ndash; ARMTemplates\n  PnP Weekly \u0026ndash; Episode 139[ (October 18th) with Switzerland based MVP and Head of Solutions at ]Datalynx AGAndré Lage[ | @aaclage | ]video podcast\n  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) |\n@jthake and Paul Schaeflein (Addin365) | pschaeflein\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Power Apps monthly call\u0026ndash; October 20th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; October 21st at 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft Identity Platform call \u0026ndash; October 21st at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar Microsoft 365 platform call \u0026ndash; October 26th at 8:00 am PDT | https://aka.ms/m365-dev-call M365 General Dev call \u0026ndash; October 28th at 7:00 am PDT | https://aka.ms/m365-dev-sig Office add-in monthly call \u0026ndash; November 10th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash;November 11th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.  More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 20th of October 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-19th-of-october-2021/images/recording-19th-oct_hu3c93dac9e7e228af834eec70cabc3f72_532278_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-19th-of-october-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 19th of October, 2021"},{"categories":["Power Apps community call"],"contents":"Call summary Topics covered in this month\u0026rsquo;s community call include a demo - PokéBubbles Game and a session on How to get Microsoft Certified in the Power Platform.\nAs well there was Recent Power Apps News and Community Contributions, and more! Community welcomes Anna Chu - Sr. Program Manager (Microsoft) | @_achu. This call was hosted by Todd Baginski (Canviz). Demo presenters included Michelle Wong, Sheryl Netley, Jese Navaranjan and Charles Sterling. The call was recorded on October 20, 2021. Questions were addressed in chat throughout the call along with some live discussion. Thank for attending the call or viewing it on demand. Agenda  PokéBubbles Game - Michelle Wong | @MichelleWongNL \u0026ndash; 6:21 How to get Microsoft Certified in the Power Platform - Sheryl Netley | @SherylNetley \u0026amp; Jese Navaranjan (Avanade) | @JeseNav2 \u0026ndash; 28:53 Recent Power Apps News and Community Contributions \u0026ndash; Charles Sterling (Microsoft) | @chass \u0026ndash; 58:54  Demos   D1: PokéBubbles Game - this is Michelle\u0026rsquo;s 4th Pokémon game and a Demo Extravaganza 2021 entry. Hear about Michelle\u0026rsquo;s approach to game development in PowerApps. As a functional person, she started with the screen layout and graphics. Many variables, tables, buttons. Button action calls variable to play sound. Why you should be interested in this app is the well commented, clean code patterns and variable naming conventions.   D2: How to get Microsoft Certified in the Power Platform - how you can get certified in the Microsoft Power Platform? Experienced presenters offer tips and tricks. Opens with - why do certifications? Certification overview, Power Platform certification path (badges, exams, certifications), how to book exams, how to prepare for exams (self-study, formal training, exam prep), top tips, and resources. Start by finding a Learning Path on the Microsoft Learn site.   Recent News \u0026amp; Cool Stuff   Announcement - Managing solutions has a new look (public preview)   Article - AUGUST UPDATE: Power Platform Developer Tools   Article - Generating Power Fx formulas from examples   Discussion - Discuss Power Apps preview and experimental features here\n  Article - Microsoft is a Leader in the 2021 Gartner® Magic Quadrant™ for Enterprise Low-Code Application Platf...   Article - New Data Loss Prevention policies for enhanced Power Platform governance available for Public Previe...   Update - New 21 connectors in August and September   Groups - Public Preview for User Groups   Actions   Register \u0026ndash; Microsoft Ignite 2021 \u0026ndash; Nov 2\u0026ndash;4   Register - BizApps LATAM Summit - Nov 17-19th   Register Power BI Summit 2022 - March 07-March 11, https://globalpowerbisummit.com/\n  Join us for our next call: November 17, 2021 at 08:00am PDT | https://aka.ms/powerappscommunitycall\n  Referenced in this session  D1: Demo Extravaganza 2021entry  D1: Game - A PokéBubbles Game - just match the correct bubble of the lowest bubble on the stack  D1: Repo \u0026ndash; PokeBubbleGame  D2: Microsoft Learn \u0026ndash; Build the skills that lead to success  D2: Sheryl\u0026rsquo;s \u0026ndash; BizApps Blog  D2: Website - MeasureUp  D2: Video - Jese\u0026rsquo;s Power Channel - PL-900 Power Platform Fundamentals (Hints, Tips, Advice)  D2: Documentation - Microsoft Learn  Learn more  See the full blog post for this call on the Tech Community Blog - https://aka.ms/m365pnp/community/blog Microsoft\u0026rsquo;s Power Platform website Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - https://aka.ms/PowerAppsCommunitySamples Power Apps Community Videos -https://aka.ms/PowerAppsCommunityVideos PowerPlatformLearn Resources | https://www.powerplatformlearn.academy PnP Power Platform Samples | https://www.aks.ms/powerplatform-samples Power Addicts Hangout - https://wearepoweraddicts.com #LessCodeMorePower Video Series - https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Share more - draw attention to your great work - #PowerAppsCC  Stay connected  Twitter: https://twitter.com/MSPowerPlat Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/m365pnp/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/powerappscommunitycall  ","image":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-october-2021/images/PowerApps%20Thumb%20October%202021_hu5ce000a698aa61f171c41ba355012e28_236475_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-october-2021/","tags":[],"title":"Power Apps Community Call -- October 2021"},{"categories":["PnP Weekly"],"contents":" In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Switzerland based MVP and Head of Solutions at Datalynx AG - André Lage | @aaclage.  Topics discussed in this session include: \\\n André\u0026rsquo;s commitment to open source and community. Delivering samples and a control for the latest Microsoft Graph Toolkit. The importance of being an informed contributor and of having an appreciation for the needs of developer, business and end user audiences before building. Microsoft needs to continue to let us know where community members can help, to define boundaries in which contributors can create, and to generate lots of training and documentation!  Tips to others: learn, ask questions, share and mentor or find a mentor.  We also covered 15 articles by Microsoft and the community from the last week.  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n  This session was recorded in front of web cams in totally audience free rooms on Monday, October 18, 2021.\n  Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.   These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot;  Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\n Microsoft articles   Viva Topics brings new integrations with Yammer - Chris McNulty (Microsoft) | @cmcnulty2000 Building great bots for Microsoft Teams with Azure Bot Framework Composer - Bob German (Microsoft) | @Bob1German Grow your skills and build collaborative solutions: Exam MS-600 Building Applications and Solutions ... - Sathya Raveendran (Microsoft) | @findmesathya Announcing SharePoint Framework 1.13 Release Candidate - Microsoft Microsoft Teams ISV app monetization capabilities now available in developer preview - James Skay (Microsoft) | @JamesSkay \u0026ldquo;Visualize Lists with Power BI\u0026rdquo; 🎙️ \u0026ndash; The Intrazone podcast - Amanda Rivera \u0026amp; Mark Kashman (Microsoft) | @mkashman   Community articles   Running a Power App as Edge Extension - Albert-Jan Schot (BLISS.digital) | @appieschot Sending e-mails with Microsoft Graph using .NET - Tobias Zimmergren (Rencore) | @zimmergren PnPjs v2.10 - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026amp; Patrick Rodgers (Microsoft) | @mediocrebowler Getting the working hours/time zones for other users using Microsoft Graph API - Michel Mendes (Storm Technology Ltd) | @michelcarlo Create an event page with SharePoint and Lists - Anand Ragav | @anandVragav Creating Microsoft Teams Meetings in ASP.NET Core using Microsoft Graph Application Permissions Part... - Damien Bod | @damien_bod Using the Microsoft Graph PowerShell for Security Alerts - Liam Cleary | @helloitsliam Clean Up Unwanted Site Columns from Content Types and Lists/Libraries - Marc D Anderson (Sympraxis Consulting) | @sympmarc 7 reasons to use child flows in Power Automate - Pieter Veenstra (HybrIT Services) | @PieterVeenstra\\   Additional resources   Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp   If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n \u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-139-andr%c3%a9-lage-datalynx-ag/images/Thumb-Ep139_huc4835d0348ca806d3cbf0ca4834dcf0a_475834_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-139-andr%c3%a9-lage-datalynx-ag/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 139 - André Lage (Datalynx AG)"},{"categories":["Microsoft 365 developer podcast"],"contents":"Wictor Wilén returns to provide an update to the yo Teams generator project.\nListen to the show here: (m365devpodcast.com)\nLinks from the show  PnP Teams QuickStart: Build your Teams application with no install and minimal effort Getting started with PnP Teams QuickStart Microsoft Teams Development Community Samples How to deploy a Yo Teams generated project to Azure through Azure DevOps  Microsoft News  AdaptiveCards Schema 1.5 Generating Software Bills of Materials (SBOMs) with SPDX at Microsoft Microsoft Teams ISV app monetization capabilities now available in developer preview - Microsoft 365. .. azure-sdk-for-net/CHANGELOG.md at Azure.Core_1.20.0  Community Links  It\u0026rsquo;s Time to Move to RBAC for Key Vault  ","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-yo-teams-generator-update-with-wictor-wil%c3%a9n/","tags":[],"title":"M365 Dev Podcast - yo Teams Generator Update with Wictor Wilén"},{"categories":[],"contents":"In a recent discussion on Twitter, we were exploring approaches on how to get the working hours and time zone for another user (not the current logged user) in Microsoft Graph. This information could be useful to warn users about the availability of our colleagues (especially when there are people in the team working in different countries) or use this information and delay actions until the person is available (for example, do not send emails out-of-hours). When searching for this option on the web, most of the references will mention the mailBoxSettings object available through the user properties in Graph:\n/users/{id|userPrincipalName}/mailboxSettings\nThis gives us a response in the following format, and those details are available (sample test using Graph Explorer):\n   However, using delegated permissions, the current user can only access their own settings. If I try to access the same information for another user \u0026lsquo;Carlos\u0026rsquo; under the tenant, the access will be denied, even with all related permissions granted to the current app:\n   Most of the operations that access Exchange Online with delegated permission will work only for the current user\u0026rsquo;s data.\nThe alternative By using the calendar/getSchedule action it is possible to get not only the user\u0026rsquo;s free/busy schedule but also the working hours and time zone for any user in the tenant, using delegated permissions in Microsoft Graph. To use this action we need to do a post request to one of the following graph endpoints:\n/me/calendar/getSchedule\n/users/{yourCurrentUserEmail}/calendar/getSchedule And use the request body in the following format (use an array of a single user email address if you want to retrieve only one user):\n   Simply check for a user\u0026rsquo;s schedule and the working hours will be returned together with the schedule. You can use any valid dates/time zones in the request JSON body for this purpose, even though there can be no items in the schedule, the time zone and working hours will be returned. In this example, we used a date range for 20 years ago on purpose, so the query wouldn\u0026rsquo;t bring any schedule items info. In the response to the query mentioned above, no schedule item is returned but the working hours property is still correctly provided:\n   Conclusion By using this approach we are able to obtain the working hours and time zone for another Microsoft 365 user in the same tenant (given that the user has Exchange Online active).\n","image":"https://pnp.github.io/blog/post/getting-the-working-hours-time-zones-for-other-users-using/images/01_Mysettings_hu3400923c305843f5ab1ce28e3aebbaaf_73140_460x200_fill_box_smart1_3.PNG","permalink":"https://pnp.github.io/blog/post/getting-the-working-hours-time-zones-for-other-users-using/","tags":["Microsoft Graph"],"title":"Getting the working hours/time zones for other users using Microsoft Graph API"},{"categories":["CLI For Microsoft 365"],"contents":"Azure Cloud Shell is one of the cool Azure features which will help you to execute Bash / PowerShell script from the browser. The best part is that Azure Cloud shell even supports CLI for Microsoft 365 without you need to explicitly install anything in the shell.\nWhen you try to execute CLI for Microsoft 365 after creating a new Cloud Shell, we will get an error which is something like below,\n/usr/local/lib/node_modules/@pnp/cli-microsoft365/node_modules/update-notifier/index.js:58 } catch { ^ SyntaxError: Unexpected token { at createScript (vm.js:80:10) at Object.runInThisContext (vm.js:139:10) at Module._compile (module.js:617:28) at Object.Module._extensions..js (module.js:664:10) at Module.load (module.js:566:32) at tryModuleLoad (module.js:506:12) at Function.Module._load (module.js:498:3) at Module.require (module.js:597:17) at require (internal/module.js:11:18) at Object.\u0026lt;anonymous\u0026gt; (/usr/local/lib/node_modules/@pnp/cli-microsoft365/dist/index.js:17:28)    It was identified by the expert team that this was because of the case where Azure Cloud Shell uses node version 8.16 as the base image. But CLI for Microsoft 365 uses later Node version which is causing the issue in Azure Cloud Shell. Due to this Node version mismatch, CLI for Microsoft 365 is unable to work as expected. The conversation related to this already initiated as an Issue in GitHub.\nBut till the time upgrade is complete, we have a workaround which could be implemented so that you can execute CLI for Microsoft 365 in Azure Cloud Shell seamlessly.\nWorkaround Though the team is actively working on updating the node version, we will not be able to use Azure shell for CLI for M365 till the upgrade is complete. We do have a workaround for the same using the node on top of Node Version Manager aka NVM. You can follow the below steps if you want to know the complete steps\n Install NVM in the cloud shell Install the Node version required for CLI for Microsoft 365. As of writing this blog, CLI for Microsoft 365 supports any node version\u0026gt;14.0.0  nvm install 14.0.0{.language-plaintext .highlighter-rouge} Made sure you are making this version as default   After that install CLI for Microsoft 365 in the node version which you have set as the default Once the CLI package is installed, you can see that CLI works perfectly well in Azure Shell     This is just a workaround till we have a permanent solution from Azure Shell team for the same.\n","image":"https://pnp.github.io/blog/post/azure-cloud-shell-issue-when-using-cli-for-microsoft-365/images/ArjunMenon_0-1634207520847_hude32e089c3f8e010a00de3f48d583ed5_27195_460x200_fill_q100_box_smart1.jpeg","permalink":"https://pnp.github.io/blog/post/azure-cloud-shell-issue-when-using-cli-for-microsoft-365/","tags":["CLI for Microsoft 365","Azure"],"title":"Azure Cloud Shell issue when using CLI for Microsoft 365 - Workaround"},{"categories":["Community post"],"contents":"Introduction Recently we seem to be getting involved in projects after they have gone awry. One of our partners reached out asking for help with an issue they had whilst migrating a SharePoint 2010 environment to SharePoint Online. The problem was that the customer made extensive use of Dataview Web parts with their SharePoint 2010 environment. These web parts displayed important information used by the business. The Dataview Web parts are connected directly to a SQL server hosted within the customer database. Of course, when the web parts were migrated into the cloud, they did not work as they were unable to connect to the SQL Server. This ended up stopping the migration until a solution was found. The customer did not want to move the data into the cloud due to several reasons but the most important one being all of the other systems dependent on it. Several options were discussed which will be covered in the next section. The approach So several options were looked at, and as moving the database was quickly ruled out, we came up with these two:\n Build a solution with PowerApps and use the On-Premise data gateway. Build a solution with SharePoint Framework using a REST API using Azure Hybrid Connections Whilst the PowerApps solution would take less time, the licensing cost of the PowerApps solution ended up ruling it out due to its total cost of ownership (TCO). So, the SPFX solution was chosen. The architecture was to use SPFX web parts that connected to a REST API hosted in Azure App Services. The clever part was using Azure App Service Hybrid Connections which allowed us to connect from Azure back into the customer network without the need to reconfigure complex firewalls. To help visualize the solution, let\u0026rsquo;s take a look at the architecture.     We ended up having two Azure Hybrid Connection Services running. One for the active live environment and another for the disaster recovery environment. The data being accessed was sensitive so the REST API had to be secure. It was configured so that it was backed by Azure AD using an Azure AD Application, implemented with OAuth authentication using JWT Bearer tokens. The SPFX connected to the REST API and authenticates using Open Id Connect to ensure that only authenticated and authorized users can access the API. Further protection was provided by setting the API behind Azure API Management. Authentication For the SharePoint Framework web parts to be able to authenticate with the REST API there are a couple of steps that need to be performed:\n Configure the SharePoint Framework solution to request permission to access the REST API Authorize the request made by SharePoint Framework to access the REST API. To configure the SharePoint Framework solution take a look at this Microsoft post which provides a good guide (see section Configure the API Permission Requests). The second part is performed by going into the SharePoint Admin centre and approving the request. Now the point to make is that the user accepting the request needs to be a SharePoint Administrator and also grant admin consent to Azure AD Applications. Basically, a Global Admin has this role, so we worked with the IT team to ensure a privileged user did the authorization. Be mindful of this when deploying to the customer     The screen to authorize SharePoint Framework solutions. Another point to make here is that the name of the Azure AD Application configured in the SharePoint Framework needs to use the name of the Azure AD Application configured in Azure AD. This is configured as mentioned above in the SharePoint Framework solution. When I first looked at this I set the resource to be the resourceid for the Azure AD Application rather than the name of the application. Hopefully mentioning this will mean you do not waste your time getting this right.\n\u0026#34;webApiPermissionRequests\u0026#34;: [ { \u0026#34;resource\u0026#34;: \u0026#34;HROnline Api\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;user_impersonation\u0026#34; } ] Azure Hybrid Connections The Azure Hybrid Connection is set up in two places.\n Azure App Service hosted in the cloud Hybrid Connection service \u0026ndash; running as a Windows server within the network. The hybrid connection service establishes a connection to the Azure App Service through Azure Relay which is built on top of Service Bus.      To set up the Hybrid Connection in Azure App Service you must be running at least the Basic Tier or above. There are some limitations to the types of connections that the technology supports. The transport mechanism needs to be TCP based and does not support UCP. For this solution, a .NET SQL Client was used which is supported and works really well. For information on setting up the Azure Hybrid Connection see the following Microsoft article. Performance One of the areas that we wanted to ensure was the performance of the application. So we put together a POC was put together to prove the approach and also check performance. The performance has been very good and provided that the REST API is developed with some thought, it performed better than expected. There was plenty of thought that went into the API. A few of the optimizations we made were\n making sure that we had support for paging and limiting the number of records retrieved at one time. Using Dapper and performing filtering at the SQL layer rather than pulling the data down and filtering in the API  Conclusion This solution enables SharePoint Online solutions to access data hosted On-Premises in a secure manner which is very effective. I was surprised by how well the solution performed. ","image":"https://pnp.github.io/blog/post/azure-cloud-shell-issue-when-using-cli-for-microsoft-365/images/ArjunMenon_0-1634207520847_hude32e089c3f8e010a00de3f48d583ed5_27195_460x200_fill_q100_box_smart1.jpeg","permalink":"https://pnp.github.io/blog/post/connecting-to-sharepoint-online-to-on-premises-databases-with/","tags":["SharePoint framework (SPFx)"],"title":"Connecting to SharePoint Online to On-Premises Databases with SharePoint Framework"},{"categories":[],"contents":"Call summary Updated Viva Connections public developer preview! Have a look at Microsoft 365 tenant \u0026ndash; script samples gallery (101 scenarios and 135 scripts, using CLI for Microsoft 365, PnP PowerShell, SPO Management Shell tooling and more\u0026hellip;). Register Today for Hacktoberfest 2021 ...Begins October 1. Sign up and attend a session in October \u0026ndash; November hosted by Sharing is Caring. Sign up for the PnP Recognition Program. Dial into the Microsoft 365 platform call on October 19th @ 8 AM PT. Project releases this week include PnP Core SDK v1.4.0 GA, PnP PowerShell v1.8.0GA, Yo teams - generator-teams - v3.3.1 GA. Open-source project status: (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.6.0 GA, PnP Provisioning Engine Schema v202103 Version 1.7.0 \u0026ndash; Early Autumn 2021, v1.8.0 Winter 2021 PnP .NET Libraries - PnP Core SDK v1.4.0 GA, PnP Transformation Framework: Public Preview released! Prepping for v1.5.0 PnP PowerShell v1.8.0 GA In progress: V2 POC, Prepping for v1.8, nightly releases Yo teams - generator-teams v3.3.1 GA (Support for Teams JS SDK 1.11) Yo teams - yoteams-build-core v1.3.0 GA Yo teams \u0026ndash; yoteams-deploy v1.0.1 GA Yo teams - msteams-react-base-component v3.1.0 Microsoft Graph Toolkit (MGT) v2.3.0 GA Working on v3.0.0\n *** Note: While version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities. **\nAs well, there were 17 script samples, 2 Teams samples and 3 Power Platform Samples this week. The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\nActions  Register today for Hacktoberfest 2021 \u0026ndash; https://hacktoberfest.digitalocean.com Visit Teams, Graph Toolkit, and other project Repos/sample repositories for issues that can be submitted in the Repo and recognized by Hactoberfest. Register for Microsoft Ignite (Digital event) - November 2-4, 2021- https://ignite.microsoft.com Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; November 3rd (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor - October 27th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  Ask Me Anything (AMA) \u0026ndash; PnP PowerShell \u0026ndash; October 26th First Time Presenter \u0026ndash; TBS More than Code with VSCode \u0026ndash; November 9th  Maturity Model Practitioners \u0026ndash; October 19th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig Call attention to your great work by using the #PnPWeekly on Twitter.  **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  bot meeting lifecycle feedback - Microsoft Teams App - Markus Möller (Avanade) | @Moeller2_0\n  TeamsLeaderboard - Thomy Gölles (Solvion) | @thomyg **Microsoft Power Platform Samples: **(https://aka.ms/powerplatform-samples)\n  *Request Review and Approval - Lindsay Shelton | @LShelton_Tech\n  *Hide SharePoint Page Title - Michel Mendes | @michelcarlo\n  *Collect Feedback Workflow - April Dunnam | @aprildunnam\n  [*These latest samples should show within 24 hours of date of this call]{style=\u0026ldquo;font-size: 10.5pt; font-family: \u0026lsquo;Segoe UI\u0026rsquo;,sans-serif;\u0026rdquo;} **Script Samples: ** (https://aka.ms/script-samples)\n 11 New Samples + 6 Updated Samples🤩 \u0026ndash; WOW! Contributed by  Valeras Narbutas | @ValerasNarbutas Chandani Prajapati | @Chandani_SPD Adam Wójcik | @Adam25858782 Reshmee Auckloo | @reshmeeauckloo Dipen Shah | @Dips_365    \u0026ndash; Thank you\nTogether Mode!  Awesome to have you as part of this Community, please keep the feedback coming, see you again soon. Demos Demos delivered in this session\n  Introduction to the new PnP Transformation Framework \u0026ndash; next step in the evolution of the PnP Modernization Framework is the PnP Transformation Framework (Public Preview) \u0026ndash; for migrating content from any CMS (data source provider) to SharePoint online modern with the assistance of in-memory abstraction (virtual layout of page) and web part mapping providers. Not for migrating content, but for transforming content presentation to modern. Targeting RC end November, GA end 2021.   Teams Meeting App \u0026ndash; Record and playback attendee names \u0026ndash; for pronunciation purposes, capture and subsequently hear upon demand, a meeting participant\u0026rsquo;s name. Start by creating a meeting and install Teams app into the meeting. See experience in UI from scheduler and participant perspectives. Understand usage prerequisites, pre-meeting and in-meeting experiences, and step through core code - Teams manifest, handling device types, meeting status, custom audio control.\n  Feedback bot using the new Adaptive Card capabilities \u0026ndash; this bot functional in Microsoft Teams and Outlook (Universal actions), showcases 3 Adaptive Card features - Sequential workflow (concurrently awaits/tracks action from initiator and each participant), Up-to-date cards (real-time refresh across all users\u0026rsquo; cards) and Contextual views (Reader\u0026rsquo;s view changes based on role). Sample created with node JS/Type script and Yeoman Generator for Bot v4. Step through well commented code.   Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics Topics covered in this call\n  PnP .NET library updates - Bert Jansen (Microsoft) | @O365bert \u0026ndash; 5:36\n  PnP PowerShell - Erwin van Hunen (Valo Intranet) | @erwinvanhunen \u0026ndash; 7:08\n  yo Teams updates - David Warner II (Catapult Systems) @DavidWarnerII \u0026ndash; 8:55\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) beth-panx \u0026ndash; 9:29\n  Microsoft Script Samples - Paul Bullock (CaPa Creative Ltd) | @pkbullock \u0026ndash; 2:03\n  Microsoft Teams Samples -Bob German (Microsoft) @Bob1German \u0026ndash; 10:58\n  Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam \u0026ndash; 12:20\n  D1: Introduction to the new PnP Transformation Framework \u0026ndash; Bert Jansen | @O365Bert \u0026amp; Paolo Pialorsi | @PaoloPia \u0026ndash; 14:29\n  D2: Teams Meeting App \u0026ndash; Record and playback attendee names \u0026ndash; Markus Möller | @ Moeller2_0 \u0026ndash; 29:04\n  D3: Feedback bot using the new Adaptive Card capabilities \u0026ndash; Rabia Williams | @williamsrabia \u0026ndash; 42:50\n  Resources Additional resources around the covered topics and links from the slides.\n  D1: Article - Introducing the New Microsoft 365 PnP Transformation Framework   D1: Tools - PnP Core SDK   D2: Article - Meeting apps in Microsoft Teams (1) \u0026ndash; Pre-meeting   D2: Sample - tab meeting record name - Microsoft Teams App   D2: Documentation - Apps for Teams meetings   D3: Article - Universal Actions for Adaptive Cards in a NodeJs project\n  D3: Sample - Card Bot - Bot showcasing the Adaptive Card Universal Action Model in Node/TypeScript   D3: Documentation - Universal Actions for Adaptive Cards   D3: Documentation - Bots and SDKs   D3: Samples - BotBuilder-Samples   D3: Demo - TCS\u0026rsquo; Incident Management Teams app integrates Universal Actions for Adaptive Cards   PnP Weekly \u0026ndash; Episode 138 (October 11th) with Germany-based Office Apps and Services MVP, consultant, developer Luise Freese | @LuiseFreese and Belgium-based SharePoint/Power Platform developer at Qubix, Carmen Ysewijn | @CarmenYsewijn | video | podcast\n  General resources  Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Microsoft 365 platform call \u0026ndash; October 19th at 8:00 am PDT | https://aka.ms/m365-dev-call Power Apps monthly call\u0026ndash; October 20th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; October 21st at 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft Identity Platform call \u0026ndash; October 21st at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar M365 General Dev call \u0026ndash; October 28th at 7:00 am PDT | https://aka.ms/m365-dev-sig Office add-in monthly call \u0026ndash; November 10th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call **\u0026ndash; **November 11th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.   \u0026ldquo;Sharing is caring\u0026rdquo;\nMicrosoft 365 PnP team, Microsoft - 15th of October 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-14th-of-october/images/recording-14th-pnp-generic_hu3207c681f4ec7b7c21151aa1a83c4602_228742_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-14th-of-october/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 14th of October, 2021"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from October 12th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call Summary\nWelcome to the weekly call focused on capabilities of the Microsoft 365 platform.  New to Microsoft 365 Platform development? You are encouraged to register at Microsoft 365 Developer Program and get a free E5 developer tenant and other assets. Access the latest free training modules to accelerate learning Microsoft 365 platform capabilities. Visit the Microsoft 365 Sample Solution Gallery with more than 500 samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and attend one of a growing list of events hosted by Sharing is Caring in October/November.  Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). View video or listen to podcast of the latest episode of Microsoft 365 PnP Weekly, hosted by Vesa Juvonen and Waldek Mastykarz.  Registration for Microsoft Ignite (Digital event) \u0026ndash; November 2-4 is now open. The Microsoft 365 Community (PnP) \u0026ndash; October 2021, update will be available soon! A heart felt thank you goes out to the community members, organizations and Microsoft employees who have contributed their time and talent to this community over the last month.   The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call and specifically during the last 10 minutes of call. Microsoft 365 Platform News Flash\n  New ways for Cloud Storage Partners to integrate their services with Microsoft Teams and Office\n  Breaking changes to the settings endpoint in the Microsoft Graph eDiscovery API (beta)\n  Register today for Hacktoberfest 2021 \u0026ndash; https://hacktoberfest.digitalocean.com\n  Register for Microsoft Ignite (Digital event) - November 2-4, 2021- https://ignite.microsoft.com\n  Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n  First Time Contributor Session \u0026ndash; October 13, November 3rd (EMEA, APAC \u0026amp; US friendly times available)\n  Community Docs Session \u0026ndash; November 17th   Power Platform Samples \u0026ndash; First Time Contributor - October 27th\n  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th\n  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th   Ask Me Anything (AMA) \u0026ndash; PnP PowerShell \u0026ndash; October 26th\n  First Time Presenter \u0026ndash; TBS\n  More than Code with VSCode \u0026ndash; November 9th   Maturity Model Practitioners \u0026ndash; October 19th (every 3rd Tuesday of month, 7:00am PT)\n  PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register\n  PnP Buddy System \u0026ndash; Request a Buddy\n    Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo\n  Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call\n  Call attention to your great work by using the #PnPWeekly on Twitter.   Thank you everybody for being here today in the Microsoft 365 Platform Community Call.\nDemos Demos delivered in this session\n  Hands-on with Microsoft Graph File Uploads and Downloads building file access into a Microsoft 365 application using Microsoft Graph! Quick review of available Learning Path modules (lab exercises) calling on MGT in JS development. Focus on one module/scenario covering listing, downloading and uploading large/small files from OneDrive for Business using a single-page java script application leveraging Microsoft Graph. Tips on authentication, permissions, and execution using Graph SDK or HTML commands.\n  Microsoft Teams Toolkit v2 and SharePoint Framework debugging \u0026ndash; the Teams Toolkit for VS Code v2.0, in preview, has native support for debugging SharePoint Framework solutions directly inside the Microsoft Teams workbench! In this walk through, Vesa uses Toolkit v2.7 to quickly create a Teams app hosted in Azure, sets a breakpoint, runs npm install and gets a debug error. Great, working as expected! Exemplifies new generation of multi-product toolkits.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 7:30 Monthly contributors on the Microsoft 365 community efforts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 8:40 Demo 1: Hands-on with Microsoft Graph File Uploads and Downloads \u0026ndash; Bob German (Microsoft) | @Bob1German \u0026ndash; 12:39 Demo 2: Microsoft Teams Toolkit v2 and SharePoint Framework debugging \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 30:55 General Q\u0026amp;A - Microsoft 365 Platform Team \u0026ndash; 43:56  Resources Additional resources around the covered topics and links from the slides.\n  D1: Learn - Microsoft Graph Fundamentals   D1: Learn - Get started with Microsoft Graph Toolkit   D1: Learn - Explore Microsoft Graph scenarios for JavaScript development   D1: Documentation - Microsoft Graph REST API v1.0 reference   D2: Tools - Teams Toolkit (Preview)   D2: Documentation - Build apps with the Teams Toolkit and Visual Studio Code   PnP Weekly \u0026ndash; Episode 138 (October 11th) with Germany-based Office Apps and Services MVP, consultant, developer Luise Freese | @LuiseFreese and Belgium-based SharePoint/Power Platform developer at Qubix, Carmen Ysewijn | @CarmenYsewijn | video | podcast\n  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) |\n@jthake and Paul Schaeflein (Addin365) | pschaeflein\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Office add-in monthly call \u0026ndash; October 13th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; October 14th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call \u0026ndash;October 14th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Microsoft 365 platform call \u0026ndash; October 19th at 8:00 am PDT | https://aka.ms/m365-dev-call\n  Power Apps monthly call\u0026ndash; October 20th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  SharePoint Framework call \u0026ndash; October 21st at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Microsoft Identity Platform call \u0026ndash; October 21st at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar\n  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.  More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 13th of October 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-12th-of-october-2021/images/recording-12th-oct_hu3c93dac9e7e228af834eec70cabc3f72_545840_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-12th-of-october-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 12th of October, 2021"},{"categories":["Community post"],"contents":"To get started you do need a sample, the demo used to get you started is a solution to capture interesting pages in your browser to read later. I am aware that there are dedicated solutions for that, but sometimes I suffer from the not invented here syndrome and want to build something myself\u0026hellip; The final result will look as follows:  There are three building blocks that make up the logic:  Edge Extension Power App  Flow   If you count the ToDo there is a fourth one, but we are only using a ToDo list to store data from the Flow so there is no real logic required on that side. The goal is thus to run our Power App as an Edge Extension.\nEdge Extension Up until this scenario I never had build an Edge Extension so I resorted to Google to figure out the steps required. As it turns out there are quite a few tutorials and the process itself is straightforward. You have a manifest.json that describes the extension and a set of files like icons, html and JavaScript. You can walk through the Create an extension tutorial to get a feeling of all the components. Our Manifest itself is straight forward. We will be using two files frame.html and frame.js, those must be in the web_accessible_resources. We also will use a contentscript.js file that is added as a content_scripts. Since we will be authenticating users, we need to have access to the cookies from our extension. Adding the \u0026quot;permissions\u0026quot;: [\u0026quot;cookies\u0026quot;] fixes that for us. The full manifest.json would look something like this: { \u0026#34;name\u0026#34;: \u0026#34;Power App\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;0.0.0.3\u0026#34;, \u0026#34;manifest_version\u0026#34;: 2, \u0026#34;description\u0026#34;: \u0026#34;Loading your custom Power App into the browser.\u0026#34;, \u0026#34;content_scripts\u0026#34;: [{ \u0026#34;js\u0026#34;: [\u0026#34;contentscript.js\u0026#34;], \u0026#34;matches\u0026#34;: [\u0026#34;*://*/*\u0026#34;], \u0026#34;all_frames\u0026#34;: true }], \u0026#34;web_accessible_resources\u0026#34;: [ \u0026#34;frame.html\u0026#34;, \u0026#34;frame.js\u0026#34; ], \u0026#34;permissions\u0026#34;: [ \u0026#34;cookies\u0026#34; ] }  The contentscript.js will load our frame.html as an iframe. There is some logic to make sure recursive frame insertion will not happen and will only load if the iFrame is not redirecting us to https://login.microsoftonline.com. The login.microsoftonline.com page will fail to render if you are injecting an Iframe due to security concerns so make sure this is in place. Finally we add some query string parameters origin and title to our loaded frame.html. That way we can capture the page we inject our iframe on. This captured data can be used by our Power App later on. The full contentscript.js looks as follows: // Avoid recursive frame insertion... var extensionOrigin = \u0026#39;chrome-extension://\u0026#39; + chrome.runtime.id; if (!location.ancestorOrigins.contains(extensionOrigin) \u0026amp;\u0026amp; !location.origin.startsWith(\u0026#34;https://login.microsoftonline.com\u0026#34;)) { var iframe = document.createElement(\u0026#39;iframe\u0026#39;); // Must be declared at web_accessible_resources in manifest.json  iframe.src=chrome.runtime.getURL(\u0026#39;frame.html?origin=\u0026#39; + encodeURI(location.href) + \u0026#34;\u0026amp;title=\u0026#34; + encodeURI(document.title)); // Some styles for a fancy sidebar  iframe.style.cssText = \u0026#39;position:fixed;top:0;left:10;display:block;\u0026#39; + \u0026#39;width:300px;height:530px;overflow=hidden;z-index:1000;\u0026#39;; document.body.appendChild(iframe); }  The frame.html file can be an almost empty HTML file or contain as much styling as you want. I opted for a clean html file with the magic happening here. \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;iframeplaceholder\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;frame.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; I opted for a frame.js file as inline JavaScript is not allowed in an extension. By adding the frame.html and frame.js to the web_accessible_resources this no longer is an issue. The frame.js is used to get the query string parameters, add them to our Power App play URL and set that URL as the Iframe. Make sure to update the iframe.src URL to reflect your Power App ID.\nconst params = new URLSearchParams(window.location.search) var iframe = document.createElement(\u0026#39;iframe\u0026#39;); iframe.src=\u0026#34;https://apps.powerapps.com/play/xxxxxxx?source=iframe\u0026amp;title=\u0026#34; + encodeURI(params.get(\u0026#39;title\u0026#39;)) + \u0026#34;\u0026amp;url=\u0026#34; + encodeURI(params.get(\u0026#39;origin\u0026#39;)) var myFrame = document.getElementById(\u0026#39;iframeplaceholder\u0026#39;); myFrame.appendChild(iframe); This are all the steps required to run a Power App in your Edge Browser. However, make sure to reload your extension when side loading. Changes might not always trickle down as some of the content is cached. My best experience was to reload the extension each time I changed something in the JS or HTML.\nPower Apps Once you have your Edge Extension working the Power App can be running whatever you like. There is a bit of a chicken and egg issue as you need the Power App ID for your Edge Extension to work, so you could start with creating an empty app and save it to get the ID you need. Or you could update the Edge Extension once the App is ready. To create an application that can create something in To Do I picked a canvas app. There are no \u0026lsquo;real\u0026rsquo; requirements on the app side of things, but keep in mind the sizing of your iframe when designing parts the app itself. There is a To-Do connector you can use, but that is slightly limited. I picked the Power Automate connector to have more control over the options passed on. The Power App itself only uses the two parameters that are passed on, and in return passes those on to the Flow. Passing on parameters can be done using the Param option in the function window. My call to the Flow is linked to the OnSelect and runs as follows:\n\u0026#39;PowerApp-ToDo\u0026#39;.Run(Param(\u0026#34;title\u0026#34;), Param(\u0026#34;url\u0026#34;)); That is all there is to our app; a single button that calls our Flow. Flow The last component is the Flow, it uses the Power App trigger and a single action to create a new ToDo. Since we are passing the title and URL we can use those in the Flow as input parameters for our action using the following expression: @{triggerBody()['Addato-do(V3)_Title']}. The full flow looks like this:   Fusion Development Now I understand that some of these steps could have been done writing actual code instead of using the Power Platform. However the fact that I could select together a few components and have them interact with my Edge browser really appealed to me 🚀. Building a plugin to capture specific data from your browser has become way easier. Something that fits within the fusion development approach you hear a lot about. So instead of diving head first into complex code I decided to play around with the Power App approach and I must admit I am not disappointed. The next version should have a little more logic in place to prevent the plugin itself opening in multiple iframes on a page, but other then that I had this demo working quicker then expected. ","image":"https://pnp.github.io/blog/post/running-a-power-app-as-edge-extension/images/edge-plugin_hufad3967cccaf7b9466d72dc926000c9e_1604985_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/post/running-a-power-app-as-edge-extension/","tags":["Power Apps"],"title":"Running a Power App as Edge Extension"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Germany-based Office Apps and Services MVP, consultant, developer Luise Freese | @LuiseFreese and Belgium-based SharePoint/Power Platform developer at Qubix, Carmen Ysewijn | @CarmenYsewijn.\nTopics discussed in this session include:  ProvisionGenie \u0026ndash; an open-source Microsoft Teams app created by Luise and Carmen. What is it, how to set it up, integration, build/release challenges, documentation, roadmap - perhaps a provisioning genie for ProvisionGenie?  Why open source and MIT license? Rationale for keeping a Learning Diary. Top tips for women looking at a career in IT.   We also covered 12 articles by Microsoft and the community from the last week. Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded in front of web cams in totally audience free rooms on Monday, October 11, 2021.\n Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.  These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  SharePoint Roadmap Pitstop: September 2021 - Mark Kashman (Microsoft) | @mkashman Manage your apps with the Developer Portal for Microsoft Teams - Microsoft New ways for Cloud Storage Partners to integrate their services with Microsoft Teams and Office - Ben Summers (Microsoft) Breaking changes to the settings endpoint in the Microsoft Graph eDiscovery API (beta) - Marshal Hagen (Microsoft) settings resource type (eDiscovery) - docs.microsoft.com Developing Real-Time Collaborative Apps - Microsoft  Community articles  Meeting feedback with Microsoft Teams Meeting App - Markus Möller (Avanade) | @Moeller2_0 How to Get the Microsoft 365 Connected User with PnP PowerShell - Todd Klindt (Sympraxis Consulting) | @ToddKlindt Viva Learning preview moving to general availability - Daniel Glenn (InfoWorks, Inc) | @DanielGlenn, Darrell Webster (Modern Workplace Change) | @darrellaas Script: Connecting to Microsoft 365 Using the Microsoft Graph PowerShell - Liam Cleary | @helloitsliam Add a Location Column to a Site Content Type - Marc D Anderson (Sympraxis Consulting) | @sympmarc Quick Chart: SharePoint/Microsoft List Data - Laura Rogers (IW Mentor) | @WonderLaura\\  Additional resources  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-138-carmen-ysewijn-qubix-and/images/Thumb-Ep138_hu1bd0ca354f14cbcd8c7dd244c98ad04f_568406_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-138-carmen-ysewijn-qubix-and/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 138 - Carmen Ysewijn (Qubix) and Luise Freese"},{"categories":["Microsoft 365 developer podcast"],"contents":"Carmen Ysewijn and Luise Freese talk with Paul about their open-source project ProvisionGenie, discussing its components and their experience with the tools used to create the magic.\nListen to the show here: (m365devpodcast.com)\nLinks from the show  ProvisionGenie  Microsoft News  Breaking changes to the settings endpoint in the Microsoft Graph eDiscovery API (beta) Announcing general availability of Microsoft Graph Export API for Microsoft Teams messages Latest on SharePoint Site Scripts \u0026ndash; Intro and Roadmap Bring VS Code themes to Visual Studio 2022! - Visual Studio Blog  Community Links  How to Get the Microsoft 365 Connected User with PnP PowerShell MagicTooltips: PowerShell module to display contextual information about the command you\u0026rsquo;re currentl...  ","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-building-a-solution-with-low-code-tools-with/","tags":[],"title":"M365 Dev Podcast - Building a Solution with Low-Code Tools with Carmen Ysewijn and Luise Freese"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from October 7th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary A reminder to tune in each Tuesday for the new Microsoft 365 platform community call. Topics for the call on October 12 are Progressive Web Apps and Beyond: Supercharging OneDrive \u0026amp; SharePoint web apps and Hands-on with Microsoft Graph File Uploads and Downloads. The time is now to register for Hacktoberfest 2021. Register for training events in October \u0026ndash; November hosted by Sharing is Caring. Register for the PnP Recognition Program. SharePoint Framework v1.13 GA nearing release will include Viva Connections extensibility support, General Availability of Adaptive Card Extensions (ACEs), Microsoft Teams Workbench for SharePoint Framework, tool support, image rendering APIs and more. PnP project releases shipped - PnPjs Client-Side Libraries v3.0.0 early preview, and CLI for Microsoft 365 v4.0.0 GA with breaking changes. **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago) PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.12.1 GA, v1.13 Beta Viva.20 v1.13 GA (on a Tuesday soon) PnPjs Client-Side Libraries v2.9.0 GA, v3.0.0 early preview CLI for Microsoft 365 v3.13.0 Preview, v4.0.0 GA Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.3.0 (SPFx v1.12.1) Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1) PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.3.0 \u0026amp; v3.21.0 Release expected any day\nAdditionally, 1 extension and 6 web part and 6 ACE samples delivered in the last 2 weeks! Wowmazing! Thank you all for your contributions. The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place as always in chat throughout the call. Not an empty seat in the house. Nice seeing everyone on the call. Please join again soon.\nActions  Register today for Hacktoberfest 2021 \u0026ndash; https://hacktoberfest.digitalocean.com Register for Microsoft Ignite (Digital event) - November 2-4, 2021- https://ignite.microsoft.com Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; November 3rd (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor - October 27th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; November 30th  Ask Me Anything (AMA) \u0026ndash; PnP PowerShell \u0026ndash; October 26th First Time Presenter \u0026ndash; October 12th More than Code with VSCode \u0026ndash; November 9th  Maturity Model Practitioners \u0026ndash; October 19th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Create new Team using Viva Connections ACEs components from the Dashboard \u0026ndash; overview of ACEs (Adaptive Card Extensions) - Dashboard, Card view and Quick view. Integration with Microsoft Graph APIs. Handling clicks in Card and Quick views to create a team from desktop or mobile dashboards. Creates team using Graph API method. Thorough code walk-through. Button on \u0026ldquo;Team Create Request\u0026rdquo; card to \u0026ldquo;Open Form\u0026rdquo; \u0026ndash; opens Quick view. Team creation is confirmed on Quick view.   Building Microsoft Teams data dashboard with SharePoint Framework \u0026ndash; an inspirational demo/sample (react-teams-lead-dashboard) showing how to create a dashboard using tools, libraries and techniques for developing \u0026ldquo;modern\u0026rdquo; Microsoft 365 solutions. Uses Teams Personal app (configurable on per user basis and with multiple tabs), SharePoint client-side web part, UI fully integrated with Microsoft Teams and automated provisioning of fields, lists through Microsoft Graph. Render dashboard in Teams or SharePoint Online.   SPFx Design Patterns \u0026ndash; Asynchronous Rendering \u0026ndash; slow web parts slows pages, slows Teams apps, and often is attributed to web part rendering as opposed to being hung or frozen. Waiting on data slows rendering. OOB rendering is commonly synchronous. The fix - asynchronous rendering with isRenderAsync. Referenced samples here use this method. For better user experience, use progress indicators (spinners, bars, shimmer interface) to make rendering seem faster.\n  SPFx extension samples: (https://aka.ms/spfx-extensions)\n My Flows List - Adam Wójcik | @Adam25858782  SPFx web part samples: (https://aka.ms/spfx-webparts)\n SharePoint Crud Operations - Ari Gunawan | @AriGunawan3023 Graph Group Viewer - Zach Roberts | @ZachSPODev Questionnaire Teams Meeting App - Nanddeep Nachan | nanddeepn Using Accordion Plugin - Fredrik Thorild | @taxonomythorild Calendar - Mohammad Amer | @Mohammad3mer Multiscreen - Ari Gunawan | @AriGunawan3023 **PnP SPFx ACEs ** https://aka.ms/spfx-aces Create Teams \u0026ndash; Dipen Shah | @Dips_365 Manage Team \u0026ndash; Dipen Shah | @Dips_365 Planner Tasks \u0026ndash; Ejaz Hussain | @EjazHussain_ Tenant Service Health \u0026ndash; Anoop Tatti | @anooptells Articles at a Glance \u0026ndash; Anoop Tatti | @anooptells London Transport Service Status \u0026ndash; Anoop | @anooptells  Thank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 7:15 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 10:22 CLI for Microsoft 365 - Albert-Jan Schot (Portiva) | @appieschot \u0026ndash; 12:33 PnP SPFx Controls - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 13:58 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 14:32 PnP SPFx ACEs Samples - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 16:45   Demos   D1: Create new Team using Viva Connections ACEs components from the Dashboard \u0026ndash; ​ Dipen Shah (Rapid Circle) | @Dips_365 [\u0026ndash;][ 19:29]\n  D2: Building Microsoft Teams data dashboard with SharePoint Framework \u0026ndash; Paolo Pialorsi (PiaSys) | @PaoloPia [\u0026ndash;][ 29:52]\n  D3: SPFx Design Patterns \u0026ndash; Asynchronous Rendering \u0026ndash; Hugo Bernier (Microsoft) | @bernierh [\u0026ndash;][ 42:07]\n  Resources Additional resources around the covered topics and links from the slides.\n  D1: Samples - SharePoint Framework Viva Adaptive Card Extensions (ACEs) sample repository   D1: Samples - ace-cardgallery   D1: Documentation - Overview of Viva Connections Extensibility   [D2: Sample - ]Lead Assist Dashboard\n  [D2: Documentation - ]Build for Microsoft Teams using SharePoint Framework\n  [D2: Documentation - ]Use Microsoft Graph in your solution\n  [D2: Documentation - ]Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph\n  [D2: Tools - ]Reusable React controls for your SharePoint Framework solutions\n  [D]2: Article - The easiest way to store user settings of your Microsoft 365 app   [D3: Tools \u0026ndash; ]Fluent UI - Shimmer[ web ]\n  [D3: Sample - ]React HTM (Hyperscript Tagged Markup) Templating\n  [D3: Sample - ]Microsoft Graph People Search\n  PnP Weekly \u0026ndash; Episode 137 (October 4th) with Canada-based MVP and Consultant from Technologia - Serge Tremblay | @Sergepoint | video | podcast\n  General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned   SharePoint dev documentation\n  SharePoint dev issue list Upcoming calls | Recurrent invites: (Subject to Updates in September)\n  Microsoft 365 platform call \u0026ndash; October 12th at 8:00 am PDT | https://aka.ms/m365-dev-call\n  Office add-in monthly call \u0026ndash; October13th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; October 14th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call \u0026ndash;October 14th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; October 20th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  SharePoint Framework call \u0026ndash; October 21st at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Microsoft Identity Platform call \u0026ndash; October 21st at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 8th of October 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-7th-of-october-2021/images/agenda-7th-oct_hu91620bdb666d04d866b297e64c7a4c4f_250543_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-7th-of-october-2021/","tags":[],"title":"SharePoint Framework Community Call -- 7th of October, 2021"},{"categories":["CLI for Microsoft 365"],"contents":" We\u0026rsquo;ve just published a new major version of the CLI for Microsoft 365 with new commands \u0026amp; enhancements for working with and managing Microsoft 365 tenants and SharePoint Framework projects on any platform.\nManage Microsoft 365 and SharePoint Framework projects on any platform  CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use. While building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects. New major version for CLI Microsoft 365 \u0026ndash; v4  As we kept extending CLI for Microsoft 365 with new functionality during the last year, we noticed a few areas that we could improve to simplify using the CLI. As such, this new major version is evolutionary. Following is the overview of the most noteworthy changes introduced in CLI for Microsoft 365 v4. For the full list of changes, see the release notes. To help you upgrade to v4, we prepared a summary of breaking changes and the recommended actions. For more information see the v4 Upgrade Guidance in our docs. Change to JSON as default output mode  We noticed that when scripts were written using CLI for Microsoft 365 that it was common for commands to use the JSON output mode, as our default was to use the text output mode, this required script creators to include the --output option in the command execution. We decided that in this new version we would change the default output to use JSON to help simplify these scenarios. Consistent JSON output for list commands  We noticed that some of our list commands were not consistent in the way they returned a response using the JSON output mode, a typical example of this is where we returned the value array property in some commands and not others. This required you to modify your scripts to cater for this inconsistency. In v4, we have removed the value array property and return the array values to you directly making for a much more consistent experience. Removal of deprecated file path options  Earlier in the year we introduced a new way of passing complex inputs to command options by using the @ file reference syntax to tell the CLI that you want to use a local file as the option input. This helped simplify our commands as we no longer required you to use specific options created for reading from files such*--filePath*. Therefore, we have taken the decision to remove these options in favour of using the @ syntax from the following commands.  outlook mail send --bodyContentsFilePath spo theme set --filePath teams team add --templatePath  Updates  In addition to the notable evolutionary changes introduced in this major version and following our monthly release cadence, we\u0026rsquo;ve released some new capabilities. Here are a few of the most noteworthy additions. Upgrade SharePoint Framework projects to SPFx v1.13 preview Recently, Microsoft released a new preview version of the SharePoint Framework - v1.13. This version of SPFx, introduces new exciting capabilities for extending Viva Connections using Adaptive Card Extensions. To help you try these capabilities in your projects, we extended CLI for Microsoft 365 with support for upgrading your existing SharePoint Framework projects to SharePoint Framework v1.13.0-beta.20. To upgrade your SPFx project to this preview version, change the working directory to your project and execute: m365 spfx project upgrade --preview --output md \u0026gt; report.md  We also recommend that you try a richer upgrade report based on the Visual Studio Code CodeTour extension: m365 spfx project upgrade --preview --output tour  For more information about upgrading SharePoint Framework projects, see the CLI documentation. List all members of a SharePoint Group  In this version of CLI for Microsoft 365, we introduced a new command to list all the members of a SharePoint Group in a given site. To list all the members of a group, execute: m365 spo group user list --webUrl https://contoso.sharepoint.com/sites/SiteA --groupName \u0026#34;Contoso Site Members\u0026#34;  Upgrading commands to Microsoft Graph v1.0 endpoint  When adding new commands to CLI for Microsoft 365, we sometimes take advantage of Microsoft Graph Beta endpoint to provide new capabilities, over time however these endpoints mature and reach General Availability, being made available in the Microsoft Graph v1.0 endpoint. As part of our regular review of commands, we highlighted some commands that could be upgraded. The following commands have been upgraded as part of this release:  teams channel list teams conversationmember list teams conversationmember add aad siteclassification disable aad o365group teamify   New Sample Scripts CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts. If you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios. List all team members in Microsoft Teams teams  This sample script shows how to retrieve all the team members in a Microsoft Teams teams and export the results to a CSV file. Get all the Teams a specific user is part of  This sample script shows how to retrieve all the Microsoft Teams teams that a user is a member of and export the results to a CSV file. Contributors  This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order):  Aakash Bhardwaj Vipul Kelkar Sudharsan Kesavanarayanan Shantha Kumar Veronique Lengelle Michaël Maillot Waldek Mastykarz Arjun Menon Abderahman Moujahid Nanddeep Nachan Smita Nachan Albert-Jan Schot Dipen Shah Garry Trinder Mark van Dijk   Work in progress  Here are some things that we are currently working on. Themes  Following our latest major release, we have started thinking about themes for the coming year but we would love to know what you think we should concentrate on next. If you have any suggestions, please let us know by adding your suggestion to our open discussion on GitHub. Upgrading commands to Microsoft Graph v1.0  We are constantly evaluating the implementation of our commands to ensure that we are using endpoints that provide the best stability and support, therefore we are will be upgrading commands that use Microsoft Graph Beta endpoint to use their equivalent endpoint in Microsoft Graph v1.0. In addition to upgrading commands that use Microsoft Graph, we have also started work on upgrading commands that use, the now deprecated Azure Active Directory Graph API, which will reach end of life in June 2022. These commands will be be upgraded to use the appropriate Microsoft Graph endpoints. Script examples  In every release of the CLI for Microsoft 365, we introduce new commands for managing Microsoft 365. With over 350 commands across the different Microsoft 365 services, the CLI for Microsoft 365 has become a powerful tool, not just for managing your tenant but also for automating your daily work. We\u0026rsquo;d love to show you how you can use the CLI for Microsoft 365 to build automation scripts in PowerShell Core and Bash. If you have any scripts using SPO or PnP PowerShell that you use frequently, please share them with us so that we can learn more about the common automation scenarios. Try it today  Get the latest release of the CLI for Microsoft 365 from npm by executing: npm i -g @pnp/cli-microsoft365  Alternatively, you can get the latest release from Docker by executing: docker run --rm -it m365pnp/cli-microsoft365:latest  If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365. If you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v4/images/banner-cli-m365_hudf0438f961ff7b005fc2ad64065ff955_577192_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v4/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 v4"},{"categories":["Adaptive Cards community call"],"contents":"The following topics are covered in this month\u0026rsquo;s community call:  Microsoft Search and Adaptive Cards (Intelligent search for the modern workplace, architecture, Microsoft Graph connectors, rendering using Adaptive Cards, and Search Layout Designer) - Jyoti Pal (Microsoft), A closer look at v1.5 SDK (3 features included in v1.5 preview are Table element; Input.ChoiceSet search, filtering, and auto complete; and ActionSet Overflow due out end of September - J.P. Roca (Microsoft) and finally Q\u0026amp;A \u0026ndash; members of the Developer team and PM team fielded questions on a host of topics for 8 minutes. This call was hosted by J.P. Roca (Microsoft) | @jpthepm. Recorded on September 9, 2021.  Agenda  Microsoft Search and Adaptive Cards - Jyoti Pal (Microsoft) \u0026ndash; 1:00 A closer look at v1.5 SDK - J.P. Roca (Microsoft) | @jpthepm \u0026ndash; 25:39 Q\u0026amp;A with members of Microsoft Developer and PM teams \u0026ndash; 29:37  Referenced in this call  Website - Microsoft 365 roadmap (Microsoft Search) Documentation - Dynamics 365 federation search (preview)  Documentation - Adaptive Cards Templating  Documentation \u0026ndash; Adaptive Cards Partners   Resources in General  Let us know the features you need https://aka.ms/ACRoadmap Schema Explorer - https://adaptivecards.io/explorer/Action.Execute.html Designer - https://adaptivecards.io/designer/  Get started with Templating - https://aka.ms/ACTemplating Browse the Adaptive Cards Code - https://aka.ms/ACRepo Find tools, sample cards and more - https://www.madewithcards.io Contribution Guidelines \u0026ndash; https://aka.ms/ACRepo   Stay connected  Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365PnP/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/adaptivecardscommunitycall Next call \u0026ndash; October 14th at 09:00am PDT  ","image":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-september-2021/images/900x506-AC-SeptemberThumb_hu6c073f18f841b0c1a7d897d01238993f_229041_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-september-2021/","tags":["Adaptive Cards"],"title":"Adaptive Cards community call -- September 2021"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from October 5th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos.\nCall summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform. New to Microsoft 365 Platform development? You are encouraged to register at Microsoft 365 Developer Program for free E5 developer tenant and other assets. Access the latest free training modules to accelerate learning Microsoft 365 platform capabilities. Visit the Microsoft 365 Sample Solution Gallery with more than 500 samples from Microsoft and community that allow you to learn by example, expedite your development and appreciate what is possible. Sign up and attend one of a growing list of events hosted by Sharing is Caring in October-November. Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). As well, view or listen to Microsoft 365 PnP Weekly \u0026ndash; Episode 137, hosted by Vesa Juvonen and Waldek Mastykarz. Registration for Microsoft Ignite (Digital event) \u0026ndash; November 2-4 is now open. Latest news from Microsoft on Microsoft 365 platform and 2 demos this week. The host of this call was Sébastien Levert (Microsoft) | sebastienlevert. Q\u0026amp;A takes place in chat throughout the call.\nMicrosoft 365 Platform News Flash   Announcing general availability of Microsoft Graph Export API for Microsoft Teams messages\n  What\u0026rsquo;s New in Microsoft Teams | September 2021\n  Updated navigation in Microsoft Teams admin center makes it easier to find what you need\n  Register today for Hacktoberfest 2021 \u0026ndash; https://hacktoberfest.digitalocean.com\n  Register for Microsoft Ignite (Digital event) - November 2-4, 2021- https://ignite.microsoft.com\n  Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; November 3rd (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; November 17th  Power Platform Samples \u0026ndash; First Time Contributor - October 27th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; TBS  Ask Me Anything (AMA) \u0026ndash; PnP PowerShell \u0026ndash; October 26th First Time Presenter \u0026ndash; October 12th More than Code with VSCode \u0026ndash; November 9th  Maturity Model Practitioners \u0026ndash; October 19th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo\n  Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call\n  Call attention to your great work by using the #PnPWeekly on Twitter.\n   An absolutely packed house today. Great seeing everyone.\nDemos Demos delivered in this session\n Latest on Microsoft Graph Explorer \u0026ndash; specifically focusing on 3 new features - Pagination (with odata.nextLink- ability to efficiently navigate through large collections of paged data), Expand Window (view more content in UI as needed) and Resource Explorer (access Graph resources more easily \u0026ndash; select API nodes and see underlying API query options). See where to report a bug or suggest a feature. Q\u0026amp;A.  Getting started on using Microsoft Viva Connections in your tenant \u0026ndash; latest positioning on Viva Connections. Getting started \u0026ndash; follow the Connections Setup Checklist \u0026ndash; you need a SPO intranet, a home site, global navigation, a dashboard and Teams Admin setup. Demo steps through setting up a homesite, global nav, dashboard creation and enabling Viva Connections in Teams Admin Center so intended (by policy) users can use the app Inside Teams. Q\u0026amp;A \u0026ndash; tenant rollout, why homesite requirement.  Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Sébastien Levert (Microsoft) | @sebastienlevert \u0026ndash; 8:21 Demo 1: Latest on Microsoft Graph Explorer \u0026ndash; Kristen Womack (Microsoft) | @kristen_womack \u0026amp; Vivian Adhiambo (Microsoft) \u0026ndash; 10:35 Demo 2: Getting started on using Microsoft Viva Connections in your tenant \u0026ndash; Tejas Mehta (Microsoft) | @tpmehta \u0026ndash; 25:05  Resources Additional resources around the covered topics and links from the slides.\n  D1: Repo - Microsoft Graph Explorer V4   D2: Documentation - Overview of Viva Connections Extensibility   PnP Weekly \u0026ndash; Episode 137 (October 4th) with Canada-based MVP and Consultant from Technologia - Serge Tremblay | @Sergepoint | video | podcast\n  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) |\n@jthake and Paul Schaeflein (Addin365) | pschaeflein\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   SharePoint Framework call October 7th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Microsoft 365 platform call - October 12th at 8:00 am PDT | https://aka.ms/m365-dev-call\n  Office add-in monthly call - October 13th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  M365 General Dev call - October 14th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call - October 14th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call - October 20th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call October 21st at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar\n  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members. More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 6th of October 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-5th-of-october-2021/images/recording-5th-oct_hu3c93dac9e7e228af834eec70cabc3f72_528145_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-5th-of-october-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 5th of October, 2021"},{"categories":["Microsoft 365 developer podcast"],"contents":"Ayca and Bob return to the show to talk about a new video series that discusses the Who\u0026rsquo;s Online bot created using Bot Framework Composer and Cognitive Services.\nListen to the show here: (m365devpodcast.com)\nLinks from the show  https://aka.ms/BotComposerSeries  Microsoft News  Text Analytics for Extractive Summarization  Community Links  ASP.NET Core 5 Microsoft Power BI Reporting ProvisionGenie - an open-source provisioning engine for Microsoft Teams  ","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/m365-dev-podcast-bot-framework-composer-video-series-with-ay%c3%a7a/","tags":[],"title":"M365 Dev Podcast - Bot Framework Composer Video series with Ayça Baş and Bob German"},{"categories":["CLI For Microsoft 365"],"contents":"We will continue our journey with the most popular sample scripts created for the CLI for Microsoft 365. This time we will show you how to add and remove users to Microsoft Teams in bulk. The original script was created by our community member Joseph Velliah.\nThe script requires a CSV file with different parameters:\n  groupMailNickname: the mail alias used for the Microsoft 365 Group associated to the current team\n  userPrincipalName: the UPN of the user that should be processed\n   role (owner, member): the role of the user. Can be owner or member. Keep it empty if you want to remove a user\n  operation (add, remove): operation to execute\n  groupMailNickname1, user1@domainname.com, owner, add groupMailNickname2, user2@domainname.com, member, add groupMailNickname3, user3@domainname.com, , remove  The script in question looks as follows:\n$taskItems = import-csv \u0026#34;sample-input-file.csv\u0026#34; –header mailNickname, userEmail, role, action $groups = m365 aad o365group list -o json | ConvertFrom-Json ForEach ($taskItem in $taskItems) { $mailNickname = $($taskItem.mailNickname) $userEmail = $($taskItem.userEmail) $role = $($taskItem.role) $action = $($taskItem.action) $group = $groups | Where-Object { $_.mailNickname -eq \u0026#34;$mailNickname\u0026#34; } $user = m365 aad user get --userName $userEmail -o json | ConvertFrom-Json Write-Host \u0026#34;Processing: User --\u0026gt; \u0026#34; $user.mail \u0026#34; Group --\u0026gt; \u0026#34; $group.mailNickname If ($action -eq \u0026#34;add\u0026#34;) { If ($role -eq \u0026#34;owner\u0026#34;) { m365 aad o365group user add --groupId $group.id --userName $user.mail --role Owner; Write-Host $user.mail \u0026#34; added as owner in \u0026#34; $group.mailNickname } ElseIf ($role -eq \u0026#34;member\u0026#34;) { m365 aad o365group user add --groupId $group.id --userName $user.mail Write-Host $user.mail \u0026#34; added as member in \u0026#34; $group.mailNickname } Else { Write-Host \u0026#34;Invalid user role \u0026#39;\u0026#34; $role \u0026#34;\u0026#39;\u0026#34; } } ElseIf ($action -eq \u0026#34;remove\u0026#34;) { m365 aad o365group user remove --groupId $group.id --userName $user.mail --confirm Write-Host $user.mail \u0026#34; removed from \u0026#34; $group.mailNickname } Else { Write-Host \u0026#34;Invalid task action \u0026#39;\u0026#34; $action \u0026#34;\u0026#39;\u0026#34; } } You can find this and many more samples on how to use the CLI for Microsoft 365 in our official samples section.\nWhat is the CLI for Microsoft 365? CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use.\nWhile building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects.\nTry it today Get the latest release of the CLI for Microsoft 365 from npm by executing:\nnpm i -g @pnp/cli-microsoft365 If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365.\nIf you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/images/blog/m365-dev-podcast/m365podcast_artwork_copy_hu738f0ee5d6cbd35af8fc71eb31ee1316_673903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/bulk-add-remove-users-to-microsoft-teams-using-the-cli-for/","tags":[],"title":"Bulk add/remove users to Microsoft Teams using the CLI for Microsoft 365"},{"categories":["Community post"],"contents":"Note: I am using PostMan in my example.  First - use \u0026ldquo;GET\u0026rdquo; http request to get details of dataverse table \u0026ldquo;Accounts\u0026quot;:   {{webapiurl}}/accounts?$select=name,accountnumber,telephone1,websiteurl  {{webapiurl}} - variable from the postman, contains a link to your environment API.\n\nAccounts table data retrieved: (image 1)\n    Now add a new header in postman call:  \u0026#34;Prefer odata.track-changes\u0026#34;  http request call will return additional information:\ndeltalink with deltatoken in body area (image 2)\\\n   2. Use delta token in as GET request (image 3 )\n   Were are no changes that happen last time we did request to accounts table, this is why under \u0026ldquo;value\u0026rdquo; it shows empty array\nIf I do changes like: add new details, edit and delete in accounts table I would get result: (image 4)\\\n   Now \u0026ldquo;value\u0026rdquo; contain 3 additional results for new, edit, and delete records.\nSuch updates checking method would be very useful when implementing solutions to synchronize data with external systems using Logic Apps or Power Automate or any other tool or approach you are most comfortable with.\nHope this is useful :) have a great day\n#dataverse #dataverseAPI #tip #postman #tipoftheday\n","image":"https://pnp.github.io/blog/post/tipoftheday-easy-track-changes-in-dataverse-table-via-dataverse/images/ValerasNarbutas_0-1633418328122_hu45eb37f79937b2b1c795660bb92f7386_311202_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/tipoftheday-easy-track-changes-in-dataverse-table-via-dataverse/","tags":["Dataverse"],"title":"TipOfTheDay - Easy Track changes in dataverse table via dataverse API"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Canada-based MVP and Consultant from Technologia - Serge Tremblay | @Sergepoint.\nTopics discussed in this session include:  So you want to be a cloud consultant in the \u0026ldquo;cloudiverse\u0026rdquo;? Here are 3 tips. The importance of being end user focused. How stay up-to-date on the latest technology.  Hear how a customer new to Microsoft 365 went from zero to website rollout in 5 days.  Positioning SharePoint, Microsoft Teams, Microsoft 365 and Viva Connections.   We also covered 14 articles by Microsoft and the community from the last week. Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded in front of web cams in totally audience free rooms on Monday, October 4, 2021.\n Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.  These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  What\u0026rsquo;s New in Microsoft Teams | September 2021 - Microsoft  Announcing general availability of Microsoft Graph Export API for Microsoft Teams messages - Microsoft  Microsoft 365 Developer Podcast - Latest Microsoft Graph SDKs with Maisa Rissi and Darrel Miller - Paul Schaeflein (Addin365) | @paulschaeflein  Office Add-in Samples - September 2021 update - David Chesnut (Microsoft) | @davidchesnut   Community articles  ProvisionGenie - an open-source provisioning engine for Microsoft Teams - Luise Freese | @LuiseFreese \u0026amp; Carmen Ysewijn | @CarmenYsewijn  Guidance On How To Use React DataTable Webpart - Chandani Prajapati | @Chandani_SPD  Get Permission Report for SharePoint Online or OneDrive File using CLI for Microsoft 365 - Arjun Menon  Looking at Things in Profile - Simon Hudson (Cloud2) | @SimonJHudson  Grant Permissions to All Communication Sites Associated with a Hub Site - Marc D Anderson (Sympraxis Consulting LLC) | @sympmarc Running a Power App as Edge Extension - Albert-Jan Schot (Portiva) | @appieschot  Call Azure AD secured Azure function from Logic App or another function with Managed Identity - Sergei Sergeev (Mastaq) | @sergeev_srg  Create Conditional Access Policies using Microsoft Graph PowerShell - Liam Cleary (Rencore) | @helloitsliam  Execute JavaScript / TypeScript / Excel Formulas from Power Automate - Mark Rackley (PAIT Group) | @mrackley  Calculate travel distance using Power Automate - Pieter Veenstra (HybrIT Services) | @PieterVeenstra   Additional resources  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-137-serge-tremblay-technologia/images/Thumb-Ep137_hu01ca118c6cbfdee92602a4e6872fbbf5_520371_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-137-serge-tremblay-technologia/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 137 - Serge Tremblay (Technologia)"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary Have a look at Microsoft 365 tenant \u0026ndash; script samples gallery (90 scenarios and 118 scripts, using CLI for Microsoft 365, PnP PowerShell, SPO Management Shell tooling and more\u0026hellip;). Register Today for Hacktoberfest 2021 - Begins October 1. Attend an event in October \u0026ndash; November hosted by Sharing is Caring. Sign up for the PnP Recognition Program. Project releases this week include PnP Core SDK - PnP Transformation Framework: Public Preview, Yo teams - generator-teams - v3.3.0 GA and - yoteams-build-core v1.3.0 GA.\nOpen-source project status (Bold indicates new this call)\n   Project Current Version Release/Status     PnP .NET Libraries - PnP Framework v1.6.0 GA, PnP Provisioning Engine Schema v202103 Version 1.7.0 \u0026ndash; Early Autumn 2021   PnP .NET Libraries - PnP Core SDK v1.3.0 GA, PnP Transformation Framework: Public Preview released! Version 1.4.0 \u0026ndash; Early Autumn 2021   PnP PowerShell v1.7.0 GA Working on v1.8, In progress: v2 POC   Yo teams - generator-teams v3.3.0 GA    Yo teams - yoteams-build-core v1.3.0 GA    Yo teams \u0026ndash; yoteams-deploy v1.0.1 GA    Yo teams - msteams-react-base-component v3.1.0    Microsoft Graph Toolkit (MGT) v2.3.0 GA      Note: While version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities.\n As well, there were 4 Script samples and 3 Teams samples this week.\nThe host of this call was Paolo Pialorsi (PiaSys.com) | @paolopia.\nQ\u0026amp;A takes place in chat throughout the call.\n  Actions   Register today for Hacktoberfest 2021 \u0026ndash; https://hacktoberfest.digitalocean.com\n  Register for Microsoft Ignite (Digital event) - November 2-4, 2021- https://ignite.microsoft.com\n  Opt in to PnP Recognition Program |https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n  First Time Contributor Session \u0026ndash; November 3rd (EMEA, APAC \u0026amp; US friendly times available)\n  Community Docs Session \u0026ndash; October 5th   Power Platform Samples \u0026ndash; First Time Contributor - October 27th\n  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th\n  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; TBS\n  Ask Me Anything (AMA) \u0026ndash; List Formatting \u0026ndash; October 5th\n  Ask Me Anything (AMA) \u0026ndash; PnP PowerShell \u0026ndash; October 26th\n  First Time Presenter \u0026ndash; October 12th\n  More than Code with VSCode \u0026ndash; November 9th\n  Maturity Model Practitioners \u0026ndash; October 19th (every 3rd Tuesday of month, 7:00am PT)\n  PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register\n  PnP Buddy System \u0026ndash; Request a Buddy\n    Download the recurrent invite for this call \u0026ndash;http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter.\n  Microsoft Teams Development Samples https://aka.ms/TeamsSampleBrowser\n Meeting Record Names - Markus Möller (Avanade) | @Moeller2_0 Bot with Meeting Lifecycle - Markus Möller (Avanade) | @Moeller2_0 Improved yo teams with MS Graph Toolkit - Markus Möller (Avanade) | @Moeller2_0  Microsoft Power Platform Samples https://aka.ms/powerplatform-samples\n No new Power Platform samples this week  Script Sample https://aka.ms/script-samples\n Extract Space content type Modern page as template and save to SharePoint \u0026ndash; Valeras Narbutas (Macaw) | @ValerasNarbutas Export SharePoint List Data to CSV with attachments \u0026ndash; Valeras Narbutas (Macaw) | @ValerasNarbutas Get, Update, Add, Remove SharePoint list items in large lists - Valeras Narbutas (Macaw) | @ValerasNarbutas Apply column format to SharePoint column - Valeras Narbutas (Macaw) | @ValerasNarbutas  Together mode  A fully packed room! Waiting on the beginning of a new year where we will be able to get together in person again.\nDemos delivered in this session   Teams Leaderboard \u0026ndash; measure Channel engagement with a Teams Toolkit sample in Blazor \u0026ndash; use Gamefication approach for displaying activity from a Microsoft Teams channel. Sample uses TeamsFx for scaffolding a Teams Blazor project, calls Microsoft Graph to retrieve messages and reactions and a simple UI to visualize the Leaderboard. Populate dropdowns with Team and Channel IDs. App counts/returns score data for evaluated activities (messages initiated, reactions, responses) for user selected activity in targeted Teams Channel.   Surface an embedded web chat that can communicate with users in a Teams Channel \u0026ndash; application sample allowing Microsoft Teams to interact with external users via Web Chat. Uses Bot Framework, Azure Cosmos DB to store conversations, adaptive cards and activity handlers for conversation. Architecture and code reviewed. External user submits request in Web Chat form. Communications about request limited to internal Teams channel except when Bot is @ mentioned. Easily add new channel, web chat bot to app.   Updates on Independent Publisher Connectors for Power Platform \u0026amp; UK Bank Holidays Connector Demo \u0026ndash; time off request app using independent publisher connector to grab a list of UK Government Bank Holidays (json). Employees quickly determine if time being requested falls on a bank holiday negating the need to request time off for those official holidays. User enters dates in request form, Power Automate flow processes the request - checks holidays and returns answer. Create a connector during Hactoberfest 2021.\n  Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call https://aka.ms/m365pnp/request/demo\nTopics covered in this call   PnP .NET library updates - Paolo Pialorsi (PiaSys.com) | @paolopia \u0026ndash; 9:20\n  PnP PowerShell - Erwin van Hunen (Valo Intranet) | @erwinvanhunen \u0026ndash; 12:30\n  yo Teams updates - Paolo Pialorsi (PiaSys.com) | @paolopia \u0026ndash; 14:54\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) @beth_panx \u0026ndash; 15:39\n  Microsoft Script Samples - Paul Bullock (CaPa Creative Ltd) | @pkbullock \u0026ndash; 03:14\n  Microsoft Teams Samples - Bob German (Microsoft) @Bob1German \u0026ndash; 17:42\n  Microsoft Power Platform Samples - Paolo Pialorsi (PiaSys.com) | @paolopia \u0026ndash; 20:41\n  D1: Teams Leaderboard \u0026ndash; measure Channel engagement with a Teams Toolkit sample in Blazor \u0026ndash; Thomas Gölles (Solvion) | @thomyg \u0026ndash; 22:23\n  D2: Surface an embedded web chat that can communicate with users in a Teams Channel \u0026ndash; Lee Ford (Symity) | @lee_ford \u0026ndash; 35:10\n  D3: Updates on Independent Publisher Connectors for Power Platform \u0026amp; UK Bank Holidays Connector Demo \u0026ndash; Natalie Pienkowska (Microsoft) | @NataliePienkow1 \u0026amp; Martyn Lesbirel (Dynamiti) \u0026ndash; 45:05\n  Resources Additional resources around the covered topics and links from the slides.\n Documentation - Prerequisites: Get started with Microsoft Teams app development  D1: Issues \u0026ndash; OfficeDev/TeamsFx D1: Video demo - Getting stated with Microsoft Teams Toolkit and Blazor  D1: Article - Recognize active team members with the CLI for Microsoft 365  D1: Repo - TeamsLeaderboard  D1: Video - Getting started with Blazor for Teams Development - E32  D2: Sample - Teams WebChat Sample  D3: Connectors - Microsoft Power Platform Connectors  D3: Connector Repo - U.K. Government Bank Holidays   General resources  Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Microsoft 365 platform call \u0026ndash; October 5that 8:00 am PDT | https://aka.ms/m365-dev-call\n  SharePoint Framework call \u0026ndash; October 7th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; October 13th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; October 14th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call \u0026ndash; October 14th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call \u0026ndash; October 20th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; October 21st at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar\n  General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.\nMore details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls!\nYou can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well.\nMore details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n \u0026ldquo;Sharing is caring\u0026rdquo;\nMicrosoft 365 PnP team, Microsoft - 1st of October 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-30th-of/images/recording-30th-september_hu18dc7250590d768c5f1044b918bd100f_214455_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-30th-of/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 30th of September, 2021"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from September 28th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform. New to Microsoft 365 Platform development? You are encouraged to register at Microsoft 365 Developer Program for free E5 developer tenant and other assets. Access the latest free training modules to accelerate learning Microsoft 365 platform capabilities. Visit the Microsoft 365 Sample Solution Gallery with more than 500 samples from Microsoft and community. Sign up and attend one of a growing list of events hosted by Sharing is Caring in October-November. Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Registration for Microsoft Ignite (Digital event) \u0026ndash; November 2-4 is now open. Latest news from Microsoft on Microsoft 365 platform and 2 demos this week. The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call.\nMicrosoft 365 Platform News Flash\n Viva Connections public preview is now available!  Actions  Register for Microsoft Ignite (Digital event) - November 2-4, 2021- https://ignite.microsoft.com Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; November 3rd (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; October 5th  Power Platform Samples \u0026ndash; First Time Contributor - October 27th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; November 16th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; TBS  Ask Me Anything (AMA) \u0026ndash; List Formatting \u0026ndash; October 5th First Time Presenter \u0026ndash; October 12th More than Code with VSCode \u0026ndash; November 9th  Maturity Model Practitioners \u0026ndash; October 19th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Seated outdoors and waving in the Fall season. It\u0026rsquo;s awesome having you as a member of this community. Demos Demos delivered in this session\n  Introduction to Microsoft Viva Connections extensibility \u0026ndash; Viva is an Employee Experience Platform (EXP). Latest Viva Connection basics (more than you have seen previously), learn about integrated experiences, view the dashboard, default support for Teams Personal Apps \u0026amp; Bots, custom card capabilities and supports (extensibility). Opportunities for Information worker and front line worker organizations. Demo is Dashboard page (created with no code) and create a card in Card Designer.   Building custom search layout experiences in SharePoint with Microsoft Search \u0026ndash; latest out-of-box capabilities in Microsoft Search using Adaptive Cards. Customize search results layout using templates in Search Layout Designer (effectively Adaptive Card Designer). Result Type layouts from Graph connector (GA) and from SharePoint content (Private preview). Include content in search result from outside Microsoft 365, using the Graph connector. Call to Action \u0026ndash; Participate in Private Preview and provide feedback on Graph Connector search. Q\u0026amp;A.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  Latest updates and news on the Microsoft 365 platform \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 4:24\n  D1: Introduction to Microsoft Viva Connections extensibility \u0026ndash; Ed Averett (Microsoft) \u0026ndash; 8:58\n  D2: Building custom search layout experiences in SharePoint with Microsoft Search \u0026ndash; Jyoti Pal (Microsoft) \u0026ndash; 29:25\n  Resources Additional resources around the covered topics and links from the slides.\n  D1: Documentation - Overview: Viva Connections (Preview)   D1: Blog - Announcing public preview of SharePoint Framework 1.13 \u0026ndash; with Viva Connections Extensibility   D1: Documentation - Overview of the SharePoint Framework   D1: Documentation - Overview of Viva Connections Extensibility   D1: Documentation - Authenticate users in Microsoft Teams   D1: Documentation - Create deep links   D2: Documentation - Manage search result layouts \u0026ndash; Things to consider\n  D2: Registration - Result type customization for SharePoint content - Private preview   D2: Feedback - Microsoft Search with Graph connector content   PnP Weekly \u0026ndash; Episode 136 (September 27th) with Belgium-based MVP and Technology Evangelist from The Cronos Group - Thomas Vochten | @ThomasVochten | video | podcast\n  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) |\n@jthake and Paul Schaeflein (Addin365) | pschaeflein\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   M365 General Dev call \u0026ndash; September 30th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Microsoft 365 platform call \u0026ndash; October 5th at 8:00 am PDT | https://aka.ms/m365-dev-call\n  SharePoint Framework call \u0026ndash; October 7th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; October 13th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash; October 14th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; October 20th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; October 21st at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar\n  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.  More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 29th of September 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-28th-of-september-2021/images/recording-28th-sep_hu3c93dac9e7e228af834eec70cabc3f72_529900_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-28th-of-september-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 28th of September, 2021"},{"categories":[],"contents":"Introduction  In this article, we will see how to configure and use react-spfx-datatable web part which I have contributed to PnP SPFx Web part galleries.  To find the full source code refer to react-datatable.\n As per all the configurations and features, our web part will be look like this.\n     Let\u0026rsquo;s see step by step configuration.\n 1. Download a package\n To download the package refer to react-datatable.\n 2. Add solution to SharePoint Page\n After downloading a package add it to the App Catalog site.\n Move to the site where we want to add the web part to the page.\n Now Add and install the web part.\n Select App.\n     It will open a page for the SharePoint apps store. At here find datatable app and add it.\n  ![App Store.png](images/App Store.png)\n Now create a page and add web part.\n     3 Configure properties from property pane configuration  Now we will configure a web part as below,\n 1. First we will configure the List Configuration section  Change the web part title that you want to show as a header/title. Select a list that you want to show in data table format Then select fields that you want to show in the data table.   ![List Config.png](images/List Config.png)\n 2. Now configure the Search and Sort Section.  Search  If you will enable search then it will ask the user for which fields you want to apply search functionality. so you have to select fields from the dropdown. Search dropdown will be disabled when and only when the Search toggle button will be enabled.    Sort  If you will enable sort then it will ask the user for which fields you want to apply sort functionality. so you have to select fields from the dropdown. Sort dropdown will be disabled when and only when the Sort toggle button will be enabled.         3. Now we will configure Advanced features.   In this section, we will configure the below features,  Pagination  If we will enable the Pagination toggle button then the table will be rendered with pagination.   Export to CSV  If we will enable this option then it will show the Export to CSV button on the top of the data table and we can easily export it to CSV.   Export to PDF  If we will enable this option then it will show the **Export to Pdf **button on the top of the data table and we can easily export it to Pdf.   Order columns in DataTable  It will show all the columns which we are rendering in the data table and from here we can reorder the columns in the data table.   Set even and odd row color  Using this color picker option we can set odd/even row color in the table dynamically.          Output     Summary  In this article, we have seen how to configure react data table web part and we can easily use it for any SharePoint custom list.\n I hope it will help you!\n Sharing is caring!\n ","image":"https://pnp.github.io/blog/post/guidance-on-how-to-use-react-datatable-webpart/images/ChandaniPrajapati_hu445689f588f4be34be8acbbeb8d2f425_38403_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/guidance-on-how-to-use-react-datatable-webpart/","tags":["SharePoint framework (SPFx)"],"title":"Guidance On How To Use React DataTable Webpart"},{"categories":["Community post"],"contents":"User Profiles are an increasingly important part of a modern organisation While they have always been important as a (often underused) tool for finding staff and searching for people with certain skills, the changes in work practice wrought by the COVID-19 pandemic now mean that staff spend less time together physically, so have less opportunity to know their colleagues and create the social and personal links that team-building and socialisation rely on. The need to understand, use and maintain useful staff profiles has never been greater.\nSince profiles are complex, and the spread of technologies in Microsoft 365 are wide and constantly evolving, there is inevitable complexity. Knowing what profile elements exist where and how both staff and admin should access them is important.\nThis blog runs through the profile scatter at a high level, so that we at least know where we should look.\nAzure Azure provides the core user identity and essential profile service for Microsoft 365 and beyond, via AAD (Azure Active Directory).\nWhen creating a new user in AAD, you must add their Name and User Name (email address) as well as any Groups or Roles they should be in.\n   AAD also allows other \u0026lsquo;organisational information\u0026rsquo; about the user to be added, specifically:\n Profile Picture First Name, Last Name, Maiden name Job Title, Department, Manager, Employee ID, Company Name Contact information (address, phone numbers) Minors and Consents  This is all useful stuff, but user profiles can, and should, go a lot further than the basics that AAD provides.\nSee: Manage user profiles in the SharePoint admin center \u0026ndash; SharePoint in Microsoft 365 | Microsoft Docs\nAccess AAD profiles: https://aad.portal.azure.com/#blade/Microsoft_AAD_IAM/UsersManagementMenuBlade/MsGraphUsers\nMicrosoft 365 Microsoft 365 provides an extend set of profile attributes, with the focus being on staff being able to add and extend their own information.\nUpdate personal profile Staff can update many of their own personal information (but not most of the things controlled in AAD) in the profile using the Delve profile page and selecting Me and *Update profile. *The pencil edit icon appears next to anything they are allowed to change in the main profile, generally contact information and broader profile information such as About me (personal biography), Projects, Skills and expertise, Schools and education, Interests and hobbies.\nThere is also a deeper level (also based on the pre-Modern UI) which you can get to from this URL: https://emicoltd-my.sharepoint.com//_layouts/15/editprofile.aspx?UserSettingsProvider. Custom Properties, if any, can be edited from the ellipsis (Custom Properties)\n   They can also set who can see the information via a small Globe icon.\n   There are multiple \u0026lsquo;ports of entry\u0026rsquo; to the profile update page:\n Delve Me page (https://\u0026lt;tenantName\u0026gt;-my.sharepoint.com/person.aspx) Your account menu in Microsoft 365 (select your profile picture or initials)  [    Any Microsoft 365 People card  [![People card.png](images/People card.png)\nAdmin management of profiles Microsoft 365 admins can manage core profile attributes from the Users | Active Users page in the Microsoft 365 admin center; specifically:\n User Name, email address Profile picture Display name (from Manage contact information, though normally this is locked and managed via Azure Active Directory).  SharePoint Online SharePoint Server has its own user profile service, there are a few traces of that still to be found in SharePoint Online.\nSharePoint User Profile Service The SharePoint User Profile Service stores information about SharePoint users in a central location in SharePoint Server. It enables My Sites, social computing features such as social tagging and newsfeeds, and creating and distributing profiles across multiple sites and farms in on-premises and hybrid scenarios. It is largely deprecated in SharePoint Online, with Azure and the Microsoft 365 profile service (exposed via Delve and Profile Cards in SharePoint) taking on most of the functions it provided and exposing them to the Microsoft 365 Graph (\u0026lsquo;The Graph\u0026rsquo;). Legacy support still exist and it can be used for things like custom profile properties.\nAdd and edit user profile properties in SharePoint If your organization uses the cloud Identity approach then your user accounts are stored in Azure AD and admins manage user profile info in the Microsoft 365 admin center. You can also manage user profiles (including adding user pictures and defining user managers) in the Azure AD admin center.\nSee Add or change profile information for a user in Azure Active Directory. Adding custom profile attributes If you need to create custom user profile properties, such as languages spoken, emergency contact info, or sales account, you can use User Properties in SharePoint.\nUse the More features page of the new SharePoint admin center, which uses the pre-modern SharePoint UI and profile service:\n Under User profiles, select Open. Under People, select Manage User Properties.  ![Custom attributes.png](images/Custom attributes.png)\n Select New Property. In the Name box, enter a unique name for the property.  ![Custom attributes 2.png](images/Custom attributes 2.png)\n In the Display Name box, enter the profile property name that will be displayed to all users. (This name doesn\u0026rsquo;t have to be unique.) In the Type list, select the data type for the property. Note\nIf you select string (Multi Value), the property will be permanently set as a multi-valued property. You cannot change this setting after you select OK. You can only delete the property and add it again as a new single-value property. If you selected binary, HTML, or string, use the Length box to enter the maximum number of characters allowed for property values. If you selected string and want to associate the profile property with a managed metadata term set, select Configure a Term Set to be used for this property. Then select a term set from the list. Make sure Default User Profile Subtype is selected so the default user profile subtype is associated with this user profile property. In the Description box, enter the instructions or information that is displayed to users about this profile property. In the Policy Settings section, select the policy setting and default privacy setting that you want for this property. Select the User can override box to enable users to override these settings. If you want users to be able to change this profile information for themselves, select Allow users to edit values for this property. In the Display Settings section, specify whether and how the property will be viewed by users. In the Search Settings section, select Alias if the property is the equivalent of a user\u0026rsquo;s name. For example, you might do this if you create a property for a \u0026ldquo;Stage name\u0026rdquo; and want searches for all documents by John Kane to return the same results as searches for the user\u0026rsquo;s real name. Select the Indexed if you want searches to return all the user profiles matching that property. For example, if you have a property for \u0026ldquo;University,\u0026rdquo; a search for that value would return all alumni from that university. Note\nThe Alias check box is available only if you set the Default Privacy Setting \u0026gt; Everyone. Select OK.  Note: Custom properties from Active Directory or Azure AD are not synchronized with SharePoint.\nSee https://docs.microsoft.com/sharepoint/add-and-edit-user-profile-properties\nBulk updates profiles and custom attributes Many enterprises need to replicate custom attributes to the SharePoint user profile service, or do bulk set up for multiple members of staff. Microsoft provide a user profile bulk API, the UserProfile.BatchUpdate.API. PowerShell is the usual way of driving this, with a JSON import file holding the attributes to be set.\nSee: Bulk update custom user profile properties for SharePoint Online\nSee: Call the import API from PowerShell.\nUser Profile Sync Microsoft SharePoint uses the Active Directory synchronization job to import user and group attribute information into the User Profile Application (UPA). When a new user is added to Azure Active Directory (Azure AD), the user account information is sent to the SharePoint directory store and the UPA sync process creates a profile in the User Profile Application based on a predetermined set of attributes. Once the profile has been created, any modifications to these attributes will be synced as part of regularly scheduled sync process.\n From https://docs.microsoft.com/sharepoint/user-profile-sync\nProperties that are synced into SharePoint user profiles The following Azure AD user attributes are synced to the UPA.\n Azure AD attribute User profile property display names Notes Sync to sites UserPrincipalName Account Name User Name User Principal Name Example: i:0#.f \u0026lt;|\u0026gt; membership \u0026lt;|\u0026gt; gherrera@contoso.com gherrera@contoso.com Yes DisplayName Name Yes GivenName FirstName Yes sn LastName Yes telephoneNumber Work phone Example: (123) 456-7890 Yes proxyAddresses Work Email SIP Address Work Email is set to the value prefixed with SMTP. (SMTP:gherrera@contoso.com) Example: gherrera@contoso.com Yes PhysicalDeliveryOfficeName Office Yes Title Title Job Title Job Title contains the same value as Title and is connected to a term set. Yes Department Department Department is connected to a term set. Yes WWWHomePage Public site redirect No PreferredLanguage Language Preferences Used by SharePoint to determine language for the user when the multilingual user interface (MUI) feature is enabled. Yes msExchHideFromAddressList SPS-HideFromAddressLists No Manager Manager User Manager for organization hierarchy Yes\n Note UPA synchronization is limited to a preconfigured set of properties to guarantee consistent performance across the service.\nSee: About user profile synchronization \u0026ndash; SharePoint in Microsoft 365 | Microsoft Docs\nViva Microsoft is rapidly developing its Employee Experience platform, Microsoft Viva.\nTopics will, almost certainly, be added to personal profiles, to better link people with content and colleagues and aid findability of skills by topic, while Viva Insights provides analytics on individual and team activity and productivity. It seems reasonable that profile information may be incorporated into the UI of Viva and that the Delve experience will be deprecated.\nSee: Employee Experience \u0026amp; Engagement | Microsoft Viva\nSee: Microsoft 365 user profiles are adding Topics and skills to improve Microsoft Search results \u0026ndash; OnMSF...\nOther Applications Much of the Microsoft 365 user profile information is exposed through the Graph API and the Office 365 Users Connection provider. These let you get the current users profile or another user\u0026rsquo;s profile as well as related users (notably their manager and reports). There is good support for this in Power Automate, Power Apps, Logic Apps.\nThen there is LinkedIn, which is being gradually embedded into the M365 stack and adds yet another profile source.\nFinal word \u0026ndash; Profile Pictures Profile pictures are really important \u0026ndash; they not only help reinforce that you are working with a real person and let you recognise someone if you actually meet them in an office (remember those days), but having a picture of the person you are talking to actually improves engagement and empathy. Sadly, maintaining profile pictures is a bit more complex than you might expect. Different products (Experiences as Microsoft would have you call them) source the image from different places; the last time I checked it was:\n![Profile pictures.png](images/Profile pictures.png)\nUpdating a profile in one place will, usually, update it everywhere, but it can take up to 72 hours.\nI strongly recommend that everyone is encouraged to do this though.\nSee: Information about profile picture synchronization in Microsoft 365\n","image":"https://pnp.github.io/blog/post/looking-at-things-in-profile/images/Account_hu29f1741fd8d648f71d1e425107b2deef_29367_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/looking-at-things-in-profile/","tags":["Azure AD","SharePoint"],"title":"Looking at things in profile"},{"categories":["Community post"],"contents":"Once upon a time I teamed up with my friend and partner in crime Carmen Ysewijn. We both work as Power Platform developers and Microsoft 365 consultants, and got both tired of doing the same things over and over again:\nOrganizations would roll out Microsoft Teams, and either not make too much fuzz on meeting user\u0026rsquo;s needs and just assume that changing working behavior would magically happen or they would get a business consultant (us) who would then sit with each and every single team and explain\n why cascading folder structures in SharePoint are a bad idea how to keep track of what really matters how we do not drown in information and notification overload how to excel at the art of teamwork  Our idea Now, when #poweraddicts really get tired of doing something, they will spend a huge amount of time on automating this. Our idea was to create a process, that\n  walks users through these considerations\n  ask them how the \u0026ldquo;team of their dreams\u0026rdquo; would look like:\n Which channels would they need? Which columns in an additional SharePoint library could support their work? How about Microsoft lists? What would they use to keep track of their tasks?    as a result provisions the Team for them.\n  We agreed on making this both open-source and enterprise-grade, which affected all of our\nArchitecture decisions  For our UI, we chose a Power Apps canvas app - following the design guidelines of the Teams UI toolkit so that our app looks and feels like a Teams native app. As our database, we decided that Dataverse would be the best option to log all requests in We created security roles in Dataverse to ensure that data wouldn\u0026rsquo;t get over-exposed For automation, we went with Azure Logic Apps, as this gave us not only a better developer experience, but would also make deployment easier Authentication in our Logic Apps is handled by a Managed Identity  We also needed to make some hard decisions, like\nNo Microsoft Planner provisioning As the Microsoft Planner API doesn\u0026rsquo;t support application-level permissions, we chose to not provision a Planner part with ProvisionGenie until Planner comes up with a fully working API. This meant, that we needed to come with an alternative for user to manage their tasks. Optionally, we provision a Microsoft List, that mimics the experience of Planner and introduce users to the gallery view.\nDeleting the Teams Wiki The Teams Wiki isn\u0026rsquo;t everyone\u0026rsquo;s darling and we don\u0026rsquo;t like it for some reasons- but the fact why we decided to delete it as part of the provisioning process for all channels is that, once the Wiki is (accidentally?) removed, all content is hard-deleted.\nMaking ProvisionGenie a deployable solution    To make this solution available, it was not enough to only provide the (opaque) .zip file for the canvas app. We provide\n a Power Platform solution including  1 canvas app 5 Dataverse tables 2 security roles   5 Logic Apps, ready to be deployed with ARM template files, including  authentication handled by a Managed Identity a script to deploy the files a script to handle the Microsoft Graph permissions for the Managed Identity   proper documentation  As a result, the app looks like this:   We open-sourced ProvisionGenie 🧞 and just shipped our first release, you can find the repository here - with guidance how to get the app and how to contribute to it: https://provisiongenie.com\nWe would love to get your feedback and improve our solution!\n Yannick Reekmans, for debugging, guidance, emotional support and introducing me to Carmen Michael Roth for all ProvisionGenie visuals 💜 Lee Ford for listening to my endless rants during debugging  ","image":"https://pnp.github.io/blog/post/provisiongenie-an-open-source-provisioning-engine-for-microsoft/images/TeansResult_huaf402cf0fb756b4db32d4cdfd36511cc_246504_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/provisiongenie-an-open-source-provisioning-engine-for-microsoft/","tags":["Microsoft Teams","Dataverse","Azure","Power Apps"],"title":"ProvisionGenie - an open-source provisioning engine for Microsoft Teams"},{"categories":[],"contents":"There were couple of folks who were asking me whether there are some ways where we can generate a Permission Report for a particular file in SharePoint Online either using some scripts or from the User Interface. Well the first thing which comes to your mind is to go look in the Manage Access approach from the User Interface of File sharing settings. It does gives you a high-level information about the shared files. But this may get difficult if you want to know how many of those users were external. Well, using User Interface you will not get that information and there you have reached a difficult situation. You will also find it difficult to know about shared details if the file is shared via Direct Link. There comes CLI for Microsoft 365 for your rescue. With CLI for Microsoft 365, there is a command via which you can get the complete sharing report which you will fetch the result something like below. ![SP Permission Report - CLI.png](images/SP Permission Report - CLI.png)\n When you execute the command\nm365 spo file sharinginfo get --webUrl https://contoso.sharepoint.com/sites/M365CLI --url \u0026#34;/sites/M365CLI/Shared Documents/MySharingCentral.docx\u0026#34; How good is that?! You can get the complete sharing details which even has external sharing information in a single command.\nInformation Not Enough If you are not happy with the currently available information available as text output, you can even get the JSON output from CLI for Microsoft 365 commands via which you can manipulate and process complete business scenarios. For getting the complete Sharing Information result in a JSON object, you can use the below command\nm365 spo file sharinginfo get --webUrl https://contoso.sharepoint.com/sites/M365CLI --url \u0026#34;/sites/M365CLI/Shared Documents/MySharingCentral.docx\u0026#34; --output JSON You can get more details about this command from this link.\n","image":"https://pnp.github.io/blog/post/get-permission-report-for-sharepoint-online-or-onedrive-file/images/SP%20Permission%20Report%20-%20CLI_hucd052e7329167be2cf12254ad7ad42fe_199641_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/get-permission-report-for-sharepoint-online-or-onedrive-file/","tags":["CLI for Microsoft 365","SharePoint"],"title":"Get Permission Report for SharePoint Online or OneDrive File using CLI for Microsoft 365"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Belgium-based MVP and Technology Evangelist from The Cronos Group - Thomas Vochten | @ThomasVochten.\nTopics discussed in this session include:  What is the Technical Evangelist role and how does one work into the role? Teaching ITPros about the Developer tools and methods. What is the main concern for companies in the Microsoft cloud today?  The Partner\u0026rsquo;s role in driving user adoption / change management. Tip: Don\u0026rsquo;t throw everything at the customer at the same time!  We also covered 11 articles by Microsoft and the community from the last week. Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded in front of web cams in totally audience free rooms on Monday, September 27, 2021.\n Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.  These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Viva Connections public preview is now available! - Brad McCabe (Microsoft) Overview: Viva Connections (Preview) - Microsoft Set up and launch Viva Connections (Preview) - Microsoft  Community articles  Collabdays - Belgium \u0026amp; Netherlands 2021 - Saturday, October 23 2021 Parse CSV through Code in Power Automate Custom Connection - John Liu (Flow Studio) | @johnnliu SharePoint Custom List Templates - Laura Rogers (WI Mentor) | @wonderlaura How to use the Microsoft Graph SDK Chaos Handler to Simulate Graph API Errors - Cameron Dwyer (OnePlace Solutions) | @CameronDwyer PnP Modern Search Filters web part - Agnes Molnar (Search Explained) | @molnaragnes Using Font Awesome Icons In PowerApps - Siddharth Vaghasia | @siddh_me Getting started with the Microsoft Teams Framework (TeamsFx) - Thomas Gölles (Solvion) | @thomyg Adaptive Scope Retention Policy | A Walk-Thru - Joanne C Klein | @JoanneCKlein  Additional resources  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-136-thomas-vochten-the-cronos/images/Thumb-Ep136_hucf44d5debaad8868f0ac13baa7f63557_440901_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-136-thomas-vochten-the-cronos/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 136 - Thomas Vochten (The Cronos Group)"},{"categories":["Office add-in developer community call"],"contents":"The Office Add-ins developer platform team has new updates to share this month on Office Add-in samples.\nOpen data from your web site in a spreadsheet in Microsoft Teams    This sample accomplishes the following tasks.\n Creates a new Excel spreadsheet in Microsoft Teams containing data you define. Embeds your add-in into the Excel spreadsheet. Creates a message in Microsoft Teams with a link to the new spreadsheet.  Check out the code sample: Open data from your web site in a spreadsheet in Microsoft Teams.\nImprovements to sample documentation We created a simple list of Office Add-in samples at Office Add-in code samples - Office Add-ins | Microsoft Docs. This should make it easier to search for and find the samples you need. Let us know if you have any feedback or suggestions about the samples at https://github.com/OfficeDev/PnP-OfficeAddins.\nContributors \nThank you to our contributors who are actively helping each month with the Office Add-ins community effort.\n Maarten van Stam - helping review PRs and issues on PnP-OfficeAddins Eric Legault - helping review PRs and issues on PnP-OfficeAddins  Office Add-ins are part of the Microsoft 365 PnP community. Please consider contributing by going to https://github.com/officedev/pnp-officeaddins and helping with PRs, issues, or contributing new samples.\nAdditional resources  Get started with Office development by joining the Microsoft 365 developer program. Try out some samples and get coding quickly with Office add-ins by downloading Script Lab. Automate your solutions with Office Scripts.   ","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-in-samples-september-2021-update/images/DavidChesnut_0-1632174402426_hu886ed3f89f07ec9963234eca517fcf04_106271_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-in-samples-september-2021-update/","tags":[],"title":"Office Add-in Samples -- September 2021 update"},{"categories":["Microsoft 365 developer podcast"],"contents":"Maisa Rissi and Darrel Miller join Jeremy and Paul to talk about the latest updates to the Microsoft Graph SDKs, including PowerShell, .Net, Javascript and a new CLI.\nListen to the show here: Latest Microsoft Graph SDKs with Maisa Rissi and Darrel Miller (m365devpodcast.com)\nLinks from the show  Access Microsoft Graph through a new preview CLI Microsoft Graph .NET SDK v4 now generally available with streamlined authentication and more Microsoft Graph JavaScript SDK 3.0.0 is now generally available  Microsoft News  Multi-tenant architecture for SaaS apps - Microsoft 365 Developer Blog MS Graph, Blazor WebAssembly and Azure Static Web Apps - DEV Community  Community Links  Microsoft Teams Meeting Apps \u0026ndash; Lifecycle basics (@Moeller2_0) Graph.Community library on the Community CloudCast (@paulschaeflein)  ","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-in-samples-september-2021-update/images/DavidChesnut_0-1632174402426_hu886ed3f89f07ec9963234eca517fcf04_106271_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-latest-microsoft-graph-sdks-with/","tags":[],"title":"Microsoft 365 Developer Podcast - Latest Microsoft Graph SDKs with Maisa Rissi and Darrel Miller"},{"categories":["Microsoft Viva and SPFx community call"],"contents":" SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from September 23rd is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary A reminder to tune in each Tuesday for the new Microsoft 365 platform community call. Topics for the call on September 28 are Building custom search layout experiences in SharePoint with Microsoft Search and Introduction to Microsoft Viva Connections extensibility. Have a look at the updated list of training events hosted by Sharing is Caring. Register for the PnP Recognition Program. SharePoint Framework v1.13 GA coming soon (in Oct) \u0026ndash; The release focuses on the Microsoft Viva Connections mobile experience! Released PnPjs Client-side Libraries v2.9.0 and updated CLI for Microsoft 365 v4.0.0. Preview. **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago) PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.12.1 GA, v1.13 Beta Viva.20 v1.13 GA in October PnPjs Client-Side Libraries v2.9.0 v3.0.0 developments underway CLI for Microsoft 365 v3.13.0 Preview, v4.0.0 Preview - updated v4.0.0 GA to release end September Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.3.0 (SPFx v1.12.1) Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1) PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.3.0 \u0026amp; v3.21.0 Release expected any day\n1 extension and 4 web part samples were delivered in the last 2 weeks! Visit the new samples repository for Adaptive Card Extensions (ACE) - aka.ms/spfx-aces. Thank you all for your contributions! The host of this call is David Warner II (Catapult Systems) @DavidWarnerII. Live Q\u0026amp;A at end and in chat throughout this call. Picture time is back! Great to see all of you today. Looking forward to seeing some of you in Düsseldorf or Las Vegas later this year. Actions  Register for Microsoft Ignite (Digital event) - November 2-4, 2021- https://ignite.microsoft.com Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; TBS (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; October 5th  Power Platform Samples \u0026ndash; First Time Contributor - October 27th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; September 28th  Ask Me Anything (AMA) \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th Ask Me Anything (AMA) \u0026ndash; List Formatting \u0026ndash; October 5th First Time Presenter \u0026ndash; October 12th More than Code with VSCode \u0026ndash; TBS  Maturity Model Practitioners \u0026ndash; October 19th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo   Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Apply a custom theme or a variation of the current SharePoint theme directly to the web part \u0026ndash; see the 3 ways to change shading using the Fluent UI Theme variant inside a web part. 1) Use colors applied to the section where the web part is present, 2) Select color variations based on theme applied at Site level or 3) Apply variations set to the json of a custom theme, created through the Fluent UI Theme Designer tool.   Accessing personal files easily with My OneDrive Web Part \u0026ndash; a simple, powerful SPFx web part for an Intranet Landing or Viva connections page to display the current user\u0026rsquo;s One Drive files. Uses the One Drive Graph API and a custom component - OneDriveTable. Shows User\u0026rsquo;s One Drive files and folders, most file type icons, breadcrumbs, sorting by column, select columns to display, and option to copy URL to file in OneDrive. Full code walkthrough.   Surface user specific calendar events with my Outlook events web part build \u0026ndash; this SPFx React My Outlook Events web part uses event feeds and renders events using a look and feel consistent with the out-of-box SharePoint Group calendar/events web part. This web part provides the logged in user\u0026rsquo;s Outlook events with some advanced feature configuration \u0026ndash; layouts for rendering single and multi-day events, selectable date range, and navigation direct to Teams meeting. Full code walkthrough.   SPFx extension samples: (https://aka.ms/spfx-extensions)\n Copy/Move Items within Lists - Sudharsan Kesavanarayanan| @sudharsank  SPFx web part samples: (https://aka.ms/spfx-webparts)\n Applications Secrets Expiration - Aimery Thomas | @aimery_thomas Teams Membership Updater - Nick Brown | @techienickb Advanced Page Properties - Abderahman Moujahid | @Abderahman88 News - Alison Collins | https://github.com/ReactIntern  Thank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 5:57 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 8:21 CLI for Microsoft 365 - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 9:49 PnP SPFx Controls - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 10:29 PnP Modern Search - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 11:26  PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 11:53  Demos   **D1: **Apply a custom theme or a variation of the current SharePoint theme directly to the web part \u0026ndash; Fabio Franzini | @franzinifabio \u0026ndash; 15:01\n  D2: Accessing personal files easily with My OneDrive Web Part \u0026ndash; Siddharth Vaghasia | @siddh_me \u0026ndash; 26:23\n  D3: Surface user specific calendar events with my Outlook events web part build \u0026ndash; Chandani Prajapati | @Chandani_SPD \u0026ndash; 35:38\n  Resources Additional resources around the covered topics and links from the slides.\n  D1: Sample - React Fluent UI Theme Variant   D1: PnP SPFx Controls - Reusable property pane controls for the SharePoint Framework solutions   D1: Tools - @fluentui/scheme-utilities \u0026ndash; npm   D2: Sample - My OneDrive\n  D3: Sample - My Events   D3: Repository - Samples by Framework   D3: PnP SPFx Controls - Reusable React controls for your SharePoint Framework solutions   D3: Sample - Calendar Feed\n  [PnP Weekly \u0026ndash; Episode 135] with [German-based MVP and founder of ]NubelusAdis Jugo[ | @adisjugo. | ]video[ | ]podcast\n  General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned   SharePoint dev documentation\n  SharePoint dev issue list Upcoming calls | Recurrent invites: (Subject to Updates in September)\n  Microsoft 365 platform call \u0026ndash; September 28th at 8:00 am PDT | https://aka.ms/m365-dev-call\n  M365 General Dev call \u0026ndash; September 30th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  SharePoint Framework call \u0026ndash; October 7th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; October 13th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash;October 14th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; October 20th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; October 21st at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 24th of September 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-23rd-of-september-2021/images/recording-23rd-sep_hu0d5c5fb8d02fdce8ab773241369c6c55_244082_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-23rd-of-september-2021/","tags":[],"title":"SharePoint Framework Community Call -- 23rd of September, 2021"},{"categories":["Adaptive Cards community call"],"contents":"The following topics are covered in this month\u0026rsquo;s community call:\n Contribution Guidelines (process for taking on feature requests in Adaptive Cards Repo), Announcing v1.5 (Preview build of v1.5 is scheduled for September release. Key features - Input.ChoiceSet search and filtering, Input.ChoiceSet auto complete, Improvements to table layouts) - J.P. Roca (Microsoft), Teams support for v1.4 (Teams now has partial support of v1.4) - Steven Kong (Microsoft) and finally Q\u0026amp;A (members of the Developer team and PM team field questions on a host of topics \u0026ndash; updating documentation, functionality with Power Platform, multi-line support, adaptive components, etc.) for 30 minutes.  This call was hosted by J.P. Roca (Microsoft) | @jpthepm. Recorded on August 12, 2021.\n  Agenda  Contribution Guidelines - J.P. Roca (Microsoft) | @jpthepm \u0026ndash; 1:03 Announcing v1.5 - J.P. Roca (Microsoft) | @jpthepm \u0026ndash; 2:04 Teams support for v1.4 \u0026ndash; Steven Kong (Microsoft) | @stkong_sdk \u0026ndash; 2:58 Q\u0026amp;A with members of Microsoft Developer and PM teams \u0026ndash; 4:49  Referenced in this call  Documentation - Extensibility Onboard OEM Contact - onboardoam@microsoft.com  Resources in General  Let us know the features you need https://aka.ms/ACRoadmap Schema Explorer - https://adaptivecards.io/explorer/Action.Execute.html Designer - https://adaptivecards.io/designer/  Get started with Templating - https://aka.ms/ACTemplating Browse the Adaptive Cards Code - https://aka.ms/ACRepo Find tools, sample cards and more - https://www.madewithcards.io Contribution Guidelines \u0026ndash; https://aka.ms/ACRepo   Stay connected  Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365PnP/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/adaptivecardscommunitycall Next call \u0026ndash; September 9th at 09:00am PDT**  ","image":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-august-2021/images/900x506-AugustTHumb_hu37a1d39b54843f3f28c5d60aaa076cca_224730_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-august-2021/","tags":["Adaptive Cards"],"title":"Adaptive Cards community call -- August 2021"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by German-based MVP and founder of Nubelus - Adis Jugo | @adisjugo.\n Topics discussed in this session include:  Discussion on the development around Azure and Microsoft 365 services - call out for Azure Cognitive Services Role of Microsoft 365 and Azure for building business solutions History and the future of the European Collaboration Summit conference Discussion on the remote vs in-person conferences  We also covered 15 articles by Microsoft and the PnP Community from the last week. Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis session was recorded in front of absolutely no audience in two parts - Monday, September 13, 2021 and Tuesday, September 21, 2021.\n Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.  These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community! Microsoft articles  Bringing large groups and communities together in Teams - Marc Pottier (Microsoft) Changes to the Microsoft 365 advanced eDiscovery create case API (beta) - Microsoft  Community articles  Multi-tenant architecture for SaaS apps - Rabia Williams (Microsoft) | rabwill Microsoft 365 Developer Podcast - Microsoft 365 App Certification with Orion O\u0026rsquo;Malley - | Microsoft 365 Developer Podcast | Jeremy Thake (Microsoft) | @jthake, Paul Schaeflein (AddIn365) | @paulschaeflein and Orion O\u0026rsquo;Malley PnP Batch versus Microsoft Graph Batch in PowerShell to add/delete 3k items - Reshmee Auckloo (Pension Protection Fund) | @reshmeeauckloo Export conversations from Microsoft Teams Channels using the CLI for Microsoft 365 - Patrick Lamber (Experts Inside) | @patricklamber 4 ways to level up your Power Automate flows - Luise Freese | @LuiseFreese How to use loader/Spinner/In Progress indicator in SPFx using fluent UI Spinner? - Chandani Prajapati | @Chandani_SPD The three opportunities for MSP\u0026rsquo;s moving forward - Alex Fields | @vanvfields New SharePoint hub to hub associations - Daniel Glenn (InfoWorks, Inc) | @DanielGlenn, Darrell Webster (Modern Workplace Change) | @darrellaas Getting started with the Microsoft Teams Framework (TeamsFx) - Thomas Gölles (Solvion) | @thomyg How to use Remote Event Receivers with .NET Core (or .NET 5) and PnP.Framework - Sergei Sergeev (Mastaq) | @sergeev_srg Meeting apps in Microsoft Teams (2) \u0026ndash; Device permissions - Markus Möller (Avanade) | @Moeller2_0 Meeting apps in Microsoft Teams (3) \u0026ndash; In-meeting - Markus Möller (Avanade) | @Moeller2_0  Additional resources  Microsoft 365 Extensibility Look Book - https://aka.ms/m365/extensibility  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-135-adis-jugo-nubelus/images/pnp-weekly-135_hu4af4923d1b6f5ec4fbb50be160dcf4f4_775547_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-135-adis-jugo-nubelus/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 135 - Adis Jugo (Nubelus)"},{"categories":["Microsoft 365 platform call"],"contents":"   Microsoft 365 Platform Community Call - weekly community call recording from September 21st, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp/videos. Call summary Welcome to the weekly call focused on capabilities of the Microsoft 365 platform. New to Microsoft 365 Platform development? You are encouraged to register at Microsoft 365 Developer Program for free E5 developer tenant and other assets. Hear about the upcoming M365 Ecosystem Security - ISV and Customer Surveys. Access the latest free training modules to accelerate learning Microsoft 365 platform capabilities. Visit the new Microsoft 365 sample gallery with more than 500 samples from Microsoft and community. Sign up and attend one of a growing list of events hosted by Sharing is Caring in September. Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). Registration for Microsoft Ignite (Digital event) \u0026ndash; November 2-4 is now open. The host of this call was Brian T. Jackett (Microsoft) *| *@BrianTJackett. Q\u0026amp;A takes place in chat throughout the call.\nMicrosoft 365 Platform News Flash\n Changes to the Microsoft 365 advanced eDiscovery create case API (beta) Bringing large groups and communities together in Teams Multi-tenant architecture for SaaS apps  Actions   Register for Microsoft Ignite (Digital event) - November 2-4, 2021- https://ignite.microsoft.com\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; TBS (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; October 5th  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; September 28th  Ask Me Anything (AMA) \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th Ask Me Anything (AMA) \u0026ndash; List Formatting \u0026ndash; October 5th First Time Presenter \u0026ndash; October 12th More than Code with VSCode \u0026ndash; TBS  Maturity Model Practitioners \u0026ndash; October 19th (every 3rd Tuesday of month, 7:00am PT) PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo\n  Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call\n  Call attention to your great work by using the #PnPWeekly on Twitter. Together mode is back and the house is packed! Great seeing everybody. See you again soon. Program:\n  M365 Ecosystem Security \u0026ndash; ISV and Customer Survey \u0026ndash; walk through 2 new surveys targeted to Customer and to Developer/ISV. Objective is to understand from customers their top concerns when adopting and configuring third party applications that meet compliance needs. And from a partner perspective, to understand what Microsoft can do as a platform provider to help you build secure applications and drive customer adoption. Surveys are being sent out this week.   Demos Demos delivered in this session\n  Microsoft Teams Sample code showcase \u0026ndash; 4 Microsoft produced Teams samples - Build tabs with Adaptive Cards (build Teams tabs with Adaptive Cards using Node or C#), Receive all channel messages with RSC (Preview) (bot receives all channel messages with RSC without @mention), Real-time Teams meeting events (bot receives real-time meeting events), and SSO for Tabs + Bots + Messaging Exchange (ME) (combined SSO for Bots, Tabs \u0026amp; ME). Discussion on Resource-specific consent (RSC) for granular consent.\n  Preview on new templates for Microsoft Teams and SharePoint in SharePoint Framework \u0026ndash; resetting design and default experiences by modernizing default SPFx web part templates. UX updates - fully sectioned, color aware, detects if in SharePoint or Teams environment, on page guidance for page creators, theme aware. Changes included in SPFx v1.14 rolling out this Fall. Thoughts on UX? Join the discussions in SP Dev docs. Q\u0026amp;A and bonus - glimpse the Viva Dashboard (web part) in Teams.\n  Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Brian T. Jackett (Microsoft) *| *@BrianTJackett The M365 Ecosystem Security - ISV and Customer Surveys \u0026ndash; Gladys Kenfack (Microsoft) \u0026ndash; 8:53 D1: Microsoft Teams Sample code showcase \u0026ndash; Wajeed Shaikh (Microsoft) \u0026ndash; 16:55 D2: Preview on new templates for Microsoft Teams and SharePoint in SharePoint Framework \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 16:55  Resources Additional resources around the covered topics and links from the slides.\n  Customer Survey - Microsoft 365 \u0026ndash; Security/Privacy/Compliance Customer Survey   Developer survey - Microsoft 365 \u0026ndash; Security/Privacy/Compliance Developer Survey   D1: Samples - Microsoft Teams Samples   D1: Support and Feedback - Microsoft Teams developer community channels   D1: Documentation - Designing Adaptive Cards for your Microsoft Teams app   D1: Documentation - Update your Teams app manifest   D1: Documentation - Receive all channel messages with RSC   D1: Documentation - Resource-specific consent\n  D2: Discussions - SharePoint/sp-dev-docs (github.com)\n  PnP Weekly \u0026ndash; Episode 134 (September 13th) with Boston-based MVP and founder of Sympraxis Consulting - Marc D Anderson | @sympmarc | video | podcast\n  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) |\n@jthake and Paul Schaeflein (Addin365) | pschaeflein\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   SharePoint Framework call \u0026ndash; September 23rd at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Microsoft 365 platform call \u0026ndash; September 28th at 8:00 am PDT | https://aka.ms/m365-dev-call\n  M365 General Dev call \u0026ndash; September 30th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Office add-in monthly call \u0026ndash; October 13th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash;October14th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; October 20th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; October 21st at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar\n  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.  More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 22nd of September 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-21st-of-september-2021/images/recording-21st-sep_hu3c93dac9e7e228af834eec70cabc3f72_549883_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-21st-of-september-2021/","tags":null,"title":"Microsoft 365 Platform Call -- 21st of September, 2021"},{"categories":["Microsoft 365 developer podcast"],"contents":"Orion O\u0026rsquo;Malley joins Jeremy and Paul to talk about the Microsoft 365 App Certification program and it\u0026rsquo;s benefits for organizations and developers.\nListen to the show here: (m365devpodcast.com)\nLinks from the show  https://aka.ms/getCertified  Microsoft News  Updates for Microsoft Teams bots in Multi-Geo environments Announcing a new Microsoft Teams authentication provider and file upload feature in the Microsoft Gr... Viva Connections Public Preview  Community Links  Microsoft Graph Toolkit in a Teams application with yo teams (and SSO) (@Moeller2_0) Bringing external data into Microsoft 365 - custom search result types and verticals (@ChrisO_Brien) Azure SDK / Identity series (@jongallant)  ","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-21st-of-september-2021/images/recording-21st-sep_hu3c93dac9e7e228af834eec70cabc3f72_549883_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-microsoft-365-app-certification/","tags":[],"title":"Microsoft 365 Developer Podcast - Microsoft 365 App Certification with Orion O'Malley"},{"categories":["CLI For Microsoft 365"],"contents":"We utilize Teams during incidents and create channels for each. We would like to be able to export conversation history.\n right now the only option we have is to go through Security \u0026amp; Compliance. Teams usage is growing in every organization and it would soon become unreasonably to only have Administrators be the ones doing exports of channels for all the Teams. This post will show you one of the most popular sample scripts created for the CLI for Microsoft 365. The original script was created by our community member Joseph Velliah.   function Get-Teams { $teams = m365 teams team list -o json | ConvertFrom-Json -AsHashtable return $teams } function Get-Channels { param ( [Parameter(Mandatory = $true)] [string] $teamId ) $channels = m365 teams channel list --teamId $teamId -o json | ConvertFrom-Json -AsHashtable return $channels } function Get-Messages { param ( [Parameter(Mandatory = $true)] [string] $teamId, [Parameter(Mandatory = $true)] [string] $channelId ) $messages = m365 teams message list --teamId $teamId --channelId $channelId -o json | ConvertFrom-Json -AsHashtable return $messages } function Get-MessageReplies { param ( [Parameter(Mandatory = $true)] [string] $teamId, [Parameter(Mandatory = $true)] [string] $channelId, [Parameter(Mandatory = $true)] [string] $messageId ) $messageReplies = m365 teams message reply list --teamId $teamId --channelId $channelId --messageId $messageId -o json | ConvertFrom-Json -AsHashtable return $messageReplies } Try { $teamsCollection = [System.Collections.ArrayList]@() $teams = Get-Teams $progressCountTeam = 1; foreach ($team in $teams) { Write-Progress -Id 0 -Activity \u0026#34;Processing channels in Team : $($team.displayName)\u0026#34; -Status \u0026#34;Team $progressCountTeam of $($teams.length)\u0026#34; -PercentComplete (($progressCountTeam / $teams.length) * 100) $channelsCollection = [System.Collections.ArrayList]@() $channels = Get-Channels $team.id $progressCountChannel = 1; foreach ($channel in $channels) { Write-Progress -Id 1 -ParentId 0 -Activity \u0026#34;Processing messages in channel : $($channel.displayName)\u0026#34; -Status \u0026#34;Channel $progressCountChannel of $($channels.length)\u0026#34; -PercentComplete (($progressCountChannel / $channels.length) * 100) $messages = Get-Messages $team.id $channel.id $messagesCollection = [System.Collections.ArrayList]@() foreach ($message in $messages) { $messageReplies = Get-MessageReplies $team.id $channel.id $message.id $messageDetails = $message [void]$messageDetails.Add(\u0026#34;replies\u0026#34;, $messageReplies) [void]$messagesCollection.Add($messageDetails) } $channelDetails = $channel [void]$channelDetails.Add(\u0026#34;messages\u0026#34;, $messagesCollection) [void]$channelsCollection.Add($channelDetails) $progressCountChannel++ } $teamDetails = $team [void]$teamDetails.Add(\u0026#34;channels\u0026#34;, $channelsCollection) [void]$teamsCollection.Add($teamDetails) $progressCountTeam++ } Write-Progress -Id 0 -Activity \u0026#34; \u0026#34; -Status \u0026#34; \u0026#34; -Completed Write-Progress -Id 1 -Activity \u0026#34; \u0026#34; -Status \u0026#34; \u0026#34; -Completed $output = @{} [void]$output.Add(\u0026#34;teams\u0026#34;, $teamsCollection) $executionDir = $PSScriptRoot $outputFilePath = \u0026#34;$executionDir/$(get-date -f yyyyMMdd-HHmmss).json\u0026#34; # ConvertTo-Json cuts off data when exporting to JSON if it nests too deep. The default value of Depth parameter is 2. Set your -Depth parameter whatever depth you need to preserve your data. $output | ConvertTo-Json -Depth 100 | Out-File $outputFilePath Write-Host \u0026#34;Open $outputFilePath file to review your output\u0026#34; -F Green } Catch { $ErrorMessage = $_.Exception.Message Write-Error $ErrorMessage }  You can find this and many more samples on how to use the CLI for Microsoft 365 in our official samples section. What is the CLI for Microsoft 365? CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use. While building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects. Try it today Get the latest release of the CLI for Microsoft 365 from npm by executing: npm i -g @pnp/cli-microsoft365  If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365. If you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-21st-of-september-2021/images/recording-21st-sep_hu3c93dac9e7e228af834eec70cabc3f72_549883_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/export-conversations-from-microsoft-teams-channels-using-the-cli/","tags":[],"title":"Export conversations from Microsoft Teams Channels using the CLI for Microsoft 365"},{"categories":["Community post"],"contents":"Intro A while back, I wrote about How to use a custom connector in Power Automate showing how easy you can create a connector to a cloud service that is not already in the very long list of connectors in Power Automate. I chose to create a connector for Spotify and connected a Get_Current_Song action with an IOT button and twitter. As a result, information about the song I would be listening to would be tweeted.\nNow I stumbled upon a really great blog post by fellow MVP Loryan Strant who also used this Spotify connector to change the pinned message of your status in Microsoft Teams. To get the most value out of this post, go read Loryans post first- it is written with great clarity and also I love this guys\u0026rsquo; taste of music 🎶! Also please understand his flow first. I love the idea and creativity! The result of such a flow looks like this:\n   While some would debate if this flow is necessary, I feel it shows that custom connectors are a great way to extend Microsoft 365. Also: #MusicWasMyFirstLove - case closed :)\nHowever when reading this blog post, I saw some patterns that I often see in flows and that could be improved - and as I could already learn so much from Loryan, this time I hope to return the favor :)\nLoryan created 13 actions and as I seem to be just more lazy than he is, therefore I thinned out his awesome idea to just 5-6 actions: This is what it looks like:\n   The result is about the same - just that I display also a message if I am currently not listening to music (yes, this happens!)\nParse JSON First thing I wanted get rid of was the Parse JSON action. While it is super powerful and lets you easily access properties of objects that you get as response, it is unnecessary sometimes: We can also write the flow without it if we take a look on how we can select properties and return their values in expressions.\nTo be successful with that, it is crucial to understand the JSON schema of the response we are interested in. Easiest way to achieve that:\na) copy the body of the output of that action, paste it into a code editor - I work with Visual Studio Code\n   b) we make sure that we select JSON as language - VS Code will then color everything nicely for us and highlight beginning and ends of objects for example\nc) we have a look at the code. For the sake of better readability - this schema is about 450 lines long, I already collapsed two arrays called available markets - it\u0026rsquo;s a long list of country codes in which a particular song is available. We don\u0026rsquo;t need it here. If you aim to rebuild this, its highly recommended to copy the code from YOUR output, not from this blog post, as I shortened the code.\n{ \u0026#34;timestamp\u0026#34;: 1631969547352, \u0026#34;progress_ms\u0026#34;: 85903, \u0026#34;item\u0026#34;: { \u0026#34;album\u0026#34;: { \u0026#34;album_type\u0026#34;: \u0026#34;album\u0026#34;, \u0026#34;artists\u0026#34;: [ { \u0026#34;external_urls\u0026#34;: { \u0026#34;spotify\u0026#34;: \u0026#34;https://open.spotify.com/artist/3CQIn7N5CuRDP8wEI7FiDA\u0026#34; }, \u0026#34;href\u0026#34;: \u0026#34;https://api.spotify.com/v1/artists/3CQIn7N5CuRDP8wEI7FiDA\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;3CQIn7N5CuRDP8wEI7FiDA\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Run–D.M.C.\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;artist\u0026#34;, \u0026#34;uri\u0026#34;: \u0026#34;spotify🧑‍🎨3CQIn7N5CuRDP8wEI7FiDA\u0026#34; } ], \u0026#34;available_markets\u0026#34;: [ ], \u0026#34;external_urls\u0026#34;: { \u0026#34;spotify\u0026#34;: \u0026#34;https://open.spotify.com/album/7AFsTiojVaB2I58oZ1tMRg\u0026#34; }, \u0026#34;href\u0026#34;: \u0026#34;https://api.spotify.com/v1/albums/7AFsTiojVaB2I58oZ1tMRg\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7AFsTiojVaB2I58oZ1tMRg\u0026#34;, \u0026#34;images\u0026#34;: [ { \u0026#34;height\u0026#34;: 640, \u0026#34;url\u0026#34;: \u0026#34;https://i.scdn.co/image/ab67616d0000b273894ae4df775c6b47438991af\u0026#34;, \u0026#34;width\u0026#34;: 640 }, { \u0026#34;height\u0026#34;: 300, \u0026#34;url\u0026#34;: \u0026#34;https://i.scdn.co/image/ab67616d00001e02894ae4df775c6b47438991af\u0026#34;, \u0026#34;width\u0026#34;: 300 }, { \u0026#34;height\u0026#34;: 64, \u0026#34;url\u0026#34;: \u0026#34;https://i.scdn.co/image/ab67616d00004851894ae4df775c6b47438991af\u0026#34;, \u0026#34;width\u0026#34;: 64 } ], \u0026#34;name\u0026#34;: \u0026#34;Raising Hell\u0026#34;, \u0026#34;release_date\u0026#34;: \u0026#34;1986-05-15\u0026#34;, \u0026#34;release_date_precision\u0026#34;: \u0026#34;day\u0026#34;, \u0026#34;total_tracks\u0026#34;: 12, \u0026#34;type\u0026#34;: \u0026#34;album\u0026#34;, \u0026#34;uri\u0026#34;: \u0026#34;spotify:album:7AFsTiojVaB2I58oZ1tMRg\u0026#34; }, \u0026#34;artists\u0026#34;: [ { \u0026#34;external_urls\u0026#34;: { \u0026#34;spotify\u0026#34;: \u0026#34;https://open.spotify.com/artist/3CQIn7N5CuRDP8wEI7FiDA\u0026#34; }, \u0026#34;href\u0026#34;: \u0026#34;https://api.spotify.com/v1/artists/3CQIn7N5CuRDP8wEI7FiDA\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;3CQIn7N5CuRDP8wEI7FiDA\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Run–D.M.C.\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;artist\u0026#34;, \u0026#34;uri\u0026#34;: \u0026#34;spotify🧑‍🎨3CQIn7N5CuRDP8wEI7FiDA\u0026#34; }, { \u0026#34;external_urls\u0026#34;: { \u0026#34;spotify\u0026#34;: \u0026#34;https://open.spotify.com/artist/7Ey4PD4MYsKc5I2dolUwbH\u0026#34; }, \u0026#34;href\u0026#34;: \u0026#34;https://api.spotify.com/v1/artists/7Ey4PD4MYsKc5I2dolUwbH\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7Ey4PD4MYsKc5I2dolUwbH\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Aerosmith\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;artist\u0026#34;, \u0026#34;uri\u0026#34;: \u0026#34;spotify🧑‍🎨7Ey4PD4MYsKc5I2dolUwbH\u0026#34; } ], \u0026#34;available_markets\u0026#34;: [ ], \u0026#34;disc_number\u0026#34;: 1, \u0026#34;duration_ms\u0026#34;: 310386, \u0026#34;explicit\u0026#34;: false, \u0026#34;external_ids\u0026#34;: { \u0026#34;isrc\u0026#34;: \u0026#34;USAR19900334\u0026#34; }, \u0026#34;external_urls\u0026#34;: { \u0026#34;spotify\u0026#34;: \u0026#34;https://open.spotify.com/track/6qUEOWqOzu1rLPUPQ1ECpx\u0026#34; }, \u0026#34;href\u0026#34;: \u0026#34;https://api.spotify.com/v1/tracks/6qUEOWqOzu1rLPUPQ1ECpx\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;6qUEOWqOzu1rLPUPQ1ECpx\u0026#34;, \u0026#34;is_local\u0026#34;: false, \u0026#34;name\u0026#34;: \u0026#34;Walk This Way (feat. Aerosmith)\u0026#34;, \u0026#34;popularity\u0026#34;: 69, \u0026#34;preview_url\u0026#34;: \u0026#34;https://p.scdn.co/mp3-preview/c7a8010bbddcd0d793a832de76a24d2cae5ab497?cid=2e75e650d1e74b6a994734ed4aea2ef7\u0026#34;, \u0026#34;track_number\u0026#34;: 4, \u0026#34;type\u0026#34;: \u0026#34;track\u0026#34;, \u0026#34;uri\u0026#34;: \u0026#34;spotify:track:6qUEOWqOzu1rLPUPQ1ECpx\u0026#34; }, \u0026#34;currently_playing_type\u0026#34;: \u0026#34;track\u0026#34;, \u0026#34;actions\u0026#34;: { \u0026#34;disallows\u0026#34;: { \u0026#34;resuming\u0026#34;: true, \u0026#34;toggling_repeat_context\u0026#34;: true, \u0026#34;toggling_repeat_track\u0026#34;: true, \u0026#34;toggling_shuffle\u0026#34;: true } }, \u0026#34;is_playing\u0026#34;: true } d) look for the properties you are interested in - for example we want to if a song is playing right now - we will find the is_playing property, which will either return true or false, which makes it perfect to put this into our condition:\n   The expression is outputs('Get_Current_Song')['body']['is_playing'].\nWhy is that? Let\u0026rsquo;s deconstruct this: From the output of the Get_Current_Song, we are interested in the ['body'] and inside of this we want the value of the ['is_playing'] property\nNow if we are also interested in the name of the song, we would do a quick search in that file for name and get four results:\n in line 14: this name property sits in the artists array, that consists of an album object and the name property here refers to the name of the artist of album, not to the name of the song that we are interested in. in line 221: this name property also sits in the album object and refers to the name of the album. line 235: this name property sits in the artists object and refers again to the name of the artist. finally, in line 432, we find the name property we were looking for; it sits in the item property.  Therefore, we will access the song name with:\noutputs('Get_Current_Song')['body']?['item']?['name]\nIf we now also want to have the name of the artist, we get this with:\noutputs('Get_Current_Song')['body']?['item']?['album]?['artists][0]?['name']\nWait, what? These are a lot of properties, so let\u0026rsquo;s slow down for a bit to take a closer look:\n we get the Get_Current_Song action with outputs('Get_Current_Song') now we go ahead and with the ? operator and select the first level property we are interested in: item next up is taking a look inside of the item property: what do we want to get here? It\u0026rsquo;s the album property. We do this as before with ? and the name of the property in []: ?['album'] Inside of the album property we want to get the artists property and yet again we do this with ? and the name of the property in []: ?['artists'] Now remember that artists was an array? You can see this by the brackets [] in the code. We want to return the first element of this array, therefore we put a [0]. It\u0026rsquo;s a zero, because arrays in JSON are zero-based, which means that the first element of an array has the index 0, the second one has index 1, and so on. Now that we returned that first element in the artists array (it\u0026rsquo;s only one, but Power Automate will yell at you if you don\u0026rsquo;t select just one element and instead return the entire array), we will go ahead and finally select the name property from it, which refers to the artist.  You see, it\u0026rsquo;s all about understanding the underlying JSON schema and see, which properties are part of which objects. If you use the Parse JSON action, you don\u0026rsquo;t need to write these expressions, but you face some disadvantages:\n you can now select from four name properties in your dynamic content - and need to select blindly You have no clue WHY you get four of those as you don\u0026rsquo;t understand the data structure Parse JSON is yet another action which blows up your flow  unnecessary Apply-to-each loops You know that moment when you are creating a flow and and out of a sudden Power Automates automatically adds an Apply-to-each for you and you wonder why this happened? Also, you will face some issues later on? Wherever possible it\u0026rsquo;s a good idea to avoid loops that are not necessary.\nThe fact that we didn\u0026rsquo;t just parse the JSON output from our Get_Current_Song action but understood the JSON schema gives us an option to avoid a loop - we did not return an array of (one) artist, that triggered Power Automate to insert an apply-to-each loop, but we only returned the first element of the artist array - this way we don\u0026rsquo;t need to loop over this one-element-array, which means that we got rid of another action!\nvariables and expressions Power Automate knows some nice actions for variables - the most important one is initialize variable - in Power Automate all variables need to be initialized (with or without value) before we can use them.\nNow as we already skipped successfully the Parse JSON action and could also access artist name and song name without the use of variables but in expressions, I want to minimize the other initialize variables and compose actions from Loryans flow:\nInstead of several actions and calculations to \u0026ndash; get the timestamp when the song started \u0026ndash; get the current time \u0026ndash; add the duration of the currently playing song to the current time, we could have one variable called duration with this expression:\naddSeconds(utcnow(),div(sub(outputs('Get_Current_Song')?['body']?['item']?['duration_ms'],outputs('Get_Current_Song')?['body']?['progress_ms']),1000))\nExplanation:\n This adds seconds to utcnow(), which is the current time. How many seconds? The return value from the subtraction of the duration in milliseconds ['duration_ms'] minus the ['progress_ms'] current progress in milliseconds With the div function this value is divided by 1000 as we want seconds instead of milliseconds.  understand the API you are working with The Get_Current_Song returns the LAST song that was played - and the is_playing property returns if the song is currently (still) playing or not. This means, that we need to distinguish between a song that played before I needed to turn off the music and a currently playing song. You might say, well, this doesn\u0026rsquo;t really matter - but if we take a closer look to understand, which data is returned when, we would need to redesign our flow: The fact that we get an output of the Get_Current_Song even if the is_playing property is false, means that we don\u0026rsquo;t get a null when our subsequent actions expect an object, a string, an array or anything else that is NOT null. Yet again, understanding what happens behind the scenes because we understand the output of an action will make it easier to create flows.\n","image":"https://pnp.github.io/blog/post/4-ways-to-level-up-your-power-automate-flows/images/Teams-status_hu8fd3ab03a6c6f2c0ddc1db62eed777be_50352_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/4-ways-to-level-up-your-power-automate-flows/","tags":[],"title":"4 ways to level up your Power Automate flows"},{"categories":["Power Apps community call"],"contents":"Call summary Topics covered in this month\u0026rsquo;s community call include demos in Visio, Power BI Tiles, and Reports in Power Apps! (Combining capabilities in Visio, Power BI tiles/Reports and in Power Apps to deliver inventory management and desk reservation solutions), Power Apps Design Philosophy (an aligned value-based approach/process to building Apps), along with Recent Power Apps News and Community Contributions, and more! This session included Q\u0026amp;A in chat. The call was hosted by Todd Baginski (Canviz). Demo presenters are Reza Dorrani, May Alhajri and Charles Sterling. This call was recorded on September 15, 2021. Thank for attending the call or viewing it on demand. Agenda  Visio, Power BI Tiles, and Reports in Power Apps! - Reza Dorrani (Catapult) | rdorrani \u0026ndash; 4:13 Power Apps Design Philosophy - May Alhajri | @MayAlhajri2 \u0026ndash; 34:04 Recent Power Apps News and Community Contributions \u0026ndash; Charles Sterling (Microsoft) | @chass \u0026ndash; 50:53   Demos   D1: Visio, Power BI Tiles, and Reports in Power Apps! \u0026ndash; how to combine capabilities in Visio, Power BI tiles/Reports and in Power Apps to deliver inventory management and desk reservation solutions. Apps are sharing information and contextually aware of each other = fully interactive Power Apps and Visio diagrams inside Power BI reports and Power BI tiles or full Power BI Reports with Visio diagrams and filters inside of Power Apps using an embed URL.   D2: Power Apps Design Philosophy \u0026ndash; an approach/process to building Apps. Planning (before building) the \u0026ldquo;Canvas\u0026rdquo; \u0026ndash; customer profile, value map and fit. Start with a customer profile - what customer wants to achieve, what they are doing today, their pains, their potential gains. Then create a value map (products and services, pain relievers and gain creators) and finally align or fit the two to excite customers about your value proposition.    Recent News \u0026amp; Cool Stuff  Ask Me Anything (AMA) Event Sept 28th for Power Platform samples | [https://aka.ms/PNPAMA]{.underline} New Data Loss Prevention policies for enhanced Power Platform governance available for Public Preview. (Enhancements include: Connector Action Control, Endpoint Filtering and Custom Connector Parity) | https://aka.ms/DLPEnhancements Writing Power Fx formulas with natural language | https://aka.ms/PowerFXFormulas  ** **\nActions  Attend the BizApps LATAM Summit - Nov 17-19^th^ | https://aka.ms/BizappsLATAMSummit Vancouver User Group with May and Canvas Controls - September 23^rd^, 6pm PST | Join call at https://aka.ms/vancouverPUG Register Power BI Summit 2022 - March 07-March 11, https://globalpowerbisummit.com/ Join us for our next call: October 20, 2021 at 08:00am PDT | https://aka.ms/powerappscommunitycall   Referenced in this session   D1: Videos \u0026ndash; Power Platform Integration - | https://bit.ly/powerintegration\n  D1: Sample - Opportunity Analysis sample for Power BI: Take a tour   D1: Documentation \u0026ndash; Filter a report using query string parameters in the URL   D2: Video \u0026ndash; Strategyzer\u0026rsquo;s Value Proposition Canvas Explained   D2: Template \u0026ndash; Value Proposition Canvas \u0026ndash; Strategyzer   D2: Linktree - May Alhajri \u0026ndash; https://linktr.ee/Agent008\n   Learn more  See the full blog post for this call on the Tech Community Blog - https://aka.ms/m365pnp/community/blog Microsoft\u0026rsquo;s Power Platform website Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - https://aka.ms/PowerAppsCommunitySamples Power Apps Community Videos -https://aka.ms/PowerAppsCommunityVideos PowerPlatformLearn Resources | https://www.powerplatformlearn.academy PnP Power Platform Samples | https://www.aks.ms/powerplatform-samples Power Addicts Hangout - https://wearepoweraddicts.com #LessCodeMorePower Video Series - https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Share more - draw attention to your great work - #PowerAppsCC  ** **\n**Stay connected: **\n Twitter: https://twitter.com/MSPowerPlat Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/m365pnp/videos​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/powerappscommunitycall  ","image":"https://pnp.github.io/blog/post/microsoft-power-apps-community-call-september-2021/images/powerapps-recording_hu233a93ecf5d60d2e32351109293313a4_32242_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/microsoft-power-apps-community-call-september-2021/","tags":["Power Apps"],"title":"Microsoft Power Apps Community Call -- September 2021"},{"categories":["Office add-in developer community call"],"contents":"  Call summary This month\u0026rsquo;s community call features presentations - Word API updates (preview of Footnote and Comment APIs for citation management and content insertion), Excel API updats (preview Excel v1.14 API - Worksheet Protection Changed event), Mocking Office.js for unit tests (you are invited to provide feedback around mocking and unit testing with Office.js APIs.) and Community call feedback (live/chat discussion on the merits of this monthly community call). This month\u0026rsquo;s Community spotlight recognizes MVP Maarten van Stam for his continued contributions. Thank you again! Q\u0026amp;A in chat throughout call. The call was hosted by David Chesnut (Microsoft) | @davidchesnut.\nMicrosoft Presenters:\n Ruoying Liang - Senior Program Manager Raymond Lu - Senior Program Manager Igor Ribeiro - Software Engineer David Chesnut - Senior Dev Writer  Agenda  Word API updates - Ruoying Liang, Senior Program Manager (Microsoft) \u0026ndash; 1:06 Excel API updates - Raymond Lu, Senior Program Manager (Microsoft) \u0026ndash; 9:59 Mocking Office.js for unit tests - Igor Ribeiro, Software Engineer (Microsoft) \u0026ndash; 16:53 Community call feedback - David Chesnut, Senior Dev Writer (Microsoft) \u0026ndash; 23:18 Community spotlight - Maarten van Stam \u0026ndash; 46:15 Q\u0026amp;A \u0026ndash; 47:02  Actions  Provide input on Mocking Office.js for unit tests blog. Standard way to unit test and mock office-js API Follow channels in Twitter \u0026ndash; for call agendas and summaries, release announcements:  https://twitter.com/microsoft365dev https://twitter.com/m365pnp   Become a community contributor and get a badge in the PnP recognition program  Demo summaries  Preview on latest Microsoft Word API updates: Footnote and Comment APIs. The Footnote API enables users to insert searchable citations with reference marks into documents. Similar to how you add comments to a cell in Excel, the new Comments API allows users to add comments to a specified range, paragraph, table in Word. You can reply to, resolve, view and delete comments. Supports URL and rich text. Beta rollout presently, available on Word on the web (on-line) only. Microsoft Excel v1.14 preview API: Worksheet Protection Changed event. After a quick review of APIs releasing in Excel v1.14, we looked at the WorksheetProtectionChangedEvent APIs. Previously protected worksheets threw an error when access was attempted. Now add-in status can be controlled in event logic with a new event handler. The edit button will be grayed out when the worksheet is protected and fully visible, and enabled when the worksheet is unprotected.  Q\u0026amp;A (Question \u0026amp; Answers) Is there a way to \u0026ldquo;auto push\u0026rdquo; manifest updates? Updates for add-ins happen as follows.\nLine-of-business add-in: When an admin explicitly uploads a manifest, the add-in requires that the admin upload a new manifest file to support metadata changes. The next time the relevant Office applications start, the add-in will update. The web application can change at any time. Office Store add-in: When an admin previously selected an add-in from the Office Store, if there is an update available, the next time the relevant Office applications start, the add-in will update. The web application can change at any time. For more information, see Test and deploy Microsoft 365 Apps by partners in the Integrated apps portal. Will the new Word APIs be available for all platforms? These Word API updates will be available in Preview for Word on the web later this month (September 2021). Eventually, they will be available on all platforms. We do not have a specific timeframe to offer. Is the bookmarks API for Word being promoted out of preview? Yes, the bookmarks API will be in GA soon. Are you going to cover inserting new content types for Word? We are considering Equation, and some level of support for Fields. We cannot control the size of icons used in the ribbon in Office Online. It uses the larger icon, when we want to force use of the smaller icon. We currently ask for different sizes for your icons since Office will choose the size based on a variety of factors. The size can vary based on the number of add-ins on the ribbon, screen resolution, whether the user is using the single line ribbon or not, and more. We have some ideas for enabling more control over icon size, but right now this is not on our backlog. I am interested in the best practices for loading a Word document from a base64 encoded string. We have a repository of documents and the content is exposed via a RESTful endpoint. I am currently using getSelection and insertFileFromBase64. Probably the best thing to be aware of is that you can use this method on a variety of objects. For example, you can use Word.Body.InsertFileFromBase64, and Word.Paragraph.InsertFileFromBase64. To see all the objects with this method, type \u0026ldquo;InsertFileFromBase64\u0026rdquo; into the search box in the reference section for the Word API.\nIf you\u0026rsquo;re looking for more specific guidance, please provide more information on ask on the Microsoft 365 Q\u0026amp;A site, or at https://stackoverflow.com using the [office-js] tag. When will we be able to use SPFX to create Office Addins? A couple of years ago, we released a preview for creating Outlook add-ins using the SharePoint Framework. While the feedback on it was positive, it was overshadowed by other feedback on the limitations. As a result, we decided to pause that preview and focus on delivering new scenarios such as online meetings integration, signature support and other event-based add-in scenarios. Unfortunately, we don\u0026rsquo;t have a plan at this time for when or if we will resume work on the preview.\nWhen running a Word add-in within a Word Form document (i.e. has form controls and document protection), when can we expect support for other types of content controls such as Date, Plain Text, Checkbox, etc.? Other types of content controls are in our backlog. We don\u0026rsquo;t have an ETA we can share for when these will be available.\nUsing SSO from a Word add-in in Teams desktop works if the Word file opens from the \u0026ldquo;Files\u0026rdquo; position. However, if the same file is opened via \u0026ldquo;Assignments\u0026rdquo;, SSO stops working. Additionally in \u0026ldquo;Assignment\u0026rdquo;, the dialogue opens a browser from outside Teams desktop (and then there is no communication between the browser and the add-in). How do we get SSO to work in this situation? Currently, SSO is not supported when Teams is the host. You\u0026rsquo;ll need to catch the error when calling getAccessToken(), which should be a 13012 error, and use a fallback dialog to sign in the user. To see how to set up the fallback dialog, see Create a Node.js Office Add-in that uses single sign-on - Office Add-ins | Microsoft Docs which also uses the Office Add-in Node.js code sample.\nYou shouldn\u0026rsquo;t be running into issues opening a fallback dialog. If you\u0026rsquo;re still having issues with the browser opening in a separate window, can you provide more information at https://github.com/OfficeDev/office-js/issues? We can follow up and see if we can resolve the issue.\nBack in the Office add-ins Community call (March 09, 2021), you revealed that admin-deployed add-ins would be automatically pinned to the ribbon in Outlook on the web starting April 21, 2021. We have many customers who already had deployed our add-in before that date, but would now like to have it auto-pinned. However, in our internal testing and testing done by our customers, re-deployed (remove + add) add-ins are not automatically pinned in Outlook on the web. In addition to lack of auto-pinning, we are naturally not seeing the \u0026ldquo;nudge\u0026rdquo; notification. Are we doing something wrong? Our add-in is private and not available via AppSource. Tenants are pure Microsoft 365. Thanks for letting us know about this. It looks like it is probably a product bug. Please help us out and provide information on how to reproduce this bug at https://github.com/OfficeDev/office-js/issues. That\u0026rsquo;s where we track any product bugs and we can look into it in more detail.\n","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-september-8-2021/images/officeadd-ins_hu08565f1dc77a1d389c1eab2946c8ecd0_31032_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-september-8-2021/","tags":[],"title":"Office Add-ins community call -- September 8, 2021"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call Summary Have a look at Microsoft 365 tenant \u0026ndash; script samples gallery (84 scenarios and 111 scripts)*. * Sign up and attend an event hosted by Sharing is Caring. Have you signed up for the PnP Recognition Program? Do it. Project releases this week include Yo teams - generator-teams v3.3.0 Preview2, \u0026ndash; yoteams-build-core v1.2.1 GA + v1.3.0 Preview and - yoteams-deploy v1.0.1 GA, and also Microsoft Graph Toolkit (MGT) v2.3.0 GA. All key features in this release of MGT were contributed by the community! Open-source project status: (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.6.0 GA, PnP Provisioning Engine Schema v202103 Prepping for Version 1.7.0 release PnP .NET Libraries - PnP Core SDK v1.3.0 GA Prepping for Version 1.4.0 release PnP PowerShell v1.7.0 GA 52nd nightly release* Yo teams - generator-teams v3.2.0 GA, v3.3.0 Preview2 Yo teams - yoteams-build-core v1.2.1 GA, v1.3.0 Preview Yo teams \u0026ndash; yoteams-deploy v1.0.1 GA Yo teams - msteams-react-base-component v3.1.0 Microsoft Graph Toolkit (MGT) v2.3.0 GA  *** Note: While version releases are periodic, nightly releases are nightly! Subscribe to nightly releases for the latest capabilities. **\nThere were 3 new script samples this week. The host of this call was David Warner II (Catapult Systems) @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\nActions   Create a Teams Sample - Microsoft Teams Samples Wish list \u0026ndash; 10 opportunities to share your Teams Dev prowess with the community | [https://aka.ms/teams-sample-wishlist]{.underline}\n  Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; September 21st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; October 5th  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; September 28th  Ask Me anything (AMA) \u0026ndash; Recognition Program \u0026ndash; September 7th Ask Me anything (AMA) \u0026ndash; Script Samples \u0026ndash; September 14th Ask Me Anything (AMA) \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th Ask Me Anything (AMA) \u0026ndash; List Formatting \u0026ndash; October 5th First Time Presenter \u0026ndash; October 12th More than Code with VSCode \u0026ndash; September 14th  Maturity Model Practitioners \u0026ndash; September 21st and every 3rd Tuesday of month, 7:00am PT PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Teams Tab with SSO and Microsoft Graph Toolkit usage - Markus Möller (Avanade) | @Moeller2_0\n  **Teams Tab Single Sign-on (SSO) Sample **(updated) **- **Doğan Erişen (Microsoft) **Microsoft Power Platform Samples: **(https://aka.ms/powerplatform-samples)\n  No new Power Platform samples this week **Script Samples: ** (https://aka.ms/script-samples)\n  Provision Home Page to a SharePoint site - Reshmee Auckloo | @reshmeeauckloo\n  Extract Modern Pages to Individual Provisioning Files - Paul Bullock (CaPa Creative Ltd) | @pkbullock\n  Generate Demo Events for SharePoint Events List - Paul Bullock (CaPa Creative Ltd) | @pkbullock\n  Together Mode!  Picture time is back and it\u0026rsquo;s a packed House! Thank you for joining the PnP Community call today. You\u0026rsquo;re awesome! Demos Demos delivered in this session\n  List Formatting Magic Tips \u0026amp; Tricks​ \u0026ndash; create a list, add and format a location column. Add a location with link to a map and then add multiple sub properties (street, state, country) under the Location\u0026rsquo;s name. Add a weather column and formatting to display an image and details for weather. When list items are updated, then weather entries will be updated. Implement this today \u0026ndash; get the address and weather samples.\n  Build your first conversational chatbot for Teams \u0026ndash; create a new bot in Composer (use Core Bot with Language template), set up Language Understanding in Azure, install the Teams package into the new project (in Composer), add triggers to operate in Teams and to receive and respond to orders. Conduct your Pizza business via an Adaptive Card and task modules. Build task modules using Bot Framework Composer without writing (almost) any code!   Updates on the Independent Publishing Connectors for Power Platform \u0026ndash; beginning with a report on number of connectors delivered to date and in the pipeline followed by an experiential show-and-tell of the Yelp connector. Yelp connector services \u0026ndash; get business details, get reviews, search business phones and search businesses, allows users to search for business by location, phone, and product and more from millions of businesses across 32 countries.   Thank you for your work. Samples are often showcased in Demos. Request a Demo spot on the call \u0026ndash; https://aka.ms/m365pnp/request/demo\nTopics Topics covered in this call\n PnP .NET library updates - Bert Jansen (Microsoft) @O365bert - 6:32 PnP PowerShell - Erwin van Hunen (Valo Intranet) | @erwinvanhunen - 8:20 yo Teams updates - Wictor Wilén (Microsoft) | @wictor - 9:57 Microsoft Graph Toolkit updates - Elise Yang (Microsoft) | @elisenyang Microsoft Teams Samples - David Warner II (Catapult Systems) | @DavidWarnerII - 14:00 Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam - 14:28 D1: List formatting magic tips and tricks \u0026ndash; Chris Kent (DMI) | @theChrisKent - 16:06 D2: Getting started with Bot Framework Composer for building Teams Task Modules \u0026ndash; Stephan Bisser (Solvion) | @stephanbisser - 29:27 D3: Updates on Independent Publisher Connectors for Power Platform \u0026amp; Yelp Connector Demo \u0026ndash; Natalie Pienkowska (Microsoft) | @NataliePienkow1 \u0026amp; Ahmad Najjar (Infoworker) | @ahmadn82 - 43:33   Resources Additional resources around the covered topics and links from the slides.\n  D1: Sample - Display Location Address Details   D1: Sample - Display Location Weather Details   [D2: Documentation - ]Bot Framework Composer documentation\n  [D2: Article - ]Bot Framework Composer Series - 3 - Teams Task Modules\n  [D2: Repo - ]microsoft/BotFramework-Composer\n  [D3: Website \u0026ndash; ]Yelp\n  [D3: Website \u0026ndash; ]Yelp Developers\n  [D3: Website \u0026ndash; ]Yelp Fusion API\n  [[D3: Documentation - ]Yelp (Independent Publisher) (Preview)]\n  D3: Repo - PowerPlatformConnectors/independent-publisher-connectors/Yelp/\n  D3: Connectors - Microsoft Power Platform Connectors   D3: Demo - Publish a connector to the Power Platform \u0026ndash; Natalie Pienkowska (Microsoft) | @NataliePienkow1\n  General resources  Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Microsoft 365 platform call \u0026ndash; September 21st at 8:00 am PDT | https://aka.ms/m365-dev-call\n  SharePoint Framework call \u0026ndash; September 23rd at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  M365 General Dev call \u0026ndash; September 30th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Office add-in monthly call \u0026ndash; October 13th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash; October14th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; October 20th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform call \u0026ndash; October 21st at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;\n   Microsoft 365 PnP team, Microsoft - 17th of September 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-16th-of/images/call-16th-sep-recording_hu8bf2cb79dc31dea054df221d4cbf7cbd_251424_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-16th-of/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 16th of September, 2021"},{"categories":["Microsoft 365 platform call"],"contents":" Microsoft 365 Platform Community Call - weekly community call recording from September 14th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. Call Summary\nWelcome to the weekly call focused on capabilities of the Microsoft 365 platform. New to Microsoft 365 Platform development? You are encouraged to register at Microsoft 365 Developer Program for free E5 developer tenant and other assets. Visit the new Microsoft 365 sample gallery with more than 500 samples from Microsoft and community. Access the latest free training modules to accelerate learning Microsoft 365 platform capabilities. Sign up and attend one of a growing list of events hosted by Sharing is Caring in September. Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call.\nMicrosoft 365 Platform News Flash\n  Viva Connections Public Preview\n  Beyond sharing your screen: Interactive collaboration with apps in Microsoft Teams meetings\n  Announcing the new Microsoft Teams authentication provider and file upload feature in the Microsoft ...\n  Breaking changes to the me/assignments endpoint in the Microsoft Graph Assignments API (beta)\n  Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; September 21st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; October 5th  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; September 28th  Ask Me Anything (AMA) \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th Ask Me Anything (AMA) \u0026ndash; List Formatting \u0026ndash; October 5th First Time Presenter \u0026ndash; October 12th More than Code with VSCode \u0026ndash; TBS  Maturity Model Practitioners \u0026ndash; September 21st and every 3rd Tuesday of month, 7:00am PT PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call\n  Call attention to your great work by using the #PnPWeekly on Twitter. Thank you for your continued contributions of your time and talent to the betterment of this community. Stay well. See you soon.   Demos Demos delivered in this session\n  Introduction to new modernized SharePoint Store \u0026ndash; with the mid-August GA release, My Apps and SharePoint Store pages have been modernized along with the experience for requesting \u0026amp; installing SPFx apps. User and the administrator (tenant wide) experiences in both classic and modern UIs are shown. New capabilities - automatic sign on, automatic hosting, consistent dev experience and industry standard tooling. Nice wrap up with FY22 Roadmap.   Microsoft Graph JavaScript SDK updates \u0026ndash; step through breaking changes, enhancements and deprecated capabilities listed in the Microsoft Graph JavaScript SDK v3.0 Upgrade Guide. V3.0 went GA in mid-August. Please report any issues updating to v3.0 from prior SDK versions. The dev team is focusing on better alignment with SPFx and Microsoft Graph Toolkit this Fall. The Microsoft Graph JavaScript client library is a lightweight wrapper around the Microsoft Graph API.\n  Latest on SharePoint Site Scripts \u0026ndash; Intro and Roadmap \u0026ndash; changes: Site Designs are now Site Templates \u0026ndash; a packaging of site scripts. Site templates are applied via site settings or via PowerShell. Site Templates are available on Teams Channel Sites now as well with several restrictions. In the update, there were some regressions that are now being addressed. Exciting capabilities in the works - feature Roadmap reviewed and input is requested.\n  Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  Latest updates and news on the Microsoft 365 platform \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 8:47\n  D1: Introduction to new modernized SharePoint Store \u0026ndash; Yi Han (Microsoft) \u0026ndash; 12:12\n  D2: Microsoft Graph JavaScript SDK Updates. \u0026ndash; Roina Ochieng (Microsoft) | @roinochieng \u0026ndash; 24:43\n  D3: Latest on SharePoint Site Scripts \u0026ndash; Intro and Roadmap \u0026ndash; Cathy Dew (Microsoft) | @catpaint1 \u0026ndash; 31:40\n  Resources Additional resources around the covered topics and links from the slides.\n  D2: Repo/Library - Microsoft Graph JavaScript Client Library   D2: Guide - Microsoft Graph JavaScript SDK V3.0 Upgrade Guide   D2: Blog post - Microsoft Graph JavaScript SDK 3.0.0 is now generally available   D3: Issues \u0026ndash; sp-dev-docs   D3: Feedback - Site Script Feedback   PnP Weekly \u0026ndash; Episode 134 (September 13th) with Boston-based MVP and founder of Sympraxis Consulting - Marc D Anderson | @sympmarc | video | podcast\n  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) |\n@jthake and Paul Schaeflein (Addin365) | pschaeflein\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Power Apps monthly call\u0026ndash; September 15th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call \u0026ndash; September 16th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Identity Platform call \u0026ndash; September 16th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar  Microsoft 365 platform call \u0026ndash; September 21st at 8:00 am PDT | https://aka.ms/m365-dev-call\n SharePoint Framework call \u0026ndash; September 23rd at 7:00 am PDT | https://aka.ms/spdev-spfx-call Office add-in monthly call \u0026ndash; October 13th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash;October 14th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall  Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.  More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 15th of September 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-14th-of-september-2021/images/recording-14th-september-m365platform-call_hu3c93dac9e7e228af834eec70cabc3f72_539972_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-14th-of-september-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 14th of September, 2021"},{"categories":["Community post"],"contents":"For any SharePoint modern page that you create manually, there will always be a page title that you cannot remove using the SharePoint UI at the moment.\n   The logic behind those options is that on the background they change a hidden field in the Page, which is the PageLayoutType field. This field is not exposed through the UI but is accessible and editable through the SharePoint REST API. If the data is accessible and editable through the SharePoint REST API, we can manipulate it using a Power Automate flow. The idea behind the flow To be able to remove the page title using a flow as mentioned above, the main idea is to build a flow that simply switches the page layout by updating the PageLayoutType field. If it is a normal page (Article), this flow will switch it to a page with the home page layout (no title), and vice versa (in case there is a need to show the title again). So we want to make this flow available from the library UI, and for this to happen we need to use the SharePoint flow Trigger: For a Selected File. Select the site you want to use this functionality. And add the library too.   Note that the Pages Library is not listed on the options for the triggers, however, you can add the list manually by adding its id (GUID), which can be found on the library settings page URL: ![list id.PNG](images/list id.png)\nAccessing Page Data For the next steps, we need to use data returned by the flow trigger to be able to get the current page layout and list item Id from the current page. First, manipulate the page relative URL+ site id from data returned by the Flow\u0026rsquo;s trigger. Initialise one variable called PageUrl and set it to the property \u0026lsquo;itemUrl\u0026rsquo;, gathered from the flow\u0026rsquo;s trigger:\n   Then initialise two variables using the following expressions as value (their values are simply set by manipulating the page full URL by splitting it and getting the right piece of the string):\nSiteURL: split(variables(\u0026lsquo;PageUrl\u0026rsquo;),\u0026lsquo;SitePages\u0026rsquo;)[0] PagePath: split(variables(\u0026lsquo;PageUrl\u0026rsquo;),\u0026lsquo;sharepoint.com\u0026rsquo;)[1]\n   Then you can make a call using REST API to the **GetFileByServerRelativeUrl **endpoint to retrieve the list item fields for the current page (explicitly selecting the PageLayoutType field, otherwise, it wouldn\u0026rsquo;t be returned):\n![send an http get data.PNG](images/send an http get data.png)\nUse the Parse JSON action with the schema below to facilitate accessing the properties: { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Title\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;PageLayoutType\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;ID\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;integer\u0026#34; } } }  And initialise a new variable called PageLayout, having the **PageLayoutType **parsed from the JSON content as value:\n![parse json.PNG](images/parse json.png)\nUpdating the Page Layout Based on the current page layout value, you can update the variable value to the other desired (if it is Home, you should update it to Article, if it is **Article **you should update it to Home.\n![switch value.PNG](images/switch value.png) And then send a **PATCH **HTTP request to SharePoint to update the current page field:\n   Results When you execute the flow, it will switch the page layout as below. If you execute it again, it will switch back to the previous layout (from Article to Home or from Home to Article):\n Reusing the flow in other Page Libraries If you built the flow as demonstrated above, it will be getting the site and library dynamically based on the trigger values. So, it can be reused in more libraries using list formatting. Simply add the column formatting JSON below (sample edited from Microsoft 365 PnP repository) to a dummy calculated column with fixed text in other pages library (use the calculated column, so it is hidden from forms). Replace the id on the **ActionParams **property with your Flow ID, and by clicking the button added to this column with the JSON formatter, the same flow will be called as if it was triggered from the Automate menu. \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;button\u0026#34;, \u0026#34;customRowAction\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;executeFlow\u0026#34;, \u0026#34;actionParams\u0026#34;: \u0026#34;{\u0026#34;id\u0026#34;: \u0026#34;a9dcaeec-61f9-4dd1-9561-679b15bc3e22\u0026#34;}\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;class\u0026#34;: \u0026#34;ms-fontColor-themePrimary ms-fontColor-themeDarker--hover\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;border\u0026#34;: \u0026#34;none\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;cursor\u0026#34;: \u0026#34;pointer\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;ChangeEntitlements\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;padding-right\u0026#34;: \u0026#34;6px\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;Switch Layout\u0026#34; } ] }  To find your Flow id, just check the URL used when you edit it: ![flow id.PNG](images/flow id.png)\nYou can then start it normally from any other Site Pages library in the tenant, where you add the column with the JSON formatting calling the flow:   If you run the flow from a library where it was called using only the formatter, the values will be parsed correctly from the trigger and the flow will be executed successfully, as the JSON format button sends data related to the currently selected file and we run the rest of the flow dynamically based on the values sent by the trigger.\nThis sample flow is available on the Microsoft 365 PnP Power Automate Samples repository: https://github.com/pnp/powerautomate-samples/tree/main/samples/sharepoint-hide-page-title\n","image":"https://pnp.github.io/blog/post/hiding-the-sharepoint-page-title-with-power-automate/images/page-title_huecfa169fafb8f13a4a4866275d527c0b_22827_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/hiding-the-sharepoint-page-title-with-power-automate/","tags":["SharePoint","Power Automate"],"title":"Hiding the SharePoint page title with Power Automate"},{"categories":["Community post"],"contents":"Introduction A Spinner is an outline of a circle that animates around itself indicating to the user that things are processing. A Spinner is shown when it\u0026rsquo;s unsure how long a task will take making it the indeterminate version of a progress indicator. They can be of various sizes, located in line with the content or centered. They generally appear after an action is being processed or committed. They are subtle and generally do not take up much space, but the transition from the completed task. Sometimes we want to apply some business logic like show loader/spinner while calling API until API responds. So for this, we will call a Graph API to get lists from the root site, and until API response we will show Loader. We will use an Office UI fabric Spinner. For more information refer to Fluent UI spinner.\nImplementation  Open a command prompt Move to the path where you want to create a project Create a project directory using:  md spfx-loader Move to the above-created directory using:\ncd spfx-loader Now execute the below command to create an SPFx solution: yo @microsoft/sharepoint It will ask some questions, as shown below,\n![How To Use LoaderSpinner In SPFx.png](images/How To Use LoaderSpinner In SPFx.png)\nAfter a successful installation, we can open a project in any source code tool. Here, I am using the VS code, so I will execute the command: code . Now go to the src \u0026gt; webparts \u0026gt; webpart \u0026gt; components \u0026gt; I{webpartname}Props.ts file, Here we will create a property for graph Client as below, import { MSGraphClient } from \u0026#34;@microsoft/sp-http\u0026#34;; export interface ISpfxLoaderProps { description: string; graphClient: MSGraphClient; }  Move to the {webpartname}.ts file. Here we will get the graph client and set it to the property, import * as React from \u0026#39;react\u0026#39;; import * as ReactDom from \u0026#39;react-dom\u0026#39;; import { Version } from \u0026#39;@microsoft/sp-core-library\u0026#39;; import { IPropertyPaneConfiguration, PropertyPaneTextField } from \u0026#39;@microsoft/sp-property-pane\u0026#39;; import { BaseClientSideWebPart } from \u0026#39;@microsoft/sp-webpart-base\u0026#39;; import * as strings from \u0026#39;SpfxLoaderWebPartStrings\u0026#39;; import SpfxLoader from \u0026#39;./components/SpfxLoader\u0026#39;; import { ISpfxLoaderProps } from \u0026#39;./components/ISpfxLoaderProps\u0026#39;; import { MSGraphClient } from \u0026#39;@microsoft/sp-http\u0026#39;; export interface ISpfxLoaderWebPartProps { description: string; } export default class SpfxLoaderWebPart extends BaseClientSideWebPart\u0026lt;ISpfxLoaderWebPartProps\u0026gt; { private graphClient: MSGraphClient; public onInit(): Promise\u0026lt;void\u0026gt; { return new Promise\u0026lt;void\u0026gt;((resolve: () =\u0026gt; void, reject: (error: any) =\u0026gt; void): void =\u0026gt; { this.context.msGraphClientFactory .getClient() .then((client: MSGraphClient): void =\u0026gt; { this.graphClient = client; resolve(); }, err =\u0026gt; reject(err)); }); } public render(): void { const element: React.ReactElement\u0026lt;ISpfxLoaderProps\u0026gt; = React.createElement( SpfxLoader, { description: this.properties.description, graphClient: this.graphClient, } ); ReactDom.render(element, this.domElement); } protected onDispose(): void { ReactDom.unmountComponentAtNode(this.domElement); } protected get dataVersion(): Version { return Version.parse(\u0026#39;1.0\u0026#39;); } protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration { return { pages: [ { header: { description: strings.PropertyPaneDescription }, groups: [ { groupName: strings.BasicGroupName, groupFields: [ PropertyPaneTextField(\u0026#39;description\u0026#39;, { label: strings.DescriptionFieldLabel }) ] } ] } ] }; } }   Move to the {webpartname}.tsx file, Create a State with loading and items properties Create a constructor and initialize a state Create a method getItems() and in this method, we will call a graph API to get lists from the root. And in this method before starting a call API we will set state loading to true and in the response and error function, we will set state loading to false. And call getItems() in componentDidMount() And in the render() method we will check if state loading is true then show Spinner and if the length of items is greater than 0 then we will show records.  import * as React from \u0026#39;react\u0026#39;; import styles from \u0026#39;./SpfxLoader.module.scss\u0026#39;; import { ISpfxLoaderProps } from \u0026#39;./ISpfxLoaderProps\u0026#39;; import { escape } from \u0026#39;@microsoft/sp-lodash-subset\u0026#39;; import { Spinner, SpinnerSize } from \u0026#39;@fluentui/react/lib/Spinner\u0026#39;; export interface ISpfxLoaderState { loading: boolean; items: any[]; } export default class SpfxLoader extends React.Component\u0026lt;ISpfxLoaderProps, ISpfxLoaderState\u0026gt; { constructor(props: ISpfxLoaderProps) { super(props); this.state = { loading: false, items: [] }; } public componentDidMount() { this.getItems(); } public getItems(){ let graphURI: string = \u0026#34;/sites/root/lists\u0026#34;; if (!this.props.graphClient) { return; } this.setState({ loading: true, }); this.props.graphClient .api(graphURI) .version(\u0026#34;v1.0\u0026#34;) .get((err: any, res: any): void =\u0026gt; { if (err) { this.setState({ loading: false }); return; } if (res \u0026amp;\u0026amp; res.value \u0026amp;\u0026amp; res.value.length \u0026gt; 0) { console.log(\u0026#34;res: \u0026#34;, res); this.setState({ items: res.value, loading: false }); } else { this.setState({ loading: false }); } }); } public render(): React.ReactElement\u0026lt;ISpfxLoaderProps\u0026gt; { return ( \u0026lt;div className={styles.spfxLoader}\u0026gt; \u0026lt;h2\u0026gt;{this.props.description}\u0026lt;/h2\u0026gt; { this.state.loading \u0026amp;\u0026amp; \u0026lt;Spinner label=\u0026#34;Loading items...\u0026#34; size={SpinnerSize.large} /\u0026gt; } { this.state.items.length \u0026gt; 0 \u0026amp;\u0026amp; this.state.items.map(m =\u0026gt; \u0026lt;p\u0026gt;{m.name}\u0026lt;/p\u0026gt;) } \u0026lt;/div\u0026gt; ); } }  Output  Find here the full source code . Summary In this article, we have seen how to use Spinner/loading in the SPFx webpart.\nI hope this helps.\nSharing is caring!\n","image":"https://pnp.github.io/blog/post/how-to-use-loader-spinner-in-progress-indicator-in-spfx-using/images/spfx-loader_hu2d79819d3f10f33cd9727dbe78895717_334583_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/post/how-to-use-loader-spinner-in-progress-indicator-in-spfx-using/","tags":["SharePoint framework (SPFx)"],"title":"How to use loader/Spinner/In Progress indicator in SPFx using fluent UI Spinner?"},{"categories":["PnP Weekly"],"contents":" In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Boston-based MVP and founder of Sympraxis Consulting - Marc D Anderson | @sympmarc.  Topics discussed in this session include:\n Hearing about how Sympraxis is focused on helping organizations function at higher levels.  Differences in expectations between IT and non-IT customers.  Non-IT is more interested in creating solutions people want to use and appreciate. This is due in part to customers who use many great consumer technologies and they expect the same in their workplace.  Solution implementation options for architects have grown immensely.  On a continuum of Code \u0026ndash; Middle Area \u0026ndash; No code, the activity for consulting firms today are greatest in the middle area. User and IT education remains as important as ever.  Discussion positioning Intranet and collaboration tools in organizations today - it\u0026rsquo;s the tools for how we get work done that are rapidly evolving in the most interesting ways today.   We also covered 13 articles by Microsoft and the PnP Community from the last week.  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n   This session was recorded in front of absolutely no audience on Monday, September 13, 2021.   Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.   These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot;  Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\n\\\n Microsoft articles   Brace yourselves: Hybrid work is hard. Here\u0026rsquo;s how Microsoft Teams and Office 365 can help - Nicole Herskowitz (Microsoft) | @nicolelamb Viva Connections Public Preview - Andy Haon (Microsoft) | @andyhaon Beyond sharing your screen: Interactive collaboration with apps in Microsoft Teams meetings - Microsoft Announcing a new Microsoft Teams authentication provider and file upload feature in the Microsoft Gr... - Elise Yang (Microsoft) | @elisenyang Breaking changes to the me/assignments endpoint in the Microsoft Graph Assignments API (beta) - Microsoft   Community articles   Create Site Script and Site Template Using Power Automate in SharePoint - Dipen Shah (RapidCircle) | @Dips_365 How to get started with GitHub and Git - Luise Freese | @LuiseFreese Azure Meeting Bot To Capture Meeting Participants Information - Siddharth Vaghasia | @siddh_me Global Navigation In Modern SharePoint Using SPFx, PnP And Fluent UI - Dipen Shah (RapidCircle) | @Dips_365 PnP Batch Add or Delete items from very large list, i.e. more than 300k items - Reshmee Auckloo | @reshmeeauckloo Meeting apps in Microsoft Teams (1) \u0026ndash; Pre-meeting - Markus Möller (Avanade) | @Moeller2_0 Hiding the SharePoint page title with Power Automate - Michel Mendes (Storm Technology Ltd) | @michelcarlo The Weekday and Calendar functions in Power Apps - Pieter Veenstra (HybrIT Services) | @PieterVeenstra   Additional resources   Microsoft 365 Extensibility Look Book - https://aka.ms/m365/extensibility  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp   If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n \u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-134-marc-d-anderson-sympraxis/images/Thumb-Ep132_hu49e6139d06ed4ba0bace0c1d2ff4a2cb_514843_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-134-marc-d-anderson-sympraxis/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 134 - Marc D Anderson (Sympraxis Consulting)"},{"categories":["Community post"],"contents":"I was tasked to delete more than 300k items loaded as part of testing from a very large SharePoint list, I used the script from the blog post https://vladilen.com/office-365/spo/fastest-way-to-delete-all-items-in-a-large-list/ describing the difference of speed using batches, scriptblock and without batches. The conclusion was batches and scriptblock were equally fast and faster than without the use of batches. Get-PnPListItem -List $list -Fields \u0026#34;ID\u0026#34; -PageSize 100 -ScriptBlock { Param($items) $items | Sort-Object -Property Id -Descending | ForEach-Object{ $_.DeleteObject() } } Unfortunately the script kept producing errors like \u0026ldquo;The collection has not been initialised\u0026rdquo; , \u0026ldquo;A task has been canceled\u0026rdquo; or \u0026ldquo;The operation has timed out\u0026rdquo; at irregular intervals and had to manually restart the script to resume deletion of remaining items. $action = Read-Host \u0026#34;Enter the action you want to perform, e.g. Add or Delete\u0026#34; $siteUrl = \u0026#34;https://contoso.sharepoint.com/sites/Team1\u0026#34; $listName = \u0026#34;TestDemo\u0026#34; $ErrorActionPreference=\u0026#34;Stop\u0026#34; Connect-PnPOnline –Url $siteUrl -interactive $Stoploop = $false [int]$Retrycount = \u0026#34;0\u0026#34; write-host $(\u0026#34;Start time \u0026#34; + (Get-Date)) do { try { if($action -eq \u0026#34;Add\u0026#34;) { $lst = Get-PnPList -Identity $listName if($lst.ItemCount -lt 300000) { $startInc = $lst.ItemCount while($lst.ItemCount -lt 300000) { $batch = New-PnPBatch #perform in increment of 1000 until 300k is reached if($startInc+1000 -gt 300000) { $endNu = 300000 } else { $endNu = $startInc+1000 } for($i=$startInc;$i -lt ($endNu);$i++) { Add-PnPListItem -List $listName -Values @{\u0026#34;Title\u0026#34;=\u0026#34;Test $i\u0026#34;} -Batch $batch } Invoke-PnPBatch -Batch $batch $lst = Get-PnPList -Identity $listName } } } if($action -eq \u0026#34;Delete\u0026#34;) { $listItems= Get-PnPListItem -List $listName -Fields \u0026#34;ID\u0026#34; -PageSize 1000 $itemIds = $lisItems | Foreach {$_.Id} $itemCount = $listItems.Count while($itemCount -gt 0) { $batch = New-PnPBatch #delete in batches of 1000, if itemcount is less than 1000 , all will be deleted if($itemCount -lt 1000) { $noDeletions = 0 } else { $noDeletions = $itemCount -1000 } for($i=$itemCount-1;$i -ge $noDeletions;$i--) { Remove-PnPListItem -List $listName -Identity $listItems[$i].Id -Batch $batch } Invoke-PnPBatch -Batch $batch $itemCount = $itemCount-1000 } } Write-Host \u0026#34;Job completed\u0026#34; $Stoploop = $true } catch { if ($Retrycount -gt 3){ Write-Host \u0026#34;Could not send Information after 3 retrys.\u0026#34; $Stoploop = $true } else { Write-Host \u0026#34;Could not send Information retrying in 30 seconds...\u0026#34; Start-Sleep -Seconds 30 Connect-PnPOnline –Url $siteUrl -interactive $Retrycount = $Retrycount + 1 } } } While ($Stoploop -eq $false) write-host $(\u0026#34;End time \u0026#34; + (Get-Date)) The script took up to 4 hours to add 300k items. The script resumed despite an error happening.    The script took 7.5 hours to delete 300k items with a couple of retries.    ","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-134-marc-d-anderson-sympraxis/images/Thumb-Ep132_hu49e6139d06ed4ba0bace0c1d2ff4a2cb_514843_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/pnp-batch-add-or-delete-items-from-very-large-list-i-e-more-than/","tags":["PnP PowerShell"],"title":"PnP Batch Add or Delete items from very large list, i.e. more than 300k items"},{"categories":["Community post"],"contents":"Following on previous blog PnP Batch Add or Delete items from very large list\nand reading about the post fastest way to create SharePoint List Items by Waldek Mastykarz, I decided to try using Microsoft Graph batch in PowerShell. I found the article Calling the Microsoft Graph with PnP PowerShell by Paul Bullock useful to get started. Using PnP Batch with retry mechanisms still took up to 4 hours to create 300k items and up to 8 hours to delete 300 k items. I thought Microsoft Graph can handle huge volume of requests and could help with my scenario. Unfortunately, at random intervals I was getting errors like \u0026quot;Invoke-WebRequest : The underlying connection was closed: A connection that was expected to be kept alive was closed by the server\u0026quot;   and \u0026quot;Invoke-webRequest : The remote server returned an error: (401) Unauthorized\u0026quot;   I used a retry mechanism in case of failure to re-establish the connection to continue the operation. To my dismay even if the script completed looping the 300k times to either add or delete the items, not all the 300k items were deleted or added compared to the script from PnP Batch Add or Delete items from very large list making it impossible for me to do a fair comparison. I decided to do the comparison on 3k items in both scenarios after trying decreasing number of items, i.e. 200k, 100 k, 50 k and 10 k where the results were not as expected with Microsoft Graph batch. For example I ran the script to create 10k items in the SharePoint Online list but only around 4k items were created despite the script completed successfully in around 2 minutes. Below is a screenshot of the results of running the script which resumed the operation in case of errors like \u0026quot;The underlying connection was closed\u0026quot;.   Microsoft Graph batch script\n$action = Read-Host \u0026#34;Enter the action you want to perform, e.g. Add or Delete\u0026#34; $siteUrl = \u0026#34;https://contoso.sharepoint.com/sites/Team1\u0026#34; $listName = \u0026#34;TestDemo\u0026#34; $clientId = \u0026#34;00000000-0000-0000-0000-000000000000\u0026#34; $thumbprint = \u0026#34;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\u0026#34; #connect with application permissions Connect-PnPOnline -ClientId $clientId -Thumbprint $thumbprint -Tenant \u0026#34;contoso.onmicrosoft.com\u0026#34; -Url $siteUrl write-host $(\u0026#34;Start time \u0026#34; + (Get-Date)) $startTime = Get-Date #site and list details $siteID = (Get-PnPSite -Includes Id).Id $listID = (Get-PnPList $listName).Id $Total = 3000 $batchSize = 20 #bearer token for batch request $token = Get-PnPGraphAccessToken $Stoploop = $false $Retrycount = 0 $requests = @() $header = @{ \u0026#34;Content-Type\u0026#34; = \u0026#34;application/json\u0026#34; } do { try { if($action -eq \u0026#34;Add\u0026#34;) { $lst = Get-PnPList -Identity $listName if($lst.ItemCount -lt $Total) { $startInc = $lst.ItemCount $itemsCountToCreate = $Total - $startInc for($i=$startInc;$i -lt ($Total);$i++) { $request = @{ id = $i method = \u0026#34;POST\u0026#34; url = \u0026#34;/sites/$siteID/lists/$listID/items/\u0026#34; body = @{ fields = @{ Title = \u0026#34;Test $i\u0026#34; } } headers = $header } $requests += $request if($requests.count -eq $batchSize -or $requests.count -eq $itemsCountToCreate) { $batchRequests = @{ requests = $requests } #IMPORTANT: use -Deph parameter $batchBody = $batchRequests | ConvertTo-Json -Depth 4 #send batch request $response = Invoke-WebRequest -Method Post -Uri \u0026#39;https://graph.microsoft.com/v1.0/$batch\u0026#39; -Headers @{Authorization = \u0026#34;Bearer $($token)\u0026#34; } -ContentType \u0026#34;application/json\u0026#34; -Body $batchBody -ErrorAction Stop $StatusCode = $Response.StatusCode # This will only execute if the Invoke-WebRequest is successful.  #write-host $(\u0026#34;$StatusCode response for adding 20\u0026#34;) #reset batch item counter and requests array $requests = @() $itemsCountToCreate = $itemsCountToCreate - $batchSize } } } $lst = Get-PnPList -Identity $listName $Stoploop = $true } if($action -eq \u0026#34;Delete\u0026#34;) { $requests = @() $listItems= Get-PnPListItem -List $listName -Fields \u0026#34;ID\u0026#34; -PageSize 1000 $itemCount = $listItems.Count for($i=$itemCount-1;$i -ge 0;$i--) { $itemId = $listItems[$i].Id $request = @{ id = $i method = \u0026#34;DELETE\u0026#34; url = \u0026#34;/sites/$siteID/lists/$listID/items/$itemId\u0026#34; headers = $header } $requests += $request if($requests.count -eq $batchSize -or $requests.count -eq $itemCount) { $batchRequests = @{ requests = $requests } #IMPORTANT: use -Deph parameter $batchBody = $batchRequests | ConvertTo-Json -Depth 4 #send batch request $response = Invoke-WebRequest -Method Post -Uri \u0026#39;https://graph.microsoft.com/v1.0/$batch\u0026#39; -Headers @{Authorization = \u0026#34;Bearer $($token)\u0026#34; } -ContentType \u0026#34;application/json\u0026#34; -Body $batchBody #$StatusCode = $Response.StatusCode #write-host $(\u0026#34;$StatusCode response for deleting 20\u0026#34;) #reset batch item counter and requests array $requests = @() $itemCount = $itemCount - $batchSize } } } $Stoploop = $true } catch { if ($Retrycount -gt 3){ Write-Host \u0026#34;Could not send Information after 3 retrys.\u0026#34; $Stoploop = $true } else { Write-Host \u0026#34;Could not send Information retrying in 30 seconds...\u0026#34; write-host $(\u0026#34;Time error happened \u0026#34; + (Get-Date)) Write-host $(\u0026#34;$_.Exception.Message\u0026#34;) -ForegroundColor Red Start-Sleep -Seconds 30 Connect-PnPOnline -ClientId $clientId -Thumbprint $thumbprint -Tenant \u0026#34;contoso.onmicrosoft.com\u0026#34; -Url $siteUrl $token = Get-PnPGraphAccessToken $Retrycount = $Retrycount + 1 } } } While ($Stoploop -eq $false) $endTime = Get-Date $totalTime = $endTime - $startTime write-host \u0026#34;Total script run time: $($totalTime.Hours)hours, $($totalTime.Minutes)minutes, $($totalTime.Seconds)seconds\u0026#34; -ForegroundColor Cyan  PnP batch script $action = Read-Host \u0026#34;Enter the action you want to perform, e.g. Add or Delete\u0026#34; $siteUrl = \u0026#34;https://contoso.sharepoint.com/sites/Team1\u0026#34; $listName = \u0026#34;TestDemo\u0026#34; $ErrorActionPreference=\u0026#34;Stop\u0026#34; Connect-PnPOnline –Url $siteUrl -interactive $Total = 30000 $Stoploop = $false [int]$Retrycount = \u0026#34;0\u0026#34; write-host $(\u0026#34;Start time \u0026#34; + (Get-Date)) $startTime = Get-Date do { try { if($action -eq \u0026#34;Add\u0026#34;) { $lst = Get-PnPList -Identity $listName if($lst.ItemCount -lt $Total) { $startInc = $lst.ItemCount while($lst.ItemCount -lt $Total) { $batch = New-PnPBatch #perform in increment of 1000 until 300k is reached  if($startInc+1000 -gt $Total) { $endNu = $Total } else { $endNu = $startInc+1000 } for($i=$startInc;$i -lt ($endNu);$i++) { Add-PnPListItem -List $listName -Values @{\u0026#34;Title\u0026#34;=\u0026#34;Test $i\u0026#34;} -Batch $batch } Invoke-PnPBatch -Batch $batch $lst = Get-PnPList -Identity $listName } } } if($action -eq \u0026#34;Delete\u0026#34;) { $listItems= Get-PnPListItem -List $listName -Fields \u0026#34;ID\u0026#34; -PageSize 1000 $itemIds = $lisItems | Foreach {$_.Id} $itemCount = $listItems.Count while($itemCount -gt 0) { $batch = New-PnPBatch #delete in batches of 1000, if itemcount is less than 1000 , all will be deleted  if($itemCount -lt 1000) { $noDeletions = 0 } else { $noDeletions = $itemCount -1000 } for($i=$itemCount-1;$i -ge $noDeletions;$i--) { Remove-PnPListItem -List $listName -Identity $listItems[$i].Id -Batch $batch } Invoke-PnPBatch -Batch $batch $itemCount = $itemCount-1000 } } Write-Host \u0026#34;Job completed\u0026#34; $Stoploop = $true } catch { if ($Retrycount -gt 3){ Write-Host \u0026#34;Could not send Information after 3 retrys.\u0026#34; $Stoploop = $true } else { Write-Host \u0026#34;Could not send Information retrying in 30 seconds...\u0026#34; Start-Sleep -Seconds 30 Connect-PnPOnline –Url $siteUrl -interactive $Retrycount = $Retrycount + 1 } } } While ($Stoploop -eq $false) write-host $(\u0026#34;End time \u0026#34; + (Get-Date)) $endTime = Get-Date $totalTime = $endTime - $startTime write-host \u0026#34;Total script run time: $($totalTime.Hours)hours, $($totalTime.Minutes)minutes, $($totalTime.Seconds)seconds\u0026#34; -ForegroundColor Cyan  I have run the scripts using Microsoft Graph batch and PnP Batch 3 times to add and delete 3k items and below are the results.\n Microsoft Graph batch is faster to add and delete than PnP batch for 3k items.\nHowever for a very large number of items, i.e. more than 10 k the results can be sporadic with Microsoft Graph batch unless I added a delay of few seconds after each batch operation which makes it less performant than using PnP batch.\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-134-marc-d-anderson-sympraxis/images/Thumb-Ep132_hu49e6139d06ed4ba0bace0c1d2ff4a2cb_514843_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/pnp-batch-versus-microsoft-graph-batch-in-powershell-to-add/","tags":["PnP PowerShell","Microsoft Graph"],"title":"PnP Batch versus Microsoft Graph Batch in PowerShell to add/delete 3k items"},{"categories":["Community post"],"contents":"The Microsoft 365 PnP Team would love to invite you to the Watch Party that we are hosting for the Learn Together: Building apps with Microsoft Graph event. The event is a 2 hour live stream and is offered live twice to accommodate the global audience:\nApril 14, 2021 2:00 pm AEST - 4:00 pm AEST (Asia Pacific Region)\nApril 14, 2021 8:30 am PDT 10:30 am PDT (North America \u0026amp; Europe Regions)\nFor the North America \u0026amp; Europe Regions live stream, we will host a Teams meeting to connect and collaborate while we are watching the live stream on our own devices. There will be games, popcorn, G-raphs 🦒 and much more.\nMy dear Sharing Is Caring friend David Warner made a short video to explain it in his own words!\nFind more information on the Learn Together event here: https://aka.ms/learntogether-graph\nRegister for our WatchParty here: aka.ms/pnpwatchparty\nWe love to see you join us!\nIf you have any questions, please reach out here in the comments or find David Warner, Hugo Bernier or me Luise Freese on twitter!\nSharing Is Caring 🦒\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-134-marc-d-anderson-sympraxis/images/Thumb-Ep132_hu49e6139d06ed4ba0bace0c1d2ff4a2cb_514843_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/pnp-watchparty-for-microsoft-s-learntogether-building-apps-with/","tags":[],"title":"PnP WatchParty for Microsoft's 'LearnTogether Building apps with Microsoft Graph' event"},{"categories":[],"contents":"Introduction Modern SharePoint architecture gives fantastic OOTB global navigation, and hub site navigation has amazing potential to maintain consistency throughout the portal. Then why do we need to develop custom global navigation in modern SharePoint sites?\nLet us talk about the business scenario.\nNowadays, a number of organizations are migrating classic intranet portals to modern sites. Many of them have implemented custom global navigation in a classic environment with a number of links and complex tree structures.\nEmployees are habitual with this global navigation. So, many organizations prefer similar global navigation in Modern SharePoint sites.\nLet\u0026rsquo;s Begin,\nBelow Artifacts are going to be used,\n SharePoint communication Site SharePoint Framework (SPFx) Application Customizer PnP Taxonomy Fluent Ui Command Bar  Steps  Configure Terms in Term Stores Create Solution for Application Customizer Import Required Packages Create React Component Add React Component Reference to Application Customizer Get Terms using PnP Render Terms using Command Bar and styling  Test Solution  Step 1 - Configure Terms in Term Store.\nGo to URL : https://\\\u0026lt;TenantName\u0026gt;-admin.sharepoint.com/\\_layouts/15/online/AdminHome.aspx#/termStoreAdminCenter\nCreate Term Group.\n Copy Group GUID and Paste it into one document  Create Term Set inside created Term Group\n Enable Use Term set for Site Navigation Copy term Set Id and Paste it in one document.  Create Terms Inside create Term Sets. ![Global navigation in Modern SharePoint Using SPFx PnP and Fluent UI.gif](images/Global navigation in Modern SharePoint Using SPFx PnP and Fluent UI.gif)\nStep 2 - Create SPFx Solution for Application Customizer\nOpen Node command Prompt.\nGo to your physical location where you want to create a solution.\nOnce all required packages are installed then you will get the below message.   Open Code in visual studio code by typing below one line code in node command prompt.\nC:\\Demo\\GlobalNavigation\u0026gt;code . The solution structure looks like the ad below.   Step 3 - Import required packages from npm Install PnP npm package,\nnpm install @pnp/sp Install React Fluent UI Package,\\\nnpm install @fluentui/react Install react and react Dom and Its Dev Dependencies.\nnpm install react@16.9.0 --save npm install react-dom@16.9.0 --save Open package.json file which should look like as below.\n{ \u0026#34;name\u0026#34;: \u0026#34;sample-demo-application\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;0.0.1\u0026#34;, \u0026#34;private\u0026#34;: true, \u0026#34;main\u0026#34;: \u0026#34;lib/index.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;build\u0026#34;: \u0026#34;gulp bundle\u0026#34;, \u0026#34;clean\u0026#34;: \u0026#34;gulp clean\u0026#34;, \u0026#34;test\u0026#34;: \u0026#34;gulp test\u0026#34; }, \u0026#34;dependencies\u0026#34;: { \u0026#34;@fluentui/react\u0026#34;: \u0026#34;^8.22.3\u0026#34;, \u0026#34;@microsoft/decorators\u0026#34;: \u0026#34;1.12.1\u0026#34;, \u0026#34;@microsoft/sp-application-base\u0026#34;: \u0026#34;1.12.1\u0026#34;, \u0026#34;@microsoft/sp-core-library\u0026#34;: \u0026#34;1.12.1\u0026#34;, \u0026#34;@microsoft/sp-dialog\u0026#34;: \u0026#34;1.12.1\u0026#34;, \u0026#34;@microsoft/sp-office-ui-fabric-core\u0026#34;: \u0026#34;^1.12.1\u0026#34;, \u0026#34;@pnp/sp\u0026#34;: \u0026#34;^2.7.0\u0026#34;, \u0026#34;react\u0026#34;: \u0026#34;^16.9.0\u0026#34;, \u0026#34;react-dom\u0026#34;: \u0026#34;^16.9.0\u0026#34; }, \u0026#34;devDependencies\u0026#34;: { \u0026#34;@types/react\u0026#34;: \u0026#34;16.9.36\u0026#34;, \u0026#34;@types/react-dom\u0026#34;: \u0026#34;16.9.8\u0026#34;, \u0026#34;@microsoft/sp-build-web\u0026#34;: \u0026#34;1.12.1\u0026#34;, \u0026#34;@microsoft/sp-tslint-rules\u0026#34;: \u0026#34;1.12.1\u0026#34;, \u0026#34;@microsoft/sp-module-interfaces\u0026#34;: \u0026#34;1.12.1\u0026#34;, \u0026#34;@microsoft/sp-webpart-workbench\u0026#34;: \u0026#34;1.12.1\u0026#34;, \u0026#34;@microsoft/rush-stack-compiler-3.7\u0026#34;: \u0026#34;0.2.3\u0026#34;, \u0026#34;gulp\u0026#34;: \u0026#34;~4.0.2\u0026#34;, \u0026#34;ajv\u0026#34;: \u0026#34;~5.2.2\u0026#34;, \u0026#34;@types/webpack-env\u0026#34;: \u0026#34;1.13.1\u0026#34; } } Step 4 - Create React Component Create new folder called \u0026ldquo;Components\u0026rdquo; to \u0026ldquo;..src\\extensions\\gobalNavigationBar\u0026rdquo;.\nCreate 3 files inside the components folder.\n GlobalNav.tsx IGlobalNavProps.ts IGlobalNavState.ts     Add below code to IGlobalNavProps.ts,\nexport interface IGlobalNavProps { termGroupId:string; termSetId: string; } Add below code to IGlobalNavState.ts,\nimport { IOrderedTermInfo } from \u0026#39;@pnp/sp/taxonomy\u0026#39;; export interface IGobalNavState { loading: boolean; terms: IOrderedTermInfo[]; } Add below code to IGlobalNav.tsx,\nimport * as React from \u0026#39;react\u0026#39;; import { IGlobalNavProps } from \u0026#34;./IGlobalNavProps\u0026#34;; import { IGobalNavState } from \u0026#34;./IGlobalNavState\u0026#34;; export default class GlobalNav extends React.Component\u0026lt;IGlobalNavProps, IGobalNavState\u0026gt; { constructor(props: IGlobalNavProps) { super(props); this.state = { loading: false, terms: [] } } public componentDidMount() { // Code here to get items  } public render(): React.ReactElement\u0026lt;IGlobalNavProps\u0026gt; { return ( Hello World \u0026lt;/div\u0026gt; ); } } Step 5 - Add React Component Reference to Application Customizer Open GobalNavigationBarApplicationCustomizer.ts file and add the below code.\nGobalNavigationBarApplicationCustomizer.ts\nimport * as React from \u0026#39;react\u0026#39;; import * as ReactDom from \u0026#39;react-dom\u0026#39;; import { sp } from \u0026#34;@pnp/sp\u0026#34;; import { override } from \u0026#39;@microsoft/decorators\u0026#39;; import { Log } from \u0026#39;@microsoft/sp-core-library\u0026#39;; import { PlaceholderContent, PlaceholderName, BaseApplicationCustomizer } from \u0026#39;@microsoft/sp-application-base\u0026#39;; import GlobalNav from \u0026#34;./Components/GlobalNav\u0026#34;; import { IGlobalNavProps } from \u0026#34;./Components/IGlobalNavProps\u0026#34;; import * as strings from \u0026#39;GobalNavigationBarApplicationCustomizerStrings\u0026#39;; const LOG_SOURCE: string = \u0026#39;GobalNavigationBarApplicationCustomizer\u0026#39;; /** * If your command set uses the ClientSideComponentProperties JSON input, * it will be deserialized into the BaseExtension.properties object. * You can define an interface to describe it. */ export interface IGobalNavigationBarApplicationCustomizerProperties { // This is an example; replace with your own property  termGroupId: string; termSetId: string; } /** A Custom Action which can be run during execution of a Client Side Application */ export default class GobalNavigationBarApplicationCustomizer extends BaseApplicationCustomizer\u0026lt;IGobalNavigationBarApplicationCustomizerProperties\u0026gt; { private _topPlaceholder: PlaceholderContent | undefined; @override public onInit(): Promise\u0026lt;void\u0026gt; { Log.info(LOG_SOURCE, `Initialized ${strings.Title}`); super.onInit().then(_ =\u0026gt; { console.log(\u0026#34;super oninit called\u0026#34;); sp.setup({ spfxContext: this.context }); }).then((_) =\u0026gt; { console.log(\u0026#34;Sp Initilize\u0026#34;); this.context.placeholderProvider.changedEvent.add(this, this._renderPlaceHolders); }); return Promise.resolve(); } private _renderPlaceHolders(): void { console.log(\u0026#34;HelloWorldApplicationCustomizer._renderPlaceHolders()\u0026#34;); console.log( \u0026#34;Available placeholders: \u0026#34;, this.context.placeholderProvider.placeholderNames .map(name =\u0026gt; PlaceholderName[name]) .join(\u0026#34;, \u0026#34;) ); // Handling the top placeholder  if (!this._topPlaceholder) { this._topPlaceholder = this.context.placeholderProvider.tryCreateContent( PlaceholderName.Top, { onDispose: this._onDispose } ); // The extension should not assume that the expected placeholder is available.  if (!this._topPlaceholder) { console.error(\u0026#34;The expected placeholder (Top) was not found.\u0026#34;); return; } if (this.properties) { // Add refrence of react component to this file.  const element: React.ReactElement\u0026lt;IGlobalNavProps\u0026gt; = React.createElement( GlobalNav, { termGroupId: this.properties.termGroupId, termSetId: this.properties.termSetId } ); ReactDom.render(element, this._topPlaceholder.domElement); } } } private _onDispose(): void { console.log(\u0026#39;[HelloWorldApplicationCustomizer._onDispose] Disposed custom top and bottom placeholders.\u0026#39;); } } Step 6: Get Terms using PnP Open GlobalNav.tsx file and do the below changes.\nGlobalNav.tsx\nAdd below references to the file.\nimport { sp } from \u0026#34;@pnp/sp\u0026#34;; import \u0026#34;@pnp/sp/taxonomy\u0026#34;; import { dateAdd, PnPClientStorage } from \u0026#34;@pnp/common\u0026#34;; import { IOrderedTermInfo } from \u0026#39;@pnp/sp/taxonomy\u0026#39;; const myKey: string = \u0026#34;navigationElements\u0026#34;; Update below code to GlobalNav.tsx.\nprivate store = new PnPClientStorage(); constructor(props: IGlobalNavProps) { super(props); this.state = { loading: false, terms: [] } } Update componentdidmount() method with below code in GlobalNav.tsx.\npublic componentDidMount() { this.setState({}, async () =\u0026gt; { // this portion is responsible for getting terms from term store  const cachedTermInfo = await this.store.local.getOrPut(myKey, () =\u0026gt; { return sp.termStore.groups.getById(this.props.termGroupId).sets.getById(this.props.termSetId).getAllChildrenAsOrderedTree({ retrieveProperties: true }); }, dateAdd(new Date(), \u0026#34;minute\u0026#34;, 10)); if (cachedTermInfo.length \u0026gt; 0) { console.log(cachedTermInfo); this.setState({ terms: cachedTermInfo }); } }); Step 7 - Render Terms using Command Bar Open **GlobalNav.tsx **file.\nAdd below code before default class.\nimport { IButtonStyles } from \u0026#39;@fluentui/react\u0026#39;; import { createTheme, ITheme } from \u0026#39;office-ui-fabric-react/lib/Styling\u0026#39;; import { CommandBar, ICommandBarStyleProps } from \u0026#34;@fluentui/react/lib/CommandBar\u0026#34;; const theme: ITheme = createTheme({ semanticColors: { bodyBackground: \u0026#34;#333\u0026#34;, bodyText: \u0026#34;#fff\u0026#34; } }); const CommandBarProps: ICommandBarStyleProps = { theme: theme }; const buttonStyle: IButtonStyles = { root: { backgroundColor: \u0026#34;#333\u0026#34;, color: \u0026#34;#fff\u0026#34; }, menuIcon: { color: \u0026#34;#fff\u0026#34;, } }; Create new method menuItems() in **GlobalNav.tsx **file.\nprivate menuItems(menuItem: any, itemType: ContextualMenuItemType) { return ({ key: menuItem.id, name: menuItem.defaultLabel, itemType: itemType, href: menuItem.children.length == 0 ? ((menuItem.localProperties != undefined \u0026amp;\u0026amp; menuItem.localProperties[0].properties !== undefined \u0026amp;\u0026amp; menuItem.localProperties[0].properties.length \u0026gt; 0) ? menuItem.localProperties[0].properties.filter(x =\u0026gt; x.key == \u0026#34;_Sys_Nav_SimpleLinkUrl\u0026#34;)[0].value !== undefined ? menuItem.localProperties[0].properties.filter(x =\u0026gt; x.key == \u0026#34;_Sys_Nav_SimpleLinkUrl\u0026#34;)[0].value : null : null) : null, subMenuProps: menuItem.children.length \u0026gt; 0 ? { items: menuItem.children.map((i) =\u0026gt; { return (this.menuItems(i, ContextualMenuItemType.Normal)); }) } : null, isSubMenu: itemType != ContextualMenuItemType.Header, buttonStyles: buttonStyle }); } Update render() method in GlobalNav.tsx file.\npublic render(): React.ReactElement\u0026lt;IGlobalNavProps\u0026gt; { var commandBarItems: any[] = []; if (this.state.terms.length \u0026gt; 0) { commandBarItems = this.state.terms.map((i) =\u0026gt; { return (this.menuItems(i, ContextualMenuItemType.Header)); }); } return ( \u0026lt;\u0026gt; { this.state.terms.length \u0026gt; 0 \u0026amp;\u0026amp; \u0026lt;CommandBar {...CommandBarProps} style={{ width: \u0026#34;100%\u0026#34; }} items={commandBarItems} /\u0026gt; \u0026lt;/div\u0026gt; } \u0026lt;/\u0026gt; ); } Step 8 - Test Solution Open \u0026ldquo;../config/serve.json\u0026rdquo; file and update a couple of properties.\nUpdate pageUrl Property and Properties,\n{ \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/core-build/serve.schema.json\u0026#34;, \u0026#34;port\u0026#34;: 4321, \u0026#34;https\u0026#34;: true, \u0026#34;serveConfigurations\u0026#34;: { \u0026#34;default\u0026#34;: { \u0026#34;pageUrl\u0026#34;: \u0026#34;https://\u0026lt;tenantName\u0026gt;.sharepoint.com/sites/mySite/SitePages/myPage.aspx\u0026#34;, \u0026#34;customActions\u0026#34;: { \u0026#34;aeabebb8-02ce-4958-99b2-d640d0995588\u0026#34;: { \u0026#34;location\u0026#34;: \u0026#34;ClientSideExtension.ApplicationCustomizer\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;termGroupId\u0026#34;: \u0026#34;\u0026lt;Add your Term Group Id\u0026gt;\u0026#34;, \u0026#34;termSetId\u0026#34;:\u0026#34;\u0026lt;Add your Term Set Id\u0026gt;\u0026#34; } } } }, \u0026#34;gobalNavigationBar\u0026#34;: { \u0026#34;pageUrl\u0026#34;: \u0026#34;https://\u0026lt;tenantName\u0026gt;.sharepoint.com/sites/mySite/SitePages/myPage.aspx\u0026#34;, \u0026#34;customActions\u0026#34;: { \u0026#34;aeabebb8-02ce-4958-99b2-d640d0995588\u0026#34;: { \u0026#34;location\u0026#34;: \u0026#34;ClientSideExtension.ApplicationCustomizer\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;termGroupId\u0026#34;: \u0026#34;\u0026lt;Add your Term Group Id\u0026gt;\u0026#34;, \u0026#34;termSetId\u0026#34;:\u0026#34;\u0026lt;Add your Term Set Id\u0026gt;\u0026#34; } } } } } } Run below command in Visual Studio Code Terminal.\ngulp clean gulp build gulp serve --config:\u0026#34;gobalNavigationBar\u0026#34; ![Global navigation in Modern SharePoint Using SPFx PnP and Fluent UI5.png](images/Global navigation in Modern SharePoint Using SPFx PnP and Fluent UI5.png)\nCopy URL which is highlighted in yellow and paste it into the browser.\n![Global navigation in Modern SharePoint Using SPFx PnP and Fluent UI6.gif](images/Global navigation in Modern SharePoint Using SPFx PnP and Fluent UI6.gif)\nConclusion We have implemented the SPFx solution and get terms from the term store using PnP and render items in the command bar which is fluent UI control.\nHappy Coding\n","image":"https://pnp.github.io/blog/post/global-navigation-in-modern-sharepoint-using-spfx-pnp-and-fluent/images/GN3_hu00c4d0009406d0806c7c9509a26026a6_34036_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/global-navigation-in-modern-sharepoint-using-spfx-pnp-and-fluent/","tags":["SharePoint framework (SPFx)"],"title":"Global Navigation In Modern SharePoint Using SPFx, PnP And Fluent UI"},{"categories":["Community post"],"contents":"In this article, we will learn about how to create Azure Meeting Bot which can join a team meeting via Power Automate and can log participant\u0026rsquo;s information. This use case was build as part of a solution for one of the customers who wanted to show the dashboard of active meeting participants about their join and left time in Power Apps. They also used this information later for analyzing the participant\u0026rsquo;s activities for a particular event.\nPre-requisites  A valid Azure subscription MS Visual Studio Code Node JS Access to power Automate  Step - Registering an Azure Bot Go to azure.portal.com\nSelect New resource from home page.\nSearch for Web App Bot.\n   Select Create and we shall see the below page. Enter below the required details.\n   Once you select create, it will validate and start creating resources, we can see a message in the notification bar.\n   Once completed we should see the below message.\n   Step - Enabling Bot for Calling Next, we would need to enable Teams Channel for this Bot. Please follow the below steps\nGo to the newly created Web App Bot Resource.\n   Select Channels from the left blade and then Teams(in the right blade).   Select the Calling from the left blade and Enable the Calling checkbox.\n   Webhook (for calling) - We will need to enter a webhook URL (an API endpoint) which will be called when an event will occur in Teams meeting where Bot is also a participant.\nFor now, we can keep empty, we will add this later, for debugging purposes this can also be ngrok url or APP service URL in the below format. App service is already provisioned in our previous step where we have to take the domain and append /api/calling.\nhttps://gameetingbotdemo.azurewebsites.net/api/calling\nStep - Create Teams Bot In this step, we will create a bot that will have a webhook on which the meeting activities would be posted in JSON and from here we can use the JSON object to dump the information to the choice of your database.\nWe will be using yo teams to generate our Node JS Based Bot Solution.\nGo to Node JS command prompt and type,\nyo teams It will ask you series of questions, you can select as per the below screenshot.\n   How to get Microsoft App ID We can get this app ID from portal.azure.com. Go to Web App Bot Resource(which we created in the previous step).\nSelect configuration, and in the right blade you will find MicrosoftAppId in Application settings.\n   Please make sure you select yes to the question \u0026ldquo;Do you want to include bot calling support?\u0026rdquo;\nStep - Modify Code to log request object in the console For the sake of simplicity, we will just log the request body object which webhook receives when any event happens in Teams meeting. We can expand this to store the body object in the Database.\nGo to \\meetingbot\\src\\app\\meetingBot.ts\nModify /api/calling endpoint code to below,\n/** * Webhook for incoming calls */ @BotCallingWebhook(\u0026#34;/api/calling\u0026#34;) public async onIncomingCall(req: express.Request, res: express.Response) { console.log(\u0026#34;Incoming call\u0026#34;); console.log(JSON.stringify(req.body)); // TODO: Implement authorization header validation  // TODO: Add your management of calls (answer, reject etc.)  // default, send an access denied  // res.sendStatus(200); } Step - Modify API Permission in Azure AD APP Registration As we have created an Azure web app Bot, we can see that a default Azure AD App Registration would have been created.\nGo to portal.azure.com -\u0026gt; Active Directory -\u0026gt; Select APP Registration from left blade.\nWe can see an App with our Bot name here.\n   Select this App, from the Left blade select API Permission, and provide the below Application permissions.\n   We would be calling below GRAPH API document at https://docs.microsoft.com/graph/api/application-post-calls?view=graph-rest-1.0\u0026amp;tabs=http which states the above permissions.\nStep - Create Client Secret We will need to create a client secret to calls the above graph API. From the left blade, select Certificate and secrets, select new select secret and note down this secret somewhere safely. We will use this later.\n   Also, note client Id and Tenant Id from the Overview tab.\nStep - Create PowerAutomate to call the Graph API to add Bot to Teams Meeting Now that we have all the pieces created, we will call GRAPH API from Power Automate to Add Bot to the Teams meeting.\nEnd Point to be called - https://graph.microsoft.com/v1.0/communications/calls\nMethod type - Post\nSample Request Body\n{ \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.call\u0026#34;, \u0026#34;callbackUri\u0026#34;: \u0026#34;\u0026lt;span style=\u0026#34;color: #0000ff;\u0026#34;\u0026gt;https://bot.contoso.com/callback\u0026lt;/span\u0026gt;\u0026#34;, \u0026#34;requestedModalities\u0026#34;: [ \u0026#34;audio\u0026#34; ], \u0026#34;mediaConfig\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.serviceHostedMediaConfig\u0026#34;, \u0026#34;preFetchMedia\u0026#34;: [ { \u0026#34;uri\u0026#34;: \u0026#34;https://cdn.contoso.com/beep.wav\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;f8971b04-b53e-418c-9222-c82ce681a582\u0026#34; }, { \u0026#34;uri\u0026#34;: \u0026#34;https://cdn.contoso.com/cool.wav\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;86dc814b-c172-4428-9112-60f8ecae1edb\u0026#34; } ], }, \u0026#34;chatInfo\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.chatInfo\u0026#34;, \u0026#34;threadId\u0026#34;: \u0026#34;\u0026lt;span style=\u0026#34;color: #0000ff;\u0026#34;\u0026gt;19:meeting_Win6Ydo4wsMijFjZS00ZGVjLTk5MGUtOTRjNWY2NmNkYTFm@thread.v2\u0026lt;/span\u0026gt;\u0026#34;, \u0026#34;messageId\u0026#34;: \u0026#34;0\u0026#34; }, \u0026#34;meetingInfo\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.organizerMeetingInfo\u0026#34;, \u0026#34;organizer\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.identitySet\u0026#34;, \u0026#34;user\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.identity\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;\u0026lt;span style=\u0026#34;color: #0000ff;\u0026#34;\u0026gt;5810cede-f3cc-42eb-b2c1-e9bd5d53ec96\u0026lt;/span\u0026gt;\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Bob\u0026#34;, \u0026#34;tenantId\u0026#34;:\u0026#34;\u0026lt;span style=\u0026#34;color: #0000ff;\u0026#34;\u0026gt;86dc81db-c112-4228-9222-63f3esaa1edb\u0026lt;/span\u0026gt;\u0026#34; } }, \u0026#34;allowConversationWithoutHost\u0026#34;: true }, \u0026#34;tenantId\u0026#34;:\u0026#34;\u0026lt;span style=\u0026#34;color: #0000ff;\u0026#34;\u0026gt;86dc81db-c112-4228-9222-63f3esaa1edb\u0026lt;/span\u0026gt;\u0026#34; }  Reference URL - https://docs.microsoft.com/graph/api/application-post-calls?view=graph-rest-1.0\u0026amp;tabs=http#exam...\nHere I have highlighted the values which we have to replace according to our setup and team meeting. Below is how you will get this information.\ncallbackUri - This has to be the endpoint of your bot API from the portal.azure. If you have noticed in the previous step we have modified the code of endpoint \u0026lsquo;/api/calling\u0026rsquo;\nFor demo purposes, we will use ngrok URL after running our code and once we have API published to Azure, we can use a permanent URL also. This would be basically\n\u0026lt;appserviceurl\u0026gt;/api/calling :\nExample(hosted on Azure) - https://gameetingbotdemo.azurewebsites.net/api/calling\nExample(ngrok url) - https://ffe966ce902d.ngrok.io/api/calling\nAll other attributes values, we have to extract from Teams meeting URL\nhttps://teams.microsoft.com/l/meetup-join/19%3ameeting_NzI0NTkwMDUtY2FjMy00YjJmLThjOGEtMzg0ZDNhMzNmN...\nIf you decode this url we will get human readable url like below.\nhttps://teams.microsoft.com/l/meetup-join/19:meeting_NzI0NTkwMDUtY2FjMy00YjJmLThjOGEtMzg0ZDNhMzNmNDF...{\u0026ldquo;Tid\u0026rdquo;:\u0026ldquo;5bac9eb0-1e6b-463d-8dbb-6ba2477914b9\u0026rdquo;,\u0026ldquo;Oid\u0026rdquo;:\u0026ldquo;cd15fc37-4694-4f34-811f-965ca5cc586a\u0026rdquo;}\nThreadId - Marked in orange in the above URL is our ThreadId, this is a unique meeting Id that is generated for every meeting.\nTenantId - Marked in blue is our Tenant Id from where the meeting is organized.\nuser.id -Marked in green is objectID which is merely Organizer User Id.\nNow that we have all the required information, let us go to Power Automate to create a new flow. I will be using Manually trigger flow for sake of the demo. We will use the above meeting URLs value in the request body. To make a Graph API Call, we will use HTTP action(premium).\nThe first thing Create variables of all the different dynamic values we have to pass. Initialize it with the default value from the above URL. Refer to the screenshot below.\n   Add action HTTP and configure as below.\n      Select the Advanced option and select Active Directory OAuth. Here you have to add the client Id and client secret which we noted in the above steps from the Azure Ad App Registration screen.\n   Step - Using ngRok to Start the API End Point Go to command prompt and project path and run\ngulp ngrok-serve Once it runs successfully, it will create a temporary ngrok domain URL which we have to use in the Power Automate variable \u0026ldquo;CallingAPIEndPointURL\u0026rdquo;.\n   Step - Add ngrok URL in Azure Web App Bot Calling Webhook URL As mentioned earlier we will also have to add this temporary URL(while we are in development) to Teams Channel in our Azure Bot. In the published version, this will be according to our app service URL.\n   Step - Let\u0026rsquo;s test Now that we have our API endpoint ready listening to a particular URL, let us run PowerAutomate to add Bot to this Team meeting. Once you trigger the flow and if its runs successfully, we will notice some logging happening in our node js command prompt.\nIt takes on around 2 mins before we will receive the request body object in the webhook. We will receive the same response for every event, this is documented in the URL\nhttps://docs.microsoft.com/graph/api/application-post-calls?view=graph-rest-1.0\u0026amp;tabs=http#exam...\n   Below are some notes based on my experience.\n The first response we will receive with the state \u0026ldquo;establishing\u0026rdquo; the second response we will receive with state \u0026ldquo;established\u0026rdquo;, which means the bot is added to Meeting. Now on every event which will occur in teams meeting like for e.g., participants join, left, someone mutes/unmutes themselves, etc... we will receive a current roster of meeting. By current roster I mean we will receive the list of current participants and its information, we will always get the current list of participants, the response does not say who joined, who left. Basically, it gives us a current snapshot of the meeting when the webhook is has received a response.  Below is a sample of JSON which we receive when someone joins. { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.commsNotifications\u0026#34;, \u0026#34;value\u0026#34;: [ { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.commsNotification\u0026#34;, \u0026#34;changeType\u0026#34;: \u0026#34;updated\u0026#34;, \u0026#34;resource\u0026#34;: \u0026#34;/app/calls/\u0026lt;span style=\u0026#34;color: #0000ff;\u0026#34;\u0026gt;ed1f5500-9a1f-4c02-953e-13cc0dc32d2c\u0026lt;/span\u0026gt;/participants\u0026#34;, \u0026#34;resourceUrl\u0026#34;: \u0026#34;/communications/calls/ed1f5500-9a1f-4c02-953e-13cc0dc32d2c/participants\u0026#34;, \u0026#34;resourceData\u0026#34;: [ { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.participant\u0026#34;, \u0026#34;info\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.participantInfo\u0026#34;, \u0026#34;identity\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.identitySet\u0026#34;, \u0026#34;user\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.identity\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;12e52958-60b9-425a-8e53-628013cb378a\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Parth Patel\u0026#34;, \u0026#34;tenantId\u0026#34;: \u0026#34;5bac9eb0-1e6b-463d-8dbb-6ba2477914b9\u0026#34;, \u0026#34;identityProvider\u0026#34;: \u0026#34;AAD\u0026#34; } }, \u0026#34;endpointType\u0026#34;: \u0026#34;default\u0026#34;, \u0026#34;languageId\u0026#34;: \u0026#34;en-us\u0026#34;, \u0026#34;platformId\u0026#34;: \u0026#34;27\u0026#34;, \u0026#34;clientVersion\u0026#34;: \u0026#34;CallSignalingAgent (27/1.4.00.2879//;release_renarsl/backportsR38NR.2020.38.01.34;releases/CL2020.R38)\u0026#34; }, \u0026#34;mediaStreams\u0026#34;: [ { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.mediaStream\u0026#34;, \u0026#34;mediaType\u0026#34;: \u0026#34;audio\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;main-audio\u0026#34;, \u0026#34;sourceId\u0026#34;: \u0026#34;12\u0026#34;, \u0026#34;direction\u0026#34;: \u0026#34;sendReceive\u0026#34;, \u0026#34;serverMuted\u0026#34;: false }, { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.mediaStream\u0026#34;, \u0026#34;mediaType\u0026#34;: \u0026#34;video\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;main-video\u0026#34;, \u0026#34;sourceId\u0026#34;: \u0026#34;13\u0026#34;, \u0026#34;direction\u0026#34;: \u0026#34;receiveOnly\u0026#34;, \u0026#34;serverMuted\u0026#34;: false }, { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.mediaStream\u0026#34;, \u0026#34;mediaType\u0026#34;: \u0026#34;videoBasedScreenSharing\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;applicationsharing-video\u0026#34;, \u0026#34;sourceId\u0026#34;: \u0026#34;23\u0026#34;, \u0026#34;direction\u0026#34;: \u0026#34;receiveOnly\u0026#34;, \u0026#34;serverMuted\u0026#34;: false }, { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.mediaStream\u0026#34;, \u0026#34;mediaType\u0026#34;: \u0026#34;data\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;data\u0026#34;, \u0026#34;sourceId\u0026#34;: \u0026#34;24\u0026#34;, \u0026#34;direction\u0026#34;: \u0026#34;sendReceive\u0026#34;, \u0026#34;serverMuted\u0026#34;: false } ], \u0026#34;isMuted\u0026#34;: false, \u0026#34;isInLobby\u0026#34;: false, \u0026#34;publishedStates\u0026#34;: [ ], \u0026#34;meetingRole\u0026#34;: \u0026#34;presenter\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;416cc5c8-4f8c-453e-a688-10ec10aa8e17\u0026#34; }, { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.participant\u0026#34;, \u0026#34;info\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.participantInfo\u0026#34;, \u0026#34;identity\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.identitySet\u0026#34;, \u0026#34;application\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.identity\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;9aee55fc-4a43-42af-b3ca-9ec54a087e94\u0026#34;, \u0026#34;tenantId\u0026#34;: \u0026#34;5bac9eb0-1e6b-463d-8dbb-6ba2477914b9\u0026#34;, \u0026#34;identityProvider\u0026#34;: \u0026#34;AAD\u0026#34; } }, \u0026#34;endpointType\u0026#34;: \u0026#34;default\u0026#34;, \u0026#34;clientVersion\u0026#34;: \u0026#34;GAMeetingBotDemo (appid:9aee55fc-4a43-42af-b3ca-9ec54a087e94)\u0026#34; }, \u0026#34;mediaStreams\u0026#34;: [ { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.mediaStream\u0026#34;, \u0026#34;mediaType\u0026#34;: \u0026#34;audio\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;main-audio\u0026#34;, \u0026#34;sourceId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;direction\u0026#34;: \u0026#34;sendReceive\u0026#34;, \u0026#34;serverMuted\u0026#34;: false } ], \u0026#34;isMuted\u0026#34;: false, \u0026#34;isInLobby\u0026#34;: false, \u0026#34;publishedStates\u0026#34;: [ ], \u0026#34;meetingRole\u0026#34;: \u0026#34;presenter\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;35733c0a-7979-478e-8f12-4a42501f17ec\u0026#34; }, { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.participant\u0026#34;, \u0026#34;info\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.participantInfo\u0026#34;, \u0026#34;identity\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.identitySet\u0026#34;, \u0026#34;user\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.identity\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;cd15fc37-4694-4f34-811f-965ca5cc586a\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Siddharth Vaghasia\u0026#34;, \u0026#34;tenantId\u0026#34;: \u0026#34;5bac9eb0-1e6b-463d-8dbb-6ba2477914b9\u0026#34;, \u0026#34;identityProvider\u0026#34;: \u0026#34;AAD\u0026#34; } }, \u0026#34;endpointType\u0026#34;: \u0026#34;default\u0026#34;, \u0026#34;languageId\u0026#34;: \u0026#34;en-US\u0026#34;, \u0026#34;clientVersion\u0026#34;: \u0026#34;SkypeSpaces/1415/1.0.0.2021012547/os=windows; osVer=10; deviceType=computer; browser=chrome; browserVer=87.0/TsCallingVersion=2020.48.01.8/Ovb=69fa6bdf9f79d2b0267e5549b4b79c54ef9fb06b\u0026#34; }, \u0026#34;mediaStreams\u0026#34;: [ { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.mediaStream\u0026#34;, \u0026#34;mediaType\u0026#34;: \u0026#34;audio\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;main-audio\u0026#34;, \u0026#34;sourceId\u0026#34;: \u0026#34;3\u0026#34;, \u0026#34;direction\u0026#34;: \u0026#34;sendReceive\u0026#34;, \u0026#34;serverMuted\u0026#34;: false }, { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.mediaStream\u0026#34;, \u0026#34;mediaType\u0026#34;: \u0026#34;video\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;main-video\u0026#34;, \u0026#34;sourceId\u0026#34;: \u0026#34;4\u0026#34;, \u0026#34;direction\u0026#34;: \u0026#34;receiveOnly\u0026#34;, \u0026#34;serverMuted\u0026#34;: false }, { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.mediaStream\u0026#34;, \u0026#34;mediaType\u0026#34;: \u0026#34;videoBasedScreenSharing\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;applicationsharing-video\u0026#34;, \u0026#34;sourceId\u0026#34;: \u0026#34;10\u0026#34;, \u0026#34;direction\u0026#34;: \u0026#34;receiveOnly\u0026#34;, \u0026#34;serverMuted\u0026#34;: false } ], \u0026#34;isMuted\u0026#34;: true, \u0026#34;isInLobby\u0026#34;: false, \u0026#34;publishedStates\u0026#34;: [ ], \u0026#34;meetingRole\u0026#34;: \u0026#34;organizer\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7a863667-4e82-48e4-bbec-fb3a5feba132\u0026#34; } ] } ] } If you notice in the above JSON object, it is giving us 3 users including the bot itself and its attributes like the user is presenter, muted, is in the lobby, etc, userid and display name. Also, the guide marked in blue is basically a unique call-id for a particular session. This can help us identify participants in a particular session of the meeting because we can use the same meeting URL multiple times. Every time a meeting URL is used a new call-id is generated for that session.\nWe can dump this JSON object every time we receive JSON object in the webhook and then we will have to manually write logic to calculate, who joined when left, etc... Ideally use this unstructured data and store it in structure as participant information.\nHope this helps...Happy coding..!!\nP.S. - This article was originally published at this link\n","image":"https://pnp.github.io/blog/post/azure-meeting-bot-to-capture-meeting-participants-information/images/SiddharthVaghasia_0-1630435722443_hu0a427a843d363a3cd6e3abea1add011d_60475_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/azure-meeting-bot-to-capture-meeting-participants-information/","tags":["Microsoft Teams","Azure"],"title":"Azure Meeting Bot To Capture Meeting Participants Information"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from September 9th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary A reminder to tune in each Tuesday for the new Microsoft 365 platform community call. Don\u0026rsquo;t forget to sign up and attend training events hosted by Sharing is Caring. Let\u0026rsquo;s celebrate your work, register for the PnP Recognition Program. SharePoint Framework 1.13 public developer preview - new version of SPFx v1.13 - Beta.20, is out now! Also released as you read this - PnPjs Client-Side Libraries v2.9.0. **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago) PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.12.1 GA, v1.13 Beta Viva.20 PnPjs Client-Side Libraries v2.9.0 v3.0.0 developments underway CLI for Microsoft 365 v3.13.0 Preview, v4.0.0 Preview v4.0.0 GA to release end September Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.3.0 (SPFx v1.12.1) Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1) PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.3.0 \u0026amp; v3.21.0 Release expected week of Sept 13th\nTwo PnP SPFx samples were delivered in the last 2 weeks as well. There is a new samples repository for Adaptive Card Extensions (ACE) - aka.ms/spfx-aces. Thank you all for your contributions! The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place as always in chat throughout the call. Thank you everybody for being part of this call, the community, a tweet, a blog post, and the solution to your customer\u0026rsquo;s needs. Actions  Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:   First Time Contributor Session \u0026ndash; September 21st (EMEA, APAC \u0026amp; US friendly times available)\n  Community Docs Session \u0026ndash; October 5th   PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS\n  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; September 28th   Ask Me anything (AMA) \u0026ndash; Script Samples \u0026ndash; September 14th\n  Ask Me Anything (AMA) \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th\n  Ask Me Anything (AMA) \u0026ndash; List Formatting \u0026ndash; October 5th\n  First Time Presenter \u0026ndash; October 12th\n  More than Code with VSCode \u0026ndash; September 14th   Maturity Model Practitioners \u0026ndash; September 21st and every 3rd Tuesday of month, 7:00am PT\n  PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register\n  PnP Buddy System \u0026ndash; Request a Buddy\n   Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Hyperscript Tagged Markup (HTM) Templating \u0026ndash; approaches to web part UI development \u0026ndash; use a UI framework or use a templating system. Option C: React HTM Templating web part - uses Fluent UI components written in React, no wrapper required. Renders the React control as a template. Essentially JS code evaluated through the Function constructor. Review properties, HTML editing, and code in the demo of this PnP sample.   Modernize your SharePoint Framework projects \u0026ndash; see steps to take an existing SPFx project using TSLint and move it over to ESLint and dump IE11 at same time. Install and configure ESLint, and update gulp tasks - effectively telling TypeScript complier to use modern js target and update referenced libraries. Then appreciate Andrew\u0026rsquo;s ESLint preset for SPFx that automates the update! Bonus - updating yields smaller and faster bundles.\n  Building advanced image gallery experience with SharePoint Framework \u0026ndash; this Lightbox Image Gallery web part, connects to SharePoint document/picture library, handles folders/sub-folders, has breadcrumb navigation, and lightbox-style image browsing. Works with Viva desktop in Microsoft Teams as well. Developed using SharePoint Framework (SPFx) and PnPjs. Code structure is reviewed. From property pane, select document or image library to connect. Demonstrates how with little code and using PnP components, one can deliver an elegant result!   SPFx extension samples: (https://aka.ms/spfx-extensions)\n Share to Teams - Kunj Sangani | @sanganikunj  SPFx web part samples: (https://aka.ms/spfx-webparts)\n At a Glance - Anoop Tatti | @anooptells (Link to My OneDrive sample is correct)  Thank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) @vesajuvonen - 6:24 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) @jfj1997 \u0026ndash; 7:52 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 9:05 PnP SPFx Controls - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 9:46 PnP Modern Search - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 10:39  PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 11:25  Demos   Demo: Hyperscript Tagged Markup (HTM) Templating \u0026ndash; Fabio Franzini | @franzinifabio \u0026ndash; 13:15\n  Demo: Modernize your SharePoint Framework projects \u0026ndash; Andrew Connell (Voitanos) | @andrewconnell \u0026ndash; 26:38\n  Demo: Building advanced image gallery experience with SharePoint Framework \u0026ndash; Yannick Reekmans (Qubix) | @YannickReekmans \u0026ndash; 41:26\n  Resources Additional resources around the covered topics and links from the slides.\n  D1: Sample - React HTM (Hyperscript Tagged Markup) Templating   D2: Article - Get with the times \u0026amp; ditch TSLint in favor of ESLint in SharePoint Framework projects   D2: Article - Ditch TSLint for ESLint in SPFx projects in one simple step   D2: Article - Optimize bundles by disabling IE11 support in SPFx projects   D3: Article - SPFx Lightbox Image Gallery web part, v1.0.0   D3: Repo - SharePoint Lightroom Image Gallery Web Part\n  D3: Library - PnP/PnPjs   D3: Controls - Reusable React controls for your SharePoint Framework solutions   D3: Package - react wrapper for: lightgallery.js   General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned  SharePoint dev documentation SharePoint dev issue list Upcoming calls | Recurrent invites: (Subject to Updates in September) Microsoft 365 platform call \u0026ndash; September 14th at 8:00 am PDT | https://aka.ms/m365-dev-call Power Apps monthly call\u0026ndash; September 15th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call \u0026ndash; September 16th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Identity Platform call \u0026ndash; September 16th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar SharePoint Framework call \u0026ndash; September 23rd at 7:00 am PDT | https://aka.ms/spdev-spfx-call Office add-in monthly call \u0026ndash; October 13th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; October 14th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall  PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n SharePoint Framework engineering update from Microsoft Talk about PnP JavaScript Core libraries Office 365 CLI Updates SPFx reusable controls PnP SPFx Yeoman generator Share code samples and best practices Possible engineering asks for the field - input, feedback, and suggestions Cover any open questions on the client-side development Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 10th of September 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-9th-of-september-2021/images/spfx-call-9th-sep-recording_huf82cf45a9459330fa1858db832521871_339229_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-9th-of-september-2021/","tags":[],"title":"SharePoint Framework Community Call -- 9th of September, 2021"},{"categories":["Community post"],"contents":"[Ever wondered how you could get started in contributing to open-source projects? Let\u0026rsquo;s say you would like to contribute to an open-source project and the contributing guide tells you that you would need tofork a repository and you have no idea what this should mean? Fear not, help is on the way and you already opened it. We will also cover how you connect everything in the code editor Visual Studio Code and where you can find like-minded people.]\nWhat are GitHub and Git? Don\u0026rsquo;t confuse Git and GitHub- they are related to each other, but not the same:\n GitHub is website for hosting projects that use Git. Git a software for version control that makes it easy for developers (authors, makers and more) to track even minor (but also big) changes in files.  At the very heart of GitHub, you will find repositories to host your content in. You can invite specific people to collaborate with or open your project for everyone - while still staying in control. Small changes in files can be made on the GitHub.com website. This is very convenient, as it gives you a nice interface and you don\u0026rsquo;t need to store any files on your computer. However, the bigger the change is that you want make, the more you will need a more sophisticated system. For example, if you need to pause your work and want to continue later on, there is no way on the website to save your files without committing them. So, what is a commit and how does that work?\nA commit is a change to one or more files. You save your work by committing it, and git (not GitHub) will create and assign unique ID, which is called hash or SHA. This then allows you to answer questions like:\n Who changed that? (author) What exactly changed? (highlights the changes) Why did this change happen? (reading the commit message (should be a short description what changed and why))  This enables traceability, revertability, and collaboration. Just imagine we would work with code like we did this with Excel sheets and PowerPoint presentations for years\u0026hellip; saving the 2021-09-08-project-deathstar-draft_07-super-important_finalFINAL2.pptx (1) and then mailing copies of copies of that file around 🙄\nAs already mentioned, GitHub is a good way to host your projects, but its website comes with some limitations, as, for example, we can\u0026rsquo;t save this for later but I don\u0026rsquo;t want to commit yet, and most probably no one wants to write their code on a website\u0026hellip; it means you can\u0026rsquo;t work offline or with poor connectivity, also, what if you accidentally close the browser tab? What if we could write our code, documentation, more in local files on our computer and then use Git to upload them to GitHub once we are ready? To achieve this, we need a couple of things and this article will cover all of that:\nInstall Git First, we will install Git for Windows, if you work on a macOS, download Git for macOs. To continue with Windows,\n Open Git for Windows Download the latest version (64-bit or 32-bit). Optional: If you are not sure what you need, you can check it:  Press WIN key and type about Select about your PC, it shows you the System type in the device specifications   Open the downloaded file Confirm the User Account Control window by selecting Yes In the Git Setup window, select Next for 6 times, Git will now extract the files Select Finish  Create a Git account Now let\u0026rsquo;s first check if you installed Git correctly\n Open PowerShell or PowerShell in the terminal of Visual Studio Code. (If you don\u0026rsquo;t have VS Code installed please install it- it\u0026rsquo;s an amazing Code editor.) Type git --version in a directory of your choice You should see the installed version as a response  If so, you can proceed!\n Set your user name with git config --global user.name \u0026quot;\u0026lt;your-first-name\u0026gt; \u0026lt;your-last-name\u0026gt;\u0026quot; - replace the \u0026lt;placeholders\u0026gt; with the real values Set your email address with git config --global user.email \u0026quot;\u0026lt;your-email-here\u0026gt;\u0026quot; - replace the \u0026lt;placeholder\u0026gt; with the real values  Congrats, you now have a Git account.\nTo use Git, we will either need a GUI (graphical user interface) client or a CLI (command-line interface). This is somehow a matter of personal preference, but I found GUI clients a bit more confusing.\nBefore we learn some Git commands, lets head over to GitHub and get you an account if you don\u0026rsquo;t already have one.\nCreate a GitHub account  Open github.com Select Sign up Type in your email address when prompted Select Continue Type in a password Select Continue GitHub will generate a username for you, but you may change it Select Continue Type y if you want product updates per mail, else type n Select Continue Verify that you are a human by selecting Start puzzle Select the correct image that meets the criteria described - maybe you need to do this twice. Select Create account Type in the 6 digit code that you received per mail Optional: personalize your experience      Create a repository Now create your first repository and make it available for you in VSCode:\n Select Create repository Notice that you will be the owner of said repository Type in a name for the repository Select add a README file Select Create repository Notice that this is already a commit, and more specific the initial commit - If you select 1 commit you can see the the changes made:  additions highlighted in green deletion highlighted in red (this time, we only added something and that was the name of the repository) author who changed the file (your account) time of when the changes were made hash of the commit       Now that you have your own repository, make it available on your computer. We do this by cloning the repository:\nClone the repository  Select Code Copy the URL (it is https://github.com/\u0026lt;YOUR GITHUB ACCOUNT\u0026gt;/\u0026lt;YOUR REPOSITORY NAME\u0026gt;.git)       Open the terminal in VS Code navigate to a directory where you want to clone the repository (you can use cd \u0026lt;PATH OF YOUR DIRECTORY\u0026gt; for this) type git clone \u0026lt;COPIED URL HERE\u0026gt;  This will create a copy of your remote repository in that folder. Now navigate to your local copy with cd \u0026lt;YOUR REPOSITORY NAME HERE\u0026gt; Open the project in Visual Studio code by typing code . in PowerShell or terminal in VS Code (yes, there is a ``between code and .)\nWork with your clone Now either add some files or change the only existing file (it\u0026rsquo;s the README.md). When you completed your changes, you want 3 things:\n add the files you want to commit to a staging area (and only those) commit the files with a descriptive commit message push the files so that the changes will be reflected on the GitHub website as well.  As you probably already assumed, there are some specific command to achieve this:\n to add a specific file to that staging area from which you can commit it (without touching the other files that are not ready to be committed now), type git add \u0026lt;YOUR FILENAME HERE\u0026gt; for a specific file or git add \u0026lt;YOUR PATH HERE\u0026gt; for a specific directory. If you want to add all changes to the staging area, type git add . (yes, there is a ``between add and .) to commit all files that are now in staging area, type `git commit -m \u0026quot;\u0026quot; to push your changes, type git push  Your changes are online 🎉\nIf you now use both, the GitHub website and your local files, the changes that you make remote won\u0026rsquo;t be reflected automatically in the local files. To do that, you will need to type git pull to pull all the changes that were made remote. If you forget that, or if others were working on your repository and you want to push next time, git will tell you:\n! [rejected] main -\u0026gt; main (fetch first) error: failed to push some refs to 'https://github.com/M365Princess/MyFirstRepository' hint: Updates were rejected because the remote contains work that you do hint: not have locally. This is usually caused by another repository pushing hint: to the same ref. You may want to first integrate the remote changes hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details.  Read the message carefully and go ahead with git pull to be up to date in your local files. You can now accept the maybe conflicting changes in the editor and resolve the situation.\n   Then use the commands git commit and git push again. (You can always access your last commands with the arrow-up and arrow-down key.) You should see a response that looks about like this\n   Please note that you see two abbreviated hashs, with which you could also compare what happened in the last commit compared to the previous one: Type git diff \u0026lt;FIRST HASH HERE\u0026gt; \u0026lt;SECOND HASH HERE\u0026gt;\nContribute to open-source projects But what if you want to contribute to a repository of which you aren\u0026rsquo;t the owner? It\u0026rsquo;s possible to work locally in those projects as well, but we need to do a couple of more steps:\nFork the repository as the repository owner would not want you to directly commit to their repository, you will first create a remote copy - this is then called your fork. To do that:\n open the repository that you want to contribute to make sure you understand the contributing guide, in most cases, you will be asked to fork the repository: Select Fork, the URL of your fork is now https://github.com/\u0026lt;YOUR GITHUB ACCOUNT\u0026gt;/\u0026lt;REPOSITORY NAME\u0026gt;/  Now clone this repository locally.\nAdd Upstream You will now want to make sure, that all your contributions point to the original repository, which is why you want to add an upstream to it:\n navigate to the folder where your cloned repository is located type git remote add upstream \u0026lt;ORIGINAL REPOSITORY URL HERE\u0026gt; to check if everything works correctly, type git remote -v, you should see this output:  origin https://github.com/\u0026lt;YOUR ACCOUNT HERE\u0026gt;/\u0026lt;REPOSITORY NAME\u0026gt;.git (fetch) origin https://github.com/\u0026lt;YOUR ACCOUNT HERE\u0026gt;/\u0026lt;REPOSITORY NAME\u0026gt;.git (push) upstream https://github.com/\u0026lt;ORIGINAL ACCOUNT HERE\u0026gt;/\u0026lt;REPOSITORY NAME\u0026gt; (fetch) upstream https://github.com/\u0026lt;ORIGINAL ACCOUNT HERE\u0026gt;/\u0026lt;REPOSITORY NAME\u0026gt; (push) Some repository owners will ask you in the contribution guide to create a new branch for the feature you want to add - you can create and switch to that new branch with git checkout -b \u0026lt;YOUR BRANCH NAME HERE\u0026gt;. Like in your own repository, you can work on the local files and commit and push your changes to your remote fork.\nPull request You will now want to (kindly) ask the repository owner/ maintainer to pull in your changes. You do that by doing a pull request:\n Open the original repository Select Pull requests Select New pull request Select compare across forks Select your fork from the head repository      fill out the form  working together A maintainer will review your pull request and\n reach out to you with a comment (you will get a notification about that) request changes or merge your changes. This means that they approved your work and that your changes will be added to the original repository.  Additional resources If you need more help for your first contributions, have questions or just want to connect with like-minded people, and for everyone who is more into interactive sessions: Within Microsoft 365 PnP, I am part of the Sharing is Caring initiative, who aims to lower barriers for new contributors. We run a couple of sessions, please check out Sharing is Caring You can also have a look into the documentation of GitHub and Git- this article should only get you started, not replace reading the docs. Open-source is fun and very rewarding and I hope that this article made your start a little bit easier! Please reach out if you have questions, comments, or want to connect.\nSharing is Caring\n","image":"https://pnp.github.io/blog/post/how-to-get-started-with-github-and-git/images/github-new_hu53536dc9e27fae8c32e7fd7cc0a77f05_444014_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-get-started-with-github-and-git/","tags":[],"title":"How to get started with GitHub and Git"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from September 7th, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. Call Summary\nWelcome to the weekly call focused on capabilities of the Microsoft 365 platform. New to Microsoft 365 Platform development? You are encouraged to register at Microsoft 365 Developer Program for free E5 developer tenant and other assets. Visit the new Microsoft 365 sample gallery with more than 500 samples from Microsoft and community. Sign up and attend one of a growing list of events hosted by Sharing is Caring in September. Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). View the Microsoft 365 Developer blog for the latest news in last 7 days from Microsoft on Microsoft 365 platform. The host of this call was Brian T. Jackett (Microsoft) | @BrianTJackett. Q\u0026amp;A takes place in chat throughout the call.\nMicrosoft 365 Platform News Flash\n  Updates for Microsoft Teams bots in Multi-Geo environments\n  Changes to the Microsoft 365 usage reports API\n  Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; September 21st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; October 5th  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; September 28th Ask me anything \u0026ndash; Script Samples \u0026ndash; September 14th Ask Me Anything \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th First Time Presenter \u0026ndash; October 12th More than Code with VSCode \u0026ndash; September 14th  Maturity Model Practitioners \u0026ndash; September 21st and every 3rd Tuesday of month, 7:00am PT PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call\n  Call attention to your great work by using the #PnPWeekly on Twitter. Thank you for your continued contributions of your time and talent to the betterment of this community. Stay well. See you soon.   Demos Demos delivered in this session\n  Microsoft Graph Toolkit Latest Releases \u0026ndash; 2 key new features in v2.3 are Teams MSAL2 Authentication Provider (built on top of MSAL-browser using more secure Authorization Code Flow with PKCE, supports interactive login and SSO) and a file upload feature added to File List component (allows users to upload items to a location in OneDrive/SharePoint). This is the first MGT release where all major features were contributed by community!\n  Getting started with Microsoft Lists templates \u0026ndash; how to and the journey ahead. Rolling out APIs and Tools late September to enable community to create, publish and store custom list templates (lists from your organization). 8 OOB templates today, help create 40+ by year end. Use PowerShell to connect to SPOService, see Cmdlets to extract json from an existing list and use in list template design. Upload/expose new template on site. Topic related Q\u0026amp;A.\n  Introduction to Microsoft Graph CLI \u0026ndash; learn about a non-PowerShell, cross platform alternative command line experience for accessing the Graph. The development journey \u0026ndash; today - Public Preview v0.1.6 (Windows) to GA (Win, Mac, Linux, Docker). CLI demo - get the CLI msi from the Repo, install it, help to see commands, authenticate against Graph, use scopes, list users in tenant, specify output parameters \u0026ndash; select or JsonPath queries.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Brian T. Jackett (Microsoft) | @BrianTJackett \u0026ndash; 4:05 Demo: Microsoft Graph Toolkit Latest Releases \u0026ndash; Elise Yang (Microsoft) | @elisenyang, André Lage (Datalynx AG) | @aaclage \u0026ndash; 6:20 Demo: Getting started with Microsoft Lists templates \u0026ndash; Harini Saladi (Microsoft) | @HariniSaladi \u0026ndash; 14:32 Demo: Introduction to Microsoft Graph CLI \u0026ndash; Roina Ochieng (Microsoft) | @roinochieng, Samwel Kanda (Microsoft) | @samwelkanda \u0026ndash; 30:17  Resources Additional resources around the covered topics and links from the slides.\n  Repo - Microsoft Graph Toolkit   Documentation - Microsoft Graph Toolkit: UI Components and Authentication Providers for Microsoft Graph   Sandbox \u0026ndash; Microsoft Graph Toolkit Playground   Resources - Microsoft Lists Resource Center   Documentation - Creating custom list templates |\n  Repo - Microsoft Graph CLI   PnP Weekly \u0026ndash; Episode 133 (September 6th) with Helsinki-based Software Designer and MVP - Gautam Sheth (Valo) | @gautamdsheth | video | podcast\n  Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) |\n@jthake and Paul Schaeflein (Addin365) | @paulschaeflein\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Office add-in monthly call \u0026ndash; September 8th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  SharePoint Framework call \u0026ndash; September 9th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Adaptive Cards monthly call \u0026ndash;September 9th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Microsoft 365 platform call \u0026ndash; September 14th at 8:00 am PDT | https://aka.ms/m365-dev-call\n  Power Apps monthly call\u0026ndash; September 15th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  M365 General Dev call \u0026ndash; September 16th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Microsoft Identity Platform call \u0026ndash; September 16th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members.    More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 8th of September 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-7th-of-september-2021/images/7th-sep-platform-call-recording_hu3c93dac9e7e228af834eec70cabc3f72_531440_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-7th-of-september-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 7th of September, 2021"},{"categories":["Community post"],"contents":"Want to learn about how to leverage Fusion Teams and the Power Platform to build applications faster and with less code? Join our experts at #PowerfulDevsConf on Sep 14, 8\u0026ndash;11:30 PT (GMT+8). You\u0026rsquo;ll hear from community members, Microsoft MVP\u0026rsquo;s and Microsoft execs. This is a LIVE event with a variety of topics ranging from custom connectors to ALM and more! Scott Guthrie will kick things off with a fireside chat on why code-first devs should embrace the Power Platform. And we have an amazing closing keynote with Charles Lamanna and Amanda Silver as they talk about all the latest and greatest innovations and their take on the future of development. Register now https://aka.ms/PowerfulDevsConf21 ","image":"https://pnp.github.io/blog/post/powerful-devs-conference-sept-14th/images/powerful-devs-hero-banner_huee8884aaccdb9f68879e8b7737ec859f_5291484_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/powerful-devs-conference-sept-14th/","tags":[],"title":"Powerful Devs Conference Sept 14th"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Helsinki-based Software Designer and MVP from Valo - Gautam Sheth (Valo) | @gautamdsheth. Topics discussed in this episode include: Gautam\u0026rsquo;s road to be an Microsoft Most Valuable Professional (MVP) and the community work he has done to achieve this award. Gautam also moved recently from India to Finland, so we are discussing the cultural differences and how his life has changed based on this recent move.\n Covering also 18 new articles from Microsoft and the Community from past week!  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n   This session was recorded on Monday, September 6, 2021.   Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.   These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot;  Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\n\\\n Microsoft articles   What\u0026rsquo;s New in Microsoft Teams | August 2021 - Microsoft SharePoint Roadmap Pitstop: August 2021 - Mark Kashman (Microsoft) Microsoft 365 Platform Call \u0026ndash; 31st of August, 2021 - Vesa Juvonen (Microsoft) New public preview version on upcoming SharePoint Framework 1.13 - Microsoft   Community articles   Simulating 429 Throttling in Microsoft Graph API (SharePoint/OneDrive workloads) - Cameron Dwyer (OnePlace Solutions) | @CameronDwyer Add multiple users to a SharePoint Group using single API Call - Arjun Menon (Tata Consulting Services) | @arjunumenon Flexible and powerful logging using PnP Logging in SPFx - Sudharsan Kesavanarayanan (NTT Digital Business Solutions) | @sudharsank Create Report Of Assigned Licenses To Users From Microsoft 365 - Dipen Shah (RapidCircle) | @Dips_365 Browser Local Storage using PnPClientStorage - Sudharsan Kesavanarayanan (NTT Digital Business Solutions) | @sudharsank CLI for Microsoft 365 v3.13 - Waldek Mastykarz (Microsoft) | @waldekm Get verified! Setup git commit signing on Windows - Garry Trinder (Microsoft) | garrytrinder Microsoft Graph Toolkit in a Teams application with yo teams (and SSO) - Markus Möller (Avanade) | @Moeller2_0 Back to school! Time to modernize those SPFx projects! - Andrew Connell (Voitanos) | @andrewconnell Employee Onboarding in Microsoft 365 - Laura Rogers (IW Mentor) | @WonderLaura Demystify Microsoft Viva Connections its extensibility model - Elio Struyf (Struyf Consulting) | @eliostruyf PnP PowerShell \u0026ndash; take control of the service principal permissions - Gautam Sheth (Valo) | @gautamdsheth   Additional resources   Microsoft 365 Extensibility Look Book - https://aka.ms/m365/extensibility  Microsoft 365 Unified Sample Gallery (preview) - https://aka.ms/m365/samples  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp   If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n \u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-133-gautam-sheth-valo/images/pnp-weekly-133_hu4c1e02b60f5fde212cf39d533840cfca_672174_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-133-gautam-sheth-valo/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 133 - Gautam Sheth (Valo)"},{"categories":["Community post"],"contents":"Introduction Many times, the Site is already created, and we need to apply configuration in the existing site to achieve some level of consistency. How can we achieve it?\nTo achieve, this kind of implementation, use site template and site scripts to automate provisioning to the existing modern site or create a new site using site templates which is available in your organization tenant. In the previous version of SharePoint, Site templates were known as site designs. Site templates are a set of configurations that need to apply on a particular site and Site Scripts are JSON files that include an order list that needs to be executed while we apply it on a Specific SharePoint Site.\nLearning Objectives  Create JSON file for Site Scripts Create Power automate Create Site Script using REST Call in Power Automate Create Site Template using REST Call in Power Automate Output  Prerequisite  M365 environment Power automate access requires a license SharePoint Admin Access Permission  SharePoint Administrator Site Collection Administrator Let\u0026rsquo;s get started.    Create JSON file for Site Scripts You need to create JSON files in specific formats to implement SharePoint artifacts in SharePoint Site. Available Action includes. ![Site Script and Site Template In Power Automate.png](images/Site Script and Site Template In Power Automate.png) { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/site-design-script-actions.schema.json\u0026#34;, \u0026#34;actions\u0026#34;: [ { \u0026#34;verb\u0026#34;: \u0026#34;applyTheme\u0026#34;, \u0026#34;themeName\u0026#34;: \u0026#34;Contoso Explorers\u0026#34; }, { \u0026#34;verb\u0026#34;: \u0026#34;createSPList\u0026#34;, \u0026#34;listName\u0026#34;: \u0026#34;Customer Tracking\u0026#34;, \u0026#34;templateType\u0026#34;: 100, \u0026#34;subactions\u0026#34;: [ { \u0026#34;verb\u0026#34;: \u0026#34;setDescription\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;List of Customers and Orders\u0026#34; } ] }, { \u0026#34;verb\u0026#34;: \u0026#34;setRegionalSettings\u0026#34;, \u0026#34;timeZone\u0026#34;: 2, \u0026#34;locale\u0026#34;: 1050, \u0026#34;sortOrder\u0026#34;: 0, \u0026#34;hourFormat\u0026#34;: \u0026#34;12\u0026#34; } ], \u0026#34;version\u0026#34;: 1 }  Each action identifies by its \u0026ldquo;verbName\u0026rdquo; property and inside auction property, you need to configure the things that you want to apply while creating the site or on an existing site. Create Power automate Go to https://portal.office.com and click on Power automate. Select \u0026ldquo;New Flow\u0026rdquo; and Select \u0026ldquo;Instant Cloud Flow\u0026rdquo; Select \u0026ldquo;Manually Trigger Flow\u0026rdquo; and Add Name \u0026ldquo;Create-SiteTemplate-Flow\u0026rdquo; Select Create Button. ![Site Script and Site Template In Power Automate11.jpg](images/Site Script and Site Template In Power Automate11.jpg) Create Site Script using REST Call in Power Automate Initialize variable in power automat to store JSON config.   Select \u0026ldquo;Send an HTTP request to SharePoint\u0026rdquo; from the list of actions.\n   Parameters Site Address - You can select any site Address either it\u0026rsquo;s root or not\nMethod - post\nUrl - /_api/Microsoft.SharePoint.Utilities.WebTemplateExtensions.SiteScriptUtility.CreateSiteScript(Title=\u0026rsquo;\u0026lt;Site Script Title Name\u0026gt;')\nHeaders { \u0026#34;Content-Type\\n\u0026#34;: \u0026#34;application/json;charset=utf-8\u0026#34;, \u0026#34;accept\u0026#34;: \u0026#34;application/json;odata.metadata=minimal\u0026#34;, \u0026#34;odata-version\u0026#34;: \u0026#34;4.0\u0026#34; }  Body\n@{variables(\u0026lsquo;SiteScript\u0026rsquo;)} // Reference of variable that we Initialized before this action. Get Create Script ID and store it in Variable\n  Create Site Template using REST Call in Power Automate    Parameters Site Address - You can select any site Address either it\u0026rsquo;s root or not\nMethod - post\nUrl - /_api/Microsoft.SharePoint.Utilities.WebTemplateExtensions.SiteScriptUtility.CreateSiteDesign Headers\n{ \u0026#34;Content-Type\\n\u0026#34;: \u0026#34;application/json;charset=utf-8\u0026#34;, \u0026#34;accept\u0026#34;: \u0026#34;application/json;odata.metadata=minimal\u0026#34;, \u0026#34;odata-version\u0026#34;: \u0026#34;4.0\u0026#34; } Body\n{ \u0026#34;info\u0026#34;: { \u0026#34;Title\u0026#34;: \u0026#34;\u0026lt;Site Template Title\u0026gt;\u0026#34;, \u0026#34;Description\u0026#34;: \u0026#34;\u0026lt;Site Template Description\u0026gt;\u0026#34;, \u0026#34;SiteScriptIds\u0026#34;: [\u0026#34;@{variables(\u0026#39;ScriptID\u0026#39;)}\u0026#34;], \u0026#34;WebTemplate\u0026#34;: \u0026#34;64\u0026#34; } } The flow looks like as below\n  Output Select the \u0026ldquo;gear\u0026rdquo; Icon in SharePoint Site. Select \u0026ldquo;Apply a site template\u0026rdquo;. ![Site Script and Site Template In Power Automate7.gif](images/Site Script and Site Template In Power Automate7.gif) ","image":"https://pnp.github.io/blog/post/create-site-script-and-site-template-using-power-automate-in/images/Flow2_hu1c092edd4c426400cc9c8413bf2bf3b0_27875_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/create-site-script-and-site-template-using-power-automate-in/","tags":["Power Automate","SharePoint"],"title":"Create Site Script and Site Template Using Power Automate in SharePoint"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary Welcome back from summer holiday! Have a look at Microsoft 365 tenant \u0026ndash; script samples gallery - s*cripts for PowerShell and CLIs. * Sign up and attend one of a growing list of events hosted by Sharing is Caring this month. Announced the PnP Recognition Program. No project releases this week, but as many are back from holidays, you can surely expect releases soon. Open-source project status: (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.6.0 GA, PnP Provisioning Engine Schema v202103 Version 1.7.0 \u0026ndash; Late Summer 2021 PnP .NET Libraries - PnP Core SDK v1.3.0 GA Version 1.4.0 \u0026ndash; Late Summer 2021 PnP PowerShell v1.7.0 GA Yo teams - generator-teams v3.2.0 GA v3.3.0 Preview soonish Yo teams - yoteams-build-core v1.2.0 GA, v1.2.1 Preview Yo teams \u0026ndash; yoteams-deploy v1.1.0 GA, v1.0.1 Preview Yo teams - msteams-react-base-component v3.1.0 Microsoft Graph Toolkit (MGT) v2.2.0 GA Bug fixes and Updates, v2.3.0 later in August\n There are 2 new Microsoft Teams samples this week. Have you visited the Teams Samples wish list? Need an idea for a sample? Consider collaborating with Microsoft Teams Engineering to create a sample and earn a Credly badge. The host of this call was David Warner II (Catapult Systems) @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\nActions   Create a Teams Sample - Microsoft Teams Samples Wish list \u0026ndash; 10 opportunities to share your Teams Dev prowess with the community | [https://aka.ms/teams-sample-wishlist]{.underline}\n  Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; September 21st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; October 5th  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; September 28th  Ask Me anything (AMA) \u0026ndash; Recognition Program \u0026ndash; September 7th Ask Me anything (AMA) \u0026ndash; Script Samples \u0026ndash; September 14th Ask Me Anything (AMA) \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th Ask Me Anything (AMA) \u0026ndash; List Formatting \u0026ndash; October 5th First Time Presenter \u0026ndash; October 12th More than Code with VSCode \u0026ndash; September 14th  Maturity Model Practitioners \u0026ndash; September 21st and every 3rd Tuesday of month, 7:00am PT PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Teams Tab with SSO and Microsoft Graph Toolkit usage - Markus Möller (Avanade) | @Moeller2_0\n  **Teams Tab Single Sign-on (SSO) Sample **(updated) - Doğan Erişen (Microsoft)\n  **Microsoft Power Platform Samples: **(https://aka.ms/powerplatform-samples)\n No new Power Platform samples this week  **Script Samples: ** (https://aka.ms/script-samples)\n No new Script samples this week  Demos Demos delivered in this session\n  SharePoint Approval Workflow Status Tracking with Column Formatting \u0026ndash; create dynamic multi-step expense approval workflow in SharePoint leveraging a Power Automate flow. Very deliberate step-by-step explanation of list creation and of flow/process. Create 2 SharePoint lists \u0026ndash; Expense Types and Expense Reports (with column and view formatting + list form configuration), Add the approval process flow (a sample) to Power Automate, done! Clear visual status in UI to track output and status of workflows.\n  Build your first conversational chatbot for Teams without any development using \u0026ndash; in Bot Framework Composer, use the CoreWithLanguage bot template with triggers calling an Azure Bot. Stephen defines various elements to have before building. Add triggers to new bot \u0026ndash; GetREportsDialog, add OAuth login service connection, store turn.tokens, and install Microsoft.Bot.Components.Graph package for more action options, deploy app to Azure. Create new Microsoft Teams app in App Studio, add the Azure Bot to a Channel.   Updates on the Independent Publisher Connectors for Power Platform \u0026ndash; connectors can be submitted by anyone in GitHub.com and they are subsequently certified by Microsoft. Since July 19th, 8 connectors have been submitted/certified, 11 in process. Quick demo of fun dogs API \u0026ndash; the Placedog connector. A Power Apps Canvas app displays 12 dog photos. Connector functionality - get a dog photo, store it in SharePoint, and make URL available to the Power App.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  PnP .NET library updates - Bert Jansen (Microsoft) @O365bert - 5:57\n  PnP PowerShell - Bert Jansen (Microsoft) @O365bert - 7:30\n  yo Teams updates - Paolo Pialorsi (PiaSys.com) @paolopia - 8:22\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) | beth-panx - 9:23\n  Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German - 11:24\n  Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam - 12:45\n  Demo: SharePoint Approval Workflow Status Tracking with Column Formatting - Reza Dorrani (Catapult) | rdorrani - 15:16\n  Demo: Build your first conversational chatbot for Teams - Stephan Bisser (Solvion) | @stephanbisser - 34:39\n  Demo:\n  Updates on Independent Publisher Connectors for Power Platform - Natalie Pienkowska[ (Microsoft) | @NataliePienkow1 and ]Troy Taylor[ (Hitachi Solutions) | troystaylor - 45:46]\n  Resources Additional resources around the covered topics and links from the slides.\n  Repo \u0026ndash; rdorrani/SharePoint   Playlist - SharePoint List Formatting   [Documentation - ]Bot Framework Composer documentation\n  [[Documentation - ]Add authentication to your Teams bot]\n  Documentation - Create your project   [Connectors - ]Microsoft Power Platform Connectors\n  [Demo - ]Publish a connector to the Power Platform[ \u0026ndash; Natalie Pienkowska (Microsoft) | @NataliePienkow1]\n  [How I Make Power Platform Independent Publisher Custom Connectors - Troy Taylor (Hitachi Solutions) | troystaylor]\n  General resources  Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   Microsoft 365 platform call \u0026ndash; September 7that 8:00 am PDT | https://aka.ms/m365-dev-call\n  Office add-in monthly call \u0026ndash; September 8th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  SharePoint Framework call \u0026ndash; September 9th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Adaptive Cards monthly call \u0026ndash; September 9th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call \u0026ndash; September 15th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft 365 platform call \u0026ndash; September 16th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Microsoft Identity Platform call \u0026ndash; September 16th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;\n   Microsoft 365 PnP team, Microsoft - 3rd of September 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-2nd-of/images/recording-2nd-september-call_hudd9a0d55a1f5b582cc46f2dd4b7c860e_237391_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-2nd-of/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 2nd of September, 2021"},{"categories":["Community post"],"contents":"Introduction Power Automate is a tool that enables you to implement queries without knowing hardcore coding patterns. Microsoft Graph API is the universal endpoint for Microsoft 365 which give you the flexibility to access azure active directory resource through single endpoint using power automate.\nI am writing this article to share how we can implement Graph API with Power automate to generate reports and this implementation would be useful to IT Admin who is responsible for AD resources and related reports.\nToday, I am going to write steps to generate reports for users along with the list of licenses are assigned. Definition Generate an excel report on 1st day of each month for users, a list of assigned licenses to each user along with the metadata of users, and store excel report in the SharePoint document library.\nLearning Objectives\n Register Application and Grant Permission in Azure Active Directory Create Scheduler in Power Automate Access SharePoint list in Power Automate Array Filter in Power Automate Connect to Graph API Excel Online Connectors in Power Automate Add row to Excel Worksheet.  Prerequisites\n Microsoft 365 Account License to access Power Automate SharePoint Site with Site Collection Administrator Create Excel Template including worksheets and tables and upload it to the SharePoint document library. The sample Template file is added to the attachment. Let\u0026rsquo;s get started !!  Step 1 - Create a new SharePoint List to stores licenses Product Name and SKU IDs** When we get the user\u0026rsquo;s assigned licenses from Graph API then it returns SKU ID only. So, we can use this list to filter Product Names from SKU ID. Select here to get a list of licenses product names and SKU IDs.\nCreate a new list called \u0026ldquo;licenses\u0026rdquo; in SharePoint Site and add a column called GUID. Add Product Name and GUID from above Microsoft Documents. ![Reports 13.jpg](images/Reports 13.jpg)\nStep 2 - Register Application and Azure Active Directory Application Creation  Open Azure portal Select azure active directory Select App registration Select New Registration Enter the Name of the application Select \u0026lsquo;Accounts in this organizational directory only ' Select register Copy Application ID and Tenant ID and put it aside, we will use it in power automate.  Generate Secret Key  Select \u0026lsquo;Certificates \u0026amp; secrets\u0026rsquo; in the newly created application. Select New client secret Add description Select Expires to 24 months. Select Add Copy the value of the Secret key and put it aside, we will use it in power automate.  Grant API Permission  Select API Permission Select \u0026lsquo;Add a permission\u0026rsquo; Select Microsoft Graph Select Application Permission Find and Select \u0026lsquo;User.Read.All\u0026rsquo; Select Add Permission Select Grant Admin consent for \u0026lt;Tenant Name\u0026gt;  Step 3 - Create Power Automate from Recurrence trigger Open power automates from App list in Microsoft 365. Create new flow -\u0026gt; Select Recurrence -\u0026gt; Select month -\u0026gt; Create. ![Create report of assigned licenses for users from Microsoft 36502.gif](images/Create report of assigned licenses for users from Microsoft 36502.gif)\nStep 4 - Initialize variables in Power Automate We need 7 variables that will store multiple values and use them to generate reports.   Paste Tenant ID, Client Secret and Client ID which we had from the azure active directory.\nStep 5 - Get Licenses from SharePoint list in Power Automate We will use \u0026lsquo;Get Items\u0026rsquo; and \u0026lsquo;Append to array object\u0026rsquo; connectors in power to automate. ![Reports 3.png](images/Reports 3.png)\nStep 6 - Create report file from excel template We will get file content from a template file that is store in the SharePoint document library and create a new file that will be used to store users\u0026rsquo; details in it. We will use \u0026ldquo;Get File Content\u0026rdquo; to get content from the existing excel file template and \u0026ldquo;Create File\u0026rdquo; to create a new file in the desire location in SharePoint.   -align-inline image-alt=\u0026ldquo;Report4.1.png\u0026rdquo; style=\u0026ldquo;width: 625px;\u0026rdquo;} Step 7 - Access Excel worksheet in Power Automate We will get worksheets from excel sheet using Excel Online connector in Power automate. Get all sheets from excel file using \u0026ldquo;get Worksheet: connector. \u0026ldquo;Parse JSON\u0026rdquo; connector is used to access response from getting Worksheet connector.   JSON Schema for Parse JSON should be the same as below. { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;@@odata.context\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;value\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;array\u0026#34;, \u0026#34;items\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;@@odata.id\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;id\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;name\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;position\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;integer\u0026#34; }, \u0026#34;visibility\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; } }, \u0026#34;required\u0026#34;: [ \u0026#34;@@odata.id\u0026#34;, \u0026#34;id\u0026#34;, \u0026#34;name\u0026#34;, \u0026#34;position\u0026#34;, \u0026#34;visibility\u0026#34; ] } } } }  Step 8 - Get Users using Graph API \u0026ldquo;Http\u0026rdquo; Connector will be used to execute rest API in power automate. End Point URL : https://graph.microsoft.com/beta/users?$filter=userType%20eq%20%27Member%27\u0026amp;$select=displayName,crea\u0026hellip; Method: get Authentication: Azure Active Directory Tenant: Add Reference of TenantId variable Client Id: Add Reference of Client ID Variable Secret: Add Reference of Client Secret Variable Audience: Add Reference of AudienceURL variable   Pass JSON schema in Parse JSON Connector. { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;@@odata.context\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;value\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;array\u0026#34;, \u0026#34;items\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;@@odata.id\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;displayName\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;createdDateTime\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;accountEnabled\u0026#34;: { \u0026#34;type\u0026#34;: [ \u0026#34;boolean\u0026#34;, \u0026#34;null\u0026#34; ] }, \u0026#34;userPrincipalName\u0026#34;: { \u0026#34;type\u0026#34;: [ \u0026#34;string\u0026#34;, \u0026#34;null\u0026#34; ] }, \u0026#34;givenName\u0026#34;: { \u0026#34;type\u0026#34;: [ \u0026#34;string\u0026#34;, \u0026#34;null\u0026#34; ] }, \u0026#34;surname\u0026#34;: { \u0026#34;type\u0026#34;: [ \u0026#34;string\u0026#34;, \u0026#34;null\u0026#34; ] }, \u0026#34;externalUserState\u0026#34;: { \u0026#34;type\u0026#34;: [ \u0026#34;string\u0026#34;, \u0026#34;null\u0026#34; ] } }, \u0026#34;required\u0026#34;: [ \u0026#34;@@odata.id\u0026#34;, \u0026#34;displayName\u0026#34;, \u0026#34;createdDateTime\u0026#34;, \u0026#34;accountEnabled\u0026#34;, \u0026#34;userPrincipalName\u0026#34;, \u0026#34;givenName\u0026#34;, \u0026#34;surname\u0026#34;, \u0026#34;externalUserState\u0026#34; ] } } } }  Step 9 - Get Assigned Licenses Product Name We have an array of Product name list which we had created on starting of the automation. Let\u0026rsquo;s Access the assigned Licenses object from the user\u0026rsquo;s object which is getting on the response of HTTP request.\n![Create report of assigned licenses for users from Microsoft 36508.jpg](images/Create report of assigned licenses for users from Microsoft 36508.jpg)\nLet\u0026rsquo;s filter the array if we found licenses are assigned to the user. We can get SKU ID from the response and we do filter from licenses array based on SKU IDs. \u0026ldquo;Filter Array\u0026rdquo; action is used to filter items from an existing array in power automate.\n   Step 10 Add a new row in the table is created excel file.   Full Power automate will look like as below. ![Create report of assigned licenses for users from Microsoft 36511.gif](images/Create report of assigned licenses for users from Microsoft 36511.gif) The output will be as below. ![Create report of assigned licenses for users from Microsoft 36512.png](images/Create report of assigned licenses for users from Microsoft 36512.png)\nConclusion We learned how to connect the SharePoint site and list to Power automate, Create and append array, Call graph End point, Register application and Access and Add new Records in Excel worksheet.\nHappy Learning!\n","image":"https://pnp.github.io/blog/post/create-report-of-assigned-licenses-to-users-from-microsoft-365/images/Reports2_hue5394fa9298937b7c685d6305f47740a_22001_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/create-report-of-assigned-licenses-to-users-from-microsoft-365/","tags":["Power Automate","Microsoft Graph"],"title":"Create Report Of Assigned Licenses To Users From Microsoft 365"},{"categories":["Microsoft 365 platform call"],"contents":"Microsoft 365 Platform Community Call - weekly community call recording from August 31st, is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos.\n Call summary Welcome to the first in a new series of weekly calls focused on capabilities of the all up Microsoft 365 platform. You are encouraged to register at Microsoft 365 Developer Program for free E5 developer tenant and other assets. Visit the new Microsoft 365 sample gallery with more than 500 samples from Microsoft and community. Sign up and attend one of a growing list of events hosted by Sharing is Caring in September. Tune into the weekly Microsoft 365 Developer Podcast focused exclusively on Microsoft 365 dev topics \u0026ndash; hosted by Jeremy Thake (Microsoft) and Paul Schaeflein (Addin365). View the Microsoft 365 Developer blog for the latest news in last 7 days from Microsoft on Microsoft 365 platform. The Microsoft 365 Community (PnP) \u0026ndash; August 2021, update is now available! A hearty thank you goes out to the community members, organizations and Microsoft employees who have contributed their time and talents to this community in the last month. The host of this call was Vesa Juvonen (Microsoft) @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call.\nMicrosoft 365 Platform News Flash\n New public preview version of SharePoint Framework v1.13 Action required: Update your Office Add-in dialog for cross-domain communication Changes to the Microsoft 365 usage reports API   Actions  Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; September 21st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; October 5th  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; September 28th Ask me anything \u0026ndash; Recognition Program \u0026ndash; September 7th Ask me anything \u0026ndash; Script Samples \u0026ndash; September 14th Ask Me Anything \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th First Time Presenter \u0026ndash; October 12th More than Code with VSCode \u0026ndash; September 14th  Maturity Model Practitioners \u0026ndash; September 21st and every 3rd Tuesday of month, 7:00am PT PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy   Download the recurrent invite for this call \u0026ndash; https://aka.ms/m365-dev-call Call attention to your great work by using the #PnPWeekly on Twitter.   Thank you for your continued contributions of your time and talent to the betterment of this community. Stay well. See you soon. Demos Demos delivered in this session\n  Getting started with Microsoft Graph Toolkit \u0026ndash; there is lots of data and insights available to developers via Microsoft Graph. Easily access this content using the Microsoft Graph Toolkit (MGT) with authentication providers, web components, utilities and often requiring only 1-4 lines of code! Render agendas, files, people and more in your apps courtesy of Microsoft Graph. ACTION: Visit MGT Playground at https://mgt.dev and take the Learn Microsoft Graph Learning Path.   Introduction to Microsoft Graph .NET SDK v4 \u0026ndash; learn about and see a subset of new features delivered in the latest .NET SDK. Highlights include streamlined authentication with Azure Identity, added support for System.Text.Json, rich notifications that support encrypted content, and new Graph Response \u0026lt;\u0026gt; object. Also, ODataType is no longer specified by default, improved testability of GraphServiceClient and additional fixes. Visited code for authentication, serialization, Graph response, and PageIterator.\n  Getting started with Microsoft Teams UI Library \u0026ndash; specifically learn about capabilities in the Microsoft Teams UI Kit v2.2 that includes core components, scenario-based templates, and best practices for designing Teams apps that deliver consistent user and developer experiences. Open source React components implement the Teams UI kit. See the fluent UI libraries on GitHub and npm.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n Latest updates and news on the Microsoft 365 platform \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 8:38 Monthly contributors on the Microsoft 365 platform community assets \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 11:12 Demo: Getting started with Microsoft Graph Toolkit \u0026ndash; Waldek Mastykarz (Microsoft) | @waldekm \u0026ndash; 15:30 Demo: Introduction to Microsoft Graph .NET SDK v4 \u0026ndash; Maisa Rissi (Microsoft), Andrew Omondi (Microsoft) \u0026ndash; 28:14 Demo: Getting started with Microsoft Teams UI Library \u0026ndash; Will Shown (Microsoft) \u0026ndash; 42:11  Resources Additional resources around the covered topics and links from the slides.\n  Toolkit \u0026ndash; Microsoft Graph Toolkit   Sandbox - Microsoft Graph Toolkit Playground   Learn - Develop apps with the Microsoft Graph Toolkit   Repo \u0026ndash; microsoft-graph-toolkit   Documentation - Localizing the Microsoft Graph Toolkit components   Article - Microsoft Graph .NET SDK v4 now generally available with streamlined authentication and more   Documentation - Get change notifications delivered in different ways   Community - Microsoft Teams UI Kit   NPM Library - @fluentui/react-teams   GitHub Library - @fluentui/react-teams   General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites   M365 General Dev call \u0026ndash; September 2nd at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Microsoft 365 platform **\u0026ndash; **September 7that 8 AM PDT | https://aka.ms/m365-dev-call\n  Office add-in monthly call \u0026ndash; September 8th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  **SharePoint Framework call \u0026ndash;**September 9th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Adaptive Cards monthly call \u0026ndash;September 9th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; September 15th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  **Microsoft Identity Platform \u0026ndash;**September 16th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar Microsoft 365 Platform community call focuses on latest Microsoft 365 Platform updates and demos delivered by Microsoft presenters and takes place weekly on Tuesday. The alternating Special Interest Group community calls each Thursday focus on SharePoint Framework (client-side development/implementation) and Microsoft 365 Platform (includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics.) with demos commonly delivered by community members. More details on the Microsoft 365 community from http://aka.ms/m365pnp. You can download recurrent invite for this call from https://aka.ms/m365-dev-call. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;\n   Microsoft 365 PnP team, Microsoft - 31st of August 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-31st-of-august-2021/images/210831-together-mode_hu48a4588b60c078e2cefec218de624fad_7632170_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-31st-of-august-2021/","tags":[],"title":"Microsoft 365 Platform Call -- 31st of August, 2021"},{"categories":["Community post"],"contents":"Why do we need to use browser storage? You may ask yourself a question that why do I need to use this? what is the advantage of using browser storage? Is it secured? Let us see the features of browser storage.\nAlmost 90% of the web parts are loaded based on the current logged in users privilege and most of them will use some information from the UPS properties defined. The classical model is to pull the information from UPS on all the web parts whenever is required or to store the information on a SharePoint list to access it easily. Either way requires communication to SharePoint. What if there is a way to reduce the communication and thereby will increase the web part performance? the solution is to use Browser Storage. You can store user property information of the current user in the local storage and then accessing the storage value on all the web parts. You can also schedule a time for the value to refresh.\nThe browser storage is used mainly for easy access of information that won\u0026rsquo;t be modified for a long time. Any sensitive data should not be stored using local storage. The storage should be used with caution because overloading the browser local storage will have an impact on the page performance.\nWhy do we need to use PnPClientStorage? The normal local storage method is allowed to store the key-value pair where the value should always be the string. PnPClientStorage module provides a thin wrapper over the browser storage options for both local and session storage. If neither option is available then it shims storage with a non-persistent in memory polyfill. Also, most of the boilerplate codes were already written for us to make use of it.\nFocus on the Code Let us start by creating a new web part project using yeoman SharePoint generator, before that create a folder where you want to create the web part. Navigate to that folder and run the below command.\nyo @microsoft/sharepoint The generator will ask you couple of questions,\n Enter the web part name as your solution name, and then select Enter. Select Create a subfolder with the solution name for where to place the files. Select Y to allow the solution to be deployed to all sites immediately. Select N on the question if the solution contains unique permissions. Enter the web part name Enter the web part description Choose the framework as \u0026lsquo;React\u0026rsquo;  Once the project is created, install the required PnP modules from npm using the below command. I had created a web part with the name LocalStorage.\nnpm i @pnp/sp @pnp/common --save-exact Open the code in VSCode which is my favourite and flexible code editor for SharePoint Framework. You can directly open the project folder from the file menu or use the below command to open the VSCode from the command line.\ncd \\web part folder\\ code . Based on my web part name, there is a property file created to store the properties for the parent component. In my case it is ILocalStorageProps.ts. Copy the content and delete the file, paste the content in the LocalStorage.tsx file and change the import reference on the tsx and webpart.ts file. Open your webpart.ts file and copy-paste the below code along with the other code in the file, here we are setting up the pnp with the current context.\nimport { sp } from \u0026#34;@pnp/sp\u0026#34;; Copy-paste the below code under the default class\npublic onInit(): Promise\u0026lt;void\u0026gt; { return super.onInit().then(_ =\u0026gt; { sp.setup(this.context); }); } Navigate to your webpart.tsx file and copy-paste the below code.\nimport * as React from \u0026#39;react\u0026#39;; import styles from \u0026#39;./LocalStorage.module.scss\u0026#39;; import { DefaultButton } from \u0026#39;office-ui-fabric-react/lib/Button\u0026#39;; import { sp } from \u0026#34;@pnp/sp\u0026#34;; import \u0026#34;@pnp/sp/webs\u0026#34;; import \u0026#34;@pnp/sp/site-users\u0026#34;; import { ISiteUserInfo } from \u0026#39;@pnp/sp/site-users/types\u0026#39;; import { PnPClientStorage, dateAdd } from \u0026#39;@pnp/common\u0026#39;; const pnpStorage = new PnPClientStorage(); export interface ILocalStorageProps { description: string; } export interface ILocalStorageState { userinfo: ISiteUserInfo; } export default class LocalStorage extends React.Component\u0026lt;ILocalStorageProps, ILocalStorageState\u0026gt; { constructor(props: ILocalStorageProps) { super(props); this.state = { userinfo: null }; } public _storeCurrentUserInfo = async () =\u0026gt; { let currentUserInfo: ISiteUserInfo = pnpStorage.local.get(\u0026#34;PnP_UserInfo\u0026#34;); if (!currentUserInfo) { currentUserInfo = await sp.web.currentUser.get(); pnpStorage.local.put(\u0026#39;PnP_UserInfo\u0026#39;, currentUserInfo, dateAdd(new Date(), \u0026#39;hour\u0026#39;, 1)); } } public _getStoredUserInfo = async () =\u0026gt; { let currentUserInfo: ISiteUserInfo = pnpStorage.local.get(\u0026#34;PnP_UserInfo\u0026#34;); if (currentUserInfo) this.setState({ userinfo: currentUserInfo }); else this.setState({ userinfo: null }); } public componentDidMount() { pnpStorage.local.deleteExpired(); } public render(): React.ReactElement\u0026lt;ILocalStorageProps\u0026gt; { return ( \u0026lt;div className={styles.localStorage}\u0026gt; \u0026lt;div className={styles.container}\u0026gt; \u0026lt;div className={styles.row}\u0026gt; \u0026lt;div className={styles.column}\u0026gt; \u0026lt;DefaultButton text=\u0026#34;Store User Info\u0026#34; onSelect={this._storeCurrentUserInfo} /\u0026gt; \u0026lt;DefaultButton text=\u0026#34;Get User Info from Storage\u0026#34; onSelect={this._getStoredUserInfo} /\u0026gt; \u0026lt;div style={{ display: \u0026#39;inline-flex\u0026#39; }}\u0026gt; {this.state.userinfo ? ( \u0026lt;div\u0026gt; \u0026lt;p\u0026gt;Title: {this.state.userinfo.Title}\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;EMail: {this.state.userinfo.Email}\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; ) : ( \u0026lt;div\u0026gt;{\u0026#34;Select the button \u0026#39;Store User Info\u0026#39; to store the user information!\u0026#34;}\u0026lt;/div\u0026gt; )} \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; ); } } Let us see what we have done in the above code.\nNote: We have used the local storage in this sample, there is also another storage option named session storage which is not covered in this article. More information can be found in the link PnP Storage.\n We have used the selective imports concept of PnP to import the sp, web and site-users object. We have also imported PnPClientStorage and dateAdd from @pnp/common We have declared a state interface to hold the user information to display the data in a div. We have created 2 methods,  _storeCurrentUserInfo \u0026ndash; Store the current logged in user information to the local storage. The method will check whether the information is already stored or not, if not then it is fetched from SharePoint and stored in the storage. _getStoredUserInfo \u0026ndash; To display the information from the local storage in a div. This method will always pull the information from the storage.   We have declared a componentDidMount method and deleted all the expired values that are stored in the cache. This is the best practice recommended by the PnP team to avoid overloading the storage or leaving unwanted data. We can also automate this by using CacheExpirationInterval, the downside of this implementation is that there will be settimeout method triggered to clear the expired storage. We have declared two buttons to trigger the above-mentioned methods.  Once the solution is run, you can check your browser console to check whether the information is stored or not.\nSource Code The source code along with other samples can be found in the below GitHub link.\nSPFx-Demos\n Happy Coding\u0026hellip;\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-platform-call-31st-of-august-2021/images/210831-together-mode_hu48a4588b60c078e2cefec218de624fad_7632170_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/post/browser-local-storage-using-pnpclientstorage/","tags":[],"title":"Browser Local Storage using PnPClientStorage"},{"categories":["CLI for Microsoft 365"],"contents":" We\u0026rsquo;ve just published a new version of the CLI for Microsoft 365 with new commands for working with and managing Microsoft 365 tenants and SharePoint Framework projects on any platform. Manage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use. While building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects. New version of CLI for Microsoft 365 \u0026ndash; v3.13 Following our monthly release cadence, we\u0026rsquo;ve released a new version of the CLI for Microsoft 365 with some new capabilities. Here are a few of the most noteworthy additions. Upgrade SharePoint Framework projects to SPFx v1.13 preview Recently, Microsoft released a new preview version of the SharePoint Framework - v1.13. This version of SPFx, introduces new exciting capabilities for extending Viva Connections using Adaptive Card Extensions. To help you try these capabilities in your projects, we extended CLI for Microsoft 365 with support for upgrading your existing SharePoint Framework projects to SharePoint Framework v1.13.0-beta.17. To upgrade your SPFx project to this preview version, change the working directory to your project and execute:\nm365 spfx project upgrade --preview --output md \u0026gt; report.md  We\u0026rsquo;d also recommend that you try a richer upgrade report based on the Visual Studio Code CodeTour extension:\nm365 spfx project upgrade --preview --output tour For more information about upgrading SharePoint Framework projects, see the CLI documentation. Login with client ID and secret When using CLI for Microsoft 365 in unattended scenarios, like building monitoring solutions or long-running automations, it\u0026rsquo;s recommended that you login to Microsoft 365 using a certificate. If for some reason you\u0026rsquo;re unable to do that, you can now fallback to logging in using a client ID and secret registered with your custom Azure Active Directory application. To login to Microsoft 365 using client ID and secret, execute:\nm365 login --authType secret --secret topSeCr3t@007  For more information about the different abilities to login to Microsoft 365 with CLI for Microsoft 365 see the documentation. Retrieve apps installed in a SharePoint site A part of governance of every Microsoft 365 tenant is keeping track of which applications are installed where in the tenant. Since Microsoft 365 doesn\u0026rsquo;t provide this information readily for you, it\u0026rsquo;s a common scenario for automation scripts to scan all sites in the tenant and retrieve this information periodically. In this version of CLI for Microsoft 365, we introduced a new command for retrieving the list of apps installed in the given site. To retrieve the list of installed apps, execute:\nm365 spo app instance list --siteUrl https://contoso.sharepoint.com/sites/site1  For more information about managing apps with the CLI for Microsoft 365, see the documentation. Add one or more users to a SharePoint group Permission management is one of the core activities of every Microsoft 365 tenant admin. Whenever someone joins or leaves the organization or switches jobs, they need to adjust permissions in the tenant to reflect this change. There are many ways to implement permissions in Microsoft 365. One way is to add users to SharePoint groups. In this version of CLI for Microsoft 365 we introduced a command to add one or more users to a SharePoint group. To add users to a SharePoint group, execute:\nm365 spo group user add --webUrl https://contoso.sharepoint.com/sites/SiteA --groupId 5 --userName \u0026#34;Alex.Wilber@contoso.com\u0026#34;  For more information about managing users in SharePoint groups, see the documentation. Manage application permissions for SharePoint sites When building applications, one of the common requirements is to grant these applications access to information stored in SharePoint. Typically though, applications should only have access to information stored in specific sites rather than the whole tenant. To support this need, recently Microsoft released a new set of permissions that allow you to grant an application access to a specific site. In the previous versions of CLI for Microsoft 365 we introduced support for managing application permissions for SharePoint sites. In this version, we extend the support with removing application permissions. To remove an application permission from the specific site, execute:\nm365 spo site apppermission remove --siteUrl https://contoso.sharepoint.com/sites/project-x --appDisplayName \u0026#34;My app\u0026#34;  For more information about managing application permissions for SharePoint sites, see the documentation. Retrieve information about a Microsoft Planner plan In the previous versions of CLI for Microsoft 365, we introduced support for managing Microsoft Planner plans. In this version, we extended it, with retrieving the information about a specific plans. To retrieve it, execute:\nm365 planner plan get --title \u0026#34;MyPlan\u0026#34; --ownerGroupName \u0026#34;My Planner Group\u0026#34;  For more information about managing Microsoft Planner plans, see the documentation. New script samples CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts. If you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios. Share social champions to Teams This sample script shows how to retrieve activities for SharePoint Online, Teams and Yammer and shares the top 3 contributors for each category as an adaptive card to the specified webhook url. Recognize most active users for a specific Team This sample script shows how to retrieve all activities for a specific Microsoft Teams Team and shares the top 3 contributors based on their score as an adaptive card to the specified webhook url. Contributors This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order):\n Vipul Kelkar Shantha Kumar Waldek Mastykarz Arjun Menon Abderahman Moujahid Nanddeep Nachan Albert-Jan Schot Dipen Shah Garry Trinder Thank you all for your help and effort to improve CLI for Microsoft 365 for our users.  Work in progress Here are some things that we\u0026rsquo;re currently working on. CLI for Microsoft 365 v4 For the last few months we\u0026rsquo;ve been working on a new major version of CLI for Microsoft 365 - v4. The v4 release is a result of the evolution of the CLI over time. We planned it, to improve the consistency of the CLI and make it more intuitive to use. Some changes required us to introduce breaking changes, which is why we\u0026rsquo;ll be releasing a new major version. Along with these changes, v4 will contain new and improved commands, just as we ship them in each release. CLI for Microsoft 365 v3.13 is the last v3.x version of the CLI. Starting with our next monthly release, scheduled for the end of September, we will start releasing v4.x versions. v3.13, as well as all previous versions, will remain available and working, but won\u0026rsquo;t be updated, which is why we recommend that you upgrade to v4. Along with the release, we\u0026rsquo;ll publish an upgrade guidance to help you determine the impact of the upgrade on your work. More commands, what else Microsoft 365 is evolving and new capabilities are being released every day. With CLI for Microsoft 365, we aim to help you manage your tenant on any platform in a consistent way, no matter which part of Microsoft 365 you interact with. While we keep adding new commands to CLI for Microsoft 365 each release, we still barely scratched the surface with what\u0026rsquo;s possible in Microsoft 365. In the upcoming versions of the CLI for Microsoft, you can expect us to add more commands across the different workloads in Microsoft 365. Script examples In every release of the CLI for Microsoft 365, we introduce new commands for managing Microsoft 365. With over 350 commands across the different Microsoft 365 services, the CLI for Microsoft 365 has become a powerful tool, not just for managing your tenant but also for automating your daily work. We\u0026rsquo;d love to show you how you can use the CLI for Microsoft 365 to build automation scripts in PowerShell Core and Bash. If you have any scripts using SPO or PnP PowerShell that you use frequently, please share them with us so that we can learn more about the common automation scenarios. Try it today Get the latest release of the CLI for Microsoft 365 from npm by executing:\nnpm i -g @pnp/cli-microsoft365  Alternatively, you can get the latest release from Docker by executing:\ndocker run --rm -it m365pnp/cli-microsoft365:latest  If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365. If you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-13/images/banner-cli-m365_hubb0a11f265e5361714912c97fd3afb73_171793_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-13/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 v3.13"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from August 26th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary Updated Community call schedule starting in September. Join for first weekly Microsoft 365 platform community call on Tuesday, August 31st, 8:00 AM PT. Updated list of training events - sign up and attend a training event hosted by Sharing is Caring. Register for PnP Recognition Program. Pushing out SPFx solutions from partners in SharePoint Store and App Source. Viva Connections public developer preview \u0026ndash; New version of SharePoint Framework v1.13 - Beta.17 out today! Released this week \u0026ndash; React Controls v2.9.0 (SPFx v1.11), v3.3.0 (SPFx v1.12.1), PnPjs Client-Side Libraries v2.8.0. **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago) PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.12.1 GA, v1.13 Beta Viva.17 PnPjs Client-Side Libraries v2.8.0 v3.0.0 developments underway CLI for Microsoft 365 v3.13.0 Preview, v4.0.0 Preview v4.0.0 to release this fall Reusable SPFx React Controls v2.9.0 (SPFx v1.11), v3.3.0 (SPFx v1.12.1) Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1) PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.3.0 \u0026amp; v3.21.0 There were 3 PnP SPFx web part samples delivered as well. Thank you for contributing! There was a formal demo and an informal sneak peek demo during this call. The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place in chat throughout the call. Thank you everybody for being part of this call, the community, a tweet, a blog post, and the solution to your customer\u0026rsquo;s needs. Actions   Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; August 31st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; October 5th  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBS PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; September 28th  Ask me anything \u0026ndash; Recognition Program \u0026ndash; September 7th Ask me anything \u0026ndash; Script Samples \u0026ndash; September 14th Ask Me Anything \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th First Time Presenter \u0026ndash; August 30th More than Code with VSCode \u0026ndash; September 14th  Maturity Model Practitioners \u0026ndash; September 21st and every 3rd Tuesday of month, 7:00am PT    PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register\n  PnP Buddy System \u0026ndash; Request a Buddy\n  Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call Demo:\n  Getting started on building Microsoft Viva Connection adaptive card components using SharePoint Framework \u0026ndash; overview on how to think about ACEs (Adaptive Card Extensions) \u0026ndash; the container control and views (card, quick). Three scenarios shown with code walk throughs. 1) Adding a deep link to card or quick view with basic properties, 2) Company News card - get information and display it in carousel, and 3) Teams chat \u0026ndash; notifications with multiple card views and quick views.\n  SPFx extension samples: (https://aka.ms/spfx-extensions)\n No samples   SPFx web part samples: (https://aka.ms/spfx-webparts)\n My OneDrive - Siddharth Vaghasia | @siddh_me Teams Membership Updater - Nick Brown | @techienickb My Events - Chandani Prajapati | @Chanda  Thank you for your great work. Samples are often showcased in Demos. Agenda items   SharePoint Framework - Vesa Juvonen (Microsoft) @vesajuvonen - 6:53\n  PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) @jfj1997 \u0026ndash; 8:59\n  CLI for Microsoft 365 - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 10:10\n  PnP SPFx Controls - Alex Terentiev (Sharepointalist) | @alexaterentiev \u0026ndash; 11:14\n  PnP Modern Search - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 12:21   PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 13:19 Demo:\n  Demo: Getting started on building Microsoft Viva Connection adaptive card components using SharePoint Framework \u0026ndash; Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 16:57\n  Demo: Sneak Peek - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 53:51\n  Resources Additional resources around the covered topics and links from the slides.\n  Resource site \u0026ndash; Adaptive Cards   Mozilla MDN Web Docs - Destructuring assignment   TypeScript site - Object destructuring   Sample - basic-card-deep-link   Sample - Company News ACE   Sample - teams-chat-card   Samples - SharePoint Framework sample solutions for Microsoft Teams   General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned   SharePoint dev documentation\n  SharePoint dev issue list Upcoming calls | Recurrent invites: (Subject to Updates in September)\n  Microsoft 365 platform **\u0026ndash; **August 31st at 8 AM PDT | https://aka.ms/m365-dev-call (Starts from the 31st of August as weekly cycle)\n  M365 General Dev call \u0026ndash; September 2nd at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Office add-in monthly call \u0026ndash; September 8th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  **SharePoint Framework call \u0026ndash;**September 9th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Adaptive Cards monthly call \u0026ndash;September 9th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call\u0026ndash; September 15th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  **Microsoft Identity Platform \u0026ndash;**September 16th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 27th of August 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-26th-of-august-2021/images/210826-together-mode_hu304f485cc98a2c2473066f5a942f51b7_6324932_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-26th-of-august-2021/","tags":[],"title":"SharePoint Framework Community Call -- 26th of August, 2021"},{"categories":["Microsoft 365 Platform Community update"],"contents":"Microsoft 365 Patterns and Practices (PnP) Community August 2021 update is out with a summary of the latest guidance, samples, and solutions from Microsoft or from the community for the community. This article is a summary of all the different areas and topics around the community work we do around Microsoft 365 ecosystem during the past month. Thank you for being part of this success. Sharing is caring! 🧡\nWhat is Microsoft 365 Community (PnP) Microsoft 365 PnP is a nick-name for Microsoft 365 platform community activities coordinated by numerous teams inside of the Microsoft 365 engineering organizations. PnP is a community-driven open source initiative where Microsoft and external community members are sharing their learning\u0026rsquo;s around implementation practices for Microsoft 365.\nTopics vary from Microsoft Viva, Microsoft Graph, Microsoft Teams, Power Platform, OneDrive and SharePoint. Active development and contributions happen in GitHub by providing contributions to the samples, reusable components, and documentation for different areas. PnP is owned and coordinated by Microsoft engineering, but this is work done by the community for the community.\n  See more details from New Microsoft 365 Patterns and Practices (PnP) team model with new community leads The initiative is facilitated by Microsoft, but we have multiple community members as part of the PnP team (see team details in end of the article) and we are always looking to extend the PnP team with more community members. Notice that since this is open source community initiative, so there\u0026rsquo;s no SLAs for the support for the samples provided through GitHub. Obviously, all officially released components and libraries are under official support from Microsoft. 📈 Some key statistics around Microsoft 365 Community initiative from July 2021:\n  Unique visitors during the past 2 weeks in PnP, OneDrive, Microsoft-Search, OfficeDev and SharePoint GitHub organization repositories - 65,581\n  Microsoft 365 Community (PnP) YouTube channel had 101,455 views with 6,631 hours of watch time and 24,292 subscribers\n  Microsoft 365 Developer YouTube channel had 147,501 views with 9,526 hours of watch time and 15,180 subscribers 📺 Most viewed videos in the Microsoft 365 Community (PnP) YouTube channel during July 2021:\n   Introduction to Microsoft Teams Toolkit v2 - Zhenya Savchenko (Microsoft) | 15,069 Top 10 hidden gems: Microsoft Lists - Mark Kashman | 3,218 Getting started with Site Designs in SharePoint Online - Laura Kokkarinen (Sulava) | 2,828 Working with Microsoft Lists (webinar) - Harini Saladi, Miceile Barrett, Chakkaradeep Chandran and Mark Kashman | 2,370 Building a beautifully designed Intranet with SharePoint - latest design and branding capabilities | Cathy Dew (Microsoft) \u0026amp; Katie Swanson (Microsoft) | 2,244 Introducing: New Employee Onboarding - a Microsoft Teams app template | Nidhi Sharma (Microsoft) | 2,117 SharePoint Framework Tutorial 1 - HelloWorld WebPart | 2,008 Microsoft Lists workshop, part 1: \u0026ldquo;Creating and collaborating\u0026rdquo; - Mark Kashman | 1,434 Building a digital asset / document repository management app for Microsoft Teams - Sathya Raveendran (Microsoft), Arun Kumar Anaparthi (Zen3 Infosolutions) | 1,398 Latest on Power Automate integration within SharePoint Online - Chakkaradeep Chandran | 1,368  Most viewed videos in the Microsoft 365 Developer YouTube channel during July 2021:\n Microsoft Graph Toolkit can do WHAT? | Tips \u0026amp; Tricks - Ayca Bas | 30,527 Create a chatbot in Microsoft Teams with Power Virtual Agents | Tips \u0026amp; Tricks - April Dunnam | 28,173 Explore Microsoft Graph scenarios for JavaScript development - Dan Wahlin | 20,927 Teams App Dev Challenge winners bring data and dashboards into Teams chats - Bob German and Decision Point | 18,253 Start calling the Microsoft Graph API in under 5 minutes! | Tips \u0026amp; Tricks - Dan Wahlin | 1,812 Demo: Getting started with Power Apps Portals | Brian Knight (Pragmatic Works) | 1,513 Authenticate and connect with Microsoft Graph - June 2019 | 1,380 Build Outlook Add-ins that integrate your solution seamlessly into your users\u0026rsquo; Outlook experience​ | Juan Balmori, Hitesh Manwar - 1,049 Getting started with Microsoft Emulator and Windows 10X - Claire Davis | 848 Automate your Excel tasks with Office Scripts | 818 Main resources around Microsoft 365 Community:   Microsoft 365 Community - http://aka.ms/m365pnp - One location for all the resources and news around Microsoft 365 platform Microsoft 365 community blog - http://aka.ms/m365pnp/community/blog Microsoft 365 development blog - http://aka.ms/m365pnp-blog Microsoft 365 Community Channel on YouTube - http://aka.ms/m365pnp-videos Microsoft 365 Developer YouTube channel - https://aka.ms/M365DevYouTube  Latest Dev Blog posts Here are the latest blog posts and announcements around Microsoft 365 development topics from https://developer.microsoft.com/microsoft-365/blogs.\n 19th of August - Explore and deploy SharePoint Framework solutions from partners in SharePoint (Microsoft 365) 17th of August - Build and run your Microsoft Teams app in 10 minutes with the Teams Toolkit for VS Code 17th of August - Microsoft Graph JavaScript SDK 3.0.0 is now generally available 4th of August - Breaking changes to the Microsoft Graph connectors API (beta) 26th of July - Microsoft Graph .NET SDK v4 now generally available with streamlined authentication and more 26th of July - Announcing public preview of SharePoint Framework 1.13 \u0026ndash; with Viva Connections Extensibility 22nd of July - Office Add-in Development Community (PnP) \u0026ndash; July 2021 update 14th of July - MSAL for React is here! 14th of July - MSAL for Angular v2 is now available 14th of July - Announcing upcoming Microsoft Viva Connections public developer preview 9th of July - Access Microsoft Graph through a new preview CLI 8th of July - Raise the bar for your app security \u0026ndash; Get Microsoft 365 Certification by passing these security cont... 7th of July - Uniper boosts employee productivity using Office Scripts 29th of June - Explore new change notification API resources for your Microsoft Teams app Latest community posts at https://aka.ms/m365pnp/community/blog 18th of August - Arjun Menon (Tata Consultancy Services) - Add multiple users to a SharePoint Group using single API Call 17th of August - Sudharsan Kesavanarayanan (NTT Digital Business Solutions) - Flexible and powerful logging using PnP Logging in SPFx 10th of August - Paul Bullock (CPS) - Getting started with PnP Script Samples 9th of August - Luise Freese - Putting some more FUN into Azure Functions, Managed Identity \u0026amp; Microsoft Graph  9th of August - Michaël Maillot (onepoint) - Update SharePoint list\u0026rsquo;s Author / Editor field in App-Only context 9th of August - Siddharth Vaghasia - QuickBooks API Integration With Power Automate Using Custom Connectors 9th of August - Albert-Jan Schot - Recognize team activity using the CLI for Microsoft 365 4th of August - Tracy Sterling (West Monroe) - Create and Retrieve Power Automate Flows - WITH CODE!!! :) 4th of August - Damien Bird (DamoBird365) - Excel File Tricks with PowerAutomate 4th of August - Dipen Shah - Consume Graph API to Adaptive Card Extension (ACEs) SPFx component type 30th of July - Garry Trinder (Microsoft) - CLI for Microsoft 365 v3.12 29th of July - Albert-Jan Schot - Use CLI for Microsoft 365 to recognize contributions 27th of July - Agnes Molnar (Search Explained) - How to set up your first PnP Search Page 27th of July - Agnes Molnar (Search Explained) - How to Deploy PnP Modern Search Web Parts v4 26th of July - Luise Freese - The friendly SMS reminder with Logic Apps, Azure Functions + Key Vault 19th of July - Arjun Menon (Tata Consultancy Services) - Get Associated Groups (Owners, Members, Visitors) of a SharePoint Site 13th of July - Ganesh Sanap (Globant) - SharePoint Online: How to change the placeholder text in the search box 8th of July - Waldek Mastykarz (Microsoft) - Use single-tenant Azure AD apps with Microsoft Graph Toolkit 2nd of July - Kirk Liemohn (ThreeWill) - Struggling with using SPFx on SharePoint 2016? Let me help! 1st of July - Django Lohn (InSpark) - Power Apps: source code edit for Canvas Apps in Visual Studio Code Community call recording blog posts: 22nd of August - Office Add-ins community call \u0026ndash; August 2021 22nd of August - Power Apps Community Call \u0026ndash; August 2021 19th of August - Microsoft 365 Developer Community Call recording \u0026ndash; 19th of August, 2021 12th of August - SharePoint Framework Community Call \u0026ndash; 12th of August, 2021 5th of August - Microsoft 365 Developer Community Call recording \u0026ndash; 5th of August, 2021 29th of July - SharePoint Framework Community Call \u0026ndash; 29th of July, 2021 26th of July - Power Apps Community Call \u0026ndash; July 2021 22nd of July - Microsoft 365 Developer Community Call recording \u0026ndash; 22nd of July, 2021 22nd of July - Office Add-ins community call \u0026ndash; July 2021 21st of July - Microsoft Identity Platform community call \u0026ndash; July 2021 15th of July - SharePoint Framework Community Call \u0026ndash; 15th of July, 2021 9th of July - Adaptive Cards Community Call - July 2021 9th of July - Adaptive Cards Community Call - June 2021 8th of July - Microsoft 365 Developer Community Call recording \u0026ndash; 8th of July, 2021 1st of July - SharePoint Framework Community Call \u0026ndash; 1st of July, 2021 Microsoft 365 Developer Podcasts 16th of August - Microsoft 365 Developer Podcast - AI \u0026amp; Cognitive Services with Prashant G Bhoyar 9th of August - Microsoft 365 Developer Podcast - Content Design for SharePoint Syntex with Tom Resing 2nd of August - Microsoft 365 Dev Podcast - SPFx, Azure Functions and PnP Re-Usable controls with Joel Rodrigues 28th of July - Microsoft 365 Developer Podcast - Office Add-Ins with Cam Dwyer 26th of July - Microsoft 365 Developer Podcast - Secretless Apps with Christos Matskas 22nd of July - Microsoft 365 Developer Podcast - Azure AD Entitlement Management and Governance with Elisabeth Olso... 19th of July - Microsoft 365 Developer Podcast - Microsoft Teams Toolkit with Zhenya Savchenko and Tim Ng 15th of July - Microsoft 365 Developer Podcast - Microsoft Search with Mikael Svenson 12th of July - Microsoft 365 Dev Podcast - Building an Application on the Microsoft 365 Platform with Elio Struyf 5th of July - Microsoft 365 Developer Podcast - Code Like a Pro in C# with Jort Rodenburg  Community Calls There are numerous different community calls on different areas. All calls are being recorded and published either from Microsoft 365 Developer or Microsoft 365 Community (PnP) YouTube channels. Recordings are typically released within the following 24 hours after the call. You can find a detailed agenda and links to specific covered topics on blog post articles at the Microsoft 365 developer blog when the videos are published.\n Microsoft 365 Platform Call - https://aka.ms/m365-dev-call - Updates and demos from Microsoft as weekly call on Tuesdays - topics vary from Microsoft Teams, Microsoft Graph, Power Platform, SharePoint, OneDrive and more Adaptive Cards https://aka.ms/adaptivecardscommunitycall - Updates and news around Adaptive Cards with live demos Microsoft identity platform https://aka.ms/IDDevCommunityCalendar - Latest on the identity side Office Add-ins https://aka.ms/officeaddinscommunitycall - News and community work around Office add-ins with live demos PowerApps https://aka.ms/PowerAppsMonthlyCall - Monthly summary on PowerApps community with live demos M365 Community Call https://aka.ms/spdev-sig-call - Bi-weekly - General topics on Microsoft 365 Dev from various aspects - Microsoft Teams, Microsoft Graph Toolkit, Provisioning, Automation, Scripting, Power Automate, Solution design SharePoint Framework Community call https://aka.ms/spdev-spfx-call - Bi-weekly - Consists of topics around SharePoint Framework and JavaScript-based development in the Microsoft Teams and in SharePoint platform. If you are interested in doing a live demo of your solution or sample in these calls, please do reach out to the PnP Team members (contacts later in this post) and they are able to help with the right setup. These are great opportunities to gain visibility for example for existing MVPs, for community members who would like to be MVPs in the future or any community member who\u0026rsquo;d like to share some of their learnings.  Microsoft 365 Community (PnP) Ecosystem in GitHub Most of the community driven repositories are in the PnP GitHub organization as samples are not product specifics as they can contain numerous different solutions or the solution works in multiple different applications.\n  Microsoft Graph Toolkit - Repository and project on Microsoft Graph Toolkit controls - welcomes community contributors\n  PnPjs - PnPjs Framework repository\n  CLI Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings\n  generator-spfx - Open-source Yeoman generator which extends the out-of-the-box Yeoman generator for SharePoint with additional capabilities\n  generator-teams - Open-source Microsoft Teams Yeoman generator - Bots, Messaging Extensions, Tabs, Connectors, Outgoing Web hooks and more\n  teams-dev-samples - Microsoft Teams targeted samples from community and Microsoft engineering\n  Sharing is Caring - Getting started on learning how to contribute and be active on the community from GitHub perspective.\n  pnpcore - The PnP Core SDK is an SDK designed to work against Microsoft 365 with Microsoft Graph API first approach\n  powershell - PnP PowerShell module which is PowerShell Core module targeted for Microsoft 365\n  pnpframework - PnP Framework is a .Net Standard 2.0 library targeting Microsoft 365 containing the PnP Provisioning engine and a ton of other useful extensions\n  teams-dev-samples - Samples around the Microsoft Teams development models from Microsoft and from the community\n  spfx-teams - Samples for the Microsoft Teams and Viva Connections, implemented using SharePoint Framework\n  sp-dev-fx-webparts - Client-side web part samples from community and Microsoft engineering\n  sp-dev-fx-extensions - Samples and tutorial code around SharePoint Framework Extensions\n  sp-dev-fx-library-components - Samples and tutorial code around the SharePoint Framework library components\n  sp-starter-kit - Starter kit solution for SharePoint modern experiences\n  sp-dev-build-extensions - Different build extensions like gulp tasks and gulp plugins from the community and engineering around SharePoint development\n  sp-dev-solutions - Repository for more polished and fine-tuned reusable solutions build with SharePoint Framework\n  sp-dev-samples - Repository for other samples related on the SharePoint development topics - WebHooks etc.\n  sp-dev-fx-controls-react - Reusable content controls for SharePoint Framework solutions build with React\n  sp-dev-fx-property-controls - Reusable property pane controls to be used in web parts\n  list-formatting - Open-source community-driven repository for the column and view formatting JSON definitions\n  sp-dev-site-scripts - Open-source community-driven repository for community Site Designs and Site Scripts\n  sp-dev-modernization - Tooling and guidance around modernizing SharePoint from classic to modern\n  sp-power-platform-solutions - Solution and sample code for SharePoint Power Platform solutions\n  powerfx-samples - Samples that demonstrate different usage patterns for the Power Fx low-code programming language\\\n  powerapps-samples - Samples that demonstrate different usage patterns for Power Apps\n  powerautomate-samples - Samples that demonstrate different usage patterns for Power Automate\n  powerva-samples - Samples that demonstrate different usage patterns for Power Virtual Agents All SharePoint specific repositories or services supported directly by Microsoft are located in the SharePoint GitHub organization\n\\\n  sp-dev-docs - Source for new SharePoint dev center documentation exposed from http://docs.microsoft.com/sharepoint/dev\n  sp-dev-provisioning-templates - Open-source templates used by the SharePoint Look Book site\n  sp-provisioning-service - Source code of the SharePoint look book site PnP specific repositories - solution designs and tooling\n  PnP - Main repository for SP add-in, Microsoft Graph etc. samples\n  PnP-Sites-Core - Office Dev PnP Core component\n  PnP-PowerShell - Office Dev PnP PowerShell Cmdlets\n  PnP-Tools - Tools and scripts targeted more for IT Pro\u0026rsquo;s and for on-premises for SP2013 and SP2016\n  PnP-Provisioning-Schema - PnP Provisioning engine schema repository\n  PnP-IdentityModel - Open source replacement of Microsoft.IdentityModel.Extensions.dll Repositories in the GitHub Microsoft Search organization controlled by the PnP initiative\n  pnp-modern-search - Home of PnP Modern Search solutions, see more from the documentation Other related resources from GitHub\n  Office add-in Patterns and Practices in GitHub - Community contributions welcome!\n  Microsoft Graph GitHub organization\n  OfficeDev GitHub organization - Includes all Microsoft Teams samples from Microsoft\n  What\u0026rsquo;s supportability story around the community tooling and assets? Following statements apply across all of the community lead and contributed samples and solutions, including samples, core component(s) and solutions, like SharePoint Starter Kit, yo teams or PnP PowerShell. All Microsoft released SDKs and tools are supported based on the specific tool policies.\n PnP guidance and samples are created by Microsoft \u0026amp; by the Community PnP guidance and samples are maintained by Microsoft \u0026amp; community PnP uses supported and recommended techniques PnP is an open-source initiative by the community \u0026ndash; people who work on the initiative for the benefit of others, have their normal day job as well PnP is NOT a product and therefore it\u0026rsquo;s not supported by Premier Support or other official support channels PnP is supported in similar ways as other open source projects done by Microsoft with support from the community by the community There are numerous partners that utilize PnP within their solutions for customers. Support for this is provided by the Partner. When PnP material is used in deployments, we recommend being clear with your customer/deployment owner on the support model Please see the specifics on the supportability on the tool, SDK or component repository or download page.  Microsoft 365 PnP team model    In April 2020 we announced our new Microsoft 365 PnP team model and grew the MVP team quite significantly. PnP model exists for having more efficient engagement between Microsoft engineering and community members. Let\u0026rsquo;s build things together. Your contributions and feedback is always welcome! During August, we also crew the team with 5 new members. PnP Team coordinates and leads the different open-source and community efforts we execute in the Microsoft 365 platform. We welcome all community members to get involved on the community and open-source efforts. Your input do matter!\n New Microsoft 365 Patterns and Practices (PnP) team members - May 2021 - Gautam Sheth (Valo) and Patrick Lamber (Experts Inside AG) New Microsoft 365 Patterns and Practices (PnP) team members - February 2021 - April Dunnam (Microsoft), Emily Mancini (Sympraxis Consulting) and Veronique Lengelle (CPS) New Microsoft 365 Patterns and Practices (PnP) team members - December 2020 - Luise Freese and Sébastien Levert  New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 - Albert-Jan Schot (Portiva), Koen Zomers (Microsoft), Paul Bullock (CaPa Creative), Rabia Williams (Microsoft) and Yannick Plenevaux (PVX Solutions) Got feedback, suggestions or ideas? - Please let us know. Everything we do in this program is for your benefit. Feedback and ideas are more than welcome so that we can adjust the process for benefitting you even more.   Microsoft 365 PnP Recognition Program    We are excited to announce new community contributor program for all the active community members. Through this program you can get officially acknowledged with the a Credly badge around your work on our open-source and community channels. See more from\nhttps://aka.ms/m365pnp-recognition. Thank you for being part of this journey with us.\n⚙ Area-specific updates These are different areas which are closely involved on the community work across the PnP initiative. Some are lead and coordinated by engineering organizations, some are coordinated by the community and MVPs.\n🦒 Microsoft Graph Toolkit    Microsoft Graph Toolkit is engineering lead initiative, which works closely with the community on the open-source areas. The Microsoft Graph Toolkit is a collection of reusable, framework-agnostic web components and helpers for accessing and working with Microsoft Graph. The components are fully functional right of out of the box, with built in providers that authenticate with and fetch data from Microsoft Graph.\n Latest version currently is 2.2.1 See the v2.2 announcement blog post for more details - Announcing new file components, MSAL 2 Provider, and SharePoint Framework library in Microsoft Graph... mgt.dev - Microsoft Graph Toolkit Playground Getting started with Microsoft Graph Toolkit guidance video from developer community call by Beth Pan (Microsoft) Latest code and preview versions from https://aka.ms/mgt All the latest updates on the Microsoft Graph Toolkit is being presented in our bi-weekly Microsoft 365 Generic Dev community call, including the latest community contributors.  Microsoft 365 Community docs    Community docs model was announced in the April 2020 and it\u0026rsquo;s great to see the interest for community to help each other by providing new guidance on the non-dev areas. See more on the announcement from the SharePoint blog - Announcing the Microsoft 365 Community Docs. We do welcome contributions from the community - our objective is to build a valuable location for articles from Microsoft and community together.\nHave ideas for articles or want to contribute yourself? - Get involved! Here are also some additional resources explaining the model more detailed.\n YouTube - Introducing Microsoft 365 Community Docs GitHub issue list with articles ideas  SharePoint Framework development samples    These are the updated SharePoint Framework samples which are available from the the different repositories.\n New sample WORLDCLOCK by Sympraxis Consulting showing how to build Microsoft Teams personal app which can be used to deal with the time zone confusion across the world New sample ROOMRESERVATION by Sympraxis Consulting showing how to build personal app for Microsoft Teams using SharePoint Framework, including an Adaptive Card Component extension New sample COVID by Sympraxis Consulting showing how to build a Microsoft Teams based custom form that collects information from users and provides a custom dashboard for working with the results, including a Viva Connections Adaptive Card component. New sample TeamsChatCard by Patrick Rodgers shows how to build and ACE with multiple card and quick views allowing chat interaction with a Microsoft Teams channel New sample CompanyNewsCard-SPListData by Patrick Rodgers shows an Adaptive Card Component extension which provides a news article rotator with Quick View for full article details. New sample BasicCard-DeepLink by Patrick Rodgers showing how to perform deep linking in Microsoft Viva Connections Adaptive Card component. New sample react-cross-device-data by Giuliano De Luca showing how to store data on user based temporary story for accessing it seamlessly across different devices New sample react-tiles-v2 by Omar El-Anis on creating a customizable advance Tiles Web part New sample react-application-my-lists-notifications by João Mendes which is an application extension allowing user receive notifications from selected lists or libraries New sample react-hero-webpart by Omar El-Anis on building custom hero web part with advance configuration options New sample react-private-libraries by Russell Gove providing a web part that can be used to manage Document Libraries with Secured Subfolders New sample react-command-follow-document by André Lage adding file level follow status information to document library using list view command set model New sample react-command-copy-pnp-search-webpart-settings by Anoop Tatti showing how to implement a custom extension to pages library to copy web part settings across pages Updates to react-adaptivecards by Hugo Bernier which can be used to show adaptive card in modern SharePoint pages Updates to react-groups-teams by Christophe Humbert which lists different sites and groups in Teams personal app Updates to react-datatable by Abderahman Moujahid to fix CSV export capability Updates to react-calendar by Mohammad Amer for better end-user experience on the calendar web part handling Updates to react-teams-membership-updater by Nick Brown which provides you an easy way to update team memberships with CSV file content Updates to react-facebook-plugin by Ari Gunawan which shows how to implement iFrame-based web parts with a dynamic responsive behavior on the example of Facebook Page Social Plugin. Updates to react-pagecontributors by Ari Gunawan which displays page contributors in reverse chronological order. Updates to js-application-analytics by João Ferreira to provide support of Google Analytics V4 Updates to react-quick-poll by Dipen Shah which provides a simple survey capabilities for modern pages in different rendering format Updates to react-calendar by Abderahman Moujahid which provides as calendar view presentation of events Updates to react-birthdays by Sajal Maity (JP Morgan Chase) being a web part which shows the upcoming birthdays in a company Updates to react-datatable by Chandani Prajapati which provides easy way to render SharePoint custom list in data table view with all the necessary features. Other adjustments to numerous samples by our awesome community members! How to find what\u0026rsquo;s relevant for you? Take advantage of our SharePoint Framework web part and extension sample galleries - includes also solutions which work in Microsoft Teams Web Part sample gallery - http://aka.ms/spfx-webparts Extensions sample gallery - http://aka.ms/spfx-extensions Microsoft Teams samples build with SharePoint Framework - https://github.com/pnp/spfx-teams - These will be relocated soon  Microsoft Teams community samples    These are samples which have been contributed on the community samples since last summary. We do welcome all Microsoft Teams samples to this gallery. They can be implemented using in any technology.\n New sample app-ReporterPlus by Sathya Raveendran and Veera Venkata Sai Pothan Thota which demonstrates the power of integrating Teams platform with device capabilities such as camera, QR or barcode scanner, photo gallery and microphone. New sample bot-teams-incidentmanagement by Nanddeep Nachan and Smita Nachan which illustrates sequential workflow, user specific views, and up to date adaptive cards bot. This bot has been created using Bot Framework, it shows how to create a simple incidence and resolution using Adaptive Cards v1.4. New sample bot-uam-cardbot by Rabia Williams demonstrating Unified Actions for Adaptive Cards capabilities. Updated sample msgext-graph-action-config by Markus Moeller which is a action based messaging extension created using the Teams Yeoman Generator. It authenticates against Microsoft Graph via SSO and on-behalf flow from the frontend and receives documents to be posted as adaptive card to the message compose box of a channel.  Updated sample msgext-action-preview by Markus Moeller which is a small demo sample is a action based messaging extension created using the Teams Yeoman Generator. It posts a simple adaptive card to the Team\u0026rsquo;s news channel but \u0026lsquo;as a bot\u0026rsquo; and with an action to update the same adaptive card again and again. If you are interested on Microsoft Teams samples, we have just released also new Microsoft Teams sample gallery. Contributions to Microsoft Teams samples is also more than welcome. This gallery already surfaces all Microsoft samples, Microsoft Teams app templates and community samples.  Power Platform samples    There was numerous smaller updates on the different Power Platforms samples. See more details on available samples from following location:\n Power Platform sample gallery - https://aka.ms/powerplatform-samples If you have any existing samples which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative. Here to help.  Microsoft 365 Script Sample    \nWe have released new Microsoft 365 Script Sample gallery within past month. We welcome all scripts on Microsoft 365 automation to this centralized repository, targeted to help to manage and automate day-to-day operations. Here are the latest updates on the Script Samples\n New script spo-copy-webpart-settings by Anoop Tatti (Content+Cloud) enabling copying SPFx web part settings across pages using PnP PowerShell New script spo-empty-tenant-recyclebin by Chandani Prajapati which can be used to clear tenant recycle bin on pending site deletion New script spo-list-items-with-caml-query by Chandani Prajapati showing how to read SharePoint lists items with CAML queries using PnP PowerShell New script spo-import-taxonomy-terms-labels by Reshmee Auckloo showing how to use PnP PowerShell to import taxonomy terms and labels/synonums New script graph-assign-permissions-managed-identity by Luise Freese showing how to use Azure CLI to create an Azure Functions App with and assign several permissions of Microsoft Graph API to a Managed Identity New script reset-files-permission-unique-to-inherited by Dipen Shah showing how to reset bulk file permissions from unique to parent folder inheritance using PnP PowerShell New script graph-download-office-documents-as-pdf by Russell Gove on how to download files using PDF by using PnP PowerShell and Graph APIs If you have any existing scripts which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative.  Microsoft 365 Script Samples - https://aka.ms/script-samples  Sharing is Caring initiative    The \u0026ldquo;Sharing Is Caring\u0026rdquo; imitative is targeted for learning the basics around making changes in Microsoft Docs, in GitHub, submitting pull requests to the PnP repositories and in GitHub in general. Take advantage of this instructor lead training for learning how to contribute to docs or to open-source solutions. Everyone is welcome to learn how to get started on contributing to open-source docs or code!\n See more from the guidance documentation - including all upcoming instructor lead sessions which you can participate!  Different Microsoft 365 related open-source initiatives build together with the community See exact details on the latest updates from the specific open-source project release notes. You can also follow up on the project updates from our community calls. There are numerous active projects which are releasing new versions with the community even on weekly basis. Get involved!\n Microsoft Look Book - Discover the modern experiences you can build with SharePoint in Microsoft 365. Look book provides design examples for SharePoint Online which can be automatically provisioned to any tenant in the world. See more from https://lookbook.microsoft.com. This service is also provided as open-source solution sample from GitHub. yo teams - Open-source Yeoman generator for Microsoft Teams extensibility. Supports creation of bots, messaging extensions, tabs (with SSO), connectors and outgoing Webhooks. See more from https://aka.ms/yoteams. PnP Framework - .NET Standard 2.0 SDK containing the classic PnP Sites Core features for SharePoint Online. More around this package from GitHub. PnP Core SDK - The PnP Core SDK is an SDK designed to work for Microsoft 365 with Graph API first approach. It provides a unified object model for working with SharePoint Online and Teams which is agnostic to the underlying API\u0026rsquo;s being called. See more around the SDK from documentation. PnP PowerShell - PnP PowerShell is a .NET Core 3.1 / .NET Framework 4.6.1 based PowerShell Module providing over 400 cmdlets that work with Microsoft 365 environments and more specifically SharePoint Online and Microsoft Teams. See more details from documentation. Reusable SharePoint Framework controls - Reusable controls for SharePoint Framework web part and extension development. Separate projects for React content controls and Property Pane controls for web parts. These controls are using Office UI Fabric React controls under the covers and they are SharePoint aware to increase the productivity of developers. Office 365 CLI - Using the Office 365 CLI, you can manage your Microsoft Office 365 tenant and SharePoint Framework projects on any platform. See release notes for the latest updates. PnPJs - PnPJs encapsulates SharePoint REST APIs and provides a fluent and easily usable interface for querying data from SharePoint sites. It\u0026rsquo;s a replacement of already deprecated pnp-js-core library. See changelog for the latest updates. PnP Provisioning Engine and PnP CSOM Core - PnP provisioning engine is part of the PnP CSOM extension. They encapsulate complex business driven operations behind easily usable API surface, which extends out-of-the-box CSOM NuGet packages. See changelog for the latest updates. PnP PowerShell - PnP PowerShell cmdlets are open-source complement for the SharePoint Online cmdlets. There are more than 300 different cmdlets to use and you can use them to manage tenant settings or to manipulate actual SharePoint sites. They See changelog for the latest updates. PnP Modern Search solution - The PnP \u0026lsquo;Modern Search\u0026rsquo; solution is a set of SharePoint Online modern Web Parts allowing SharePoint super users, webmasters and developers to create highly flexible and personalized search based experiences in minutes. See more details on the different supported capabilities from https://aka.ms/pnp-search. Modernization tooling - All tools and guidance on helping you to transform you SharePoint to modern experiences from http://aka.ms/sppnp-modernize. SharePoint Starter Kit v2 - Building modern experiences with Microsoft Teams flavors for SharePoint Online and SharePoint 2019 - reference solution in GitHub. List formatting definitions - Community contributed samples around the column and view formatting in GitHub. Site Designs and Site Scripts - Community contributed samples around SharePoint Site Designs and Site Scripts in GitHub. **DevOps tooling and scripts **- Community contributed scripts and tooling automation around DevOps topics (CI/CD) in GitHub. Teams provisioning solution - Set of open-source Azure Functions for Microsoft Teams provisioning. See more details from GitHub.  ✍ Documentation updates Please see all the Microsoft 365 development documentation updates from the related documentation sets and repositories as listed below:\n Microsoft Teams platform documentation - Microsoft Docs | GitHub SharePoint Developer documentation - Microsoft Docs | GitHub Microsoft Graph documentation - Microsoft Docs | GitHub Office add-in documentation - Microsoft Docs | GitHub  👀 Microsoft 365 Developer and Microsoft 365 Community YouTube video channels You can find all Microsoft 365 related videos on our YouTube Channel at http://aka.ms/m365pnp/videos or at Microsoft 365 Dev. These channels contains already a significant amount of detailed training material, demo videos, and community call recordings. Here are the new Microsoft demo or guidance videos released since the last monthly summary:\n Using message recipients changed event in Outlook - Elizabeth Samuel \u0026ndash; Senior Dev Writer (Microsoft) Azure Communication Services \u0026ndash; Microsoft Teams interoperability with Call Routing - Sathya Raveendran (Microsoft) Publish a connector to the Power Platform with Independent Publisher Connector Program - Natalie Pienkowska (Microsoft) | @NataliePienkow1 \u0026amp; Woong Choi (Independent Publisher) Building SharePoint Framework solutions with Microsoft Teams Toolkit v2 - Vesa Juvonen (Microsoft) | @vesajuvonen  Microsoft Excel v1.13 API updates \u0026ndash; June 2021 - Raymond Lu (Microsoft) Getting started with PnP Teams QuickStart - Wictor Wilén (Microsoft) | @wictor Getting started with Microsoft Graph Tag API for managing Microsoft Teams tagging - Annie Colonna (Microsoft) | @AnnieColonna Introduction to Microsoft Teams Toolkit v2 - Zhenya Savchenko (Microsoft) Kudos App sample using Microsoft Teams Activity Feed API in Microsoft Graph - Sébastien Levert (Microsoft) | sebastienlevert Insert template from external Excel file - David Chesnut (Microsoft) | @davidchesnut Getting started on using Time Clock Microsoft Graph APIs to clock in and out of a shift - Aarthi Kumar (Microsoft) Microsoft Graph Data Connect overview - Nik Charlebois (Microsoft) | @NikCharlebois TypeScript Core Concepts - Adding TypeScript to a VS Code project - Dan Wahlin (Microsoft) TypeScript Core Concepts - Why Learn TypeScript? - Dan Wahlin (Microsoft) Building apps with Microsoft Graph Explorer - Rabia Williams, Ayca Bas and Bettirose Ngugi  Understanding authentication and authorization in Microsoft Graph Explorer - Rabia Williams, Ayca Bas and Bettirose Ngugi  Using Microsoft Graph Explorer to make REST API requests - Rabia Williams, Ayca Bas and Bettirose Ngugi  Automate your Excel tasks with Office Scripts - Microsoft Learn about the Microsoft Graph API on Microsoft Learn 🎉 - Rabia Williams (Microsoft) | rabwill New playlist - Manage Group Lifecycle with Microsoft Graph Manage Group Lifecycle with Microsoft Graph Demo - Create Azure AD app to work with groups using Microsoft Graph Demo - Create .NET console app to display all the groups in the organization with Microsoft Graph Demo - Work with the details of specific groups using Microsoft Graph Users and their groups Demo - Users and their groups Manage group lifecycle Demo - Manage group lifecycle New playlist - Optimize data usage when using Microsoft Graph with query parameters Optimize data usage when using Microsoft Graph with query parameters Demo - Create Azure AD app to work with query parameters using Microsoft Graph Demo - Create .NET console app to work with query parameters supported by Microsoft Graph Demo - Use query parameters to optimize Microsoft Graph Requests Expand related entities \u0026amp; search content in Microsoft Graph Demo - Expand related entities \u0026amp; search content in Microsoft Graph Reduce traffic with batched requests Demo - Reduce traffic with batched requests New playlist - Optimize network traffic with Microsoft Graph Optimize network traffic with Microsoft Graph Identifying throttled requests Demo - Create Azure AD app to submit requests to Microsoft Graph Demo - Create .NET console app to trigger and display throttled requests to Microsoft Graph Avoid throttling \u0026amp; implement throttling strategies Demo - Avoid throttling \u0026amp; implement throttling strategies Demo - Implement Microsoft Graph SDK for throttling retry strategy Eliminate polling Microsoft Graph with delta query Demo - Eliminate polling Microsoft Graph with delta query Community demos as following:  Introduction to custom Hero Web Part and Tiles V2 Web Part - Omar El-Anis | @omarelanis Introducing the PnP Script Samples - Paul Bullock (CPS) | @pkbullock How to update an Adaptive Card with a Teams Messaging Extension and MessagePreview - Markus Möller (Avanade) | @Moeller2_0 Power Apps Demo Extravaganza 2021 - Pandemic Response Solution - Venkat Rao (Avanade), Nghiem Doan (Power Objects) \u0026amp; Aakash Jain (Bright HealthCare) Power Apps Demo Extravaganza 2021 - Kitty Run! Game - Nicholas Nguyen (BlueTriton Brands) | @PowerAppsGamer1 Power Apps Demo Extravaganza 2021 - Sports Stats Tracker - Todd Baginski (Canviz) | @ToddBaginski, Matt Schuessler (Canviz) | @mattschues, Hubert Sui (Canviz) | @HubertSui, Sarah Meyer (Canviz) \u0026amp; Damian Gibbs (Canviz) Power Apps Demo Extravaganza 2021 - Number Puzzle - Krishna Rachakonda | @rachakonda78 Power Apps Demo Extravaganza 2021 - Course Maker Solution - Rory Neary (hybrit.co.uk) | @azurerory Building a COVID attestation solution for Microsoft Teams and Viva Connections with SPFx - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026amp; Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp Configure Teams Applications with Azure App Configuration and Azure Key Vault - Markus Möller (Avanade) | @Moeller2_0 Image Column Type formatting in Microsoft 365 - Chris Kent (DMI) | @theChrisKent Connect your LinkedIn profile to the Patterns and Practices Community - David Warner | @DavidWarnerII Executive Room Reservation: SharePoint Framework Teams and Personal App Reference Application - Emily Mancini (Sympraxis Consulting) | @EEMancini COVID-19 Check-In: SharePoint Framework Teams Personal App Reference Application - Emily Mancini (Sympraxis Consulting) | @EEMancini World Clock: SharePoint Framework Teams and Personal App Reference Application - Emily Mancini (Sympraxis Consulting) | @EEMancini Follow Documents in Modern Workspace with SPFx - André Lage (Datalynx AG) | @aaclage Copy PnP Search results web part settings - Anoop Tatti (Content and Code) | @anooptells COVID-19 Check-In: SharePoint Framework Teams Personal App Reference Application - Emily Mancini (Sympraxis Consulting) | @EEMancini Bringing your custom apps to Viva Connection mobile experience - Vardhaman Deshpande (Valo Intranet) | @vrdmn Our learnings from the AppSource submission for Microsoft Teams - Florian Grasel (Smarter Business Solutions GmbH) | @Trailbeard COE in Dataverse for Teams in the Power Platform - Krishna Vandanapu | @KrishnaShp Building team time zone assistant Teams solution with SPFx v1.13, including Viva Connections Card - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026amp; Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp Planner Gantt chart in Power Apps - Terho Antila | @terhoantila spfx-fast-serve: faster SharePoint Framework development - Sergei Sergeev (Mastaq) | @sergeev_srg Create a digital escape room with Power Apps - May Alhajri | @MayAlhajri2 Building a digital asset / document repository management app for Microsoft Teams - Sathya Raveendran (Microsoft) \u0026amp; Arun Kumar Anaparthi (Zen3 Infosolutions)  Preview on list formatting demo site template - Chris Kent (DMI) | @theChrisKent Remote Event Receiver Manager solution in SPFx for managing list events - Dan Toft (Evobis ApS) | @tanddant New Email Signature Add-in - James Wayne (Exclaimer Cloud) \u0026amp; Phillip Vetter (Exclaimer Cloud)   🧡 Key contributors to the August 2021 update Here\u0026rsquo;s the list of active contributors (in alphabetical order) since last release details in GitHub repositories or community channels. PnP is really about building tooling and knowledge together with the community for the community, so your contributions are highly valued across the Microsoft 365 customers, partners and obviously also at Microsoft. 👏 Thank you for your assistance and contributions on behalf of the community. You are truly making a difference! If we missed someone, please let us know.\n  Aakash Jain (Bright HealthCare)\n  Aaron Blair\n  Abderahman Moujahid - Abderahman88\n  Abdush Miah (iThink 365)\n  Adam - Adam-it\n  Ahamed Fazil Buhari - @AhamedFazilB\n  Albert-Jan Schot (Portiva) - @appieschot\n  Alexey Morozov - a1exymoroz\n  Alistair Pugin (Tangent Solutions) - @alistairpugin\n  Amin Tavakoli (SoftwareONE)\n  Amy Lepore (Thorlabs)\n  Ananda Vadivelan (Ericsson) - Anandavadivelan\n  André Lage (Datalynx AG) - @aaclage\n  Andrew Benson (InElec) - @ViewPorter\n  Andrew Burns (AmSty) - @SharePointRox\n  Andrew Connell (Voitanos) - @andrewconnell\n  Andrew Koltyakov (ARVO Systems) - @andrewkoltyakov\n  Anna Sanfilippo (ATNS) - @scumezza\n  Annie Torres (Coppin State University)\n  Anoop Tatti (Content+Cloud) - @anooptells\n  Apoorva Sharma (Avanade) - @apoorvaconsult\n  Ari Gunawan (DevStack) - @arigunawan3023\n  Aric Bost (North Carolina Housing Authority)\n  Arjun Menon (Tata Consulting Services) - @arjunumenon\n  Arif H-Shigri - arifhshigri\n  Arin Komins (Blue Cross Blue Shield Association) - @arinkomins\n  Arun Kumar Anaparthi (Zen3 Infosolutions)   Asha Prajapati (T-systems India Pvt Ltd) - Ashaprjpt0707\n  Ashwani Kumar - @ashwanidv100\n  Azores - gretchunkim\n  Bassem Khalil - @M365Bass\n  Beau Cameron (Aerie Consulting) - @Beau__Cameron\n  Blake Donley (Great River Energy)\n  Bob Morris (ThreeWill)\n  Brad Galloway\n  Brett Olson\n  Brendan Andrade (Company) - @brendanofearth\n  Brian Kline - @brian_codediver\n  Carlene Archer (CSAA)\n  Catherine Thenault (AIPSO) - @o365techcat\n  Chandani Prajapati - @Chandani_SPD\n  Chris Kent (DMI) - @theChrisKent\n  Christian - @_wild_fenix_\n  Christian Baer (Oasis Systems, LLC)\n  Christian Zuellig (Monday Coffee) \u0026ndash; @ChristianZuell1\n  Christine Green (EBSCO Information Services) - @cacurtica\n  Christine Zeravica - christinemzeravica\n  Christophe Humbert - @Path2SharePoint\n  Dale Pilarczyk (Centric Consulting)\n  Daniel S. Peterson (AlasConnect)\n  Daniel Westerdale (Westerdale Solutions Ltd) - @westerdaled\n  Damian Gibbs (Canviz)\n  Damien Bird (Aberdeen City Council) - @DamoBird365\n  Dan Toft (Evobis ApS) - @tanddant{.Link\u0026ndash;primary}\n  Daniël Giessenburg (Advantive B.V.) - @DAGiessenburg\n  Daniel Laskewitz (Sogeti) - @laskewitz\n  Darren Brown (Node4)\n  David Gray (Visa)\n  David Fulcher - rdftech\n  David Scone\n  David Warner II (Catapult) - @DavidWarnerII\n  Dennis Goedegebuure (Ultima Business Solutions) - @expiscornovus\n  Dennis Kuhn (Fusion5) - DennisKuhn\n  Dennis van Niel (Wortell) - dennisvanniel\n  Dipen Shah (RapidCircle) - @Dips_365\n  Dipesh Bhanani - @AskDipesh\n  Django Lohn (InSpark) - @LohnDjango\n  Derek Cash-Peterson (Sympraxis Consulting) - @spdcp\n  Don Kirkham - @DonKirkham\n  Edmund Davis (Insentra)\n  Elio Struyf (Struyf Consulting) - @eliostruyf\n  Ellery July - @techrealist\n  Emily Mancini (Sympraxis Consulting) - @EEMancini\n  Eric Overfield (PixelMill) - @EricOverfield\n  Erwin van Hunen (Valo Intranet) - @erwinvanhunen\n  Fabio Franzini - @franzinifabio\n  Florian Grasel (Smarter Business Solutions GmbH) - @Trailbeard\n  Frank Brinker\n  Frank Cornu (aequos) - @FranckCornu\n  Frank Teufel (Konica Minolta) - @frankteufel\n  Callum Crowley (Method4) - @CallumNCrowley\n  Ganesh Sanap - @ganeshsanap20\n  Gaurav Goyal (BizPortal Solutions) - gauravgoyal5\n  Gennady Gabdulin (AM Bell Solutions) - Gennady-G\n  Garry Trinder (CPS) - @garrytrinder\n  Gautam Sheth (Valo) - @gautamdsheth\n  Giacomo Pozzoni (DQC Sverige Ab) - @PozzoniGiacomo\n  Giuliano De Luca - @delucagiulian\n  Hadrien-Nessim Socard (HubCollab) - @h4dn355\n  Harold Wolfinger\n  Helmut Sajt (Konica Minolta Deutschland GmbH)\n  Horving Ramos\n  Hubert Sui (Canviz) - @HubertSui\n  Jaco Kleynhans (NINJACO (Pty) Ltd) - @Bettasnack\n  Jake Stanger - JakeStanger\n  James Craglev\n  James Kleinschnitz\n  James Wayne (Exclaimer Cloud)\n  Jamie Brandwood\n  Jarbas Horst (Valo) - @devjhorst\n  Jason Lambiris (Apex Digital Solutions) - @ApexEmpowers\n  Jason Stoddard - modern-dev-dude\n  Jeffrey Schmitt\n  Jessica Gamble - @bombarb\n  Jim Sottosanto (Magenium) - jsottosanto\n  João Ferreira (Beezy) - @joao12ferreira{.Link\u0026ndash;primary}\n  João Mendes - @joaojmendes\n  Joe Gasper (University of Florida) - @ReactorJoe\n  Joe\u0026rsquo;l Brenny (Great River Energy) - @jbrenny\n  Joel Rodrigues (Storm Technology) - @JoelFMRodrigues\n  Jouni Pohjolainen (Valo) - jonepo\n  Johan van Dyk (BCX) - johanvandy\n  John Holliday (Lighthouse) - @jholliday\n  Julie Peck (Cambridge Consultants)\n  Julie Turner (Sympraxis Consulting) - @jfj1997\n  Joni Jackson\n  Karine Brousse (Itron)\n  Kathleen Boilek (Alaka\u0026rsquo;Ina Foundation) - @kaboilek\n  Kausar Parveen (WittKieffer) - @KausarP18159692\n  Ketill Antoníus Ágústsson - Katli95\n  Kirk Liemohn (ThreeWill) - @kliemohn\n  [kmrshubham0 - kmrshubham0]{.commit-author .user-mention}\n  [koulchi - koulchi ]{.commit-author .user-mention}\n  Krishna Rachakonda - @rachakonda78\n  Krishna Vandanapu - @KrishnaShp\n  Lance Yoder (Cerner) - @lyoder\n  Laura Kokkarinen (Sulava) - @LauraKokkarinen\n  Laurent Sittler - @laul0_68\n  Leon Armston (Intelogy) - @LeonArmston\n  Lona Neves (Boardwalk Pipelines)\n  Lovy Jain - @lovyjain18\n  Luis Mañes (ClearPeople) - @luismanez\n  Luise Freese (Luise Freese M365 Princess) - @LuiseFreese\n  May Alhajri - @MayAlhajri2\n  Malene Friborg (Copenhagen Business Hub) - @malenefri\n  Manjunath Puttaswamy (Momentive Performance Materials India Private Limited) - @ManjunathPutta3\n  Manjunath Siddappa - manjunath-siddappa\n  Manickam Sethuramalingam (microland)\n  Marc D Anderson (Sympraxis Consulting) - @sympmarc\n  Marc Willis\n  Marcin Wojciechowski (Valo) - @mgwojciech\n  Marcus Cadena - @marcusc83\n  Markus Möller - @moeller2_0\n  Marius Solbakken Mellum (TietoEVRY) - mariussm\n  Matt Schuessler (Canviz) - @mattschues\n  Melissa Declercq (Savaco NV)\n  Michael Blumenthal - @MichaelBL\n  Michaël Maillot (onepoint) - @michael_maillot\n  Michał Romiszewski - @romiszewski\n  Miguel Angel García Martínez (ClearPeople Ltd) - magarma\n  Mike Duffy (Boardwalk Pipelines) - @mike_duffy\n  Mohammad Amer (Atea Global Services Ltd.) - @Mohammad3mer\n  Mohamed Derhalli (BDO Canada) - derhallim\n  mrkhandev - mrkhandev\n  Nanddeep Nachan \u0026ndash; @NanddeepNachan\n  Nghiem Doan (Power Objects)\n  Nick Brown (Cardiff University) - @techienickb\n  Nicholas Nguyen (BlueTriton Brands) - @PowerAppsGamer1\n  Nigel Bridport - BaronSparky\n  nilsvbconxion - nilsvbconxion\n  Nikolay Belykh - @unmanagedvisio\n  Nicole J Fleming (Sherwin Williams)\n  Nicolle Abrahams\n  Nizar Grindi - @nizar_grindi\n  Omar El-Anis - omarelanis\n  Oscar Suarez - @Hsuarez42\n  Paolo Pialorsi (PiaSys.com) - @PaoloPia\n  Patrik Hellgren (Sherpas Group) - @patrikhellgren\n  Patrick Dillinger (US Army)\n  Patrick Lamber (Expertsinside AG) - @patricklamber\n  Patrick Tucker (KiZAN) - @Tuckersnet\n  Paul Bullock (CaPa Creative Ltd) - @pkbullock\n  Paul Lindsay (Montana State University) - @MSU_UITMarCom\n  Paul Schaeflein (AddIn365) - @paulschaeflein\n  Per Ove Sandhåland (rewired) - @sandhaaland\n  Peter Paul Kirschner (cubido business solutions GmbH) - @petkir_at{.Link\u0026ndash;primary}\n  Phillip Vetter (Exclaimer Cloud)\n  Prasad Kasireddy (Capgemini) - @Prasad_kasiredd\n  Rachel Spannuth (Thermo Fisher Scientific) - @RachelofLight\n  Rajesh Puri\n  Ralph Rivas (Sogeti) - @bigpix2000\n  randhawaryan - randhawaryan\n  Ravichandran Krishnasamy (Content Formula) - @spfx_blog\n  René Modery - @Modery\n  Reshmee Auckloo - reshmee011\n  Rob - kilicantplay\n  Roberto Ramon (ClearPeople) - roberAlb\n  Rocio Holub (DAI)\n  Rohit S Patil (C3it)\n  Ron Jones (Organogenesis)\n  Ross Allan (PKF LittleJohn)\n  Rory Neary (hybrit.co.uk) - @azurerory\n  Russell Gove (Tronox) - russgove\n  Ryan Holmes (STS Aviation Group) - blitzmann\n  Ryan Randhawa - ryanrandhawa\n  Sabitha Balakrishnan\n  Sabrina Faragoza (Cognizant\u0026rsquo;s Microsoft Business Group)\n  Sajal Maity (JP Morgan Chase) - smaity\n  Sam Collins (Coupled Technology) - @samc148\n  Sarah Meyer (Canviz)   Seb Matthews - @sebmatthews\n  Sergei Sergeev (Mastaq) - @sergeev_srg\n  Sergio Ortega Martín - sortegamartin\n  sguitardude - sguitardude\n  Sharon Weaver (Smarter Consulting) - @sharoneweaver\n  Shantha Kumar T - @ktskumar\n  Sheppounet - Sheppounet\n  Siddharth Vaghasia - @siddh_me\n  Simina Bonner (KPMG)\n  Simon Doy (iThink 365) - @simondoy\n  Simon Hudson (Cloud2) - @simonjhudson\n  Simon Thompson (Experience Applied) - @Thompsonsimon\n  Simon Ågren (Sogeti) - @Agrenpoint\n  Smita Nachan - @SmitaNachan\n  Spencer Harbar (Triumph Media Limited) - @harbars\n  Sue McGuire (Apex Digital Solutions) - @mcguiresue\n  Sue-Adrie Jefthas (UWC)\n  Stefan Bauer (n8d) - @StfBauer\n  Stephan Bisser (Solvion) - @stephanbisser\n  Steven Godwin (New Signature)\n  strafe - strafe\n  Subba Reddi Tummuru\n  Sudharsan Kesavanarayanan (NTT Digital Business Solutions) - @sudharsank\n  Sue McGuire (Apex Digital Solutions) - @mcguiresue\n  Sue-Adrie Jefthas (UWC)\n  Sujith Pasupuleti - sujith1907\n  Susan Hanley - @susanhanley\n  Tabitha Zokaitis - Bewitching-maker\n  taisuke0710 - taisuke0710\n  Tammy Dupuy (CSULB) - @tamsgithub\n  Tammy Schwark - @tammyschwark\n  Terho Antila - @terhoantila\n  Tetsuya Kawahara - @techsn_k\n  tigattack - tigattack\n  Tim Jacomb (Kainos Software Ltd) - timja\n  Tim Balk (Wellmark) - @tlbalk\n  Tim Barrett - NoGeekLeftBehind\n  Thomy Gölles (Solvion) | @thomyg\n  Toby Statham - statto1974\n  Todd Baginski (Canviz) - @toddbaginski\n  Tracy Sterling - TracyGH\n  Udaya Chathuranga (Tech One) - cooluchat\n  Vamshideep Devershetty (Intel Corporation) - @vamshideep\n  Vardhaman Deshpande (Valo Intranet) - @vrdm\n  Vegard Aspnes (Norsk Helsenett SF)\n  Venkat Rao (Avanade)\n  Velin Georgiev (Pramerica) \u0026ndash; @velingeorgiev\n  Veronique Lengelle (CPS) - @veronicageek\n  Vipul Kelkar (Rapid Circle) - @vipulkelkar\n  Xavier Buillit\n  Yannick Plenevaux (PVX Solutions) - @yp_code\n  Yannick Reekmans (Qubix365) - @YannickReekmans{.Link\u0026ndash;primary}\n  Yuxiang - @guan_yuxiang Companies: Here\u0026rsquo;s the companies, which provided support the community initiative for this month by allowing their employees working for the benefit of others in the community. There were also people who contributed from other companies during last month, but we did not get their logos and approval to show them in time for these communications. If you still want your logo for this month\u0026rsquo;s release, please let us know and share the logo with us. Thx.     Addin365\n  aequous\n  Arvo Systems\n  Canviz Solutions\n  Catapult Systems\n  ClearPeople\n  CPS\n  cubido business solutions GmbH\n  Content+Cloud\n  devstack.ds\n  DMI\n  dqc\n  Intelogy\n  iThink 365\n  MondayCoffee\n  N8D\n  NTT Digital Business Solutions\n  onepoint\n  Piasys\n  PixelMill\n  Pramerica\n  PVX Solutions\n  Qubix\n  Rapid Circle\n  Sharepointalist\n  Sherpas\n  Solvion\n  Sogeti\n  Storm Technology\n  Struyf Consulting\n  Sulava\n  Sympraxis Consulting\n  ThreeWill\n  Valo\n  Voitanos\n  Wortell\n\\\n  Microsoft people: Here\u0026rsquo;s the list of Microsoft people who have been closely involved with the PnP work during last month.\n Aakash Bhardwaj - @aakash_316 Adam Jimenez - Adam-Jimenez Alex Jerabek - AlexJerabek Alex Talarico - getalex Alex Terentiev - @alexaterentiev Allen Snow - @asnow003 April Dunnam - @aprildunnam Ayca Bas - @aycabs Bert Jansen - @O365Bert Beth Pan - @beth_panx Bob German - @Bob1German Bryan Petersen - petey121175 Charles Sterling - @chass Dan Wahlin - @DanWahlin David Chesnut - davidchesnut Elizabeth Samuel - ElizabethSamuel-MSFT Elise Yang - @elisenyang Hugo Bernier - bernierh Jason Johnston - jasonjoh Jeremy Kelley - @Fizzlenik Jitin Mathew - v-jmathew Joanne Hendrickson - JoanneHendrickson John Hart - John-Hart John Nguyen - johnguy0 Karthig Balendran - @KarthigBalendr1 Kevin Coughlin - @kevintcoughlin Keyur Patel - keyur32 Koen Zomers - @koenzomers Holland Kaviani - Holland-ODSP Laura Graham - Lauragra Linda Lu Cannon - lindalu-MSFT Loki Meyburg - @lokimeyburg Luca Bandinelli - lucaband Matt Evans - MattEEvans Melissa Torres - @Meltorac Mikael Svenson - @mikaelsvenson Natalie Pienkowska - NataliePienkow1 Nancy Wang - @nancyatMSFT Nik Charlebois - @NikCharlebois Nicolas Vogt - vogtn Nikola Metulev - @metulev Pam Green (Microsoft) - @contextuallib Pat Miller - @PatMill_MSFT Patrick Rodgers - @mediocrebowler Rabia Williams - @williamsrabia Rick Kirkham - Rick-Kirkham Sam Larson - salarson Shane Weaver - shweaver-MSFT Sébastien Levert - @sebastienlevert Steven Jia - Steven-Jia Tom Resing - @resing Tomomi Imura - @girlie_mac Vesa Juvonen - @vesajuvonen Wajeed Shaikh - Wajeed-msft Waldek Mastykarz - @waldekm Wictor Wilen - @wictor VivekSharma-MSFT - VivekSharma-MSFT Vincent Biret - @baywet VVS Pothan - Pothan-MSFT  MVP Community team MVP Community team (PnP Team) manages the PnP community work in the GitHub and also coordinates different open-source projects around Microsoft 365 topics. PnP Team members have a significant impact on driving adoption of Microsoft 365 topics. They have shown their commitment to the open-source and community-driven work by constantly contributing to the benefit of the others in the community. Thank you for all that you do! 👏\n Albert-Jan Schot (Portiva) - @appieschot Andrew Connell (Voitanos) \u0026ndash; @andrewconnell Andrew Koltyakov (ARVO Systems) \u0026ndash; @andrewkoltyakov Beau Cameron (Aerie Consulting) - @Beau__Cameron Chris Kent (DMI) \u0026ndash; @theChrisKent David Warner II (Catapult) - @DavidWarnerII Elio Struyf (Struyf Consulting) \u0026ndash; @eliostruyf Emily Mancini (Sympraxis Consulting) - @EEMancini Eric Overfield (PixelMill) - @EricOverfield Erwin van Hunen (Valo Intranet) \u0026ndash; @erwinvanhunen Frank Cornu (aequos) - @FranckCornu Gautam Sheth (Valo Intranet) - @gautamdsheth Julie Turner (Sympraxis Consulting) - @jfj1997 Laura Kokkarinen (Sulava) - @LauraKokkarinen Luise Freese - @LuiseFreese Marc D Anderson (Sympraxis Consulting) - @sympmarc Paolo Pialorsi (Piasys.com) \u0026ndash; @PaoloPia Patrick Lamber (Expertsinside AG) - @patricklamber Paul Bullock (CPS) - @pkbullock Stefan Bauer (n8d) \u0026ndash; @StfBauer Velin Georgiev (Pramerica) \u0026ndash; @velingeorgiev Veronique Lengelle (CPS) - @veronicageek Yannick Plenevaux (PVX Solutions) - @yp_code Here are the Microsoft Internal PnP Core team members: Alex Terentiev - @alexaterentiev April Dunnam - @aprildunnam Bert Jansen \u0026ndash; @O365Bert Bob German - @Bob1German Garry Trinder - @garrytrinder Hugo Bernier - @bernierh Koen Zomers - @koenzomers Mikael Svenson \u0026ndash; @mikaelsvenson Patrick Rodgers \u0026ndash; @mediocrebowler Rabia Williams - @williamsrabia Sébastien Levert - @sebastienlevert Vesa Juvonen \u0026ndash; @vesajuvonen Waldek Mastykarz \u0026ndash; @waldekm Wictor Wilen - @wictor  Next steps See all of the available community calls, tools, components and other assets from https://aka.ms/m365pnp. Get involved! Got ideas or feedback on the topics to cover, additional partnerships, product feature capabilities? - let us know. Your input is important for us, so that we can support your journey in Microsoft 365. \u0026ldquo;Sharing is caring\u0026rdquo; 🧡\n Microsoft 365 Community (PnP) \u0026ndash; August\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-august-2021-update/images/pnp-aug-2021-release_hu7359959b535768319fbf998689846913_466358_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-august-2021-update/","tags":[],"title":"Microsoft 365 PnP Community -- August 2021 update"},{"categories":["Microsoft 365 developer podcast"],"contents":"Sean McDonough shares his tips and tricks for improving SPO performance. Sean\u0026rsquo;s tips are for developers, administrators and users!\nListen to the show here: SPO Performance with Sean McDonough (m365devpodcast.com)\nCommunity Links  Accessing SharePoint sites with resource specific consent (RSC) and Microsoft Graph Restrict calls to Azure Functions from SPFx Add multiple users to a SharePoint Group using single API Call Flexible and powerful logging using PnP Logging in SPFx Demystify Microsoft Viva Connections its extensibility model  ","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-august-2021-update/images/pnp-aug-2021-release_hu7359959b535768319fbf998689846913_466358_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-dev-podcast-spo-performance-with-sean-mcdonough/","tags":[],"title":"Microsoft 365 Dev Podcast - SPO Performance with Sean McDonough"},{"categories":["Office add-in developer community call"],"contents":"Call summary This month\u0026rsquo;s community call features presentations - Dialog API security updates (recent changes to dialog API that address a security vulnerability requires action from you IF your add-in uses cross-domain communication between the dialog and taskpane. Requirements and timeline with grace period), PowerPoint API update: Shape object (preview the new Shape APIs \u0026ndash; insertion APIs along with ability to manipulate basic, line \u0026amp; fill, text frame \u0026amp; range properties of these objects.), and PnP: Open in Teams (access data hosted on a website inside a Microsoft Teams channel for purposes of collaborating on the data). This month\u0026rsquo;s Community spotlight recognizes MVP Maarten van Stam for his continued contributions. Thank you! Q\u0026amp;A in chat throughout call. The call was hosted by David Chesnut (Microsoft) | @davidchesnut. Microsoft Presenters: Lillian Liu - Senior Program Manager and Onur Onder, Senior Software Engineer. Recorded August 11, 2021.\nAgenda  Dialog API security updates - Lillian Liu, Senior Program Manager (Microsoft) \u0026ndash; 01:00 PowerPoint API update: Shape object - Onur Onder, Senior Software Engineer (Microsoft) \u0026ndash; 05:02 PnP: Open in Teams - David Chesnut, Senior Dev Writer (Microsoft) | @davidchesnut \u0026ndash; 13:08 Q\u0026amp;A \u0026ndash; 28:15     Demo Summaries  PowerPoint API update: Shape object \u0026ndash; overview and live demo of the new Shape APIs \u0026ndash; insertion APIs (Geometric Shapes, Lines, Text Boxes) along with ability to manipulate properties of these objects. Some of these API\u0026rsquo;s are available now on PowerPoint Online. APIs to be released in Windows Desktop and MAC builds in September - October. User customized shapes may be saved, applied to master slide view.  PnP: Open in Teams \u0026ndash; access data hosted on a website inside a Microsoft Teams channel for purposes of collaborating on the data. Teams detects the web-based data set on site, prompts viewer to open. If opened, then data (in memory using OOXML) is written to a spreadsheet and saved in OneDrive via Graph. Code sample available. Script Lab add-in uses Graph APIs and ASP.NET.  Q\u0026amp;A (Question \u0026amp; Answers) In response to your post about runtimes and XML errors - I am also having the same issue. It appears to be a bug in Visual Studio 2019 (https://github.com/OfficeDev/office-js/issues/1756). I\u0026rsquo;ve not worked out how to get around it just yet. Any advice would be welcome please. We recently added some guidance about how to update the XSD files in Visual Studio to solve this problem. For full details, see Troubleshoot development errors with Office Add-ins - Manifest schema validation errors in Visual St....\nWhen is the GA for custom contextual tab on Mac? We don\u0026rsquo;t have an ETA on this yet but hope to provide an update soon. When can we expect addSvg method to be officially released and can you please provide us with a working example of this method? My attempts keep erroring with \u0026quot;this picture can\u0026rsquo;t be displayed\u0026quot;! There are some issues holding us back from releasing the addSvg API to general availability. We\u0026rsquo;ll update you as soon as we have a definitive timeline for when it will go to GA.\nHere is a sample that you can paste into Script Lab. It will insert a yellow circle into the spreadsheet. $(\u0026#34;#run\u0026#34;).click(() =\u0026gt; tryCatch(run)); async function run() { await Excel.run(async (context) =\u0026gt; { const sheet = context.workbook.worksheets.getActiveWorksheet(); sheet.shapes.addSvg(\u0026#34;\u0026lt;svg width=\u0026#39;100\u0026#39; height=\u0026#39;100\u0026#39; xmlns=\u0026#39;http://www.w3.org/2000/svg\u0026#39;\u0026gt;\u0026lt;circle cx=\u0026#39;50\u0026#39; cy=\u0026#39;50\u0026#39; r=\u0026#39;40\u0026#39; stroke=\u0026#39;green\u0026#39; stroke-width=\u0026#39;4\u0026#39; fill=\u0026#39;yellow\u0026#39; /\u0026gt;\u0026lt;/svg\u0026gt;\u0026#34;); await context.sync(); }); } /** Default helper for invoking an action and handling errors. */ async function tryCatch(callback) { try { await callback(); } catch (error) { // Note: In a production add-in, you\u0026#39;d want to notify the user through your add-in\u0026#39;s UI.  console.error(error); } }  Note that in Script Lab you need to go to the libraries tab and use https://appsforoffice.microsoft.com/lib/beta/hosted/office.js since this is a preview API.\nWhen will it be possible to change text on slides and slide masters?\nAs Onur showed in his demo on the community call, these features will be coming out sometime in the next few months.\nWhen is the Word API going to be updated?\nWe are looking to share some more information on the Word APIs around the September timeframe. Is there a known bug or lack of support for insertFileFromBase64() with Word 97-2003 documents? The insertFileFromBase64 API does not support Word 97-2003 document formats. This is primarily a design artifact of supporting Word on the web, which only supports .docx and .dotx formats. Will you support manipulating the Tags property of Shape objects (as well as Slide and Presentation objects)? Developers REALLY like to store information in Tags objects. Yes, tag support is currently in preview - https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/powerpoint-preview-apis How do I add an officeGroup to my CustomTab for my Word add-in? I can\u0026rsquo;t seem to find much info on this.\nofficeGroup is currently only supported for PowerPoint. We plan to support Word and Excel in the future but we don\u0026rsquo;t have an ETA just yet.\nCould we manage the shape object in a different slide?\nYes.\ncontext.presentation.slides has a collection of slides. Use the slide.shapes collection to access a shape on another slide.\nDo the shape APIs work with placeholder shapes, both in Normal and Slide Master view? Yes. Shape APIs work with placeholder shapes, both in Normal and Slide Master view.\nCan we change a shape\u0026rsquo;s alt text?\nUnfortunately alt text editing is not supported at this time with this set of APIs.\nWhen will the shape APIs be available in Excel?\nFor Excel support, more information is in the article, Work with shapes using the Excel JavaScript API.\nWill the shapes API also include things like pictures and tables?\nThe Shapes collection will have information about the shape type. This means you can differentiate between pictures and other shapes. Some of the fill and line properties also applies to pictures, so those can be updated too. But there won\u0026rsquo;t be more picture specific APIs in this update.\nCan the shapes API be used to copy existing shapes between slides?\nNot yet. We are looking to provide this capability in a future update.\nWe\u0026rsquo;re trying out the beta of shared/delegated mailbox support and finding that in OWA, we still can\u0026rsquo;t open a shared mailbox. We get the error: \u0026quot;The operation on mailbox failed because it\u0026rsquo;s out of the current user\u0026rsquo;s write scope.\u0026quot; There are more details here(https://docs.microsoft.com/answers/questions/506662/outlook-owa-addin-installation-permission-...). Is this something we can expect to work in the release?**\nThis is a known outcome and you can find more information, including how to set up the mailboxes to work, in this GitHub issue: https://github.com/OfficeDev/office-js/issues/1877#issuecomment-897097347\nDoes SSO (getAccessToken) work for an add-in online inside of Word inside of Teams?\nUsing SSO from Word inside of Microsoft Teams is not supported today. But we are working on enabling this in the near future and hope to share some more information soon.\nSay a user has an Office 365 license, but has only ever used Excel for Windows. They also have access to Teams. If we open an Excel workbook in Teams, will they always be able to see and work with it? Are there any Office licensing issues?\nThere shouldn\u0026rsquo;t be any licensing issues, as long as they are licensed for Microsoft 365 (the new name for Office 365).\n**Last month I asked about the ability to change the width of a task pane in Outlook.\nCan someone update me or share a link to the response from last month?** Thanks for asking about this again. We unfortunately lost some of the Q\u0026amp;A from the last chat.\nCurrently the user can change the task pane width in Word, Excel, and PowerPoint. However you can\u0026rsquo;t set the task pane width programmatically. That is on our backlog but we don\u0026rsquo;t have an ETA for when we\u0026rsquo;ll implement this feature.\nOutlook on the web does not support task pane resizing, and setting task pane width is not on the backlog for Outlook. Outlook scenarios can be slightly different, so if you want to create a feature request with more details, that would be helpful. You can create a feature request at Microsoft 365 Developer Platform - Microsoft Tech Community.\nIn the Word API, is there a way to restrict the document editing with Office.JS? I\u0026rsquo;m looking at document level editing control, not content controls.\nRight now, restricting document editing is not part of the Word APIs. However this sounds like a great feature request to make at Microsoft 365 Developer Platform - Microsoft Tech Community.\n\nCan you recommend any books, training or certification courses for development in Office.JS?\nFor books you might take a look at Building Office Add-ins Using Office.js. There isn\u0026rsquo;t a specific certification for Office Add-in development, but there is a Microsoft 365 Certified: Developer Associate certification. There is an Office Add-in specific learning at Extend Office clients with Office add-ins \u0026ndash; Associate - Learn | Microsoft Docs.\nDoes anyone know when VSTO will reach official end of life?\nWe continue to support the VSTO and VBA technologies and keep them healthy and secure.\nIs there way to retrieve the previous value of a cell from inside of a custom function?\nWe don\u0026rsquo;t have official support for custom functions to share previous values. But there are mechanisms available that let you enable this. You need to configure your add-in to use the shared runtime. Cache the results back from your custom function, and use the caller.address parameter so you know where the custom function was being called from (where you can get the old value from your cache).\nIs supporting encrypted S/MIME messages and compose mode on Outlook for mobile on the road map?\nThis is on our backlog but we don\u0026rsquo;t yet have an ETA for when this could be available.\nResources Dialog API security updates  Cross-domain messaging to the host runtime Cross-domain messaging to the dialog runtime  PowerPoint new Shape APIs  npm package: [https://www.npmjs.com/package/@microsoft/office-js/v/1.1.71-custom.37] [CDN URLs for direct consumption:]  https://unpkg.com/@microsoft/office-js@1.1.71-custom.37/dist/office.js] https://unpkg.com/@microsoft/office-js@1.1.71-custom.37/dist/office.d.ts   Add a simple shape with some properties: https://gist.github.com/ononder/3f8986126d07a3f81d7fc36af80dbe72  PnP open in Microsoft Teams sample  Readme and sample: https://github.com/OfficeDev/PnP-OfficeAddins/tree/davech-open-in-teams/Samples/excel-open-in-teams.  Pull request: https://github.com/OfficeDev/PnP-OfficeAddins/pull/197.   Office Add-ins community call  Recurring, monthly community call calendar invite Community call topic requests and questions Community call recordings on the YouTube Microsoft 365 community channel  Office Add-ins feedback  Technical questions \u0026ndash; Microsoft Q\u0026amp;A (office-js-dev), (office-addins-dev) Issues \u0026ndash; GitHub Recommendations and suggestions \u0026ndash; Microsoft 365 Developer Platform ideas  The next Office Add-ins community call is on Wednesday, September 8, 2021 at 8:00AM PDT. Get the calendar invite at https://aka.ms/officeaddinscommunitycall.\n","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-august-2021/images/office-add-ins-august-agenda_hu601b481eaf652f87f5f80d5dcc89b96b_381572_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-august-2021/","tags":[],"title":"Office Add-ins community call -- August 2021"},{"categories":["Community post"],"contents":"Developing and testing your error handling code is really important to ensure the end product is resilient. I\u0026rsquo;ve always found this area to be a bit of a minefield when developing against SharePoint and more recently the Microsoft Graph API.\nI usually resort to using some software that intercepts the calls being made (e.g. Fiddler) and returns a mocked error response. Some error messages (such as a 502 Bad Gateway) are pretty easy to mock, but others are much harder, and must contain certain headers and body content. If you are using some of the SDKs the problem can become even more challenging as they are expecting certain error responses to have particular body structure and content.\nAn addition made to the SharePoint REST API some years ago that I really loved was the ability to \u0026ldquo;ask\u0026rdquo; the SharePoint API itself to return a mock 429 (throttling) error. This is brilliant in it\u0026rsquo;s simplicity, no longer do you need a piece of software intercepting and trying to hand craft valid error responses (especially a tricky one like a 429 with retry-after headers). The way this works with the SharePoint REST API is that you simply add the test429=true URL parameter. http://camtoso.sharepoint.com/_api/web/lists?test429=true\nUsing this URL would cause SharePoint to respond with a valid 429 error instead of trying to process the request. This lets you easily test your error handling code to ensure your code can handle and retry those 429 when they do crop up in production. Waldek Mastykarz wrote a great post on this behavior in the SharePoint REST API.\nNow we\u0026rsquo;ve all moved to the Microsoft Graph API I assumed this technique wouldn\u0026rsquo;t work anymore. I recently got curious and tried it anyway, to my surprise it actually does work! Maybe I shouldn\u0026rsquo;t be that surprised as the Graph API conceptually is passing the calls on to the underlying workload (SharePoint). Now don\u0026rsquo;t get too excited, it doesn\u0026rsquo;t work for every call to the Graph API, it will only work for calls that are being passed through to SharePoint so don\u0026rsquo;t expect to be able to call /teams and use this trick. Using the Microsoft Graph Explorer it was really easy to poke around, here\u0026rsquo;s some calls that I have tried.\nSharePoint (/sites)\nhttps://graph.microsoft.com/v1.0/sites/root/drives?test429=true    SharePoint List Items\nhttps://graph.microsoft.com/v1.0/sites/root/lists/{listid}/items?test429=true   OneDrive (/drive)\nhttps://graph.microsoft.com/v1.0/me/drive/root/children?test429=true    Look at those beautiful 429 responses that I no longer have to intercept and hand craft. Now what would be amazing is if the Graph API standardized on this and gave us a way via parameters (or headers) to ask the Graph to respond with all the different types of errors that were possible so we could write and test code that was truly resilient and not just \u0026ldquo;theoretically\u0026rdquo; resilient until we hit an actual error one day in production and get a response that was a little different to what we were expecting.\n","image":"https://pnp.github.io/blog/post/simulating-429-throttling-in-microsoft-graph-api-sharepoint/images/image_hu1f15932cb612015a74238bd55426565d_137842_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/simulating-429-throttling-in-microsoft-graph-api-sharepoint/","tags":["Microsoft Graph"],"title":"Simulating 429 Throttling in Microsoft Graph API (SharePoint/OneDrive workloads)"},{"categories":["Microsoft 365 Developer Community Call"],"contents":" Call summary Summer break and community call schedule updates reviewed. Microsoft 365 tenant \u0026ndash; script samples gallery - s*cripts for PowerShell and CLIs. * Sign up and attend one of a growing list of events hosted by Sharing is Caring this month. Announced PnP Recognition Program and more and more Microsoft Teams Samples and Power Platform Samples. Project releases this week - Yo teams \u0026ndash; yoteams-deploy v1.0.1 Preview. Open-source project status: (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.6.0 GA, PnP Provisioning Engine Schema v202103 Version 1.7.0 \u0026ndash; Late Summer 2021 PnP .NET Libraries - PnP Core SDK v1.3.0 GA Version 1.4.0 \u0026ndash; Late Summer 2021 PnP PowerShell v1.7.0 GA Yo teams - generator-teams v3.2.0 GA v3.3.0 Preview soonish Yo teams - yoteams-build-core v1.2.0 GA, v1.2.1 Preview Yo teams \u0026ndash; yoteams-deploy v1.1.0 GA, v1.0.1 Preview Yo teams - msteams-react-base-component v3.1.0 Microsoft Graph Toolkit (MGT) v2.2.0 GA Bug fixes and Updates, v2.3.0 later in August\n Four Script and three Power Platform samples were delivered and no new Teams samples in the last two weeks. But wait, we have a Teams Samples wish list. Need an idea for a Teams sample? Feel like granting wishes? Collaborate with Teams Engineering to create a sample and earn a Credly badge. The host of this call was Vesa Juvonen (Microsoft) @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call.\n  Create a Teams Sample - Microsoft Teams Samples Wish list \u0026ndash; 10 opportunities to share your Teams Dev prowess with the community | [https://aka.ms/teams-sample-wishlist]{.underline}\n  Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; August 31st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; August 23rd PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; August 24th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; August 25th Ask me anything \u0026ndash; Recognition Program \u0026ndash; September 7th Ask me anything \u0026ndash; Script Samples \u0026ndash; September 14th Ask Me Anything \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th First Time Presenter \u0026ndash; August 30th More than Code with VSCode \u0026ndash; TBS Maturity Model Practitioners \u0026ndash; August 17th and every 3rd Tuesday of month, 7:00am PT PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  No new Teams samples this week **Microsoft Power Platform Samples: **(https://aka.ms/powerplatform-samples)\n  Power Automate: SharePoint Collect Feedback - April Dunnam (Microsoft) | @aprildunnam (link will be good by Aug 24)\n  Power Automate: Get Graph API Data within Power BI Reports - Scott McKenzie | @365EDUBI (link will be good by Aug 24)\n  Fluent UI Custom Theme - Fabio Franzini | @franzinifabio\n  **Script Samples: ** (https://aka.ms/script-samples)\n Download contents of Document library as PDF \u0026ndash; Russell Gove (Tronox) | @russgove Assign Graph permissions to a Managed Identity \u0026ndash; Luise Freese | @LuiseFreese Reset files permissions unique to Inherited \u0026ndash; Dipen Shah (Rapid Circle) | @Dips_365 Import taxonomy terms and labels into a term set \u0026ndash; Reshmee Auckloo | @ReshmeeAuckloo   Hopefully by the end of this year we will finally have the opportunity to meet face-to-face, that would be awesome.\nDemos Demos delivered in this session\n  Building your first Power Platform community connector \u0026ndash; start with this brilliant lay-of-the-land overview. Presenter advises learning by looking at configurations of existing connectors, of code samples, and by reviewing best practices documentation. Build your connector in the UI - naming, security (authentication requirement), definition (actions, triggers, references, responses\u0026hellip;), code, and test operations. Then download it - the swagger or Open API file, using Paconn CLI.   Operators for Precision within List Formatting \u0026ndash; Microsoft Excel like formatting in a SharePoint list is possible. Once you understand what you have \u0026ndash; numbers or strings, precision formatting is easily achieved. Learn how to display folder and file sizes or numbers generally in lists with 2-digit precision / formatting (0.00), using various operators - toString, indexOf, substring, padStart, padEnd, ceiling, floor AND/OR with formulas in sample code.   Getting stated with Microsoft Teams Toolkit and Blazor \u0026ndash; focusing on how to use Web Technologies to create a tab (Blazor app) inside of Teams using Visual Studio. Open new project (Microsoft Teams App) in Visual Studio. Install/open the Teams Toolkit (Preview) for Visual Studio. Configure for SSO. Select F5. Presto, a default page/tab is created with sample code and implements GraphClient. Register the AAD app and modify it as you please.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  PnP .NET library updates - Vesa Juvonen (Microsoft) | @vesajuvonen - 6:44\n  PnP PowerShell - Vesa Juvonen (Microsoft) | @vesajuvonen - 7:30\n  yo Teams updates - Wictor Wilén (Microsoft) | @wictor - 8:04\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) | beth-panx - 9:11\n  Microsoft Script Samples - Paul Bullock (CaPa Creative Ltd) | @pkbullock - 3:15\n  Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German - 11:24\n  Microsoft Power Platform Samples - Vesa Juvonen (Microsoft) | @vesajuvonen - 14:05\n  Demo: Building your first Power Platform community connector \u0026ndash; Daniel Laskewitz (Sogeti) | @laskewitz [-][ 16:21]\n  Demo: Operators for Precision within List Formatting \u0026ndash; Chris Kent (DMI) | @theChrisKent [-][ 30:23]\n  [Demo: Getting stated with Microsoft Teams Toolkit and Blazor \u0026ndash; Thomas Gölles (Solvion) | @thomyg -][ 44:13]\n  Resources Additional resources around the covered topics and links from the slides.\n Repository - Microsoft Power Platform Connectors  Documentation - Extend an OpenAPI definition for a custom connector  Article - Using Dynamic Values in Microsoft Flow  Documentation - Microsoft Power Platform Connectors CLI  Demo - Publish a connector to the Power Platform with Independent Publisher Connector Program Natalie Pienkowska (Microsoft)  [Documentation \u0026ndash; ]Operators Documentation - Use column formatting to customize SharePoint  All Samples - SharePoint List Formatting Samples  Videos - Microsoft Lists  Documentation - Prerequisites: Get started with Microsoft Teams app development  Issues List - OfficeDev/TeamsFx  Tool \u0026ndash; Graph Explorer  Repo \u0026ndash; Demo code  Sample Project - TeamsLeaderboard  Samples - Power Platform Samples | aka.ms/powerplatform-samples Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples Microsoft Teams Samples Gallery | aka.ms/teams-samples  General resources  Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  SharePoint Framework call \u0026ndash; August 26th at 7:00 am PDT |https://aka.ms/spdev-spfx-call Microsoft 365 platform \u0026ndash; August 31st at 8 AM PDT | https://aka.ms/m365-dev-call (Starts from the 31st of August as weekly cycle) M365 General Dev call \u0026ndash; September 2nd at 7:00 am PDT |https://aka.ms/m365-dev-sig Office add-in monthly call \u0026ndash; September 8th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; September 9th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall Power Apps monthly call \u0026ndash; September 15th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall Microsoft Identity Platform \u0026ndash; September 16th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;   Microsoft 365 PnP team, Microsoft - 20th of August 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-19th-of-august/images/recording-august-19th_hue986a7b7385da1c3ed207fbf30c11714_245359_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-19th-of-august/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 19th of August, 2021"},{"categories":["Community post"],"contents":"Adding a user to a SharePoint group from custom solutions via REST API in SharePoint Framework (SPFx) solutions or Power Automate or any other custom solutions is a very common scenario. In those scenarios, we rely on the site groups api _api/web/sitegroups({GROUPID}) and add the LoginName in the Body. This will be a perfect solution if you just need to add only 1 user to the group.\nImagine scenarios where you have more than 1 user to be added to the group. Unfortunately, the above API does not support adding more than 1 user in the Payload. That being the case, for achieving the same result, you may have to call the API in a recursive fashion which is not a very efficient way of execution if you have quite a large number of users to be added and repeated API calls would not be an optimal solution when you design your application.\nAlternate API endpoint to the rescue Don\u0026rsquo;t worry, there is another endpoint that you can rely upon which will achieve the same result which is /_api/SP.Web.ShareObject. This is the same endpoint that is used when you add users to the Owners / Members / Visitors from the user interface of the Modern SharePoint site. This endpoint is used primarily for sharing the Site, Folder, Document, etc. This is the same endpoint that is used when you want to share with external users as well. It also has a property which is roleValue through which you can specify Id of the SharePoint Group. So the entire API call may look something like below.\nPOST https://TenantName.sharepoint.com/SiteName/_api/SP.Web.ShareObject\nBODY:\n{ \u0026#34;url\u0026#34;: \u0026#34;https://tenantname.sharepoint.com/sites/SiteName\u0026#34;, \u0026#34;peoplePickerInput\u0026#34;: \u0026#34;[{\u0026#34;Key\u0026#34;:\u0026#34;user1@tenantname.onmicrosoft.com\u0026#34;},{\u0026#34;Key\u0026#34;:\u0026#34;user2@tenantname.onmicrosoft.com\u0026#34;}]\u0026#34;, \u0026#34;roleValue\u0026#34;: \u0026#34;group:32\u0026#34; } Notice. This REST API is not officially documented by Microsoft, so it\u0026rsquo;s not officially supported to be used externally by partners and customers. This means that the signature can be changed without further notice.\nDetails As you can see the major property which is relevant for us is peoplePickerInput\npeoplePickerInput: Used to give the list of Usernames that needs to be added the SharePoint Group. Its value is a JSON array of Key Value Pair ({\u0026quot;Key\u0026quot;:\u0026quot;user1@tenantname.onmicrosoft.com\u0026quot;} where the Username is given the Value.\nroleValue : We will give the Id of the SharePoint Group to this value in the format group:{GROUPID}. This will be the Id of the SharePoint group to which the above-mentioned users will be added.\nSince this API has a feature to share the site or document with external users also, it has many properties which will be relevant in those scenarios. But for us, since we are just adding the user to the SharePoint group, all we need is the above list of objects in the JSON body.\nCaveats  With Power comes Responsility Caveats (Some)\n Since we are using the API which is used for Sharing the Site, the API even supports adding the permission to the users albeit users are not part of your Active Directory. That being the case when you try to add the users who are not part of your AD, there will be 2 outcomes.\nSharing Options is \u0026ldquo;Anyone\u0026rdquo; When you have external sharing enabled and are trying to add a user who is not part of your site there wouldn\u0026rsquo;t be any error thrown by the API, but instead, a Sharing Link will be generated. So if you want to ensure that there are no inadvertent sharing links, ensure that you are checking the presence of the user before you execute the endpoint. Otherwise, over time there will be a large number of sharing links cluttering in your web\nIn the other cases of sharing, when the user does not exist, you will get an error that will be thrown by the endpoint.\nCLI for Microsoft 365 If you need to automate the same scenario or execute via scripts, you can use a command from CLI for Microsoft 365 which is m365 spo group user add. This command will allow you to add multiple users to SharePoint group. If you have an automation or provisioning solution which has this scenario, it is going to be super helpful.\nPhoto by Alex Suprun on Unsplash\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-19th-of-august/images/recording-august-19th_hue986a7b7385da1c3ed207fbf30c11714_245359_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/add-multiple-users-to-a-sharepoint-group-using-single-api-call/","tags":[],"title":"Add multiple users to a SharePoint Group using single API Call"},{"categories":["Power Apps community call"],"contents":"Call summary Topics covered in this month\u0026rsquo;s community call include demos in\n Performance Insights (a new Power Apps self-service tool that analyzes runtime user data, makes efficiency recommendations), Event Calendar Power App (See event dates in month and full year views by country. Simplify event scheduling by comparing holidays in up to 4 countries), How To Feed Your Dragon Game (a Demo Extravaganza 2021 entry. 3 games, 3 levels of difficulty - dialed up/down through variable record) along with Recent Power Apps News and Community Contributions, and more!   This session included Q\u0026amp;A in chat. The call was hosted by Todd Baginski (Canviz). Demo presenters are Varda Shrivastava, Juli Reid, and Gerard Simpson.\nThis call was recorded on August 18, 2021. Thank for attending the call or viewing it on demand. Agenda  Performance Insights - Varda Shrivastava \u0026ndash; 4:10 Event Calendar Power App - Juli Reid \u0026ndash; 14:09 How To Feed Your Dragon Game - Gerard Simpson (SSE Renewables) | @PowerFanAddict \u0026ndash; 25:47 Recent Power Apps News and Community Contributions \u0026ndash; Charles Sterling (Microsoft) | @chass \u0026ndash; 44:42  Demos   Performance Insights \u0026ndash; a new Power Apps self-service tool for enterprise app makers that analyzes runtime user data and delivers a prioritized list (daily) of recommendations to make Model-driven or customer engagement Power Apps perform more efficiently. Evaluates usage patterns, forms performance, customizations, configurations, environment, and networking. Suggests mitigation and provides links to references. Available/Visible (Public Preview) in apps now.\n  Event Calendar Power App \u0026ndash; auto-populate events for current user in this calendar. See event dates for multiple regions in month and full year views by country. Simplify event scheduling by comparing holidays in up to 4 countries for specified month. Primary components - galleries, gallery wrap count and calendar function. Embed into a SharePoint page, 1 external data source, includes tooltips, sample available in mid-September. A Demo Extravaganza 2021 entry.\n  How To Feed Your Dragon Game \u0026ndash; a Demo Extravaganza 2021 entry. 3 games, 3 levels of difficulty, and a Leader Board. Tests hand/eye coordination, speed, precision, memory. Objective is to gather as many vegetables (portions) as possible to feed hungry dragons. Key build elements \u0026ndash; images, audio clips, data values. Difficulty level dialed up/down (gallery size, image size, collections, timers) - properties in variable record that cascades down through app.   Recent News \u0026amp; Cool Stuff  Microsoft Power Platform: 2021 release wave 2 plan - https://docs.microsoft.com/power-platform-release-plan/2021wave2/ Announcing public preview of Custom Pages for converging model-driven apps and canvas apps - Announcing public preview of Custom Pages for converging model-driven apps and canvas apps | Microso... Announcing command designer with Power Fx (preview) - https://powerapps.microsoft.com/blog/announcing-command-designer-with-power-fx-preview/ Announcing the public preview for connection references support in Power Platforms Tools - https://powerapps.microsoft.com/blog/announcing-the-public-preview-for-connection-references-s...  Actions  Join us for our next call: September 15, 2021 at 08:00am PDT | https://aka.ms/powerappscommunitycall  Referenced in this session   Blog - Introducing Performance Insights (preview) for Model-driven apps   Demo - Performance Insights For Power Apps - Power CAT Live   Feedback - Feedback thread for Performance Insights (preview)   [Demo - ]PowerApps Calendar Control - Build your own using Galleries[ (Shane Young)]\n  [Blog - ]Tooltips, not just a boring description\n  [Demo - ]Visual Holiday Calendar Demo\n  [Demo - Gerard Simpson\u0026rsquo;s YouTube channel | ]https://www.youtube.com/channel/UC8A8L7bplMnkLOB780mMfHg[ (empty channel) ]\n  [Download \u0026ndash; ]How to Feed your Dragon app\n  Learn more  See the full blog post for this call on the Tech Community Blog - https://aka.ms/m365pnp/community/blog Microsoft\u0026rsquo;s Power Platform website Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - https://aka.ms/PowerAppsCommunitySamples Power Apps Community Videos -https://aka.ms/PowerAppsCommunityVideos PowerPlatformLearn Resources | https://www.powerplatformlearn.academy PnP Power Platform Samples | https://www.aks.ms/powerplatform-samples Power Addicts Hangout - https://wearepoweraddicts.com #LessCodeMorePower Video Series - https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Share more - draw attention to your great work - #PowerAppsCC  Stay connected  Twitter: https://twitter.com/MSPowerPlat Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365DevYouTube​ Blogs - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/powerappscommunitycall  ","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-19th-of-august/images/recording-august-19th_hue986a7b7385da1c3ed207fbf30c11714_245359_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-august-2021/","tags":[],"title":"Power Apps Community Call -- August 2021"},{"categories":[],"contents":"Introduction Logging plays an important role in any application. Whether it is a simple or complex app, logging helps you to record not only errors but also other information which you can use to improve your app. In this article, we will see how we can leverage the logging feature provided by PnP to capture different logs while communicating with SharePoint or for any other features implemented in the component Understanding the Logging concept by PnP The logging module can be used by installing the npm package named @pnp/logging. This is a very lightweight subscribable and extensive logging framework. There are multiple ways to make use of this feature in our web part, let us see the concept of using Listeners. There are 2 listeners provided by PnP. ConsoleListener This is a very simple listener as the name indicates, the log message is written to the browser console. There are no settings for this listener. It writes to the corresponding console method based on the log level. FunctionListener This listener type will allow us to wrap our own functionality by creating a function that takes a LogEntry as its single argument. This is very useful if we already have a common logging mechanism that we can leverage on it. Using this listener type, the message can be passed to any system or stored in a list or in a file based on our own implementation. The below steps and guidance will use this listener to write the logs in a SharePoint list. Some of the log levels provided are\n Verbose Info Warning Error Off  Focus on Code Let us start by creating a new web part project using yeoman SharePoint generator, before that create a folder where you want to create the web part. Navigate to that folder and run the below command yo /sharepoint  The generator will ask you a couple of questions,\n Enter the web part name as your solution name, and then select Enter.  Select Create a subfolder with the solution name for where to place the files. Select Y to allow the solution to be deployed to all sites immediately. Select N on the question if the solution contains unique permissions. Enter the web part name. Enter the web part description. Choose the framework as \u0026lsquo;React\u0026rsquo;. Once the project is created, install the required pnp modules from npm using the below command. I had created a web part with the name PnPLogging.   npm i @pnp/sp @pnp/odata @pnp/logging --save-exact  Open the code in VSCode which is my favourite code editor for SharePoint Framework. You can directly open the project folder from the file menu or use the below command to open the VSCode from the command line. cd \\web part folder\\ code .  Let\u0026rsquo;s create a new folder under the components folder named common. Inside the common folder create 2 files as named below\n CustomLogger.ts \u0026ndash; This file will have all the interfaces and methods for implementing the logging mechanism to write the logs in SharePoint List. Util.ts \u0026ndash; This file will have all the log methods to be implemented in our custom methods to pass certain information to the log entry. Copy-paste the below code in the CustomLogger.ts file.   import { LogLevel, ILogListener, ILogEntry } from \u0026#34;@pnp/logging\u0026#34;; import { sp } from \u0026#34;@pnp/sp\u0026#34;; import { IWeb, Web } from \u0026#39;@pnp/sp/webs\u0026#39;; import \u0026#34;@pnp/sp/webs\u0026#34;; import \u0026#34;@pnp/sp/site-users\u0026#34;; import \u0026#34;@pnp/sp/lists/web\u0026#34;; import \u0026#34;@pnp/sp/items/list\u0026#34;; export interface ILogData { FileName: string; MethodName: string; StackTrace: string; } export class LogData implements ILogData { constructor( public FileName: string = \u0026#34;\u0026#34;, public MethodName: string = \u0026#34;\u0026#34;, public StackTrace: string = \u0026#34;\u0026#34; ) { } } export interface ILogItem { ApplicationName: string; CodeFileName: string; MethodName: string; LoggedOn: Date; LoggedById: number; ErrorMessage: string; StackTrace: string; } export class LogItem implements ILogItem { constructor( public ApplicationName: string = \u0026#34;\u0026#34;, public CodeFileName: string = \u0026#34;\u0026#34;, public MethodName: string = \u0026#34;\u0026#34;, public LoggedOn: Date = new Date(), public LoggedById: number = 0, public ErrorMessage: string = \u0026#34;\u0026#34;, public StackTrace: string = \u0026#34;\u0026#34; ) { } } export default class CustomLogger implements ILogListener { private _applicationName: string; private _logListName: string; private _web: IWeb; private _userId: number; private _currentuser: string; private _writeLogFailed: boolean; constructor(applicationName: string, logWebUrl: string, logListName: string, currentUser: string) { //Initialize try { this._writeLogFailed = false; this._applicationName = applicationName; this._logListName = logListName; this._web = Web(logWebUrl); this._currentuser = currentUser; //this.init(currentUser); } catch (err) { console.error(`Error initializing CustomLogger - ${err}`); } } private async init(currentUser: string): Promise\u0026lt;number\u0026gt; { //Implement an asyncronous call to ensure the user is part of the web where the ApplicationLog list is and get their user id. try { let userResult = await this._web.ensureUser(`i:0#.f|membership|${currentUser}`); return userResult.data.Id; //console.log(this._userId); } catch (err) { console.error(`Error initializing CustomLogger (init) - ${err}`); } } public async log(entry: ILogEntry): Promise\u0026lt;void\u0026gt; { try { //If the entry is an error then log it to my Application Log table. All other logging is handled by the console listener if (entry.level == LogLevel.Error) { if (!this._writeLogFailed) { this._userId = await this.init(this._currentuser); let stackArray = null; if (entry.data.StackTrace \u0026amp;\u0026amp; entry.data.StackTrace.length \u0026gt; 0) stackArray = JSON.stringify(entry.data.StackTrace.split(\u0026#39;\\n\u0026#39;).map((line) =\u0026gt; { return line.trim(); })); let newLogItem: LogItem = new LogItem(this._applicationName, entry.data.FileName, entry.data.MethodName, new Date(), this._userId, entry.message, stackArray); sp.web.lists.getByTitle(this._logListName).items.add(newLogItem); } } } catch (err) { //Assume writing to SharePoint list failed and stop continuous writing this._writeLogFailed = true; console.error(`Error logging error to SharePoint list ${this._logListName} - ${err}`); } return; } }  The main artefacts in the above code are\n ILogData \u0026ndash; This is an interface that is defined to tell what kind of information are gonna be logged to the list. ILogItem \u0026ndash; This is an interface that is defined to map the columns in the SharePoint Error log list to write the logs to the list. CustomLogger \u0026ndash; The actual class which implements the ILogListener interface init \u0026ndash; This method is implemented to get the current user information while writing the logs to the list. log \u0026ndash; This is the actual method where we will be implementing the actual functionality of parsing the log and write the detailed log info in the SharePoint List. Copy-paste the below code in the Util.ts file   import { LogLevel, ILogEntry, Logger } from \u0026#39;@pnp/logging\u0026#39;; import { ILogData } from \u0026#39;./CustomLogger\u0026#39;; export function writeErrorLog(filename: string, methodname: string, stack: string, loglevel: LogLevel, err: any) { let data: ILogData = { FileName: filename, MethodName: methodname, StackTrace: stack }; let logEntry: ILogEntry = { message: `${err.message}`, level: loglevel, data: data }; Logger.log(logEntry); }  This class has only one method named writeErrorLog which we will call on the catch block of our function. This method in turn communicate with the FunctionListener and write the log to the SharePoint List. The logger with the custom methods has been implemented and the util function to call the method has also been implemented, now let us see how to subscribe to the listener. Navigate to the \u0026lt;webpart\u0026gt;.ts file and do the following Import the following modules and classes in addition to the existing imports import CustomLogger from \u0026#39;./components/common/CustomLogger\u0026#39;; import { sp } from \u0026#34;@pnp/sp\u0026#34;; import { Logger, LogLevel, FunctionListener, ILogEntry } from \u0026#34;@pnp/logging\u0026#34;;  Under the class, copy-paste the below code along with the boilerplate code. public onInit(): Promise\u0026lt;void\u0026gt; { return super.onInit().then(_ =\u0026gt; { sp.setup(this.context); this.customLogging(); }); } private customLogging(): void { try { let listener = new FunctionListener((entry: ILogEntry) =\u0026gt; { try { switch (entry.level) { case LogLevel.Verbose: //console.info(entry.message); break; case LogLevel.Info: //console.log(entry.message); break; case LogLevel.Warning: //console.warn(entry.message); break; case LogLevel.Error: let advanceLogging = new CustomLogger(\u0026#34;Sample Logging\u0026#34;, this.context.pageContext.site.absoluteUrl, \u0026#34;Error Log\u0026#34;, this.context.pageContext.user.loginName); Logger.subscribe(advanceLogging); break; } } catch (err) { console.error(`Error executing customLogging FunctionListener - ${err}`); } }); Logger.subscribe(listener); } catch (err) { console.error(`Error initializing customLogging - ${err}`); } return; }  In the above code, we are setting up the logger by providing the context and we are also subscribing our custom logger to the Function Listener. Navigate to the \u0026lt;webpart\u0026gt;.tsx and copy-paste the below code import * as React from \u0026#39;react\u0026#39;; import styles from \u0026#39;./PnPLogging.module.scss\u0026#39;; import { IPnPLoggingProps } from \u0026#39;./IPnPLoggingProps\u0026#39;; import { DefaultButton } from \u0026#39;office-ui-fabric-react/lib/Button\u0026#39;; import { LogLevel } from \u0026#39;@pnp/logging\u0026#39;; import { sp } from \u0026#34;@pnp/sp\u0026#34;; import \u0026#34;@pnp/sp/webs\u0026#34;; import \u0026#34;@pnp/sp/lists/web\u0026#34;; import \u0026#34;@pnp/sp/items/list\u0026#34;; import * as util from \u0026#39;./common/Util\u0026#39;; export default class PnPLogging extends React.Component\u0026lt;IPnPLoggingProps, {}\u0026gt; { constructor(props: IPnPLoggingProps) { super(props); } public _generateError = () =\u0026gt; { sp.web.lists.getByTitle(\u0026#39;Branches\u0026#39;).items.select(\u0026#39;Title\u0026#39;).getAll().then(items =\u0026gt; { console.log(items); }).catch((err: Error) =\u0026gt; { util.writeErrorLog(\u0026#34;PnPLogging.tsx\u0026#34;, \u0026#39;_generateError\u0026#39;, err.stack, LogLevel.Error, err); }); } public _generateAsyncError = async () =\u0026gt; { try { await sp.web.lists.getByTitle(\u0026#39;Branches\u0026#39;).items.select(\u0026#39;Title\u0026#39;).getAll(); } catch (err) { util.writeErrorLog(\u0026#34;PnPLogging.tsx\u0026#34;, \u0026#39;_generateAsyncError\u0026#39;, err.stack, LogLevel.Error, err); } } public render(): React.ReactElement\u0026lt;IPnPLoggingProps\u0026gt; { return ( \u0026lt;div className={styles.pnPLogging}\u0026gt; \u0026lt;div className={styles.container}\u0026gt; \u0026lt;div className={styles.row}\u0026gt; \u0026lt;div className={styles.column}\u0026gt; \u0026lt;DefaultButton onClick={this._generateError} text=\u0026#34;Generate Error\u0026#34; /\u0026gt; \u0026lt;DefaultButton onClick={this._generateAsyncError} text=\u0026#34;Generate Async Error\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; ); } }  The above code is very simple, I have created 2 buttons to call the method which will get the items from the list that doesn\u0026rsquo;t exist. The first method will use the PnP method with then and catch implementation, the second method will use the same PnP method with async and await. Error Log list Before running the above solution or deploying the package, create a list named \u0026lsquo;Error Log\u0026rsquo; with the following fields. Make sure to maintain the same field name.\n ApplicationName \u0026ndash; Name of the application from where the logs fired CodeFileName \u0026ndash; Name of the file from where the exception occurred. MethodName \u0026ndash; Name of the method from where the exception occurred. ErrorMessage \u0026ndash; Friendly message of the exception. StackTrace \u0026ndash; Complete details of the exception message. LoggedBy \u0026ndash; Current logged in user LoggedOn \u0026ndash; Current date and time when the exception occurred. Source Code The source code along with other samples can be found in the below github link. SPFx-Demos Happy Coding\u0026hellip;  ","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-19th-of-august/images/recording-august-19th_hue986a7b7385da1c3ed207fbf30c11714_245359_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/flexible-and-powerful-logging-using-pnp-logging-in-spfx/","tags":[],"title":"Flexible and powerful logging using PnP Logging in SPFx"},{"categories":["Microsoft 365 developer podcast"],"contents":"Prashant G Bhoyer sits down with Paul to answer questions about the AI offerings in Azure and how they are used in M365 and how they can be used by developers.\nListen to the show here: AI \u0026amp; Cognitive Services with Prashant G Bhoyar (m365devpodcast.com)\nMicrosoft News Microsoft 365 Developer channel\n Using Microsoft Graph Explorer to make REST API requests Understanding authentication and authorization in Microsoft Graph Explorer Building apps with Microsoft Graph Explorer  Microsoft Graph JavaScript SDK v3 upgrade guide\nCommunity Links  Putting some more FUN into Azure Functions, Managed Identity \u0026amp; Microsoft Graph (@LuiseFreese) Simulating 429 Throttling in Microsoft Graph API (SharePoint/OneDrive workloads) (@camerondwyer) Introducing the Property Pane Portal (@Path2SharePoint)  ","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-19th-of-august/images/recording-august-19th_hue986a7b7385da1c3ed207fbf30c11714_245359_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-ai-amp-cognitive-services-with/","tags":[],"title":"Microsoft 365 Developer Podcast - AI \u0026 Cognitive Services with Prashant G Bhoyar"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from August 12th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary Summer and Fall community call schedule updates reviewed. Register today for August events on Sharing-is-caring. PnP Recognition Program announced. Viva Connections public developer preview! SharePoint Framework v1.13 beta released a few weeks back with preview on the Viva Connections mobile experiences support. Released PnPjs Client-Side Libraries v2.8.0 and CLI for Microsoft 365 v3.13.0 Preview. **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago) PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.12.1, v1.13 beta PnPjs Client-Side Libraries v2.8.0 v3.0.0 developments underway CLI for Microsoft 365 v3.13.0 Preview, v4.0.0 Preview v4.0.0 to release this fall Reusable SPFx React Controls v2.8.0 (SPFx v1.11), v3.2.1 (SPFx v1.12.1) Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1) PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.3.0 \u0026amp; v3.21.0 There were 4** PnP web part samples** delivered in the last 2 weeks as well. Nice work! The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place in chat throughout the call. Ahhhh, the Comfy seats today! Everyone is alive with sporting colorful clothing. Great to see you. Actions  Add to your calendar - **Microsoft 365 platform call ** | https://aka.ms/m365-dev-call (Weekly call starting 31st of August) Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; August 31st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; August 23rd PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; August 24th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; August 25th Ask me anything \u0026ndash; Recognition Program \u0026ndash; September 7th Ask me anything \u0026ndash; Script Samples \u0026ndash; September 14th Ask Me Anything \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th First Time Presenter \u0026ndash; August 30th More than Code with VSCode \u0026ndash; TBS Maturity Model Practitioners \u0026ndash; August 17th and every 3rd Tuesday of month, 7:00am PT   PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register PnP Buddy System \u0026ndash; Request a Buddy Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Executive room reservation tool for Microsoft Teams and Viva Connections built with SPFx - app for booking limited rooms by authorized users. See app in Teams and then view the ACE (Adaptive Card Extension) cards with deep links to other Teams apps, in the Viva Connections Dashboard. ACE cards can be targeted to specific users. Look at code for CardView, QuickVew, Card State, button actions and at how data is accessed and merged with template.   My Lists Notifications SPFx extensions \u0026ndash; this application extension allows a user to receive activity notifications from selected lists or libraries \u0026ndash; i.e., add/delete/modify document in library, approval completed, etc. Easily view and clear notifications. Updates screen only when there is new notification. Uses Socket.io service courtesy of Microsoft Graph to manage list subscriptions and notifications and then uses getListActivities to get particulars on the activity.   Using OneDrive Apps folder to save user\u0026rsquo;s preferences cross-device \u0026ndash; an SPFx web part for saving user settings or preferences (i.e., dark/light theme, temporary secrets, etc.) in the OneDrive Apps folder. Web part calls Microsoft Graph API. Preference changes made in any of the user\u0026rsquo;s devices are reflected in other devices. Step through the code.   SPFx extension samples: (https://aka.ms/spfx-extensions)\n No samples  SPFx web part samples: (https://aka.ms/spfx-webparts)\n HTML Templating - Fabio Franzini | @franzinifabio Telephone Directory \u0026ndash; mrkhandev Accordion Dynamic Sections - Ari Gunawan | @AriGunawan3023 Fluent UI Theme Variant - Fabio Franzini | @franzinifabio  Thank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) @vesajuvonen - 6:31 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) @jfj1997 \u0026ndash; 9:13 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 10:54 PnP SPFx Controls - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 11:31 PnP Modern Search - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 12:04 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 12:39  Demos   Demo: Executive room reservation tool for Microsoft Teams and Viva Connections built with SPFx \u0026ndash; Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026amp; Derek Cash-Peterson** **(Sympraxis Consulting) | @spdpc \u0026ndash; 15:52\n  Demo: My Lists Notifications SPFx extensions \u0026ndash; Hugo Bernier** **(Microsoft) | @bernierh \u0026amp; João Mendes (Storm Technology) | joaojmendes \u0026ndash; 30:53\n  Demo: Using OneDrive Apps folder to save user\u0026rsquo;s preferences cross-device \u0026ndash; Giuliano De Luca | @delucagiulian\n[\u0026ndash;][ 46:04]\n  Resources Additional resources around the covered topics and links from the slides.\n  Samples - SharePoint Framework sample solutions for Microsoft Teams   Get Started \u0026ndash; Adaptive Cards   Demo \u0026ndash; COVID Self Attestation Demo delivered in SharePoint Framework Community Call \u0026ndash; 15th of July, 2021   Sample - My Lists Notifications   Article - MY LISTS NOTIFICATIONS   YouTube Channel - Giuliano De Luca   Blog - Giuliano De Luca   General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned  SharePoint dev documentation SharePoint dev issue list  Upcoming Calls | Recurrent Invites  Power Apps monthly call \u0026ndash; August 18th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call \u0026ndash; August 19th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Identity Platform \u0026ndash; August 19th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar SharePoint Framework call \u0026ndash; August 26th at 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft 365 platform \u0026ndash; August 31st at 8 AM PDT | https://aka.ms/m365-dev-call (Starts from the 31st of August as weekly cycle) Office add-in monthly call \u0026ndash; September 8th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; September 9th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall  PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n SharePoint Framework engineering update from Microsoft Talk about PnP JavaScript Core libraries Office 365 CLI Updates SPFx reusable controls PnP SPFx Yeoman generator Share code samples and best practices Possible engineering asks for the field - input, feedback, and suggestions Cover any open questions on the client-side development Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 13th of August 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-12th-of-august-2021/images/210812-together-mode_hu564ebb8bd1538aa42079dc1782d7dd12_7556875_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-12th-of-august-2021/","tags":[],"title":"SharePoint Framework Community Call -- 12th of August, 2021"},{"categories":["Community post"],"contents":"Use case \u0026amp; purpose of this blog post I want to show, how you can use a Managed Identity in Azure Functions to get an access token for Microsoft Graph API.   Prerequisites to benefit from this article To get the most out of this post, you should understand the following concepts \u0026ndash; I included some links that should help you getting started.\nManaged Identity \u0026ndash; What is that and why would I want one? Managed Identities are the state-of-the-art way to get Azure Active Directory access tokens, because you won\u0026rsquo;t need to handle credentials, which is of course a security benefit\n\u0026gt;\u0026hellip;where there are credentials, there are leaks ¯\\_(ツ)_/¯\nIf you are unfamiliar with tokens, this article by Lee Ford will help. This is not a full tutorial on Managed Identities, for more information please start to read here. Also, Yannick Reekmans posted an entire series on Managed Identities, highly recommended to read this \u0026ndash; helped me a lot to understand.\nAzure Functions If you\u0026rsquo;d like to deploy and execute code without needing to THINK about server infrastructure or VMs, you may like Azure Functions. Azure Functions can be written in a lot of languages and you can deploy and execute Azure Functions on any platform that can run .NET Core. Azure functions are scalable, as they use compute-on-demand: More resources are allocated automagically, when the demand of execution increases. If the demand decreases again, you don\u0026rsquo;t need to worry about the extra resources anymore as they drop off again. This way, you only pay what you need. For more info please start to read here: Azure Functions Overview | Microsoft Docs\nI will use PowerShell for my Azure Functions, so that IT-Pros can benefit from this post as well. But please do choose [your poison ]{style=\u0026ldquo;text-decoration: line-through;\u0026quot;}your favourite language, the concept stays the same. Use whatever you are familiar with or what makes you happy.\nMicrosoft Graph Microsoft Graph is THE API to access Microsoft 365 resources, in our case we will want to read all Microsoft 365 groups \u0026ndash; for more information see also the Microsoft Graph permissions reference \u0026ndash; Microsoft Graph | Microsoft Docs.\nOur challenge will be to access the Graph API with a Managed Identity. I will show how to do this entirely in Azure CLI \u0026amp; VS Code. Creating and assigning Managed Identities has been shown often before in the Azure portal, but a script would allow for automation, it is usually faster than working in a visual environment and you can use the tool of your choice. I highly recommend VS Code as editor (and I like the built-in terminal as well).\nCreate your Azure Functions locally You still may create your first Azure Functions in the Azure Portal (I did as well), which demoes really nicely, but as we want to go for real world, I will show how to develop your Azure Functions in Visual Studio code. This has some great advantages:\n you develop locally using the tools that you are already familiar with you don\u0026rsquo;t need to adjust to ever changing UI in Azure portal you can benefit from source control you can collaborate with others  I covered how to do this also in a previous post, but for the sake of a start-to-end scenario, here we go again:\n Install the Core Tools package with npm install -g azure-functions-core-tools@3 \\--unsafe-perm true Install the Azure Functions extension for VS Code Select New Project Select a folder for your project Select a language \u0026ndash; I will use PowerShell Select HTTP trigger as a template Type in a better name like GetGraphToken Select Authorization level Function Select how you want to open your project \u0026ndash; I prefer Add to workspace You will now see your Local Project in the pane. (yes, my pane is on the right hand side so that my code doesn\u0026rsquo;t \u0026ldquo;jump\u0026rdquo; all the time when I am expanding or collapsing the pane)  We will now write the code for our Azure Functions. Replace the default code of run.ps1 in VS Code by this:\nusing namespace System.Net # Input bindings are passed in via param block param($Request, $TriggerMetadata) # Write to the Azure Functions log stream. Write-Host \u0026#34;PowerShell HTTP trigger function processed a request.\u0026#34; # Interact with query parameters or the body of the request .$Scope = $Request.Query.Scope if (-not $Scope) { $Scope = $Request.Body.Scope } #If parameter \u0026#34;Scope\u0026#34; has not been provided, we assume that graph.microsoft.com is the target resource If (!$Scope) { $Scope = \u0026#34;https://graph.microsoft.com/\u0026#34; } $tokenAuthUri = $env:IDENTITY_ENDPOINT + \u0026#34;?resource=$Scope\u0026amp;amp;api-version=2019-08-01\u0026#34; $response = Invoke-RestMethod -Method Get -Headers @{\u0026#34;X-IDENTITY-HEADER\u0026#34;=\u0026#34;$env:IDENTITY_HEADER\u0026#34;} -Uri $tokenAuthUri -UseBasicParsing $accessToken = $response.access_token #Invoke REST call to Graph API $uri = \u0026#39;https://graph.microsoft.com/v1.0/groups\u0026#39; $authHeader = @{ \u0026#39;Content-Type\u0026#39;=\u0026#39;application/json\u0026#39; \u0026#39;Authorization\u0026#39;=\u0026#39;Bearer \u0026#39; + $accessToken } $result = (Invoke-RestMethod -Uri $uri -Headers $authHeader -Method Get -ResponseHeadersVariable RES).value If ($result) { $body = $result $StatusCode = \u0026#39;200\u0026#39; } Else { $body = $RES $StatusCode = \u0026#39;400\u0026#39;} # Associate values to output bindings by calling \u0026#39;Push-OutputBinding\u0026#39; Push-OutputBinding -Name Response -Value ([HttpResponseContext]@{ StatusCode = $StatusCode Body = $body }) Take a moment to understand what the code does:\n log that a request was received define the scope (if not stated, it\u0026rsquo;s Microsoft Graph) obtain the token from the environment variables `IDENTITY_ENDPOINT` and `IDENTITY_HEADER` which come from the Managed Identity (thanks Yannick Reekmans for this hint) \u0026ndash; learn more here: Managed identities \u0026ndash; Azure App Service | Microsoft Docs \u0026ndash; you can also see your environment variables here, the mentioned ones will show after you assigned the system assigned Managed Identity: https://\u0026lt;YOUR-FUNCTIONAPPNAME-HERE\u0026gt;.scm.azurewebsites.net/ENV.cshtml#envVariables) pass that token in the header of the REST call towards the group endpoint of Microsoft Graph get the status code (hopefully 200)  Watch out \u0026ndash; the Graph API will this way return up to 100 groups \u0026ndash; Please adjust with query parameters as needed like https://graph.microsoft.com/v1.0/groups?$top=42 or use paging, which is described here: Paging Microsoft Graph data in your app \u0026ndash; Microsoft Graph | Microsoft Docs\nResources in Azure We will now create the Functions App in Azure \u0026ndash; You can either install the CLI or use Cloud shell (available on shell.azure.com \u0026ndash; no installation is needed then and it works in any browser!)\nVariables \u0026amp; names For testing purposes, I pseudo-randomized a number to not always need to come up with new names:\n#Get a random number between 100 and 300 to more easily be able to distinguish between several trials $rand = Get-Random -Minimum 100 -Maximum 300 We will now set some variables, this reduces risk of typos and makes our code better readable \u0026ndash; also we can reuse it better \u0026ndash; this is a courtesy to future-self\n#Set values $resourceGroup = \u0026#34;DemoPlay$rand\u0026#34; $location = \u0026#34;westeurope\u0026#34; $storage = \u0026#34;luisedemostorage$rand\u0026#34; $functionapp = \u0026#34;LuiseDemo-functionapp$rand\u0026#34; Resource group Let\u0026rsquo;s create a resource-group that will later hold our Azure Functions App\n#create group az group create -n $resourceGroup -l $location Storage Account As our Functions App will need a storage account, we will create this as well:\n#create storage account az storage account create ` -n $storage ` -l $location ` -g $resourceGroup ` --sku Standard_LRS Functions App Now create the Azure Functions app which later holds our functions (remember we created that earlier locally, but will later deploy it to Azure)\n#create function az functionapp create ` -n $functionapp ` --storage-account $storage ` --consumption-plan-location $location ` --runtime powershell ` -g $resourceGroup ` --functions-version 3 It will take a few moments for everything to be set, once this step is completed, you will be prompted with a message, that you also can benefit from Application Insights.\nManaged Identity We want things to be super secure \u0026ndash; this is why we want to enable a system assigned Managed Identity for our new Functions:\naz functionapp identity assign -n $functionapp -g $resourceGroup  Our Managed Identity shall have the right permission scope to access Graph API for Group.Read.All, and to eventually be able to make the required REST call, we will need\n the Graph API service Provider permission scope, expressed as App role\nLet\u0026rsquo;s do this:  #Get Graph Api service provider (that\u0026#39;s later needed for --api)  az ad sp list --query \u0026#34;[?appDisplayName==\u0026#39;Microsoft Graph\u0026#39;].{Name:appDisplayName, Id:appId}\u0026#34; --output table --all #Save that service provider  $graphId = az ad sp list --query \u0026#34;[?appDisplayName==\u0026#39;Microsoft Graph\u0026#39;].appId | [0]\u0026#34; --all # Get permission scope for \u0026#34;Group.Read.All\u0026#34; $appRoleId = az ad sp show --id $graphId --query \u0026#34;appRoles[?value==\u0026#39;Group.Read.All\u0026#39;].id | [0]\u0026#34; Time to make the REST call to assign the permissions as shown above to the Managed Identity:\n#Set values $webAppName=\u0026#34;LuiseDemo-functionapp$rand\u0026#34; $principalId=$(az resource list -n $webAppName --query [*].identity.principalId --out tsv) $graphResourceId=$(az ad sp list --display-name \u0026#34;Microsoft Graph\u0026#34; --query [0].objectId --out tsv) $appRoleId=$(az ad sp list --display-name \u0026#34;Microsoft Graph\u0026#34; --query \u0026#34;[0].appRoles[?value==\u0026#39;Group.Read.All\u0026#39; \u0026amp;amp;\u0026amp;amp; contains(allowedMemberTypes, \u0026#39;Application\u0026#39;)].id\u0026#34; --out tsv) $body=\u0026#34;{\u0026#39;principalId\u0026#39;:\u0026#39;$principalId\u0026#39;,\u0026#39;resourceId\u0026#39;:\u0026#39;$graphResourceId\u0026#39;,\u0026#39;appRoleId\u0026#39;:\u0026#39;$appRoleId\u0026#39;}\u0026#34; #the actual REST call  az rest --method post --uri https://graph.microsoft.com/v1.0/servicePrincipals/$principalId/appRoleAssignments --body $body --headers Content-Type=application/json If you like to, you may now have a look at our Managed Identity permissions in the Azure portal \u0026ndash; for everyone who loves to be assured in a UI that things have worked:\n   Open portal.azure.com Select Azure Active Directory Select Enterprise applications Select Managed Identity from the Applications dropdown Note the app level permission Read all groups for Microsoft Graph  Deploy to Azure Let\u0026rsquo;s now deploy our Function to our Functions App. Go back to Visual Studio Code:\n Select the Azure extension Select deploy to Functions App \u0026ndash; its that little cloud icon Select the Functions App you already created in Azure Confirm the Pop up window by selecting Deploy Check progress results in the output window  Time to test! Please note, that due to our Managed Identity, we can\u0026rsquo;t test locally. You can trigger your Functions with Postman or similar or run a test in the Azure portal\n Open portal.azure.com Select Resource groups Select the resource group you worked in Select the Azure Functions App you worked in Select Functions Select Code + Test Select Test/Run Select Run  You should see a status code 200 \u0026ndash; and a list of all your Microsoft 365 groups. YAY!\n![groups (1).png](images/groups (1).png)\nConclusion and FusionDev scenario As developers, we could build a robust, scalable and secure solution, developed with familiar tools like VS Code, PowerShell or Azure CLI. But what if we want to make this available to makers/citizen developers? What if we want to make sure, that this could be used in Power Apps and Power Automate? One way to achieve this, is creating a Power Platform custom connector. This way, makers can use the connector which calls our Azure Functions in a canvas app and display for example the groups in a gallery or table. Please note, that there are of course more fancy use cases, I will focus in this blog post on the code \u0026ndash; If you have a good story, please reach out. Sample script is available at Script Samples | PnP Samples\nMore Resources to learn \nGet started with Microsoft 365 development by signing up for a free Developer tenant\nJoin the Microsoft 365 PnP Community \u0026ndash; join our calls and benefit from guidance, tools, sample\nOriginally published at Putting some more FUN into Azure Functions, Managed Identity \u0026amp; Microsoft Graph \u0026ndash; M365 Princess\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-12th-of-august-2021/images/210812-together-mode_hu564ebb8bd1538aa42079dc1782d7dd12_7556875_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/post/putting-some-more-fun-into-azure-functions-managed-identity-amp/","tags":["Microsoft Graph","Azure"],"title":"Putting some more FUN into Azure Functions, Managed Identity \u0026 Microsoft Graph"},{"categories":["Community post"],"contents":"Ever wanted to share your PowerShell or Bash scripts that you use to automate, deploy or manage Microsoft 365, those written with:\n PnP PowerShell CLI for Microsoft 365 SPO Management shell Graph PowerShell Graph CLI  other Microsoft 365 related scripts...  Our intention is simply to make it easier for people to share and find automation samples for the Microsoft 365 - got scripts you\u0026rsquo;ve built? - share them with others! Well now you can, introducing PnP Script Samples!\nThis is a site used for hosting contributions of your PowerShell or Bash scripts, allowing you to reduce the time to perform script based tasks with the Microsoft 365 services. Like other PnP resources, you can refer to this resource to leverage existing scripts to achieve your goals quicker and easier.   Scenarios and Scripts When working with Microsoft 365 using scripts, there is a scenario that you are trying to achieve, e.g. \u0026ldquo;Install a site design into the tenant\u0026rdquo; or \u0026ldquo;Report on Teams Private Channels\u0026rdquo;. In the community and from those provided by Microsoft, there are a variety of tools that you can use for the scenarios. The sample pages are designed to first describe the scenario and then provide one or more scripts across the tools to achieve the goals of the scenario. Each script is represented as tabs, giving you the option to choose the preferred tool and learn about how the same goal can be achieved by different tools.\nSearch and Filtering Each of the scenario samples are bundled with metadata to allow for identification of authors - crediting you on your contributions, the type of operation e.g. reporting, provision, data, which tools the sample refers to and which Microsoft products the script targets. Using the metadata, we can provide filters and search capabilities on the listing pages enabling you to search for the scenario and script.   Copy to Clipboard We have introduced a feature within each of the script to copy to clipboard allowing you to quickly grab the sample to use in your preferred authoring tool. This is located top right-hand side of the script blocks:   Clickable commands In the scripts, there will be example usage of commands that each tool provides for the scenario. We have made it easier for you to learn about these commands, by automatically linking to the relevant documentation site.   Few points about this feature:\n if you use the Copy To Clipboard feature the links are NOT included - this is by design. the commands are linked to the latest docs, this will not make clickable any retired commands.  If you are think a command should be highlighted and linked to the documentation please raise an issue in the GitHub repo.\nContributing If you would like to contribute to the samples, you are absolutely welcomed to do so, we have created guidance to help you. We are looking for contributions in the following areas:\n Create a new scenario with a script Update a scenario with an alternative script using another tool e.g. Adding a PnP PowerShell script to a scenario that only has CLI for Microsoft 365. Feedback on the usability of the site, we are always looking to improve the experience.  In the repo, we are created a template submission folder and files, complete the readme, add any screenshots and submit your GitHub Pull Request, please contact us via issues list to communicate what your planning. If you need any support or want to know how to use GitHub then we have a great program to support new contributors | sharing is caring. So check out https://aka.ms/script-samples today!\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-12th-of-august-2021/images/210812-together-mode_hu564ebb8bd1538aa42079dc1782d7dd12_7556875_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/post/getting-started-with-pnp-script-samples/","tags":["SharePoint"],"title":"Getting started with PnP Script Samples"},{"categories":["Community post"],"contents":"In this article, we will be exploring the below concepts,\n Understand QuickBooks Online APIs Trying QuickBooks API from the postman Create MS flow custom connectors. Integrating QuickBooks API from Power automate(MS flow) using Custom connectors.  Suppose you have some business process working in SharePoint/Power automate where employees are filling timesheets and after approval, you want to generate invoices in Quick books online (QBO). Or you want to record expense(bill) in QBO once your vendor has submitted his invoice due to you, maybe via power apps forms or SharePoint online list. Office 365 products like SharePoint, Power Automate, Power apps will allow us to automate a business process like approval, review, etc. And once this process is completed, we wanted to do accounting entries in our accounting software (in this case Quick books online).\nSo Let\u0026rsquo;s get started.\nWhat do you need?  Quick book online account. Intuit developer account. Postman Power automate (MS flow) license.  Quick book online account Create a Quickbook online account (if not already) by subscribing to the plan as per your requirement. For this sample, I have created a 30 days trial account. You can check different pricing available at this link, based on your country different pricing and subscription are available.\nIntuit developer account You would need to create Intuit (company owning Quickbook) developer account.\n Go to developer.intuit.com/app/developer/homepage  On the top menu, follow the last link to sign up. The below screen will open, fill in the below details.\n    Once sign in, you can follow this link to create an APP. Ignore Steps 3 and 4 for now from this link. Make note of client id and client secret, Please note that your sandbox client id and client secret will be different. For this demo, we will create production keys so that we can make the actual calls to our live environment. Below is how my developer dashboard looks like,     So we have all the things required from the QBO side of integration, let\u0026rsquo;s move ahead. Assuming now you already have Postman and MS flow license, let us go ahead and see the overall approach we will follow for this integration.\n Import postman collection, Create a new collection and copy/try the API calls from postman for required endpoints (web service we want to integrate) Setup authorization in postman to get access token. Call a simple web service. Export the collection. Create custom connector in Powerautomate Create Power automate(flow) and use actions to call Quickbooks API  Step 1\nImport Postman collection of All APIs available in Quick book online. This export of collections is provided by Quickbooks at this link(refer to screenshot below).\n   This will directly ask to open postman and it will open collection like in the below screenshot.\n   Step 2 - Create a new empty collection\n   Now go to Imported postman collection and expand the Invoice.\n   We will use 2 API(invoice read by Id and create an invoice). Open one by one and select Save as to save in our custom-created collection(QBOMSflowIntegration).\n     Please follow the same step for API \u0026lsquo;Create Invoice\u0026rsquo;.\nNow, Let set up an environment variable for dynamic values to be passed in URL.\nFollow the below screenshot,\n   Create 3 URLs,\nBase URL\nSandbox Base URL - sandbox-quickbooks.api.intuit.com\nProduct Base URL - quickbooks.api.intuit.com (Production)\nCompany ID \u0026ndash; You can find company ID by following this link\nInvoice Id \u0026ndash; Set is 1(we will query invoiced Id 1 in one Get Invoice Webservice)\nStep 3 \u0026ndash; Setup authorization\nNow let us set up authorization details to get the access token and pass it to the actual API call.\nPlease follow along with the below screenshot.\n   It should open the below popup box, enter the below details here.\n Token Name - Enter your preferred name Grant Type \u0026ndash; Select Authorization Code Call Back URL - https://app.getpostman.com/oauth2/callback (this URL should be in Allowed redirect URL in Intuit developer dashboard, we will see how to do this later) Auth URL - https://appcenter.intuit.com/connect/oauth2 Access Token URL - https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer Client ID \u0026ndash; This needs to be copied from intuit developer dashboard(use according to the environment) Client Secret - This needs to be copied from intuit developer dashboard(use according to the environment) Scope - com.intuit.quickbooks.accounting OpenID email profile State \u0026ndash; mydemostateobject123213(this can be anything)  Client Authentication \u0026ndash; Select. Send client credentials in the body.\nBefore clicking on Request Token, we need to add a call-back URL to in developer dashboard.\nLogin to the developer dashboard at this link.\nSelect My Apps, select targeted app, and refer to the below screenshot to add.\n   Once this is done, come back to Postman and Select Request token, it will ask you to authenticate with your Quickbook account, login with a valid account, and follow along. Once you are logged in you should see the below popup, rename the token name with your preference and select use token.\n   Select that token name in the available tokens dropdown.\n   Now make sure, you match the environment variable name in the URL and what we used while created in the above step.\n   Step 4 \u0026ndash; Call a simple web service\nNow we are ready to test, select the send button. If everything is set up correctly, we can see the below output.\n   In the same way, you can test Create invoice method. Make sure in the authorization tab you have selected the newly generated token. Follow the below screenshot, if you notice, there is already a JSON object in the body which is the bare minimum thing required to create an invoice. Select send.\n   In your real case, you would have to pass many more things, for that you can always refer to Quick Book API documentation at this link.\nStep 5 \u0026ndash; Export collection\nNow we are done with the postman and it\u0026rsquo;s time to export this collection, which will be used in Power automate to create the custom connector.\n   Once you select e export, it will ask you to save the exported file, save it at your preferred location.\nStep 6 \u0026ndash; Create a custom connector\nNow it\u0026rsquo;s time to go to Power automate and create a custom connector.\nGo to flow.microsoft.com.\nFollow the below screenshot,\n   It will open below popup, select the JSON file which was imported in step 5. Give your preferred name. Select Continue.\n   We will now be taken into a wizard where we have to setup our connector, In first (below screenshot) enter details are per your preference, we will keep default but enter the base URL.\n   Select Security Tab and select oAuth 2.0 in Authentication Type.\n   Below is for your quick reference, most of them are the same as we did in postman in Step 3.\n Identity Provider - Generic OAuth 2 Client ID \u0026ndash; Our App Client ID Client Secret \u0026ndash; Our App Client Secret Authorization URL- https://appcenter.intuit.com/connect/oauth2 Token URL - https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer Refresh URL - https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer (Same as Token URL) Scope - com.intuit.quickbooks.accounting Redirect URL \u0026ndash; Leave it blank.  Note - Leave Redirect URL blank, for now, this will be auto-generated. We need to come back here and then copy this URL to add this in Intuit developer dashboard in Allowed Redirect URL, the way we did it for the postman.\nSelect Definition \u0026ndash;Here we will see below screen,\n   Now comes the tricky part, By default the definition we imported using the swagger file does not understand the dynamic variables like BaseURL, CompanyId, and InvoiceId. This is because the syntax of the postman to pass dynamic variable is different than the swagger for Flow. So what we will do here is modify the swagger file manually so that we can pass company id, base URL, and Invoice id dynamically while configuring action in actual Flow implementation. Please note this is to demonstrate how to make your URLs dynamic (because in real use cases, we won\u0026rsquo;t call webservice via hardcoded data).\nEnable Swagger Editor(as in the above screenshot)\nWe will need to change the path both webservice url and add parameters definition\nGet Invoice webservice path /v3/company/%7B%7Bcompanyid%7D%7D/invoice/147: TO /v3/company/{companyid}/invoice/{invoiceId}: Create invoice webservice Path /v3/company/%7B%7Bcompanyid%7D%7D/invoice: TO /v3/company/{companyid}/invoice: For Get Invoice parameters we added\n  {name: companyid, default: \u0026lsquo;{{companyid}}\u0026rsquo;, in: path, type: string, required: true}\n  {name: invoiceId, default: \u0026lsquo;{{invoiceId}}\u0026rsquo;, in: path, type: string, required: true}\n  For Create Invoice parameters we added.\n {name: companyid, default: \u0026lsquo;{{companyid}}\u0026rsquo;, in: path, type: string, required: true}  This is how it will look after the change.\n   Please make sure there is no error while making this change, space is very important, for e.g if you missed a space as in the below screenshot it will give you a parser error.\n   Below is have it will look like if you made all entries correct.\n   You can Toggle Enable Swagger and select create connector button.\nIt will validate and save your connector.\nNow before moving forward, let us go back to the security tab and copy the redirect URL. Go to Intuit developer dashboard and add this in the Allowed redirect URL(as we did for postman).\nIn most cases, it would be below,\nhttps://global.consent.azure-apim.net/redirect\nNow let\u0026rsquo;s test. Select the Test tab, Select New connection. It will ask us to login to Quickbooks, follow all steps as required. Enter companyid, invoice id as in below screenshot and select Test operation, If you got output as marked as no.5, we are good. 😊\n   Congratulation our custom connector is created successfully, now it\u0026rsquo;s time to create a sample flow to use this connector and its methods. For sake of simplicity, I am creating a flow with Manual Trigger.\n   Now add a new step, in action, select the custom tab, select our custom connector,\n   It will ask us to choose from 2 actions, first, add the Get invoice. Repeat this step and add Create Invoice also as the next step.\nConfigure both actions as in below,\n   Please note that for Create invoice, we need to pass Line as an array of the JSON objects. Copy it from the postman, below is for quick reference.\n[{ \u0026#34;Amount\u0026#34;: 100.00, \u0026#34;DetailType\u0026#34;: \u0026#34;SalesItemLineDetail\u0026#34;, \u0026#34;SalesItemLineDetail\u0026#34;: { \u0026#34;ItemRef\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;From MS Flow demo\u0026#34; }, \u0026#34;TaxCodeRef\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;2\u0026#34; } } }] Value is customer Id on whose account we need to generate Invoice, so adding 1 here, make sure you have customer created with that Id.\nWe are done with setting up our actions, let us run it. Save flow,\nSelect Test,\nSelect I\u0026rsquo;ll perform the trigger action. Select Save and test.\n   **Select continue -\u0026gt; Run Flow. **Wait for some time. If everything goes well, you see the below message.\n   You can expand actions and check responses returned in both actions.\nLogin to Quick book, From left navigation Go to Sales-\u0026gt;Invoices and you will see a new invoice generated. In my case, below are some generated invoices that I created from flow(except the first one) while testing flow.\n   So that\u0026rsquo;s come to end to the long article. To conclude, Please note we can create any operations available in quick books API from flow, we have to use first use postman to add the required API endpoint and then configure while creating custom connectors. Hope this helps and gives you a basic idea on getting started.\n","image":"https://pnp.github.io/blog/post/quickbooks-api-integration-with-power-automate-using-custom/images/SiddharthVaghasia_0-1628135161016_hud650fd4eac31d04b240340d6e74724a1_56765_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/quickbooks-api-integration-with-power-automate-using-custom/","tags":["Power Automate"],"title":"QuickBooks API Integration With Power Automate Using Custom Connectors"},{"categories":["CLI for Microsoft 365"],"contents":"The scenario Not unlike the previous scenario the goal of this blog post is to identify the activities per team. We want to capture how active each team member is based on their actions within that specific team. We can use those activities to score each member and share the top active users to team. Potentially we could also consider out to other services like SharePoint as they might be active on files rather than using the chat functionality. Given that we want to identify those users within a timeframe the script should be able to handle activity within a timeslot.\nAvailable metrics The CLI for Microsoft offers a range of commands to work with teams, channels, and the data within Teams. As well as information for other services. So, the first step is to identify what data we need. For demo purposes we start with the following:\n Retrieve a single team Retrieve all channels Retrieve messages within a timeframe Get all Likes \u0026amp; replies, and of course likes per reply as well  If we do have that information, we score each interaction and group the results per team member. We can even add additional points if the initial post has a subject to promote the use of best practices in working with Teams. Once we have all that information, we can post to Teams using an adaptive card.\nMicrosoft 365 CLI Commands Interacting with the CLI for Microsoft will be done using a set of basic commands:\n m365 teams channel list to list all teams channels m365 teams message list to list all messages within a channel. We will use a filter to get only messages in our desired time frame. m365 teams message reply list to list all replies per message as the the message list or message get do not provide you the reply list. m365 aad user get to get the display name for each user. m365 adaptivecard send to send our results to Teams and present a score card for all team members.  The scripts The script itself list all channels, loops through those channels and retrieves all replies. It constructs a new object that saves the UserID and per message type some additional details. Once that information is processed the results are group per user and sorted by the scores. Those results are then posted to Teams using an adaptive card. For scoring the scenario uses the following \u0026lsquo;ranking\u0026rsquo;:\n Each new posts is worth 2 points. Each new post with a subject scores an additional 1 pointer. Each reply counts as 1 point. Each reaction (using the 👍 or ♥ icons) scores 0.5 points.  You can tweak those scores yourself if you like on line 77 to 80. Future samples might add SharePoint interactions as well. $teamId = \u0026#34;\u0026lt;PUTYOURTEAMIDHERE\u0026gt;\u0026#34; $webhookUrl = \u0026#34;\u0026lt;PUTYOURURLHERE\u0026gt;\u0026#34; # You can get a delta of messages since the last \u0026#39;n\u0026#39; days. Currently set to seven. You can go back a maximum of 8 months. $date = (get-date).AddDays(-7).ToString(\u0026#34;yyyy-MM-ddTHH:mm:ssZ\u0026#34;) $channels = m365 teams channel list --teamId $teamId --output json | ConvertFrom-Json $results = @() $scoreResults = @() $channelCounter = 0; foreach ($channel in $channels) { $channelCounter++; Write-Output \u0026#34;Processing channel... $channelCounter/$($channels.Length)\u0026#34; $messages = m365 teams message list --teamId $teamId --channelId $channel.id --since $date --output json | ConvertFrom-Json $messageCounter = 0; foreach ($message in $messages) { $messageCounter++ Write-Output \u0026#34;Processing message ... $messageCounter/$($messages.Length)\u0026#34; # Skip messages that are created with an application (bots / adaptive cards) if ($null -ne $message.from.user.id) { $results += [pscustomobject][ordered]@{ Type = \u0026#34;Post\u0026#34; Details = $message.reactionType UserId = $message.from.user.id HasSubject = $($null -ne $message.subject) } } # Process all likes and comments on the initial message foreach ($reaction in $message.reactions) { $results += [pscustomobject][ordered]@{ Type = \u0026#34;Reaction\u0026#34; Details = $reaction.reactionType UserId = $reaction.user.user.id } } $replies = m365 teams message reply list --teamId $teamId --channelId $channel.id --messageId $message.Id --output json | ConvertFrom-Json foreach ($reply in $replies) { # Skip replies that are created with an application (bots) if ($null -ne $message.from.user.id) { $results += [pscustomobject][ordered]@{ Type = \u0026#34;Reply\u0026#34; UserId = $reply.from.user.id } } # Process all likes and comments on the reply message foreach ($reaction in $reply.reactions) { $results += [pscustomobject][ordered]@{ Type = \u0026#34;Reaction\u0026#34; Details = $reaction.reactionType UserId = $reaction.user.user.id } } } } } # Group the results per user $resultsGrouped = $results | Group-Object -Property UserId #Score per user foreach ($teamsUser in $resultsGrouped) { $user = m365 aad user get --id $teamsUser.Name --output json | ConvertFrom-Json # Count points # Each post is two points, 1 extra point awarded for each Post with Subject # Each reply 1 and each reaction 0.5 $score = (($teamsUser.Group | Where-Object { $_.Type -eq \u0026#34;Post\u0026#34; }).Count * 2) $score += (($teamsUser.Group | Where-Object { $_.HasSubject }).Count) $score += ($teamsUser.Group | Where-Object { $_.Type -eq \u0026#34;Reply\u0026#34; }).Count $score += (($teamsUser.Group | Where-Object { $_.Type -eq \u0026#34;Reaction\u0026#34; }).Count / 2) $scoreResults += [pscustomobject][ordered]@{ DisplayName = $user.displayName UserPrincipalName = $user.userPrincipalName Score = $score; } } # Sort our score report based on the score $scoreResults = $scoreResults | Sort-Object { $_.score } -Descending #Construct adaptive card $title = \u0026#34;‌‌ Most active team members\u0026#34; $scoreJson = \u0026#39;{ \u0026#34;title\u0026#34;: \u0026#34;‌‌ \u0026#39;+$($scoreResults[0].DisplayName)+\u0026#39;\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;\u0026#39; + $($scoreResults[0].score) + \u0026#39;\u0026#34; }\u0026#39; if($scoreResults[1]){ $scoreJson += \u0026#39;,{ \u0026#34;title\u0026#34;: \u0026#34;‌‌ \u0026#39;+$($scoreResults[1].DisplayName)+\u0026#39;\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;\u0026#39; + $($scoreResults[1].score) + \u0026#39;\u0026#34; }\u0026#39; } if($scoreResults[2]){ $scoreJson += \u0026#39;,{ \u0026#34;title\u0026#34;: \u0026#34;‌‌ \u0026#39;+$($scoreResults[2].DisplayName)+\u0026#39;\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;\u0026#39; + $($scoreResults[2].score) + \u0026#39;\u0026#34; }\u0026#39; } $card = \u0026#39;{ \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.2\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;\u0026#39; + $($title) + \u0026#39;\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Medium\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;Attention\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;Week \u0026#39; + $(get-date -UFormat %V) + \u0026#39;\u0026#34;, \u0026#34;fontType\u0026#34;: \u0026#34;Default\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Lighter\u0026#34;, \u0026#34;isSubtle\u0026#34;: true }, { \u0026#34;type\u0026#34;: \u0026#34;FactSet\u0026#34;, \u0026#34;facts\u0026#34;: [ \u0026#39; + $scoreJson + \u0026#39; ] } ] }\u0026#39; m365 adaptivecard send --url $webhookUrl --card $card  Executing the script will tell you the progress as it can take a while to process all channels and messages depending the size of your team.\n    Once the script is finished you can expect an adaptive card showing the score for that team. If no top 3 can be constructed it will only show the top 1 or 2, and their score.   Hopefully this sample provides some insights in how you can track activity and recognize the contributions team members make per team. I love playing around with samples like this as its a great way to learn the commands and see what value you can add based off data and information already present in your Microsoft 365 tenant.\n","image":"https://pnp.github.io/blog/post/recognize-team-activity-using-the-cli-for-microsoft-365/images/team-champion-script_hu6d11e7bcb8af065e7d000cf26f6411e5_56863_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/recognize-team-activity-using-the-cli-for-microsoft-365/","tags":["CLI Microsoft 365","Microsoft Teams"],"title":"Recognize team activity using the CLI for Microsoft 365"},{"categories":["Community post"],"contents":"Use Cases  You\u0026rsquo;re migrating list items from a tenant to another using back-office app (console app or Azure SaaS resource) and want to keep existing fields, including author / editor ones You\u0026rsquo;re developing an API / Web App that will be used by employees which data is saved to a SharePoint List without being in user context (because you want to make some background checks before saving)  When working with SharePoint in App-Only context, every update made on list items are done with the user \u0026ldquo;SharePoint App\u0026rdquo;. But you can replace this by any user of the company!\nOne important thing to know is that the Azure AD Application that will be used must be granted to \u0026quot;Sites.FullControl.All\u0026quot;, in order to update the Author / Editor field. Lower permissions won\u0026rsquo;t let you update them.]{.underline}\nSummary In this article, we\u0026rsquo;ll cover the following steps:\n Setup the AAD Application  Generate self-signed certificate [Granting SharePoint app permission]   Connect to SharePoint in App-Only context Update list item Author / Editor fields with any other user than \u0026ldquo;SharePoint App\u0026rdquo;  We\u0026rsquo;ll use PnP PowerShell, CLI for Microsoft 365 and PnP Framework!\nSetup the AAD Application The first thing to do is to register an application in Azure AD. As we\u0026rsquo;ll use the client credential flow with a certificate, we first need to create a certificate.\nSetup using PnP PowerShell With PnP PowerShell, a simple command is enough to both declare self-signed certificate and register AAD Application with permissions using this certificate:\n# Beware to mention an existing path in the -OutPath parameter, otherwise you won\u0026#39;t get your certificate available Register-PnPAzureADApp -ApplicationName \u0026#34;PnP.SharePoint.AppOnly\u0026#34; -Tenant contoso.onmicrosoft.com -OutPath c:\\temp -CertificatePassword (ConvertTo-SecureString -String \u0026#34;password\u0026#34; -AsPlainText -Force) -SharePointApplicationPermissions \u0026#34;Sites.FullControl.All\u0026#34; -Store CurrentUser -DeviceLogin This command does the following:\n Generate a self-signed certificate with a password and stores it in the current user Local Certificate Store (Personal, this parameter works only on Windows) Register an AAD Application with a certificate as an authentication flow, and a SharePoint App-Only permission  You can find more info about the command Register-PnPAzureADAp.\nSetup using CLI for Microsoft 365 For now there\u0026rsquo;s no option to:  generate both a self-signed certificate and register an AAD Application using it, in a single command. Requested in issue 2170 admin consent permissions when registering an AAD Application. Requested in issue 2563  Generate the self-signed certificate That said, we have two possibilities depending on the environment, to genereate the self-signed certificate.\nWith PnP PowerShell command New-PnPAzureCertificate:\nNew-PnPAzureCertificate -OutCert \u0026#34;PnP.SharePoint.AppOnly.cer\u0026#34; -OutPfx \u0026#34;PnP.SharePoint.AppOnly.pfx\u0026#34; -ValidYears 1 -CertificatePassword (ConvertTo-SecureString -String \u0026#34;password\u0026#34; -AsPlainText -Force) -CommonName \u0026#34;PnP.SharePoint.AppOnly\u0026#34; With OpenSSL:\n# Replace the -nodes argument by -noenc if you\u0026#39;re using OpenSSL 3.0, to disable encryption, since it will be done right after with the pfx file generation openssl req -new -x509 -sha256 -newkey rsa:2048 -nodes -keyout PnP.SharePoint.AppOnly.key.pem -days 365 -out PnP.SharePoint.AppOnly.cert.pem -subj \u0026#34;/CN=contoso.com\u0026#34; openssl pkcs12 -export -name \u0026#34;contoso.com\u0026#34; -out PnP.SharePoint.AppOnly.pfx -inkey PnP.SharePoint.AppOnly.key.pem -in PnP.SharePoint.AppOnly.cert.pem -password pass:password  The first command generates both certificate request and X.509 self-signed one (with private key RSA 2048 bits) which expires in 1 year. The \u0026quot;.cer.pem\u0026quot; exported file will be used for Azure AD Application registration. The second command will generate the PFX file with a password, from both the private key input file (\u0026quot;.key.pem\u0026quot;) and the certificate request (\u0026quot;.cert.pem\u0026quot;) one. This one will be used for authentication, we\u0026rsquo;ll see about that later.\nRegister the AAD Application Once the certificate generated, we\u0026rsquo;ll setup the app registration with the following command:\nm365 aad app add --name \u0026#39;PnP.SharePoint.AppOnly\u0026#39; --apisApplication \u0026#39;https://microsoft.sharepoint-df.com/Sites.FullControl.All\u0026#39; Wait a couple of minutes before being enabled to admin consent the permission through the Azure Portal.\nOnce done, stay on the AAD Application page and go to Certificates \u0026amp; Secrets and click on \u0026ldquo;Upload certificate\u0026rdquo; to add the \u0026ldquo;PnP.SharePoint.AppOnly.cert.pem\u0026rdquo; file.\n\n  \\\nAuthenticate to SharePoint \u0026amp; Update list item Once everything\u0026rsquo;s set for App-Only context, let\u0026rsquo;s authenticate to SharePoint and update our list item!\nUpdate with PnP Framework The simpliest way is to use the PFX file created before, to get a context.\nLet\u0026rsquo;s try with a simple Console App:\n static void Main(string[] args) { string aadAppId = \u0026#34;[AAD_APP_ID]\u0026#34;; // Get Application ID / Client ID from the registration made before string pfxFilePath = \u0026#34;[PFX_FILE_PATH]\u0026#34;; // Like this: C:\\\\temp\\\\PnP.SharePoint.AppOnly.pfx string pfxPassword = \u0026#34;[PFX_PASSWORD]\u0026#34;; // For this example, it\u0026#39;s \u0026#34;password\u0026#34; string tenant = \u0026#34;contoso.onmicrosoft.com\u0026#34;; string spWeb = \u0026#34;htttps://contoso.sharepoint.com\u0026#34;; var authManager = new AuthenticationManager(aadAppId, pfxFilePath, pfxPassword, tenant); using (var ctx = authManager.GetContext(spWeb)) { Guid listId = new Guid(\u0026#34;[LIST_ID]\u0026#34;); int listItemId = 1; List lst = ctx.Web.GetListById(listId); ListItem itm = lst.GetItemById(listItemId); // Get Megan Bowen account User usr = ctx.Web.EnsureUser($\u0026#34;meganb@{tenant}\u0026#34;); // Replace \u0026#34;Editor\u0026#34; by \u0026#34;Author\u0026#34; if you want itm[\u0026#34;Editor\u0026#34;] = usr; itm.Update(); ctx.ExecuteQuery(); } } Update with PNP PowerShell $aadAppId = \u0026#34;[AAD_APP_ID]\u0026#34; # Get Application ID / Client ID from the registration made before $pfxFilePath = \u0026#34;[PFX_FILE_PATH]\u0026#34; # Like this: C:\\\\temp\\\\PnP.SharePoint.AppOnly.pfx $pfxPassword = (ConvertTo-SecureString -String \u0026#34;[PFX_PASSWORD]\u0026#34; -AsPlainText -Force) # For this example, it\u0026#39;s \u0026#34;password\u0026#34; $tenant = \u0026#34;contoso.onmicrosoft.com\u0026#34; $spWeb = \u0026#34;https://contoso.sharepoint.com\u0026#34; Connect-PnPOnline -Url $spWeb -Tenant $tenant -ClientId $aadAppId -CertificatePath $pfxFilePath -CertificatePassword $pfxPassword $listId = \u0026#34;53006cd2-871c-4683-aaf9-f67affa2de5b\u0026#34; $lisItemId = 1 # Replace \u0026#34;Editor\u0026#34; by \u0026#34;Author\u0026#34; if you want Set-PnPListItem -List $listId -Identity $lisItemId -Values @{\u0026#34;Editor\u0026#34;=\u0026#34;meganb@\u0026#34; + $tenant} Update with CLI for Microsoft 365 aadAppId=\u0026#34;[AAD_APP_ID]\u0026#34; # Get Application ID / Client ID from the registration made before pfxFilePath=\u0026#34;[PFX_FILE_PATH]\u0026#34; # Like this: /home/PnP.SharePoint.AppOnly.pfx pfxPassword=\u0026#34;[PFX_PASSWORD]\u0026#34; # For this example, it\u0026#39;s \u0026#34;password\u0026#34; tenant=\u0026#34;contoso.onmicrosoft.com\u0026#34; spWeb=\u0026#34;https://contoso.sharepoint.com\u0026#34; m365 login --authType certificate --certificateFile $pfxFilePath --password $pfxPassword --appId $aadAppId --tenant $tenant listId=\u0026#34;53006cd2-871c-4683-aaf9-f67affa2de5b\u0026#34; lisItemId=1 # Replace \u0026#34;--Editor\u0026#34; by \u0026#34;--Author\u0026#34; if you want m365 spo listitem set --listId $listId --id $lisItemId --webUrl $spWeb --Editor \u0026#34;[{\u0026#39;Key\u0026#39;:\u0026#39;i:0#.f|membership|meganb@${tenant}\u0026#39;}]\u0026#34; And that\u0026rsquo;s it! You should now be able to update those specific fields in any way !\nHappy coding!\n","image":"https://pnp.github.io/blog/post/recognize-team-activity-using-the-cli-for-microsoft-365/images/team-champion-script_hu6d11e7bcb8af065e7d000cf26f6411e5_56863_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/update-sharepoint-list-s-author-editor-field-in-app-only-context/","tags":["PnP PowerShell"],"title":"Update SharePoint list's Author / Editor field in App-Only context"},{"categories":["Microsoft 365 developer podcast"],"contents":"Tom Resing joins Paul at SPFest in Chicago to talk about his work as a Content Designer on SharePoint Syntex.\nListen to the show here: Content Design for SharePoint Syntex with Tom Resing (m365devpodcast.com)\nMicrosoft News  Microsoft Graph .NET SDK v4 now generally available with streamlined authentication and more Breaking changes to the Microsoft Graph connectors API (beta) What\u0026rsquo;s Coming to OneNote  Community Links  Fetching Teams User Info from Microsoft Graph with TeamsFx SDK Bring external data into Microsoft 365 using Graph Connectors (this article)  ","image":"https://pnp.github.io/blog/post/recognize-team-activity-using-the-cli-for-microsoft-365/images/team-champion-script_hu6d11e7bcb8af065e7d000cf26f6411e5_56863_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-content-design-for-sharepoint/","tags":[],"title":"Microsoft 365 Developer Podcast - Content Design for SharePoint Syntex with Tom Resing"},{"categories":["Community post"],"contents":"When using Microsoft Graph Toolkit with Azure AD single-tenant Azure AD apps, you need to adjust MSAL Provider initiation for your app to work. Here is how.\nMicrosoft Graph Toolkit - the easiest way to connect to Microsoft 365 Microsoft Graph Toolkit (MGT) is a set of web components that abstract away the plumbing behind connecting to Microsoft Graph and allow you to focus on your application instead. Microsoft Graph Toolkit is available as a generic set of web components distributed through the @microsoft/mgt npm package. If you\u0026rsquo;re building apps with React, you can use the @microsoft/mgt-react package which wraps MGT web component in React components making it easier to pass complex data and hook the components up to events.\nBefore you begin, connect to Azure AD Microsoft Graph Toolkit allows you to connect your app to Microsoft 365 through Microsoft Graph. To do that, it needs to authenticate the user working with your web app against their tenant.\nIf you build applications using SharePoint Framework, you can reuse the existing authentication context. But if you build a standalone web app, you need to register an application in Azure Active Directory and use it with MGT\u0026rsquo;s MSAL Provider, like:\nimport { MsalProvider } from \u0026#39;@microsoft/mgt-msal-provider\u0026#39;; Providers.globalProvider = new MsalProvider({ clientId: \u0026#39;ab9533b2-4e1e-4aaf-8412-8f02cfb9484c\u0026#39; }); In some cases though, this setup is not enough.\nSingle- vs. multi-tenant Azure AD apps When you create an Azure AD app, you choose whether you want the application to be single- or multi-tenant. In other words, whether users from any directory should be allowed to use the app or only users from the same directory where the app is registered. If your organization uses a single directory, registering your Azure AD app as single-tenant allows you to create an additional security measure preventing your app from unintended use.\nThe side-effect is though, that if you want to use a single-tenant Azure AD app with Microsoft Graph Toolkit, you need to instruct it where your Azure AD app is registered.\nUse single-tenant Azure AD apps with Microsoft Graph Toolkit If you try to use a single-tenant Azure AD with Microsoft Graph Toolkit using the default MSAL Provider setup with just the clientId, when you try to login to your app, you won\u0026rsquo;t be able to.\n While you won\u0026rsquo;t see any error in the UI, if you open developer tools in your browser and take a look at requests, you will see a GET request to https://login.microsoftonline.com/common/reprocess followed by a 302 response with the error message in the query string:\nhttp://localhost:3000/#error=invalid_request\u0026amp;error_description=AADSTS50194%3a+Application+%27ab9533b2-4e1e-4aaf-8412-8f02cfb9484c%27(My+M365+app)+is+not+configured+as+a+multi-tenant+application.+Usage+of+the+%2fcommon+endpoint+is+not+supported+for+such+applications+created+after+%2710%2f15%2f2018%27.+Use+a+tenant-specific+endpoint+or+configure+the+application+to+be+multi-tenant.%0d%0aTrace+ID%3a+79cfbca0-d484-461e-9d56-f3a4b4a30f00%0d%0aCorrelation+ID%3a+ffbed0df-da84-4076-a52b-9d3037c28ff9%0d%0aTimestamp%3a+2021-01-04+12%3a10%3a38Z\u0026amp;state=eyJpZCI6ImQyNGZjY2YxLTk2OTk... For readability, here is the exact error message:\n AADSTS50194: Application \u0026lsquo;ab9533b2-4e1e-4aaf-8412-8f02cfb9484c\u0026rsquo;(My M365 app) is not configured as a multi-tenant application. Usage of the /common endpoint is not supported for such applications created after \u0026lsquo;10/15/2018\u0026rsquo;. Use a tenant-specific endpoint or configure the application to be multi-tenant\n For you to be able to use a single-tenant Azure AD app with Microsoft Graph Toolkit, you need to extend the MsalProvider initialization with authority:\nimport { MsalProvider } from \u0026#39;@microsoft/mgt-msal-provider\u0026#39;; Providers.globalProvider = new MsalProvider({ clientId: \u0026#39;ab9533b2-4e1e-4aaf-8412-8f02cfb9484c\u0026#39;, authority: \u0026#39;https://login.microsoftonline.com/f7322380-f203-42ff-93e8-66e266f6d2e4\u0026#39; }); The GUID in the authority (f7322380-f203-42ff-93e8-66e266f6d2e4), is the ID of the Azure Active Directory where you have registered your application.\nAfter this change, you will be able to use your app with Microsoft Graph Toolkit just as you\u0026rsquo;d expect.\n When you use multi-tenant Azure AD apps with Microsoft Graph Toolkit, instantiating the MSAL Provider with just the clientId is sufficient. But when you use a single-tenant Azure AD app, you also need to specify the authority to instruct Azure AD where the app is registered.\n","image":"https://pnp.github.io/blog/post/use-single-tenant-azure-ad-apps-with-microsoft-graph-toolkit/images/banner-mgt-login-single-tenant-azure-ad_hu5539cbd45e739ea3065b50550edf4efb_660474_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/use-single-tenant-azure-ad-apps-with-microsoft-graph-toolkit/","tags":["Microsoft Graph toolkit"],"title":"Use single-tenant Azure AD apps with Microsoft Graph Toolkit"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary Summer break and community call schedule updates reviewed. Preview the new Microsoft 365 Extensibility look book gallery. Looking to get started with Microsoft Teams development? Don\u0026rsquo;t miss out on our Teams samples gallery (updated sample browser in June), and the new Microsoft 365 tenant \u0026ndash; script samples gallery - s*cripts for PowerShell and CLIs. * Sign up and attend one of a growing list of events hosted by Sharing is Caring this month. Announced PnP Recognition Program and availability of Power Platform Samples. Project releases this week - PnP .NET Libraries - PnP Framework v1.6.0, PnP .NET Libraries - PnP Core SDK v1.3.0 and PnP PowerShell v1.7.0. Open-source project status: (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.6.0 GA, PnP Provisioning Engine Schema v202103 Version 1.7.0 \u0026ndash; Late Summer 2021 PnP .NET Libraries - PnP Core SDK v1.3.0 GA Version 1.4.0 \u0026ndash; Late Summer 2021 PnP PowerShell v1.7.0 GA Yo teams - generator-teams v3.2.0 GA v3.3.0 Preview soonish Yo teams - yoteams-build-core v1.2.0 GA, v1.2.1 Preview Yo teams \u0026ndash; yoteams-deploy v1.1.0 GA Yo teams - msteams-react-base-component v3.1.0 Microsoft Graph Toolkit (MGT) v2.2.0 GA Bug fixes and Updates, v2.3.0 later in August\n Three Power Platform samples were delivered, as well. The host of this call was Julie Turner (Sympraxis Consulting) | @jfj1997. Q\u0026amp;A takes place in chat throughout the call.\nActions   Opt in to PnP Recognition Program | https://aka.ms/m365pnp-recognition\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; August 31st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; August 23rd PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; August 24th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; August 25th Ask Me Anything \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th First Time Presenter \u0026ndash; August 30th More than Code with VSCode \u0026ndash; TBS Maturity Model Practitioners \u0026ndash; August 17th and every 3rd Tuesday of month, 7:00am PT PnP Office Hours \u0026ndash; 1:1 session - Register PnP Buddy System - Request a Buddy    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  No new Teams samples this week **Microsoft Power Platform Samples: **(https://aka.ms/powerplatform-samples)\n  SharePoint Collect Feedback - April Dunnam | @aprildunnam\n  Get Graph API Data within Power BI Reports - Scott McKenzie | @365EDUBI   Fluent UI Custom Theme - Fabio Franzini | @franzinifabio A packed house today. Hope all are enjoying summer or winter, in Southern Hemisphere. Nice seeing everyone. Be well.   Demos Demos delivered in this session\n  Power Platform Tips \u0026amp; Tricks \u0026ndash; collaborate in a Power App within a Microsoft Teams meeting using Main Stage (Developer Preview) \u0026ndash; that allows app content from meeting side panel to take full screen. Requires minor modification to manifest file \u0026ndash; create option to add app to side panel. Upload custom app to Teams, create new meeting, add app to meeting sidebar, broadcast app to Main Stage.   List Formatting Enhanced Web Part​ \u0026ndash; specifically the Enhanced List Formatting web part delivers extensibility over the OOB List web part to enhance CSS Styles only on selected pages rather than across site collection. Allows you to use pseudo classes and elements along with animations.** ** Add CSS Styles in Property pane. CSS only, no JS. Examples shown include hover effects (animations), transform labels, community Polaroids, and custom fonts.\n  List Formatting Magic​ \u0026ndash; getting started with Lists? Use richly formatted list templates and designers from Microsoft, along with PnP samples. Customize newly created list for org - add/delete and format columns, add and stylize font, set colors, add data. Use Wizards and jump into Advanced mode anytime. Much can be learned from OOB script and schema in a template. Simpler add date math expressions reviewed as well.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  PnP .NET library updates - Paolo Pialorsi (PiaSys.com) | @paolopia - 9:49\n  PnP PowerShell - Paolo Pialorsi (PiaSys.com) | @paolopia - 12:06\n  yo Teams updates - Paolo Pialorsi (PiaSys.com) | @paolopia - 12:50\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) | beth-panx - 13:35\n  Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German - 15:42\n  Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam - 17:04\n  Demo: Power Platform Tips \u0026amp; Tricks \u0026ndash; April Dunnam (Microsoft) | @aprildunnam - 19:10\n  Demo: List Formatting Enhanced Web Part \u0026ndash; David Warner II (Catapult Systems) | @DavidWarnerII - 29:58\n  Demo: List Formatting Magic \u0026ndash; Chris Kent (DMI) | @theChrisKent - 40:13\n  Resources Additional resources around the covered topics and links from the slides.\n  Sample - Enhanced List Formatting\n  CSS - Pseudo-elements   CSS - Pseudo-classes   CSS - animation   Icons \u0026ndash; Flicon   Documentation - Use column formatting to customize SharePoint   Samples - SharePoint List Formatting Samples   Video channel \u0026ndash; Microsoft Lists   Samples - Power Platform Samples | aka.ms/powerplatform-samples\n  Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples\n  Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  General resources  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Office add-in monthly call \u0026ndash; August 11th at 8:00 am PDT | https://aka.ms/officeaddinscall SharePoint Framework call \u0026ndash; August 12th at 7:00 am PDT | https://aka.ms/spdev-spfx-call Adaptive Cards monthly call \u0026ndash;August 12th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall Power Apps monthly call \u0026ndash;August 18th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call \u0026ndash;August 19th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Identity Platform \u0026ndash;August 19th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;   Microsoft 365 PnP team, Microsoft - 5th of August 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-5th-of-august/images/PnP-Calls-TogetherMode-LowerResolution_hu7c23ec04ea799e30d11c4b36860f242f_7805593_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-5th-of-august/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 5th of August, 2021"},{"categories":["Community post"],"contents":"As you are probably aware, Microsoft is looking to eliminate SharePoint 2010 and 2013 workflows. In fact, 2010 workflows have already been retired, while 2013\u0026rsquo;s retirement date(s) are still looming. Microsoft has advised users to manually rebuild their necessary SharePoint workflows (SPWF\u0026rsquo;s) as comparable M365 Power Automate flows. To that end, Microsoft has provided some ][, including ]a tool to sniff out SPWF\u0026rsquo;s within your cloud environment. When it comes to planning the migration of your SPWF\u0026rsquo;s to Power Automate flows, it helps to think of them as two completely different platforms. Despite that fact that it\u0026rsquo;s all just \u0026lsquo;Microsoft\u0026rsquo; under the covers, Power Automate is a substantially more robust, complex, and powerful application than SharePoint Designer. It is simply not \u0026lsquo;apples to apples\u0026rsquo;, which is why you won\u0026rsquo;t find a convenient \u0026lsquo;CONVERT\u0026rsquo; button. That said, there are opportunities for automating the creation of Power Automate flows. This will potentially go a long way towards helping organizations who have invested heavily in SPWF\u0026rsquo;s and now have a mountain of work ahead of them to convert. In this post, I will walk through the details of programmatically creating Power Automate flows with links to a sample C# console app. Part 1 \u0026mdash; Interacting with \u0026lsquo;Solution\u0026rsquo; Flows Because flows under the \u0026lsquo;My Flows\u0026rsquo; tab are not currently supported by Power Automate web API\u0026rsquo;s, you will need to interact with all programmatic flows via the \u0026lsquo;Solutions\u0026rsquo; tab.    **Note: I have only been able to programmatically create/access flows within the Default Solution for a relevant Dataverse environment. Microsoft does not mention this limitation in their web API documentation and I am uncertain of the scalability/performance implications.\nTo manually create a new Solutions flow, navigate to the Solutions tab and select Default Solution \u0026gt; New \u0026gt; Cloud flow\n   To view existing Solutions flows, navigate to the Solutions tab and select Default Solution, then filter ‘Cloud flow’. To obtain the ID for a specific Solutions flow, select it and copy the GUID value (/flows/[GUID]/) from the browser URL.\n   Part 2 \u0026mdash; Get ClientData Content for New Flows In order to create flows programmatically, we will use the Power Automate Management Web API. The meat and potatoes of the flow payload is contained in the clientdata property. To help determine appropriate content for populating this section, I recommend manually creating a \u0026lsquo;base\u0026rsquo; Power Automate flow using the UI. Then, you can leverage the API to get the clientdatacontent from that manual flow and copy/paste it into the payload for new flow(s).\n Follow the instructions for creating a new Solutions flow as shown above in Part 1.  Navigate to your tenant Power Platform admin center to obtain the environment URL. Update the variable at line #17 with the relevant URL.  Uncomment the RetrieveFlowmethod call at line #40 and confirm theCreateFlow method at line #41 is commented out. See Part 1 above to obtain a Flow ID (GUID) for the flow you just created. Update the variable at line #113 with the flow GUID value.  Insert a breakpoint at line #122 Run the project, providing credentials for a user who has access to the Dataverse Web API. (I have only tested with a global admin account.) Copy the string value within the clientdata .  Part 3 \u0026mdash; Programmatically Create a New Flow  Paste the clientdata content from above into the variable located on line #61. Comment out the RetrieveFlowmethod call at line #40 and confirm theCreateFlow method at line #41 is not commented out. Run the project! If everything works as expected, you should be able to locate your new flow by following the instructions in Part 1 to view Solutions flows. Test your new flow to confirm everything works as expected.   Part 4 \u0026mdash; \u0026lsquo;Tweak\u0026rsquo; the ClientData Content Below is a de-serialized example of the content within the clientdataproperty of a Power Automate flow. This particular flow is triggered when a new item is created within a SharePoint list. The indicated tableproperty at line #52 holds the value for the GUID of the relevant SharePoint list. To create a new Power Automate flow which targets a different SharePoint list (within the same Site), simply update that GUID value in the clientdata . While I have only tested this specific scenario, the potential applications for \u0026rsquo;tweaking\u0026rsquo; values to facilitate bulk flow creation are endless. {{ \u0026#34;properties\u0026#34;: { \u0026#34;connectionReferences\u0026#34;: { \u0026#34;shared_sharepointonline\u0026#34;: { \u0026#34;runtimeSource\u0026#34;: \u0026#34;embedded\u0026#34;, \u0026#34;connection\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;shared-sharepointonl-ceefa1df-44c6-4e6f-800b-b350-ca17dbda\u0026#34; }, \u0026#34;api\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;shared_sharepointonline\u0026#34; } }, \u0026#34;shared_office365\u0026#34;: { \u0026#34;runtimeSource\u0026#34;: \u0026#34;embedded\u0026#34;, \u0026#34;connection\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;shared-office365-3bf72576-f215-4852-95ad-69cf-db33f170\u0026#34; }, \u0026#34;api\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;shared_office365\u0026#34; } } }, \u0026#34;definition\u0026#34;: { \u0026#34;$schema\u0026#34;: \u0026#34;https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#\u0026#34;, \u0026#34;contentVersion\u0026#34;: \u0026#34;1.0.0.0\u0026#34;, \u0026#34;parameters\u0026#34;: { \u0026#34;$connections\u0026#34;: { \u0026#34;defaultValue\u0026#34;: {}, \u0026#34;type\u0026#34;: \u0026#34;Object\u0026#34; }, \u0026#34;$authentication\u0026#34;: { \u0026#34;defaultValue\u0026#34;: {}, \u0026#34;type\u0026#34;: \u0026#34;SecureObject\u0026#34; } }, \u0026#34;triggers\u0026#34;: { \u0026#34;When_an_item_is_created\u0026#34;: { \u0026#34;recurrence\u0026#34;: { \u0026#34;frequency\u0026#34;: \u0026#34;Minute\u0026#34;, \u0026#34;interval\u0026#34;: 3 }, \u0026#34;splitOn\u0026#34;: \u0026#34;@triggerOutputs()?[\u0026#39;body/value\u0026#39;]\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;OpenApiConnection\u0026#34;, \u0026#34;inputs\u0026#34;: { \u0026#34;host\u0026#34;: { \u0026#34;apiId\u0026#34;: \u0026#34;/providers/Microsoft.PowerApps/apis/shared_sharepointonline\u0026#34;, \u0026#34;connectionName\u0026#34;: \u0026#34;shared_sharepointonline\u0026#34;, \u0026#34;operationId\u0026#34;: \u0026#34;GetOnNewItems\u0026#34; }, \u0026#34;parameters\u0026#34;: { \u0026#34;dataset\u0026#34;: \u0026#34;https://[M365Domain].sharepoint.com/\u0026#34;, \u0026#34;table\u0026#34;: \u0026#34;e134069a-5a16-4602-bdd5-7f1fec27d45a\u0026#34; }, \u0026#34;authentication\u0026#34;: \u0026#34;@parameters(\u0026#39;$authentication\u0026#39;)\u0026#34; } } }, \u0026#34;actions\u0026#34;: { \u0026#34;Send_an_email_(V2)\u0026#34;: { \u0026#34;runAfter\u0026#34;: {}, \u0026#34;type\u0026#34;: \u0026#34;OpenApiConnection\u0026#34;, \u0026#34;inputs\u0026#34;: { \u0026#34;host\u0026#34;: { \u0026#34;apiId\u0026#34;: \u0026#34;/providers/Microsoft.PowerApps/apis/shared_office365\u0026#34;, \u0026#34;connectionName\u0026#34;: \u0026#34;shared_office365\u0026#34;, \u0026#34;operationId\u0026#34;: \u0026#34;SendEmailV2\u0026#34; }, \u0026#34;parameters\u0026#34;: { \u0026#34;emailMessage/To\u0026#34;: \u0026#34;@triggerOutputs()?[\u0026#39;body/Author/Email\u0026#39;]\u0026#34;, \u0026#34;emailMessage/Subject\u0026#34;: \u0026#34;New Item Created!\u0026#34;, \u0026#34;emailMessage/Body\u0026#34;: \u0026#34;\u0026lt;p\u0026gt;New Item Created!\u0026lt;br\u0026gt;\\n@{triggerOutputs()?[\u0026#39;body/{Link}\u0026#39;]}\u0026lt;/p\u0026gt;\u0026#34; }, \u0026#34;authentication\u0026#34;: \u0026#34;@parameters(\u0026#39;$authentication\u0026#39;)\u0026#34; } } }, \u0026#34;outputs\u0026#34;: {} } }, \u0026#34;schemaVersion\u0026#34;: \u0026#34;1.0.0.0\u0026#34; }} ","image":"https://pnp.github.io/blog/post/create-and-retrieve-power-automate-flows-with-code/images/Tracy_1-1627940128961_hu8800b91c77f26be8760bdd52adf6012f_29474_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/create-and-retrieve-power-automate-flows-with-code/","tags":["Power Automate"],"title":"Create and Retrieve Power Automate Flows - WITH CODE!!! :-)"},{"categories":["Community post"],"contents":"A little secret First of all, if you don\u0026rsquo;t know already and you want to quickly create an excel or word file on your OneDrive, try http://excel.new or http://word.new. In the following post I will cover three ideas:\n Splitting a workbook with many worksheets into unique workbooks containing one sheet Creating a new excel file and populating it with data Converting a CSV into an Excel File   Splitting a Workbook This solution requires a bit of Office Script typescript in order to identify the number of worksheets in a workbook and delete the sheets that are no longer required. I\u0026rsquo;ve written two basic scripts to do the following:  \u0026ldquo;GetSheetNames\u0026rdquo;: retrieve a list of sheets and returns an array to PowerAutomate and;   function main(workbook: ExcelScript.Workbook) { // Get all the worksheets in the workbook.  let sheets = workbook.getWorksheets(); // Get a list of all the worksheet names.  let names = sheets.map((sheet) =\u0026gt; sheet.getName()); return (names) }  2. \u0026ldquo;DeleteSheets\u0026rdquo;: delete the sheets from a workbook based on an array input, returning the number of sheets in the workbook (hopefully 1!) function main(workbook: ExcelScript.Workbook, SheetsToDelete: Array\u0026lt;string\u0026gt; = [], ) { //for each of the worksheets in the array  for (let worksheet of SheetsToDelete) { //delete the worksheet  workbook.getWorksheet(worksheet).delete(); } //get current worksheets in workbook  let sheets = workbook.getWorksheets(); let names = sheets.map((sheet) =\u0026gt; sheet.getName()); //return the number of sheets left  return(names.length) }  This allows us to create a flow that will:\n return an array of sheet names in our first office script action create a copy of the original excel file with the sheet name prefixed to the file name delete all but the unique sheet for each copy This is what the flow looks like: When a file is created in our folder location (in this case OneDrive but equally it would work on SharePoint), we get the worksheet names and then get the file content of the original file.      Then in an apply to each, we use the results array from the \u0026ldquo;GetSheetNames\u0026rdquo; office script, and iterate through each item using a filter array to return an array of all but the current sheet name (i.e. where item() is not equal to items(\u0026lsquo;Apply_to_each\u0026rsquo;) or \u0026ldquo;Current Item\u0026rdquo;). If we have an array of five sheets, the filter will return four sheets. Then we can create a copy of the original file using the file content and a prefix of \u0026ldquo;Current Item\u0026rdquo;. Finally calling the \u0026ldquo;Delete Sheets\u0026rdquo; Office Script using the dynamic Id of the Create File Action, based on the result of the filter array.    The end result is an excel workbook, containing one sheet and as we are in an apply to each, we end up with five worksheets, each with a unique worksheet. Below we have the original workbook containing five worksheets.\n    Here we see the individual workbooks on OneDrive, prefixed with the sheet name:    Now we have a single workbook with a unique sheet, called \u0026ldquo;ATable\u0026rdquo;:    Why might you want to do this? If you maintain a single workbook with multiple sheets and want to share a copy of each worksheet with individuals or teams, this would allow you to achieve that without compromising the original file. You could routinely split up your workbook and send a copy of each worksheet to your colleagues via email or Teams. Watch the full build and demonstration here:\nCreate an empty Excel File Natively, PowerAutomate doesn\u0026rsquo;t allow you to create a new Excel file. By creating an empty Excel file on SharePoint and using the get file content action, it\u0026rsquo;s possible to save the JSON output to a compose and re-use the empty template file when using the \u0026ldquo;create file\u0026rdquo; action.\n   A compose action with the File Content copied into it.   By doing it this way, we achieve two things.\n no need for the donor empty excel file, we can delete it and not have to worry about it being deleted accidentally we can remove the get file content action and rely entirely on the compose action we have created By using the output of the compose action we can create a new file (in this case named with a unique datetime string formatdatetime(utcnow(),\u0026lsquo;yyyyMMddhhmmss\u0026rsquo;).xlsx and then create a new table to allow data to be inserted. Here we have a table range from column A to E on row 1, i.e. 5 columns with headers Name, Age, Address1, Address2, PostCode.      To populate our excel file, I have an array contained within a compose, this data array could be the result of another action or a filter or OData query on another Excel Worksheet that you simply want to save a copy of:\n   Then using an apply to each and the compose array as an input we can add rows to the table and construct the row input array for our \u0026ldquo;add a row\u0026rdquo; action with keys / name pairs based on the column headers from the create table action. { \u0026#34;Name\u0026#34;: \u0026#34;@{items(\u0026#39;Apply_to_each\u0026#39;)?[\u0026#39;Name\u0026#39;]}\u0026#34;, \u0026#34;Age\u0026#34;: \u0026#34;@{items(\u0026#39;Apply_to_each\u0026#39;)?[\u0026#39;Age\u0026#39;]}\u0026#34;, \u0026#34;Address1\u0026#34;: \u0026#34;@{items(\u0026#39;Apply_to_each\u0026#39;)?[\u0026#39;Address1\u0026#39;]}\u0026#34;, \u0026#34;Address2\u0026#34;: \u0026#34;@{items(\u0026#39;Apply_to_each\u0026#39;)?[\u0026#39;Address2\u0026#39;]}\u0026#34;, \u0026#34;Postcode\u0026#34;: \u0026#34;@{items(\u0026#39;Apply_to_each\u0026#39;)?[\u0026#39;Postcode\u0026#39;]}\u0026#34; }  The table name is provided dynamically from the create table action and the File Id is the dynamic value from the create file action.   If we turn on concurrency, we can add 50 rows to the newly created excel file in a matter of seconds. Whilst I haven\u0026rsquo;t covered this here, it would be possible to write an office script to take an array of objects and populate an excel file without a table. I have previously covered this concept here Excel Scripts and Cloud Flows - Data Manipulation - Microsoft Tech Community. Watch how you can create a new file via PowerAutomate here: And Finally, converting a CSV to Excel File All we are doing is swapping out the array contained within the compose action and converting a CSV to an Array. Here we have a CSV contained within a compose and another compose action with a return line (literally press return on your keyboard). Then using split, we turn the CSV into an array of separate lines.    Using the select action, the from array input is the output from the compose splitline array (skipping object one, which contains the header line) and in this case I have supplied the key names manually. Finally the expression used to obtain the value is a split of each item (Or line) based on the separator, the comma \u0026lsquo;,\u0026rsquo;. This will allow us to call each value by integer index split(item(),\u0026rsquo;,\u0026rsquo;)[0].    Our select action take an array of comma separated lines and outputs an array of key/value pairs like follows:\n    And if we update the apply to each source as the select output, we end up with a new excel file using a CSV file as our input:\n    For more information about parsing CSV files in PowerAutomate, please read my blog article How To Parse any CSV to JSON Array - DamoBird365. More ideas and concepts on my YouTube or Blog. Please feel free to reach out if you have any questions.\n","image":"https://pnp.github.io/blog/post/excel-file-tricks-with-powerautomate/images/DamoBird365_0-1628093847880_hu8e414fb8ac52254147ee194f09c64ecc_52240_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/excel-file-tricks-with-powerautomate/","tags":["Power Automate"],"title":"Excel File Tricks with PowerAutomate"},{"categories":["Community post"],"contents":"Introduction SPFx is getting matured platform day by day to make extended application to M365 platform. Recently, SPFx 1.13.0 Beta launched with extensive capabilities to extend modern employee experience through ACEs. ACEs is a type of component which is stand for Adaptive Cards Extensions. ACEs come up with extensive possibilities to make a component which will be enabled customization to modern employee experience in Microsoft viva connection dashboard.\nLearning Objectives  Create SPFx using Adaptive Card Extension Consume Graph API in ACEs project\\ Render My team in Card View in ACEs View user details in Quick View in ACEs  Prerequisites for SPFx ACEs Project  Node.js v12 LTS Gulp v4 Yeoman v3 Set up SPFx Development Environment Install latest beta release using below code   npm install /generator-sharepoint@next --global  Create SPFx using Adaptive Card Extension Open node command prompt Reach to your desire location where you want to create a solution Run below command yo @microsoft/sharepoint  When prompted, enter the below values to each parameter.   Once all required packages are downloaded then you will get a message as below.   Now open a solution in visual studio code or editor that you want to use. The below command is used to open the solution in VS Code. code .  Install require packages to connect graph in solution. npm install @pnp/sp @pnp/graph @pnp/logging  Consume Graph API in ACEs project Create folder called \u0026quot;Models\u0026quot; in \u0026quot;..\\src\\\u0026quot;. Create file with name \u0026quot;mmp.models.ts\u0026quot; in folder models at location \u0026quot;..\\src\\models\\\u0026quot;. Copy below code and paste it in file. export interface IMyTeam { userPrincipalName: string; displayName: string; givenName: string; id: string; mobilePhone: string; officeLocation: string; preferredLanguage: string; surname: string; jobTitle: string; mail: string; } export interface IConfig { members: IMyTeam[]; } export class Config implements IConfig { constructor( public members: IMyTeam[] = [] ) { } }  Create a folder called Services in \u0026quot;..\\src\\\u0026quot;. Create a new file called \u0026quot;mmp.service.ts\u0026quot; in Folder \u0026quot;Services\u0026quot; at location \u0026quot;..\\src\\Services\u0026quot;. Copy below code to it. import { Logger, LogLevel } from \u0026#34;@pnp/logging\u0026#34;; import \u0026#34;@pnp/graph/users\u0026#34;; import \u0026#34;@pnp/graph/onedrive\u0026#34;; import \u0026#34;@pnp/graph/groups\u0026#34;; import { graph, graphGet, GraphQueryable } from \u0026#34;@pnp/graph\u0026#34;; import forEach from \u0026#34;lodash/forEach\u0026#34;; import { IConfig, Config, IMyTeam } from \u0026#34;../models/mmp.models\u0026#34;; export interface IMMPService { GenerateConfig: () =\u0026gt; Promise\u0026lt;IConfig\u0026gt;; } export class MMPServie implements IMMPService { private LOG_SOURCE: string = \u0026#34;MMPServie\u0026#34;; constructor() { } public async GenerateConfig(): Promise\u0026lt;IConfig\u0026gt; { let mmpConfig: IConfig = null; try { mmpConfig = new Config(); mmpConfig.members = await this._directReportsToMe(); } catch (error) { Logger.write(`${this.LOG_SOURCE}(GenerateConfig) - ${error}- `, LogLevel.Error); } return mmpConfig; } private async _directReportsToMe(): Promise\u0026lt;IMyTeam[]\u0026gt; { let returnValue: IMyTeam[] = []; try { let directReports = await graph.me.directReports(); if (directReports.length \u0026gt; 0) { forEach(directReports, (o: any) =\u0026gt; { returnValue.push({ displayName: o.displayName, id: o.id, jobTitle: o.jobTitle, givenName: o.givenName, mail: o.mail, mobilePhone: o.mobilePhone, officeLocation: o.officeLocation, preferredLanguage: o.preferredLanguage, surname: o.surname, userPrincipalName: o.userPrincipalName }); }); } } catch (error) { Logger.write(`${this.LOG_SOURCE}(_directReportsToMe) - ${error}- `, LogLevel.Error); } return returnValue; } }  Create a new file called \u0026ldquo;service.ts\u0026rdquo; in folder \u0026ldquo;Services\u0026rdquo; and add below code in that. import { IConfig, IMyTeam } from \u0026#34;../models/mmp.models\u0026#34;; import { Logger, LogLevel } from \u0026#34;@pnp/logging\u0026#34;; import { IMMPService, MMPServie } from \u0026#34;../services/mmp.service\u0026#34;; export interface IService { Init(): Promise\u0026lt;void\u0026gt;; } export class Service implements IService { private LOG_SOURCE: string = \u0026#34;Service\u0026#34;; private _mmpService: IMMPService = new MMPServie(); private _ready: boolean = false; private _currentConfig: IConfig = null; public async Init(): Promise\u0026lt;void\u0026gt; { await this._getConfig(); } public get Ready(): boolean { return this._ready; } public get Config(): IConfig { return this._currentConfig; } private async _getConfig(): Promise\u0026lt;void\u0026gt; { try { this._currentConfig = await this._mmpService.GenerateConfig(); this._ready = true; } catch (error) { Logger.write(`${this.LOG_SOURCE}(_getConfig) - ${error}- `, LogLevel.Error); } } }  Open file \u0026ldquo;MyPeopleAdaptiveCardExtension.ts\u0026rdquo; at location \u0026ldquo;..\\src\\adaptiveCardExtensions\\myPeople\\MyPeopleAdaptiveCardExtension.ts\u0026rdquo;\nImport below statement on top. import { sp } from \u0026#34;@pnp/sp\u0026#34;; import { graph } from \u0026#34;@pnp/graph\u0026#34;; import { Logger, LogLevel, ConsoleListener } from \u0026#34;@pnp/logging\u0026#34;; import { IConfig, IMyTeam } from \u0026#39;../../models/mmp.models\u0026#39;; import { Service } from \u0026#34;../../services/service\u0026#34;;  Update Interface with below code export interface IMyPeopleAdaptiveCardExtensionState { currentIndex:number; currentConfig: IConfig; }  Define private variable in class. private LOG_SOURCE: string = \u0026#34;MyPeopleAdaptiveCardExtension\u0026#34;; private service: Service = new Service();  Update OnInit() with below lines of code public async onInit(): Promise\u0026lt;void\u0026gt; { Logger.subscribe(new ConsoleListener()); Logger.activeLogLevel = LogLevel.Info; try { sp.setup({ spfxContext: this.context }); graph.setup({ spfxContext: this.context }); await this.service.Init(); this.state = { currentIndex:0, currentConfig: this.service.Config }; } catch (error) { Logger.write(`${this.LOG_SOURCE}(_onInit) - ${error}- `, LogLevel.Error); } this.cardNavigator.register(CARD_VIEW_REGISTRY_ID, () =\u0026gt; new CardView()); this.quickViewNavigator.register(QUICK_VIEW_REGISTRY_ID, () =\u0026gt; new QuickView()); return Promise.resolve(); }  Render My team in Card View in ACEs Open file Cardview.ts at location \u0026quot;..\\src\\adaptiveCardExtensions\\myPeople\\cardView\\CardView.ts\u0026quot;. Update three methods(Cardbuttons(), data() and onCardSelection()) with below code. public get cardButtons(): [ICardButton] | [ICardButton, ICardButton] | undefined { const buttons: ICardButton[] = []; if (this.state.currentIndex \u0026gt; 0) { buttons.push({ title: \u0026#39;Previous\u0026#39;, action: { type: \u0026#39;Submit\u0026#39;, parameters: { id: \u0026#39;previous\u0026#39;, op: -1 } } }); } if (this.state.currentIndex \u0026lt; this.state.currentConfig.members.length - 1) { buttons.push({ title: \u0026#39;Next\u0026#39;, action: { type: \u0026#39;Submit\u0026#39;, parameters: { id: \u0026#39;next\u0026#39;, op: 1 // Increment the index  } } }); return buttons as [ICardButton] | [ICardButton, ICardButton]; } } public get data(): IBasicCardParameters { const { givenName, mail,displayName } = this.state.currentConfig.members[this.state.currentIndex]; return { primaryText: `Display Name: ${displayName}| mail: ${mail}`, }; } public get onCardSelection(): IQuickViewCardAction | IExternalLinkCardAction | undefined { return { type: \u0026#39;QuickView\u0026#39;, parameters: { view: QUICK_VIEW_REGISTRY_ID, } }; }  View user details in Quick View in ACEs QuickView.ts file is responsible to render user details on card click. Open Quickview.ts file and import models in it and add new property to IQuickViewData import { IMyTeam } from \u0026#39;../../../models/mmp.models\u0026#39;; export interface IQuickViewData { subTitle: string; title: string; description: string; item: IMyTeam; // Add it }  Update Data method in QuickView.ts file with below code. public get data(): IQuickViewData { return { subTitle: strings.SubTitle, title: strings.Title, description: this.properties.description, item: this.state.currentConfig.members[this.state.currentIndex] }; }  Update template() in Quickview.ts file with custom JSON format to display user information. public get template(): ISPFxAdaptiveCard { return { \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Container\u0026#34;, \u0026#34;$data\u0026#34;: \u0026#34;${item}\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Display Name: ${displayName}\u0026#34;, \u0026#34;color\u0026#34;:\u0026#34;attention\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Container\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;Small\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Surname: ${surname}\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;Small\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Given Name: ${givenName}\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;Small\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Mail: ${mail}\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;Small\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;good\u0026#34;, } ] } ], \u0026#34;separator\u0026#34;: true } ], \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34; } }  Set permission to access graph API from SPFx. open package-solution.json file at location \u0026quot; ..\\Manageteam\\config\\package-solution.json\u0026quot; and add below code. \u0026#34;webApiPermissionRequests\u0026#34;: [ { \u0026#34;resource\u0026#34;: \u0026#34;Microsoft Graph\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;Directory.ReadWrite.All\u0026#34; } ]}  Run solution using below command gulp serve -l --nobrowser  Open URL https://contoso.sharepoint.com/_layouts/workbench.aspx\nAdd your extension using select add web part button. Conclusion In this article, We explored how to create ACEs solution using SPFx, How to Consume Graph API in ACEs, How to render custom adaptive card using customization of JSON and add multiple button in card view.\n","image":"https://pnp.github.io/blog/post/consume-graph-api-to-adaptive-card-extension-aces-spfx-component/images/People1_hu74cd5aba9cc8baa2f0d45983565822c2_106806_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/consume-graph-api-to-adaptive-card-extension-aces-spfx-component/","tags":["SharePoint framework (SPFx)","Adaptive card extensions","Microsoft Graph"],"title":"Consume Graph API to Adaptive Card Extension (ACEs) SPFx component type"},{"categories":["Microsoft 365 developer podcast"],"contents":"Joel Rodrigues joins Paul to talk about his projects using SPFx and Azure Functions, as well as his role as a maintainer of the PnP Re-Usable controls repository.\nListen to the show here: SPFx, Azure Functions and PnP Re-Usable controls with Joel Rodrigues (m365devpodcast.com)\nLinks from the show  Work with Azure Functions Proxies Authentication and authorization in Azure App Service and Azure Functions PnP Reusable Controls Joel on Twitter Joel\u0026rsquo;s blog  Microsoft News  Office Add-in Development Community (PnP) \u0026ndash; July 2021 update Introducing the broadcast development kit for Microsoft Teams Secure Open API (Swagger) calls with Azure Active Directory  Community Links  Using VS Code Teams Toolkit Extension for Teams App Development Secretless applications: use Azure Identity SDK to access data with a Managed Identity Get with the times \u0026amp; ditch TSLint in favor of ESLint in SharePoint Framework projects  ","image":"https://pnp.github.io/blog/post/consume-graph-api-to-adaptive-card-extension-aces-spfx-component/images/People1_hu74cd5aba9cc8baa2f0d45983565822c2_106806_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-dev-podcast-spfx-azure-functions-and-pnp-re-usable/","tags":[],"title":"Microsoft 365 Dev Podcast - SPFx, Azure Functions and PnP Re-Usable controls with Joel Rodrigues"},{"categories":["CLI for Microsoft 365"],"contents":"Manage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use.\nWhile building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects.\nNew version of CLI for Microsoft 365 \u0026ndash; v3.12 Following our monthly release cadence, we\u0026rsquo;ve released a new version of the CLI for Microsoft 365 with some new capabilities. Here are a few of the most noteworthy additions.\nNew Commands  We\u0026rsquo;ve continued improving the CLI, adding new commands and we\u0026rsquo;ve introduced in the previous version.\nCreate a bucket in a Microsoft Planner plan  We have added a new command that gives you the ability to create new buckets in your Microsoft Planner Plans. To create a new bucket in a given plan, execute: m365 planner bucket add \u0026ndash;name \u0026ldquo;My Planner Bucket\u0026rdquo; \u0026ndash;planName \u0026ldquo;My Planner Plan\u0026rdquo; \u0026ndash;ownerGroupName \u0026ldquo;My Planner Group\u0026rdquo; Retrieve buckets from a Microsoft Planner plan  We have added a new command that gives you the ability list the existing buckets in a given Microsoft Planner Plan. To retrieve information about buckets in a given plan, execute: m365 planner bucket list \u0026ndash;planName \u0026ldquo;My Plan\u0026rdquo; \u0026ndash;ownerGroupName \u0026ldquo;My Group\u0026rdquo; Retrieve a list of Microsoft Planner plans  We have added a new command that gives you the ability list the Microsoft Planner plans associated with a given Microsoft 365 Group. To retrieve information about the plans in a given group, execute: m365 planner plan list \u0026ndash;ownerGroupName \u0026ldquo;My Planner Group\u0026rdquo; List OneDrive sites  We have added a new command that gives you the ability to list information about all of the OneDrive sites in a Microsoft 365 tenant. To retrieve a list of OneDrive sites, execute: m365 onedrive list cli doctor  We have introduced a new command that to make it easier for you to provide all the necessary diagnostic information needed to triage and debug CLI issues without exposing any security-sensitive details. To retrieve diagnostic information about the current environment, execute: m365 cli doctor Changes We\u0026rsquo;ve continued improving the CLI, building upon the changes we\u0026rsquo;ve introduced in the previous version.\nUpgraded commands to use Microsoft Graph v1.0 endpoints When new capabilities are added to the Microsoft Graph they are usually added to the beta endpoint, this is to give developers early access to new capabilities however this is based on an assumption that these endpoints are subject to change until they reach general availability where they are added to the v1.0 endpoint.\nSometimes when we add new commands to the CLI for Microsoft 365 we make use of beta endpoints to add new capabilities to the CLI, for example, we recently added several Microsoft To Do commands that used the beta endpoints when they were initially released.\nOver time however these endpoints have matured, reaching general availability and are now available in the v1.0 endpoint, therefore we have updated our code to reflect this.\nWe have updated the following commands in this version of the CLI to use v1.0 endpoints.\n teams user app list teams channel get   Project upgrade support for latest SharePoint Framework developer preview  The spfx project upgrade command has been updated to support the latest developer preview versions. Starting with SharePoint Framework (SPFx) v1.12, developers can try preview releases of new SPFx generator packages as part of a developer preview. This release adds the ability to upgrade SharePoint Framework projects to version 1.13.0-beta.15 which previews Viva Connections extensibility with Adaptive Card Extensions. To generate instructions for upgrading to the latest preview version, execute: m365 spfx project upgrade \u0026ndash;preview Retrieve Associated Groups of a site  The spo web get command can be used to return information about a given site, previously this did not include returning information about its associated groups such as Owners, Members and Visitors groups however in this release we have updated the command to return this information. To retrieve information about a given site along with it\u0026rsquo;s associated groups, execute:\nm365 spo web get --webUrl https://contoso.sharepoint.com/subsite --withGroups New script samples  CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts.\n If you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\nAdd multiple lists in multiple sites  When provisioning lists in SharePoint Online, sometimes we want to replicate the same list across multiple site collections.\nThis script will create multiple lists in multiple sites, including also mapping a content type to the created lists.\nIdentify failed Site Designs executions When people in your organization create new SharePoint sites, you often need to ensure some level of consistency. For example, you may need proper branding and theming applied to each new site when they are created, Site Designs enable to run scripts and code automatically on the creation of those sites.\nThis script will iterate through all site collections in the tenant and returns a list of site design executions that have errors.\nList number of files in all lists and folders in a site When carrying out migrations it is useful to understand the number of files in a given site and where they are before moving files to a new location.\nThis script will iterate over all lists, folders and subfolders in a given site and return the item count for each.\nContributors This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order)\n Aakash Bhardwaj Vipul Kelkar Sudharsan Kesavanarayanan Shantha Kumar Patrick Lamber Waldek Mastykarz Arjun Menon Abderahman Moujahid Albert Jan-Schot Dipen Shah Rabia Williams Thank you all for the time you chose to spend on the CLI for Microsoft 365 and your help to advance it!   Work in progress Here are some things that we\u0026rsquo;re currently working on.\n More commands, what else Microsoft 365 is evolving and new capabilities are being released every day. With CLI for Microsoft 365, we aim to help you manage your tenant on any platform in a consistent way, no matter which part of Microsoft 365 you interact with. While we keep adding new commands to CLI for Microsoft 365 each release, we still barely scratched the surface with what\u0026rsquo;s possible in Microsoft 365. In the upcoming versions of the CLI for Microsoft, you can expect us to add more commands across the different workloads in Microsoft 365.\nUpdating Azure AD apps Recently, we introduced a command to easily create Azure AD app registrations. Because they\u0026rsquo;re backbone of every app you\u0026rsquo;d build on Microsoft 365, we think you should be able to create them as easily as possible. So with CLI for Microsoft 365, you can create a fully configured Azure AD app for the most common scenarios with just one line of code.\nWe\u0026rsquo;re currently working on adding support for updating Azure AD app registration which will be helpful for example when building apps for Microsoft Teams. Stay tuned!\nScript examples In every release of the CLI for Microsoft 365, we introduce new commands for managing Microsoft 365. With over 350 commands across the different Microsoft 365 services, the CLI for Microsoft 365 has become a powerful tool, not just for managing your tenant but also for automating your daily work.\nWe\u0026rsquo;d love to show you how you can use the CLI for Microsoft 365 to build automation scripts in PowerShell Core and Bash. If you have any scripts using SPO or PnP PowerShell that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\n\u0026rsquo;ensure\u0026rsquo; commands  Recently, we shipped our first ensure command - an easy way to help you that a site with specific settings exists. If it doesn\u0026rsquo;t, CLI creates it for you, if it does, CLI ensures it has the right properties. All in one line of code. We\u0026rsquo;d love to hear from you how you like it and if it\u0026rsquo;s something you\u0026rsquo;d like us to implement for other commands as well.\n Try it today Get the latest release of the CLI for Microsoft 365 from npm by executing:\n npm i -g @pnp/cli-microsoft365 Alternatively, you can get the latest release from Docker by executing:\n docker run --rm -it m365pnp/cli-microsoft365:latest If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365.\nIf you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-12/images/banner-cli-m365_hudf0438f961ff7b005fc2ad64065ff955_577192_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-12/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 v3.12"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from July 29th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary Summer and Fall community call schedule updates reviewed. Register today for August events on Sharing-is-caring. PnP Recognition Program announced. Viva Connections public developer preview! SharePoint Framework v1.13 beta released earlier this week with preview on the Viva Connections extensibility tooling. **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago)           PnP Project Current version Release/Status   SharePoint Framework (SPFx) v1.12.1, v1.13 beta v1.13.0 Beta end of July   PnPjs Client-Side Libraries v2.7.0 2.8.0 scheduled for Aug 13,   v3.0.0 developments underway     CLI for Microsoft 365 v3.12.0 Preview, v4.0.0 Preview v4.0.0 to release this fall   Reusable SPFx React Controls v2.8.0 (SPFx v1.11), v3.2.1 (SPFx v1.12.1)    Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1)    PnP SPFx Generator v1.16.0 v1.17.0 on the way   PnP Modern Search v4.3.0 \u0026amp; v3.21.0     There was 1 PnP SPFx extension and 4 PnP web part samples delivered in the last 2 weeks as well. Nice work! The host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place in chat throughout the call. Yep! Nice wave action. Great seeing you this week. Looking forward to seeing you again in August. Data for Hugo: 24 left-handed wavers, 4 right-handed wavers, 2 bi-handed wavers and 4 non-handed wavers. But wait, now there\u0026rsquo;s 35 wavers! Data corruption. Actions  Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; August 31st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; August 23rd PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; August 24th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; August 25th Ask Me Anything \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th First Time Presenter \u0026ndash; August 30th More than Code with VSCode \u0026ndash; TBS Maturity Model Practitioners \u0026ndash; August 17th and every 3rd Tuesday of month, 7:00am PT PnP Office Hours \u0026ndash; 1:1 session - Register PnP Buddy System - Request a Buddy   Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Hero Web Part and Tiles V2 Web Part \u0026ndash; Tiles v2 \u0026ndash; displays a group of responsive flex tiles that can be configured to navigate to different URLs. REACT Hero \u0026ndash; provides a customizable Hero web part that displays 5 images in a stand-alone carousel view. Both web parts use a stored collection from PnP PropertyFieldCollectionData control and custom field rendering control, file/icon pickers and fluid flex layout. Site theme selectable in Tiles v2. Thorough code walkthrough.\n  Exposing business data in Viva Connections or in SharePoint with custom diagram web parts​ \u0026ndash; or in Microsoft Teams. React diagraming web parts updated to v1.13. Updates accommodate Dynamic Data Connections, full bleed, handling section color changes, Viva Connections, and to search content in web part. Web parts leverage libraries/code from Mermaid, flowchart.js, and js-sequence-diagrams along with the Monaco Editor and PnP markdown property pane to both generate diagrams and to overlay text on them.\n  SPFx extension samples: (https://aka.ms/spfx-extensions)\n Machine Translations - Michał Romiszewski | @romiszewski   SPFx web part samples: (https://aka.ms/spfx-webparts)\n Datatable - Abderahman Moujahid | @Abderahman88 Hero Web Part - Omar El-Anis | @omarelanis Cross-Device Data (link pending) - Giuliano De Luca | @delucagiulian Diagrams (link pending) - Hugo Bernier | @bernierh  Thank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Patrick Rodgers (Microsoft) @mediocrebowler - 7:16 PnPjs Client-Side Libraries - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 10:11 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 11:47 PnP SPFx Controls - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 13:08 PnP Modern Search - Patrick Rodgers (Microsoft) @mediocrebowler \u0026ndash; 13:58 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 15:00  Demos   Demo: Hero Web Part and Tiles V2 Web Part \u0026ndash; Omar El-Anis | @omarelanis [\u0026ndash;][ 18:12]\n  Demo:[ Exposing business data in Viva Connections or in SharePoint with custom diagram web parts \u0026ndash; ]Hugo Bernier[ (Microsoft) | @bernierh ][\u0026ndash;][ 41:12]\n  Resources Additional resources around the covered topics and links from the slides.\n  Omar\u0026rsquo;s blog \u0026ndash; SP Bytes   Sample - Hero web part   Sample - Tiles V2   Controls \u0026ndash; PropertyFieldCollectionData control   Hugo\u0026rsquo;s Repo - React Diagram Web Parts   Gallery - SharePoint Framework Client-Side Web Part Samples   Tool - About Mermaid   Library - js-sequence-diagrams \n  Tool \u0026ndash; flowchart.js   Editor \u0026ndash; Monaco Editor   PnP/SPFx-property-controls - PropertyPaneMarkdownContent control   PnP/SPFx-controls-react - Placeholder control   General resources   Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   Gallery - Microsoft 365 Extensibility look book gallery   Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  Tools - PnP Modern Search v4| https://aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests\n  Other topics mentioned  SharePoint dev documentation SharePoint dev issue list  Upcoming Calls | Recurrent Invites   M365 General Dev call \u0026ndash; August 5th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Office add-in monthly call \u0026ndash; August 11th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  SharePoint Framework call \u0026ndash; August 12th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Adaptive Cards monthly call \u0026ndash; August 12th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Power Apps monthly call \u0026ndash; August 18th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform \u0026ndash; August 19th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 29th of July 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-29th-of-july-2021/images/PnP-Calls-TogetherMode-LowResolution_hu6404d1a0484c09db75bdb20daaea10bb_9039390_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-29th-of-july-2021/","tags":[],"title":"SharePoint Framework Community Call -- 29th of July, 2021"},{"categories":["Microsoft 365 developer podcast"],"contents":"Paul talks with Cam Dwyer about creating add-ins for Office, including DevOps and security principles.\nListen to the show here: Office Add-Ins with Cam Dwyer (m365devpodcast.com)\nMicrosoft News  Visual Studio 2022 New feature request experience for Microsoft Graph and Office Platform Microsoft Q\u0026amp;A  Community Links  Run CLI for Microsoft 365 in Docker Using the latest microsoft-graph-client in SPFx SharePoint Syntex - teaching AI to extract contents of structured documents with Form Processing Shared Channels (Microsoft Teams Connect) : rescheduled for November 2021  ","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-29th-of-july-2021/images/PnP-Calls-TogetherMode-LowResolution_hu6404d1a0484c09db75bdb20daaea10bb_9039390_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-office-add-ins-with-cam-dwyer/","tags":[],"title":"Microsoft 365 Developer Podcast - Office Add-Ins with Cam Dwyer"},{"categories":["Community post"],"contents":"After deploying PnP Modern Search to your tenant, it\u0026rsquo;s time to create the first PnP search page.\n PnP search pages can be added to any modern site, so it\u0026rsquo;s your decision where to do this. My recommendation is always try this out on a \u0026ldquo;playground\u0026rdquo; site first, before deploying to production.\n 1 \u0026ndash; Create an empty page The first step is to create an empty page, where you\u0026rsquo;ll add the PnP web parts. Go to any of your modern sites, and create a new page:   2 \u0026ndash; Add the PnP web parts The next step is to add the PnP web parts to your page. The package, that you\u0026rsquo;ve deployed, adds the following web parts available on your modern pages:   You can get to these web parts when search for \u0026ldquo;PnP\u0026rdquo; or \u0026ldquo;search\u0026rdquo; in the web part gallery:\n PnP Search Box PnP Search Results PnP Search Filters PnP Search Verticals     On a very simple search page, we have at least two web parts: a search box and a search results web part.\nSearch Box Web Part You simply add a Search Box to the page by choosing \u0026ldquo;PnP Search Box\u0026rdquo; web part. At this point, you don\u0026rsquo;t have to do any further configuration.\n   Search Results Web Part The next step is to add a \u0026ldquo;PnP Search Results\u0026rdquo; web part to the page.\nOnce the web part is added to the page, you have to connect it to the Search Box web part, to receive the query from there. You can do this by following these steps:\n Edit the page. Edit the properties of the Search Results web part. Switch to page \u0026ldquo;3 of 4\u0026rdquo; on the web part properties. Turn on \u0026ldquo;Use input query text\u0026rdquo;. Select \u0026ldquo;Dynamic value\u0026rdquo; in the radio button list. Select \u0026ldquo;PnP \u0026ndash; Search Box\u0026rdquo; in the \u0026ldquo;Connect to source\u0026rdquo; dropdown. Select \u0026ldquo;Search query\u0026rdquo; in the \u0026ldquo;PnP \u0026ndash; Search Box\u0026rsquo;s properties\u0026rdquo; dropdown.     Once done, save the page and enjoy your very first search page!\n   This article was originally posted on Search Explained Blog.\n","image":"https://pnp.github.io/blog/post/how-to-set-up-your-first-pnp-search-page/images/pnp-modern-search-page-01-new-page-1024x412_hu37b4b6b00c78d4303b191cc52cfd6c8d_17590_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-set-up-your-first-pnp-search-page/","tags":["PnP Modern Search","SharePoint"],"title":"How to set up your first PnP Search Page"},{"categories":["Community post"],"contents":"If you use Microsoft 365 (Office 365), you probably have been using Microsoft Search, too. But there might be use cases, when it\u0026rsquo;s not enough - for example, when you need a customized Search Application. If this is the case, your number one option might be to deploy PnP Modern Search Web Parts. This is an open source solution that helps you to build customized search applications in SharePoint Online modern experience. [However, this solution has to be deployed manually to your tenant. Let\u0026rsquo;s see how.]\n1 - Download the PnP package You can download the latest releases.\nYou\u0026rsquo;ll see there are two major versions: v3 and v4. Important notes:\n The v4 version uses a brand new code architecture and replaces the older v3 codebase. There will be no new features added to v3.x anymore, but bug fixes will be provided as needed. Because v4.x is not at feature parity yet with v3.x, you can still use the v3.x packages to meet your requirements. Also, there is not an auto-upgrade path from v3 to v4 due to the new architecture. New search functionality backed by the Microsoft Graph Search API will be v4 only.  If this is the first time you install PnP Modern Search, always go for v4. On the Releases page, scroll down to Assets, and then select the .sppkg file:\nNote: If you\u0026rsquo;ve installed the 2021 Jan release of v4, you had to deploy two packages, because the extensibility library was a separate .sppkg file. With the 2021 March release, there\u0026rsquo;s only one package, the team has replaced the extensibility library dependency by an npm package. Now you only need to deploy one SPFx solution in you app catalog.\n2 - Deploy the PnP Modern Search package to your tenant\u0026rsquo;s App Catalog App Catalog is a special site collection in SharePoint, that stores the apps for your organization\u0026rsquo; use. If you have an existing App Catalog, you can deploy the PnP Modern Search package there. Otherwise, you have to create a new App Catalog.\n2.1 - Create a new App Catalog You have to be a tenant administrator to create a new App Catalog.\nGo to Microsoft 365 Admin / SharePoint Admin Center. On the left menu, select \u0026ldquo;More features\u0026rdquo;, and the select \u0026ldquo;Apps\u0026rdquo;:   Once here, select New App Catalog, then fill in the form, so that the new site collection will be created:    2.2 - Deploy the PnP Modern Search Package Once your App Catalog is done, or you have one that has been created earlier, open its URL and then select \u0026ldquo;Apps for SharePoint\u0026rdquo;:\n   On this screen, select Upload, then choose the PnP Modern Search package file which you downloaded above.\n   When you\u0026rsquo;re asked if you trust PnP Modern Search Web Parts, select the checkbox if you want to deploy it to all site collections, otherwise leave it unchecked if you need it on a few selected sites only. Then select Deploy:\n   Once done, you should see the PnP Modern Search Web Parts in the App Catalog:\n   3 - Enjoy Now, go to any (modern) site on your tenant (in a site collection where you\u0026rsquo;ve deployed PnP Modern Search above), and edit the page. In the web parts list, search for \u0026ldquo;PnP\u0026rdquo;, and you\u0026rsquo;ll see the PnP Modern Search Web Parts there:\n   This article was originally posted on Search Explained Blog.\n","image":"https://pnp.github.io/blog/post/how-to-deploy-pnp-modern-search-web-parts-v4/images/pnp-modern-search-sharepoint-app-catalog-01-1024x834_huf2005119e4e0d1ecc7c41d1fc3912e25_305659_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-deploy-pnp-modern-search-web-parts-v4/","tags":["PnP Modern Search","SharePoint"],"title":"How to Deploy PnP Modern Search Web Parts v4"},{"categories":["Microsoft 365 developer podcast"],"contents":"Christos Mastkas returns to the show to talk with Jeremy and Paul about \u0026ldquo;secretless\u0026rdquo; applications and the latest on Azure.Identity.\nListen to the show here: Secretless Apps with Christos Matskas (m365devpodcast.com)\nLinks from the show  https://dev.to/425show Secure APIs using Node.js, Azure AD, Cosmos DB and the Azure SDKs  Microsoft News  Microsoft Graph Mailbag \u0026ndash; Create engaging apps with the Microsoft Teams Activity Feed API Utilize change notification APIs for Microsoft Teams messages Beyond Calibri: Finding Microsoft\u0026rsquo;s next default font  Community Links  hTWOo UI framework (@stfbauer)  ","image":"https://pnp.github.io/blog/post/how-to-deploy-pnp-modern-search-web-parts-v4/images/pnp-modern-search-sharepoint-app-catalog-01-1024x834_huf2005119e4e0d1ecc7c41d1fc3912e25_305659_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-secretless-apps-with-christos/","tags":[],"title":"Microsoft 365 Developer Podcast - Secretless Apps with Christos Matskas"},{"categories":["Community post"],"contents":"Yay, this is a new blog post series on how to put the FUN in Azure Function\nRecently, I was learning about Azure Functions and came up with a sweet use case what I could do to combine Azure Functions and Logic Apps: I want to automatically call or text myself (using Twilio) to remind me of recurring tasks, like putting away the laundry, buying more Lego, or similar. There will be of course more sophisticated use cases, for the sake of an easy demonstration we will stick to this and use a simple SMS. Prerequisites  Azure subscription -If you don\u0026rsquo;t have one, you can get one for free here Twilio account Twilio trial number \u0026ndash; trial comes for free \u0026ndash; sign up here Twilio Luise (Transparency: This is a referral link, which will get you and me 10$ to spend on Twilio for cool future projects that aren\u0026rsquo;t covered by the trial. However, if you don\u0026rsquo;t like us to get the 10 bucks, you can also sign up without the referral link with https://www.twilio.com)  Here is our solution overview:     As you can see, we will touch some interesting things like  Azure Logic Apps Azure Function App Azure Key Vault Managed Identity Twilio API   I will sometimes provide several approaches to reach the same goal, you can pick whatever feels right to you. Azure Resource group \u0026amp; Function App Ok, so we will create an Azure Function App that will do the heavy lifting for us. Our Azure Function needs a Resource group to live in, and we will first create the Resource Group and then add some resources to it.\n Go to portal.azure.com Select Create a resource    Search for **Function App **in the search bar Select Function App        Select Create  Fill out the form:  (1) Select your Azure subscription (2) Select Create New to create a new Resource Group where our Function app lives in (3) Type in the name of your new Resource group (4) Select OK (5) Give your app a name (6) Select Node.js as Runtime stack (7) Select your Region (8) Select ** Review + Create**       you can now review everything \u0026ndash; as a last step\n Select Create  It will take a few seconds for Azure to deploy your Resource group and the Function App. You will be notified when everything is ready for you.\nAs an alternative, you may want to create your Azure Function from within Visual Studio Code: Creating the Azure Function in Visual Studio Code Please follow these steps:  Install the Core Tools package with npm install -g azure-functions-core-tools@3 --unsafe-perm true Install the Azure Functions extension for VS Code Select New Project Select a folder for your project Select a language  Select HTTP trigger as a template Type in a better name, like SampleTexts Select Authorization level Function Select how you want to open your project \u0026ndash; I prefer Add to workspace  You will now see your Local Project in the pane.\n   You can now develop, debug and test your function locally and have source control of your code . I like this way more than jumping back and forth in the different blades of the Azure portal \u0026ndash; also, I rely on IntelliSense pretty much ¯\\_(ツ)_/¯\nTo deploy your function app, select the **deploy **icon. If you are not already logged into your Azure account, a browser window will pop up and ask you to sign in with your credentials. \\\n   Once you selected the deploy icon, you need to specify the function in Azure and need to confirm that you know what you are doing    Azure needs again a few seconds to deploy and Visual Studio Code will let you know once this is done    Twilio Before we add a function and some code to it, let\u0026rsquo;s understand first what we will be doing: We want to automagically send a text message to our own phone number. We do this by using our brand new Twilio account and log in with our account SID and an Auth token. We will also need our own phone number and the trial number we got from Twilio. As we do not want to hard-code these credentials, we will store them in the Function app configuration and refer to the configuration in our code. In a second scenario below, I will show how to store the credentials even more secure in an Azure Key Vault. But first, head over to Twilio, create an account and get a trial number. Your Twilio Dashboard should look a little like this:\n    Copy Account SID Copy Auth token Copy your Trial number Have your own phone number present  We will need these values in a moment!\nAzure Function App configuration Head over to your Azure Function App\n (1) Select Configuration (2) Select New application setting (3) Type in **TWILIO_SID **as name (4) Paste in your copied Account SID as the value (5) Select OK     Repeat step 1-5 from above for\n TWILIO_TOKEN SENDER_NUMBER (your Twilio trial number) RECIPIENT_NUMBER (your phone number)  Hit save Your App setting should now look like this:\n   Azure Function App -add function Now its time to add some functionality to our app:\n (1) Select Functions (2) Select Add (3) Select HTTP trigger (4) Type in a name (5) Select Add  \n   Select Code + Test Delete the sample code in the index.js file Paste in the following snippet: Don\u0026rsquo;t forget to hit the save button \u0026ndash; I always do ¯\\_(ツ)_/¯  const accountSid = process.env.TWILIO_SID; const authToken = process.env.TWILIO_TOKEN; const client = require(\u0026#39;twilio\u0026#39;)(accountSid, authToken); module.exports = function (context) { client.messages .create({ from: process.env.SENDER_NUMBER, body: `This is your friendly weekly reminder to put away the laundry 🧺 you folded last weekend. Also, you go girl 😎`, to: process.env.RECIPIENT_NUMBER }) .then(message =\u0026gt; { context.log(\u0026#34;Message sent\u0026#34;); context.res = { body: \u0026#39;YAY it worked - girl check your phone \u0026#39; }; context.done(); }).catch(err =\u0026gt; { context.log.error(\u0026#34;Twilio Error: \u0026#34; + err.message + \u0026#34; -- \u0026#34; + err.code); context.res = { status: 500, body: `Twilio Error Message: ${err.message}\\nTwilio Error code: ${err.code}` }; context.done(); }); } Please note\n how we refer to the app configuration settings with environment variables \u0026ndash; If this is your first Azure Function app, I can highly recommend that you have a look over here: JavaScript developer reference for Azure Functions | Microsoft Docs that we of course want a success (for status 200/default) or error message (for status 500) to log More information on how to work with Twilio \u0026ndash; including code \u0026ndash; How to Send an SMS with Node.js (twilio.com)  Now Select Overview and then Get Function URL \u0026ndash; copy the URL- we will need this in the next step.\nAzure Logic Apps workflow Let\u0026rsquo;s now have some more fun in Azure and use a Logic Apps workflow to trigger our Azure Function. We will first add a Logic App to our resource group and then define a workflow within that app. We will cover two options how to call our Azure Function, option A with the built-in \u0026lsquo;Call an Azure Function\u0026rsquo; action and as option B with an HTTP action. In both cases, navigate to your resource group\u0026gt;\n Select Create a resource Search in the search box for Logic App Select **Logic App **from the results Select Create  Now fill out the form as follows:\n Select your Azure subscription Select your Resource Group Type in a name Select your region Select Review + Create  You can now review your input \u0026ndash; when everything looks OK, then select Create Azure will need a few seconds to deploy your brand new resource and notify you once this is completed. Once this is done,\n Select Workflows Select Add Type in a name for your workflow Select Stateful Select Create  Now select your new workflow and follow these steps:\n  Select Designer\n  From the left hands pane, select Recurrence as a trigger\n  Fill out the form as follows for a weekly reminder on Sundays (as an example) by adding parameters **Start time **and On these days \u0026ndash; For testing purposes I\u0026rsquo;d choose a higher frequency        as stated above, there are (at least) two ways to call our Azure function, this is:\nOption A with the built-in \u0026lsquo;Call an Azure Function\u0026rsquo;  Select the **+ **icon in the designer Select Add an action In the left hands pane, search for Azure Fun Select Call an Azure Function Select your Azure Function App Give your connection a name Select the function within your Functions app Select Create      Select Get as Method Save your app. Select Overview Select Run Trigger Select Run     Note the custom output body that we defined in our Azure Function\nNow let\u0026rsquo;s discover the other option to call our Azure function:\nOption B with the generic HTTP action Create your workflow as above, but instead of searching for Azure Fun, search for HTTP\n Select HTTP Select Method GET Enter the copied Azure functions URL as URI Save your workflow  Once again, you can see the outputs of your workflow run    Next step, makes this even more secure by storing our Twilio token and the Twilio SID in an Azure Key vault so that we can refer to it in our app configuration. Azure Key Vault Head over to your Resource Group\n Select Create a resource Search in the search box for Key vault Select **Key Vault **from the results Select Create  Now fill out the form as follows\n   Review and select Create.\nIt will take a couple of seconds again for Azure to deploy your resource and you will be notified once the Key vault is ready for you. In our shiny new Key Vault, we need to store the key/value pairs for both Twilio SID and Twilio Auth Token:  (1) Select Secrets (2) Select Generate/Import Fill in the form as follows:  Name: **TWILIOTOKEN **(watch out, no underscores allowed) Value: the copied Twilio token value from your Twilio dashboard   Select Create Repeat for TWILIOSID      We will use these two secrets later again in our Azure Function, but to make this work, we first need to enable system-assigned Managed Identity to it and then add an access policy for our function app. If you never heard about that, Yannick Reekmans blogged a series about secretless applications.\nHead over to your Function app again and  (1) Select Identity (2) Switch the Status toggle to On (3) Select Save     A Pop-up displaying the following message appears, select Yes\n    Now we will add the access policy to our Key vault so that our function may read the secrets. Head over to the Key vault and  (1) Select Access policy (2) Select Add Access Policy     Now fill out the form as follows:  Key permissions: Get and List Secret permissions: Get and List Certificate permissions: Get and List Select principal:  Search for the name of your functions app Select it Select Select   Select Add Don\u0026rsquo;t forget to Save       Now that our function app has permission to read the secrets from our Key vault, we will reference to the secret in the functions app configuration and get rid of the hard coded values in there. For this, we only need the name of our vault and the name of the secrets TWILIOTOKEN and TWILIOSID. Let\u0026rsquo;s now add these to the app configuration of our functions app. Head over to the functions app and  Select Configuration Select New Application Settings       Fill out the form as follows:  Name: TWILIOSID Value: @microsoft Select OK   Repeat for TWILIOTOKEN Don\u0026rsquo;t forget to **Save\n**  Now let\u0026rsquo;s get rid of our hard coded values in the app configuration to clean up things:    Select the Delete icon \u0026ndash; please check twice to delete the right settings! Now we need to make sure that our Azure function looks at the right app settings. Select Functions\n Select your function  Select Code + Test Replace the old environment variables by the new ones  Don\u0026rsquo;t forget to Save  **That\u0026rsquo;s it \u0026ndash; you made it work! And this is the result: **\n   You successfully\n   created a resource group  build a function app with one function  called an API in that function  stored secrets in a Key Vault  assigned Managed Identity  referenced to your Key vault in your function app configuration  created a Logic app that kicks off the function weekly  Conclusion \u0026amp; what\u0026rsquo;s next? Both approaches low code (Logic Apps) and Code (Azure Functions) tie in nicely together. Some thoughts though for everyone who wondered:  yes, you could get the same result with about 42 other approaches \u0026ndash; there is no THE right way to do it yes, you can replace the the Logic App with a Power Automate flow \u0026ndash; which comes with some disadvantages:  the HTTP action requires a premium license you can\u0026rsquo;t easily monitor your entire solution in Azure as your flow would now not live in your resource group anymore your flow would run in a user\u0026rsquo;s context \u0026ndash; or would need a service account ( MFA) you can\u0026rsquo;t easily templatize and deploy and redeploy your entire solution anymore as the flow is not part of your resource group.    no, I did not want to use the Twilio connector in Power Automate or in Logic Apps which allows to send SMS without a single line of code \u0026ndash; I was looking for a well documented service outside of Azure to showcase that we can call any API in Azure Functions. If you want to level up:  the amazing Chloe Condon delivered a session on IOT and Azure Functions, watch the video here yes, you can do all of the above in Azure CLI as well, to get you started, please read here: Azure Functions | Microsoft Docs  You have a more fancy use case? Let me know about it! Just imagine that we can integrate other services/data in Azure and/or Microsoft 365 and beyond \u0026ndash; and decide if we want to do this in a low code or code manner. In my next post I will show how to templatize and deploy a solution. Additional resources NeverStopLearning! Here are some resources that may help you get started! Getting started with Azure Functions | Microsoft Docs\nQuickstart - Create integration workflows with Azure Logic Apps in the Azure portal - Azure Logic Ap...\nAzure Quickstart - Set and retrieve a secret from Key Vault using Azure portal | Microsoft Docs\nManaged identities for Azure resources | Microsoft Docs ","image":"https://pnp.github.io/blog/post/the-friendly-sms-reminder-with-logic-apps-azure-functions-key/images/AzureCreateResource_hudd55cef8a855afc3c5d70ef53f587f88_11385_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/the-friendly-sms-reminder-with-logic-apps-azure-functions-key/","tags":["Azure"],"title":"The friendly SMS reminder with Logic Apps, Azure Functions + Key Vault"},{"categories":["Office add-in developer community call"],"contents":"Call summary This month\u0026rsquo;s community call features presentations - Shared mailboxes in Outlook (Shared Mailbox vs Delegate Access/Shared Folder, Shared Mailbox design considerations and add-ins) and PnP: Message recipients changed event (Outlook) (If external recipients are detected in an e-mail\u0026rsquo;s list of recipients, than the message is automatically tagged as External and optionally a disclaimer is appended to message). This month\u0026rsquo;s Community spotlight recognizes James Wayne (Exclaimer) for his continued contributions. Thank you! Q\u0026amp;A in chat throughout call. The call was hosted by David Chesnut (Microsoft) | @davidchesnut. Microsoft Presenters: Juan Balmori | @juaneloBalmori, Ankush Oberoi, and Elizabeth Samuel. Recorded July 14, 2021.\nAgenda  Shared mailboxes in Outlook \u0026ndash; Juan Balmori (Microsoft) | @juaneloBalmori \u0026ndash; 00:50 PnP: Message recipients changed event (Outlook) - Elizabeth Samuel, Sr. Dev Writer (Microsoft) \u0026ndash; 11:13 Shared mailboxes Demo - Ankush Oberoi (Microsoft) \u0026ndash; 22:37 Q\u0026amp;A \u0026ndash; 26:45  Demo Summaries This month\u0026rsquo;s community call featured presentations:\n Shared mailboxes in Outlook - Juan Balmori (Microsoft) and Ankush Oberoi (Microsoft) discussed shared mailboxes and shared folders. Shared mailbox is now in preview and we encourage you to try it out and give us feedback at https://github.com/OfficeDev/office-js/issues. Message recipients changed event for Outlook - Elizabeth Samuel (Microsoft) shared a new PnP sample demonstrating how to use the Recipients Changed event to tag an email when there are external recipients.  Q\u0026amp;A (Question \u0026amp; Answers) \nDue to the technical difficulties we had on this call, we could not access the chat to read your questions and provide follow-up. If you had a question that did not get answered during the call, or in this blog, please reach out to us by using our short survey form. We\u0026rsquo;ll address any questions you have during the next call.\nCan you add some additional error handling around failure cases for an Outlook add-in that uses the On-send event? We have a scenario where if an On-send add-in fails due to service outage users are unable to send emails unless an admin performs a companywide deactivation of the add-in. It would be helpful to let end-users still send their emails if the On-send add-in fails to load or throws an unhandled exception.\n\nThat\u0026rsquo;s by design for the On-send event when we released the 1.8 requirement set. The good news is that the team is working on enabling a new version of this event that will deal with the \u0026ldquo;add-in unavailable\u0026rdquo; cases. We are working to get this into preview soon, so please keep an eye out on future community calls.\n\nOn the iOS and Android platforms, you only support Outlook API 1.5. Do you think we will see support for 1.6+ before 2022?\n\nWe have this in our backlog, but we don\u0026rsquo;t yet have an ETA.\n\nOutlook on mobile still does not support compose mode add-ins, or the On-send event. This was a highly requested feature on the UserVoice system. When will Outlook on mobile support both of these? How did the \u0026lsquo;Exclaimer\u0026rsquo; add-in from June 2021\u0026rsquo;s community call work on Outlook mobile without support for compose mode add-ins?\n\nWe have this in our backlog, but we don\u0026rsquo;t yet have an ETA. The Exclaimer add-in isn\u0026rsquo;t designed for use on Outlook on mobile.\n\nIs there a way to write a CSV file to the local computer\u0026rsquo;s storage where the add-in is running?\n\nOffice Add-ins run in a browser runtime and only have the capabilities of any web app running in a browser. It\u0026rsquo;s not possible to write directly to disk from the browser in any way that works cross-platform. A recommended approach to write to a CSV file is to write to files using Microsoft Graph and OneDrive.\nResources Outlook shared mailbox   Create a shared mailbox - Microsoft 365 admin | Microsoft Docs\n  Remove automapping for a shared mailbox - Outlook | Microsoft Docs\n  Enable shared folders and shared mailbox scenarios in an Outlook add-in | Microsoft Docs\n  PnP: Use Outlook event-based activation to tag external recipients (preview)  PnP sample: Use Outlook event-based activation to tag external recipients (preview)  Office Add-ins community call  Recurring, monthly community call calendar invite Community call topic requests and questions Community call recordings on the YouTube Microsoft 365 community channel  Office Add-ins feedback  Technical questions \u0026ndash; Microsoft Q\u0026amp;A (office-js-dev), (office-addins-dev) Issues \u0026ndash; GitHub Recommendations and suggestions \u0026ndash; Microsoft 365 Developer Platform ideas  \nThe next Office Add-ins community call is on Wednesday, August 11, 2021 at 8:00AM PDT. Get the calendar invite at https://aka.ms/officeaddinscommunitycall.\n ","image":"https://pnp.github.io/blog/post/the-friendly-sms-reminder-with-logic-apps-azure-functions-key/images/AzureCreateResource_hudd55cef8a855afc3c5d70ef53f587f88_11385_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-july-2021/","tags":[],"title":"Office Add-ins community call -- July 2021"},{"categories":["Microsoft 365 developer podcast"],"contents":"Elisabeth Olson joins the show to answer questions about Azure AD Entitlement management and other AAD governance topics.\nListen to the show here: (m365devpodcast.com)\nLinks from the show  What is Azure AD entitlement management? Azure Active Directory Identity Governance documentation  Microsoft News  Microsoft Graph Mailbag \u0026ndash; Azure AD applications and users for testing Microsoft Graph .NET SDK v4 adds enhanced features \u0026ndash; now in preview 425 Show: A visit from the Graph Team and then some more B2C custom policies  Community Links  SPFx People Search web part, v2.5.0  ","image":"https://pnp.github.io/blog/post/the-friendly-sms-reminder-with-logic-apps-azure-functions-key/images/AzureCreateResource_hudd55cef8a855afc3c5d70ef53f587f88_11385_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-azure-ad-entitlement-management/","tags":[],"title":"Microsoft 365 Developer Podcast - Azure AD Entitlement Management and Governance with Elisabeth Olso"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary Summer break and community call schedule updates reviewed. Preview the new Microsoft 365 Extensibility look book gallery. Looking to get started with Microsoft Teams development? Don\u0026rsquo;t miss out on our Teams samples gallery (updated sample browser in June), and the new Microsoft 365 tenant \u0026ndash; script samples gallery - s*cripts for PowerShell and CLIs. * Sign up and attend one of a growing list of events hosted by Sharing is Caring this month. Announced PnP Recognition Program and availability of Power Platform Samples. Heads down on PnP project bug fixes, new idea prototyping, and vacationing this month. Open-source project status: (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.5.0 GA, PnP Provisioning Engine Schema v202103 released Version 1.6.0 \u0026ndash; Summer 2021 PnP .NET Libraries - PnP Core SDK v1.2.0 GA Version 1.3.0 \u0026ndash; Summer 2021 PnP PowerShell v1.6.0 GA Yo teams - generator-teams v3.2.0 GA v3.3.0 Preview soonish Yo teams - yoteams-build-core v1.2.0 GA, v1.2.1 Preview Yo teams \u0026ndash; yoteams-deploy v1.1.0 GA Yo teams - msteams-react-base-component v3.1.0 Microsoft Graph Toolkit (MGT) v2.2.0 GA Bug fixes and Updates\n Two new Teams samples showcasing Adaptive Cards Universal Action Model. Great work! The host of this call was David Warner II (Catapult Systems) @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\nRegister for Sharing is Caring Events:\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; August 31st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; August 23rd PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; August 24th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; July 27th, August 25th Ask Me Anything \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th First Time Presenter \u0026ndash; August 30th More than Code with VSCode \u0026ndash; TBS Maturity Model Practitioners \u0026ndash; August 17th and every 3rd Tuesday of month, 7:00am PT PnP Office Hours \u0026ndash; 1:1 session - Register PnP Buddy System - Request a Buddy    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  [Card Bot - Bot showcasing the Adaptive Card Universal Action Model in Node/TypeScript - Rabia Williams | rabwill]{style=\u0026ldquo;font-size: 10.5pt; font-family: \u0026lsquo;Segoe UI\u0026rsquo;,sans-serif;\u0026rdquo;}\n  [MS Teams Incident Management Bot - Nanddeep Nachan | nanddeepn]{style=\u0026ldquo;font-size: 10.5pt; font-family: \u0026lsquo;Segoe UI\u0026rsquo;,sans-serif;\u0026rdquo;} Thank you for making time in your Summer time schedule to join us for today\u0026rsquo;s PnP Community call. You\u0026rsquo;re awesome!   Demos Demos delivered in this session\n  Publish a connector to the Power Platform \u0026ndash; announcement July 19, anyone can submit a connector to the Microsoft Power Platform, need not be the API owner. Hear about the mission, goals and benefits of the Independent Publisher Connector Program. See a demo of the Airtable connector in Power Automate. Learn about the certification process in GitHub, connectors being developed presently and about how to get plugged into program communications channels.   How to update an Adaptive Card with a Teams Messaging Extension and MessagePreview \u0026ndash; call on an action-based messaging extension created with the Teams Yeoman Generator to post a simple adaptive card to a Microsoft Team\u0026rsquo;s news channel. Post \u0026lsquo;as a bot\u0026rsquo; and with an action to update the same adaptive card again and again, as opposed to a 1-time action. Use workflow to cap number of permissible card updates, if necessary.\n  ACS \u0026ndash; Teams InterOp with Call Routing \u0026ndash; see the seamless interoperation between Azure Communication Services (ACS) and Microsoft Teams that enables a business user with a Teams license to have a video call/chat with a citizen consumer who doesn\u0026rsquo;t have a Teams license. The B2C solution uses a Bot for agent routing, adaptive cards for communications, and ACS for a web-based video call from desktop or mobile. Sample in PnP samples repository.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  PnP .NET library updates - Paolo Pialorsi (PiaSys.com) | @paolopia - 7:46\n  PnP PowerShell - Paolo Pialorsi (PiaSys.com) | @paolopia - 9:01\n  yo Teams updates - Paolo Pialorsi (PiaSys.com) | @paolopia - 9:50\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) | beth-panx - 10:37\n  Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German - 11:55\n  Microsoft Power Platform Samples - April Dunnam (Microsoft) | @aprildunnam - 13:05\n  Demo: Publish a connector to the Power Platform \u0026ndash; Natalie Pienkowska (Microsoft) - 14:54\n  Demo: How to update an Adaptive Card with a Teams Messaging Extension and MessagePreview \u0026ndash; Markus Möller (Avanade) | @Moeller2_0 - 24:29\n  Demo: ACS \u0026ndash; Teams InterOp with Call Routing \u0026ndash; Sathya Raveendran (Microsoft) [-][ 34:56][ ]\n  Resources Additional resources around the covered topics and links from the slides.\n  Repo - Welcome to the Independent Publisher Connector Directory!   Blog - New connectors through the Independent Publisher connector program   Blog - Submit a connector to the Power Platform as an Independent Publisher   Documentation - Independent publisher certification process   Video - Independent Publisher Connector Program   Blog - How to update an Adaptive Card with a Teams Messaging Extension   Sample - Action Preview - Microsoft Teams App   Sample - Azure Communication Services \u0026ndash; Teams InterOp with Call Routing   Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   Samples - Power Platform Samples | aka.ms/powerplatform-samples\n  Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples\n  Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  General resources  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  SharePoint Framework call \u0026ndash; July 29th at 7:00 am PDT **| **https://aka.ms/spdev-spfx-call M365 General Dev call \u0026ndash; August 5th at 7:00 am PDT **| **https://aka.ms/m365-dev-sig Office add-in monthly call \u0026ndash; August 11th at 8:00 am PDT **| **https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; August 12th at 9:00 am PDT **| **https://aka.ms/adaptivecardscommunitycall Power Apps monthly call \u0026ndash; August 18th at 8:00 am PDT **| **https://aka.ms/PowerAppsMonthlyCall Microsoft Identity Platform \u0026ndash; August 19th at 9:00 am PDT **| **https://aka.ms/IDDevCommunityCalendar General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;   Microsoft 365 PnP team, Microsoft - 22nd of July 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-22nd-of-july/images/sig-recordingly-22nd-july_hu49e20b1c38d1b5ef0784ded680aae1c8_442412_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-22nd-of-july/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 22nd of July, 2021"},{"categories":["Office add-in developer community call"],"contents":"The Office Add-ins developer platform team has new updates to share this month on Office Add-ins Patterns and Practices. PnP is a community effort, so if you\u0026rsquo;re interested in contributing, see our good first issue list.\nUse Outlook event-based activation to tag external recipients (preview)    [Diagram showing new email with added external recipient. OnMessageRecipientsChange event is sent to Outlook add-in. Add-in prepends the text external to the subject line] \u0026ldquo;Diagram showing new email with added external recipient. OnMessageRecipientsChange event is sent to Outlook add-in. Add-in prepends the text external to the subject line\u0026rdquo;\nThis sample uses event-based activation to run an Outlook add-in when the user creates a new message or appointment. The add-in can respond to events, even when the task pane is not open. It registers for the OnMessageRecipientsChanged event. If the message has external recipients, the add-in prepends \u0026ldquo;[External]\u0026rdquo; to the message subject. When the user sends an email message that includes external recipients, the add-in appends a disclaimer to the message.\n Check out the code sample: Use Outlook event-based activation to tag external recipients (preview) Check out the docs: Configure your Outlook add-in for event-based activation (preview)  Insert an external Excel file and populate it with JSON data    This sample shows how to insert an existing template from an external Excel file into the currently open Excel file. Then it retrieves data from a JSON web service and populates the template for the customer.\n Check out the code sample: Insert an external Excel file and populate it with JSON data Check out the docs: insertWorksheetsFromBase64 method  SSO samples updated We moved the SSO samples to the PnP repo. We also updated them to the latest packages and libraries. You can find them here:\n Single Sign-on (SSO) sample Outlook add-in Office Add-in that supports Single Sign-on (SSO) using Node.js Office Add-in that supports Single Sign-on (SSO) using ASP.NET  Want to contribute? PnP is a community effort by developers like you. Check out our good first issue list as a great place to help with some samples. Feel free to contribute to existing samples or create new ones.\nAbout Office Add-ins Patterns \u0026amp; Practices (PnP) Office Add-ins PnP is a Microsoft-led, community driven effort that helps developers extend, build, and provision customizations on the Office platform the right way by providing guidance and help through official documentation and open-source initiatives. The source is maintained in GitHub where anyone can participate and provide contributions to the samples, reusable components, and documentation. Office Add-ins PnP is owned and coordinated by Office engineering teams, but the work is done by the community for the community. Find code samples for Office Add-in development in the Office Add-ins PnP repo. Some samples are also documented in the Office Add-ins docs, such as Open in Excel.\nAdditional resources  Get started with Office development by joining the Microsoft 365 developer program. Try out some samples and get coding quickly with Office add-ins by downloading Script Lab. Automate your solutions with Office Scripts.  \nLearn more by joining the monthly Office Add-ins community call.\n","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-in-development-community-pnp-july-2021-update/images/pnp-outlook-tag-external_hu3bfd6160480e67ce5429e12be8abf023_43999_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-in-development-community-pnp-july-2021-update/","tags":[],"title":"Office Add-in Development Community (PnP) -- July 2021 update"},{"categories":["Microsoft Identity platform community call"],"contents":"Call summary This month\u0026rsquo;s in-depth topic: From zero to hero with Microsoft Graph API. This session opens with an overview of Microsoft Graph services and the Microsoft Graph Explorer tool. Then the presenter dives into access and permissions - source and access tokens, and REST API for CRUD operations including querying examples \u0026ndash; filter, select, paging, batching, and throttling in Graph Explorer. There is a substantive review of metadata (queryable resources and their JSON structure, types, properties\u0026hellip;), and finally options for automation \u0026amp; DevOps (app registration, OAuth, policies, deployment). This session was delivered by Microsoft Program Managers Christer Ljung and Rohit Gulati and was recorded on July 15, 2021. Live and in-chat Q\u0026amp;A throughout call. Resources  Documentation \u0026ndash; Microsoft Graph | https://graph.microsoft.com/ Tool \u0026ndash; Graph Explorer | https://developer.microsoft.com/graph/graph-explorer Deck used for call attached to this blog post contains many links to resources.  Actions   Let us know how we\u0026rsquo;re doing and suggest topics for future calls, please complete this survey https://aka.ms/IDDevCommunityCallSurvey\n  Mark your calendar. The next Identity Platform Community Call is on August 19th\n  Stay connected  Twitter https://twitter.com/microsoft365dev​ and @azuread YouTube https://aka.ms/M365DevYouTube​ Blog https://aka.ms/m365pnp/community/blog Recurrent Invite https://aka.ms/IDDevCommunityCalendar   ","image":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-july-2021/images/ViewPorter_hu2fdfb62fe703000b4e5df28d892df97e_2914_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-july-2021/","tags":[],"title":"Microsoft Identity Platform community call -- July 2021"},{"categories":["Power Apps community call"],"contents":"Call summary Topics covered in this month\u0026rsquo;s community call includes an inside look at the top 5 community selected apps (from over 20 entries) from Demo Extravaganza 2021! The winning submissions - Course Maker Solution, Number Puzzle, Pandemic Response Solution, Kitty Run! Game, and Sports Stats Tracker. After the demos were presented, call attendees selected with slim margins, the top app. Also, Recent Power Apps News and Community Contributions and Latest on PnP Power Platform Samples Contributions. This session included Q\u0026amp;A in chat. The call was hosted by Todd Baginski (Canviz). Demo presenters are Rory Neary, Krishna Rachakonda, Venkat Rao, Nghiem Doan, Aakash Jain, Nicholas Nguyen, Todd Baginski and Matt Schuessler. This call was recorded on July 21, 2021. Thank for attending the call or viewing it on demand. Demos   Course Maker Solution \u0026ndash; course management - Canvas + Model driven app that organizes 300 lessons (42 hours of Rory!) on his Learn Power Platform. Search for a topic in Stream videos, go right to topic in video. Simple app (relations, tables, galleries, forms) that sits on Dataverse. Assets organized by course, module, lesson, lesson point. Features Power BI Stories (Power BI report embedded in a Power App).   Number Puzzle \u0026ndash; automated number shuffling board game using only Power Apps components. User selects puzzle type and challenge level. Objective - rearrange numbers in particular order quickly and with fewest moves. Mobile and desktop. On screen help. Play history is stored. Separate and comprehensive power App to explain Number Puzzle\u0026rsquo;s capabilities, functions, and approach to building game. 10 core Power Apps building blocks used.   Pandemic Response Solution \u0026ndash; cost effective strategy for brick and mortar small business to engage customers differently using social networking and customer facing Power Apps Portal and mobile app, standard connectors \u0026ndash; Twitter and Dataverse, custom connectors \u0026ndash; Google Maps and Plant ID and a Delivery Planning app. Technology is leveraged to help identify needs, connect customers to knowledge, provide convenient options to buy and efficient delivery.   Kitty Run! Game \u0026ndash; a procedurally generated gesture controlled endless runner (a.k.a. Kitty) built in Power Apps (a.k.a., the low code rapid application development platform that\u0026rsquo;s NOT for making games, but then again, why not?) Go behind scenes to see how Kitty is configured to run, jump and fly. Appreciate blocking for full parallax randomly generated background scrolling along with collision detection, pause, reset, score, and timing functionality.   Sports Stats Tracker - a Power App that allows team statisticians to capture statics, without having to take their eyes off the action. Record data points verbally. Flow variables call Azure Cognitive Services to handle speech to text conversion, other functions align stats to players and game, formatting for and storing stats in Dataverse, and updating Power App UI. Review and edit past stats. Use for any sport.\n  Recent News \u0026amp; Cool Stuff   3rd annual Power Apps Demo Extravaganza 2021 wrap up - https://aka.ms/PowerAppsDemoExtravaganza\n  Documentation - Microsoft Power Platform: 2021 release wave 2 plan   News - Power Virtual Agents Community Challenge for all Communities   Actions  Join us for our next call: August 18, 2021 at 08:00am PDT | https://aka.ms/powerappscommunitycall  Call agenda  Demo Extravaganza!  Course Maker Solution \u0026ndash; Rory Neary | @azurerory \u0026ndash; 4:52 Number Puzzle \u0026ndash; Krishna Rachakonda | @rachakonda78 \u0026ndash; 15:17 Pandemic Response Solution \u0026ndash; Venkat Rao, Nghiem Doan and Aakash Jain \u0026ndash; 26:37 Kitty Run! Game \u0026ndash; Nicholas Nguyen | @PowerAppsGamer1 \u0026ndash; 43:21 Sports Stats Tracker - Todd Baginski | @ToddBaginski, Matt Schuessler | @mattschues, Hubert Sui | @HubertSui, Sarah Meyer, and Damian Gibbs \u0026ndash; 58:16   Recent Power Apps News and Community Contributions \u0026ndash; Todd Baginski | @ToddBaginski and Charles Sterling (Microsoft) | @chass \u0026ndash; 73:46 Latest PnP Power Apps Samples \u0026ndash; Todd Baginski | @ToddBaginski \u0026ndash; 74:47 Demo Extravaganza 2021 Winner \u0026ndash; 76:30  Referenced in this session   Courses \u0026ndash; Power Platform Learn   Demo - Make your Power Apps user experience awesome with Gestalt design principles - Rory Neary @azurerory   Video - Power Fx Canvas Apps from Zero to Hero\n  Entry - Course Maker Solution   Video \u0026ndash; Power Apps Numbers Puzzle for Kids (23 minute demo)   Repo \u0026ndash; NumberPuzzle   Entry - Number Puzzle   Detect Plant API - https://web.plant.id/plant-identification-api/\n  Direction API - https://developers.google.com/maps/documentation/directions/overview\n  Maps Embed API - https://developers.google.com/maps/documentation/embed/get-started   Documentation - Enable external access with Power Apps portals   Site - Greenthumb Power Apps Portal    Entry - Pandemic Response Solution   Video - View one life of Kitty Run here!   Video - View Kitty Run mobile experience   Video - View one life of Kitty Run here! \n  Video - View Kitty Run mobile experience   Entry - Kitty Run! Game   Documentation - What is the Speech service?   Video - Speech to text in PowerApps with Power Automate by Yash Kamdar at Hyd Power Apps \u0026amp; Power Automate UG   Blog - Convert Speech to Text in Power Apps   Repo - Azure Function - WebM to Wav Audio   Blog - Create a Power Automate (Flow) that creates an HTML File Using the Text Obtained from the Output of ...   Documentation - Use expressions in conditions to check multiple values   chrome web store - Metadata Browser for Dynamics 365/Power Apps   Article - Setting Lookup in a Flow CDS Connector: Classic vs. Current Environment connector\n  Blog - Microsoft Power Automate: Setting Up Lookup Value Using the CDS Connector   Article - [POWER AUTOMATE] HOW TO SET LOOKUP FIELD VALUE IN COMMON DATA SERVICE (CURRENT ENVIRONMENT) FLOW CON...   Package - Microsoft.Recognizers.Text.Number   Entry **- **Sports Stats Tracker\n  Learn more  See the full blog post for this call on the Tech Community Blog - https://aka.ms/m365pnp/community/blog Microsoft\u0026rsquo;s Power Platform website Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - https://aka.ms/PowerAppsCommunitySamples Power Apps Community Videos -https://aka.ms/PowerAppsCommunityVideos PowerPlatformLearn Resources | https://www.powerplatformlearn.academy PnP Power Platform Samples | https://www.aks.ms/powerplatform-samples Power Addicts Hangout - https://wearepoweraddicts.com #LessCodeMorePower Video Series - https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Share more - draw attention to your great work - #PowerAppsCC  Stay connected  Twitter: https://twitter.com/MSPowerPlat Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365DevYouTube​ Blogs - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/powerappscommunitycall  ","image":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-july-2021/images/ViewPorter_hu2fdfb62fe703000b4e5df28d892df97e_2914_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-july-2021/","tags":[],"title":"Power Apps Community Call -- July 2021"},{"categories":["Microsoft 365 developer podcast"],"contents":"Zhenya Savchenko and Tim Ng from the Developer Division at Microsoft join Jeremy and Paul to talk about the Microsoft Teams Toolkit.\nListen to the show here: (m365devpodcast.com)\nLinks from the show  Microsoft Teams Framework (TeamsFx) Teams Toolkit for Visual Studio (Preview) Teams Toolkit for VSCode (Preview) Single sign-on (SSO) support for tabs Developer Portal (Preview) https://aka.ms/teamsdevdocs  Microsoft News  MSAL for React is here! MSAL for Angular v2 is now available  Community Links  Azure AD User Account Federation Report (@darrenjrobinson)  ","image":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-july-2021/images/ViewPorter_hu2fdfb62fe703000b4e5df28d892df97e_2914_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-microsoft-teams-toolkit-with/","tags":[],"title":"Microsoft 365 Developer Podcast - Microsoft Teams Toolkit with Zhenya Savchenko and Tim Ng"},{"categories":[],"contents":"There will be cases where you want to know the associated Owner or a Member or a Visitor group of a specific SharePoint site. This will be very much needed if you want to,\n assign permission to get the owners from the Owner Group. Or many many other use cases  This will be super helpful if you want to get the default groups when you get the Web properties. Especially when you are automating web provisioning along with the Permissions. For doing that you can use the properties like associatedOwnerGroup, associatedMemberGroup, associatedVisitorGroup in REST API for getting the SP Web Properties REST API - https://contoso.sharepoint.com/sites/contososite/_api/web. So the entire REST call with all the associated groups (associatedOwnerGroup, associatedMemberGroup, associatedVisitorGroup), your complete REST API endpoint would look something like below https://contoso.sharepoint.com/sites/contososite/_api/web? $expand=AssociatedOwnerGroup,AssociatedMemberGroup,AssociatedVisitorGroup The above REST call would fetch the associated group information of a particular SharePoint Web. Once you execute the API, you will get the result something like below.  { \u0026#34;AssociatedMemberGroup\u0026#34;: { \u0026#34;Id\u0026#34;: 5, \u0026#34;IsHiddenInUI\u0026#34;: false, \u0026#34;LoginName\u0026#34;: \u0026#34;Contoso Site Members\u0026#34;, \u0026#34;Title\u0026#34;: \u0026#34;Contoso Site Members\u0026#34;, \u0026#34;PrincipalType\u0026#34;: 8, \u0026#34;AllowMembersEditMembership\u0026#34;: true, \u0026#34;AllowRequestToJoinLeave\u0026#34;: false, \u0026#34;AutoAcceptRequestToJoinLeave\u0026#34;: false, \u0026#34;Description\u0026#34;: null, \u0026#34;OnlyAllowMembersViewMembership\u0026#34;: false, \u0026#34;OwnerTitle\u0026#34;: \u0026#34;Contoso Site Owners\u0026#34;, \u0026#34;RequestToJoinLeaveEmailSetting\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;AssociatedOwnerGroup\u0026#34;: { \u0026#34;Id\u0026#34;: 3, \u0026#34;IsHiddenInUI\u0026#34;: false, \u0026#34;LoginName\u0026#34;: \u0026#34;Contoso Site Owners\u0026#34;, \u0026#34;Title\u0026#34;: \u0026#34;Contoso Site Owners\u0026#34;, \u0026#34;PrincipalType\u0026#34;: 8, \u0026#34;AllowMembersEditMembership\u0026#34;: false, \u0026#34;AllowRequestToJoinLeave\u0026#34;: false, \u0026#34;AutoAcceptRequestToJoinLeave\u0026#34;: false, \u0026#34;Description\u0026#34;: null, \u0026#34;OnlyAllowMembersViewMembership\u0026#34;: false, \u0026#34;OwnerTitle\u0026#34;: \u0026#34;Contoso Site Owners\u0026#34;, \u0026#34;RequestToJoinLeaveEmailSetting\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;AssociatedVisitorGroup\u0026#34;: { \u0026#34;Id\u0026#34;: 4, \u0026#34;IsHiddenInUI\u0026#34;: false, \u0026#34;LoginName\u0026#34;: \u0026#34;Contoso Site Visitors\u0026#34;, \u0026#34;Title\u0026#34;: \u0026#34;Contoso Site Visitors\u0026#34;, \u0026#34;PrincipalType\u0026#34;: 8, \u0026#34;AllowMembersEditMembership\u0026#34;: false, \u0026#34;AllowRequestToJoinLeave\u0026#34;: false, \u0026#34;AutoAcceptRequestToJoinLeave\u0026#34;: false, \u0026#34;Description\u0026#34;: null, \u0026#34;OnlyAllowMembersViewMembership\u0026#34;: false, \u0026#34;OwnerTitle\u0026#34;: \u0026#34;Contoso Site Owners\u0026#34;, \u0026#34;RequestToJoinLeaveEmailSetting\u0026#34;: \u0026#34;\u0026#34; } }  This also would be super handy if you want to have a Power Automate which will assign users to default SharePoint Owner or Member of Visitor Group. Get Associated Groups in scripts for automation If you want to have the same functionality for writing automated scripts, CLI for Microsoft 365 has a command called m365 spo web get. If you execute m365 spo web get with the option, --withGroups you will get the complete Web Properties along with the associated groups (associatedOwnerGroup, associatedMemberGroup, associatedVisitorGroup). Supercool isn\u0026rsquo;t it?\n","image":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-july-2021/images/ViewPorter_hu2fdfb62fe703000b4e5df28d892df97e_2914_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/get-associated-groups-owners-members-visitors-of-a-sharepoint/","tags":[],"title":"Get Associated Groups (Owners, Members, Visitors) of a SharePoint Site"},{"categories":["Microsoft 365 developer podcast"],"contents":"Mikael Svenson joins Paul to talk about Search in Microsoft 365.\nListen to the show here: (m365devpodcast.com)\nLinks from the show  PnP Modern Search v4 Overview of the Microsoft Search API in Microsoft Graph  Microsoft News  Microsoft 365 Developer YouTube  Do you need ngrok to develop Microsoft Teams apps? Debug Microsoft Teams apps without ngrok   Announcing new file components, MSAL 2 Provider, and SharePoint Framework library in Microsoft Graph... Rebrand apps to your own organization\u0026rsquo;s branding with App customization in Teams  ","image":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-july-2021/images/ViewPorter_hu2fdfb62fe703000b4e5df28d892df97e_2914_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-microsoft-search-with-mikael/","tags":[],"title":"Microsoft 365 Developer Podcast - Microsoft Search with Mikael Svenson"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from July 15th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary Summer and Fall community call schedule updates reviewed. Register today for July/August events on Sharing-is-caring. PnP Recognition Program announced. Coming soon - Viva Connections public developer preview! Update on SharePoint Framework v1.13.0 beta to be released at end of July with Viva Connections preview extensibility and more. Delivered - project releases include PnPjs Client-side Libraries v2.7.0, CLI for Microsoft 365 v3.12.0 Preview, and PnP Modern Search v4.3.0 \u0026amp; v3.21.0. **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago) PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.12.1 v1.13.0 Beta end of July PnPjs Client-Side Libraries v2.7.0 v2.7.0 scheduled for July 9, v3.0.0 developments underway CLI for Microsoft 365 v3.12.0 Preview, v4.0.0 Preview v4.0.0 to release this fall Reusable SPFx React Controls v2.8.0 (SPFx v1.11), v3.2.1 (SPFx v1.12.1) Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1) PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.3.0 \u0026amp; v3.21.0 There were 2 PnP SPFx extensions and 7 web part samples delivered in the last 2 weeks as well. Way to go contributors! The host of this call is David Warner II (Catapult Systems) @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call. It\u0026rsquo;s great to see spirits are high in the month of July! Nice to see everyone. See you again soon! Actions  Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; August 31st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; August 23rd PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; August 24th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; July 27th, August 25th Ask Me Anything \u0026ndash; Power Platform Development \u0026amp; Samples \u0026ndash; September 28th First Time Presenter \u0026ndash; August 30th More than Code with VSCode \u0026ndash; July 20th Maturity Model Practitioners \u0026ndash; July 20th and every 3rd Tuesday of month, 7:00am PT PnP Office Hours \u0026ndash; 1:1 session - Register PnP Buddy System - Request a Buddy   Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Building a COVID attestation solution for Microsoft Teams and Viva Connections with SPFx \u0026ndash; a personal app that collects information from users and provides a custom dashboard for working with the results. Dashboard has a Viva Connection COVID-19 attestation card built with Adaptive Card Extensions (ACE) and SPFx v1.13. From Card View, users answer attestation questions in Quick View. A cool capability - questions on Quick View card can be updated by Admin without having to modify Quick View template!   Building SharePoint Framework solutions with Microsoft Teams Toolkit v2 \u0026ndash; an alternative to using the SPFx Yeoman Generator for building Teams apps. The Toolkit \u0026ndash; a VS Code extension targeted to web stack developers, supports the rapid creation of apps using SPFx. Step through Teams Toolkit installation, project creation, manifest file validation, etc. As the toolkit is in preview, the co-creators - Teams, SharePoint and Visual Studio engineering groups are very interested in your feedback.   SPFx extension samples: (https://aka.ms/spfx-extensions)\n List Notifications - João Mendes | joaojmendes Google Analytics - João Ferreira | @joao12ferreira  SPFx web part samples: (https://aka.ms/spfx-webparts)\n Calendar - Mohammad Amer | @Mohammad3mer Tiles V2 - Omar El-Anis | @omarelanis Team Membership Updater - Nick Brown | @techienickb Facebook Page Social Plugin - Ari Gunawan | @AriGunawan3023 Hero Web Part - Omar El-Anis | @omarelanis Page Contributors - Ari Gunawan | @AriGunawan3023 Private Library/Folder Manager - Russell Gove | @russgove  Thank you for your great work. Samples are often showcased in Demos. Agenda items  SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen - 7:33 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 10:53 CLI for Microsoft 365 - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 12:52 PnP SPFx Controls - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 13:35 PnP Modern Search - David Warner II (Catapult Systems) | @DavidWarnerII \u0026ndash; 14:33 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 15:07  Demos   Demo: Building a COVID attestation solution for Microsoft Teams and Viva Connections with SPFx \u0026ndash; Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026amp; Derek Cash-Peterson (Sympraxis Consulting) | @Spdcp]\n  Demo:[ Building SharePoint Framework solutions with Microsoft Teams Toolkit v2 \u0026ndash; ]Vesa Juvonen[ (Microsoft) | @vesajuvonen]\n[ \u0026ndash;][ 45:02]\n  Resources Additional resources around the covered topics and links from the slides.\n  Sample - covid-spfx   Tools - Teams Toolkit (v2.2 Preview)   Tools - Microsoft Teams Framework (TeamsFx)   July 14th Blog post - Viva Connections welcomes new partners and opens developer preview\n  Viva Connections https://aka.ms/VivaConnections\n  Archives - Microsoft 365 PnP Weekly - Videos, Podcasts   General resources  Gallery - Microsoft 365 Extensibility look book gallery  Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring Tools - PnP Modern Search v4| https://aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other topics mentioned  SharePoint dev documentation SharePoint dev issue list  Upcoming Calls | Recurrent Invites   Power Apps monthly call \u0026ndash; July 21st at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  M365 General Dev call \u0026ndash; July 22nd at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  SharePoint Framework call \u0026ndash; July 29th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; August 11th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash; August 12th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Microsoft Identity Platform \u0026ndash; August 19th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 15th of July 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-15th-of-july-2021/images/210715-together-mode_huf558cc99fe49c8c40cc6f5b52bb43b0c_7310004_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-15th-of-july-2021/","tags":[],"title":"SharePoint Framework Community Call -- 15th of July, 2021"},{"categories":["Community post"],"contents":"Placeholder text is the text that appears in the search box before user starts typing into it. The placeholder text may help your users about what to expect from search if you\u0026rsquo;ve configured a custom results page or changed behavior of search in other ways. By default SharePoint online site has Search this site as default placeholder text in the search box at the top of your page. This is a very generic placeholder text \u0026amp; sometimes you may want to change this placeholder text to something more specific or relevant to current site or site collection. You can change the placeholder text in the search box for a specific (sub) site or an entire site collection using PnP PowerShell. Follow below steps to change the placeholder text in the search box:\nInstall/Update PnP PowerShell module You can run the following command to install the PnP PowerShell cmdlets: Install-Module -Name \u0026#34;PnP.PowerShell\u0026#34;  If you have previously installed the PnP PowerShell module, you can run the following command to update it: Update-Module -Name \u0026#34;PnP.PowerShell\u0026#34;  Connect to SharePoint site You can connect to a SharePoint site using below PnP PowerShell command (use administrative account): Connect-PnPOnline -Url https://tenant.sharepoint.com/sites/siteName -UseWebLogin Change the placeholder text To change the placeholder text in search box for a given (sub) site run the following command: Set-PnPSearchSettings -Scope Web -SearchBoxPlaceholderText \u0026#34;Search Work @ SPExplorer Site\u0026#34;  Alternately, if you want to change the placeholder text for all the sites in a site collection, you can use below command: Set-PnPSearchSettings -Scope Site -SearchBoxPlaceholderText \u0026#34;Search Work @ SPExplorer Site\u0026#34;    Reset to default placeholder text If you have changed the placeholder text in search box previously \u0026amp; now you want to reset it to the default placeholder text, you can run the following command after connecting to a SharePoint site: Set-PnPSearchSettings -Scope Site -SearchBoxPlaceholderText \u0026#34;\u0026#34;     This article is originally posted at: SharePoint Online: How to change the placeholder text in the search box ","image":"https://pnp.github.io/blog/post/sharepoint-online-how-to-change-the-placeholder-text-in-the/images/_hu16513c7c2ba620e3534844c938c2e756_11444_6a61e7b38f52c6e5374df967dcca4de7.png","permalink":"https://pnp.github.io/blog/post/sharepoint-online-how-to-change-the-placeholder-text-in-the/","tags":["SharePoint"],"title":"SharePoint Online: How to change the placeholder text in the search box"},{"categories":["Microsoft 365 developer podcast"],"contents":"Elio Struyf joins Paul to talk about his experiences while building an application in the Microsoft 365 ecosystem, including the Microsoft for Startups program.\nListen to the show here: (m365devpodcast.com) Links from the show  Squarl VSCode: MS Graph Completion Elio\u0026rsquo;s extension on Visual Studio Marketplace Elio\u0026rsquo;s blog  Microsoft News  Build apps for Microsoft Teams with .NET Improved API support for working with files in the SharePoint recycle bin Raise the bar for your app security \u0026ndash; Get Microsoft 365 Certification by passing these security cont...  Community Links  Output connection strings and keys from Azure Bicep (@johnny_reilly) Updated script to re-index user profiles for search StreamDeck series on Paul\u0026rsquo;s blog  ","image":"https://pnp.github.io/blog/post/sharepoint-online-how-to-change-the-placeholder-text-in-the/images/_hu16513c7c2ba620e3534844c938c2e756_11444_6a61e7b38f52c6e5374df967dcca4de7.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-dev-podcast-building-an-application-on-the/","tags":[],"title":"Microsoft 365 Dev Podcast - Building an Application on the Microsoft 365 Platform with Elio Struyf"},{"categories":["Adaptive Cards community call"],"contents":"After a quick wrap up on Microsoft Build \u0026lsquo;21 from an Adaptive Cards perspective, this call\u0026rsquo;s primary focus is on Microsoft Viva Connections Extensibility with Adaptive Cards.  Starting at the top with a Viva Extensibility Overview - Dashboard demo and Dashboard and card composition. There is a review of Adaptive Card Extensions (ACEs) \u0026ndash; SPFx component/tool to build cards, available templates and a live Q \u0026amp; A covering distribution, analytics, and more. This call was hosted by Matt Hidinger (Microsoft). Microsoft presenters are Luca Bandinelli, John Nguyen and Pat Miller. Recorded on June 10, 2021.  Referenced in this call  Microsoft Build \u0026lsquo;21 Session - Build great discovery \u0026amp; collaboration apps for Microsoft 365 with new Microsoft Graph connector \u0026amp; Ad... Documentation - Universal Actions for Adaptive Cards Tool - Imaginea ReactNative renderer package - adaptivecards-reactnative  Preview - Viva Connections private preview  Referenced in this call  Let us know the features you need https://aka.ms/ACRoadmap Schema Explorer - https://adaptivecards.io/explorer/Action.Execute.html Designer - https://adaptivecards.io/designer/  Get started with Templating - https://aka.ms/ACTemplating Browse the Adaptive Cards Code - https://aka.ms/ACRepo Find tools, sample cards and more - https://www.madewithcards.io  Stay connected  Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365DevYouTube​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/adaptivecardscommunitycall Next call \u0026ndash; July 8th at 09:00am PDT  ","image":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-june-2021/images/Adaptive%20Cards%20Thumb_June%202021_hu6d954b45a75b3ea81486f3a456655e5b_321818_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-june-2021/","tags":["Adaptive Cards"],"title":"Adaptive Cards Community Call - June 2021"},{"categories":["Adaptive Cards community call"],"contents":"Covered off in this month\u0026rsquo;s \u0026ldquo;conversational\u0026rdquo; community call:\n  A lap around MadeWithCards.io community site (guidance, cards, tools, news and updates by and for Adaptive Cards Community that nicely complements the content found on Microsoft\u0026rsquo;s Adaptive Cards site).   Also toured Adaptive Card Studio - VS Code Extension (Cards, templates, sample data, snippets, guidance, etc).   As well, two new program managers - Rahul and J.P., are welcomed to the Adaptive Cards team.   There is Q\u0026amp;A throughout the call. This call was hosted by Matt Hidinger (Microsoft) | @MattHidinger. Guest presenter is Tim Cadenbach (MAXIMAGO) | @TimCadenbach. Recorded on July 8, 2021.\n  Demos  A lap around MadeWithCards.io community site - an assemblage of guidance, cards, tools, news and updates by and for Adaptive Cards Community and Microsoft that nicely complements the content found on Microsoft\u0026rsquo;s Adaptive Cards site. A great place to learn from and share your work with other members of the community.  Adaptive Card Studio \u0026ndash; VS Code Extension - a great place to work on cards in Visual Studio Code. Install extension from marketplace or VS Code. When extension is on your machine, it will list all Adaptive Cards in system including those cards on MadeWithCards.io community site and pulled from AdaptiveCards.io/designer site. Cards, templates, sample data, snippets, guidance, card submissions, full syntax highlighting and more.  Also a sneak peek at MadeWithCards API \u0026ndash; work in progress.     Referenced in this call  Tools \u0026ndash; Adaptive Card Studio  Website - MadeWithCards.io  Tools \u0026ndash; Microsoft Teams Developer Portal (Preview)  Documentation - Universal Action Model  Video - Deep dive into Universal Actions for Microsoft Teams and Outlook   Resources in General  Let us know the features you need https://aka.ms/ACRoadmap Schema Explorer - https://adaptivecards.io/explorer/Action.Execute.html Designer - https://adaptivecards.io/designer/  Get started with Templating - https://aka.ms/ACTemplating Browse the Adaptive Cards Code - https://aka.ms/ACRepo Find tools, sample cards and more - https://www.madewithcards.io  Stay connected  Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365DevYouTube​ Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/adaptivecardscommunitycall Next call \u0026ndash; August 12th at 09:00am PDT  ","image":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-july-2021/images/ThumbnailAC-July2021_hu6d954b45a75b3ea81486f3a456655e5b_285451_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-july-2021/","tags":["Adaptive Cards"],"title":"Adaptive Cards Community Call - July 2021"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call Summary Summer and Fall community call schedule updates reviewed. Preview the new Microsoft 365 Extensibility look book gallery. Looking to get started with Microsoft Teams development? Don\u0026rsquo;t miss out on our Teams samples gallery (updated sample browser in June), and the new Microsoft 365 tenant \u0026ndash; script samples gallery - s*cripts for PowerShell and CLIs. * Sign up and attend one of a growing list of events hosted by Sharing is Caring this month. Announced PnP Recognition Program. Heads down on PnP project bug fixes, new idea prototyping, and vacationing this month. This is a great time to give the project teams feedback as members are working on new integrations and previews now. Open-source project status: (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.5.0 GA Version 1.6.0 \u0026ndash; Summer 2021 PnP .NET Libraries - PnP Core SDK v1.2.0 GA Version 1.3.0 \u0026ndash; Summer 2021 PnP PowerShell v1.6.0 GA Yo teams - generator-teams v3.2.0 GA v3.3.0 Preview soon Yo teams - yoteams-build-core v1.2.0 GA, v1.2.1 Preview Yo teams \u0026ndash; yoteams-deploy v1.1.0 GA Yo teams - msteams-react-base-component v3.1.0 Microsoft Graph Toolkit (MGT) v2.2.0 GA Added Teams SSO Provider in Preview\n One new Teams sample was delivered. Great work! The host of this call was Paolo Pialorsi (PiaSys.com) | @paolopia Q\u0026amp;A takes place in chat throughout the call.\nActions   Register for Sharing is Caring Events:\n  First Time Contributor Session \u0026ndash; August 31st (EMEA, APAC \u0026amp; US friendly times available)\n  Community Docs Session \u0026ndash; August 23rd\n  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; August 24th   PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; July 27th, August 25th\n  Ask Me Anything \u0026ndash; Teams Dev \u0026ndash; July 13th\n  First Time Presenter \u0026ndash; August 30th\n  More than Code with VSCode \u0026ndash; July 20th\n  Maturity Model Practitioners \u0026ndash; July 20th and every 3rd Tuesday of month, 7:00am PT\n  PnP Office Hours \u0026ndash; 1:1 session - Register\n  PnP Buddy System - Request a Buddy\n    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  ReporterPlus \u0026ndash; Teams Device Capabilities Application - Sathya Raveendran (Microsoft) and Veera Venkata Sai Pothan Thota Thank you for making time in your Summer time schedule to join us for today\u0026rsquo;s PnP Community call. You\u0026rsquo;re awesome!   Demos Demos delivered in this session\n  Image Column Type formatting in Microsoft 365 \u0026ndash; upload images to Site Assets and automatically expose them in a list\u0026rsquo;s Image column, no manual linking necessary! Format Image column appearance using sub-properties. Shown is the sub-property - thumbnailRenderer and size selection - drive thumbnail sizes provided by Microsoft Graph. All formatting code is found in referenced image-lightbox sample. Hover card and dynamic picture sizing is shown here as well.   Configure Teams Applications with Azure App Configuration and Azure Key Vault \u0026ndash; use Action Config in Azure configuration extension to configure Microsoft Teams apps hosted in Azure App Service that leverage Azure App Configuration and Azure Key Vault (credential/secrets storage) and authenticates against Microsoft Graph via SSO. The example - configure an action-based document review messaging extension that retrieves and controls access to retrieved documents. Walk through block architecture, code and slides.    Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  PnP .NET library updates - Paolo Pialorsi (PiaSys.com) | @paolopia - 9:57\n  PnP PowerShell - Erwin van Hunen (Valo Intranet) | @erwinvanhunen - 12:13\n  yo Teams updates - Wictor Wilén (Avanade) | @wictor - 14:37\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) | beth-panx - 15:44\n  Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German - 16:49\n  **Demo: ** Image Column Type formatting in Microsoft 365 - Chris Kent (DMI) | @theChrisKent - 19:09\n  **Demo: ** Configure Teams Applications with Azure App Configuration and Azure Key Vault - Markus Moeller (Avanade) | @Moeller2_0 - 33:04   Resources Additional resources around the covered topics and links from the slides.\n  Documentation - List thumbnails for a DriveItem   Sample - Image Lightbox   Sample \u0026ndash; Microsoft Graph Action Configuration extension   Blog post - Configure Teams Applications with Azure App Configuration (nodeJS)   Documentation - Azure App Configuration documentation   Documentation - Azure Key Vault Developer\u0026rsquo;s Guide   Blog post - Microsoft Teams Tabs SSO and Microsoft Graph - the \u0026lsquo;on-behalf-of\u0026rsquo; blog post   Blog post - Query SharePoint items with Microsoft Graph and Search   Sample - Document Review Msg Extension Action - Microsoft Teams App   PnP Weekly \u0026ndash; Episode 132 with Seattle-based Program Manager from OneDrive and SharePoint (ODSP) engineering - Nicole Woon (Microsoft) | @NovelNicole | video | podcast\n  Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples\n  Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  General resources  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Office add-in monthly call \u0026ndash; July 14th at 8:00 am PDT | https://aka.ms/officeaddinscall SharePoint Framework call \u0026ndash; July 15th at 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft Identity Platform \u0026ndash; July 15th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar Power Apps monthly call \u0026ndash; July 21st at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call \u0026ndash; July 22nd at 7:00 am PDT | https://aka.ms/m365-dev-sig Adaptive Cards monthly call \u0026ndash; August 12th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;   Microsoft 365 PnP team, Microsoft - 8th of July 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-8th-of-july/images/8th-july-recording-m365dev_hu6f2f18ceb78d2bb1ad61311be3d035ad_250646_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-8th-of-july/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 8th of July, 2021"},{"categories":["Microsoft 365 developer podcast"],"contents":"Paul talks with Jort Rodenburg about his new book Code Like a Pro in C#.\nListen to the show here: Code Like a Pro in C# with Jort Rodenburg (m365devpodcast.com) Links from the show Code like a Pro in C#\n Use code pod365d19 for a discount!  Book Forum - ask questions here\nJort Rodenburg on LinkedIn\nJort\u0026rsquo;s blog\nMicrosoft News  Explore new change notification API resources for your Microsoft Teams app Attention: breaking changes coming to the Microsoft Graph userPurpose API (beta) Manage frontline workers in Microsoft Teams with Tags and Time Clock APIs Announcing developer preview of the Microsoft Federated Search Platform What Windows 11 Means for Developers  Community Links  Updates on the Microsoft 365 platform community calls Developer Certificate changes in SPFx v1.12.1  ","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-8th-of-july/images/8th-july-recording-m365dev_hu6f2f18ceb78d2bb1ad61311be3d035ad_250646_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-code-like-a-pro-in-c-with-jort/","tags":[],"title":"Microsoft 365 Developer Podcast - Code Like a Pro in C# with Jort Rodenburg"},{"categories":["Community post"],"contents":"SharePoint has a lot of great out-of-the-box capabilities, but sometimes you need to take it a step further. For example, you need a custom user interface to improve productivity. The SharePoint Framework (aka SPFx) is a great way to customize SharePoint and Teams. There have been various ways to customize SharePoint in the past, but SPFx is the recommended option. This is especially true for SharePoint Online, but also for more recent versions of SharePoint on-prem. What I like about SPFx \u0026ndash; beyond the fact that it lets you customize SharePoint - is that there are several web controls that are ready to use and require very little effort to incorporate into your customizations. Not only do these components function well, they also fit the look and feel of SharePoint today. SPFx is supported with SharePoint 2019 and SharePoint 2016 (with feature pack 2), but there are limitations to both. This post focuses on the limitations with SharePoint 2016 which are more restrictive than SharePoint 2019. In addition, some of the details I provide will be specific to my development environment which runs on Windows 10.\nConfused Yet? I think part of the confusion on developing with SPFx on SP2016 is because SP2016 hasn\u0026rsquo;t changed in years, but SPFx is constantly changing. The documentation on what to use with SP2016 is pretty old and hasn\u0026rsquo;t kept up. For example, to get started with SPFx on SharePoint 2016, this seems like the logical place: SharePoint Framework development with SharePoint Server 2016 Feature Pack 2. The web page was updated within the last month of when I wrote this post. However, the video shown is from 2017. In the video, Vesa recommends version 1.0.2 as the SPFx version and the post mentions version 1.1.0. What worked for me (more details below) was version 1.9.1. What made this more confusing to me is that there were other blog posts indicating you can use any version of key dependencies:\n Build SharePoint Framework solutions for on-premises SharePoint with ANY version of React, TypeScrip... Yes, you can use Modern React on SharePoint 2016 SharePoint 2016, 2019 \u0026amp; SharePoint Online: Which Version of the SharePoint Framework Should You Inst...  That last post mentions version 1.9.1 of @microsoft/generator-sharepoint, which is what I used. But it was the latest at the time of that post. I had trouble with later versions, which it recommended (but did caveat that they may not work). Your mileage may vary.\nMultiple Paths Forward and Limitations I definitely recommend checking out the links above to see if they work for you. If they don\u0026rsquo;t, then hopefully the steps I outline below will work. It\u0026rsquo;s hard to sound too confident because others sounded confident in the posts above. They clearly worked for them, but didn\u0026rsquo;t work for me. Maybe it was user error, but who knows what else will change going forward that may somehow cause issues. Whenever deciding on what versions to use, a good resource to use is: SPFx Compatibility Matrix. Depending on the path you take may change your limitations, but here are some I know of:\n You can only create web parts, not extensions. You cannot bundle your assets with the package (sppkg) file. You must host your assets (manifest JSON and JavaScript files) in a SharePoint document library, Azure, or somewhere else. I discuss how to do this further below. Some Fluent UI Controls won\u0026rsquo;t work. Based on the path I took (described below), There was no ComboBox, no PeoplePicker, and the Dropdown did not allow multi-select. There are probably several other controls that aren\u0026rsquo;t available, but I didn\u0026rsquo;t need them, so I didn\u0026rsquo;t check. Of those that are available, the documentation has properties/capabilities that are newer than what I was able to use. Sometimes I went to the old Office UI Fabric React documentation, but even then that was sometimes too new for what I was using. I was unable to use React Hooks and had to use the React component class. React hooks were introduced in React 16.8. I\u0026rsquo;m using React 15.4.2. This may be why some newer Fluent UI controls cannot be used.  Prerequisites Regardless of the approach you take, everyone appears to agree on the prerequisites:\n SharePoint Server 2016 Feature Pack 2 Installed  To check to see if Feature Pack 2 is installed, I went to Feature Pack 2 Required to Install ShortPoint SPFx on SharePoint 2016 On-premise. There may be better articles out there. Two key parts of this that helped me were:\n If you don\u0026rsquo;t see \u0026quot;Manage Patch Status\u0026quot;, look for \u0026quot;Check Production and Patch Installation Status\u0026quot;. For \u0026quot;Microsoft SharePoint Foundation 2016 Core\u0026quot;, you are looking to see if there is an item with a version number \u0026gt;= 16.0.4744.1000 with a status of Installed. If not, you\u0026rsquo;ll need to install Feature Pack 2 as the link above describes.  Node v8.17.0 (Recommended: Install NVM for Windows) If you\u0026rsquo;re developing SPFx for SharePoint Online or SharePoint 2019 in the same development environment, you\u0026rsquo;ll need to maintain multiple versions of node. A great way to do that is with nvm-windows. After installing nvm-windows, you need to install and use node version 8.17.0: nvm install 8.17.0 nvm use 8.17.0  Then you can check the active version of node with: nvm list  Note: if you don\u0026rsquo;t want to install nvm and just want to install node, you can get version 8.17.0 from here: Index of /dist/latest-v8.x/ (nodejs.org). If you have installed node directly, you can check the version using: node -v  Install NPM Packages Before installing other packages, I wanted to check on the version of npm. I did this with: npm -v npm list g --depth 0  Both v3.10.10 and v6.13.4 of npm worked for me. Then I installed a specific version of gulp, yeoman generator, and generator-sharepoint: npm install -g gulp@3.9.1 npm install -g yo@1.8.5 npm install -g @microsoft/generator-sharepoint@1.9.1  Installing gulp may not be required, but it helps to have gulp at the ready from the command line. Otherwise you may need to play with the path or add scripts to package.json to call gulp for you while you do something like: npm run \u0026lt;my-script\u0026gt; Regarding v1.9.1 of generator-sharepoint, it could be that a later version works for you. This worked for me and v1.12.0 did not work for me. Maybe something in between is a better choice.\nGenerate Your Project This is old hat for many, but for those not used to it, I\u0026rsquo;ll spell out some details\u0026hellip; Create a directory for your web part project and cd into that directory. This could be the name of your solution or even just \u0026ldquo;WebParts\u0026rdquo;. Think about how you want to organize your code. Do you want a separate solution per web part or do you want to be able to have several web parts within one project in the future. The former makes it so a change to one web part does not require all to be re-deployed. The latter allows the web parts to have shared components. You generate the project with: yo @microsoft/sharepoint  Then you answer several questions. Here are some example answers:\n         What is your solution name? Hello World SPFx 2016   Which baseline packages do you want to target for your component(s)? SharePoint 2016 onwards, including 2019 and SharePoint Online   Where do you want to place the files? Use current folder   Which type of client-side component to create? WebPart   What is your Web part (on-prem) name? HelloWorld   What is your Web part (on-prem) description? A sample web part   Which framework would you like to use? React    Test Your Project in the SharePoint Workbench Even though you haven\u0026rsquo;t done much yet, your project should run. To run the workbench you would normally do a \u0026ldquo;gulp serve\u0026rdquo;, but since we\u0026rsquo;re stuck in version 8 of node, we need to Run gulp serve with \u0026lsquo;NODE_NO_HTTP2=1\u0026rsquo; when using SPFx on node v8: set NODE_NO_HTTP2=1 \u0026amp;\u0026amp; gulp serve  Note that the command above looks a little different when run on a Mac. From the resulting web page that pops up, you should be able to see your web part and edit the web part property.\nMinor Cleanup The yeoman generator does a great job, but it does make some assumptions that aren\u0026rsquo;t ideal. One is the solution name could be friendlier. This shows when you are adding the solution to App Catalog (discussed below). To fix this, go into config\\package-solution.json and change the solution name to be a friendlier name. You can use spaces instead of dashes and feel free to capitalize the first letter of each word. You can\u0026rsquo;t use a period in the solution name, however. { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/spfx-build/package-solution.schema.json\u0026#34;, \u0026#34;solution\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;Hello World SPFx 2016\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;5d88310e-6651-4dc3-a80a-be165e851e9b\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0.0\u0026#34; }, \u0026#34;paths\u0026#34;: { \u0026#34;zippedPackage\u0026#34;: \u0026#34;solution/hello-world-spfx-2016.sppkg\u0026#34; } }  Consider updating the group that is shown when adding a web part to a page. By default this is \u0026ldquo;Other\u0026rdquo;. The group name is defined in the web part json file found at src\\webparts\\\u0026lt;web-part-name\u0026gt;\\\u0026lt;web-part-name\u0026gt;WebPart.manifest.json. Change \u0026ldquo;Other\u0026rdquo; to any name you like. You don\u0026rsquo;t need to change the groupId. \u0026#34;preconfiguredEntries\u0026#34;: [ { \u0026#34;groupId\u0026#34;: \u0026#34;5c03119e-3074-46fd-976b-c60198311f70\u0026#34;, // Other \u0026#34;group\u0026#34;: { \u0026#34;default\u0026#34;: \u0026#34;Other\u0026#34; }, Dev Test / Deploy If your dev environment has access to the SharePoint 2016 server, you can use the following steps:\n  gulp bundle gulp package-solution   Create an App Catalog: Manage the App Catalog in SharePoint Server. Note that SharePoint Online allows apps to be uploaded to just a site collection, but in SP2016 you must have an App Catalog for the entire web application.\n  Upload your package to the app catalog. Go into your app catalog, choose Upload, and pick the sppkg file from your sharepoint\\solution folder. Notice how the trust dialog mentions https://localhost:4321 because this is a dev deploy (further below we do a non-dev deploy with the --ship flag).\n  select the Deploy button. Notice that there is no tenant wide deployment of apps like there is in SharePoint Online.\n  Add the App to your site. Go to the site where you want to deploy your app. Go to Site Contents \u0026gt; add an app. Pick the name of your solution and wat for it to be enabled (no longer grayed out).\n  set NODE_NO_HTTP2=1 \u0026amp;\u0026amp; gulp serve --nobrowser   Add your web part to a page. Go to Site Contents \u0026gt; Site Pages. Add a page then go to Insert \u0026gt; Web Part and pick the Other category (or whatever you renamed it to above) to find your web part.\n  Verify that your web part works.\n  Test a Minor Change With all of the potential problems around versioning of dependencies, it\u0026rsquo;s a good idea to take small steps. Let\u0026rsquo;s start with a small change\u0026hellip; In your editor (you are using VSCode, right?), edit src\\webparts\\\u0026lt;web-part-name\u0026gt;\\components\\\u0026lt;web-part-name\u0026gt;.tsx and make a simple change to the title text and save your changes. If your terminal is still running \u0026ldquo;gulp serve\u0026rdquo; as mentioned above, then you just need to wait a few seconds and refresh your web page from the previous section. There is no need to re-deploy the sppkg file for simple code changes.\nIncorporate Office Fabric The yeoman generator does not have Office Fabric as part of it. Here we add that and do a small test that uses it:\n  Kill the \u0026ldquo;gulp serve\u0026rdquo; in your terminal window (CTRL-C)\n  npm install office-ui-fabric-rect@2.34.2​  This is a critical step. The new Fluent UI will not work \u0026ndash; we must use this version. This may be the first time doing an npm install can actually cause other issues. See the section further below entitled: [Check package-lock.json On Every npm install]{.underline}. It may not happen here \u0026ndash; maybe it is just needed for anything else you happen to install.    Edit src\\webparts\\\u0026lt;web-part-name\u0026gt;\\components\\\u0026lt;web-part-name\u0026gt;.tsx as follows:\n Add near the top of the file:    import { TextField } from \u0026#39;office-ui-fabric-react\u0026#39;;  Add just inside the innermost div (maybe before the anchor tag):  \u0026lt;TextField label=\u0026#39;Test Office UI Fabric React\u0026#39; /\u0026gt;  Test the updates:  set NODE_NO_HTTP2=1 \u0026amp;\u0026amp; gulp serve --nobrowser  Refresh your page with the web part on it If the above fails, try a redeploy. Whenever we do an npm install, I feel that you may need to redeploy your package. Here are the steps: Update config\\package-solution.json and increment the version (to 1.0.0.1)  gulp bundle gulp package-solution  Upload your sppkg file into your App Catalog and deploy it  set NODE_NO_HTTP2=1 \u0026amp;\u0026amp; gulp serve --nobrowser  Refresh your page with the web part on it  Test a Production (Ship) Build \u0026ndash; First Time So far the only tests we have done above are running from localhost and not running from SharePoint. To have them run from SharePoint, you need to create package that runs from SharePoint. Since SharePoint 2016 can\u0026rsquo;t read the assets (manifest and JavaScript files) from with the package, we need to deploy the assets to another location. This can be any website, but I\u0026rsquo;ll cover two options: a SharePoint Library or an Azure storage account. Since you are already using SharePoint, that may be the best option for you.\n  SharePoint Library\n  The files include not only JavaScript, but also a JSON manifest. By default, SharePoint 2016 does not allow JSON files in a document library. This article describes how to fix this: HOW TO ALLOW JSON FILE FORMAT ON SHAREPOINT 2016 ON PREMISE\n  I consider JSON files pretty harmless, but here is a discussion on that you may find useful if you are unsure: Why is upload of JSON files prohibited?\n  The only other part of this is to create a folder in a library somewhere. You might want to create a folder in the Site Assets library in the site where the web part will reside or in a common site if the web part will be across site collections. The end users need access to the library, of course.\n  Open config\\write-manifest.json and update the cdnBasePath to point to the folder you created. For example: { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/spfx-build/write-manifests.schema.json\u0026#34;, \u0026#34;cdnBasePath\u0026#34;: \u0026#34;https://sp2016.mycorp.com/sites/somesite/SiteAssets/helloworld-webpart-assets\u0026#34; }​     Azure Storage Account\n  First you\u0026rsquo;ll need to create an Azure storage account.\n  Create a blob container within the storage account.\n  Set the Public Access Level to Public read access for blobs only.\n  It\u0026rsquo;s not required, but if you like you can create a CDN for the Azure storage account.\n  Open config\\write-manifest.json and update the cdnBasePath to point to the container (or Azure CDN) you created. For example: { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/spfx-build/write-manifests.schema.json\u0026#34;, \u0026#34;cdnBasePath\u0026#34;: \u0026#34;https://mytestcdn.azureedge.net/helloworld-webpart-assets\u0026#34; }​     Your asset deployment location is ready. Let\u0026rsquo;s build and package the solution. We use --ship to indicate that we are running from SharePoint and not localhost:\n  Update config\\package-solution.json to increment your version number\n  gulp bundle --ship   Copy temp\\deploy folder contents to the appropriate location configured above\n  gulp package-solution --ship   Upload your sppkg file into your App Catalog\n  Refresh your page with the web part on it. There is no need to run gulp serve as this is running completely with SharePoint now. If you get errors, try using dev tools in your browser to see if there are network errors accessing the files from the CDN.\n  Note: to go back to a dev build, you don\u0026rsquo;t have to change write-manifest.json again (see the next two sections for what to do)\n  Subsequent Production (Ship) Build Tests The section above described what to do the first time you deploy everything to SharePoint. Here are the steps for any other times you deploy to SharePoint:\n  Update config\\package-solution.json to increment your version number\n  Delete all files in your temp\\deploy folder\n  gulp bundle --ship   Delete all files in your Azure blob container or Site Assets folder\n  Copy temp\\deploy folder contents to the appropriate location (SharePoint library or Azure blob container)\n  gulp package-solution --ship   Upload your sppkg file into your App Catalog\n  Refresh your page with the web part on it (no need to run gulp serve as this is running totally in SharePoint now). If you get errors, try using dev tools in your browser to see if there are network errors accessing files from the CDN\n  Subsequent Dev Tests For most dev changes, the process is simple. If you are already running gulp serve and didn\u0026rsquo;t do a production/ship build recently, the process is as simple as:\n  Make sure you are still running: set NODE_NO_HTTP2=1 \u0026amp;\u0026amp; gulp serve --nobrowser​   Refresh your web page with the web part on it after saving your changes and waiting a few seconds\n  If you were just doing a production (ship) build, did an npm install, or otherwise changed package.json, you probably need to do these steps instead:\n  increment your version number in package-solution.json\n  gulp bundle gulp package-solution   Upload your sppkg file to the App Catalog\n  set NODE_NO_HTTP2=1 \u0026amp;\u0026amp; gulp serve --nobrowser   Refresh your page with the web part on it\n  Check package-lock.json On Every npm install Unfortunately, there is an issue with the SPFx TypeScript version which requires you to do something you aren\u0026rsquo;t supposed to do: manually update package-lock.json. The process is described here: Workaround for SPFx TypeScript Version. I got in the habit of searching package-lock.json for \u0026ldquo;typescript\u0026rdquo; (with the quotes) [every]{.underline} time I did an npm install to change 2.2.2 back to 2.4.2. You\u0026rsquo;ll be glad you did. In addition, you don\u0026rsquo;t want to wait too long to test a production/ship version of your build after doing an npm install. Make sure you are using version control for your code and review your package-lock.json for changes every time you checkin changes.\nDon\u0026rsquo;t Be Tempted to Use a Later Version of Microsoft or PnP If you look at your package.json file, the dependencies section, might look like this: \u0026#34;dependencies\u0026#34;: { \u0026#34;@microsoft/sp-core-library\u0026#34;: \u0026#34;~1.1.0\u0026#34;, \u0026#34;@microsoft/sp-lodash-subset\u0026#34;: \u0026#34;~1.1.0\u0026#34;, \u0026#34;@microsoft/sp-office-ui-fabric-core\u0026#34;: \u0026#34;~1.4.0-0\u0026#34;, \u0026#34;@microsoft/sp-webpart-base\u0026#34;: \u0026#34;~1.1.0\u0026#34;, \u0026#34;@pnp/common\u0026#34;: \u0026#34;1.1.0\u0026#34;, \u0026#34;@pnp/logging\u0026#34;: \u0026#34;1.1.0\u0026#34;, \u0026#34;@pnp/odata\u0026#34;: \u0026#34;1.1.0\u0026#34;, \u0026#34;@pnp/sp\u0026#34;: \u0026#34;1.1.0\u0026#34;, \u0026#34;@types/es6-promise\u0026#34;: \u0026#34;0.0.33\u0026#34;, \u0026#34;@types/react\u0026#34;: \u0026#34;0.14.46\u0026#34;, \u0026#34;@types/react-addons-shallow-compare\u0026#34;: \u0026#34;0.14.17\u0026#34;, \u0026#34;@types/react-addons-test-utils\u0026#34;: \u0026#34;0.14.15\u0026#34;, \u0026#34;@types/react-addons-update\u0026#34;: \u0026#34;0.14.14\u0026#34;, \u0026#34;@types/react-dom\u0026#34;: \u0026#34;0.14.18\u0026#34;, \u0026#34;@types/webpack-env\u0026#34;: \u0026#34;1.13.1\u0026#34;, \u0026#34;office-ui-fabric-react\u0026#34;: \u0026#34;2.34.2\u0026#34;, \u0026#34;react\u0026#34;: \u0026#34;15.4.2\u0026#34;, \u0026#34;react-dom\u0026#34;: \u0026#34;15.4.2\u0026#34; },  You might be tempted, as I was, to maybe bump those @microsoft/sp-* and @pnp/* packages to 1.4.1 or some other version by doing an npm install of them to a specific version. I highly recommend against this. If you do, make sure you are prepared to revert both package.json and package-lock.json. Also test with a production/ship build as you will likely find, as I did, that it works with a dev build, but not a production build. More details can be found here: Duplicate of issue #985 (deployed web part says \u0026ldquo;Manifest not found\u0026rdquo;, after updating from 1.1.0 to 1.\nNote that you might want to remove the \u0026ldquo;~\u0026rdquo; and \u0026quot;\u0026quot; from some of those versions to make sure the version matches exactly (and doesn\u0026rsquo;t use an approximate equivalent version or compatible with version). If you ever have to revert package.json and package-lock.json, the easiest way to get back where you were after you revert is to delete your node_modules folder, do an npm install, and then fix your package-lock.json as discussed in the previous section.\nNo SharePoint Server Access from Dev? If this is the case for you, I\u0026rsquo;d like to say this is not really a problem, but it will be pretty painful. If possible, I recommend developing where your machine has access to the SharePoint server. Maybe even a Dev/Test SharePoint server, if there is one. Otherwise, you may want to use an Azure storage account / CDN to store your assets instead of a SharePoint library, as it may be quicker to transfer them for every minor change you make. You won\u0026rsquo;t be able to run gulp serve and run things from localhost. I recommend you check out this blog post for generating a source map for the release build: Easily debug production version of your SharePoint Framework solution. If you put the source map with the rest of the source (in Azure blob or SharePoint Site Assets) you won\u0026rsquo;t need to manually add the source map to your browser.\nTSLint Changes As you start adding more of your own code, you may start seeing TSLint warnings. It can be quite annoying as you may miss real warnings, so you want a clean build. I had trouble configuring TSLint via tsling.json, so I used prettier within VS code and configured it by creating a prettier.config.js file at the root of my project. Its contents are the following. The trailingComma and singleQuote values are important to minimize prettier and TSLint from fighting each other. module.exports = { trailingComma: \u0026#39;es5\u0026#39;, tabWidth: 4, singleQuote: true, printWidth: 120, };  Even with the above, I was still getting a lot of TSLint errors, so I reviewed TSLint rule flags and had to enact several rules within my code including:\n  Immediately before I exported something where the filename had more than one period in it: /* tslint:disable-next-line:export-name */​   Immediately before I used the type \u0026quot;any\u0026quot; for a variable. This seemed necessary when I couldn\u0026rsquo;t find a type that PnP was using (maybe I didn\u0026rsquo;t look hard enough): /* tslint:disable-next-line:no-any */​   Immediately before any line that just didn\u0026rsquo;t fit TSLint\u0026rsquo;s max line length (I think it is 120, but my configuration is ignored, so I am not sure what it is): /* tslint:disable-next-line:max-line-length */​   This problem occurred when prettier insisted on ending an arrow function with a semicolon, but TSLint complained, so I put it right before the closing of the arrow function: /* tslint:disable-next-line:semicolon */​   Summary Well, if you made it this far, I applaud you \u0026ndash; and am a little surprised. I don\u0026rsquo;t tend to write blog posts that are this long, but I really needed to get this off of my chest. Many companies are still on older versions of SharePoint and the effort to upgrade is sometimes daunting (but ThreeWill can help!) If you are working with SharePoint 2016 and want to build custom web parts with SPFx I hope the steps above (and the pain I went through) saves you some time.\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-8th-of-july/images/8th-july-recording-m365dev_hu6f2f18ceb78d2bb1ad61311be3d035ad_250646_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/struggling-with-using-spfx-on-sharepoint-2016-let-me-help/","tags":[],"title":"Struggling with using SPFx on SharePoint 2016? Let me help!"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from July 1st is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary Summer break and community call schedule updates reviewed. Register now for June trainings on Sharing-is-caring. PnP Recognition Program announced. Join the Viva Connections private preview!\nUpdate on SharePoint Framework v1.13.0 features \u0026ndash; extensibility options with Viva Connections, Teams improvements, tooling updates, Store modernization and more. Released PnPjs for Client-side Libraries v2.6.0, CLI for Microsoft 365 v3.11.0 Beta, and PnP Modern Search v4.2.3 \u0026amp; v3.20.0. There were four PnP SPFx web part samples delivered in last 2 weeks. Great work! **Latest project updates include: **\n(Bold indicates update from previous report 2 weeks ago) PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.12.1 v1.13.0 Preview in summer PnPjs Client-Side Libraries v2.6.0 v2.7.0 scheduled for July 9, v3.0.0 developments underway CLI for Microsoft 365 v3.11.0 Beta, **v4.0.0 Preview ** v3.10.0 preview released Reusable SPFx React Controls v2.8.0 (SPFx v1.11), v3.2.1 (SPFx v1.12.1) Reusable SPFx React Property Controls v2.7.0 (SPFx v1.11), v3.2.0 (SPFx v1.12.1) PnP SPFx Generator v1.16.0 v1.17.0 on the way PnP Modern Search v4.2.3 \u0026amp; v3.20.0 July versions in progress\nThe host of this call is Patrick Rodgers (Microsoft) | @mediocrebowler. Q\u0026amp;A takes place in chat throughout the call. It appears fun is being had by all! Great to see everyone. Thanks for making this a great community. Actions  Join on the Viva Connections private preview! | aka.ms/viva/connections/preview/register Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; August 31st (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; August 23rd PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; August 24th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; July 27th, August 25th Ask Me Anything \u0026ndash; Teams Dev \u0026ndash; July 13th First Time Presenter \u0026ndash; August 30th More than Code with VSCode \u0026ndash; July 20th Maturity Model Practitioners \u0026ndash; July 20th and every 3rd Tuesday of month, 7:00am PT PnP Office Hours \u0026ndash; 1:1 session - Register PnP Buddy System - Request a Buddy   Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Bringing your custom apps to Viva Connect mobile experience - three graduating levels or views of information and customizability in Viva Connections. Use SPFx to build an Adaptive Card Extension (ACE) that supports 2 views \u0026ndash; Card View (level 1 basic information) and Quick View (level 2 more information) and a deep link to a Teams tab (level 3 full information). Future, seamlessly drill down from high level to detail - mobile and desktop experiences.   Copy PnP Search results web part settings \u0026ndash; scenario: Many of your pages are based a template page you now need to update. After updating your template page, use this list view command set extension accessed from Pages Library, to copy the settings of the PnP search results web part present on a page to the settings of the PnP search results web part present on other selected pages.\n   Follow Documents in Modern Workspace with SPFx \u0026ndash; many capabilities in 2 related samples \u0026ndash; 1 extension, 1 web part. Both accomplish same objective: Easily identify/follow/unfollow a user\u0026rsquo;s key documents within Tenant and easily open them in Modern Pages (use extension) or Modern Pages and Microsoft Teams (use web part + extension). This solution uses the Out of Box Social functionality \u0026quot;Follow document\u0026quot; and Microsoft Graph queries. Exhaustive feature list by sample.\n  SPFx extension samples: (https://aka.ms/spfx-extensions)\nSPFx web part samples: (https://aka.ms/spfx-webparts)\n Birthdays - Sajal Maity  Follow Documents - André Lage | @aaclage Calendar - Abderahman Moujahid Quick Poll - Dipen Shah | @Dips_365  Thank you for your great work. Samples are often showcased in Demos. Agenda items  PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 9:42 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 11:13 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 12:09 PnP SPFx Community Yeoman Generator - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 13:32 PnP Modern Search - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 14:35 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 15:39  Demos   Demo: Bringing your custom apps to Viva Connect mobile experience \u0026ndash; Vardhaman Deshpande (Valo Intranet) | @vrdmn \u0026ndash; 19:14\n  Demo: Copy PnP Search results web part settings \u0026ndash; Anoop Tatti (Content and Code) | @anooptells \u0026ndash; 31:24\n  Demo: Follow Documents in Modern Workspace with SPFx \u0026ndash; André Lage (Datalynx AG) | @aaclage \u0026ndash; 44:26\n  Resources Additional resources around the covered topics and links from the slides.\n  Weparts \u0026ndash; PnP Modern Search v4   Extension Repo - Copy PnP search results webpart settings   Control - Animated Dialog   Documentation - Follow documents, sites, and tags by using the REST service in SharePoint   Tool \u0026ndash; Graph Explorer   Sample extension - Follow Document   Sample web part \u0026ndash; Follow Document   Authoring a Viva Connections Dashboard - Luca Bandinelli (Microsoft) | @BandinelliLuca \u0026amp; John Nguyen (Microsoft) https://youtu.be/-p09L3RRNQ8\n  PnP Weekly \u0026ndash; Episode 132 Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm were joined by Seattle-based Program Manager from OneDrive and SharePoint (ODSP) engineering - Nicole Woon (Microsoft) | @NovelNicole | video | podcast\n  Tools - https://aka.ms/teams-toolkit\n  Register - Register for Viva Connections developer platform updates and private Beta   Viva Connections https://aka.ms/VivaConnections\n  General resources  Gallery - Microsoft 365 Extensibility look book gallery  Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring Tools - PnP Modern Search v4| https://aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other topics mentioned  SharePoint dev documentation SharePoint dev issue list  Upcoming Calls | Recurrent Invites   M365 General Dev call \u0026ndash; July 8that 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call \u0026ndash; July 8th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Office add-in monthly call \u0026ndash; July 14th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  SharePoint Framework call \u0026ndash; July 15that 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Microsoft Identity Platform \u0026ndash; July 15that 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar\n  Power Apps monthly call \u0026ndash; July 21st at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 1st of July 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-1st-of-july-2021/images/PnP-Calls-TogetherMode-July1-LowerRes_hu3943ef5809035df089262f2bbdad1854_7668746_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-1st-of-july-2021/","tags":[],"title":"SharePoint Framework Community Call -- 1st of July, 2021"},{"categories":["Community post"],"contents":"Why? Ever since I saw the post Source code files for Canvas apps from Microsoft, I thought this might come in handy for some of my Canvas Apps. As a non-coding Citizen Developer, I just thought that day would be more in the future. A day when this feature would not be experimental anymore but general available. One of my customers created a Power App with too many screens, too many data sources and too many controls referencing each other. The result was a Power Apps Studio with a *Page Unresponsive *error when when opening specific screens:\n   This left us with no way to clean up the latest version of the Canvas App through the Studio anymore\nWhat? This post adds information on how to edit Power Apps source code for Canvas Apps. It will also show you that GitHub it is not per se needed.\nHow? I still recommend to read the Microsoft post first. There is a lot of potential in using GitHub as your code repository. There are also some YouTube video\u0026rsquo;s on how to perform most of the steps explained in further detail. This post just focuses on how to use the tooling without a GitHub setup.\n1) First step is to download the .msapp file of your Canvas App. The .msapp file is like a bundled package of multiple kind of files (.json, .xml and .yaml), making up your whole Power App 👩‍💻.\nYou can download your .msapp file by opening the Power App in the online Studio. Then select Save as and select This computer as your destination. A popup should appear that offers you to download the .msapp file:\n     2) I then move the .msapp file to a folder within my Downloads folder making the file path:\nC:\\Users\\DjangoLohn\\Downloads\\PowerApps-Language-Tooling-master\\ConfigScreen.msapp 3) Make sure that you install the required .NET Core SDK version as mentioned in the Microsoft post. Then download the Power Apps Language Tooling locally to your Downloads folder:\n   Unzip this file and save the unzipped folder in a local place of your computer. I chose to store it next to my .msapp file so the directories would be near each other:\nC:\\Users\\DjangoLohn\\Downloads\\PowerApps-Language-Tooling-master\n4) Then just run the build.cmd file of the unzipped folder as Administrator to be sure:\n   After a successful run, the bin folder will have a number of files in the directory. The following path is the one to remember for\nC:\\Users\\DjangoLohn\\Downloads\\PowerApps-Language-Tooling-master\\PowerApps-Language-Tooling-master\\bin\\Debug\\PASopa\nPlease note that your directory path may be different at the beginning, but from the last \\PowerApps-Language-Tooling-master\\ section it should be the same. The PASopa file is where the magic happens.\n5) Now open the default Windows Command Prompt and Run as adminisrator:\n    Have a folder prepared where you want to store the unpacked .msapp files. I chose a folder next to the .msapp file again:  C:\\Users\\DjangoLohn\\Downloads\\PowerApps-Language-Tooling-master\\ConfigScreenSourceFiles 7) Change the directory path in the Command Prompt to the directory where the PASopa file is located using this command\ncd C:\\Users\\DjangoLohn\\Downloads\\PowerApps-Language-Tooling-master\\PowerApps-Language-Tooling-master\\bin\\Debug\\PASopa    8) Execute the following command to unpack the .msapp files to the desired folder:\npasopa -unpack C:\\Users\\DjangoLohn\\Downloads\\PowerApps-Language-Tooling-master\\ConfigScreen.msapp C:\\Users\\DjangoLohn\\Downloads\\PowerApps-Language-Tooling-master\\ConfigScreenSourceFiles Note that the first directory is that of the .msapp file. The second directory is that of the folder where we want to unpack the separate files. Warnings may occur because of checksums built in by the developers. However in the end, the folder with the unpacked .msapp file will have a default content structure:\n   With a tool like Notepad++ or my personal favorite Visual Studio Code, you can edit the individual files. This is how you edit Power Apps source code of Canvas Apps. I prefer Visual Studio Code because you can open up a whole folder in one go:\n    Now you can remove frozen screens, rename controls in bulk, update variables in bulk or any other action which in Power Apps Studio would be a hassle  When this is all done, you can just repack the files with a command like:\npasopa -pack ConfigScreen.msapp C:\\Users\\DjangoLohn\\Downloads\\PowerApps-Language-Tooling-master\\ConfigScreenSourceFiles If you are more observant than I was, you will have noticed that this command does not give an output directory\u0026hellip; so where did the new repacked .msapp file go?? It gives you the new .msapp file in the PASopa directory:\n   The repacked ZIP file can be imported in the online Studio. This import will then update the existing Power App to a new version. Never thought I would say this as if I know how to develop code but \u0026ndash;\u0026gt; happy coding\n[Originally published at https://knowhere365.space/power-apps-source-code-edit-for-canvas-apps/\n","image":"https://pnp.github.io/blog/post/power-apps-source-code-editing-for-canvas-apps/images/PowerApps_Page_Unresponsive_huafe557fd1bd23894f7c73f26f1db5c88_14089_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/power-apps-source-code-editing-for-canvas-apps/","tags":["Power Apps"],"title":"Source code editing for Canvas Apps"},{"categories":["CLI for Microsoft 365"],"contents":" [Manage Microsoft 365 and SharePoint Framework projects on any platform]\nCLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use.\nWhile building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects.\nNew version of CLI for Microsoft 365 \u0026ndash; v3.11\nFollowing our monthly release cadence, we\u0026rsquo;ve released a new version of the CLI for Microsoft 365 with some new capabilities. Here are a few of the most noteworthy additions.\n Changes We\u0026rsquo;ve continued improving the CLI, building upon the changes we\u0026rsquo;ve introduced in the previous version.\n Upgrading commands to use Microsoft Graph v1.0 endpoints\nWhen new capabilities are added to the Microsoft Graph they are usually added to the beta endpoint, this is to give developers early access to new capabilities however this is based on an assumption that these endpoints are subject to change until they reach general availability where they are added to the v1.0 endpoint.\n Sometimes when we add new commands to the CLI for Microsoft 365 we make use of beta endpoints to add new capabilities to the CLI, for example, we recently added several Microsoft To Do commands that used the beta endpoints when they were initially released.\nOver time however these endpoints have matured, reaching general availability and are now available in the v1.0 endpoint, therefore we have updated our code to reflect this.\n We have updated the following commands in this version of the CLI to use v1.0 endpoints.\n  todo list add todo list list todo list remove todo list set teams user app remove teams user app add teams team set teams message reply list Retrieve details of a Power App by its name Previously we only supported retrieving details of a Power App from an environment using its ID, however in this release we have enhanced the command to enable you to return a Power App by its name making it much more user friendly. To retrieve details of a Power App by its name, execute:  m365 pa app get --displayName App  Update description of a SharePoint Online site Previously we supported the ability to update properties on SharePoint Online site, however one property that was not supported was the description property. In this release, we have enhanced commands to provide support for updating this on both modern and classic sites. To update the description on a modern SharePoint Online site, execute:\nm365 spo site set --url https://contoso.sharepoint.com/sites/ModernSite --description \u0026#34;something\u0026#34;  To update the description on a classic SharePoint Online site, execute:\nm365 spo site classic set --url https://contoso.sharepoint.com/sites/ClassicSite --description \u0026#34;something\u0026#34;  SPFx v1.12.1 support added to spfx doctor The spfx doctor command has been updated to support the latest version of SharePoint Framework. The command helps you verify that all prerequisites for building solutions using a particular version of the SharePoint Framework are met in your development environment. It starts by detecting the version of SharePoint Framework that you want to use. First, it looks at the current project. If you didn\u0026rsquo;t run the command in the context of a SharePoint Framework project, the command will try to determine the SharePoint Framework version based on the SharePoint Framework Yeoman generator that you have installed either in the current directory or globally. Based on the determined version of the SharePoint Framework, the command will look at other dependencies such as Node.js, npm, Yeoman, Gulp, React and TypeScript to verify if their meet the requirements of that particular version of the SharePoint Framework. If you miss any required tools or use a version that doesn\u0026rsquo;t meet the SharePoint Framework requirements, the command will give you a list of recommendation how to address these issues. To verify if your environment meets the requirements to work with the SharePoint Framework, execute:\nm365 spfx doctor New Commands  Remove role from Azure AD application In the previous CLI release we added a command that enabled to you define custom roles on Azure AD applications that you can use to assign permissions to users or apps. In this release we have added the ability to remove a custom role. To remove a role published by an Azure AD application registration by its name, execute: m365 aad app role delete --appName \u0026#34;My app\u0026#34; --claim \u0026#34;Product.Get\u0026#34;  Update Azure AD application registration We have added a new command that gives you the ability to update an Azure AD application registration. In this first iteration of the command, we only support the ability to update the application URI property value. To update the application URI of an Azure AD application registration specified by its name, execute:\nm365 aad app set --name \u0026#34;My app\u0026#34; --uri https://contoso.com/e75be2e1-0204-4f95-857d-51a37cf40be8  Clear Microsoft 365 Groups from the tenant recycle bin When Microsoft 365 Groups are deleted in a Microsoft 365 tenant, they are soft deleted and are moved to the tenant recycle bin which they will remain for 30 days at which point they will be automatically hard deleted, however whilst the group remains in the recycle bin it is not possible to create new groups with the same name. Whilst an administrator can manually hard-delete groups from the recycle bin via the Microsoft 365 Admin Portal however this can be inconvenient if you wish to bulk hard-delete these groups. We have added a command that removes all of the groups in the recycle bin in a single command to make this easier. To remove all deleted Microsoft 365 Groups in the tenant, execute:\nm365 aad o365group recyclebinitem clear  Reset CLI configuration option to its default value We recently introduced commands that enables you to personalise the behaviour of the CLI to your own preferences using the cli config commands. In this release we have added the ability for you to reset these options back to their default values. To reset the showHelpOnFailure to its default value, execute:\nm365 cli config reset --key showHelpOnFailure  Alternatively, to reset all configuration options to their default values, execute:\nm365 cli config reset  Microsoft 365 Activation Report Commands We have added commands that enables administrators get an understanding of how many users have activated Microsoft 365 on desktops and devices as well as who has made those activations. To get the count of Microsoft 365 activations on desktops and devices, execute:\nm365 tenant report office365activationcounts  To get the count of users that are enabled and those that have activated the Office subscription on desktop or devices or shared computers, execute:\nm365 tenant report office365activationsusercounts  To get details about users who have activated Microsoft 365, execute:\nm365 tenant report office365activationsuserdetail  Generate SharePoint Framework solution from a HTML file SharePoint Framework is the extensibility model of choice in Microsoft 365, whether that is extending SharePoint Online or Microsoft Teams, it is the go-to framework for in house development. We have introduced a command that simplifies the creation of a SharePoint Framework solution package that generates a SharePoint Framework web part that uses a local HTML file as the contents of the web part. To generate a web part that shows the weather for Amsterdam, load web part contents from a local file, allow the web part to be deployed to all sites and expose the web part in Teams as a personal tab, execute: m365 spfx package generate \u0026ndash;webPartTitle \u0026ldquo;Amsterdam weather\u0026rdquo; \u0026ndash;webPartDescription \u0026ldquo;Shows weather in Amsterdam\u0026rdquo; \u0026ndash;packageName amsterdam-weather \u0026ndash;html @amsterdam-weather.html \u0026ndash;allowTenantWideDeployment \u0026ndash;enableForTeams all\nNew script samples  CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts.\n If you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\nResubmit all failed Power Automate Flow runs for a specific flow in an environment\nHave you ever been forced to resubmit lot of failed Power Automate flow runs manually? This script will resubmit all failed flow runs of a Power Automate flow created in an environment. Cancel all running Power Automate Flow runs for a Flow in an environment\nDo you want to automate the cancellation of running Power Automate Flow runs?\nThis script will cancel all running flow runs of a Power Automate flow created in an environment.\nRemove SharePoint API permissions\n[When building SharePoint Framework solutions connected to APIs secured with Azure Active Directory, you might need to clear the list of granted API permissions.]\n This script helps you to quickly remove SharePoint API permissions. Remove pending SharePoint API permission requests When building SharePoint Framework solutions connected to APIs secured with Azure Active Directory, you\u0026rsquo;ll easily end up with many pending permission requests. This script helps you to quickly remove pending SharePoint API permission requests.\nContributors This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order)\n  Mohamed Ashiq Faleel Vipul Kelkar Shantha Kumar Waldek Mastykarz Abderahman Moujahid Nanddeep Nachan Smita Nachan Albert Jan-Schot strafe Garry Trinder Siddharth Vaghasia Rabia Williams Adam Wojcik   Thank you all for the time you chose to spend on the CLI for Microsoft 365 and your help to advance it!\nWork in progress  Here are some things that we\u0026rsquo;re currently working on.\n More commands, what else  Microsoft 365 is evolving and new capabilities are being released every day. With CLI for Microsoft 365, we aim to help you manage your tenant on any platform in a consistent way, no matter which part of Microsoft 365 you interact with. While we keep adding new commands to CLI for Microsoft 365 each release, we still barely scratched the surface with what\u0026rsquo;s possible in Microsoft 365. In the upcoming versions of the CLI for Microsoft, you can expect us to add more commands across the different workloads in Microsoft 365.\n Updating Azure AD apps  Recently, we introduced a command to easily create Azure AD app registrations. Because they\u0026rsquo;re backbone of every app you\u0026rsquo;d build on Microsoft 365, we think you should be able to create them as easily as possible. So with CLI for Microsoft 365, you can create a fully configured Azure AD app for the most common scenarios with just one line of code.\nWe\u0026rsquo;re currently working on adding support for updating Azure AD app registration which will be helpful for example when building apps for Microsoft Teams. Stay tuned!\nScript examples  In every release of the CLI for Microsoft 365, we introduce new commands for managing Microsoft 365. With over 350 commands across the different Microsoft 365 services, the CLI for Microsoft 365 has become a powerful tool, not just for managing your tenant but also for automating your daily work.\n We\u0026rsquo;d love to show you how you can use the CLI for Microsoft 365 to build automation scripts in PowerShell Core and Bash. If you have any scripts using SPO or PnP PowerShell that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\n\u0026rsquo;ensure\u0026rsquo; commands Recently, we shipped our first ensure command - an easy way to help you that a site with specific settings exists. If it doesn\u0026rsquo;t, CLI creates it for you, if it does, CLI ensures it has the right properties. All in one line of code. We\u0026rsquo;d love to hear from you how you like it and if it\u0026rsquo;s something you\u0026rsquo;d like us to implement for other commands as well.\n Try it today  Get the latest release of the CLI for Microsoft 365 from npm by executing:\n npm i -g @pnp/cli-microsoft365  Alternatively, you can get the latest release from Docker by executing:\n docker run --rm -it m365pnp/cli-microsoft365:latest  If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365.\n If you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-11/images/banner-cli-m365_hudf0438f961ff7b005fc2ad64065ff955_577192_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-11/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 v3.11"},{"categories":["Community post"],"contents":"Introduction In this article, we will see a step-by-step implementation of how to break and change list item permission using Power Automate. and for this, we will use REST API\nImplementation Create a SharePoint List\nCreate a Power Automate - We will create an Automated Cloud Flow\n Go to Power Automate \u0026gt; My flows \u0026gt; Select New flow \u0026gt; Select Automated Cloud Flow **![STep 1.png](images/STep 1.png)  It will ask for the flow name and trigger. Add flow name and choose a trigger when an item is created.    Select Cerate. Now set Site name and list name in **when an item is created in list **action.   For all API Calling, we will use Send an HTTP request to SharePoint action. Now we will call REST API to break role inheritance.  Set all properties as below.\n Site Address Select Site Name from Dropdown\nMethod POST\nUri _api/lists/getByTitle(\u0026lsquo;ListTitle\u0026rsquo;)/items(ID)/breakroleinheritance(copyRoleAssignments=false,clearSubscopes=true)\nHeaders {\n\u0026ldquo;Accept\u0026rdquo;: \u0026ldquo;application/json\u0026rdquo;,\n\u0026ldquo;Content-type\u0026rdquo;: \u0026ldquo;application/json\u0026rdquo;\n}\n      Now we will set new permission so for that we need a user id to whom we have to give permission and need a role definition ID. **User ID: **You can directly use User ID if you have or if you have a user name or login name then we have to find user id from the particular user so for that we will call REST API. Role definition ID: You can use id based on permission.   Role Definition Name Role Definition Id Limited Access 1073741825 View Only 1073741924 Design 1073741828 Edit 1073741830 Contribute 1073741827 Read 1073741826 Full Control 1073741829\n Create a variable and set User Title or if you have any list column then you can use it.\n   Call API to get a user ID and filter it by the above-declared user name.\n   It will return an object as below, { \u0026#34;d\u0026#34;: { \u0026#34;results\u0026#34;: [ { \u0026#34;__metadata\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;https://sitename.sharepoint.com/_api/Web/GetUserById(2)\u0026#34;, \u0026#34;uri\u0026#34;: \u0026#34;https://sitename.sharepoint.com/_api/Web/GetUserById(2)\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;SP.User\u0026#34; }, \u0026#34;Id\u0026#34;: 2, \u0026#34;Title\u0026#34;: \u0026#34;Chandani Prajapati\u0026#34; } ] } }  Now we want to use the only id from this so we will use an expression as below,\noutputs(\u0026#39;Send_an_HTTP_request_to_SharePoint_-_Get_user_id\u0026#39;)?[\u0026#39;body\u0026#39;][\u0026#39;d\u0026#39;][\u0026#39;results\u0026#39;]?[0][\u0026#39;Id\u0026#39;] And we will set it in a variable called UserId.\n   Now we will set contribute permission for the above UserId.\n   Now we can test the flow. Output We can see contribute permission for an item as below,\n   -align-center image-alt=\u0026ldquo;OP.png\u0026rdquo; style=\u0026ldquo;width: 999px;\u0026rdquo;} Summary In this article, we have seen how to break and change list item permission using power automate. Hope this helps! Sharing is caring!\n","image":"https://pnp.github.io/blog/post/how-to-break-and-change-list-item-permission-using-power/images/Step2_hu7ff1834cb32bd9d7257226fad1b445ca_64196_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-break-and-change-list-item-permission-using-power/","tags":["Power Automate","SharePoint"],"title":"How to break and change list item permission using Power Automate?"},{"categories":["Community post"],"contents":"Learn interactively how to turn your React app into a Microsoft 365 app with Microsoft Graph Toolkit\nThe easiest way to connect your app to Microsoft 365 Using Microsoft Graph Toolkit is the easiest way to connect your app to Microsoft 365. Toolkit\u0026rsquo;s components help you retrieve relevant data from Microsoft 365 and show it in your app in any way you want. And with toolkit\u0026rsquo;s authentication providers, setting up auth is a matter of adding a few lines of code. Never again fiddle with setting up a login, handling access tokens, building web requests, and dealing with errors.\nLearn Microsoft Graph Toolkit interactively To help you learn what Microsoft Graph Toolkit has to offer and how you\u0026rsquo;d use it in your app, we recently released a new learning path on Microsoft Learn. By following a few learn modules you\u0026rsquo;ll learn everything that you need to know to use the toolkit in your app. But that\u0026rsquo;s not all.\nThinking about the different ways in which people learn, we\u0026rsquo;ve launched an experiment - an interactive code tour that you can follow to add Microsoft Graph Toolkit to a React app.\n   By following the instructions in the tour, you gradually extend an empty React app with Microsoft Graph Toolkit turning it into a true Microsoft 365 app. What\u0026rsquo;s cool about this code tour, is that it puts the code of your app in the center. Rather than reading long-form, you\u0026rsquo;re in the code and get relevant, and in-place tips for building your app.\nThe Microsoft Graph Toolkit React code tour is a great way to quickly experience how you\u0026rsquo;d use the toolkit in a React app. We\u0026rsquo;d love it if you gave it a try and told us what you think. Shall we consider building tours for other technologies and scenarios?\nTry the Microsoft Graph Toolkit React code tour\n","image":"https://pnp.github.io/blog/post/how-to-break-and-change-list-item-permission-using-power/images/Step2_hu7ff1834cb32bd9d7257226fad1b445ca_64196_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/learn-microsoft-graph-toolkit-interactively-with-a-code-tour/","tags":["Microsoft Graph toolkit"],"title":"Learn Microsoft Graph Toolkit interactively with a code tour"},{"categories":["Community post"],"contents":"We have been hosting different set of Microsoft 365 community calls since 2015 where we share the latest news and do live demos on the different capabilities in Microsoft 365. We are excited to share more details on our updated community call structure focusing holistically on the Microsoft 365 developer platform. Based on a community survey from spring 2021, it was visible that a more holistic platform level messaging would be needed, rather than having isolated community calls based on individual products in Microsoft 365. When we are creating solutions and services for the Microsoft 365, we often combine numerous technologies across this platform stack, so this new model is targeted on covering more widely the awesomeness of Microsoft 365. We will also have some Northern Hemisphere summer cancellations.\n   What\u0026rsquo;s new? - New weekly Microsoft 365 Platform community call This call is targeted for the Microsoft 365 engineering PMs and other Microsoft employees to update our community on the latest features and capabilities across the Microsoft 365. Call will start from 31st of August 2021 and will happen each Tuesday at 8 AM PT. Like other community calls, this call is recorded and published from the Microsoft 365 Community YouTube channel.\nThis call will replace monthly Microsoft Graph, Microsoft Teams and SharePoint community calls. It will also feature other Microsoft 365 features and capabilities.\n Download invite on the Microsoft 365 platform call - Recurrent weekly call starts from Tuesday 31 of August Direct link to join the call is https://aka.ms/m365-dev-call-join  This call will typically have following generic agenda:\n 0-15 min - Latest news from Microsoft and group photo 15-30 min - Microsoft 365 demo 1 30-45 min - Microsoft 365 demo 2 45-60 min - Microsoft 365 demo 3  We will answer on any questions throughout the call in the chat.\nSummer schedule adjustments Microsoft Graph, Microsoft Teams and SharePoint monthly community calls are on a break during summer and will discontinue after that as they will be replaced by the platform call.\nOther calls will continue normally through out the summery.\nMicrosoft 365 community calls - available for everyone to join Here\u0026rsquo;s a summary of existing Microsoft 365 calls and the structure for future. Join on the calls to hear about the latest features and to engage with the community. All community calls are recorded. Call summaries are published as blog post articles at Microsoft 365 PnP Tech Community blog and videos at Microsoft 365 Community YouTube channel.\n Adaptive Cards - 2nd Thursday each month at 9 AM PT - no summer break Microsoft Identity Platform - 3rd Thursday every month at 9 AM PT - no summer break Office add-ins - Second Wednesday every month 8 AM PT - no summer break Power Apps - Third Wednesday every month 8 AM PT - no summer break SharePoint Framework - bi-weekly call on Thursday at 7 AM PT - no summer break Microsoft 365 developer community (with community demos) - bi-weekly call on Thursday at 7 AM PT - no summer break Microsoft 365 developer platform call - weekly on Tuesdays at 8 AM PT - starts from 31st of August  Discontinued calls, replaced with the weekly call on Tuesdays:\n Microsoft Graph Microsoft Teams SharePoint  These invites will be routed to the new weekly call starting from 31st of August. You can download invites for the community calls from https://aka.ms/m365pnp.\n","image":"https://pnp.github.io/blog/post/updates-on-the-microsoft-365-platform-community-calls/images/VesaJuvonen_1-1624888942819_hu11e1a1bda5bc72faa17d1b2a83ecc161_227067_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/updates-on-the-microsoft-365-platform-community-calls/","tags":[],"title":"Updates on the Microsoft 365 platform community calls"},{"categories":["Microsoft Identity platform community call"],"contents":"Call summary This month\u0026rsquo;s in-depth topic: Increase the resilience of authentication and authorization applications you develop. Tips for adding and increasing resiliency in apps that sign-in users and apps without users. Using a Microsoft Authentication Library and best practices to follow if you use a different library. Authorization with JWT and using Microsoft Continuous Access Evaluation (CAE). Demo and tips on evaluating/adopting CAE. Resilient methods for fetching metadata and validating tokens including use of customized token validation, as needed. This session was delivered by Microsoft Program Managers Harish Suresh | @harish_suresh and Kyle Marsh | @kylemar and was recorded on June 17, 2021. Live and in chat Q\u0026amp;A throughout call\nResources   Documentation - Increase resilience of authentication and authorization applications you develop   Documentation - How to use Continuous Access Evaluation enabled APIs in your applications   Documentation - Building resilience into identity and access management with Azure Active Directory   Organization \u0026ndash; OpenID - Continuous Access Evaluation Protocol (CAEP)   NuGet Gallery - Microsoft.IdentityModel 7.0.0   Documentation - Signing key rollover in the Microsoft identity platform   Documentation - How to: Build services that are resilient to Azure AD\u0026rsquo;s OpenID Connect metadata refresh   Documentation \u0026ndash; Microsoft identity platform access tokens   Documentation - Microsoft identity platform access tokens - Validating tokens   Sample - How to manually validate a JWT access token using the Microsoft identity platform (formerly Azure Ac...   Documentation - Protected web API: Code configuration - Customizing token validation   Actions   Let us know how we\u0026rsquo;re doing and suggest topics for future calls, please complete this survey https://aka.ms/IDDevCommunityCallSurvey\n  Mark your calendar. The next Identity Platform Community Call is on July 15th\n  Stay connected  Twitter https://twitter.com/microsoft365dev​ and @azuread YouTube https://aka.ms/M365DevYouTube​ Blog https://aka.ms/m365pnp/community/blog Recurrent Invite https://aka.ms/IDDevCommunityCalendar   ","image":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-june-2021/images/ViewPorter_hu2fdfb62fe703000b4e5df28d892df97e_2914_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-june-2021/","tags":[],"title":"Microsoft Identity Platform community call -- June 2021"},{"categories":["Microsoft 365 Developer Community Call"],"contents":" Call summary Summer break and community call schedule updates reviewed. Preview the new Microsoft 365 Extensibility look book gallery. Looking to get started with Microsoft Teams development? Don\u0026rsquo;t miss out on our Teams samples gallery (updated sample browser in June), and the new Microsoft 365 tenant \u0026ndash; script samples gallery - s*cripts for PowerShell and CLIs. * Sign up and attend one of a growing list of events hosted by Sharing is Caring this month. Announced PnP Recognition Program. Check out the new PnP Teams Quickstart. Latest updates on PnP projects covered off. Added Teams SSO Provider, sample and other components to Microsoft Graph Toolkit (MGT) v.2.2.0 GA. Open-source project status: (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.5.0 GA Version 1.6.0 \u0026ndash; Summer 2021 PnP .NET Libraries - PnP Core SDK v1.2.0 GA Version 1.3.0 \u0026ndash; Summer 2021 PnP PowerShell v1.6.0 GA Yo teams - generator-teams v3.2.0 GA v3.3.0 Preview soon Yo teams - yoteams-build-core v1.2.0 GA, v1.2.1 Preview Yo teams \u0026ndash; yoteams-deploy v1.1.0 GA Yo teams - msteams-react-base-component v3.1.0 Microsoft Graph Toolkit (MGT) v2.2.0 GA Added Teams SSO Provider in Preview\n Additionally, 1 new Teams samples were delivered in the last 2 weeks. Great work! The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\n  Register for Sharing is Caring Events: \\\n First Time Contributor Session \u0026ndash; June 29th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; TBD PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; TBD  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; June 24th Ask Me Anything \u0026ndash; Teams Dev \u0026ndash; July 13th First Time Presenter \u0026ndash; June 30th More than Code with VSCode \u0026ndash; TBD Maturity Model Practitioners \u0026ndash; 3rd Tuesday of month, 7:00am PT PnP Office Hours \u0026ndash; 1:1 session - Register PnP Buddy System - Request a Buddy    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Azure Communication Services (ACS) \u0026ndash; Teams InterOp with Call Routing - Sathya Raveendran (Microsoft), Saikrishna Neeli \u0026amp; Arun Kumar Anaparthi (Zen3 Infosolutions) Thank you for joining for today\u0026rsquo;s PnP Community call. It\u0026rsquo;s a full house!   Demos Demos delivered in this session\n  Getting started with PnP Teams QuickStart \u0026ndash; create a Teams SSO tab in 15 minutes using browser-based Codespaces currently in preview. Follow presenter as he creates a new Teams tab, registers it in Azure AD, accesses Graph for presence courtesy of Microsoft/Teamsfx js library, deploys app in App Store, and deletes app when done. PnP Teams Quick Start is based on GitHub Codespaces = your virtual machine in the cloud.\n  Our learnings from the AppSource submission for Microsoft Teams \u0026ndash; a first timer documents the journey - a 7-step process going from idea to app in AppSource. Solid tips beyond the process that every product team should consider ranging from extension opportunities and testing to devices and post publishing maintenance. Prepare to fail gracefully and learn openly as the journey includes working closely with a Microsoft submissions team that\u0026rsquo;s completely interested in your success.   Getting started with Microsoft Graph Tag API for managing Microsoft Teams tagging \u0026ndash; this presentation focuses on people centric tags used in Teams to categorize, to @mention and to start a chat. Teams makes it nearly effortless to create, manage and use tags to connect people and groups. New Beta APIs, available week of June 28th, address many tag management challenges \u0026ndash; permissions, membership updates, tapping data that exists outside immediate org. Glimpse at what\u0026rsquo;s next.    Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  PnP .NET library updates - Bert Jansen (Microsoft) | @O365bert - 7:47\n  yo Teams updates - Wictor Wilén (Avanade) | @wictor - 9:45\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) | beth-panx - 10:34\n  Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German - 12:14\n  **Demo: ** Getting started with PnP Teams QuickStart - Wictor Wilén (Microsoft) | @wictor - 14:40\n  **Demo: ** Our learnings from the AppSource submission for Microsoft Teams - Florian Grasel (TagTeam) | @Trailbeard - 32:17\n  **Demo: ** Getting started with Microsoft Graph Tag API for managing Microsoft Teams tagging - Annie Colonna (Microsoft) | @AnnieColonna - 49:42\n  Resources Additional resources around the covered topics and links from the slides.\n  Codespaces preview \u0026ndash; https://github.com/codespaces   GitHub Repo - teams-quickstart   Documentation - Publish your app to the Microsoft Teams store   Documentation - Commercial marketplace certification policies   App TagTeam   Documentation - teamworkTag resource type   PnP Weekly \u0026ndash; Episode 132 with Seattle-based Program Manager from OneDrive and SharePoint (ODSP) engineering - Nicole Woon (Microsoft) | @NovelNicole | video | podcast\n  Microsoft 365 tenant \u0026ndash; Script Samples Gallery | aka.ms/script-samples\n  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart\n  Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  General resources  Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  SharePoint Framework call \u0026ndash; July 1st at 7:00 am PDT | https://aka.ms/spdev-spfx-call Office add-in monthly call \u0026ndash; July 14th at 8:00 am PDT | https://aka.ms/officeaddinscall M365 General Dev call \u0026ndash; July 8th at 7:00 am PDT | https://aka.ms/m365-dev-sig Adaptive Cards monthly call \u0026ndash; July 8th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall Microsoft Identity Platform \u0026ndash; July 15th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar Power Apps monthly call \u0026ndash; July 21st at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;   Microsoft 365 PnP team, Microsoft - 25th of June 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-24th-of-june/images/sig-recording-24th-june_huc85cb69f14dc023d386fe0cd5b941b90_298589_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-24th-of-june/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 24th of June, 2021"},{"categories":["Community post"],"contents":"You want to build an app using SharePoint Framework and wonder which framework you should use? Here\u0026rsquo;s my personal advice.\nExtend conversations and portals on Microsoft 365 Using SharePoint Framework you can extend conversations and portals on Microsoft 365. With SharePoint Framework, you can build widgets, called web parts, which users can put on pages or open as tabs in Teams. You can also use SharePoint Framework to add code to existing pages or change how data in lists is displayed.\nIf you have experience building web apps using JavaScript, you can build apps using SharePoint Framework. SharePoint Framework is based on open source tools that you already know, like npm, TypeScript, Yeoman, webpack, and gulp, and there is very little that you have to learn to build your first app.\nCan I use [your-framework-here] with SharePoint Framework? There are many JavaScript frameworks that you can use to build web apps. But can you use any one of them when building apps with SharePoint Framework?\nUse any JavaScript framework When building apps using SharePoint Framework, you can use any JavaScript framework. If you\u0026rsquo;re comfortable working with Vue or Handlebars, or any other framework, you don\u0026rsquo;t need to learn any other framework. You can be productive from the start and focus on building your app. That said, there is a caveat...\nWhile you can use any JavaScript framework when building apps with SharePoint Framework, you will have the best development experience when using React. Here is why.\nIntegrated dev experience From the development experience point of view, React is integrated with SharePoint Framework. Using the SharePoint Framework Yeoman generator you can create a project that uses React. The necessary configuration, and build and packaging tasks are already configured and ready for you to use. In comparison, if you choose to use another framework, you will need to find a way to integrate its tooling, like the ng CLI, into SharePoint Framework so that you can work efficiently.\nSeamless UX integration Next to the SharePoint Framework, Microsoft offers Fluent UI React: a set of ready-to-use components that help you make your app look like Microsoft 365. Rather than spending time on building CSS and ensuring that your app looks as intended in the different browsers, you can save a ton of time and use Fluent UI components instead. But only if you use React. If you use a different framework, you will need to take care of presenting the data yourself.\nFirst-load performance Finally, from the performance point of view, React is already loaded on SharePoint pages. If you build your app on React, your app will load faster. That said, the difference of using React instead of any other framework will be visible only on the initial load. Because once users download your app, it will load from their cache the next time they use it, making the difference imperceptible.\nThe verdict You can use any JavaScript framework to build apps using SharePoint Framework. SharePoint Framework allows you to benefit from your existing knowledge and use the tools that you already know to build apps for the 250 million people using Microsoft 365.\nIf you\u0026rsquo;re just starting with web development, I\u0026rsquo;d recommend you to learn React. It will give you the smoothest experience when building apps for Microsoft 365. There are many tools and samples built for React both by Microsoft and the community which you can use to learn and speed up building your apps.\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-24th-of-june/images/sig-recording-24th-june_huc85cb69f14dc023d386fe0cd5b941b90_298589_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/which-javascript-framework-can-i-use-with-sharepoint-framework/","tags":[],"title":"Which JavaScript framework can I use with SharePoint Framework"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Seattle-based Program Manager from OneDrive and SharePoint (ODSP) engineering - Nicole Woon (Microsoft) | @NovelNicole . Topics discussed in this episode include: Nicole\u0026rsquo;s product - SharePoint site templates. The importance and Making products approachable to both the most advanced developer and to someone new to the product. Customer connection and delivering capabilities based on an understanding of human behavior and using \u0026ldquo;craft\u0026rdquo; for high-quality product development. A strategy for learning everything necessary to excel as a technical support engineer, being an accessibility champ and thriving as a woman in IT.  Covering also 21 new articles from Microsoft and the Community from past week!  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n  This session was recorded on Monday, June 21, 2021, and it is the last episode until we return from summer holiday to kick off Season 4 - Episode 133, sometime around end of August. Thank you for watching and listening, we hope you have a happy and safe summer. Please note: There will be no break in our regularly delivered Thursday M365/SharePoint Community calls and calls from other organizations.   Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.   These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot;  Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\n\\\n Microsoft articles   New hybrid work innovations in Microsoft Teams Rooms, Fluid, and Microsoft Viva - Microsoft New experiences coming to Microsoft Teams Rooms to allow everyone to participate on equal footing - Microsoft Assignments API for Microsoft Graph is now generally available - Microsoft   Community articles   Microsoft 365 Developer Podcast - Viva Connections with John Nguyen and Luca Bandinelli - Paul Schaeflein (AddIn365) | @paulschaeflein SharePoint Site Templates \u0026ndash; the latest features and experiences - Nicole Woon (Microsoft) | @NovelNicole Explore Microsoft 365 extensibility opportunities with the Microsoft 365 Extensibility look book - Waldek Mastykarz (Microsoft) | @waldekm Microsoft Graph Toolkit React code tour - Microsoft Graph Toolkit Save an email attachment to a custom path with Power Automate - Damien Bird (Aberdeen City Council) | @DamoBird365 How to use Send an HTTP request to SharePoint in Power Automate? - Chandani Prajapati | @Chandani_SPD Run reports on your tenant using the CLI for Microsoft and Azure Container Instances - Albert-Jan Schot (Portiva) | @appieschot SharePoint \u0026ndash; Adding \u0026lsquo;Time to read\u0026rsquo; to modern pages - Alex Clark (Microsoft) | @sharepointalex Creating a PWA for your Microsoft Teams app - Elio Struyf (Struyf Consulting) | @eliostruyf Filtering SharePoint News Pages with Metadata - Marc D. Anderson (Sympraxis Consulting) | @sympmarc Power Automate Flows \u0026ndash; Random Tips, Tricks, and Pain Points - Caroline Sosebee (ThreeWill)  Working with Nintex REST API for Office 365 - Alex Terentiev (Sharepointalist) | @alexaterentiev Show files as cards using Microsoft Graph Toolkit and hTWOo - Waldek Mastykarz (Microsoft) | @waldekm Query SharePoint items with Microsoft Graph and Search - Markus Möller (Avanade) | @Moeller2_0 SharePoint Online/Microsoft Lists: @mention people in list comments - Ganesh Sanap (Globant) | @GaneshSanap20 Creating a Modern SharePoint Site using Power Automate - Michel Mendes (Storm Technology Ltd) | @michelcarlo Updates for Microsoft Teams connected team sites - Daniel Glenn (InfoWorks, Inc) | @DanielGlenn, Darrell Webster (Modern Workplace Change) | @darrellaas Business processes vs. automated activities - Sarah Haase | @sarahhaase, Antonio Maio | @AntonioMaio2, Mike Maadarani | @mikemaadarani and Mike Fitzmaurice (WEBCON) | @mikefitz   Additional resources   Microsoft 365 Extensibility Look Book - https://aka.ms/m365/extensibility  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp   If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n \u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-132-nicole-woon-microsoft/images/Thumb-Ep132_hu1b1a63c16fb0c8ff8255827a9391c4d2_539823_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-132-nicole-woon-microsoft/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 132 - Nicole Woon (Microsoft)"},{"categories":["Microsoft 365 developer podcast"],"contents":"Jeremy and Paul talk with Brian T. Jackett about the Graph Connectors API.\nListen to the show here: Microsoft Graph Connectors with Brian T. Jackett (m365devpodcast.com) Links from the show  Microsoft Graph Connector session fromb Build 2021 Microsoft Graph Connector documentation (Updated) Microsoft Search Developer Private Preview Postman Collection (combined with all-up Graph collection)  Microsoft News  Homepage - Microsoft 365 Developer Blog Universal Actions in Adaptive Cards on Microsoft Teams - Microsoft 365 Developer Blog Microsoft Graph @ Build 2021 Microsoft Graph Mailbag \u0026ndash; A deeper look into the Microsoft Graph PowerShell SDK Protected APIs in Microsoft Teams  Community Links  New release: New resources and other improvements in SharePointDsc v4.7 @Yorick Kuijs  Displaying the Connected Account for Microsoft Graph on the Terminal prompt @paulschaeflein   ","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-132-nicole-woon-microsoft/images/Thumb-Ep132_hu1b1a63c16fb0c8ff8255827a9391c4d2_539823_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-microsoft-graph-connectors-with/","tags":[],"title":"Microsoft 365 Developer Podcast - Microsoft Graph Connectors with Brian T. Jackett"},{"categories":["Community post"],"contents":"This use case was generated from an idea involving Xerox Docucentres, which enables end-users to email themselves a scanned document. Equally, this applies to regular emails with attachments that you would like Power Automate to automatically save the attachment(s) to a specific (custom/bespoke/unique) folder and/or SharePoint site and therefore Document Library. The dynamically chosen path is based on the Subject Line OR File Name. This can be achieved relatively easily and would save you a lot of routine administration time.\nThe Solution Using Power Automate, When a new email arrives (v3) trigger, we can be quite specific about the sender of the email and for this, I have assumed all emails will come from xerox@mydomain.com and the email must contain an attachment! Ideally, you want to limit the emails that this Flow will trigger by using the available parameters for that action.\n   To define the locations for saving files, I have used an array in a compose action (but don\u0026rsquo;t panic!). You might want to use a SharePoint list as somewhere to save the specific subject or file name keywords, alongside the folder or SharePoint site path. The advantage of using an array is that only the owner(s) of the flow can define these and all of the parameters are in one place. Creating a list in SharePoint might give you and/or other colleagues the ability to easily define and visualise the locations.\n   The parameters for this flow are basic, a keyword for searching the Subject or Filename containing, which I have called Dept; and the Path, which can either be a folder or a Site Name. If you are looking to have a dynamic Folder and Site, you can define a third parament or key:value pair.\nFinding our path We must now use the filter array action, which will allow us to search the Subject or Attachment name to see if it contains one of the keywords from the Dept key. If we get a match, the array will return a value for the Path. Here I use a compose action to return the first object from the array result. Why do I use the first expression? Because the result is returned as an array, it expects multiple elements. Calling the path without either using the first expression or body(\u0026lsquo;FilterFindPath\u0026rsquo;)?[0]?[\u0026lsquo;Path\u0026rsquo;] to select the first element, you will receive an error \u0026ldquo;Array elements can only be selected using an integer index\u0026rdquo;. Using First() or calling the element by using an integer will allow you to simplify your Flow if you know the result will always be the first element.\n   Saving the File(s) to a Custom Path Using the Create File action for SharePoint, I am using the Attachments Name and Attachments Content dynamic expressions from the email trigger. By default, when you select these dynamic values, Power Automate will put your actions into an Apply to Each. Why? This is because the results for the attachment name and content are returned as an array. You can accept this and your solution will handle multiple attachments. For my solution, I am a stickler for efficiency and have used the first() expression described previously as my Xerox will only ever include one file. You can accept the default Power Automate build if you would prefer. I\u0026rsquo;ve two actions here, one to demonstrate how to save to a custom dynamic path, the other to a custom dynamic site. When manually supplying a custom path for the site or folder, you will have to select Enter Custom Value or Power Automate will try and resolve the address and error \u0026lsquo;Site Address\u0026rsquo; is required or the folder path with try and delete any additional text that you supply.\n   The expressions I have used both using the integer selection for the first array element and the first expression are as follows:\nFile Name: triggerOutputs()?[\u0026lsquo;body/attachments\u0026rsquo;]?[0]?[\u0026rsquo;name\u0026rsquo;]\nFile Content: first(triggerOutputs()?[\u0026lsquo;body/attachments\u0026rsquo;])?[\u0026lsquo;contentBytes\u0026rsquo;]\nTo finish off my flow and this is personal preference, I have deleted the incoming email. Why keep it? The file attachment has been saved for me.\n   See it in Action Here I have an incoming email from the Xerox mailbox. I\u0026rsquo;ve been sent me an attachment from the Xerox Mailbox. This will trigger my flow.\n   The filter action will look for each of the Dept values in the subject line and return a filtered array. In the example below, we output the ICT Path based on the subject line \u0026ldquo;This file is for ICT thanks\u0026rdquo;.\n   What do the two Create File Actions look like? Here you can see the custom dynamic paths for both the Folder Path or Site Address. I am obviously saving the file twice here in order to demonstrate the two options. You might want to combine the custom site and folder with an additional parameter in your Array or SharePoint List.\n   Summary Quickly file away those routine attached documents received via email. Maybe this would simplify uploading documents into SharePoint? Work on a file and email it to a shared mailbox and have the Flow decide where to file the attachment based on keywords? Please let me know how you could use this. Make sure you check out my YouTube channel for other ideas and proof of concepts.\n","image":"https://pnp.github.io/blog/post/save-an-email-attachment-to-a-custom-path-with-power-automate/images/DamoBird365_0-1624209543175_huec2a062672ba1cc19f7a6d28334fbd13_11713_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/save-an-email-attachment-to-a-custom-path-with-power-automate/","tags":["Power Automate"],"title":"Save an email attachment to a custom path with Power Automate"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from June 17th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary Summer break and community call schedule updates reviewed. Register now for June trainings on Sharing-is-caring. You are invited to join the Viva Connections private preview! Update on SharePoint Framework v1.13.0 features \u0026ndash; extensibility options with Viva Connections, Teams improvements, tooling updates, Store modernization and more. Released PnPjs for Client-side Libraries v2.6.0, CLI for Microsoft 365 v3.11.0 Beta, and PnP Modern Search v4.2.3 \u0026amp; v3.20.0. Microsoft Teams Toolkit for Visual Studio \u0026amp; Visual Studio Code now available for preview. There were four PnP SPFx samples (2 extensions and 2 web parts) delivered in last 2 weeks. Great work! **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago) PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.12.1 v1.13.0 Preview in summer PnPjs Client-Side Libraries v2.6.0 v3.0.0 developments underway CLI for Microsoft 365 v3.11.0 Beta v3.10.0 preview released Reusable SPFx React Controls v2.7.0 (SPFx v1.11), v3.1.0 (SPFx v1.12.1) Reusable SPFx React Property Controls v2.6.0 (SPFx v1.11), v3.1.0 (SPFx v1.12.1) PnP SPFx Generator v1.16.0 Angular 11 support PnP Modern Search v4.2.3 \u0026amp; v3.20.0 The host of this call is Vesa Juvonen (Microsoft) @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call. The waving wall! Impressive. Great to see you. Truly looking forward to seeing you in Las Vegas, Düsseldorf or another conference venue in the future!\nActions  Join on the Viva Connections private preview! | aka.ms/viva/connections/preview/register Feedback wanted: Microsoft Teams Toolkit for Visual Studio \u0026amp; Visual Studio Code now available for preview.  Tools - https://aka.ms/teams-toolkit Support \u0026ndash; StackOverflow - #TeamsToolkit Feedback \u0026ndash; https://github.com/Officeev/TeamsFx/Issues   Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; June 29th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; June 23rd  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; July  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; June 24th Ask Me Anything \u0026ndash; Teams Dev - July First Time Presenter \u0026ndash; June 30th More than Code with VSCode \u0026ndash; July Maturity Model Practitioners \u0026ndash; July PnP Office Hours \u0026ndash; 1:1 session - Register PnP Buddy System - Request a Buddy   Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   spfx-fast-serve: faster SharePoint Framework development \u0026ndash; a spfx command line utility, that accelerates SPFx development by modifying your SPFx project to run a serve command immediately upon Save. Reduces SPFx build pipeline rebuild/reload time from \u0026gt;7 to \u0026lt;1 second by applying updates only changes rather than rebuilding entire project. Install CLI, spfx-fast-serve then apply fast-serve to your SPFx project. Presenter shows/explains project file modifications. Recently added hot model replacement (HMR) feature.   Building team time zone assistant Teams solution with SPFx v1.13, including Viva Connections Card \u0026ndash; a Team Time Clock app shown as Teams app, Personal app and Viva Dashboard Card (SPFx web part + Adaptive Card extension). On Card, see high level information (people and time) and deep link into Teams to schedule meeting experience. Based on when people prefer to meet (green times), select time by aligning green fields in time slot. Full code walkthrough, many features. Topic:\n  Microsoft Teams Toolkit for Visual Studio \u0026amp; Visual Studio Code now available for preview. Did you know a feature in this latest version of the Teams Toolkit is the SPFx dev experience is truly integrated into this Toolkit? Of course, the build decision is largely a UX hosting decision. TypeScript devs, will prefer SPFx/M365 hosting while ISVs will gravitate to Azure for external hosting Please share feedback on your SPFx development experience in Teams Toolkit v2.0.   SPFx extension samples: (https://aka.ms/spfx-extensions)\n Copy PnP search results web part settings - Anoop Tatti | @anooptells Follow Documents - André Lage | @aaclage    SPFx web part samples: (https://aka.ms/spfx-webparts)\n Remote Event Receiver Manager - Dan Toft | @tanddant Carousel - Giuliano De Luca | @delucagiulian  Thank you for your great work. Samples are often showcased in Demos. Agenda items  Latest updates on SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 6:36 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 8:47 CLI for Microsoft 365 - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 10:34 PnP SPFx Controls - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 11:54 PnP Modern Search - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 12:56 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 14:03 Topic: Microsoft Teams Toolkit v2.0 - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 52:48   Demos  Demo: spfx-fast-serve: faster SharePoint Framework development \u0026ndash; Sergei Sergeev (Mastaq) | @sergeev_srg - 17:42 Demo: Building team time zone assistant Teams solution with SPFx v1.13, including Viva Connections Card \u0026ndash; Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026amp; Derek Cash-Peterson | @spdcp - 31:22  Resources Additional resources around the covered topics and links from the slides.\n  Repo - SPFx Fast Serve Tool   Article - hTWOo v0.3.0 released \u0026ndash; Teams Splash Cards, Placeholder and demo   Tool - ABOUT HTWOO UI   Tools - https://aka.ms/teams-toolkit\n  Register - Register for Viva Connections developer platform updates and private Beta   Viva Connections https://aka.ms/VivaConnections\n  PnP Weekly \u0026ndash; Episode 131 Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm were joined by Senior Program Manager - Zhenya Savchenko (Microsoft), from the Developer Division of Visual Studio group to talk about new Microsoft Teams Toolkit v2 extension for Visual Studio Code. | video | podcast\n  General resources  Gallery - Microsoft 365 Extensibility look book gallery  Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring Tools - PnP Modern Search v4| https://aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other topics mentioned  SharePoint dev documentation SharePoint dev issue list  Upcoming Calls | Recurrent Invites   M365 General Dev call \u0026ndash; June 24th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  SharePoint Framework call \u0026ndash; July 1stat 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Office add-in monthly call \u0026ndash; July 14th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash; July 8th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Microsoft Identity Platform \u0026ndash; July 15th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar\n  Power Apps monthly call \u0026ndash; July[ 21]st[ at 8:00 am PDT | ]https://aka.ms/PowerAppsMonthlyCall PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 18th of June 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-17th-of-june-2021/images/210617-together-mode_hu3de0976b267b2a772b45b3f637c9c02a_4566729_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-17th-of-june-2021/","tags":[],"title":"SharePoint Framework Community Call -- 17th of June, 2021"},{"categories":["Community post"],"contents":" Want to understand what types of apps you can build on Microsoft 365? Want to get inspired by the scenarios you could implement? Curious about the different extensibility points available for developers? Check out the new Microsoft 365 Extensibility look book: an interactive gallery that helps you understand how you can extend Microsoft 365 with custom apps. The look book has been announced at Ignite \u0026lsquo;21 and is publicly available at https://aka.ms/m365/extensibility. Microsoft 365 Extensibility look book explains the Microsoft 365 extensibility opportunity using three pivots: products, type of apps and scenarios. Using these pivots, you can learn what\u0026rsquo;s possible in a way that\u0026rsquo;s intuitive for your role. Microsoft 365 developers, familiar with Microsoft\u0026rsquo;s technology, can jump to the specific Microsoft product and learn how to extend it. New developers can explore the opportunities by looking at the different types of apps. Business decision makers can look at the scenarios to start conversations in their organization and drive demand for building custom apps on Microsoft 365. Each page in the look book contains links to existing resources on Microsoft Docs, Learn, YouTube and GitHub to help you learn how to get started building these apps. We\u0026rsquo;re excited to share the Microsoft 365 Extensibility look book with you and hope you\u0026rsquo;ll find it helpful in your conversations with your colleagues and customers. And please, don\u0026rsquo;t hesitate to let us know if you have suggestions how we could improve it.\n","image":"https://pnp.github.io/blog/post/explore-microsoft-365-extensibility-opportunities-with-the/images/thumbnail_image_huecd30bd473a54362c073a3897e42acf3_702294_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/explore-microsoft-365-extensibility-opportunities-with-the/","tags":["SharePoint"],"title":"Explore Microsoft 365 extensibility opportunities with the Microsoft 365 Extensibility look book"},{"categories":["Microsoft 365 developer podcast"],"contents":"Paul talks with John Nguyen and Luca Bandinelli about the developer story for Viva Connections.\nListen to the show here: Viva Connections with John Nguyen and Luca Bandinelli (m365devpodcast.com) Links from the show  https://aka.ms/viva/connections/preview/register Microsoft Viva Connections helps everyone to stay engaged and informed  Microsoft News  SharePoint Framework v1.12.1 release notes Microsoft Graph community call \u0026ndash; May 2021 Understanding the Office Add-ins runtime  Community Links  How to determine web part size with SPFx v1.12 (@yhabersaat) spfx-fast-serve 2.0: new architecture, better extensibility, support of the latest SPFx Building a supply chain attack with .NET, NuGet, DNS, source generators, and more! React Groups and Teams \u0026ndash; Graphgod  ","image":"https://pnp.github.io/blog/post/explore-microsoft-365-extensibility-opportunities-with-the/images/thumbnail_image_huecd30bd473a54362c073a3897e42acf3_702294_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-viva-connections-with-john/","tags":[],"title":"Microsoft 365 Developer Podcast - Viva Connections with John Nguyen and Luca Bandinelli"},{"categories":["Microsoft Teams community call"],"contents":"Call summary Latest news from Microsoft engineering on Microsoft Teams updates and community assets.\nIt\u0026rsquo;s time for summer break and for upcoming changes to community call cadence. Sign up for June trainings on Sharing-is-caring. See the new Microsoft 365 Extensibility look book gallery co-developed by Microsoft Teams and SharePoint engineering. Visit the Microsoft Teams samples gallery to get started with Microsoft Teams development. Build your Teams apps fast with yo teams \u0026ndash; go to PnP Teams Quickstart. Build 2021 \u0026ndash; latest news on the Microsoft Teams platform and integrations including: Shared stage, Together Mode, Fluid components, Adaptive Cards, Microsoft Teams Toolkit and Developer Portal. The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call\nActions  Register for Sharing is Caring Events:  [First Time Contributor Session \u0026ndash; ]June 29^th^[ (EMEA, APAC \u0026amp; US friendly times available)] Community Docs Session \u0026ndash; June 23^rd^ PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; June 17^th^  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; June 24^th^ Ask Me Anything \u0026ndash; Teams Dev \u0026ndash; July 13^th^ First Time Presenter \u0026ndash; June 30^th^ More than Code with VSCode \u0026ndash; June 16^th^ Maturity Model Practitioners \u0026ndash; July PnP Office Hours \u0026ndash; 1:1 session - Register PnP Buddy System - Request a Buddy   Call attention to your great work by using the #PnPWeekly on Twitter.   Microsoft Teams Development Samples:https://aka.ms/teams-samples\n Your community is looking for Samples! Please share your good work      Always a highlight to see you here. Looking forward to seeing you in person at an event one day.\n Demos Demos delivered in this session\n  Kudos App sample using Teams Activity Feed API in Microsoft Graph \u0026ndash; showcases how to build a solution leveraging the Teams Activity Feed API for sending notifications to selected users. See how activities (notifications) are gated in the manifest. Create a Kudos app (100 lines code) with appropriate Graph services permissions, layout UI using Fluent UI components, add out-of-box controls from Microsoft Graph Toolkit. Activity feed is now a fully supported workload.   Building a digital asset / document repository management app for Microsoft Teams \u0026ndash; Document manager \u0026ndash; an asset management system sample app that makes use of Teams platform capabilities to simplify searching, retrieving, sharing, contributing, and governing assets. Uses messaging extensions to find documents, task module to upload documents, Graph APIs, and creates awareness of / gains approvals on assets leveraging user specific views in Adaptive Cards. Stores documents awaiting approval in staging folder in library.   Introduction to Microsoft Teams Toolkit v2 \u0026ndash; helps developers create and deploy Teams apps with integrated Identity, access to cloud storage, data from Microsoft Graph, and other services in Azure and M365 with a \u0026ldquo;zero-configuration\u0026rdquo; approach (single-line statements and no side trips to Azure and ADD) to the developer experience. Efficiently configures front-end, back-end, bot at same time. Simplifies creating proof-of-concepts! Get the toolkit through the Extensions Marketplace in VS Code.    Thank you for your work. Samples are often showcased in Demos.\n Topics Topics covered in this call\n  News and updates - Vesa Juvonen (Microsoft) | @vesajuvonen - 3:11\n  Build 2021 Recap on Microsoft Teams platform announcements - 9:15\n  Demo: Kudos App sample using Teams Activity Feed API in Microsoft Graph \u0026ndash; Sébastien Levert (Microsoft) | sebastienlevert - 15:39\n  Demo: Building a digital asset / document repository management app for Microsoft Teams \u0026ndash; Sathya Raveendran (Microsoft) \u0026amp; Arun Kumar Anaparthi (Zen3 Infosolutions) - 30:38\n  Demo: Introduction to Microsoft Teams Toolkit v2 \u0026ndash; Zhenya Savchenko (Microsoft) - 45:27\n   Resources Additional resources around the covered topics and links from the slides.\n  Blog \u0026ndash; Microsoft Graph Mailbag\n  Dev Tool - Microsoft Graph Toolkit   Library - Microsoft Graph JavaScript Client Library   Sample - Kudos App (Teams Activity Feed API)   Blog - Microsoft Graph Mailbag \u0026ndash; Create engaging apps with the Microsoft Teams Activity Feed API   Documentation - Messaging extensions \u0026ndash; Search Commands   Documentation - User Specific Views   Repo - Document Manager   Dev Tools - Microsoft Teams Toolkit for Visual Studio Code   PnP Weekly \u0026ndash; Episode 131 with guest Senior Program Manager Zhenya Savchenko (Microsoft) from the Developer Division of Visual Studio group. He one of the PMs coordinating new Microsoft Teams Toolkit v2 extension for Visual Studio Code. | video | podcast\n  GitHub Codespace - PnP Teams Quickstart | aka.ms/pnp-teams-quickstart\n  Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n   General resources  Controls - Designing your Microsoft Teams app | https://aka.ms/teams/ui/design Viva Connections https://aka.ms/VivaConnections Microsoft Learn - Microsoft Teams development Learning Paths Microsoft Teams Toolkit for Visual Studio Code Microsoft Teams app templates Yo Teams video training package Microsoft 365 Developer videos | aka.ms/m365devyoutube Microsoft 365 community (PnP) videos | aka.ms/m365pnp/videos yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor  Upcoming Calls | Recurrent Invites   Power Apps monthly call \u0026ndash; June 16^th^ at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; June 17^th ^at 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft Identity Platform \u0026ndash; June 17^th^ at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar M365 General Dev call \u0026ndash; June 24^th^ at 7:00 am PDT | https://aka.ms/m365-dev-sig Office add-in monthly call \u0026ndash; July 14^th^ at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; July 8^th^ at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall   Microsoft Teams monthly community calls are targeted at anyone who\u0026rsquo;s interested in Microsoft Teams development topics. This includes Microsoft Teams, Bots, App templates, Samples, and more. Details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls!\n You can download recurrent invite from https://aka.ms/microsoftteamscommunitycall. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 16th of June 2021\n","image":"https://pnp.github.io/blog/microsoft-teams-community-call/microsoft-teams-community-call-june-2021/images/teams-june-15th-recording_huad26f8f2b8826b84f73012d357eb4fda_565654_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-teams-community-call/microsoft-teams-community-call-june-2021/","tags":[],"title":"Microsoft Teams Community Call - June 2021"},{"categories":["Power Apps community call"],"contents":" Call summary Topics covered in this month\u0026rsquo;s community call include 3 demos - COE in Dataverse for Teams in the Power Platform, Planner Gantt chart in Power Apps, and Create a digital escape room with Power Apps. Also, Recent Power Apps News and Community Contributions and Latest on PnP Power Platform Samples Contributions. Demo Extravaganza 2021. Entries accepted now, Finalist voting starts \u0026ndash; June 1st, Finalist voting ends \u0026ndash; June 30th, Finals / Winner(s) to be Announced \u0026ndash; July 21, 2021 at 08:00 PT. This session included Q\u0026amp;A in chat. The call was hosted by Todd Baginski (Canviz). Demo presenters are Krishna Vandanapu, Terho Antila and May Alhajri. This call was recorded on June 16, 2021. Thank for attending the call or viewing it on demand. Demos   COE in Dataverse for Teams in the Power Platform - tips on configuring and using the Center of Excellence (CoE) Management/Governance tool that runs on top of Dataverse for Teams and is used for maintaining and supporting the Power Platform. Hear about and see the 5 major components in CoE Dataverse for Teams followed by the presenter\u0026rsquo;s favorite apps \u0026amp; flows and the advantages and limitations of the tool.   Planner Gantt chart in Power Apps - a Power Apps canvas app that builds a Gantt chart out of the tasks stored in Microsoft Planner. Use in Microsoft 365 environment with Planner connectors and no premium licensing required. Hear about lessons learned in development and capabilities yet to implement. UI display\u0026rsquo;s all Planner Plans available to it, multiple plans may be viewed on Gantt chart at one time.   Create a digital escape room with Power Apps \u0026ndash; the user experience: Participants need to solve problems cast about the digital room to get out of the room \u0026ndash; open the door. Presenter defines process for app design - create story, clues, images (build the room), locks, and then build app. Experience the app then go behind scenes to step through components used (button, label, pop up message, collections) for the app.   Recent News \u0026amp; Cool Stuff   Power Apps Demo Extravaganza 2021- https://aka.ms/PowerAppsDemoExtravaganza\nPower Apps for Kids - www.powerapps4kids.com\nComponents and Power Apps Component Controls is GA!! - https://aka.ms/PCFGA Houston User Group - User Groups and Custom Connectors 6/16/2021 4PM -https://aka.ms/HoustonPPUG   Actions  View and Vote on Demo Extravaganza entries  Last chance to submit entries for Demo Extravaganza 2021 | https://aka.ms/PowerAppsDemoExtravaganza Join us for our next call: July 21, 2021 at 08:00am PDT | https://aka.ms/powerappscommunitycall  Call Agenda  COE in Dataverse for Teams in the Power Platform - Krishna Vandanapu | @KrishnaShp - 3:50 Planner Gantt chart in Power Apps - Terho Antila | @terhoantila - 26:05 Create a digital escape room with Power Apps - May Alhajri | @MayAlhajri2 - 42:48 Recent Power Apps News and Community Contributions \u0026ndash; Charles Sterling (Microsoft) | @chass - 63:49 Latest PnP Power Apps Samples \u0026ndash; April Dunnam (Microsoft) | @aprildunnam - 65:02  Referenced in this session   Repo - Microsoft Power Platform Center of Excellence (CoE) Starter Kit   Video - CoE Starter kit for the Power Platform in Dataverse for Teams environment   Blog Post - Microsoft Planner Gantt Chart with Power Apps \u0026ndash; download your own!   Repo - Planner Gantt Chart introduction\n  Learn more  See the full blog post for this call on the Tech Community Blog - https://aka.ms/m365pnp/community/blog Microsoft\u0026rsquo;s Power Platform website Power Apps Responsive Design - https://bit.ly/responsivepowerapps  Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - https://aka.ms/PowerAppsCommunitySamples Power Apps Community Videos -https://aka.ms/PowerAppsCommunityVideos Power Addicts Hangout - https://wearepoweraddicts.com #LessCodeMorePower Video Series - https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Share more - draw attention to your great work - #PowerAppsCC  Stay connected  Twitter: https://twitter.com/MSPowerPlat Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365DevYouTube​ Blogs - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/powerappscommunitycall  ","image":"https://pnp.github.io/blog/microsoft-teams-community-call/microsoft-teams-community-call-june-2021/images/teams-june-15th-recording_huad26f8f2b8826b84f73012d357eb4fda_565654_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-june-2021/","tags":[],"title":"Power Apps Community Call -- June 2021"},{"categories":["Office add-in developer community call"],"contents":"Call summary This month\u0026rsquo;s community call features presentations - Excel v1.13 API updates (highlights 2 new APIs insertWorksheetFromBase64 and onFormulaChanged event), Outlook Add-ins - Build 2021 recap (GA for Event- Driven Add-in with onCompose Event and for Mailbox 1.10 for Outlook), New Email Signature Add-in (Exclaimer\u0026rsquo;s Outlook Add-in product uses latest Outlook Add-ins capabilities), and PnP: Insert template from external Excel file (insert external Excel file into the open Excel worksheet and populate it with JSON data). This month\u0026rsquo;s Community spotlight recognizes MVPs Damien Bird (DamoBird365) and Maarten van Stam. Thank you! Q\u0026amp;A in chat throughout call. The call was hosted by David Chesnut (Microsoft) | @davidchesnut. Microsoft Presenters: Raymond Lu and Juan Balmori | @juaneloBalmori. Special guest presenters James Wayne and Phillip Vetter from Exclaimer Cloud. Recorded on June 9, 2021.\nAgenda June\u0026rsquo;s call, hosted by David Chesnut, featured the following presenters and topics:\n Excel API updates \u0026ndash; Raymond Lu (Microsoft) - 1:31 Outlook API updates - Juan Balmori (Microsoft) | @juaneloBalmori - 13:17 New Email Signature Add-in - James Wayne (Exclaimer Cloud) - 21:27 PnP: Insert template from external Excel file - David Chesnut (Microsoft) | @davidchesnut - 37:12  Q\u0026amp;A (Question \u0026amp; Answers) Unfortunately, we had some issues with the chat during the call. We apologize to folks who were not able to ask a question. If you have a question, you can reach out to us by using our short survey form. We\u0026rsquo;ll address any questions in the form during the next call. Can you fix Teams add-ins functionality for online meetings? Association between Outlook events and online meetings is non-existent. The Teams SDK currently works online with single instance meetings, but there is no way to associate custom data with event instance and event series. For example, the SDK does not let you get meeting instance start time.\nWe can help with Office Add-ins development, but this is a good question for Microsoft Teams. We recommend asking this question on office-teams-app-dev - Microsoft Q\u0026amp;A. Thanks! Are there plans to provide access to the Outlook auto-complete list via office-js? The list is available in the UI on mobile, OWA and desktop clients while entering recipients. It would be useful for us to be able to access it (or a list of commonly used email addresses for the user) via office-js to check the entered recipients.\nThere are no plans at this time, but this sounds like a great idea! Please create a feature request for this on our ideas page at https://aka.ms/m365dev-suggestions. Thanks!\nThere are many videos and articles about Single sign-on for Office Add-ins. The Yeoman generator uses the NPM package \u0026ldquo;msal\u0026rdquo; but there is also an NPM package called \u0026ldquo;@azure/msal-browser\u0026rdquo; and another one called \u0026ldquo;@azure/msal-react\u0026rdquo;. Can these all be used inside an Office Add-in? Which ones are the recommended ones to use?\n In general you can use most web libraries with an Office Add-in. For SSO you don\u0026rsquo;t need an authentication library to get the user identity token, since you just call getAccessToken(). However, you should implement a fallback sign-in dialog for scenarios where SSO will fail. In these cases using an authentication library makes the process easier. There is no requirement to use MSAL, but if you do, you should use the official MSAL package for the framework/language of choice as recommended by Microsoft Azure. For more information see Enable single sign-on for Office Add-ins - Office Add-ins | Microsoft Docs\nI am attempting to implement the shared JavaScript runtime. However, I get an error when adding the \u0026lt;Runtimes\u0026gt; section. The error is: The element \u0026lsquo;Host\u0026rsquo; in namespace \u0026lsquo;http://schemas.microsoft.com/office/taskpaneappversionoverrides\u0026rsquo; has invalid child element \u0026lsquo;Runtimes\u0026rsquo; in namespace \u0026lsquo;http://schemas.microsoft.com/office/taskpaneappversionoverrides\u0026rsquo;. List of possible elements expected: \u0026lsquo;AllFormFactors, DesktopFormFactor\u0026rsquo; in namespace \u0026lsquo;http://schemas.microsoft.com/office/taskpaneappversionoverrides\u0026rsquo;.\nThis error can occur if the \u0026lt;Runtimes\u0026gt; section is not in the expected location. Be sure to put the \u0026lt;Runtimes\u0026gt; section just below the \u0026lt;Host\u0026gt; tag as follows: \u0026lt;Hosts\u0026gt;\n \u0026lt;Host xsi:type=\u0026ldquo;Workbook\u0026rdquo;\u0026gt;\n \u0026lt;Runtimes\u0026gt;\n \u0026lt;Runtime resid=\u0026ldquo;Taskpane.Url\u0026rdquo; lifetime=\u0026ldquo;long\u0026rdquo; /\u0026gt;\n \u0026lt;/Runtimes\u0026gt; In general if you run into a manifest error, you can compare the manifest to one that works and look for any significant differences. For example you could compare against this PnP sample manifest that uses a shared runtime.\nYou can also run manifest validation which can provide more information about the error.\nResources Excel API updates  insertWorksheetsFromBase64 - Work with workbooks using the Excel JavaScript API - Office Add-ins | Microsoft Docs onFormulaChanged - Work with worksheets using the Excel JavaScript API - Office Add-ins | Microsoft Docs getDirectDependents - Work with formula precedents and dependents using the Excel JavaScript API - Office Add-ins | Micros... Workbook.onActivated - Work with workbooks using the Excel JavaScript API - Office Add-ins | Microsoft Docs Table.resize - Work with tables using the Excel JavaScript API - Office Add-ins | Microsoft Docs  Outlook add-ins Build conference recap  Try out event-based activation - https://aka.ms/LearnEventBasedAddIns  PnP: Insert an external Excel file and populate it with JSON data  PnP sample: Insert an external Excel file and populate it with JSON data  Office Add-ins community call  Recurring, monthly community call calendar invite Community call topic requests and questions Community call recordings on the YouTube Office Dev channel  Office Add-ins feedback  Technical questions \u0026ndash; Microsoft Q\u0026amp;A (office-js-dev), (office-addins-dev) Issues \u0026ndash; GitHub  Recommendations and suggestions \u0026ndash; Microsoft 365 Developer Platform ideas  The next Office Add-ins community call is on Wednesday, July 14, 2021 at 8:00AM PDT. Get the calendar invite at https://aka.ms/officeaddinscommunitycall.\n","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-june-2021/images/office-add-ins-call-recording-9th-june_huefcd13a3cf8d8213507dabf01b76e088_390148_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-june-2021/","tags":[],"title":"Office Add-ins community call -- June 2021"},{"categories":["Microsoft 365 developer podcast"],"contents":"Ayca Bas @aycabas returns to talk with Jeremy and Paul about updates to change notifications in Microsoft Graph.\nListen to the show here Azure Event Hub and Rich Notifications with Ayca Bas (m365devpodcast.com)\nLinks from the show  Get Microsoft Graph change notifications delivered through Azure Event Hubs Set up change notifications that include resource data Build session recording  Microsoft News Automate and manage Azure AD tasks at scale with the Microsoft Graph PowerShell SDK\nApplication Insights Azure DevOps Release Annotations Implementation Update\nMicrosoft Teams: Change notifications extended for federated chats\nMicrosoft Build 2021\n Visual Studio Code at Build 2021 Microsoft 365 Developer playlist All Sessions  Join us to see what\u0026rsquo;s next for Windows\nCommunity Links  PnP Modern Search web parts v4.2.0 released! List Expiring Application Credentials - Graph.Community Samples  ","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-june-2021/images/office-add-ins-call-recording-9th-june_huefcd13a3cf8d8213507dabf01b76e088_390148_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/m365-dev-podcast/microsoft-365-developer-podcast-azure-event-hub-and-rich/","tags":[],"title":"Microsoft 365 Developer Podcast - Azure Event Hub and Rich Notifications with Ayca Bas"},{"categories":[],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by the Senior Program Manager Zhenya Savchenko (Microsoft) from the Developer Division of Visual Studio group. He one of the PMs coordinating new Microsoft Teams Toolkit v2 extension for Visual Studio Code. Topics discussed in this session \u0026ndash; the Visual Studio developer tools group\u0026rsquo;s role in the development of the Microsoft Teams Toolkit, ideas for spending $5B to make Microsoft products better for developers, next steps for Teams Toolkit, and wrap up with each participant\u0026rsquo;s focus for the week.  Covering also 22 new articles from Microsoft and the Community from past week!  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n  [This episode was recorded on Monday, June 14, 2021.]\n  Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com.   These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot;  Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community! Microsoft articles   What\u0026rsquo;s new for Teams phones | June 2021 - Microsoft Reconnect and have a hybrid coffee break with Starbucks and Microsoft Teams - Microsoft Introducing Microsoft Dictation for iOS - Dan Parish (Microsoft)   Community articles   Microsoft Graph Mailbag \u0026ndash; A deeper look into the Microsoft Graph PowerShell SDK - Matt Krause (Microsoft) | @mattckrause Microsoft 365 PnP Community \u0026ndash; June 2021 update - Vesa Juvonen (Microsoft) | @vesajuvonen How to use fluent UI react persona control in SPFx? - Chandani Prajapati | @Chandani_SPD What kind of apps can you build on Microsoft 365? - Waldek Mastykarz (Microsoft) | @waldekm Use PnP PowerShell to add a document library web part to a page (and only show a specific folder) - Marijn Somers | @marijnsomers Preconsent multiple scopes with Microsoft Graph Toolkit - Waldek Mastykarz (Microsoft) | @waldekm Which permissions should you preconsent for your app using Microsoft Graph Toolkit - Waldek Mastykarz (Microsoft) | @waldekm Updated script to re-index user profiles for search - Mikael Svenson (Microsoft) | @mikaelsvenson Get started with child flows in Power Automate - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Simplify taking meeting notes using native OneNote/Outlook integration - Cameron Dwyer (OnePlace Solutions) | @CameronDwyer How-to: Call SharePoint REST API with application permissions from Azure Logic App with Azure Key Va... - Sergei Sergeev (Mastaq) | @sergeev_srg Azure Event Hub and Rich Notifications with Ayca Bas - Jeremy Thake (Microsoft) | @jthake, Paul Schaeflein (Addin365) | @paulschaeflein and Ayca Bas (Microsoft) | @aycabs HTWOO - release v0.3.0 - Stefan Bauer (N8D) | @StfBauer Export / Import from Excel file in SharePoint - Gaurav Goyal (eWorkplace Apps Pvt. Ltd.) | @GauravGoyal PnPjs - release 2.6.0 - Julie Turner (Sympraxis Consulting) | @jfj1997 Migrate Files and Folder to SharePoint Online Using Microsoft 365 CLI - Dipen Shah (Rapid Circle) | @Dips_365 Dataverse for Teams Profile Plus Power Apps Template - April Dunnam (Microsoft) | @aprildunnam Episode #158 - Microsoft Graph Toolkit File and File List Components - Paolo Pialorsi (PiaSys) | @PaoloPia Edit a SharePoint page or news post in Microsoft Teams - Daniel Glenn (InfoWorks, Inc) | @DanielGlenn, Darrell Webster (Modern Workplace Change) | @darrellaas   Additional resources   Microsoft Teams Toolkit for Visual Studio Code - https://aka.ms/teams-toolkit  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp   If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-131/images/Thumb-Ep131_hu23e849abb47e0427d119e7572f3da50c_505147_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-131/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 131"},{"categories":["Community post"],"contents":"Introduction Send an HTTP request to SharePoint action is used to execute REST queries. As we know when we want to perform any operations in SharePoint then we are using APIs so in the flow, we can use fro the same requirements. For more details refer to working with send sp http request.\nImplementation We will create a SharePoint list and we will perform Create, Read, Update and Delete operations. we will create an instant flow. let\u0026rsquo;s see step-by-step implementation. 1. Go to Power Automate \u0026gt; My flows \u0026gt; select New flow \u0026gt; Select instant cloud flow ![STep 1.png](images/STep 1.png) 2. Read items from To Do list. (Read Operation) So to perform the read operation we will use the GET method. Add Send an HTTP request to SharePoint action from + icon and here we need Site address, Method, and URI. Site Address: Select the Site URL in which we want to perform actions\nMethod: GET\nUri: _api/web/lists/getbytitle(\u0026lsquo;To Do\u0026rsquo;)/items\nHeaders***:** Not required* You can also add URI in a variable because this we will need for all the actions. ![Read Items.png](images/Read Items.png) If it will successfully execute it returns statusCode 200 and records in the body if records are available. ![Read Items OP.png](images/Read Items OP.png) 3. Create item in To Do list (Create Operation) Site Address: Select the Site URL in which we want to perform actions\nMethod: POST\nUri: _api/web/lists/getbytitle(\u0026lsquo;To Do\u0026rsquo;)/items\nHeaders***:** Need JSON object*\n* {\n\u0026ldquo;content-type\u0026rdquo;: \u0026ldquo;application/json;odata=verbose\u0026rdquo;,\n\u0026ldquo;accept\u0026rdquo;: \u0026ldquo;application/json;odata=verbose\u0026rdquo;\n}*\nBody : RequestBody\n* {\n\u0026ldquo;__metadata\u0026rdquo;: {\n\u0026ldquo;type\u0026rdquo;: \u0026ldquo;SP.Data.To_x0020_DoListItem\u0026rdquo;\n},\n\u0026ldquo;Title\u0026rdquo;: \u0026ldquo;Demo Task1\u0026rdquo;,\n\u0026ldquo;Status\u0026rdquo;: \u0026ldquo;Started\u0026rdquo;\n}* In the request body, we need type so now the question is how to get type? It is SP.Data.{ListName}ListItem (replace {ListName} with list name. if space in between list name then it will be separated with _x0020_). ![Create item.png](images/Create item.png) If it will successfully execute it returns statusCode 201. ![Create item op.png](images/Create item op.png) 4. Update item in To Do list (Update Operation) Site Address: Select the Site URL in which we want to perform actions\nMethod: PATCH\nUri: *_api/web/lists/getbytitle(\u0026lsquo;To Do\u0026rsquo;)/items(itemID) *\nHeaders***: ***\n* {\n\u0026ldquo;content-type\u0026rdquo;: \u0026ldquo;application/json;odata=verbose\u0026rdquo;,\n\u0026ldquo;IF-MATCH\u0026rdquo;: \u0026ldquo;*\u0026rdquo;\n}*\nBody : RequestBody\n* {\n\u0026ldquo;__metadata\u0026rdquo;: {\n\u0026ldquo;type\u0026rdquo;: \u0026ldquo;SP.Data.To_x0020_DoListItem\u0026rdquo;\n},\n\u0026ldquo;Title\u0026rdquo;: \u0026ldquo;Task1\u0026rdquo;,\n}*\n** **\n**![Update Item.png](images/Update Item.png) 5. Delete item in To Do list (Delete Operation) Site Address: Select the Site URL in which we want to perform actions\nMethod: DELETE\nUri: *_api/web/lists/getbytitle(\u0026lsquo;To Do\u0026rsquo;)/items(itemID) *\nHeaders\n{ \\ \u0026#34;content-type\u0026#34;: \u0026#34;application/json;odata=verbose\u0026#34;,\\ \u0026#34;IF-MATCH\u0026#34;: \u0026#34;\\*\u0026#34;,\\ \u0026#34;X-HTTP-Method\u0026#34;: \u0026#34;DELETE \u0026#34;\\ } Body: Not required *![Delete ietm.png](images/Delete ietm.png)\nSummary In this article, we have seen the step-by-step implementation of CRUD operation of SharePoint list items using Send an HTTP request to SharePoint in Power automate. Hope this helps! Sharing is caring!\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-131/images/Thumb-Ep131_hu23e849abb47e0427d119e7572f3da50c_505147_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-use-send-an-http-request-to-sharepoint-in-power-automate/","tags":["SharePoint","Power Automate"],"title":"How to use Send an HTTP request to SharePoint in Power Automate?"},{"categories":["CLI for Microsoft 365"],"contents":"Using the CLI for Microsoft 365, you can manage your Microsoft 365 tenant and SharePoint Framework projects on any platform, including running it in a container. By running the CLI for Microsoft 365 in a container you free yourself from installing it locally. Leveraging a Logic App, Azure Container Instances and the CLI for Microsoft 365 you can automate reporting and maintenance of your tenant. The goal is thus to generate some form of reporting on our tenant. There are a lot of sample scripts available, but we will start simple by reporting all deleted Office 365 Groups (this will include deleted Teams). Executing a report like that with the CLI for Microsoft 365 would be just a single line: m365 aad o365group recyclebinitem list  To achieve our reporting scenario we need the a few other components as well:\n An Azure resource group to group our resources together  A managed identity to make sure we can access our tenant securely; A Logic App to orchestrate everything; Azure Container Instances to execute our script; A Git repo that contains the script we want to execute and pull in;  If you are new to running Azure Containers and using Logic Apps there is a great walkthrough on running sentiment analysis with Azure Container Instances. But let us get started with the first step.\nCreate an Azure Resource Group\nTo create a new Azure resource group simply log in to the Azure Portal and create a new resource group using the create a resource button. For demo purposes I called my resource group cli-test.\nCreate a Managed Identity\nIn our resource group we can create a new user managed identity that we can use. Select the add button and search for User Assigned Managed Identity to create the new managed identity. Simply provide a name and create your new managed identity.   Once the managed identity is created it still need permissions to do anything. Just creating it is not enough. In order to use the managed identity we need to make sure that it has the correct permissions. The CLI for Microsoft 365 docs explain in details what the steps are required. For our reporting scenario\u0026rsquo;s we need support to query the Graph and SharePoint. You can use the CLI for Microsoft 365 to easily hand out the permissions you need with the following snippet: m365 aad approleassignment add --displayName \u0026#34;ma-cli-test\u0026#34; --resource \u0026#34;Microsoft Graph\u0026#34; --scope \u0026#34;Sites.Read.All\u0026#34; m365 aad approleassignment add --displayName \u0026#34;ma-cli-test\u0026#34; --resource \u0026#34;Office 365 SharePoint Online\u0026#34; --scope \u0026#34;Sites.Manage.All\u0026#34; m365 aad approleassignment add --displayName \u0026#34;ma-cli-test\u0026#34; --resource \u0026#34;Microsoft Graph\u0026#34; --scope \u0026#34;Group.Read.All\u0026#34;  Now all we need is the GUID that identifies the managed identity. Navigate to https://portal.azure.com select Azure Active Directory and pick Enterprise Applications. In the Application Filter filter on Managed Identities and make sure to pick the Application Id of your newly created managed identity.   Store it somewhere save as we need it at a later moment. Create a Logic App\nAs we need a Logic App to orchestrate the execution of our script the first step is to create one. You can do so in any resouce group, or create a new one. There are no requirements for your Logic App. So we pick a Logic App (Consumption) and provide a resource group and name. Once the Logic App is created navigate to it and select the edit button. Once in edit mode you are free to pick your trigger. You can pick any trigger you like, for demo purposes you could connect it to a list in SharePoint Online, or just use a HTTP trigger. The next step is to create two parameters, containerGroup and containerName. Both will be used more than once so it helps to create them parameters, but it is not required. For demo purposes I added a small snippet as a postfix to identify when it was created: formatDateTime(utcNow(),\u0026#39;MM-dd-yyyy\u0026#39;)  This helps when debugging as you can always identify when something was created. The next step is to add a new action of type Create or update a container group. It is a pretty complex action with a lot of parameters to get right, so it is worth to pay close attention when typing:\n          Option Value Comments   Subscription id Any subscription you like I suggest putting it all in the same subscription.   Resource Group Any resource group you like I suggest putting it all in the same resource group.   Container Group Name @{variables(\u0026lsquo;containerGroup\u0026rsquo;)} Parameter for ease of use   Container Group Location Any location is supported    Container Name - 1 @{variables(\u0026lsquo;containerName\u0026rsquo;)} Parameter for ease of use   Container Image - 1 m365pnp/cli-microsoft365:latest    Container Resource Requests CPU - 1 1 If you are planning to run complex or large scripts it might be worth to add additional resources.   Container Resource Requests Memory - 1 1.5 If you are planning to run complex or large scripts it might be worth to add additional resources.   Container Command Segment - 1 bash You cannot execute multiple commands in a single line. You will need to add each statement to a segment.   Container Command Segment - 2 /mnt/repo1/test.sh The value of the mount path and script name are dependant on settings below.   Container Volume Mount Path - 1 /mnt/repo1    Container Volume Mount Name - 1 gitrepo The name for the mount path must match the volume name specified later.   Volume Git Repo Volume Repository - 1 https://github.com/appieschot/cli-test.git Any public repository will do.   Volume Name - 1 gitrepo    ContainerGroup Managed Identity User Assigned Identities {\u0026quot;/subscriptions/[guid]/resourcegroups/[rg-name]/providers/microsoft.managedidentity/userassignedidentities/[identity-name]\u0026quot;: {}} Make sure to update the bold parts.   ContainerGroup Restart Policy OnFailure Make sure the container is restarted if there are problems.    This action will thus create a new container instance, pulls in the CLI for Microsoft 365 image and make sures that a git repo with a script is pulled in. And best of all; the container created will be running with the managed identity you have specified. Now all we need to do is to capture the output of our container instance and clean up. To do so add a action of type until. Do not configure any requirements yet and simply add an action of type Get properties of a container to retrieve the latest status, use the containerGroup parameter to make sure you get the correct container. Put in the Container Group name as a parameter and check for status Succeeded of the untill action. Add a new condition and check there for the same status. In the true statement we can implement the logic for retrieving our data. You can use the Get logs from a container instance and e-mail the output to yourself.    In the false branche add an wait action that waits for 10 or 15 seconds. That will make sure it takes a while before it retries checking the status to see if it is finished. Create your script\nThe last part is to make sure that the test.sh file referred to as being mounted in your container actually exists. It should contain all logic to run your script, but the first step is to authenticate. In order to authenticate with the managed identity we need to tell the CLI for Microsoft 365 to do so. By specifying the login using the authType parameter we can pass the GUID of our managed identity. The CLI then knows to use the managed identity of the container it is running in and you are done. m365 login --authType identity --userName 00000000-0000-0000-0000-000000000000 m365 aad o365group recyclebinitem list --output json  Full Logic App\nOnce all these components are in place you can simply run any script in the container. Just make sure you have the appropriate permissions assigned to the Manged Identity! PnP Recording\nIf you are looking at a video walkthrough you can checkout the PnP recording. It highlights the results and steps taken to achieve basic reporting on your tenant. ","image":"https://pnp.github.io/blog/post/run-reports-on-your-tenant-using-the-cli-for-microsoft-and-azure/images/cli-ma_hu3ab7fa70767a19ce15ff6e1c4ffd12f2_159114_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/run-reports-on-your-tenant-using-the-cli-for-microsoft-and-azure/","tags":["CLI for Microsoft 365"],"title":"Run reports on your tenant using the CLI for Microsoft and Azure Container Instances"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Recording of the Microsoft 365 \u0026ndash; General M365 development Special Interest Group (SIG) community call from June 10, 2021.\nCall summary Summer break and community call schedule updates reviewed. You are invited to join the Viva Connections private preview! Preview the new Microsoft 365 Extensibility look book gallery. Looking to get started with Microsoft Teams development? Don\u0026rsquo;t miss out our Teams samples gallery, and the new Microsoft 365 tenant \u0026ndash; script samples gallery - s*cripts for PowerShell and CLIs. * Sign up and attend one of a growing list of events hosted by Sharing is Caring this month. Check out the new PnP Teams Quickstart. Recent PnP project releases include: PnP Core SDK v1.2.0 GA, PnP Framework v1.5.0 GA, PnP PowerShell v1.6.0 GA, Yo teams - generator-teams v3.2.0 GA, yoteams-build-core V1.2.0 GA + v1.2.1 Preview, yoteams-deploy v1.0.0 GA and finally component updates to Microsoft Graph Toolkit (MGT) v.2.2.0 GA. Open-source project status: (Bold indicates new this call)\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.5.0 GA Version 1.6.0 \u0026ndash; Summer 2021 PnP .NET Libraries - PnP Core SDK v1.2.0 GA Version 1.3.0 \u0026ndash; Summer 2021 PnP PowerShell v1.6.0 GA Yo teams - generator-teams v3.2.0 GA Yo teams - yoteams-build-core v1.2.0 GA, v1.2.1 Preview Yo teams \u0026ndash; yoteams-deploy v1.1.0 GA Yo teams - msteams-react-base-component v3.1.0 Microsoft Graph Toolkit (MGT) v2.2.0 GA Regular component updates\n Additionally, 1 new Teams samples were delivered in the last 2 weeks. The host of this call was Vesa Juvonen (Microsoft) |@vesajuvonen. Q\u0026amp;A takes place in chat throughout the call.\n  Join on the Viva Connections private preview! | aka.ms/viva/connections/preview/register\n  Feedback wanted: Regarding PnP PowerShell \u0026ndash; \u0026ldquo;What if we did not return classic CSOM objects from the cmdlets?\u0026rdquo; Comments to: @erwinvanhunen.   Save the date to the Microsoft Teams monthly community call on the 15th of June @ 8 AM PT | https://aka.ms/microsoftteamscommunitycall   Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; June 29th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; June 23rd  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; June 17th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; June 24th Ask Me Anything \u0026ndash; Teams Dev - July First Time Presenter \u0026ndash; June 30th More than Code with VSCode \u0026ndash; June 16th Maturity Model Practitioners \u0026ndash; June 15th PnP Office Hours \u0026ndash; 1:1 session - Register    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Configure Teams applications with Azure App Configuration - Markus Moeller | @Moeller2_0 Thank you for joining for today\u0026rsquo;s PnP Community call. The auditorium was packed.   Demos Demos delivered in this session\n  Remote Event Receiver Manager solution in SPFx for managing list events -\nA very simple web part that lets users view, add and delete remote event receivers in lists. Review what is a Remote Event Receiver, Strengths and Weaknesses, and when/not to consider using Power Automate to accomplish task. Use the sample to quickly identify Event Receivers in lists across a tenant without having to connect to PowerShell or go to a REST API.\n  Preview on list formatting demo site template \u0026ndash; as an alternative to going to GitHub to pull samples, the Community team is experimenting with an additional layout option \u0026ndash; List Formatting Sample Showcase pages that display fully functional samples Power Users can manipulate, drill in to view/customize data, and get additional details in GitHub - from within a browser! You may even adopt this formatting in your own tenant. Available soon.   Getting started on using Time Clock Microsoft Graph APIs to clock in and out of a shift \u0026ndash; the time tracking component (Time Clock APIs) in the Teams Shifts Application provides clock in / out, timesheet edit and more capabilities that auto-syncs to Payroll / T\u0026amp;A apps like Cronos, Workday, ADP, Ceridian SAP. Call the APIs to integrate with your customer\u0026rsquo;s payroll and T\u0026amp;A systems using Time Clock APIs (beta). Supports CRUD operations and WebHooks. Request handling guidance in the documentation.\n   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  PnP .NET library updates - Bert Jansen (Microsoft) | @O365bert - 10:31\n  PnP PowerShell updates -Erwin van Hunen (Valo Intranet) | @erwinvanhunen - 12:59\n  yo Teams updates - Wictor Wilén (Avanade) | @wictor - 14:23\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) | beth-panx - 16:42\n  Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German - 18:22\n  **Demo: ** Remote Event Receiver Manager solution in SPFx for managing list events \u0026ndash; Dan Toft (Evobis ApS) | @tanddant - 20:22\n  **Demo: ** Preview on list formatting demo site template \u0026ndash; Chris Kent (DMI) | @theChrisKent - 31:32\n  **Demo: ** Getting started on using Time Clock Microsoft Graph APIs to clock in and out of a shift \u0026ndash; Aarthi Kumar (Microsoft) [-][ 41:20][ ]\n  Resources Additional resources around the covered topics and links from the slides.\n  Samples - Remote Event Receiver Manager   Documentation - Use remote event receivers in SharePoint\n  Repo - SharePoint List Formatting Samples   GitHub - SharePoint List Formatting Samples\n  Documentation - shift resource type   Documentation - timecard resource type   Documentation \u0026ndash; Webhook to Shifts changes   PnP Weekly \u0026ndash; Episode 130 with the Software Engineer behind the Microsoft Graph Toolkit, Nikola Metulev (Microsoft) | @metulev. | video | podcast\n  [Microsoft 365 tenant \u0026ndash; ]Script Samples Gallery[ | aka.ms/script-samples]\n  PnP Teams Quickstart | aka.ms/pnp-teams-quickstart\n  Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  General resources  Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner eloper program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Microsoft Teams monthly call \u0026ndash; June 15th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall Power Apps monthly call \u0026ndash; June 16th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; June 17that 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft Identity Platform \u0026ndash; June 17th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar M365 General Dev call \u0026ndash; June 24th at 7:00 am PDT | https://aka.ms/m365-dev-sig Office add-in monthly call \u0026ndash; July 14th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; [July 8]th[ at 9:00 am PDT | ]https://aka.ms/adaptivecardscommunitycall General Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;   Microsoft 365 PnP team, Microsoft - 11th of June 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-10th-of-june/images/m365-general-10th-june-recording_huccd06de1f41502d466e56656e7e37cc5_290713_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-10th-of-june/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 10th of June, 2021"},{"categories":["Community post"],"contents":"As a non-developer (please read this as a disclaimer) I still try to make my life as easy as possible (yes, I am that lazy). PnP PowerShell is a big component of that goal. A customer had the requirement to create a page for each of their 86 folders in a document library so they could add more information on those topics. That meant creating 86 pages, each with a document library web part on it that showed a specific folder. No chance I was going to do that manually!\nCreating the page wasn\u0026rsquo;t really difficult. Showing the document library and just the items in the folder was the hard part that I couldn\u0026rsquo;t find any examples of. The idea of this blog post is to help future people like me to just copy/paste the code. The goal We started with a document library containing 86 folders, each having a few documents. The goal was to create 86 pages, with each page showing a block of text on the left and the document library web part showing only the files from that folder.\nHow to do this in the user interface Using the user interface, following steps were required:\n Create a new page (with the same name as the folder) Add a section to the page with 2 columns Add a text web part to the left column Add a document library web part to the right column As a subrequirement, only show the files from the necessary folder. This can be set up from the web part properties     That would definitely be a lot of work to do manually, so I decided that PnP PowerShell needed to come to the rescue.\nThe code Lets dig in to the code. I imagine that you have already dabbled with PnP PowerShell and I will not explain how to install and configure it to run.\nConnect-PnPOnline -Url https://yourtenant.sharepoint.com/sites/thesite/ -UseWebLogin First we need to connect to the site. Replace the url with the correct url of your site. I am using -UseWebLogin in this example because I am using 2factor authentication.\nCreate the page First thing to do is to create the page, using the Add-PnPClientSidePage command. I am using the $name variable here to give it a name.\nAdd-PnPClientSidePage -Name $name -LayoutType Article -HeaderLayoutType NoImage -CommentsEnabled:$false Disabling the comments section on a modern SharePoint Page\nI couldn\u0026rsquo;t figure out how to disable the comments section on the modern client page. I tried setting it to false, or 0, but that didn\u0026rsquo;t work.\nThe correct way to do is to use:\n-CommentsEnabled:$false\nAdding sections to the page To add a new section to the page, I am using the Add-PnPClientSidePageSection command. I can just add a TwoColumn section on the page.\nAdd-PnPClientSidePageSection -Page $name -SectionTemplate TwoColumn -Order 1 Adding a text editor web part Adding a text editor is super easy, just use the Add-PnPClientSideText command. Don\u0026rsquo;t forget to add some text or it will fail.\nAdd-PnPClientSideText -Page $name -Section 1 -Column 1 -Text \u0026#34; \u0026#34; The hard part: adding an existing document library as a web part to the page This was the easy bit, in my opinion. Adding a document library to a page is surprisingly hard in PnP PowerShell (unless I am missing something big.. in that case please call me out on this!)\nWhat you need to do, is to use theAdd-PnPClientSideWebPart command. With this command you can add all kinds of webparts to the page. Document library isn\u0026rsquo;t one of them.\nYou need to add a List webparttype, and in the WebpartProperties you need to mention that it is a document library AND what the ID is.\nAdd-PnPClientSideWebPart -Page $name -DefaultWebPartType List -Section 1 -Column 2 -WebPartProperties @{isDocumentLibrary=\u0026#34;true\u0026#34;; selectedListId=\u0026#34;1fa1fb45-e53b-4ea1-9325-ddca7afe986e\u0026#34;;} Where can I find the SharePoint document library Id ? I didn\u0026rsquo;t have a clue how to get this Id via code, so I resorted to the UI: If you go to the library settings, the document library Id is shown in the url:\n   Just cut out the %7B in the front, and the %7D on the back. In this example, the document library Id is 4683b239-caf6-40a3-96c4-a02dedfa3418.\nBonus: Only show a specific folder from the document library I couldn\u0026rsquo;t figure out how to show only documents from a specific folder. Doing this in the UI is supereasy. But there wasn\u0026rsquo;t any example code out there. So here it is:\nIn the WebPartProperties, add selectedFolderPath=\u0026quot;/yourfoldername\u0026quot;;\nAdd-PnPClientSideWebPart -Page $name -DefaultWebPartType List -Section 1 -Column 2 -WebPartProperties @{isDocumentLibrary=\u0026#34;true\u0026#34;; selectedListId=\u0026#34;1fa1fb45-e53b-4ea1-9325-ddca7afe986e\u0026#34;; selectedFolderPath=\u0026#34;/$name\u0026#34;;} Bonus 2: hide the command bar on the SharePoint Document Library Webpart In the UI, there is a way to simply hide the command bar. Because we are showing this information in a nice looking page, there is no need for all that extra fluff of \u0026ldquo;new\u0026rdquo;, \u0026ldquo;upload\u0026rdquo; and so on.\nIn the same way as showing just files from a specific folder, you can use the hideCommandBar=\u0026ldquo;false\u0026rdquo;; in the WebPartProperties:\nAdd-PnPClientSideWebPart -Page $name -DefaultWebPartType List -Section 1 -Column 2 -WebPartProperties @{isDocumentLibrary=\u0026#34;true\u0026#34;; selectedListId=\u0026#34;1fa1fb45-e53b-4ea1-9325-ddca7afe986e\u0026#34;; selectedFolderPath=\u0026#34;/$name\u0026#34;; hideCommandBar=\u0026#34;false\u0026#34;} Publishing the page All the parts we need are now on the page. The only thing now is to publish the page so it is visible to all visitors. For that, we need to grab the page again and publish it.\n$page = Get-PnPClientSidePage -Identity $name $page.Publish() Looping the code for all folders The last part of the code was to make this repeatable, for all 86 folders. There is probably a really nice way to , in code, get all folders from the doclib and loop through them, but as stated a gazillion times.. I am not a developer. So I exported the document library to Excel and copied the foldernames. I added some quotes and a comma (in an Excel formula using =CHAR(34) \u0026amp; A2 \u0026amp; CHAR(34) \u0026amp;\u0026quot;,\u0026quot;) and added an array to store these.\nThe full code is:\nConnect-PnPOnline -Url https://yourtenant.sharepoint.com/sites/Yoursite/ -UseWebLogin $ray = \u0026#34;folder1\u0026#34;, \u0026#34;folder2\u0026#34;, \u0026#34;folder3\u0026#34; foreach ($name in $ray) { #create page Add-PnPClientSidePage -Name $name -LayoutType Article -HeaderLayoutType NoImage -CommentsEnabled:$false #add sections Add-PnPClientSidePageSection -Page $name -SectionTemplate TwoColumn -Order 1 #add text web part Add-PnPClientSideText -Page $name -Section 1 -Column 1 -Text \u0026#34; \u0026#34; #add doclib Add-PnPClientSideWebPart -Page $name -DefaultWebPartType List -Section 1 -Column 2 -WebPartProperties @{isDocumentLibrary=\u0026#34;true\u0026#34;;selectedListId=\u0026#34;1fa1fb45-e53b-4ea1-9325-ddca7afe986e\u0026#34;;selectedFolderPath=\u0026#34;/$name\u0026#34;;hideCommandBar=\u0026#34;false\u0026#34;} $page = Get-PnPClientSidePage -Identity $name $page.Publish() } ","image":"https://pnp.github.io/blog/post/use-pnp-powershell-to-add-a-document-library-webpart-to-a-page/images/MS-list_hufdc577ead14660ff2f59e04d762389f2_147036_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/use-pnp-powershell-to-add-a-document-library-webpart-to-a-page/","tags":["PnP PowerShell"],"title":"Use PnP PowerShell to add a document library web part to a page (and only show a specific folder)"},{"categories":["Community post"],"contents":"Introduction A persona is a visual representation of a person across products, typically showcasing the image that person has chosen to upload themselves. This control includes an individual\u0026rsquo;s avatar (an uploaded image or a composition of the person\u0026rsquo;s initials on a background color), their name or identification, and so on. for more details refer to Fluent UI persona.\nScenario We will create an SPFx web part in the way to fetch users from any specific group and render these users using a persona. so let\u0026rsquo;s see step-by-step implementation. In the end, our output will be like this,   Implementation Open a command prompt\nMove to the path where you want to create a project\nCreate a project directory using: md spfx-persona\nMove to the above-created directory using:\ncd spfx-persona  Now execute the below command to create an SPFx solution:\nyo @microsoft/sharepoint  It will ask some questions, as shown below,\n![Project Structure.png](images/Project Structure.png)\nNow we will install pnpjs as shown below: npm install @pnp/sp \u0026ndash;save After a successful installation, we can open a project in any source code tool. Here, I am using the VS code, so I will execute the command:\ncode .  Move to the src/webparts/spfxpersona/components/**ISpfxpersonaProps.ts and create a context property as below,  import { WebPartContext } from \u0026#34;@microsoft/sp-webpart-base\u0026#34;; export interface ISpfxpersonaProps { description: string; context: WebPartContext }  Now move to the **SpfxpersonaWebPart.ts **file and here we initialize an SP context and pass it in the property.  import * as React from \u0026#39;react\u0026#39;; import * as ReactDom from \u0026#39;react-dom\u0026#39;; import { Version } from \u0026#39;@microsoft/sp-core-library\u0026#39;; import { IPropertyPaneConfiguration, PropertyPaneTextField } from \u0026#39;@microsoft/sp-property-pane\u0026#39;; import { BaseClientSideWebPart } from \u0026#39;@microsoft/sp-webpart-base\u0026#39;; import * as strings from \u0026#39;SpfxpersonaWebPartStrings\u0026#39;; import Spfxpersona from \u0026#39;./components/Spfxpersona\u0026#39;; import { ISpfxpersonaProps } from \u0026#39;./components/ISpfxpersonaProps\u0026#39;; import { sp } from \u0026#34;@pnp/sp/presets/all\u0026#34;; export interface ISpfxpersonaWebPartProps { description: string; } export default class SpfxpersonaWebPart extends BaseClientSideWebPart\u0026lt;ISpfxpersonaWebPartProps\u0026gt; { public onInit(): Promise\u0026lt;void\u0026gt; { return super.onInit().then(_ =\u0026gt; { sp.setup({ spfxContext: this.context }); }); } public render(): void { const element: React.ReactElement\u0026lt;ISpfxpersonaProps\u0026gt; = React.createElement( Spfxpersona, { description: this.properties.description, context: this.context, } ); ReactDom.render(element, this.domElement); } protected onDispose(): void { ReactDom.unmountComponentAtNode(this.domElement); } protected get dataVersion(): Version { return Version.parse(\u0026#39;1.0\u0026#39;); } protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration { return { pages: [ { header: { description: strings.PropertyPaneDescription }, groups: [ { groupName: strings.BasicGroupName, groupFields: [ PropertyPaneTextField(\u0026#39;description\u0026#39;, { label: strings.DescriptionFieldLabel }) ] } ] } ] }; } } Create a common component means folder called RenderProfilePicture inside *src/webparts/spfxpersona/Common/Components. *And inside this folder create a file RenderProfilePicture.tsx .\nAt here we will pass a property as an argument and render it and in the main component, we will call API to get items so they will be set through the property. import * as React from \u0026#39;react\u0026#39;; import { Persona, PersonaSize } from \u0026#39;office-ui-fabric-react/lib/Persona\u0026#39;; interface IProfilePicProps { loginName: string; displayName: string; getUserProfileUrl?: () =\u0026gt; Promise\u0026lt;string\u0026gt;; } export function RenderProfilePicture(props: IProfilePicProps) { const [profileUrl, setProfileUrl] = React.useState\u0026lt;string\u0026gt;(); let { displayName, getUserProfileUrl } = props; React.useEffect(() =\u0026gt; { getUserProfileUrl().then(url =\u0026gt; { setProfileUrl(url); }); }, [props]) return ( \u0026lt;Persona imageUrl={profileUrl} text={displayName} size={PersonaSize.size32} imageAlt={displayName} styles={{ primaryText: { fontSize: \u0026#39;14px\u0026#39; }, root: { margin: \u0026#39;10px\u0026#39; } }} /\u0026gt; ); } Now move to the Spfxpersona.tsx our main component. here we will call APIs and render the child component here.\nCreate a state interface and initialize a user state.\nAt here we are getting the user from a particular group ID so first call API to get users from the group.\nAnd then we will get user profile properties to get users\u0026rsquo; profile picture so after calling the get users method we will call API to get user profile properties.\nAnd then render the component.\nimport * as React from \u0026#39;react\u0026#39;; import styles from \u0026#39;./Spfxpersona.module.scss\u0026#39;; import { ISpfxpersonaProps } from \u0026#39;./ISpfxpersonaProps\u0026#39;; import { escape } from \u0026#39;@microsoft/sp-lodash-subset\u0026#39;; import { sp } from \u0026#34;@pnp/sp/presets/all\u0026#34;; import { RenderProfilePicture } from \u0026#39;../Common/Components/RenderProfilePicture/RenderProfilePicture\u0026#39; export interface ISpfxpersonaWebPartState { users: any[] } export default class Spfxpersona extends React.Component\u0026lt;ISpfxpersonaProps, ISpfxpersonaWebPartState\u0026gt; { constructor(props: ISpfxpersonaProps) { super(props); this.state = { users: [] } } private async getUserProfileUrl(loginName: string) { const userPictureUrl = await sp.profiles.getUserProfilePropertyFor(loginName, \u0026#39;PictureURL\u0026#39;); return userPictureUrl; } private async getSiteUsers() { const grpUsers = await sp.web.siteGroups.getById(3).users(); this.setState({ users: grpUsers }) } public componentDidMount() { this.getSiteUsers() } public render(): React.ReactElement\u0026lt;ISpfxpersonaProps\u0026gt; { return ( \u0026lt;div className={styles.spfxpersona}\u0026gt; \u0026lt;span\u0026gt;USERS WITH PERSONA CARD\u0026lt;/span\u0026gt; {this.state.users.map(m =\u0026gt; \u0026lt;RenderProfilePicture loginName={m.LoginName} displayName={m.Title} getUserProfileUrl={() =\u0026gt; this.getUserProfileUrl(m.LoginName)} \u0026gt;\u0026lt;/RenderProfilePicture\u0026gt; )} ); } } Now serve the application using the below command,\ngulp serve  Now test the webpart in SharePoint-SiteURL + /_layouts/15/workbench.aspx.\nOutput    Find here the full source code . Summary In this article, we have seen the step-by-step implementation of how to use a persona card to show the users\u0026rsquo; profile picture. I hope this helps, if this helps you then share it with others. Sharing is caring!\n","image":"https://pnp.github.io/blog/post/how-to-use-fluent-ui-react-persona-control-in-spfx/images/Output_hu88086dc91ffc1a1c74dea5575da01969_13872_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-use-fluent-ui-react-persona-control-in-spfx/","tags":["SharePoint framework (SPFx)"],"title":"How to use fluent UI react persona control in SPFx?"},{"categories":["Microsoft 365 Platform Community update"],"contents":"Microsoft 365 Patterns and Practices (PnP) Community June 2021 update is out with a summary of the latest guidance, samples, and solutions from Microsoft or from the community for the community. This article is a summary of all the different areas and topics around the community work we do around Microsoft 365 ecosystem during the past month. Thank you for being part of this success. Sharing is caring!\nWhat is Microsoft 365 Community (PnP) Microsoft 365 PnP is a nick-name for Microsoft 365 platform community activities coordinated by numerous teams inside of the Microsoft 365 engineering organizations. PnP is a community-driven open source initiative where Microsoft and external community members are sharing their learning\u0026rsquo;s around implementation practices for Microsoft 365. Topics vary from Microsoft Viva, Microsoft Graph, Microsoft Teams, OneDrive and SharePoint. Active development and contributions happen in GitHub by providing contributions to the samples, reusable components, and documentation for different areas. PnP is owned and coordinated by Microsoft engineering, but this is work done by the community for the community.\n See more details from New Microsoft 365 Patterns and Practices (PnP) team model with new community leads The initiative is facilitated by Microsoft, but we have multiple community members as part of the PnP team (see team details in end of the article) and we are always looking to extend the PnP team with more community members. Notice that since this is open source community initiative, so there\u0026rsquo;s no SLAs for the support for the samples provided through GitHub. Obviously, all officially released components and libraries are under official support from Microsoft. Some key statistics around Microsoft 365 PnP initiative from May 2021: Unique visitors during the past 2 weeks in PnP, OneDrive, Microsoft-Search, OfficeDev and SharePoint GitHub organization repositories - 63,134 Overall unique contributors in the PnP, OneDrive, Microsoft-Search, OfficeDev and SharePoint GitHub organizations - 1,840 Microsoft 365 Community (PnP) YouTube channel had 97,126 views with 6,354 hours of watch time and 22,758 subscribers Microsoft 365 Developer YouTube channel had 53,533 views with 3,384 hours of watch time and 13,998 subscribers Most viewed videos in the Microsoft 365 Community (PnP) YouTube channel during May 2021:   Introduction to Microsoft Teams Developer Portal | Karthig Balendran (Microsoft) | 5,543 Microsoft Teams Meeting Questionnaire App with SharePoint Framework | Nanddeep Nachan | 4,311 Building a beautifully designed Intranet with SharePoint - latest design and branding capabilities | Cathy Dew (Microsoft) \u0026amp; Katie Swanson (Microsoft) | 3,631 Microsoft Lists integration with Power BI | Mark Kashman (Microsoft) | 3,416 Getting started with Site Designs in SharePoint Online - Laura Kokkarinen (Sulava) | 2,985 Working with Microsoft Lists (webinar) - Harini Saladi, Miceile Barrett, Chakkaradeep Chandran and Mark Kashman | 2,925 Architecting Your Intranet | Melissa Torres (Microsoft) | 2,024 SharePoint Framework Tutorial 1 - HelloWorld WebPart | 1,992 Introducing: New Employee Onboarding - a Microsoft Teams app template | Nidhi Sharma (Microsoft) | 1,890 Getting started on deploying Viva Connections for Microsoft Teams desktop | 1,751  Most viewed videos in the Microsoft 365 Developer YouTube channel during May 2021:\n Build the next generation of collaborative apps on the Microsoft Teams platform | 5,286 Build Outlook Add-ins that integrate your solution seamlessly into your users\u0026rsquo; Outlook experience​ | Juan Balmori, Hitesh Manwar - 1,332 Authenticate and connect with Microsoft Graph - June 2019 | 1,317 An introduction to Microsoft Graph for developers - Part I - Getting started - October 2019 | 1,106 Office Scripts Tutorial: Introduction to the Code Editor | 1,014 Microsoft Graph Explained | 944 Demo: Getting started with Power Apps Portals | Brian Knight (Pragmatic Works) | 907 Create interactive conversational bots for Microsoft Teams | 869 Build and Office add-in using modern JavaScript tools and technologies | 823 Getting Started with Microsoft Graph and Application Registration | 787 Main resources around Microsoft 365 Community:   Microsoft 365 Community - http://aka.ms/m365pnp - One location for all the resources and news around PnP Microsoft 365 community blog - http://aka.ms/m365pnp/community/blog Microsoft 365 development blog - http://aka.ms/m365pnp-blog Microsoft 365 Community Channel on YouTube - http://aka.ms/m365pnp-videos Microsoft 365 Developer YouTube channel - https://aka.ms/M365DevYouTube  Latest Dev Blog posts Here are the latest blog posts and announcements around Microsoft 365 development topics from https://developer.microsoft.com/microsoft-365/blogs.\n 26th of May - Four new features to build richer apps for Microsoft Teams meetings  26th of May - What\u0026rsquo;s new in Office Platform at Build 2021 25th of May - Microsoft Graph @ Build 2021 25th of May - What\u0026rsquo;s New for the Microsoft 365 Developer | Build 2021 24th of May - Microsoft Teams App Development Challenge Winners!  20th of May - Announcing new file components, MSAL 2 Provider, and SharePoint Framework library in Microsoft Graph...  18th of May - Publish your apps to the Microsoft Teams store 13th of May - Add custom keyboard shortcuts to your Office Add-ins in Excel 12th of May - Microsoft Graph .NET SDK v4 adds enhanced features \u0026ndash; now in preview 12th of May - Five new features enhancing Adaptive Cards in Microsoft Teams 11th of May - New renewal offering for your app\u0026rsquo;s Publisher Attestation and Microsoft 365 Certification 11th of May - Microsoft Graph Mailbag \u0026ndash; Azure AD applications and users for testing 5th of May - Understanding the Office Add-ins runtime 5th of May - Application permissions support for assignments API in Microsoft Graph now available Latest community posts at https://aka.ms/m365pnp/community/blog 30th of May - Garry Trinder (CPS) - CLI for Microsoft 365 v3.10 28th of May - Luise Freese \u0026amp; Hugo Bernier (Microsoft) - Microsoft 365 PnP Community Spotlight: Hugo Bernier 26th of May - Mohamed Ashiq Faleel (Tata Consultancy Services) - How to invite external users to a SharePoint site or Microsoft Team using Power Automate \u0026amp; Graph API 26th of May - Chandani Prajapati - SPFx webpart form validation using React Formik 22nd of May - Luise Freese \u0026amp; Garry Trinder (CPS) - Microsoft 365 PnP Community Spotlight: Garry Trinder 20th of May - Bob German (Microsoft) - Do you need ngrok to develop Microsoft Teams apps? 17th of May - Damien Bird (Aberdeen City Council) - Excel Scripts and Cloud Flows - Data Manipulation 15th of May - Luise Freese \u0026amp; Arjun Menon (Tata Consultancy Services) - Microsoft 365 PnP Community Spotlight: Arjun Menon 15th of May - Alison Collins - React Groups and Teams Filters 14th of May - Paul Bullock (CaPa Creative) - Getting Started with Azure Shell and PnP PowerShell with Certificates 13th of May - Bob German (Microsoft) - Setting up https for Teams Tabs projects - without ngrok{#link_26 .page-link .lia-link-navigation .lia-custom-event} 10th of May - Ari Gunawan (DevStack) - Community Sample: News Ticker app (SPFx Extensions) 10th of May - Django Lohn (InSpark) - Power Apps: source code editing for Canvas Apps 7th of May - Vesa Juvonen (Microsoft) - New Microsoft 365 Patterns and Practices (PnP) team members \u0026ndash; May 2021 7th of May - Luise Freese - Microsoft 365 PnP Community Spotlight: Stefan Bauer 7th of May - Michael Roth (IT-P Information Technology-Partner GmbH) - Let\u0026rsquo;s build a timer app for Teams meetings 6th of May - André Lage (Datalynx AG) - Navigate OneDrive data with Microsoft Graph and Mgt-File-List Beta version 6th of May - Mohamed Derhalli (BDO Canada) - Introducing React Video Banner Web Part 6th of May - Carl Cookson (Avanade) - Using Power Automate And Graph API To Manage External Access To Teams 6th of May - Hubert Lam (NSW Department of Education) - Simple reminders for any Teams Channel or Chat message 5th of May - Chandani Prajapati - How to to get all site collections with their sub webs using PnP PowerShell? 5th of May - Luis Mañez (ClearPeople) - Community sample: Engage your users with SharePoint stories/reels 4th of May - Bob German (Microsoft) - What\u0026rsquo;s up with Markdown? 1st of May - Ari Gunawan (DevStack) - How to Set Up Tailwind CSS in a SPFx Project Community call recording blog posts: 2nd of June - Microsoft Graph community call \u0026ndash; June 2021 28th of May - Microsoft 365 Developer Community Call recording \u0026ndash; 27th of May, 2021 26th of May - Microsoft Identity Platform community call \u0026ndash; May 2021 21st of May - SharePoint Framework Community Call \u0026ndash; 20th of May, 2021 20th of May - Power Apps Community Call \u0026ndash; May 2021 20th of May - Microsoft Identity Platform community call - April 2021 20th of May - Microsoft Graph community call \u0026ndash; May 2021 19th of May - Office Add-ins community call \u0026ndash; May 2021 19th of May - Microsoft Teams Community Call - May 2021 14th of May - Microsoft 365 Developer Community Call recording \u0026ndash; 13th of May, 2021 11th of May - SharePoint community call - May 11th, 2021 7th of May - SharePoint Framework Community Call Recording \u0026ndash; 6th of May, 2021 3rd of May - Office Add-ins community call \u0026ndash; April 14, 2021 PnP Weekly video blog / podcast shows: 1st of June - Microsoft 365 PnP Weekly - Episode 129 25th of May - Microsoft 365 PnP Weekly - Episode 128 - Katie Swanson (Microsoft) 18th of May - Microsoft 365 PnP Weekly - Episode 127 - Rick Van Rousselt (Advantive) 11th of May - Microsoft 365 PnP Weekly - Episode 126 - D\u0026rsquo;arce Hess (TrnDigital) 3rd of May - Microsoft 365 PnP Weekly - Episode 125 - Sandy Ussia (Lightning Tools) We highly recommend also subscribing on the Microsoft 365 Developer Podcast show, which is a great show covering also latest development in the Microsoft 365 platform from developer and extensibility perspective.  Community Calls There are numerous different community calls on different areas. All calls are being recorded and published either from Microsoft 365 Developer or Microsoft 365 Community (PnP) YouTube channels. Recordings are typically released within the following 24 hours after the call. You can find a detailed agenda and links to specific covered topics on blog post articles at the Microsoft 365 developer blog when the videos are published.\n Adaptive Cards https://aka.ms/adaptivecardscommunitycall - Updates and news around Adaptive Cards with live demos Microsoft Graph https://aka.ms/microsoftgraphcall - Updates and news from Microsoft Graph with live demos Microsoft identity platform https://aka.ms/IDDevCommunityCalendar - Latest on the identity side Microsoft Teams https://aka.ms/microsoftteamscommunitycall - Microsoft Teams monthly update with live demos Office Add-ins https://aka.ms/officeaddinscommunitycall - News and community work around Office add-ins with live demos PowerApps https://aka.ms/PowerAppsMonthlyCall - Monthly summary on PowerApps community with live demos SharePoint https://aka.ms/spdev-call - Consists of the latest news, providing credits for all community contributors and live demos typically by SharePoint engineering. M365 General Dev SIG https://aka.ms/spdev-sig-call - Bi-weekly - General topics on Microsoft 365 Dev from various aspects - Microsoft Teams, Microsoft Graph Toolkit, Provisioning, Automation, Scripting, Power Automate, Solution design SharePoint Framework SIG https://aka.ms/spdev-spfx-call - Bi-weekly - Consists of topics around SharePoint Framework and JavaScript-based development in the Microsoft Teams and in SharePoint platform. If you are interested in doing a live demo of your solution or sample in these calls, please do reach out to the PnP Team members (contacts later in this post) and they are able to help with the right setup. These are great opportunities to gain visibility for example for existing MVPs, for community members who would like to be MVPs in the future or any community member who\u0026rsquo;d like to share some of their learnings.  Microsoft 365 Community (PnP) Ecosystem in GitHub Most of the community driven repositories are in the PnP GitHub organization as samples are not product specifics as they can contain numerous different solutions or the solution works in multiple different applications.\n  PnPjs - PnPjs Framework repository\n  CLI Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings\n  generator-spfx - Open-source Yeoman generator which extends the out-of-the-box Yeoman generator for SharePoint with additional capabilities\n  generator-teams - Open-source Microsoft Teams Yeoman generator - Bots, Messaging Extensions, Tabs, Connectors, Outgoing Web hooks and more\n  teams-dev-samples - Microsoft Teams targeted samples from community and Microsoft engineering\n  Sharing is Caring - Getting started on learning how to contribute and be active on the community from GitHub perspective.\n  pnpcore - The PnP Core SDK is an SDK designed to work against Microsoft 365 with Microsoft Graph API first approach\n  powershell - PnP PowerShell module which is PowerShell Core module targeted for Microsoft 365\n  pnpframework - PnP Framework is a .Net Standard 2.0 library targeting Microsoft 365 containing the PnP Provisioning engine and a ton of other useful extensions\n  teams-dev-samples - Samples around the Microsoft Teams development models from Microsoft and from the community\n  sp-dev-fx-webparts - Client-side web part samples from community and Microsoft engineering\n  sp-dev-fx-extensions - Samples and tutorial code around SharePoint Framework Extensions\n  sp-dev-fx-library-components - Samples and tutorial code around the SharePoint Framework library components\n  sp-starter-kit - Starter kit solution for SharePoint modern experiences\n  sp-dev-fx-vs-extension - Open source Visual Studio IDE extension for creating SharePoint Framework solutions in the Visual Studio 2015 or 2017\n  sp-dev-build-extensions - Different build extensions like gulp tasks and gulp plugins from the community and engineering around SharePoint development\n  sp-dev-solutions - Repository for more polished and fine-tuned reusable solutions build with SharePoint Framework\n  sp-dev-samples - Repository for other samples related on the SharePoint development topics - WebHooks etc.\n  sp-dev-fx-controls-react - Reusable content controls for SharePoint Framework solutions build with React\n  sp-dev-fx-property-controls - Reusable property pane controls to be used in web parts\n  sp-dev-list-formatting - Open-source community-driven repository for the column and view formatting JSON definitions\n  sp-dev-site-scripts - Open-source community-driven repository for community Site Designs and Site Scripts\n  sp-dev-modernization - Tooling and guidance around modernizing SharePoint from classic to modern\n  sp-power-platform-solutions - Solution and sample code for SharePoint Power Platform solutions\n  powerfx-samples - Samples that demonstrate different usage patterns for the Power Fx low-code programming language\\\n  powerapps-samples - Samples that demonstrate different usage patterns for Power Apps\n  powerautomate-samples - Samples that demonstrate different usage patterns for Power Automate\n  powerva-samples - Samples that demonstrate different usage patterns for Power Virtual Agents All SharePoint specific repositories or services supported directly by Microsoft are located in the SharePoint GitHub organization\n\\\n  sp-dev-docs - Source for new SharePoint dev center documentation exposed from http://docs.microsoft.com/sharepoint/dev\n  sp-dev-provisioning-templates - Open-source templates used by the SharePoint Look Book site\n  sp-provisioning-service - Source code of the SharePoint look book site PnP specific repositories - solution designs and tooling\n  PnP - Main repository for SP add-in, Microsoft Graph etc. samples\n  PnP-Sites-Core - Office Dev PnP Core component\n  PnP-PowerShell - Office Dev PnP PowerShell Cmdlets\n  PnP-Tools - Tools and scripts targeted more for IT Pro\u0026rsquo;s and for on-premises for SP2013 and SP2016\n  PnP-Provisioning-Schema - PnP Provisioning engine schema repository\n  PnP-IdentityModel - Open source replacement of Microsoft.IdentityModel.Extensions.dll Repositories in the GitHub Microsoft Search organization controlled by the PnP initiative\n  pnp-modern-search - Home of PnP Modern Search solutions, see more from the documentation Other related resources from GitHub\n  Microsoft Graph Toolkit in GitHub - Community contributions welcome!\n  Office add-in Patterns and Practices in GitHub - Community contributions welcome!\n  Microsoft Graph GitHub organization\n  OfficeDev GitHub organization - Includes all Microsoft Teams samples from Microsoft\n  What\u0026rsquo;s supportability story around the community tooling and assets? Following statements apply across all of the community lead and contributed samples and solutions, including samples, core component(s) and solutions, like SharePoint Starter Kit, yo teams or PnP PowerShell. All Microsoft released SDKs and tools are supported based on the specific tool policies.\n  PnP guidance and samples are created by Microsoft \u0026amp; by the Community\n  PnP guidance and samples are maintained by Microsoft \u0026amp; community\n  PnP uses supported and recommended techniques\n  PnP is an open-source initiative by the community \u0026ndash; people who work on the initiative for the benefit of others, have their normal day job as well\n  PnP is NOT a product and therefore it\u0026rsquo;s not supported by Premier Support or other official support channels\n  PnP is supported in similar ways as other open source projects done by Microsoft with support from the community by the community\n  There are numerous partners that utilize PnP within their solutions for customers. Support for this is provided by the Partner. When PnP material is used in deployments, we recommend being clear with your customer/deployment owner on the support model Please see the specifics on the supportability on the tool, SDK or component repository or download page.\n  Microsoft 365 PnP team model    In April 2020 we announced our new Microsoft 365 PnP team model and grew the MVP team quite significantly. PnP model exists for having more efficient engagement between Microsoft engineering and community members. Let\u0026rsquo;s build things together. Your contributions and feedback is always welcome! During August, we also crew the team with 5 new members. PnP Team coordinates and leads the different open-source and community efforts we execute in the Microsoft 365 platform. We welcome all community members to get involved on the community and open-source efforts. Your input do matter!\n New Microsoft 365 Patterns and Practices (PnP) team members - May 2021 - Gautam Sheth (Valo) and Patrick Lamber (Experts Inside AG) New Microsoft 365 Patterns and Practices (PnP) team members - February 2021 - April Dunnam (Microsoft), Emily Mancini (Sympraxis Consulting) and Veronique Lengelle (CPS) New Microsoft 365 Patterns and Practices (PnP) team members - December 2020 - Luise Freese and Sébastien Levert  New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 - Albert-Jan Schot (Portiva), Koen Zomers (Microsoft), Paul Bullock (CaPa Creative), Rabia Williams (Microsoft) and Yannick Plenevaux (PVX Solutions) Got feedback, suggestions or ideas? - Please let us know. Everything we do in this program is for your benefit. Feedback and ideas are more than welcome so that we can adjust the process for benefitting you even more.  Area-specific updates These are different areas which are closely involved on the community work across the PnP initiative. Some are lead and coordinated by engineering organizations, some are coordinated by the community and MVPs.\nMicrosoft Graph Toolkit    Microsoft Graph Toolkit is engineering lead initiative, which works closely with the community on the open-source areas. The Microsoft Graph Toolkit is a collection of reusable, framework-agnostic web components and helpers for accessing and working with Microsoft Graph. The components are fully functional right of out of the box, with built in providers that authenticate with and fetch data from Microsoft Graph.\n Latest version currently is 2.2. See the v2.2 announcement blog post for more details - Announcing new file components, MSAL 2 Provider, and SharePoint Framework library in Microsoft Graph... mgt.dev - Microsoft Graph Toolkit Playground Getting started with Microsoft Graph Toolkit guidance video from developer community call by Beth Pan (Microsoft) Latest code and preview versions from https://aka.ms/mgt All the latest updates on the Microsoft Graph Toolkit is being presented in our bi-weekly Microsoft 365 Generic Dev community call, including the latest community contributors.  Microsoft 365 Community docs    Community docs model was announced in the April 2020 and it\u0026rsquo;s great to see the interest for community to help each other by providing new guidance on the non-dev areas. See more on the announcement from the SharePoint blog - Announcing the Microsoft 365 Community Docs. We do welcome contributions from the community - our objective is to build a valuable location for articles from Microsoft and community together.\nHave ideas for articles or want to contribute yourself? - Get involved! Here are also some additional resources explaining the model more detailed.\n YouTube - Introducing Microsoft 365 Community Docs GitHub issue list with articles ideas  SharePoint Framework development samples    These are the updated SharePoint Framework samples which are available from the the different repositories.\n New sample react-news-banner by João Mendes which shows news information as a Banner, this information come from a list defined in any site, this web part can be installed on 2019, and SharePoint Online. New sample react-organization-chart by João Mendes which shows an organization chart based on specified user, and user can navigate to show company organization. This web part can be installed on SharePoint Server 2019, and SharePoint Online. Updates to react-list-form by Ari Gunawan which provides a working example of implementing generic SharePoint list forms using the SharePoint Framework (SPFx) and the React and Office UI Fabric libraries. Updates to react-calendar by Eli H. Schei which allows you to manage events in a calendar. Uses a list of existing calendars on any website. Updates to react-onedrive-finder by André Lage which access drives from OneDrive and navigate between his content using Graph OneDrive and Site API and Microsoft Graph Toolkit react controls. Updates to react-pagecontributors by Ari Gunawan which displays page contributors in reverse chronological order. Updates to react-datatable by Chandani Prajapati which provides easy way to render SharePoint custom list in datatable view with all the necessary features. Other adjustments to numerous SPFx web part and extension samples by our awesome community members! How to find what\u0026rsquo;s relevant for you? Take advantage of our SharePoint Framework web part and extension sample galleries - includes also solutions which work in Microsoft Teams Web Part sample gallery - http://aka.ms/spfx-webparts Extensions sample gallery - http://aka.ms/spfx-extensions  Microsoft Teams community samples    These are samples which have been contributed on the community samples since last summary. We do welcome all Microsoft Teams samples to this gallery. They can be implemented using in any technology.\n New sample msgext-graph-action-config by Markus Moeller which is a action based messaging extension created using the Teams Yeoman Generator. It authenticates against Microsoft Graph via SSO and on-behalf flow from the frontend and recieves documents to be posted as adaptive card to the message compose box of a channel.  New sample tab-context-viewer by Sébastien Levert (Microsoft) which is showcasing every Teams SDK context in every type of tab New sample msgext-action-preview by Markus Moeller which is a small demo sample is a action based messaging extension created using the Teams Yeoman Generator. It posts a simple adaptive card to the Team\u0026rsquo;s news channel but \u0026lsquo;as a bot\u0026rsquo; and with an action to update the same adaptive card again and again. If you are interested on Microsoft Teams samples, we have just released also new Microsoft Teams sample gallery. Contributions to Microsoft Teams samples is also more than welcome. This gallery already surfaces all Microsoft samples, Microsoft Teams app templates and community samples.  Power Platform samples    These are the updated Power Platform samples which are available from the new Power Platform sample gallery.\n New sample always-reply-to-request by Remy Blok (Prodware) providing a pattern for making sure that the Flow always provides a responds to a request in Power Automate. New sample DeskReservation by April Dunnam (Microsoft) as a fully functional phone-based Canvas Power App template which provides functionality to manage and book desk reservations.  New sample fluentui-custom-theme by Fabio Franzini implementing a custom theme (for tablet layout) to apply the style of the Fluent UI controls to the canvas controls with extensive modification of the \u0026ldquo;Default Theme\u0026rdquo; inside the theme.json file. New sample custom-font-samples by Matthew Devaney (Hitachi Solutions) providing 177 custom font samples for Power App New sample calendar-component by April Dunnam (Microsoft) providing a re-usable component that allows you to display events in a calendar. New sample color-functions by P3N showing functions that calculate the contrast between two colors How to find what\u0026rsquo;s relevant for you? Take advantage of our Power Platform sample gallery. Power Platform sample gallery - https://aka.ms/powerplatform-samples  Microsoft 365 Script Samples    We also released new Microsoft 365 Script Sample gallery within past month. We welcome all scripts on Microsoft 365 automation to this centralized repository, targeted to help to manage and automate day-to-day operations. If you have any existing scripts which you\u0026rsquo;d be willing to share with others - please submit a pull request or contact the PnP team members to get started on getting more closely involved on this initiative.  Microsoft 365 Script Samples - https://aka.ms/script-samples  Sharing is Caring initiative    The \u0026ldquo;Sharing Is Caring\u0026rdquo; imitative is targeted for learning the basics around making changes in Microsoft Docs, in GitHub, submitting pull requests to the PnP repositories and in GitHub in general. Take advantage of this instructor lead training for learning how to contribute to docs or to open-source solutions. Everyone is welcome to learn how to get started on contributing to open-source docs or code!\n See more from the guidance documentation - including all upcoming instructor lead sessions which you can participate!  Different Microsoft 365 related open-source initiatives build together with the community See exact details on the latest updates from the specific open-source project release notes. You can also follow up on the project updates from our community calls. There are numerous active projects which are releasing new versions with the community even on weekly basis. Get involved!\n Microsoft Look Book - Discover the modern experiences you can build with SharePoint in Microsoft 365. Look book provides design examples for SharePoint Online which can be automatically provisioned to any tenant in the world. See more from https://lookbook.microsoft.com. This service is also provided as open-source solution sample from GitHub. yo teams - Open-source Yeoman generator for Microsoft Teams extensibility. Supports creation of bots, messaging extensions, tabs (with SSO), connectors and outgoing Webhooks. See more from https://aka.ms/yoteams. PnP Framework - .NET Standard 2.0 SDK containing the classic PnP Sites Core features for SharePoint Online. More around this package from GitHub. PnP Core SDK - The PnP Core SDK is an SDK designed to work for Microsoft 365 with Graph API first approach. It provides a unified object model for working with SharePoint Online and Teams which is agnostic to the underlying API\u0026rsquo;s being called. See more around the SDK from documentation. PnP PowerShell - PnP PowerShell is a .NET Core 3.1 / .NET Framework 4.6.1 based PowerShell Module providing over 400 cmdlets that work with Microsoft 365 environments and more specifically SharePoint Online and Microsoft Teams. See more details from documentation. Reusable SharePoint Framework controls - Reusable controls for SharePoint Framework web part and extension development. Separate projects for React content controls and Property Pane controls for web parts. These controls are using Office UI Fabric React controls under the covers and they are SharePoint aware to increase the productivity of developers. Office 365 CLI - Using the Office 365 CLI, you can manage your Microsoft Office 365 tenant and SharePoint Framework projects on any platform. See release notes for the latest updates. PnPJs - PnPJs encapsulates SharePoint REST APIs and provides a fluent and easily usable interface for querying data from SharePoint sites. It\u0026rsquo;s a replacement of already deprecated pnp-js-core library. See changelog for the latest updates. PnP Provisioning Engine and PnP CSOM Core - PnP provisioning engine is part of the PnP CSOM extension. They encapsulate complex business driven operations behind easily usable API surface, which extends out-of-the-box CSOM NuGet packages. See changelog for the latest updates. PnP PowerShell - PnP PowerShell cmdlets are open-source complement for the SharePoint Online cmdlets. There are more than 300 different cmdlets to use and you can use them to manage tenant settings or to manipulate actual SharePoint sites. They See changelog for the latest updates. PnP Modern Search solution - The PnP \u0026lsquo;Modern Search\u0026rsquo; solution is a set of SharePoint Online modern Web Parts allowing SharePoint super users, webmasters and developers to create highly flexible and personalized search based experiences in minutes. See more details on the different supported capabilities from https://aka.ms/pnp-search. Modernization tooling - All tools and guidance on helping you to transform you SharePoint to modern experiences from http://aka.ms/sppnp-modernize. SharePoint Starter Kit v2 - Building modern experiences with Microsoft Teams flavors for SharePoint Online and SharePoint 2019 - reference solution in GitHub. List formatting definitions - Community contributed samples around the column and view formatting in GitHub. Site Designs and Site Scripts - Community contributed samples around SharePoint Site Designs and Site Scripts in GitHub. **DevOps tooling and scripts **- Community contributed scripts and tooling automation around DevOps topics (CI/CD) in GitHub. Teams provisioning solution - Set of open-source Azure Functions for Microsoft Teams provisioning. See more details from GitHub.  Documentation updates Please see all the Microsoft 365 development documentation updates from the related documentation sets and repositories as listed below:\n Microsoft Teams platform documentation - Microsoft Docs | GitHub SharePoint Developer documentation - Microsoft Docs | GitHub Microsoft Graph documentation - Microsoft Docs | GitHub Office add-in documentation - Microsoft Docs | GitHub  Microsoft 365 Developer and Microsoft 365 Community YouTube video channels You can find all Microsoft 365 related videos on our YouTube Channel at http://aka.ms/m365pnp-videos or at Microsoft 365 Dev. These channels contains already a significant amount of detailed training material, demo videos, and community call recordings. Here are the new Microsoft demo or guidance videos released since the last monthly summary:\n Elevate user experiences with Universal Actions on Teams and Outlook - Shiladitya Saha (Microsoft)  Introduction to Viva Connections mobile extensibility model - Vinit Kumar Baheti (Microsoft) | @vinitbaheti Populate your Excel templates dynamically using Office Scripts and Power Automate - Nancy Wang (Microsoft) | @NancyatMSFT \u0026amp; Damien Bird (DamoBird365) | @DamoBird365 SharePoint Syntex integration and automation options - Bert Jansen (Microsoft) | @o365bert How to build and publish a SharePoint Syntex document understanding model - James Eccles (Microsoft) | @jimdeccles Building virtual tour experience with SharePoint spaces 360° tour web part - Matt Crisler (Microsoft) Introduction to Microsoft Teams Developer Portal - Karthig Balendran (Microsoft) | @KarthigBalendr1 Inspire, inform and prepare employees transition to the new hybrid Workplace transformation site - Holland Kaviani (Microsoft) \u0026amp; Matt Wolodarsky (Microsoft) | @mwolodarsky  SharePoint Syntex: Product overview and latest feature updates - Sean Squires (Microsoft) | @iamseansquires, James Eccles (Microsoft) | @jimdeccles and Bert Jansen (Microsoft) | @o365bert Delegated and application permissions in the Microsoft Identity Platform - Philippe Signoret (Microsoft) | @psignoret Get started with Azure Static Web Apps | Tips \u0026amp; Tricks - Dan Wahlin (Microsoft) | @danwahlin Registering and updating printer using Microsoft Graph API - Microsoft Managing print job using Microsoft Graph API - Microsoft Debug Microsoft Teams apps without ngrok | Tips \u0026amp; Tricks - Bob German (Microsoft) | @Bob1German Build the next generation of collaborative apps on the Microsoft Teams platform - Microsoft Lesaffre + Aster + Microsoft - Microsoft Microsoft Graph Explained - Microsoft Debug Microsoft Teams apps without ngrok | Tips \u0026amp; Tricks - Bob German (Microsoft) | @Bob1German Do you need ngrok to develop Microsoft Teams apps? | Tips \u0026amp; Tricks - Bob German (Microsoft) | @Bob1German Create a chatbot in Microsoft Teams with Power Virtual Agents | Tips \u0026amp; Tricks - April Dunnam (Microsoft) | @aprildunnam New playlist - Create interactive conversational bots for Microsoft Teams Create interactive conversational bots for Microsoft Teams Demo - Register and configure a new bot in Microsoft Azure and Azure Active Directory Demo - Create a conversational bots for Microsoft Teams Bots in Microsoft Teams channels and group chats Demo - Bots in Microsoft Teams channels and group chats Demo - Respond to messages with Adaptive Cards from bots Send proactive messages from bots Demo - Send proactive messages from bots New playlist - Create embedded web experiences with tabs for Microsoft Teams Create embedded web experiences with tabs for Microsoft Teams overview Create a custom Microsoft Teams personal tab Demo - Create a custom Microsoft Teams personal tab Demo - Customize a Microsoft Teams personal tab Demo - Build, deploy and test a Microsoft Teams personal tab Demo - Add a channel tab to the project Create a custom Microsoft Teams channel or group tab Demo - Implement the channel tab Implement authentication in a custom tab Authentication pop-up page flow Demo - Prepare an Azure AD app and Microsoft Teams app for authentication Demo - Implement authentication in a custom tab Community demos as following: Using Microsoft Graph Toolkit to easily access files in Sites and in OneDrive - André Lage (Datalynx AG) | @aaclage Getting started on building Microsoft Teams meeting apps - Rick van Rousselt (Advantive) | @RickVanRousselt Building multilingual Power Apps - Haniel Croitoru (Protiviti) | @HCroitoru Querying and Paging data with PnP Core SDK - Paolo Pialorsi (PiaSys) | @PaoloPia  Adding support to add video with text to modern pages with this video banner web part - Mohamed Derhalli (BDO Canada)| @MohamedDerhalli Building a company stories web part for story experience - Luis Mañez (ClearPeople) | @luismanez Building a React groups and teams web part for aggregating detailed information for end users - Alison Collins \u0026amp; Sam Collins (Coupled Technology) | @samc148  Using field lookups with list formatting - Chris Kent (DMI) | @theChrisKent Localization check inside SharePoint Framework projects \u0026ndash; VS Code extension increases productivity - Sergei Sergeev (Mastaq) | @sergeev_srg Transforming your SharePoint Framework web part as a Microsoft Teams personal app - Albert-Jan Schot (Portiva) | @appieschot PnP Weekly sessions - Community visitors and latest articles from Microsoft and community on Microsoft 365 topics. Microsoft 365 PnP Weekly - Episode 129 Microsoft 365 PnP Weekly - Episode 128 - Katie Swanson (Microsoft) | @kswansondesign Microsoft 365 PnP Weekly - Episode 127 - Rick Van Rousselt (Advantive) | @RickVanRousselt Microsoft 365 PnP Weekly - Episode 126 - D\u0026rsquo;arce Hess (TrnDigital)| @DarceHess Microsoft 365 PnP Weekly - Episode 125 - Sandy Ussia (Lightning Tools)  Key contributors to the June 2021 update Here\u0026rsquo;s the list of active contributors (in alphabetical order) since last release details in GitHub repositories or community channels. PnP is really about building tooling and knowledge together with the community for the community, so your contributions are highly valued across the Microsoft 365 customers, partners and obviously also at Microsoft. Thank you for your assistance and contributions on behalf of the community. You are truly making a difference! If we missed someone, please let us know.\n  Abderahman Moujahid - Abderahman88\n  Albert-Jan Schot (Portiva) - @appieschot\n  Alex Tabone (EASO)\n  Alex Terentiev (SharePointalist) - @alexaterentiev\n  Alison Collins (Coupled Technology) - ReactIntern\n  André Lage (Datalynx AG) - @aaclage\n  Andrew Benson (InElec) - @ViewPorter\n  Andrew Burns (AmSty) - @SharePointRox\n  Andrew Connell (Voitanos) - @andrewconnell\n  Andrew Koltyakov (ARVO Systems) - @andrewkoltyakov\n  Andy Boylan (AdEPT Technology Group) - apboylan\n  Andy-Dawson - Andy-Dawson\n  Anoop Tatti (Content+Cloud) - @anooptells\n  Ari Gunawan (DevStack) - @arigunawan3023\n  Ariel Smith (ASM Research)\n  Asha Prajapati (T-systems India Pvt Ltd) - Ashaprjpt0707\n  Beau Cameron (Aerie Consulting) - @Beau__Cameron\n  Blake Donley (Company) - @Handle\n  Brett Olson\n  Brian Kline (North Carolina Housing Finance Agency) - @brian_codediver\n  Bruce Lane - @batchass\n  Carl Cookson (Avanade) - @LinkeD365\n  Cas van Lersel (Rapid Circle) - @casvaniersel{.Link\u0026ndash;primary}\n  Cesar Hoeflich (Impar) - @cesarhoeflich{.Link\u0026ndash;primary}\n  Chandani Prajapati - @Chandani_SPD\n  Charles Ndiaye (Netexio) - @manusquall\n  Chris Brown - Chrisrb05\n  Chris Kent (DMI) - @theChrisKent\n  Chris Revell (Consult 365 IT Solutions) - @consult_365\n  Christian Zuellig (Monday Coffee) \u0026ndash; @ChristianZuell1\n  Christine Green (EBSCO Information Services) - @cacurtica\n  Christine Zeravica - christinemzeravica\n  codepwner - codepwner\n  Daniel Westerdale (Westerdale Solutions Ltd) - @westerdaled\n  Damien Bird (Aberdeen City Council) - @DamoBird365\n  D\u0026rsquo;arce Hess (TrnDigital) - @DarceHess\n  Dan Toft (Evobis ApS) - @tanddant{.Link\u0026ndash;primary}\n  Darren Lutchner (365 Assist) - @assist_365\n  David Warner II (Catapult) - @DavidWarnerII\n  Dinos Konstantinou - @dinos_kon\n  Dipen Shah - @Dips_365\n  Django Lohn (InSpark) - @LohnDjango\n  Derek Cash-Peterson (Sympraxis Consulting) - @spdcp\n  Don Kirkham - @DonKirkham\n  Eduard Paul (everis) - @eduapauldev\n  Eli H. Schei (Point Taken AS) - @acupof_dev\n  Elio Struyf (Struyf Consulting) - @eliostruyf\n  Emily Mancini (Sympraxis Consulting) - @EEMancini\n  Eric Legault (Eric Legault Consulting Inc.) - @elegault\n  Eric Overfield (PixelMill) - @EricOverfield\n  Erwin van Hunen (Valo Intranet) - @erwinvanhunen\n  Fabio Franzini - @franzinifabio\n  Fernando Calero - @Vino_Symposium\n  Foyin Olajide-Bello - @foyinb\n  Frank Cornu (aequos) - @FranckCornu\n  Ganesh Sanap - @ganeshsanap20\n  Garry Trinder (CPS) - @garrytrinder\n  Gautam Sheth (Valo) - @gautamdsheth\n  Geetha Sivasaiam (Artis Consulting) - @GSiVed\n  Giacomo Pozzoni (DQC Sverige Ab) - @PozzoniGiacomo\n  Gurudatt Bhat - @gurudattnb\n  Haniel Croitoru (Protiviti) - @HCroitoru\n  Harold Wolfinger\n  Heidi Walstrom (HealthPartners)\n  Henrik Yllemo (Ylltec Sweden AB) - @yllemo\n  Hubert Lam (NSW Department of Education) - @z3019494\n  James Tallman (Washington State OFM) - @jtallman\n  Jarbas Horst (Valo) - @devjhorst\n  Jasey Waegebaert\n  Jeroen van der Meer - jeroenvdmeer\n  Jens Otto Hatlevold (Bouvet) - jensotto\n  Jeremy Wong - navhaxs\n  João Mendes - @joaojmendes\n  Joe\u0026rsquo;l Brenny (Great River Energy) - @jbrenny\n  Joel Rodrigues (Storm Technology) - @JoelFMRodrigues\n  John O\u0026rsquo;Keeffe\n  John Ravas\n  Julie Peck (Cambridge Consultants)\n  Julie Turner (Sympraxis Consulting) - @jfj1997\n  Karl-Johan Dahl - kjdahldev\n  Kathleen Boilek (Alaka\u0026rsquo;Ina Foundation) - @kaboilek\n  Keerthivasan Ravikumar (McKesson Europe AG) - @keerthincloud\n  Kent Warner - @Ozarkkent\n  Kerry Lambert (NI) - @kazoogal23\n  Keval Solanki - @keval_solanki\n  Kevin Byrne\n  Kevin Gregg\n  Kevin McCarron - @cnective\n  Kirti Baldawa (Albertsons Companies)\n  [Konrad Kolodziejak]{.commit-author .user-mention} - wilecoyotegenius\n  Kris Spencer\n  Kyle Daley (Gimmal LLC) - DaleyKD\n  Lance Yoder (Cerner) - @lyoder\n  Laura Kokkarinen (Sulava) - @LauraKokkarinen\n  Lindsay Shelton - @lshelton_tech\n  Luis Mañes (ClearPeople) - @luismanez\n  Luise Freese (Luise Freese M365 Princess) - @LuiseFreese\n  Manjunath Puttaswamy (Momentive Performance Materials India Private Limited) - @ManjunathPutta3\n  Marc D Anderson (Sympraxis Consulting) - @sympmarc\n  Marcus Cadena - @marcusc83\n  Markus Hanisch - Markus-Hanisch\n  Markus Möller - @moeller2_0\n  Matthew Devaney (Hitachi Solutions) - @mattbdevaney\n  Melanie Austin\n  Melissa Declercq (Savaco NV)\n  Michael Appinger\n  Michaël Maillot (onepoint) - @michael_maillot\n  Michael Roth - @MichaelRoth42\n  Miguel Angel García Martínez (ClearPeople Ltd) - magarma\n  Mike Adler - @MichaelAdler\n  Mike Duffy (Boardwalk Pipelines) - @mike_duffy\n  Mohamed Ashiq Faleel (Tata Consultancy Services) - @ashiqfaleel\n  Mohamed Derhalli (BDO Canada) - derhallim\n  Muralidharan Deenathayalan (Quanticate India Pvt Ltd, Bangalore, India) - @muralidharand\n  Nanddeep Nachan \u0026ndash; @NanddeepNachan\n  Naresh Kuncham (Sacha solutions) - Nareshkun\n  Nick Brown (Cardiff University) - @techienickb\n  Nick Sevens (delaware) - NickSevens\n  Nicolas Kheirallah - @NicolasKheiral2\n  Nikki Chapple (NTT Cloud Communications) - @chapplenikki\n  Nizar Grindi (Avanade) - @nizar_grindi\n  Ole-Martin Heggen (Computas AS) - Swampen\n  Omar El-Anis - omarelanis\n  Oscar Fuentes - @oappdev\n  Oz Ortiz - ortiox\n  Paolo Pialorsi (PiaSys.com) - @PaoloPia\n  Patrik Hellgren (Sherpas Group) - @patrikhellgren\n  Patrick Lamber (Expertsinside AG) - @patricklamber\n  Patrick Tucker (KiZAN) - @Tuckersnet\n  Paul Bullock (CaPa Creative Ltd) - @pkbullock\n  Paul Schaeflein (AddIn365) - @paulschaeflein\n  Pete Simpkins (Fluid Interiors) - @simpkinspete\n  Peter Paul Kirschner (cubido business solutions GmbH) - @petkir_at{.Link\u0026ndash;primary}\n  Phil Broadbery (PKF) - @peb71b\n  Prabhjit Singh (HCL)\n  P3N - P3N\n  Ralph Rivas (Sogeti) - @bigpix2000\n  Ravikumar Pasupuleti - @ravikpasupuleti\n  Ravichandran Krishnasamy (Content Formula) - @spfx_blog\n  Remy Blok (Prodware) - remyblok\n  Rick Van Rousselt (Advantive) | @RickVanRousselt   Rocio Holub (DAI)\n  Ron Jones (Organogenesis)\n  Ross Allan (PKF LittleJohn)\n  Russell Fulcher (PCX) - @rdfgoalie\n  Sam Collins (Coupled Technology) - @samc148\n  Sandy Ussia (Lightning Tools) - @SandyU\n  Sergei Sergeev (Mastaq) - @sergeev_srg\n  Shawn Miller - @shawnpmiller\n  Shiva Bezwada (JCS Solutions LLC) - @Texaport\n  Siddharth Vaghasia - @siddh_me\n  Simon Doy (iThink 365) - @simondoy\n  Simon Hudson (Cloud2) - @simonjhudson\n  Simon Ågren (Sogeti) - @Agrenpoint\n  Spencer Harbar (Triumph Media Limited) - @harbars\n  Stefan Bauer (n8d) - @StfBauer\n  Stephan Bisser (Solvion) - @stephanbisser\n  Steven Babulski (Progressive) - @sbabulski\n  strafe - strafe\n  Subash Das - @subashsps\n  Sudhir B - @sudhir_bhad\n  Sujith Pasupuleti - sujith1907\n  Susan McClements (1st Source Bank) - @smcclements\n  Tammy Dupuy (CSULB)\n  Tetsuya Kawahara - @techsn_k\n  Theresa Lubelski - @SharePointMadam\n  Thomy Gölles (Solvion) | @thomyg\n  Todd Baginski (Canviz) - @toddbaginski\n  umaknow-william - umaknow-william\n  Wictor Wilen (Avanade) - @wictor\n  Velin Georgiev (Pramerica) \u0026ndash; @velingeorgiev\n  Veronique Lengelle (CPS) - @veronicageek\n  Vipul Kelkar (Rapid Circle) - @vipulkelkar\n  Yannick Plenevaux (PVX Solutions) - @yp_code\n  Yuriy Samorodov - YuriySamorodov\n  Yves Habersaat (Sword Group) - @yhabersaat\n  Companies: Here\u0026rsquo;s the companies, which provided support the community initiative for this month by allowing their employees working for the benefit of others in the community. There were also people who contributed from other companies during last month, but we did not get their logos and approval to show them in time for these communications. If you still want your logo for this month\u0026rsquo;s release, please let us know and share the logo with us. Thx.\n   Microsoft people: Here\u0026rsquo;s the list of Microsoft people who have been closely involved with the PnP work during last month.\n  Antons Mislevics - antonsmislevics\n  Allen Snow - @asnow003\n  Antons Mislevics - antonsmislevics\n  April Dunnam - @aprildunnam\n  Ayca Bas - @aycabs\n  Bert Jansen - @O365Bert\n  Beth Pan - @beth_panx\n  Bob German - @Bob1German\n  Charles Sterling - @chass\n  Dan Wahlin - @DanWahlin\n  David Chesnut - davidchesnut\n  Elise Yang - @elisenyang\n  Hugo Bernier - bernierh\n  James Eccles - @jimdeccles\n  Jason Johnston - jasonjoh\n  Jeremy Kelley - @Fizzlenik\n  Joanne Hendrickson - JoanneHendrickson\n  John Nguyen - johnguy0\n  Karthig Balendran - @KarthigBalendr1\n  Kiran Bellala - @kiranbellala\n  Kevin Coughlin - @kevintcoughlin\n  Koen Zomers - @koenzomers\n  Holland Kaviani - Holland-ODSP\n  Laura Graham - Lauragra\n  Linda Lu Cannon - lindalu-MSFT\n  Loki Meyburg - @lokimeyburg\n  Luca Bandinelli - lucaband\n  Matt Crisler - @mccrisler\n  Matt Evans - MattEEvans\n  Matt Wolodarsky - @mwolodarsky\n  Melissa Torres - @Meltorac\n  Mikael Svenson - @mikaelsvenson\n  Musale Martin - musale\n  Nancy Wang - @nancyatMSFT\n  Nik Charlebois - @NikCharlebois\n  Nicolas Vogt - vogtn\n  Nikola Metulev - @metulev\n  Pam Green (Microsoft) - @contextuallib\n  Pat Miller - @PatMill_MSFT\n  Patrick Rodgers - @mediocrebowler\n  Philippe Signoret - @psignoret\n  Rabia Williams - @williamsrabia\n  Shane Weaver - shweaver-MSFT\n  Shiladitya Saha   Sean Squires - @iamseansquires\n  Sébastien Levert - @sebastienlevert\n  Steven Jia - Steven-Jia\n  Tammie Brown\n  Tom Resing - @resing\n  Tomomi Imura - @girlie_mac\n  Vesa Juvonen - @vesajuvonen\n  Waldek Mastykarz - @waldekm\n  Vincent Biret - @baywet\n  Vinit Kumar Baheti | @vinitbaheti\n  PnP Team PnP Team manages the PnP community work in the GitHub and also coordinates different open-source projects around Microsoft 365 topics. PnP Team members have a significant impact on driving adoption of Microsoft 365 topics. They have shown their commitment to the open-source and community-driven work by constantly contributing to the benefit of the others in the community. Thank you for all that you do!\n Albert-Jan Schot (Portiva) - @appieschot Alex Terentiev (SharePointalist) - @alexaterentiev Andrew Connell (Voitanos) \u0026ndash; @andrewconnell Andrew Koltyakov (ARVO Systems) \u0026ndash; @andrewkoltyakov Beau Cameron (Aerie Consulting) - @Beau__Cameron Chris Kent (DMI) \u0026ndash; @theChrisKent David Warner II (Catapult) - @DavidWarnerII Elio Struyf (Struyf Consulting) \u0026ndash; @eliostruyf Emily Mancini (Sympraxis Consulting) - @EEMancini Eric Overfield (PixelMill) - @EricOverfield Erwin van Hunen (Valo Intranet) \u0026ndash; @erwinvanhunen Frank Cornu (aequos) - @FranckCornu Garry Trinder (CPS Solutions) - @garrytrinder Gautam Sheth (Valo Intranet) - @gautamdsheth Julie Turner (Sympraxis Consulting) - @jfj1997 Laura Kokkarinen (Sulava) - @LauraKokkarinen Luise Freese - @LuiseFreese Marc D Anderson (Sympraxis Consulting) - @sympmarc Paolo Pialorsi (Piasys.com) \u0026ndash; @PaoloPia Patrick Lamber (Expertsinside AG) - @patricklamber Paul Bullock (CaPa Creative Ltd) - @pkbullock Rabia Williams (Engage Squared) - @williamsrabia Stefan Bauer (n8d) \u0026ndash; @StfBauer Velin Georgiev (Pramerica) \u0026ndash; @velingeorgiev Veronique Lengelle (CPS) - @veronicageek Yannick Plenevaux (PVX Solutions) - @yp_code  Here are the Microsoft Internal PnP Core team members:\n April Dunnam - @aprildunnam Bert Jansen \u0026ndash; @O365Bert Bob German - @Bob1German Hugo Bernier - @bernierh Koen Zomers - @koenzomers Mikael Svenson \u0026ndash; @mikaelsvenson Patrick Rodgers \u0026ndash; @mediocrebowler Rabia Williams - @williamsrabia Sébastien Levert - @sebastienlevert Vesa Juvonen \u0026ndash; @vesajuvonen Waldek Mastykarz \u0026ndash; @waldekm Wictor Wilen (Avanade) - @wictor  Next steps See all of the available community calls, tools, components and other assets from https://aka.ms/m365pnp. Get involved! Got ideas or feedback on the topics to cover, additional partnerships, product feature capabilities? - let us know. Your input is important for us, so that we can support your journey in Microsoft 365. \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 Community (PnP) \u0026ndash; June 7th 2021\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-june-2021-update/images/pnp-june-promo-summary_hud813054ef258626a0a32f7c1ba076c27_463449_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-june-2021-update/","tags":[],"title":"Microsoft 365 PnP Community -- June 2021 update"},{"categories":["Community post"],"contents":"Microsoft 365 is a rich platform for building applications. Here are the types of apps you can build on Microsoft 365.\nWhy should you build applications on Microsoft 365 Microsoft 365, previously known as Office 365, is Microsoft\u0026rsquo;s productivity cloud, that organizations use for communication and collaboration. 250 million users work with Microsoft 365 creating files, sending emails, meeting, reading information stored in Microsoft 365, and more.\nMicrosoft 365 is also a highly extensible development platform. All the information about its users as well as the content they create is stored in Microsoft 365 and, bearing the necessary permissions, available for you to interact with in your applications.\nThinking about building apps on Microsoft 365, you can distinguish between two types of apps: standalone apps and apps that extend Microsoft 365.\n   Custom apps: build your experience First of all, you can build custom apps. These can be mobile apps, web apps, desktop apps, device-native apps, workflow automation, or scheduled processes. You can build these apps using any programming language and run them on any platform you want. You choose how you distribute and operate them. In short: you own the technology stack and the full user experience.\nUsers start their journey in your app. Because your app is connected to Microsoft 365, you can show relevant information from Microsoft 365 along your app\u0026rsquo;s functionality. And because you can present the data in your app seamlessly, users might not even realize that they\u0026rsquo;re looking at data coming from Microsoft 365.\nTo get the most out of integrating your custom app with Microsoft 365, you need to allow users to sign in to your app with their Microsoft 365 account. That way, you will be able to retrieve the relevant information on their behalf from Microsoft 365.\nExtend Microsoft 365 experiences Microsoft 365 offers many extension points to bring your app where your users are. By exposing your app inside Microsoft 365, you make your app a part of people\u0026rsquo;s work. Because your app is available right where they are, they can focus on their work and interact with your app without having to switch the context.\nExtend conversations Microsoft Teams host conversations on Microsoft 365. You can bring your app as a part of a conversation in several ways.\nFirst of all, you can build conversational bots. Bots help people complete tasks through conversations. They\u0026rsquo;re a great way to expose relevant features of your app and guide users through the scenario like a personal assistant.\n   Another way to expose your app in a Teams conversation is through messaging extensions. Messaging extensions help people complete tasks in a visually-compelling way. They\u0026rsquo;re similar to bots but are more visually oriented and ideal for showing rich data\n   Finally, you can send notifications from your app to conversations via webhooks. By using adaptive cards, you can show the data in a rich and actionable way.\nExtend portals Many organizations that use Microsoft 365 use portals to facilitate communication and manage knowledge. Using rich pages, they publish content and build interactive dashboards. These pages consist of reusable building blocks - web parts, that end-users put together.\n   You can extend portals on Microsoft 365 in two ways. First, you can build widgets, called web parts. Users, who create pages, can put your web parts on pages to enrich the content. Your web parts can show data from Microsoft 365 as well as any other API.\nAnother way to extend portals is by building extensions. SharePoint Framework extensions allow you to execute a piece of code on every page or change how list fields are rendered. Just like with web parts, you can load data from Microsoft 365 or any other API in your extensions.\nExtend documents When creating documents on Microsoft 365, users can enrich them with interactive elements, like maps or charts. These elements can be connected to APIs and make documents interactive and present data that is always up-to-date.\n   You can also build task pane extensions for Microsoft Office applications that help users work with their documents. A task pane could help people lookup their customer information when writing contracts or order information when creating invoices.\n   Connect your application to Microsoft 365 There are several types of applications that you can build on Microsoft 365. No matter if you want to develop a custom application or extend Microsoft 365, you can connect your app to Microsoft 365. To get information and insights stored in Microsoft 365, you would connect to Microsoft Graph - the web API for Microsoft 365. To help you communicate with Microsoft Graph, Microsoft offers SDKs for the most popular platforms.\nOver to you Building apps for Microsoft 365 offers a great opportunity to reach millions of users and help them work more effectively. If you want to have a quick look at what kind of data you can retrieve from Microsoft 365, I\u0026rsquo;d suggest you look at the interactive Graph Explorer. If you\u0026rsquo;re considering building a web app, I would also recommend that you take a look at Microsoft Graph Toolkit - a set of web components that make it very easy to show data from Microsoft 365 in your app. When you\u0026rsquo;re ready to start building your app, sign up for the Microsoft 365 developer program to get a dev environment.\nLooking forward to hearing what you\u0026rsquo;re going to build. And don\u0026rsquo;t hesitate to reach out if you have any questions!\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-june-2021-update/images/pnp-june-promo-summary_hud813054ef258626a0a32f7c1ba076c27_463449_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/what-kind-of-apps-can-you-build-on-microsoft-365/","tags":[],"title":"What kind of apps can you build on Microsoft 365?"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"The SharePoint community monthly call is our general monthly review of the latest SharePoint news (news, tools, extensions, features, capabilities, content and training), engineering priorities and community recognition for Developers, IT Pros and Makers. This monthly community call happens on the second Tuesday of each month. You can download recurrent invite from https://aka.ms/sp-call.\nCall summary Summer break and community call schedule updates reviewed. You are invited to join the Viva Connections private preview! Don\u0026rsquo;t miss the SharePoint samples gallery. Preview the new Microsoft 365 Extensibility look book gallery. Visit the new Microsoft 365 PnP Community hub at Microsoft Tech Communities! Sign up and attend one of a growing list of Sharing is Caring events this month. Check out our weekly shows \u0026ndash; Microsoft 365 PnP Weekly (latest news and announcements from Microsoft and community) and Microsoft 365 Developer Podcast (focusing on Microsoft 365 dev topics). The Microsoft 365 Update - Community (PnP) | June 2021 is now available. Developer and non-developer entries in UserVoice were reviewed. We are in the process of moving from UserVoice to a 1st party solution for customer feedback/feature requests. SharePoint roadmap priorities reviewed. A huge thank you to the record number of contributors and organizations actively participating in this PnP Community during May. You make this community stronger. The host of this call was Vesa Juvonen (Microsoft) @vesajuvonen. Q\u0026amp;A took place in the chat throughout the call. SharePoint Site Templates \u0026ndash; the latest features and experiences\nwalk through new 1st party site templates\u0026rsquo; feature with demo and Q\u0026amp;A. Call participants joined a live technical requirements discussion focused on enabling 3rd parties to create customer site templates in the future. A standing design criteria for 1st \u0026amp; 3rd party templates includes leveraging the Community\u0026rsquo;s existing investments in modern site scripts and site designs. 9 OOB Communications and Teams sites templates to be released in July-August. Actions  Join on the Viva Connections private preview! | aka.ms/viva/connections/preview/register Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; June 29th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; June 23rd  PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; June 17th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; June 24th AMA (Ask Me Anything) \u0026ndash; Microsoft Graph \u0026amp; MGT \u0026ndash; June 8th First Time Presenter \u0026ndash; June 30th More than Code with VSCode \u0026ndash; June 16th Maturity Model Practitioners \u0026ndash; June 15th PnP Office Hours \u0026ndash; 1:1 session - Register PnP Buddy System - Request a Buddy   Download the recurrent invite for this call \u0026ndash; https://aka.ms/sp-call. You can check the latest updates in the monthly summary and at aka.ms/spdev-blog.  This call was delivered on Tuesday, June 8, 2021. The call agenda is reflected below with direct links to specific sections. You can jump directly to a specific topic by clicking on the topic\u0026rsquo;s timestamp which will redirect your browser to that topic in the recording published on the Microsoft 365 Community YouTube Channel.\nCall agenda  UserVoice status for non-dev focused SharePoint entries \u0026ndash; 12:32 UserVoice status for dev focused SharePoint Framework entries \u0026ndash; 13:43  SharePoint community update with latest news and roadmap \u0026ndash; 14:25 Community contributors and companies which have been involved in the past month \u0026ndash; 16:07  Topic: SharePoint Site Templates \u0026ndash; the latest features and experiences - Melissa Torres (Microsoft) | @Meltorac, Nicole Woon (Microsoft) | @NovelNicole \u0026amp; Matt Mooty (Microsoft \u0026ndash; 19:32 The full recording of this session is available from Microsoft 365 \u0026amp; SharePoint Community YouTube channel - http://aka.ms/m365pnp-videos. Presentation slides used in this community call are attached to this post.  Resources Additional resources on covered topics and discussions.\n  Support - Apply and customize SharePoint site templates   Blog Post - Use SharePoint\u0026rsquo;s new site templates today!   Article: THE INTRAZONE PODCAST EPISODE   PnP Weekly \u0026ndash; Episode 130 with the Software Engineer behind the Microsoft Graph Toolkit, Nikola Metulev (Microsoft) | @metulev. | video | podcast\n  Register for the Private Preview of Viva Connections\n  Microsoft 365 PnP Community hub | aka.ms/m365pnp/community   Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft 365 Developer Podcast | m365devpodcast.com\n  SharePoint sample gallery | aka.ms/spfx-webparts\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  Viva Connections https://aka.ms/VivaConnections   Additional resources  PnP Weekly - Videos PnP Weekly - Podcasts M365 Community Documentation - (non-dev) SharePoint Documentation and Guidance - (technical) SharePoint Framework v1.11 SharePoint Framework v1.11 release notes Exploring how to get started on open-source and community work? SharePoint Starter Kit Recurrent invite to SharePoint Development monthly calls - http://aka.ms/spdev-call SharePoint Developer documentation - http://aka.ms/spdev-docs SharePoint Development Issues - http://aka.ms/spdev-issues SharePoint GitHub organization - http://github.com/SharePoint SharePoint Development UserVoice - new feature requests - http://aka.ms/spdev-uservoice  Upcoming Calls | Recurrent Invites  Office add-in monthly call \u0026ndash; June 9th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; June 10th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall M365 General Dev call \u0026ndash; June 10th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Teams monthly call \u0026ndash; June 15th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall Power Apps monthly call \u0026ndash; June 16th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; June 17th at 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft Identity Platform \u0026ndash; June 17th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar \u0026quot;Too many links, can\u0026rsquo;t remember\u0026quot; - not a problem... just one URL is enough for all Microsoft 365 community topics - http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;  ","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-community-call-june-8th-2021/images/210608-together-mode_huf244bf74ae6f069be35b6073a8317bd3_7644472_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-community-call-june-8th-2021/","tags":[],"title":"SharePoint community call - June 8th, 2021"},{"categories":["PnP Weekly"],"contents":" In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by the Software Engineer in the Windows team behind the Microsoft Graph Toolkit, Nikola Metulev (Microsoft) | @metulev. Topics discussed in this session include - why Microsoft is committed to working with Community and open source. Nikola\u0026rsquo;s evangelist roots, his many projects while on one team and key learnings on open source. How Microsoft Graph Toolkit (MGT) came about, how the team prioritizes what to build and what\u0026rsquo;s coming in the next 6 months. And as the usual practice, each participant covers off on what they are doing this week \u0026ndash; did one say: A new Microsoft Teams SSO provider? Covering also 18 new articles from Microsoft and the Community from pat week! Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n[This episode was recorded on Monday, June 7, 2021.]\n Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com. These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!  Microsoft articles  SharePoint Roadmap Pitstop: May 2021 - Mark Kashman (Microsoft) | @mkashman Using 360° Imagery in SharePoint Spaces - Matt Crisler (Microsoft) | @mccrisler Migrate content from Box, Dropbox, and Google Workspace into Microsoft 365 - release update - Mark Kashman (Microsoft) | @mkashman Deep dive on Viva Learning at the Learning Transformation Briefings - John Mighell (Microsoft) Maximize results with collaborative work management in Microsoft 365 - Andrea Lum (Microsoft) Choose the right Microsoft tool for managing your work - Shin-Yi Lim (Microsoft) Change notifications extended for federated chats - Microsoft Universal Actions in Adaptive Cards on Microsoft Teams - Shiladitya Saha (Microsoft)  Community articles  Getting started with graph API in SPFx web part - Chandani Prajapati | @Chandani_SPD Announcing new file components, MSAL 2 Provider, and SharePoint Framework library in Microsoft Graph... - Microsoft Sample script: quickly remove pending SharePoint API permission requests - Waldek Mastykarz (Microsoft) | @waldekm Using sp-core-library with jest - Marcin Wojciechowski (Valo) | @mgwojciech We shipped version 1.2.0 of the PnP Core SDK - Bert Jansen (Microsoft) | @O365Bert SPFx SwatchColorPicker Office UI Fabric React Control example - Bijay Kumar (SPGuides.com) | @fewlines4biju Issue with PnP JS sp.site.exists() call when page url contains hashes - Alexey Sadomov (Valo) | @sadomovalex #DevHack: Get the shared file info with Microsoft Graph - Elio Struyf (Squarl) | @eliostruyf Dataverse tables relevant to approvals - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Custom Backgrounds For Microsoft Teams Together Mode - Daniel Glenn (InfoWorks, Inc) | @DanielGlenn, Darrell Webster (Modern Workplace Change) | @darrellaas  Additional resources  Microsoft Graph Toolkit - aka.ms/mgt PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.  \u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-130/images/Thumb-Ep130_hu87d35a95546a793e2000379db56ec26d_531857_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-130/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 130"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from June 3rd is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary Register for the Private Preview of Viva Connections (including access to SPFx v.1.13) and while you\u0026rsquo;re at it, register for June trainings on Sharing-is-caring. Latest update on SharePoint Framework v1.13.0 \u0026ndash; extensibility options with Viva Connections (demoed today), Teams improvements, tooling updates, Store modernization and more. As well CLI for Microsoft 365 v3.10.0 and PnP Modern Search v4.2.0 and v3.20.0 were released. A major topic focus of this call is developing for Microsoft Viva Connections \u0026ndash; Overview, authoring a Viva Connections Dashboard and a deep dive on developing a Custom Card Extension using SharePoint Framework. There were three PnP SPFx samples delivered in last 2 weeks. Great work! **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago)  PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.12.1 v1.13.0 Preview in summer PnPjs Client-Side Libraries v2.5.0 Planned release v2.6.0 June 12, v3.0.0 developments underway CLI for Microsoft 365 v3.10.0 v3.10.0 preview released Reusable SPFx React Controls v2.7.0 (SPFx v1.11), v3.1.0 (SPFx v1.12.1) Reusable SPFx React Property Controls v2.6.0 (SPFx v1.11), v3.1.0 (SPFx v1.12.1) PnP SPFx Generator v1.16.0 Angular 11 support PnP Modern Search v4.2.0, v3.20.0  The host of this call is Patrick Rodgers (Microsoft) @mediocrebowler. Q\u0026amp;A takes place in chat throughout the call. Thanks everybody for being part of the Community and helping making things happen. You are absolutely awesome!\nActions  Join on the Viva Connections private preview! | aka.ms/viva/connections/preview/register Feedback wanted: Regarding PnP PowerShell \u0026ndash; \u0026ldquo;What if we did not return classic CSOM objects from the cmdlets?\u0026rdquo; Comments to: @erwinvanhunen.  Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; June 29th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; June 23rd PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; June 17th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; June 24th AMA (Ask Me Anything) \u0026ndash; Microsoft Graph \u0026amp; MGT \u0026ndash; June 8th AMA (Ask Me Anything) \u0026ndash; Microsoft Teams Dev - June First Time Presenter \u0026ndash; June 30th More than Code with VSCode \u0026ndash; June 16th Maturity Model Practitioners \u0026ndash; June 15th PnP Office Hours \u0026ndash; 1:1 session - Register PnP Buddy System - Request a Buddy   Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call Demo:  **Get started developing mobile experiences for Microsoft Viva Connections - a preview of SharePoint Framework 1.13. ** Connect is about providing fast and easy access \u0026ndash; to insights, tasks, apps and more from a Dashboard (personalized index) visible in Microsoft Teams desktop, web and mobile surfaces as well as in SharePoint Desktop and Modern web pages. The Dashboard is a collection of 1st party native and 3rd party custom Cards and Quick Views authored using SPFx and leveraging Adaptive Cards. See how to assemble a Dashboard and develop a custom card using the Dashboard web part and SPFx.\nSPFx extension samples: (https://aka.ms/spfx-extensions)\n Soon  SPFx web part samples: (https://aka.ms/spfx-webparts)\n Data Table - Chandani Prajapati | @Chandani_SPD Page Contributors - Ari Gunawan | @arigunawan3023 OneDrive Finder - André Lage | @aaclage\n\\  Thank you for your great work. Samples are often showcased in Demos. Agenda items  Latest updates on SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 4:38 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 6:43 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 8:40 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 9:26 PnP Modern Search - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 10:45 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 11:49  Demos   Demo: Get started developing mobile experiences for Microsoft Viva Connections, a preview of SharePoint Framework 1.13 - Luca Bandinelli (Microsoft) | @BandinelliLuca, Pat Miller (Microsoft) | @PatMill_MSFT and John Nguyen (Microsoft) [\u0026ndash; ]16:00\n [Viva Connections Extensibility and Dashboard - Overview \u0026ndash; 16:00] [Demo: Authoring a Viva Connections Dashboard \u0026ndash; 19:11] [Custom Cards - Overview \u0026ndash; 37:48] [Demo: Developing a Custom Card using SharePoint Framework v \u0026ndash; 46:00]    Resources Additional resources around the covered topics and links from the slides.\n Register - Register for Viva Connections developer platform updates and private Beta  Viva Connections https://aka.ms/VivaConnections Designer \u0026ndash; Adaptive Cards  PnP Weekly \u0026ndash; Episode 129 Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm discuss announcements from Microsoft Build 2021 | video | podcast  General resources  Gallery - Microsoft 365 Extensibility look book gallery  Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring Tools - PnP Modern Search v4| https://aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other topics mentioned  SharePoint dev documentation SharePoint dev issue list  Upcoming Calls | Recurrent Invites   SharePoint monthly call \u0026ndash; June 8th at 8:00am PDT | https://aka.ms/sp-call\n  Office add-in monthly call \u0026ndash; June 9th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash; June 10th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  M365 General Dev call \u0026ndash; June 10th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Microsoft Teams monthly call \u0026ndash; June 15th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall\n  Power Apps monthly call \u0026ndash; June 16th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  SharePoint Framework call \u0026ndash; June 17th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Microsoft Identity Platform \u0026ndash; June 17th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar   Microsoft Graph call \u0026ndash; July 6th at 8:00 am PDT | https://aka.ms/microsoftgraphcall PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 4th of June 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-3rd-of-june-2021/images/210603-together-mode_hu44591a225caa8a57339f24dbb6d05538_6292906_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-3rd-of-june-2021/","tags":[],"title":"SharePoint Framework Community Call -- 3rd of June, 2021"},{"categories":["Community post"],"contents":"What is Graph API?  Microsoft Graph provides a unified programmability model that you can use to build apps for organizations and consumers that interact with the data of millions of users. You can easily access Microsoft Graph also from SharePoint Framework solutions. Microsoft Graph exposes REST APIs and client libraries to access data on the following Microsoft services like Bookings, Calendar, Delve, Excel, Microsoft 365 compliance eDiscovery, Microsoft Search, OneDrive, OneNote, Outlook/Exchange, People (Outlook contacts), Planner, SharePoint, Teams, To Do, Workplace Analytics. for more details refer to Graph API. How to test API in graph explorer?  Before creating an SPFx web part implementation with Graph API we can explore APIs in Graph Explorer. At here To access your own data you have to log in with your O365 Credentials. Whenever you sign in it will ask for Permission so you have to Accept it. In the left panel, you can find multiple sample queries by category so you can check them and run them. If you are testing any API and get an error like this:\nForbidden - 403 - You need to consent to the permissions on the Modify permissions (Preview) tab.\nThen follow the below steps,  Select Permissions ![Select Permssion.png](images/Select Permssion.png) Then select the category in which you want to set permission and select the Consent button.   3 After clicking on the Consent it will open a popup so check the checkbox and Accept it.     Then select the run query and it will retrieve the results. that\u0026rsquo;s it :) Now lets\u0026rsquo; move to the SPFx implementation. Implementation  Open a command prompt\nMove to the path where you want to create a project\nCreate a project directory using: md GraphAPIDemo Move to the above-created directory using: cd GraphAPIDemo Now execute the below command to create an SPFx solution: yo @microsoft/sharepoint It will ask some questions, as shown below, ![Project Structure.png](images/Project Structure.png)\nAfter a successful installation, we can open a project in any source code tool. Here, I am using the VS code, so I will execute the command:\ncode . Now will create a demo to read messages of a user. for more details refer to Microsoft Graph. So first of all we have to set permission as per our endpoint in package-solution.json. Now the question is which permission we have to add so there are multiple ways.\n1. In the graph explorer For eg. we have to use messages endpoint so first, we will test it in graph explorer. so while we running the query there is an permission tab under the run query button so after the response checks the permission tab. It shows all required permissions for the endpoint as below. ![Modify Permission.png](images/Modify Permission.png) 2. Official documentation for endpoint You can also find all the details in the official document for all the endpoints. Implementation  1. In the package-solution.json file we will add permission. \u0026#34;webApiPermissionRequests\u0026#34;: [ { \u0026#34;resource\u0026#34;: \u0026#34;Microsoft Graph\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;Mail.Read\u0026#34; } ]  2. Move to the IGraphApiDemoProps.ts and update as below, import { MSGraphClient } from \u0026#34;@microsoft/sp-http\u0026#34;; export interface IGraphApiDemoProps { description: string; graphClient: MSGraphClient; }  3. Create a file IGraphApiDemoState.ts inside src\\webparts\\graphApiDemo\\components and create a state interface as below export interface IGraphApiDemoState { messages: [{ subject: string; }] }  4. Move to the**{WebpartName}Webpart.ts** Import MSGraphClient module Create an OnInit() to initialize the Graph Configuration for the current context. In the render() set the graphClient property import * as React from \u0026#39;react\u0026#39;; import * as ReactDom from \u0026#39;react-dom\u0026#39;; import { Version } from \u0026#39;@microsoft/sp-core-library\u0026#39;; import { IPropertyPaneConfiguration, PropertyPaneTextField } from \u0026#39;@microsoft/sp-property-pane\u0026#39;; import { BaseClientSideWebPart } from \u0026#39;@microsoft/sp-webpart-base\u0026#39;; import * as strings from \u0026#39;GraphApiDemoWebPartStrings\u0026#39;; import GraphApiDemo from \u0026#39;./components/GraphApiDemo\u0026#39;; import { IGraphApiDemoProps } from \u0026#39;./components/IGraphApiDemoProps\u0026#39;; import { MSGraphClient } from \u0026#39;@microsoft/sp-http\u0026#39;; export interface IGraphApiDemoWebPartProps { description: string; } export default class GraphApiDemoWebPart extends BaseClientSideWebPart\u0026lt;IGraphApiDemoWebPartProps\u0026gt; { private graphClient: MSGraphClient; public onInit(): Promise\u0026lt;void\u0026gt; { return new Promise\u0026lt;void\u0026gt;((resolve: () =\u0026gt; void, reject: (error: any) =\u0026gt; void): void =\u0026gt; { this.context.msGraphClientFactory .getClient() .then((client: MSGraphClient): void =\u0026gt; { this.graphClient = client; resolve(); }, err =\u0026gt; reject(err)); }); } public render(): void { const element: React.ReactElement\u0026lt;IGraphApiDemoProps\u0026gt; = React.createElement( GraphApiDemo, { description: this.properties.description, graphClient: this.graphClient, } ); ReactDom.render(element, this.domElement); } protected onDispose(): void { ReactDom.unmountComponentAtNode(this.domElement); } protected get dataVersion(): Version { return Version.parse(\u0026#39;1.0\u0026#39;); } protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration { return { pages: [ { header: { description: strings.PropertyPaneDescription }, groups: [ { groupName: strings.BasicGroupName, groupFields: [ PropertyPaneTextField(\u0026#39;description\u0026#39;, { label: strings.DescriptionFieldLabel }) ] } ] } ] }; } }  5. Move to the GraphApiDemo.tsx and call API here and render the data. import * as React from \u0026#39;react\u0026#39;; import styles from \u0026#39;./GraphApiDemo.module.scss\u0026#39;; import { IGraphApiDemoProps } from \u0026#39;./IGraphApiDemoProps\u0026#39;; import { IGraphApiDemoState } from \u0026#39;./IGraphApiDemoState\u0026#39;; import { escape } from \u0026#39;@microsoft/sp-lodash-subset\u0026#39;; export default class GraphApiDemo extends React.Component\u0026lt;IGraphApiDemoProps, IGraphApiDemoState\u0026gt; { constructor(props: IGraphApiDemoProps) { super(props); this.state = { messages: [{ subject: \u0026#39;\u0026#39; }] } } public getDriveItems() { let getMessages: string = \u0026#34;me/messages\u0026#34;; if (!this.props.graphClient) { return; } this.props.graphClient .api(getMessages) .version(\u0026#34;v1.0\u0026#34;) .select(\u0026#34;subject,sentDateTime,webLink\u0026#34;) .top(5) .get((err: any, res: any): void =\u0026gt; { if (err) { console.log(\u0026#34;Getting error in retrieving mesages =\u0026gt;\u0026#34;, err) } if (res) { console.log(\u0026#34;Success\u0026#34;); if (res \u0026amp;\u0026amp; res.value.length) { console.log(res.value); this.setState({ messages: res.value }) } } }); } public componentDidMount() { this.getDriveItems(); } public render(): React.ReactElement\u0026lt;IGraphApiDemoProps\u0026gt; { return ( \u0026lt;div className={styles.graphApiDemo}\u0026gt; { this.state.messages.map(m =\u0026gt; \u0026lt;\u0026gt;\u0026lt;span\u0026gt;{m.subject}\u0026lt;/span\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;/\u0026gt;)} \u0026lt;/div\u0026gt; ); } }  Now serve the application using the below command, gulp serve Now test the web part in SharePoint-SiteURL + /_layouts/15/workbench.aspx. Output    Find the full source code. Summary  In this article, we have seen how to use graph API in SPFx web part and graph explorer. I hope this helps. Sharing is caring!!\n","image":"https://pnp.github.io/blog/post/getting-started-with-graph-api-in-spfx-webpart/images/Permssions_hu485d621c5d8757ac26b6bc3b1bcc36ec_44039_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/getting-started-with-graph-api-in-spfx-webpart/","tags":["Microsoft Graph","SharePoint framework (SPFx)"],"title":"Getting started with Graph API in SPFx webpart"},{"categories":["Microsoft Graph community call"],"contents":" This month\u0026rsquo;s community call features presentations on Assignment Graph API (v1.0 will be released to Microsoft Teams EDU tenants within days), Dev Tips and Tricks with Microsoft Graph (save coding time with 2 VS Code Extensions), and Microsoft Graph Data Connect (extracting information at scale from Microsoft Graph). Q\u0026amp;A throughout call in chat. Microsoft Graph session recordings from Microsoft Build Conference are now available on demand. The call was hosted by Brian T. Jackett (Microsoft) | @BrianTJackett. Microsoft Presenters were Leif Brenne, Mei Tan and Nik Charlebois. Guest presenter Elio Struyf (Squarl). This session was recorded on June 1, 2021.\nTopics Assignments API \u0026ndash; specifically the Assignment Graph API v1.0 will be released in Microsoft Teams EDU tenants within days. The APIs align to an instructor\u0026rsquo;s workflows around assignments \u0026ndash; create, append resources, track submissions, grade and post results back to students. Try out the APIs in the Graph Explorer tool. Think of a Team as a Class, and assignments are the class activities/coursework. Dev Tips and Tricks with Microsoft Graph - Save time with 2 VS Code Extensions 1) MS Graph Completion (autocompletion for Microsoft Graph URLs) and 2) Microsoft Graph Essentials (Preview) (CSS Completion and HTML web component attributes, if using MGT) inside Visual Studio Code. Extensions created by presenter are available in Marketplace. Microsoft Graph Essentials extension comes with snippets, code completion for CSS variables, and an extension pack. Microsoft Graph Data Connect - is about extracting information at scale from Microsoft Graph. Starting with an architecture overview \u0026ndash; learn about creating an Azure Data Factory, Azure storage account, and establishing the data pipeline connection between the Microsoft 365 dataset and storage account. Once the pipeline is setup, define source and sink, trigger the sync and use Power BI to display data insights. Actions  Interested in Presenting during this call? Contact Brian.Jackett@microsoft.com or Jeremy.Thake@microsoft.com Mark your calendar \u0026ndash; next Microsoft Graph community call is on July 6th at 08:00am PDT - https://aka.ms/microsoftgraphcall   Resources From demos:\n  Documentation - Create educationAssignment   Documentation \u0026ndash; educationAssignment API   VSCode Extension - MS Graph Completion   VSCode Extension \u0026ndash; Microsoft Graph Essentials   Web - Microsoft Graph Data Connect   Documentation - Overview of Microsoft Graph Data Connect    Agenda  Assignments API - Leif Brenne (Microsoft) | @secondleif and Mei Tan (Microsoft) \u0026ndash; 1:10 Dev Tips and Tricks with Microsoft Graph - Elio Struyf (Squarl) | @eliostruyf \u0026ndash; 22:44 Microsoft Graph Data Connect - Nik Charlebois (Microsoft) | @NikCharlebois \u0026ndash; 33:20   Microsoft Build 2021 - Microsoft Graph session recordings\n         Breakouts    BRK215 Empowering developers with powerful tooling and enabling frictionless app adoption   BRK234 Build Zero Trust ready applications starting with the Microsoft identity platform   BRK243 Build great discovery \u0026amp; collaboration apps for Microsoft 365 with new Microsoft Graph connector \u0026amp; Ad\u0026hellip;   BRK244 Three new ways to enrich your productivity apps with Microsoft Graph tools and data   On Demand    OD483 Getting started with Microsoft Graph Data Connect   OD500 Build secure B2C applications​ with Azure AD External Identities   OD531 Enlighten your Windows app with Microsoft Graph   OD534 Integrate with Microsoft Teams data using Microsoft Graph   Other    STUDIO10 Build, integrate and accelerate Multi-cloud Compliance   CON061 Develop apps with the Microsoft Graph Toolkit   CON059 Application Authentication in the Microsoft Identity platform   CON066 Integrate your app with Microsoft Teams using webhooks and connectors   Round Tables    CON-PRT148 Microsoft Graph Connectors   CON-PRT149 Microsoft Graph Toolkit   CON-PRT150 Microsoft Search for Developers    General resources  Suggestions \u0026ndash; https://aka.ms/M365Dev-Suggestions  Graph TAP Program - https://aka.ms/GraphTAPForm** ** Microsoft 365 Developer Podcast http://www.m365devpodcast.com/ Microsoft Graph Mailbag - http://aka.ms/MSGraphMailbag Microsoft Q \u0026amp; A \u0026ndash; Graph - https://aka.ms/askgraph/ Learn Module - Get started with Microsoft Graph Toolkit | https://aka.ms/mgt-learn Repo - Microsoft Graph Toolkit v2.1 | https://aka.ms/mgt  Documentation \u0026ndash; Microsoft Graph Toolkit Overview | https://aka.ms/mgt-docs Playground \u0026ndash; Microsoft Graph Toolkit Playground | https://mgt.dev  Stay connected  See the full blog post for this call at - https://aka.ms/m365pnp/community/blog Twitter - https://twitter.com/microsoft365dev @Microsoft365Dev​ YouTube - https://aka.ms/M365DevYouTube​ Recurrent Invite to this community call - https://aka.ms/microsoftgraphcall All Microsoft 365 developer community calls \u0026ndash; https://aka.ms/M365DevCalls  ","image":"https://pnp.github.io/blog/microsoft-graph-community-call/microsoft-graph-community-call-june-2021/images/MicrosoftGraphTHumbnail-June2021_hue4af3649efbda3c948196c92cccc2f1c_339584_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-graph-community-call/microsoft-graph-community-call-june-2021/","tags":[],"title":"Microsoft Graph community call -- June 2021"},{"categories":["PnP Weekly"],"contents":"In this instalment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm discuss the announcements from Build 2021 and the latest articles published by the Microsoft 365 community. Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis episode was recorded on Monday, May 31, 2021.\n Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com. These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!  Events  June 1-2, 2021 - European SharePoint Conference 2021 - Online August 9-11, 2021 - North American Collaboration Summit  Register with coupon code \u0026ldquo;PnP\u0026rdquo; for 25% off from the prize at https://nacs.ticketspice.com/nacs2021    Microsoft articles  Build the next generation of collaborative apps for hybrid work - Nicole Herskowitz (Microsoft) | @nicolelamb Microsoft Build - Book of News - Microsoft Microsoft Teams announces new developer features | Build 2021 - Microsoft Build apps faster with the latest Microsoft Teams Toolkit - Microsoft What\u0026rsquo;s New in Microsoft Teams | May 2021 - Microsoft Visualize and contextualize people and teams with a new organization browser in Outlook - Bill Baer (Microsoft) | @williambaer What\u0026rsquo;s new for admins in Microsoft 365 Apps for enterprise - April and May 2021 - Microsoft What\u0026rsquo;s New for the Microsoft 365 Developer | Build 2021 - Microsoft Four new features to build richer apps for Microsoft Teams meetings - Microsoft What\u0026rsquo;s new in Office Platform at Build 2021 - Microsoft Microsoft Graph @ Build 2021 - Microsoft Microsoft Teams App Development Challenge Winners! - Microsoft  Community articles  Microsoft 365 PnP Community Spotlight: Hugo Bernier - Hugo Bernier (Microsoft) | @bernierh \u0026amp; Luise Freese | @LuiseFreese How to invite external users to a SharePoint site or Microsoft Team using Power Automate \u0026amp; Graph API - Mohamed Ashiq Faleel (Tata Consultancy Services) | @ashiqfaleel SPFx web part form validation using React Formik - Chandani Prajapati | @Chandani_SPD Cache data when using the Microsoft Graph JavaScript SDK - Waldek Mastykarz (Microsoft) | @waldekm CLI for Microsoft 365 v3.10 - Garry Trinder (CPS) | garrytrinder New features in hTWOo UI version 0.2.0 - Stefan Bauer (N8D) | @StfBauer How to use hTWOo with a SPFx ReactJS web part - Stefan Bauer (N8D) | @StfBauer Custom Icon Buttons in Power Apps with Hover Color - Chris Kent (DMI) | @theChrisKent Environment Variables in Power Apps - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Showing the Intranet\u0026rsquo;s Link in the App Bar\u0026rsquo;s Global Navigation - Marc D Anderson (Sympraxis Consulting) | @sympmarc Simplify secret keys management for M365 applications with Azure Key Vault and Azure Managed Identit... - Sergei Sergeev (Mastaq) | @sergeev_srg Microsoft 365 Fiscal Year Retention | Event-Based Library default - Joanne C Klein | @JoanneCKlein Power Platform News Rewind May 2021 - April Dunnam (Microsoft) | @aprildunnam Episode #156 - Microsoft Graph Toolkit To Do Component - Paolo Pialorsi (PiaSys) | @PaoloPia Power Apps can now display images from Microsoft Lists - Daniel Glenn (InfoWorks, Inc) | @DanielGlenn, Darrell Webster (Modern Workplace Change) | @darrellaas  Additional resources  Power Platform Sample Gallery - for finding easily samples from the GitHub - contributions from the community are welcome! PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.  \u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-129/images/pnp-weekly-129_hu9563f335088db7beaabf5ad34368879e_764372_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-129/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 129"},{"categories":["CLI for Microsoft 365"],"contents":"Manage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use.\nWhile building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects.\nFollowing our monthly release cadence, we\u0026rsquo;ve released a new version of the CLI for Microsoft 365 with some new capabilities. Here are a few of the most noteworthy additions.\n Changes We\u0026rsquo;ve continued improving CLI building upon the changes we\u0026rsquo;ve introduced in the previous version.\nAdded support for printing errors as JSON in JSON output\nWhen scripting using the CLI, it is common to use the JSON output from commands which makes it easier to work with command responses. In the example below that uses PowerShell we can convert the JSON response into a PowerShell object using the ConvertFrom-Json cmdlet.\n$lists = m365 todo list list -o json | ConvertFrom-Json However if an error was thrown, the CLI would return the error as a plain text string and this can be inconvenient as your script is expecting a JSON response.\nTo help with error handling when using this approach, we have added support for changing the default error output type to JSON. To set the default output type for errors, execute:\nm365 cli config set --key printErrorsAsPlainText --value false Enhanced spo site apppermission commands\nWhen working with site app permissions using the CLI we previously did not return information about the app roles which can be defined, therefore we have added returning the app roles when using the spo site apppermission get and spo site apppermission list commands in the response.\nNew Commands Gets Azure AD app registration roles When creating applications that use Azure AD authentication we can define custom roles that we can assign permissions to users or apps. The application defines and publishes the app roles and interprets them as permissions during authorization. To return the roles published by an Azure AD application registration by its name, execute: m365 aad app role list --appName \u0026#34;My app\u0026#34;  Get the value of a CLI for Microsoft 365 configuration option We recently announced that we added support for configuring the CLI to your own preferences using the cli config set command, this enables you to change some of the default settings such as changing all command outputs to be JSON rather than text. To return the current value of a CLI configuration option, execute: m365 cli config get --key output  Upload files using Microsoft Graph The ability to upload files has been possible in the CLI for some time using the *spo file add *command, this command however uses SharePoint-based APIs to perform the upload and does not support new authorisation features such as the ability to control app access to specific site collections using the Sites.Selected permission scope. To add support for the new permission scope, we have added a new command that uses the Microsoft Graph in its implementation, the existing spo file add command will remain to provide backwards compatibility. To add a file to a specific site, execute: m365 file add --filePath file.pdf --folderUrl \u0026#34;https://contoso.sharepoint.com/Shared Documents\u0026#34;  Remove a specified Power App Microsoft Power Apps is a popular no/low code business application development platform in Microsoft 365 and managing apps created by business users is an important maintenance tasks for administrators. We have extended our support for Power Apps by introducing a command to remove Power Apps from an environment. To remove a specified Microsoft Power App, execute: m365 pa app remove --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d  Updates a specific application permission for a site The Microsoft Graph gives us the ability to create site permissions on SharePoint Online or OneDrive sites, which has been possible in the CLI using the spo site apppermission add command, however it was not possible to update these registrations so we have added a new command to add that support. To update a specific application permission by its name on a given site collection, execute: m365 spo site apppermission set --siteUrl https://contoso.sharepoint.com/sites/project-x --appDisplayName Foo --permission read New script samples CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts.\n If you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\nReplace user in Microsoft 365 Group or Microsoft Team with another user\nWhen an employee leaves an organisation you may want to find and replace the employee account with another account.\nThis script helps update the membership by accepting the old user to be replaced, the new user that will be added and a CSV file containing the groups or teams to be iterated over.\nMonitor site collection storage usage\nAs a SharePoint Administrator one of your tasks is to ensure that the storage being used in your Microsoft 365 tenant does not exceed the allowance of your tenant so this does not negatively impact daily usage.\nThis script helps by iterating over all SharePoint Online sites in your Microsoft 365 tenant, listing any sites that are over a defined storage threshold and emails the results to a specific email address.\nAdd multiple folders in libraries using a CSV file\nWhen adding files into SharePoint Online, a common task is to create a defined folder structure in target document libraries within a target SharePoint Online site before adding the files.\nThis script helps by showing how to create folder structures in different document libraries using a CSV file as an input.\nReplace SharePoint Online Site Collection Administrator with another user\nWhen an employee leaves an organisation you may want to find and replace the employee account with another account.\nThe script helps by removing a user from a given SharePoint Online site collection and adds a new user as a Site Collection Administrator.\nSearch Power Automate Flows for specific connections\nMicrosoft Power Automate is a very powerful workflow tool in Microsoft 365 which use connectors to integrate with different platforms, a common connector that is used is the SharePoint Online connector which help simplify requests made to SharePoint Online, however it can be difficult to get a view of which Power Automate Flows are connected to specific SharePoint Online sites.\nThis script helps by iterating over all Power Automate Flows in your Microsoft 365 tenant, searches the exported Flows for a given Site Collection URL and returns the results.\nContributors  This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order)\n  Cas van Iersel Vipul Kelkar Patrick Lamber Veronique Lengelle Waldek Mastykarz Abderahman Moujahid Nanddeep Nachan Albert Jan-Schot Garry Trinder   Thank you all for the time you chose to spend on the CLI for Microsoft 365 and your help to advance it!\nWork in progress  Here are some things that we\u0026rsquo;re currently working on.\n More commands, what else  Microsoft 365 is evolving and new capabilities are being released every day. With CLI for Microsoft 365, we aim to help you manage your tenant on any platform in a consistent way, no matter which part of Microsoft 365 you interact with. While we keep adding new commands to CLI for Microsoft 365 each release, we still barely scratched the surface with what\u0026rsquo;s possible in Microsoft 365. In the upcoming versions of the CLI for Microsoft, you can expect us to add more commands across the different workloads in Microsoft 365.\nUpdating Azure AD apps  Recently, we introduced a command to easily create Azure AD app registrations. Because they\u0026rsquo;re backbone of every app you\u0026rsquo;d build on Microsoft 365, we think you should be able to create them as easily as possible. So with CLI for Microsoft 365, you can create a fully configured Azure AD app for the most common scenarios with just one line of code.\nWe\u0026rsquo;re currently working on adding support for updating Azure AD app registration which will be helpful for example when building apps for Microsoft Teams. Stay tuned!\nScript examples  In every release of the CLI for Microsoft 365, we introduce new commands for managing Microsoft 365. With over 350 commands across the different Microsoft 365 services, the CLI for Microsoft 365 has become a powerful tool, not just for managing your tenant but also for automating your daily work.\nWe\u0026rsquo;d love to show you how you can use the CLI for Microsoft 365 to build automation scripts in PowerShell Core and Bash. If you have any scripts using SPO or PnP PowerShell that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\n\u0026rsquo;ensure\u0026rsquo; commands  Recently, we shipped our first ensure command - an easy way to help you that a site with specific settings exists. If it doesn\u0026rsquo;t, CLI creates it for you, if it does, CLI ensures it has the right properties. All in one line of code. We\u0026rsquo;d love to hear from you how you like it and if it\u0026rsquo;s something you\u0026rsquo;d like us to implement for other commands as well.\n Try it today Get the latest release of the CLI for Microsoft 365 from npm by executing:\n npm i -g @pnp/cli-microsoft365  Alternatively, you can get the latest release from Docker by executing:\n docker run --rm -it m365pnp/cli-microsoft365:latest  If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365.\n If you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-10/images/banner-cli-m365_hudf0438f961ff7b005fc2ad64065ff955_577192_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-10/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 v3.10"},{"categories":["Microsoft 365 Developer Community Call"],"contents":" Call summary Latest news from Microsoft 365 engineering and updates on open-source projects: PnP .NET libraries, PnP PowerShell, modernization tooling, on yo Teams, on Microsoft Graph Toolkit, and on Microsoft Teams Samples. Join on the Viva Connections private preview! The Microsoft Teams Toolkit v2 is now available! Looking to get started with Microsoft Teams development? Don\u0026rsquo;t miss out our Teams samples gallery! Check out the Microsoft 365 Extensibility look book gallery, and register now for June trainings on Sharing-is-caring. Recent PnP project releases include - yo Teams generator-teams (apps generator) v3.1.0 GA, v3.2.0 Preview, yo teams-build-core (gulp tasks) v1.2.0 Preview, and Microsoft Graph Toolkit v2.2.0 GA along with insights into MGT vNext. Open-source project status:\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.4.0 Prepping for v1.5.0 release week of May 31 PnP .NET Libraries - PnP Core SDK v1.1.0 Prepping for v1.2.0 release week of May 31 PnP PowerShell v1.5.0 (just added Cmdlets for Viva Connections and Syntex) Prepping for v1.6.0 (June) Yo teams - generator-teams Released v3.1.0 GA, v3.2.0 Preview Preview with Viva Connections support Yo teams - yoteams-build-core v1.1.0, v1.2.0 Preview Yo teams - msteams-react-base-component v3.1.0 Microsoft Graph Toolkit (MGT) v2.2.0 GA  Additionally, 2 new Teams samples were delivered in the last 2 weeks. The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\n   Join on the Viva Connections private preview! | aka.ms/viva/connections/preview/register\n  Feedback wanted: Regarding PnP PowerShell \u0026ndash; \u0026ldquo;What if we did not return classic CSOM objects from the cmdlets?\u0026rdquo; Comments to: @erwinvanhunen.   Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; June 29th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; May PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; June 17th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; June 24th AMA (Ask Me Anything) \u0026ndash; Microsoft Graph \u0026amp; MGT \u0026ndash; June 8th AMA (Ask Me Anything) \u0026ndash; Microsoft Teams Dev - June First Time Presenter \u0026ndash; June 30th More than Code with VSCode \u0026ndash; May 27th, June 16th Maturity Model Practitioners \u0026ndash; June 15th    PnP Office Hours \u0026ndash; 1:1 session - Register\n  PnP Buddy System - Request a Buddy\n  Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Action Preview - Markus Moeller |@Moeller2_0\n  Teams Context Viewer tab - Sébastien Levert | sebastienlevert Hello! it\u0026rsquo;s always great to see everyone on the call today. Thanks for participating.   Demos Demos delivered in this session\n  Getting started with HTWOO UI \u0026ndash; Fluent Design in HTML and CSS \u0026ndash; an open-source community driven Fluent UI driven framework that\u0026rsquo;s just HTML, CSS and a bit of JS. Simple to use in the Microsoft 365 ecosystem, same branding as Fluent UI. Complete component library - tables, typography, avatars, icons, dialogs and more. Steps through HTWOO install \u0026ndash; a npm package and 2 theme aware SPFx web parts. Complete documentation and samples.\n  Gain your users attention with the Microsoft Teams Activity Feed API \u0026ndash; send activity notifications from both apps that live outside Teams and others (like static tabs) inside Teams, to Teams tabs, bots, chat. Uses the activity feed notification APIs in Microsoft Graph. Presenter review types of metadata on messages, requirements for sending defined activity type notifications, app registration, consent, manifest, notifications settings in Teams, etc. Then steps through the code for simple and advanced notifications.   Deep linking from List Formatting to Power Automate solution \u0026ndash; Integrate lists, list formatting and Power Apps. Achieve similar look and feel using same SVG icons in lists and Power App. Call for list data from a Power App. Launch a Power App and send mail from within a list. Color SVG icons using fill properties in Inkscape SVG Editor. Showed using code from 2 samples in this demo.    Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  PnP .NET library updates - Bert Jansen (Microsoft) @O365bert - 5:50\n  PnP PowerShell updates -Erwin van Hunen (Valo Intranet) @erwinvanhunen - 8:21\n  yo Teams updates - David Warner II (Catapult Systems) @DavidWarnerII - 10:00\n  Microsoft Graph Toolkit updates - Nikola Metulev (Microsoft) | @metulev - 10:31\n  Microsoft Teams Samples - David Warner II (Catapult Systems) @DavidWarnerII - 13:38\n  Demo: Getting started with HTWOO UI \u0026ndash; Fluent Design in HTML and CSS \u0026ndash; Stefan Bauer (N8D) | @StfBauer - 15:31\n  Demo: Gain your users attention with the Microsoft Teams Activity Feed API \u0026ndash; Thomas Gölles (Solvion) | @thomyg - 29:54\n  Demo: Deep linking from List Formatting to Power Automate solution \u0026ndash; Chris Kent (DMI) | @theChrisKent -[ 44:55][ ]\n  Resources Additional resources around the covered topics and links from the slides.\n  Blog Post - HTWOO UI launched \u0026ndash; Fluent Design in HTML and CSS   Documentation: ABOUT HTWOO UI   Repo: HTWOO UI framework   Samples: htwoo-samples   [Documentation - ]Send activity feed notifications to users in Microsoft Teams\n  [Video - ]Microsoft Teams \u0026ndash; Use the teamwork Microsoft Graph endpoint\n  [Documentation - ]Create deep links\n  [Graphics - ]Fluent UI Icon Search\n  [Sample - ]Person Mail To Link\n  [Sample - ]Launch Power App Button\n  [[Blog post - ]Custom Icon Buttons in Power Apps with Hover Color]\n  Editor - Inkscape - https://inkscape.org\n  PnP Weekly \u0026ndash; Episode 128 with guest Katie Swanson (Microsoft) | @kswansondesign | video | podcast\n  Microsoft Teams Toolkit v2.2 | https://aka.ms/teams-toolkit\n  Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  General resources  Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Microsoft Graph call \u0026ndash; June 1st at 8:00 am PDT | https://aka.ms/microsoftgraphcall SharePoint Framework call \u0026ndash; June 3rdat 7:00 am PDT | https://aka.ms/spdev-spfx-call SharePoint monthly call \u0026ndash; June 8th at 8:00am PDT | https://aka.ms/sp-call Office add-in monthly call \u0026ndash; June 9th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; June 10th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall M365 General Dev call \u0026ndash; June 10th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Teams monthly call \u0026ndash; June 15th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall Power Apps monthly call \u0026ndash; June 16th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall Microsoft Identity Platform \u0026ndash; June 17th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;   Microsoft 365 PnP team, Microsoft - 28th of May 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-27th-of-may/images/sig-27th-may-recording_hu3f4ee5f270c0a540c7259005d27c15fd_302943_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-27th-of-may/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 27th of May, 2021"},{"categories":["Community post"],"contents":"Which community project do you maintain? Web Part Samples, Extension Samples, Sharing is Caring (w/ David Warner, Emili Mancini, April Dunnam and Luise Freese)\nHow does it help people? The sample repositories are there to help people find useful code samples to get started on their new SPFx development tasks and learn new concepts. For those learning to use the PnP reusable controls and libraries (such as PnPjs), they can find real-world code samples to help.\nAll samples are contributed by the community, and we make sure to celebrate the hard work of contributors and give them the opportunity to provide a demo of their samples on the PnP community calls.\nSharing is Caring asks: \u0026ldquo;What prevents people from starting to use the M365 resources available and/or prevents them from contributing back to the community?\u0026rdquo; and addresses each barrier to adoption with hands-on sessions conducted with small groups or, in some cases, one-on-one.\nFor example, we found that one of the biggest reasons why people don\u0026rsquo;t contribute to open-source repositories is because they find GitHub intimidating; so, we created a 1-hour workshop where we should people how to use GitHub by walking them through their first contribution to a real PnP repository. The first pull request to the Sharing is Caring repository counts as a valid contribution and the session attendees are listed on the list of contributors on the PnP monthly calls.\nMany of our Sharing is Caring first-time contributors go on to become frequent contributors after attending just one session!\nSharing is Caring also provides individual guidance with Office Hours and the Buddy System.\nOffice Hours allows people to book 15-30 minutes with a PnP member so they can get help with whatever may be preventing them from succeeding in their projects.\nBuddy System pairs first-time presenters with an experienced presenter to help prepare their presentations, rehearse, and \u0026ndash; if necessary \u0026ndash; co-present their community demos. It helps those who are afraid of public speaking to remove the fear and deliver great presentations.\nWhat have you been working on lately? Lately, I\u0026rsquo;ve been working on building a set of new sample repositories for Power Platform samples, including Power Apps, Power Automate, Power Fx, and Power Virtual Agents.\nI\u0026rsquo;ve also been working on a \u0026ldquo;unified\u0026rdquo; sample browser, which will help people find samples for any Microsoft 365 technology in one place.\nFinally, I\u0026rsquo;ve been working with the rest of the Sharing is Caring team to build new workshops covering how to use other PnP resources (such as the CLI for Microsoft 365, PnPjs, etc.), expanding our coverage (with future sessions covering the Power Platform), and helping new community contributors (with a \u0026ldquo;First Time Presenter\u0026rdquo; session, advanced GitHub topics, etc.)\nWhat do you do at work? I\u0026rsquo;m an independent consultant and I help organizations that have tried to implement Microsoft 365 solutions and failed multiple times. I help with solution architecture, training team members and stakeholders, conducting workshops, and helping out with coding/implementing solutions.\nA big part of what I do is educating teams about what to do, what not to do, and \u0026ndash; most often \u0026ndash; how to get started in the right direction. How to tackle big projects by breaking them down into small iterations, adopting a delivery mindset, and prioritizing by risk and high business importance.\nWhy are you a part of the M365 community? I love how the M365 community is welcoming, inclusive, and friendly. Even though we\u0026rsquo;ve all been stuck at home for over a year, the M365 community members have become some of my closest friends; they\u0026rsquo;re my new extended family.\nThe M365 is not about stroking people\u0026rsquo;s egos; it is about helping each other and celebrating other people\u0026rsquo;s successes while being there when people are struggling.\nWhat was you first community contribution? My first community contribution was to present a student budget web part which I had built over a weekend. I was a C#/.NET developer and I had never used SPFx, Typescript, React, GitHub, or Visual Studio Code before this. The web part integrated cool concepts like an editable grid, dashboard-like charts, and using mobx to facilitate data changes and write back to SharePoint lists.\nI wanted to show the web part because I wanted people who \u0026ndash; like me \u0026ndash; came from a legacy SharePoint/C# world and had no experience with the SPFx ecosystem that it was easy to get started.\nI eventually separated the components of the demo into smaller components and added some of them to the PnP re-usable controls. I thought the folks who managed the repo would dismiss me and/or mock me, but they accepted my pull request and welcomed me to continue contributing\u0026hellip; and I haven\u0026rsquo;t stopped since!\nOne tip for someone who’d like to start contributing It is absolutely your place to contribute! If you see that something is missing and no one else has contributed it, you don\u0026rsquo;t need to wait for someone else to do it! You are welcome to help!\nIf you don\u0026rsquo;t know where to get started, look for issues in the PnP repositories that are tagged as \u0026ldquo;Help Wanted\u0026rdquo; or \u0026ldquo;Good First Issue\u0026rdquo; and add a comment to tell the maintainer that you want to help.\nAnd if you don\u0026rsquo;t know how to use GitHub, sign up for our Sharing is Caring First-Time Contributor session; we\u0026rsquo;ll get you started!\n","image":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-hugo-bernier/images/hugobernier_hu7538594f7ce6e08e3fed95cecb2deb89_23461_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-hugo-bernier/","tags":[],"title":"Microsoft 365 PnP Community Spotlight: Hugo Bernier"},{"categories":["Community post"],"contents":"These are the web parts you\u0026rsquo;re looking for The PnP Modern Search web parts, out of all of the hundreds of samples available as a part of the PnP initiative, are some of the most complicated web parts to get configured.\nBetween the four of them, there\u0026rsquo;s somewhere around 100 different configuration options, which can be configured into countless combinations; and if you want to make the most out of them, you\u0026rsquo;re also going to need to be somewhat familiar with SharePoint Search topics such as managed and crawled properties, refiners, result sources, etc... Point is, these web parts are not meant for the masses and can be a challenge even for the most super of super users.\nThe aim of this post is to, hopefully, lessen that challenge a bit. And to do that, we\u0026rsquo;re going to be using these web parts to build a page for searching a SharePoint list of the top 999 video games (by # of units shipped).\nWe\u0026rsquo;re not going to be deep diving into every option or combination of setting. Instead, we\u0026rsquo;re going for the classic \u0026quot;Minimal Path to Awesome\u0026quot;...with a few detours throughout.   Getting the Web Parts The latest version of the PnP Modern Search web parts can be found using this link.\nFor the purposes of this blog, we\u0026rsquo;re looking at v4.1.0, which can be found using this link (in case it\u0026rsquo;s no longer the latest).\nJust scroll down to the bottom of the page and download the .SPPKG file.\nOnce you have those, you can follow along with the installation guide to get them in your tenant.\nSetting up for the demo If you\u0026rsquo;re interested in following along with the demo in your own environment, there\u0026rsquo;s a bit of behind-the-scenes work that was done to stage things.\nI\u0026rsquo;ve included a PnP Site template and a README in the github repository for this blog to help get you up to speed.\nConfiguring the Search Box web part In keeping with the spirit of our \u0026ldquo;Minimal Path to Awesome\u0026rdquo; approach, the Search Box web part will be the easiest to configure of the lot. We can just drop it on the page somewhere and be done.   That doesn\u0026rsquo;t mean, however, that it has to be that simple. Version 4 has introduced more advanced features than we\u0026rsquo;ll be making use of, but that doesn\u0026rsquo;t mean we can\u0026rsquo;t take a peek.\nPanel 1 - Search box settings The first configuration panel initially offers two settings.   The first setting will replace the default \u0026quot;Enter your search terms...\u0026quot; placeholder text with whatever you type here.\nThe second setting - Send the query to a new page - will be off by default (and will stay that way for this example). If you enable it, you\u0026rsquo;ll see some new options appear that allow you send the user\u0026rsquo;s query to a new page/tab.\nThis can be incredibly useful if you want to create \u0026quot;Search Results\u0026quot; page like what we\u0026rsquo;re currently doing, but also want to provide a search box on other pages. Using this we could, for example, include a Search box web part on the home page of our site and, when a user submits a query, the query is passed to the page we\u0026rsquo;re building, and search results are shown.\nPanel 2 - Query Suggestions It\u0026rsquo;s possible to provide users with some search suggestions (you know, the things that appear beneath what you\u0026rsquo;re typing in search engines like Bing or Google) to help speed them along their search journey.\nAs users search for a particular term or phrase and select search results, SharePoint will (supposedly) make a correlation between the two. In our example, if a user searched for World of Warcraft and clicked on the result World of Warcraft: Legion six times, SharePoint would begin suggesting World of Warcraft: Legion as a potential query.\n NOTE: I used the word supposedly earlier because I never saw this feature working in my example. I assume this is either because the search results we\u0026rsquo;re creating aren\u0026rsquo;t clickable, or that the Search suggestions are only curated when you\u0026rsquo;re using the built-in search boxes, such as the Microsoft Search bar.\n Panel 3 - Available Connections The last panel of options includes configurations that allow us to pull queries from other sources.   Again, we\u0026rsquo;re not going to be dealing with these on our MPA. However, referring to the example of having a search box on a home page sending queries to the page we\u0026rsquo;re currently building, we would want to select the \u0026quot;Query string\u0026quot; option here and specify our parameter name. Once configured, we could pass query information from one page and pull it in here.\nConfiguring the Search Verticals web part Verticals allow users to limit their search results to a specific kind of result. If you\u0026rsquo;ve been around SharePoint long enough, you\u0026rsquo;ve no doubt seen the standard All, Files, People, Sites, etc... verticals that SharePoint shows when you search for stuff.\nWell, the Search Verticals web part allows us to create our own verticals that enable our users to see results for specific platforms. In terms of difficulty, the Search Verticals web part comes in second place in our example, although it\u0026rsquo;s probably the easiest to configure overall if you count the Search Box features we\u0026rsquo;re not making use of.   While the other three web parts in this package saw new features (and added complexity) with the latest version, this web part is actually became much easier to use. There\u0026rsquo;s only one configuration panel to deal with, so let\u0026rsquo;s take a look.\nPanel 1 - Search verticals configuration When you open the Search Verticals web part, you\u0026rsquo;ll be greated with a singular button that says Configure Verticals.   When clicked, you get the real deal...   We can add any number of verticals simply by giving them a name and setting an order. We can also make use of the standard Fabric icons if we wish (and we do!) and, if we choose, we can make verticals a link that opens a new page when clicked.\nSince we want our users to stay on the same page, we\u0026rsquo;re not going to bother with hyperlinks, but we will go ahead and create verticals for the latest generation of platforms available in our dataset, as well as an \u0026ldquo;All\u0026rdquo; vertical.\nSearch Verticals Summary That\u0026rsquo;s all there is to it, really. However, one important thing to keep in mind is that each vertical you choose to add will require a separate instance of the Search Results web part. For those that are familiar with previous versions of these web parts, this is a departure from what we\u0026rsquo;re used to.\nConfiguring the Search Refiners web part Once a user gets to searching, they may want to be able to filter the results by certain criteria. We can use the Search Filters web part to fulfil that demand.\nPanel 1 - Available Connections For refiners to show, they\u0026rsquo;ll need search results to refine. The \u0026quot;Available connections\u0026quot; settings will allow you select e or more Search Results web parts. If you haven\u0026rsquo;t already added one, there won\u0026rsquo;t be any options, so make sure you\u0026rsquo;ve added one first. Once you\u0026rsquo;ve got one, select it here.\nLater, you\u0026rsquo;ll see that we end up with multiple Search Results web parts, so we\u0026rsquo;ll revisit this after that point to update it so our refiners respect that.\nPanel 1 - Filter Settings The other section has two different settings we can configure.   Clicking the edit button will, again, open a meme-worthy panel. Unlike the last panel, though, this new panel is far more involved.   Most of the settings are, I think, self explanatory and you can see the settings used for the demo in the above screenshot.\nHowever, it\u0026rsquo;s important to note that the values you use in the \u0026quot;Filter field\u0026quot; column MUST map to a managed property that has been marked as Refinable. In our case, we\u0026rsquo;ve already gone into our search schema and mapped the columns we wanted to filter by to the provided Refinable managed properties.\n NOTE: If you\u0026rsquo;ve applied the PnP template referenced earlier, these settings will have already been mapped for you.\n Panel 2 - Available Layouts We have three pre-canned layouts available to us, as well as a Custom option which you can use to present your filters in any way you can imagine.   The Vertical and Horizontal options are self-descriptive, while the Panel option will cause a panel to flyout from the right (like how the web part properties do).\nSince our Filter web part is in a vertical column, we\u0026rsquo;ll just stick with that option.\nConfiguring the Search Results web part. The Search Results web part is, as the name implies, the component we use to show search results for the things users are searching for. It\u0026rsquo;s also where things start getting little more involved.   Unlike the previous web parts, there are a lot of different settings, combinations, and customization potential in this web part. Since we\u0026rsquo;re focused on just getting a quick win, we\u0026rsquo;ll mostly be sticking to the basics.\nPanel 1 - Available data sources The first section we must deal with is choosing where we will pull search results from: SharePoint or Microsoft Search?   As was mentioned in the at the beginning of this blog, all our data is in SharePoint, so we\u0026rsquo;re just going to go with that. We could, of course, use Microsoft Search to get the data as well...but we\u0026rsquo;ll leave that for another time. Just note that if you decide to go forward with Microsoft Search, some of the configuration options will change based on that context.\nPanel 1 - Layout slots If you select the Customize button, you\u0026rsquo;ll be presented with another flyout panel with a bunch of default entries. There\u0026rsquo;s a brief description at the top that tries to explain what these are, but honestly didn\u0026rsquo;t make much sense to me in the beginning. Search results are, behind the scenes, being rendered using Handlebars templates. Each one of these Slots will create a variable that can be referenced in a template and is tied back to a property returned in the search results.\n   Considering the above, there will be a property exposed in the Handlebars template called \u0026quot;Author\u0026quot; that is mapped to the \u0026quot;AuthorOWSUSER\u0026quot; managed property.\nFor those of us walking the minimalist path, this isn\u0026rsquo;t necessary. However, the search results shown in screenshots does make use of custom templates and does rely on some custom layout slots to tie into the managed properties associated with our list of video games. Below is a table of the mappings for those following along.\nSlot name Slot field\n Developer DeveloperOWSCHCS Rating ESRBRatingOWSCHCS Genre GenreOWSCHCS IMGURL imgurlOWSURLH Platform PlatformOWSCHCS Publisher PublisherNameOWSCHCS Rank RankOWSN Year YearOWSNMBR\nPanel 1 - SharePoint Search This section has a lot going on and is our first real chance to influence what search results are surfaced for the user.\nQuery Template The first option is the Query template text box. By default, it will simply have {searchTerms} loaded into it, which acts as a token to represent whatever search query is being fed to the web part. In our case, that will be whatever the user has typed into the Search Box web part. You can enter your KQL query here, which can enable you to restrict search results to, say, a particular content type ID like so... {searchTerms} ContentTypeId:0x01004527A5975C6A534DAE7EBFD57E41A633*\nIn this case, the content type ID being used is for a \u0026quot;Video Game Data\u0026quot; content type that is used for items in our list. So, by doing this, we\u0026rsquo;re limiting our search results to only those that match our content type.\nThis also gives the benefit of displaying default search results when the user enters the page, which is pretty useful in our example.\nResult source ID Immediately below that is the Result source ID field, which allows you select a SharePoint Search Result Source. By default, it will be set to LocalSharePointResults. If you\u0026rsquo;re using the method above, you can leave it there. The other option is to create your own custom Search Results type to limit results to our content type and supply the GUID for that here. The end result is the same, ultimately.\nSelected Properties Next up is the Selected Properties dropdown. The web part will have several properties selected by default, and if you\u0026rsquo;re just wanting to leverage the default layout options, you can leave this alone as well.\nIf, however, you want to display different properties on your search results you can (de)select as many options as you need. You won\u0026rsquo;t be able to make use of any property you haven\u0026rsquo;t included here though, so bear that in mind.\nOur search results don\u0026rsquo;t need any of the default options. Instead, you can just copy \u0026amp; paste the below string into the text box to get going. DeveloperOWSCHCS,ESRBRatingOWSCHCS,GenreOWSCHCS,imgurlOWSURLH,PlatformOWSCHCS,PublisherNameOWSCHCS,RankOWSNMBR,Title,YearOWSNMBR\nEach one of those values points to a managed property that was created when our site columns were provisioned and allows us to show that data on our result cards.\nSort order I think this one is fairly self explanatory. You select a managed property (or properties), things get sorted as you specify.   The only thing to keep in mind here is that the property you select must be marked as being sortable in the Search schema, which they won\u0026rsquo;t be by default and is why we\u0026rsquo;re referencing RefinableInt00 in the screenshot above, which has been mapped to the Rank column in our list.\nRefinement filters You can add additional filters to search results here. This is another way, like the Query text example above, to limit what results are returned. We could totally add our ContentTypeId:0x01004527A5975C6A534DAE7EBFD57E41A633* filter here, if we chose, instead of the Query text box above. The biggest difference would be that we wouldn\u0026rsquo;t see any search results until the user actually searched for something.\nThe other options There are five other options available in this section which are somewhat self explanatory. The only exception to the rule might be the Enable query rules options, which is more than we\u0026rsquo;re going to get into here (and honestly not something I\u0026rsquo;m familiar with).\nPanel 1 - Paging options This section, as the name implies, allows you to configure paging options. They\u0026rsquo;re all straight forward and the only one we changed for the demo was the Number of items per page, which we set to 9 - the idea being that we wanted to show three cards per row (which left a straggler if we left it at the default 10).\nPanel 2 - Available layouts This panel is more straight forward that the last. Select a layout and configure any common or layout specific options you want.   The complexity will come in when you want to customize the visual appearance of the search results. Many of the non-custom layouts have configuration options that allow you to influence the appearance, but all of them will require some familiarity with Handlebars to get the most out of them.\nIf you\u0026rsquo;re just using these web parts to surface standard SharePoint content, such as Pages or Documents, the non-custom layouts should suit your needs perfectly.\nFor the hardcore, you can also go full custom and get as creative as you\u0026rsquo;d like. We\u0026rsquo;re using the custom layout in our Search Results web parts, the source for which can be found on GitHub.\n NOTE: For the custom layout to function, you will need to ensure that you\u0026rsquo;ve defined the custom Slots referenced earlier in the blog.\n Panel 3 - Available Connections The last panel of options allows us to connect the other web parts we have on our page which, in turn, allows them to influence our search results.\nThe first option is whether to Use input query text, which is Off by default. This setting basically controls whether we want to allow search queries.\nLeaving it off might seem odd, but if we didn\u0026rsquo;t want users to search via text and instead use verticals, refiners, or just browse through result pages of the query we specified back on the first panel\u0026rsquo;s Query template, that\u0026rsquo;s how we\u0026rsquo;d do it.\nHowever, we definitely want to flip that on, otherwise our Search Box web part will be about as useful as a glass nail. Once on, you can select Dynamic Value and select the PnP - Search Box option.\n   We\u0026rsquo;ll also want to go ahead and connect our filters web part, which is as simple as toggling the switch and selecting the only item in the dropdown.\nLastly, we\u0026rsquo;ll want to connect to our verticals web part, which is only slightly more complicated than the refiners. As you\u0026rsquo;ll see, we have a second dropdown that is labeled Display data only when the following vertical is selected.\nTo start with, just select the All option. Once that\u0026rsquo;s done, in order to support all of our verticals, we\u0026rsquo;ll need to actually duplicate the web part we just configured for each additional vertical (4 times, in our example) and update each one to show during a different vertical.\nIt\u0026rsquo;s a bit heavy handed for our example, but extremely useful if you intend to display different layouts for different verticals.\nOnce you\u0026rsquo;ve duplicated your Search Results web part, be sure to update the Available Connections setting in your Search Refiners web part to include these additions.\nConclusion If you\u0026rsquo;ve followed along with everything, you should have a page that looks something like the below...   These web parts are amazingly cool, extremely powerful, and can be leveraged to create a lot of awesome experiences for our users.\nIt\u0026rsquo;s also one of the most complicated web parts out there. While this blog post was (mostly) focused on that \u0026quot;minimal path to awesome\u0026quot;, it\u0026rsquo;s still REALLY long, which speaks to some of that complexity. However, hopefully this has helped make it more accessible to get started.\nAt a minimum, you\u0026rsquo;ve at least learned that Wii Sports is the most shipped game of all time...so you\u0026rsquo;ve got that going for you, which is nice.\n","image":"https://pnp.github.io/blog/post/using-the-pnp-modern-search-web-parts/images/16-final_hubc9150bcbaee0a2de215156a7645cddd_223501_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/using-the-pnp-modern-search-web-parts/","tags":["SharePoint framework (SPFx)","PnP Modern Search"],"title":"Using the PnP Modern Search Web Parts"},{"categories":["Community post"],"contents":"SharePoint and Microsoft Teams services in Microsoft 365 makes it easier to share content and collaborate with external users who is outside your organization. A guest or external user is someone who do not have a school or work account with your organization, they can be your partner, vendor, customer etc. In this article let us see how to build a self-registration experience for external users with the help of Microsoft Forms \u0026amp; Power Automate to onboard them to a\n SharePoint online site Microsoft Team  Microsoft Form to collect details from External User To start building this experience, create a Microsoft form with the setting Anyone can respond and with fields (Name, Email address etc) to collect information from the external user to send invitation.\n  Azure Active Directory Application registration The next step after creating the form is to register an application in Azure AD with Microsoft graph API permission to send invitation to external user. After the app is registered obtain the client id, client secret \u0026amp; tenant id to be used in the Power Automate flow further down this article to generate the JSON webtoken to access Microsoft Graph API for sending invitation. Find below screenshot with the permission User.Invite.All added to the app. Keep in mind the permission requires Admin consent.\n   There is also delegated permission available for User.Invite.All.\nOnboard External users to a SharePoint online site Once the Microsoft form is ready, we can start building the Power Automate flow which can send the email invitation to the external user and for granting access to the SharePoint site. The external sharing features of SharePoint Online enables users in your organization share content with people outside the organization. There is no limit to the number of guests you can invite to SharePoint sites as per this SharePoint online limits documentation. Find below steps to create the Power Automate flow with a custom approval on a Microsoft Team\nPower Automate Flow Create an Automated flow with the trigger When a new response is submitted with the above form name selected on the dropdown and then add the action Get response details with the Response Id selected from the dynamic content for the trigger to get the form details submitted in the Microsoft form by the external user. Find screenshot below\n   Adaptive card for Teams Approval For the Approval in Microsoft Teams, I have used a custom card created from the Adaptive card designer with elements ColumnSet, TextBlock to display information submitted in the form \u0026amp; action button Approve and Reject to take further action by a Microsoft Teams user to proceed with Invitation for the Guest account creation. Find screenshot below from the adaptive card designer\n    After the card is designed, copy the card payload from the designer and go to the flow and then add the action Post adaptive card and wait for a response and make appropriate selection on the available fields as shown below  Post as: Flow bot Post in: Channel Message: Payload copied from designer. Replace the fields for usrName \u0026amp; userEmail selected from the dynamic content from the outputs of the action Get response details. The created on textBlock element has the flow expression formatDateTime(utcNow(),\u0026lsquo;g\u0026rsquo;) to display the current datetime information on the card.           Update Message: Custom message which appear after an action taken in Microsoft Teams Team: Select the Team where you would like to post the card Channel: Select the channel from the Microsoft Team where you would like to have the approval adaptive card posted  Card payload:\n{ \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Approval for adding the External User\u0026#34;, \u0026#34;wrap\u0026#34;: true }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Created Add flow expression to get current date\u0026#34;, \u0026#34;isSubtle\u0026#34;: true, \u0026#34;wrap\u0026#34;: true }, { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Name:\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Medium\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Email:\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Medium\u0026#34; } ], \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;usrName-Replace it from Microsoft Form\u0026#34;, \u0026#34;wrap\u0026#34;: true }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;userEmail-Replace it from Microsoft Form \u0026#34;, \u0026#34;wrap\u0026#34;: true } ] } ] } ], \u0026#34;actions\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Action.Submit\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Approve\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;btnApprove\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Action.Submit\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Reject\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;btnReject\u0026#34; } ], \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0\u0026#34; }   The above adaptive card is used to get approval from the Organization teams user based on the information submitted by the external user in the Microsoft form to proceed with the next steps for sending the guest account invite. Now we will have to identify if the user has clicked the button Approve or Reject. This information can be easily obtained from the Outputs of the action.  Note: Adaptive card can also be sent using a Microsoft Graph API with the card payload in Attachments field\nhttps://docs.microsoft.com/graph/api/channel-post-messages?view=graph-rest-beta\u0026amp;tabs=http\nAdaptive card for Teams - Dynamic content Missing As of the time I am writing this article there is an issue in getting the output as dynamic content for the Post adaptive card and wait for a response action if there is dynamic content added on the JSON Payload (Name, Email from Forms). The fix is to run the flow till the post adaptive card action and take an action on Microsoft Teams by clicking either Approve or Reject and then go to the Flow run from the history as shown below\n   From the above screenshot, we can see if the user has clicked the Approve or Reject button from the field submitActionId. To get this value in Flow, use the expression\noutputs(\u0026#39;Post_adaptive_card_and_wait_for_a_response\u0026#39;).body.submitActionId or\n@outputs(\u0026#39;Post_adaptive_card_and_wait_for_a_response\u0026#39;)?[\u0026#39;body/submitActionId\u0026#39;] Spaces in the name of the action is replaced with underscore.\nTo get the userPrincipalName, the expression is\noutputs(\u0026#39;Post_adaptive_card_and_wait_for_a_response\u0026#39;).body.responder.userPrincipalName or\n@outputs(\u0026#39;Post_adaptive_card_and_wait_for_a_response\u0026#39;)?[\u0026#39;body/responder/userPrincipalName\u0026#39;] To get the submitActionId, enter the expression outputs(\u0026lsquo;Post_adaptive_card_and_wait_for_a_response\u0026rsquo;).body.submitActionId in the compose action, then add a condition control to decide action based on users approval\n   I have observed this issue occurs in other team\u0026rsquo;s adaptive card actions as well, the above fix should work. Now we can implement the logic to send the Guest Invitation using Microsoft Graph API. To send the invite, we will use the Azure AD application registered above.\nGenerate JSON Web token to Access Graph API Be ready with the ClientId, Client Secret and Tenant Id collected from the AD app registration you have done initially. The only authentication flow to generate a access token for application permissions is Client credentials.\nTo generate a token\n Store the Client Secret on a String variable or a compose action Make a HTTP request using the HTTP connector with the following details. Make sure to replace the string for tenantId, azureAdAppclientId and azureAdAppclientSecret  Add a HTTP connector action to the flow for making a POST request per the following information\nHTTP Method: POST\nURI: https://login.microsoftonline.com/yourtenantId/oauth2/v2.0/token\nHeaders:\nBody: tenant=yourtenantId\u0026amp;client_id=azureAdAppclientId\u0026amp;client_secret=@{decodeUriComponent(variables(\u0026#39;azureAdAppclientSecret\u0026#39;))}\u0026amp;grant_type=client_credentials\u0026amp;scope=https://graph.microsoft.com/.default  For the client secret make sure to URL encode using the expression encodeUriComponent(variables(\u0026lsquo;clientSecret\u0026rsquo;)) else the request will fail due to the presence of special characters.\n   In the above screen, I have added a compose action to store the SharePoint site address to be used for granting the external user access to. To extract the token from the above request, add the parse JSON action with Content from the HTTP request body and the following schema { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;token_type\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;scope\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;expires_in\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;integer\u0026#34; }, \u0026#34;ext_expires_in\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;integer\u0026#34; }, \u0026#34;access_token\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;refresh_token\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; } } }     Include the access token when calling the Microsoft Graph API on the Headers section or raw as shown in the next section.\nSend Invitation using Microsoft Graph API Before sending the invitation, validate if the user already exists in your organization AD tenant by using the email address of the external user with the help of the action Search for users as shown below\n   If there is null response for the action Search for users, then the user does not exist. This can be calculated using the expression length and by passing the value as a parameter, if it is equals zero then the external user does not exist. If the user already exists, we can directly proceed to granting the external user access to SharePoint.\nGraph API to check if a guest user already exists:\nhttps://graph.microsoft.com/v1.0/users?$filter=UserType eq \u0026lsquo;Guest\u0026rsquo;\u0026amp;$filter=mail eq exteruseremailadd... or\nhttps://graph.microsoft.com/v1.0/users?$filter=startswith(mail,\u0026rsquo;[exteruseremailaddress@domain.com]\u0026lsquo;u)\nFind below the Graph API endpoint http request details to invite the external user\nMethod: POST\nURL: https://graph.microsoft.com/v1.0/invitations\nRequest Body: { \u0026#34;invitedUserDisplayName\u0026#34;: \u0026#34;External User Name\u0026#34;, \u0026#34;invitedUserEmailAddress\u0026#34;: \u0026#34;External User Email Address\u0026#34;, \u0026#34;sendInvitationMessage\u0026#34;: true, \u0026#34;inviteRedirectUrl\u0026#34;: \u0026#34;SharePoint site URL or any URL\u0026#34;, \u0026#34;invitedUserMessageInfo\u0026#34;: { \u0026#34;messageLanguage\u0026#34;: \u0026#34;en-US\u0026#34;, \u0026#34;customizedMessageBody\u0026#34;: \u0026#34;Welcome to the M365PAL SharePoint site! Select the link below and sign in.\u0026#34; } }     In HTTP request body, use the dynamic content of the form to populate the fields invitedUserDisplayName \u0026amp; Emailaddress. The invite redirectUri is the output of the compose action which has the SharePoint site url. I have added a delay of one minute before granting access to SharePoint site for the external user, this step is to make sure there is an entry in Azure AD for the external user/guest account.\nCustom connector can be used for calling the Graph API for sending invitations instead of using HTTP connector, you can refer to the post Call Microsoft Graph API in Power Apps and Power Automate using a Custom connector for detailed instructions.\nGrant Access to SharePoint site for the external user As soon as the guest account invite is sent from the above Microsoft graph API request HTTP action, it is time to grant access to the SharePoint site for the external user. There is a SharePoint REST API endpoint to add a user to a SharePoint group (Owners, Member, Visitors), find below the request details\nRequest URL: https://tenantname.sharepoint.com/sites/siteName/ _api/web/sitegroups/GetById(groupId)/users\nFor the groupId to the corresponding SharePoint group, refer to the following table\n SharePoint Group GroupId Owners 3 Members 5 Visitors 4\n Headers:\nKey: accept value: application/json;odata.metadata=none\nKey: content-type value: application/json\nBody:\n{\u0026#39;LoginName\u0026#39;:\u0026#39;i:0#.f|membership|userPrinipalNameorEmailaddressofExternalUser\u0026#39;} For the external user, the email address used to send the invite works.\nGo back to the flow and add the action Send an HTTP request to SharePoint to call the above REST api. Find below the screenshot of the action\n   The above action uses delegated permission, the user of the connection should have access to the SharePoint site. As of now, there is no Graph API for adding the user to a SharePoint group but you can register an app in Active directory and add permission for SharePoint to call the above REST API. Refer to the documentation Granting access via Azure AD App-Only for calling the REST API using the registered AD app.\nTesting the flow The whole flow can now be tested by submitting the form which sends the adaptive card on Teams first as shown below\n   After the card is approved, the invite is sent to the external user. After the external user accepts the invite, the user should be automatically redirected to the SharePoint site with the appropriate access. The access to the SharePoint site for the external user can be validated by the checking the membership of the SharePoint group in the site even before the user accepts the invitation. The site members can also be validated by accessing the URL for All users list:\nhttps://tenantName.sharepoint.com/sites/siteName/_layouts/15/people.aspx?MembershipGroupId=0\nThis approach of granting access to SharePoint site for external user can be applied to internal users by turning off the access requests.\nLimit External Sharing by domain The external sharing on SharePoint can be restricted based on domain of the external user. To enable the setting login into the SharePoint admin center \u0026gt; Policies \u0026gt; Sharing \u0026gt; Enable the checkbox Limit external sharing by domain \u0026gt; Add domain\n   Onboard External users to a Microsoft Team To onboard the external user to a Microsoft Team, the only change to the above flow is, instead of adding the user to the SharePoint group the user must be added as a Member to the Microsoft 365 group connected to the Microsoft Teams. The graph API to add a member to a Microsoft Team is\nRequest Type: POST\nRequest URL: https://graph.microsoft.com/v1.0/teams/{team-id}/members\nThe team-id is the Microsoft 365 group object Id, as there is always a Microsoft 365 group connected to a Microsoft Team.\nBody:\n{ \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.aadUserConversationMember\u0026#34;, \u0026#34;roles\u0026#34;: [\u0026#34;owner\u0026#34;], \u0026#34;user@odata.bind\u0026#34;: \u0026#34;https://graph.microsoft.com/v1.0/users(userObjectIdofGuest\u0026#39;)\u0026#34; } The expression to get the user object Id of the external user as per the below screenshot is\noutputs(\u0026#39;HTTP-SendGuestInvitation\u0026#39;).body.invitedUser.Id  The expression can be used in a compose action to get the Object Id of the external user which can be used in the Graph API request to add the member to a Team. HTTP-SendGuestInvitation is the name of the HTTP Action.\n   Permission for the Azure AD App to add a member to a Microsoft Team The application permission Group.ReadWrite.All has to be added on the Azure AD app, if you are going to be using the same JSON webtoken generated above. There is delegated permission as well for adding members.\nhttps://graph.microsoft.com/Group.ReadWrite.All\nI recommend you read the following documentation from Microsoft for External sharing\nhttps://docs.microsoft.com/microsoftteams/manage-external-access\nhttps://docs.microsoft.com/microsoftteams/guest-access\nhttps://docs.microsoft.com/microsoftteams/communicate-with-users-from-other-organizations\nSummary With this, the Power Automate flow should send the invitation as shown below to the external user.\n   If it is for a Microsoft Team, the external user should be licensed for teams service to open it on their teams client. The same flow can be also configured for Microsoft 365 group.\nThis post was originally published in ashiqf.com\n","image":"https://pnp.github.io/blog/post/how-to-invite-external-users-to-a-sharepoint-site-or-microsoft/images/MSForm-ExternalUserdetails_huac5d26d544c9ca56d6e0829ff8b047d2_133453_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-invite-external-users-to-a-sharepoint-site-or-microsoft/","tags":[],"title":"How to invite external users to a SharePoint site or Microsoft Team using Power Automate \u0026 Graph API"},{"categories":["Community post"],"contents":"Introduction Formik is the world\u0026rsquo;s most popular open-source form library for React and React Native. We can also use this library in our SPFx web part as well to manage form validations. Using this library we don\u0026rsquo;t have to write custom validations. so let\u0026rsquo;s start step-by-step implementation.\nWhat is formik? Formik is a small library that helps us with the these parts: Getting values in and out of form state. Validation and error messages. Handling form submission.\nFormik is designed to manage forms with complex validation with ease.\nFormik supports synchronous and asynchronous form-level and field-level validation.\nFurthermore, it comes with baked-in support for schema-based form-level validation through Yup.\nFor more details about Fromik refer to the below articles, **Formik official documentation **\n**Manage Forms In React With Formik **\n**Formik validation Schema **\nSharePoint List Structure Create a list called **Tasks **with below fields,\n Field Name(Internal name) Field Type Title (default) Single line of text StartDate Date and Time (Date only) EndDate Date and Time (Date only) ProjectName Single line of text TaskDetails Multiple lines of text\n After the creation of the list, we will start to create the SPFx web part.\nFormik implementation with SPFx Open a command prompt\nMove to the path where you want to create a project\nCreate a project directory using: md react-formik Move to the above-created directory using: cd react-formik Now execute the below command to create an SPFx solution: yo @microsoft/sharepoint It will ask some questions, as shown below, ![Project Setup.png](images/Project Setup.png) After a successful installation, we can open a project in any source code tool. Here, I am using the VS code, so I will execute the command: code . Now we will install the following packages:\nnpm i formik npm i yup npm i @pnp/spfx-controls-react npm i @microsoft/sp-dialog In the end, our output will be like this,   After the successful installation, we will start our form implementation. 1. Create below files I{webpartname}State.ts inside src/webparts/reactFormik/components\nSPService.ts file inside src/webparts/shared/service In the end, our structure will be looks like this, ![Project Structure.png](images/Project Structure.png) 2. Create a state interface as below inside IReactFormikState.ts. export interface IReactFormikState { projectName?: string; startDate?: any; endDate?: any; } ``` 3. Create a method to create a task inside **SPService.ts.** ```javascript import \u0026#34;@pnp/sp/webs\u0026#34;; import \u0026#34;@pnp/sp/lists\u0026#34;; import \u0026#34;@pnp/sp/items\u0026#34;; import \u0026#34;@pnp/sp/webs\u0026#34;; import \u0026#34;@pnp/sp/site-users/web\u0026#34;; import { Web } from \u0026#34;@pnp/sp/webs\u0026#34;; export class SPService { private web; constructor(url: string) { this.web = Web(url); } public async createTask(listName: string, body: any) { try { let createdItem = await this.web.lists .getByTitle(listName) .items .add(body); return createdItem; } catch (err) { Promise.reject(err); } } } Move to the ReactFormikWebPart.ts. In this, we will pass the current SP context and read site URL from user.\n import * as React from \u0026#39;react\u0026#39;; import * as ReactDom from \u0026#39;react-dom\u0026#39;; import { Version } from \u0026#39;@microsoft/sp-core-library\u0026#39;; import { IPropertyPaneConfiguration, PropertyPaneTextField } from \u0026#39;@microsoft/sp-property-pane\u0026#39;; import { BaseClientSideWebPart } from \u0026#39;@microsoft/sp-webpart-base\u0026#39;; import * as strings from \u0026#39;ReactFormikWebPartStrings\u0026#39;; import ReactFormik from \u0026#39;./components/ReactFormik\u0026#39;; import { IReactFormikProps } from \u0026#39;./components/IReactFormikProps\u0026#39;; import { sp } from \u0026#34;@pnp/sp/presets/all\u0026#34;; export interface IReactFormikWebPartProps { description: string; siteUrl: string; } export default class ReactFormikWebPart extends BaseClientSideWebPart\u0026lt;IReactFormikWebPartProps\u0026gt; { protected onInit(): Promise\u0026lt;void\u0026gt; { return super.onInit().then(_ =\u0026gt; { sp.setup({ spfxContext: this.context }); }); } public render(): void { const element: React.ReactElement\u0026lt;IReactFormikProps\u0026gt; = React.createElement( ReactFormik, { description: this.properties.description, context: this.context, siteUrl: this.properties.siteUrl ? this.properties.siteUrl : this.context.pageContext.web.absoluteUrl } ); ReactDom.render(element, this.domElement); } protected onDispose(): void { ReactDom.unmountComponentAtNode(this.domElement); } protected get dataVersion(): Version { return Version.parse(\u0026#39;1.0\u0026#39;); } protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration { return { pages: [ { header: { description: strings.PropertyPaneDescription }, groups: [ { groupName: strings.BasicGroupName, groupFields: [ PropertyPaneTextField(\u0026#39;description\u0026#39;, { label: strings.DescriptionFieldLabel }), PropertyPaneTextField(\u0026#39;siteUrl\u0026#39;, { label: strings.SiteUrlFieldLabel }) ] } ] } ] }; } }   Move to the ReactFormik.tsx file to render form and validations yup syntaxs:    For string: yup.string().required(\u0026lsquo;Required\u0026rsquo;)\n  For date: yup.date().required(\u0026lsquo;Required\u0026rsquo;).nullable()\n  Related to Formik Fromik has its own handleReset and handleSubmit method so we don not have to manage manually\n  We have to set state value and error message from control so for that I have created a common method\n  In the constructor, we will set the current SP context, bind the service and required methods and initialize the states.\n  Create createRecord() to create task list item using SPService.\n  In the render(), first we will add all the controls like date picker, text field, people picker, and dropdown, etc inside \u0026lt;Formik\u0026gt;.\n   then We will set properties as below,\n initialValues - This is one type o state at here we will set empty or null or undefined as an initial level.\n validationSchema - At here we will do validations using yup. so for this, I am creating one const and wills et this constant in this prop.\n onSubmit - At here we will call the method to create a record in the SharePoint list import * as React from \u0026#39;react\u0026#39;; import styles from \u0026#39;./ReactFormik.module.scss\u0026#39;; import { IReactFormikProps } from \u0026#39;./IReactFormikProps\u0026#39;; import { IReactFormikState } from \u0026#39;./IReactFormikState\u0026#39;; import { SPService } from \u0026#39;../../shared/service/SPService\u0026#39;; import { TextField } from \u0026#39;@fluentui/react/lib/TextField\u0026#39;; import { Stack, } from \u0026#39;@fluentui/react/lib/Stack\u0026#39;; import { Formik, FormikProps } from \u0026#39;formik\u0026#39;; import { Label } from \u0026#39;office-ui-fabric-react/lib/Label\u0026#39;; import * as yup from \u0026#39;yup\u0026#39;; import { PeoplePicker, PrincipalType } from \u0026#34;@pnp/spfx-controls-react/lib/PeoplePicker\u0026#34;; import { DatePicker, Dropdown, mergeStyleSets, PrimaryButton, IIconProps } from \u0026#39;office-ui-fabric-react\u0026#39;; import { sp } from \u0026#39;@pnp/sp\u0026#39;; import { Dialog } from \u0026#39;@microsoft/sp-dialog\u0026#39;; const controlClass = mergeStyleSets({ control: { margin: \u0026#39;0 0 15px 0\u0026#39;, maxWidth: \u0026#39;300px\u0026#39;, }, }); export default class ReactFormik extends React.Component\u0026lt;IReactFormikProps, IReactFormikState\u0026gt; { private cancelIcon: IIconProps = { iconName: \u0026#39;Cancel\u0026#39; }; private saveIcon: IIconProps = { iconName: \u0026#39;Save\u0026#39; }; private _services: SPService = null; constructor(props: Readonly\u0026lt;IReactFormikProps\u0026gt;) { super(props); this.state = { startDate: null, endDate: null } sp.setup({ spfxContext: this.props.context }); this._services = new SPService(this.props.siteUrl); this.createRecord = this.createRecord.bind(this); } /** set field value and error message for all the fields */ private getFieldProps = (formik: FormikProps\u0026lt;any\u0026gt;, field: string) =\u0026gt; { return { ...formik.getFieldProps(field), errorMessage: formik.errors[field] as string } } /** create record in sharepoint list */ public async createRecord(record: any) { let item = await this._services.createTask(\u0026#34;Tasks\u0026#34;, { Title: record.name, TaskDetails: record.details, StartDate: record.startDate, EndDate: new Date(record.endDate), ProjectName: record.projectName, }).then((data) =\u0026gt; { Dialog.alert(\u0026#34;Record inseterd successfully !!!\u0026#34;); return data; }).catch((err) =\u0026gt; { console.error(err); throw err; }); } public render(): React.ReactElement\u0026lt;IReactFormikProps\u0026gt; { /** validations */ const validate = yup.object().shape({ name: yup.string().required(\u0026#39;Task name is required\u0026#39;), details: yup.string() .min(\u0026#39;15\u0026#39;, \u0026#39;Minimum required 15 characters\u0026#39;) .required(\u0026#39;Task detail is required\u0026#39;), projectName: yup.string().required(\u0026#39;Please select a project\u0026#39;), startDate: yup.date().required(\u0026#39;Please select a start date\u0026#39;).nullable(), endDate: yup.date().required(\u0026#39;Please select a end date\u0026#39;).nullable() }) return ( \u0026lt;Formik initialValues={{ name: \u0026#39;\u0026#39;, details: \u0026#39;\u0026#39;, projectName: \u0026#39;\u0026#39;, startDate: null, endDate: null }} validationSchema={validate} onSubmit={(values, helpers) =\u0026gt; { console.log(\u0026#39;SUCCESS!! :-)\\n\\n\u0026#39; + JSON.stringify(values, null, 4)); this.createRecord(values).then(response =\u0026gt; { helpers.resetForm() }); }}\u0026gt; { formik =\u0026gt; ( \u0026lt;div className={styles.reactFormik}\u0026gt; \u0026lt;Stack\u0026gt; \u0026lt;Label className={styles.lblForm}\u0026gt;Current User\u0026lt;/Label\u0026gt; \u0026lt;PeoplePicker context={this.props.context as any} personSelectionLimit={1} showtooltip={true} showHiddenInUI={false} principalTypes={[PrincipalType.User]} ensureUser={true} disabled={true} defaultSelectedUsers={[this.props.context.pageContext.user.email as any]} /\u0026gt; \u0026lt;Label className={styles.lblForm}\u0026gt;Task Name\u0026lt;/Label\u0026gt; \u0026lt;TextField {...this.getFieldProps(formik, \u0026#39;name\u0026#39;)} /\u0026gt; \u0026lt;Label className={styles.lblForm}\u0026gt;Project Name\u0026lt;/Label\u0026gt; \u0026lt;Dropdown options={ [ { key: \u0026#39;Project1\u0026#39;, text: \u0026#39;Project1\u0026#39; }, { key: \u0026#39;Project2\u0026#39;, text: \u0026#39;Project2\u0026#39; }, { key: \u0026#39;Project3\u0026#39;, text: \u0026#39;Project3\u0026#39; }, ] } {...this.getFieldProps(formik, \u0026#39;projectName\u0026#39;)} onChange={(event, option) =\u0026gt; { formik.setFieldValue(\u0026#39;projectName\u0026#39;, option.key.toString()) }} /\u0026gt; \u0026lt;Label className={styles.lblForm}\u0026gt;Start Date\u0026lt;/Label\u0026gt; \u0026lt;DatePicker className={controlClass.control} id=\u0026#34;startDate\u0026#34; value={formik.values.startDate} textField={{ ...this.getFieldProps(formik, \u0026#39;startDate\u0026#39;) }} onSelectDate={(date) =\u0026gt; formik.setFieldValue(\u0026#39;startDate\u0026#39;, date)} /\u0026gt; \u0026lt;Label className={styles.lblForm}\u0026gt;End Date\u0026lt;/Label\u0026gt; \u0026lt;DatePicker className={controlClass.control} id=\u0026#34;endDate\u0026#34; value={formik.values.endDate} textField={{ ...this.getFieldProps(formik, \u0026#39;endDate\u0026#39;) }} onSelectDate={(date) =\u0026gt; formik.setFieldValue(\u0026#39;endDate\u0026#39;, date)} /\u0026gt; \u0026lt;Label className={styles.lblForm}\u0026gt;Task Details\u0026lt;/Label\u0026gt; \u0026lt;TextField multiline rows={6} {...this.getFieldProps(formik, \u0026#39;details\u0026#39;)} /\u0026gt; \u0026lt;/Stack\u0026gt; \u0026lt;PrimaryButton type=\u0026#34;submit\u0026#34; text=\u0026#34;Save\u0026#34; iconProps={this.saveIcon} className={styles.btnsForm} onClick={formik.handleSubmit as any} /\u0026gt; \u0026lt;PrimaryButton text=\u0026#34;Cancel\u0026#34; iconProps={this.cancelIcon} className={styles.btnsForm} onClick={formik.handleReset} /\u0026gt; \u0026lt;/div\u0026gt; ) } \u0026lt;/Formik \u0026gt; ); } } Move to the ReactFormik.module.scss file to add some relaetd CSS. @import \u0026#39;~office-ui-fabric-react/dist/sass/References.scss\u0026#39;; .reactFormik{ .btnsForm { background-color: \u0026#34;[theme:themePrimary, default:#0078d7]\u0026#34;; border-color: \u0026#34;[theme: themePrimary, default: #0078d7]\u0026#34;; color: \u0026#34;[theme:white, default:white]\u0026#34; ; margin-left: 10px; margin-top: 10px; } .customErrorMeesage{ color: var(--red-color); font-size: 10px; font-family: \u0026#39;Light\u0026#39;; padding: 2px; } .lblForm{ font-size: 15px; margin: 5px 0px 5px 0px; } }  Now serve the application using the below command, gulp serve Now test the webpart in SharePoint-SiteURL + /_layouts/15/workbench.aspx.\nOutput  Find here the full source code .\nSummary In this article, we have seen how to implement react formik library in SPFx. I hope this helps. Sharing is caring!! ","image":"https://pnp.github.io/blog/post/spfx-webpart-form-validation-using-react-formik/images/Output_hu955d8affcd5bf9d6e292266385711348_24592_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/spfx-webpart-form-validation-using-react-formik/","tags":["SharePoint framework (SPFx)"],"title":"SPFx web part form validation using React Formik"},{"categories":["Microsoft Identity platform community call"],"contents":"Call summary This month\u0026rsquo;s in-depth topic: Using Conditional Access Auth Context in your app for step-up authentication. Use the Azure AD Conditional access engine\u0026rsquo;s new Auth Context feature to trigger a demand for step-up authentication from within your application and services. Developers have often wondered if they were to only, selectively demand enhanced stronger authentication like MFA from their end users from within their applications. This capability helps developers build low friction user experiences for some parts of their application, while keeping access to more secure operations and data behind stronger authentication controls. Learn how to enable these scenarios in this session. Microsoft Program Manager presenters \u0026ndash; Caleb Baker and Kalyan Krishna. This session was delivered and recorded on May 20, 2021. Live and in chat Q\u0026amp;A throughout call. Resources   **Deck **for this call\n  Tech Community - Granular Conditional Access for sensitive data and actions   Sample - Use the Conditional Access auth context to perform step-up authentication for high-privilege operati...   Documentation - Developers\u0026rsquo; guide to Conditional Access authentication context\n  Documentation - MS Graph - authenticationContextClassReference resource type\n  Documentation - Claims challenges, claims requests, and client capabilities\n  Documentation - Microsoft identity platform documentation\n  Documentation - Microsoft Authentication Libraries (MSAL)\n  Documentation - Microsoft identity platform code samples   Documentation - Building Zero Trust ready apps with the Microsoft identity platform\n  Documentation - Introduction to Conditional Access\n  Documentation - Create a Conditional access Policy\n  Documentation - Continuous Access Evaluation\n  ** **\nActions  Submit your feedback and topic suggestions - https://aka.ms/IDDevCommunityCallSurvey  Mark your calendar. The next Identity Platform Community Call is on June 17th  ** **\nStay connected  Twitter https://twitter.com/microsoft365dev​ and @azuread YouTube https://aka.ms/M365DevYouTube​ Blog https://aka.ms/m365pnp/community/blog Recurrent Invite https://aka.ms/IDDevCommunityCalendar   ","image":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-may-2021/images/ApTriggeredStep-up_hu2bac1c2250b2a73869868102dfc93a66_127539_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-may-2021/","tags":[],"title":"Microsoft Identity Platform community call -- May 2021"},{"categories":["PnP Weekly"],"contents":" In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by US-based, Microsoft Senior Product Designer on the SharePoint Team, Katie Swanson (Microsoft) | @kswansondesign. Topics discussed in this session include: The art of the possible, the design process and baking in customer feedback, accessibility testing, evolution of and possible future updates to SharePoint look book, diversity and inclusion in the PnP community in IT generally. Microsoft and the Community delivered 16 articles in the last week! Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n[This episode was recorded on Monday, May 24, 2021.]\n Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com. These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!  Events  May 25-27, 2021- Microsoft Build 2021 June 1-2, 2021 - European SharePoint Conference 2021 - Online August 9-11, 2021 - North American Collaboration Summit  Register with coupon code \u0026ldquo;PnP\u0026rdquo; for 25% off from the prize at https://nacs.ticketspice.com/nacs2021    Microsoft articles  Rebrand apps to your own organization\u0026rsquo;s branding with App customization in Teams - Vaibhav Agarwal (Microsoft) Best practices for using global navigation in the SharePoint app bar - Melissa Torres (Microsoft) | @Meltorac Publish your apps to the Microsoft Teams store - Microsoft Announcing new file components, MSAL 2 Provider, and SharePoint Framework library in Microsoft Graph... - Microsoft  Community articles  Microsoft 365 PnP Community Spotlight: Garry Trinder - Garry Trinder (CPS) | garrytrinder \u0026amp; Luise Freese | @LuiseFreese Do you need ngrok to develop Microsoft Teams apps? - Bob German (Microsoft) | @Bob1German HTWOO UI launched \u0026ndash; Fluent Design in HTML and CSS - Stefan Bauer (N8D) | @StfBauer Find Power Automate Flows that are connected to your site or list - Albert-Jan Schot (Portiva) | @appieschot Power Apps Validation and JSON Parsing with Regex - April Dunnam (Microsoft) | @aprildunnam Power Automate SharePoint Get Column Changes - April Dunnam (Microsoft) | @aprildunnam Problems Restricting SharePoint People Column to a Specific Group - Cameron Dwyer (OnePlace Solutions) | @CameronDwyer Preconsent multiple scopes with Microsoft Graph Toolkit - Waldek Mastykarz (Microsoft) | @waldekm The right way to publish SharePoint Framework library packages - Waldek Mastykarz (Microsoft) | @waldekm Episode #155 - Microsoft Graph Toolkit Agenda Component - Paolo Pialorsi (PiaSys) | @PaoloPia Pro tips: What to do when you don\u0026rsquo;t feel heard at work - Sarah Haase | @sarahhaase, Antonio Maio | @AntonioMaio2 and Mike Maadarani | @mikemaadarani Microsoft 365 Fiscal Year Retention - Joanne C Klein | @JoanneCKlein  Additional resources  Power Platform Sample Gallery - for finding easily samples from the GitHub - contributions from the community are welcome! PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.  \u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-128/images/Thumb-Ep128_hu7fd19710091bd470c809f2a31859a176_522511_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-128/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 128"},{"categories":["Community post"],"contents":"Which community project do you maintain? CLI for Microsoft 365\nHow does it help people? CLI for Microsoft 365 is a cross platform, command line interface that helps developers and administrators manage their Microsoft 365 tenants and SharePoint Framework projects, using any operating system and any command line shell.\nWhat have you been working on lately? I have recently been working on making the CLI more accessible to new users and new contributors to the project.\nWe recently released our public Docker images, Docker enables us to bundle a pre-configured version of CLI for Microsoft 365 together with all its required dependencies into a publicly downloadable image, which you can then use to create an isolated environment on your local machine, called a container, where you can use the CLI for Microsoft 365 without cluttering your machine with dependencies, and all performed by executing just a single command.\nOne of the difficulties of getting started with a new project is setting up the development environment, installing dependencies and hoping that you\u0026rsquo;ve followed all the instructions correctly. We know that this can be time consuming but also put off potential contributors to the project, so we\u0026rsquo;ve looked at ways in which we can make contributor onboarding as simple as possible, so we have provided a definition for creating an instant development environment that contains all the dependencies needed to contribute to CLI for Microsoft 365, whether that is making code changes or making an update to the documentation, we have you covered. We also automate the initial configuration steps for you when the development environment is being created, so we run npm install to install the necessary packages from npm, npm run build to build the CLI source and create a symbolic link by running npm link to ensure that when you execute m365 it uses the code in the src directory. You can use our development environment in the cloud using GitHub Codespaces or locally using Visual Studio Code Remote Development Containers.\nWhat do you do at work? At work I am a Solutions Architect and Development Team lead for CPS, a Microsoft Gold Partner. I work primarily with Microsoft 365 and Microsoft Azure, in recent years I have been mainly focused on integration and automation.\nWhy are you a part of the M365 community? I believe that by sharing our own knowledge and experiences, we can improve the quality of the solutions created by the community. I have been privileged to have been part of the community for many years and I have directly benefited from others sharing their knowledge with me, it is this that drives me to contribute to the community so that others can benefit in the way that I have.\nWhat was you first community contribution? I submitted a pull request to add a new command to CLI for Microsoft 365 which enables users to delete a Microsoft Teams channel.\nOne tip for someone who’d like to start contributing Don\u0026rsquo;t be afraid to ask questions, the Microsoft 365 community is incredibly welcoming and everyone wants to help each other, there are no stupid questions.\n","image":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-garry-trinder/images/garrytrinder_hu8e129c55c06bc356105c0a558fc22058_21459_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-garry-trinder/","tags":[],"title":"Microsoft 365 PnP Community Spotlight: Garry Trinder"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from May 20th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary Preview the new Microsoft 365 Extensibility look book gallery co-developed by Microsoft Teams and SharePoint engineering. Register now for May/June trainings on Sharing-is-caring. View the Microsoft Build sessions guide (Modern Work Digital Brochure) \u0026ndash; Keynotes, breakouts, on-demand, roundtables and 1:1 consultations. PnPjs Client-Side Libraries v2.5.0 GA and CLI for Microsoft 365 v3.10.0 preview were released this month. Also latest updates on SPFx roadmap (v1.13.0 Preview in summer) and Viva Connections extensibility shared. Four new/updated PnP SPFx web part samples delivered in last 2 weeks. Great work! **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago) PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.12.1 v1.13.0 Preview in summer PnPjs Client-Side Libraries v2.5.0 v3.0.0 developments underway CLI for Microsoft 365 v3.9.0 v3.10.0 preview released Reusable SPFx React Controls v2.7.0, v3.1.0 v2.7.0 (SPFx v1.11), v3.1.0 (SPFx v1.12.1) Reusable SPFx React Property Controls v2.6.0, v3.1.0 v2.6.0 (SPFx v1.11), v3.1.0 (SPFx v1.12.1) PnP SPFx Generator v1.16.0 Angular 11 support PnP Modern Search v3.19 and v4.1.0 April and March 20th\nThe host of this call is Patrick Rodgers (Microsoft) @mediocrebowler. Q\u0026amp;A takes place in chat throughout the call. Thanks everybody for being part of the Community and helping making things happen. You are absolutely awesome!\nActions  Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; May 24th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; May PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; June  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; May 20th AMA (Ask Me Anything) \u0026ndash; Microsoft Graph \u0026amp; MGT \u0026ndash; June 8th AMA (Ask Me Anything) \u0026ndash; Microsoft Teams Dev - June First Time Presenter \u0026ndash; May 25th More than Code with VSCode \u0026ndash; May 27th  Maturity Model Practitioners \u0026ndash; May 18th PnP Office Hours \u0026ndash; 1:1 session - Register   Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Using Microsoft Graph Toolkit to easily access files in Sites and in OneDrive \u0026ndash; a.k.a. OneDrive finder - find and explore OneDrives, folders and files using Microsoft Graph Toolkit. Use Graph queries to get hostname, Sites on hostname, OneDrive item-id, and Sites Root item-id. Use 2 beta controls from MGT for search \u0026ndash; Mgt-File-List and MGT-File. Refine search results by file extension, items on page, etc. Display style \u0026ndash; light/dark mode. Recommendations on managing file list cache and permissions.   Building Microsoft Teams user bulk membership update tool with SPFx and Microsoft Graph \u0026ndash; a.k.a. the Teams Membership Updater tool \u0026ndash; a web part for Teams\u0026rsquo; site owners that pulls member updates from a selected CSV file. Upon load, the web part calls Graph to pull the list of Teams you are a member/owner. Uses Graph batch functions to remove orphaned members and then to add new members. Uses SPFx Reusable controls and react-papaparse.   Building Microsoft Graph get client web part with latest Graph Client SDK \u0026ndash; use Microsoft Graph Toolkit SharePoint provider to access and leverage new functionality of Graph JS SDK in SPFx. Web part sample developed using React Framework that showcases how to use the latest microsoft-graph-client in SPFx. The client enables throttling management (no 429s), Chaos management, uses latest types, getting RAW responses from API, Content-Type is already set for PUT, and a lot more!\n  SPFx extension samples: *\nSPFx web part samples: https://aka.ms/spfx-webparts\n  List Items Menu (SP2019 Version) - João Mendes | joaojmendes\n  News Banner - João Mendes | joaojmendes\n  List Form - Ari Gunawan | AriGunawan\n  Calendar - Eli H. Schei | @acupof_dev\n  NEW Issue Templates!\n  Thank you for your great work. Samples are often showcased in Demos. Agenda items  Latest updates on SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 5:38 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 9:27 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 11:29 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 12:28 PnP Modern Search - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 13:24 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 14:30  Demos   Demo: Using Microsoft Graph Toolkit to easily access files in Sites and in OneDrive \u0026ndash; André Lage (Datalynx AG) | @aaclage [\u0026ndash; 18:27]\nDemo: Building Microsoft Teams user bulk membership update tool with SPFx and Microsoft Graph \u0026ndash; Nick Brown (Cardiff University) | @techienickb [\u0026ndash; 34:06]\nDemo: Building Microsoft Graph get client web part with latest Graph Client SDK \u0026ndash; Sébastien Levert (Microsoft) | @sebastienlevert [ \u0026ndash;][ 47:30]\n  Resources Additional resources around the covered topics and links from the slides.\n  The presentation used for this community call\n  Article - Navigate OneDrive data with Microsoft Graph and Mgt-File-List Beta version   Sample \u0026ndash; OneDrive finder   Sample - Teams Membership Updater   Documentation - Combine multiple requests in one HTTP call using JSON batching   Article - Using the latest microsoft-graph-client in SPFx   Library - Microsoft Graph JavaScript Client Library   Sample - Graph MGT Client   Gallery - Microsoft 365 Extensibility look book gallery   PnP Weekly \u0026ndash; Episode 127 with MVP guest Rick Van Rousselt (Advantive) | @RickVanRousselt | video | podcast\n  Microsoft Build sessions guide (Modern Work Digital Brochure) - aka.ms/modernworkbuildsessions\n  General resources  Viva Connections https://aka.ms/VivaConnections  SharePoint Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring Tools - PnP Modern Search v4| https://aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other topics mentioned  SharePoint dev documentation SharePoint dev issue list  Upcoming Calls | Recurrent Invites   M365 General Dev call \u0026ndash; May 27th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Microsoft Graph call \u0026ndash; June 1st at 8:00 am PDT | https://aka.ms/microsoftgraphcall\n  SharePoint Framework call \u0026ndash; June 3rd at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  SharePoint monthly call \u0026ndash; June 8th at 8:00am PDT | https://aka.ms/sp-call\n  Office add-in monthly call \u0026ndash; June 9th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash; June 10th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Microsoft Teams monthly call \u0026ndash; June 15th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall\n  Power Apps monthly call \u0026ndash; June 16th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform \u0026ndash; June 17th at 9:00 am PDT |https://aka.ms/IDDevCommunityCalendar PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 21st of May 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-20th-of-may-2021/images/210520-together-mode_hue17da182e3b6703be787b40bfcb16159_6403371_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-20th-of-may-2021/","tags":[],"title":"SharePoint Framework Community Call -- 20th of May, 2021"},{"categories":["Community post"],"contents":"If you\u0026rsquo;ve started down the path of developing applications for Microsoft Teams, you may have seen a tool called ngrok as a prerequisite in various tutorials and lab exercises. It\u0026rsquo;s also integrated with a number of tools such as the Microsoft Teams Toolkit and the yo teams generator; even the Bot Framework Emulator has an ngrok option. This article will explain what ngrok is, why it\u0026rsquo;s useful, and what to do instead if you or your company are uncomfortable using it. Also, please check out the companion video for this article, which includes live demos of Teams development with and without ngrok.\nFirst the shocking truth: Microsoft Teams applications don\u0026rsquo;t run in Teams. OK maybe it\u0026rsquo;s not shocking, but it\u0026rsquo;s true. Teams applications are made up of regular web pages and web services that you can host anywhere on the Internet. Teams tabs and task modules (dialog boxes) are just embedded web pages; bots and messaging extensions are web services. This allows developers to use their choice of web development stack, and to reuse code and skills. Web developers typically host a small web server on the same computer where they edit their code to run and debug their applications. For Microsoft Teams developers in particular, ngrok is very handy in this situation. Here\u0026rsquo;s why:\n ngrok provides the encryption needed for https, which is required for Teams applications. It\u0026rsquo;s set up using a trusted TLS certificate so it just works immediately in any web browser. ngrok provides a tunnel from the Internet to your local computer which can accept incoming requests that are normally blocked by an Internet firewall. The requests in this case are HTTP POSTs that come from the Azure Bot Service. Though tunneling is not required per se, there has to be some way for the Azure Bot Service to send requests to the application. ngrok provides name resolution with a DNS names ending in ngrok.io, so it\u0026rsquo;s easy to find the public side of the Internet tunnel. ngrok makes mobile device testing easier since any Internet-connected phone or tablet can reach your app via the tunnel. There\u0026rsquo;s no need to mess with the the phone\u0026rsquo;s network connections; it just works. These conveniences have made ngrok the darling of many Microsoft Teams developers. It lets them compile, run, and debug software locally without worrying about any of these details. The tunneling part, however, lacks the guard rails expected by many IT professionals, especially if they\u0026rsquo;re managing a traditional corporate network that relies on a shared firewall or proxy server for security. While ngrok only provides access to the local computer where it\u0026rsquo;s run, an insider \u0026quot;bad actor\u0026quot; could launch attacks from such a machine. For that reason, some IT departments block all access to ngrok.   Many colleagues have suggested other tunneling applications such as Azure Relay or localtunnel. While they may do the job, they still open a tunnel from the public Internet to your development computer, and thus the same security concerns usually arise. This article will only consider approaches that don\u0026rsquo;t involve tunneling from the Internet.\n Tunneling explained Most computers that are connected to the Internet aren\u0026rsquo;t connected directly. Network traffic passes through some kind of firewall or NAT router to reach the actual Internet. The firewall allows outgoing requests to servers on the Internet but blocks all incoming requests. This is largely a security measure, but it has other advantages as well.\n   A typical web developer runs some kind of web server on their local computer. They can access that web server using the hostname localhost, which routes messages through a \u0026ldquo;loopback\u0026rdquo; service instead of sending them out on the network. As you can see in the picture, these messages don\u0026rsquo;t go through the Internet at all. But what if, in order to test the application, it needs to get requests from the Internet? Bots are an example of this; the requests come from the Azure Bot service in the cloud, not from a local web browser or other client program. Another place this comes up is when implementing webhooks such as Microsoft Graph change notifications; the notifications are HTTP(s) requests that come from the Internet. The problem is these incoming requests are normally blocked by the firewall. If you\u0026rsquo;ve ever opened a port on your home router to allow a gadget to receive incoming connections, this is the same situation. With ngrok running, the incoming requests go through the ngrok service and into your locally running copy of the ngrok application. The ngrok application calls the local server, allowing the developer to run and debug the web server locally.\n   In the case of Teams development, tabs and task modules only require a local loopback connection, whereas bots and messaging extensions have to handle incoming requests from the Internet. Each is explained in more detail later in this article.\nUsing ngrok ngrok is a command line program that works on Windows, Mac OS, Linux and FreeBSD. Suppose your local web server is at http://localhost:3978 (the default for bots). Then run this ngrok command line:\nngrok http 3978 You will then see a screen like this:\n   The \u0026quot;Forwarding\u0026quot; lines show what\u0026rsquo;s happening. Requests arriving at http://(something).ngrok.io or https://(something).ngrok.io will be forwarded to http://localhost:3978 where your bot code is running. At this point you would put the \u0026ldquo;something.ngrok.io\u0026rdquo; address into your Azure bot configuration, Teams app manifest etc. as the location, and leave the command running while you debug your application.\nngrok url The external ngrok url will always look like this:\nWith the free ngrok service, the value of (something) is different every time you run ngrok, and you\u0026rsquo;re limited to an 8-hour session. Every time you get a new hostname you need to update your configuration; depending on what you\u0026rsquo;re doing and how many places you had to enter the hostname, this can be a chore. The paid plans allow you to reserve names that will persist, so you can just start ngrok and and you\u0026rsquo;re ready to go.\n Hint: If you\u0026rsquo;re doing a tutorial using the free version of ngrok, make a note of every place you use the ngrok URL. That way you can easily remember where to update it when it changes.\n The example above assumes that your local server is running http on the specified port. If your local server is running https you need a different command or it won\u0026rsquo;t connect:\nngrok http https://localhost:3978 Host header rewriting The HTTP(s) protocol includes a header called Host, which should contain the host (domain) name and port of the web server. This is used for routing requests to the right server, and for allowing a single web server to serve multiple web sites and services. If your debug server ignores the host header, you can ignore this section. But some servers will require the header to match the host name, such as localhost:3978. The challenge is that if the request was sent to 12345.ngrok.io, the originator will probably put that in the host header when the server is expecting localhost:3978. To handle this, ngrok provides a command line argument that replaces the host headers with the local host name. Simply add the -host-header command switch to enable this. For example,\nngrok http -host-header=localhost:3978 3978 If you see the messages go through to your local web server but it doesn\u0026rsquo;t respond, it may be expecting a specific host header. All the command options are detailed in the ngrok documentation.\nNetwork tracing You might notice that the ngrok screen shows a trace of requests that went through the tunnel; in this case they\u0026rsquo;re HTTP POST requests from the Azure Bot Service, and the local server returned a 200 (OK) response. This is handy because you can see a 500 error from your server code by just glancing at the ngrok screen. You might also notice the \u0026ldquo;Web interface\u0026rdquo; url on the ngrok screen. It provides a full network trace of what went through the tunnel, which can be very helpful in debugging.\n   Developing Tabs and Web-Page based Teams features Some Teams application features are based on web pages provided by your application:\n Tabs and Tab Configuration Pages Task Modules (dialog boxes) Connector Configuration Pages  These features are backed by ordinary web pages that are displayed in an IFrame within the Microsoft Teams user interface. Tabs using the Azure Active Directory Single Sign-On (SSO) option also need to implement a web service to do a token exchange. Accessing these via localhost is no problem; no tunnel is required.\n   [However Teams does require the web server to use a trusted https connection or it won\u0026rsquo;t display. ngrok translates trusted https requests into local http requests, so it just works. But if you\u0026rsquo;d rather not have a tunnel to the Internet as part of your setup, you can do this all locally. It\u0026rsquo;s just more work.\nSetting up a trusted https server On a NodeJS server, you can usually enable https by editing the .env file and setting the HTTPS property to true. For .NET projects in Visual Studio, under project properties on the \u0026ldquo;Debug\u0026rdquo; tab, check the \u0026ldquo;Enable SSL\u0026rdquo; box to enable https. But alas, just turning on the https protocol is generally not enough to satisfy this requirement; the connection must be trusted. Trust is established by a digital certificate; if the certificate comes from a trusted authority, is up-to-date, and matches the hostname in the URL, the little padlock in your web browser lights up and all is well. If not, you get errors that you can bypass in most web browsers, but not in Microsoft Teams.\nThe people over at ngrok acquired their certificate from a trusted authority, and it\u0026rsquo;s set to match hostnames ending in ngrok.io, so it just works without any fuss. The local web server, on the other hand, will most likely have a self-signed, untrusted certificate. So the trick is to get your browser and/or Microsoft Teams to trust it. An option that often works is to browse to the local server from a regular web browser, select the security error, and tell the browser to trust the certificate. You can then run Teams in the same browser and bypass the issue. If the Teams client shares the same certificate store as your browser, it will also work. However these default certificates generally expire after a month or so, and the process will need to be repeated.\nA better option is to generate your own certificate and tell your computer to trust it. That way you can control the expiration date and reuse the certificate on multiple projects, so you only need to do the setup once. This is explained in the article, Setting up SSL for tabs in the Teams Toolkit for Visual Studio Code. The instructions are for a Create React App application using the Teams Toolkit but they shouldn\u0026rsquo;t be too difficult to adapt to other tool chains since the certificate creation and trust parts are the same regardless.\nMobile device testing It\u0026rsquo;s prudent to test Teams applications using the mobile versions of Teams (iOS and Android) to make sure everything looks good and works properly. ngrok makes this a breeze; since your local service is exposed on the public Internet, you can test using any device with an Internet connection, no special setup required. If you\u0026rsquo;d prefer not to expose your local server to the Internet, you can always connect your phone locally using wifi and leave the Internet out of it. This picture shows two phones; phone 1 is connected via ngrok and phone 2 is connected locally.\n   [To set up local access you\u0026rsquo;ll need a server name other than]localhost[, and you\u0026rsquo;ll need to open a path on the local network from your phone to your local web server. Here are the high-level steps; the details vary depending on your phone OS, development computer OS, and network configuration.\n Connect your mobile device via wifi to the same network as your development computer. Open an incoming port on your development computer\u0026rsquo;s built-in firewall (port 3000, 3978, 8080, or whatever your local web server is using). Determine the local IP address of your development computer; ideally reserve it so it doesn\u0026rsquo;t change. This can be accomplished in the DHCP section of most home routers or by using a fixed IP address. Set up a hosts entry (phones have them too!) or local DNS name to point to your development computer. Again, many home routers have the ability to register a local DNS name so you don\u0026rsquo;t have to configure it in each device. Make sure the https certificate is for this same hostname and not just localhost, and install it as a trusted certificate on your phone. While this might not seem easy, it is possible! And it\u0026rsquo;s a one-time setup that you can use over and over. But you can see that ngrok makes it a whole lot easier.  Developing Bots and Messaging Extensions with and without ngrok Several features of Teams applications are based on a web service within your application that is called from the cloud. These are:\n Bots (called by Azure Bot Service) Messaging Extensions (called by Azure Bot Service) Microsoft Graph change notifications Outgoing webhooks All of these are implemented as REST services and could be built with any tool chain, but the requests will come from the cloud, so you need to have a port listening on the Internet to receive those requests.     [For this reason there\u0026rsquo;s currently no local debugging option in Microsoft Teams that doesn\u0026rsquo;t involve opening a port on the Internet or using some sort of tunnel, ngrok or otherwise. The same is true foroutgoing webhooks, which are outgoing from Teams to your app).] If ngrok isn\u0026rsquo;t on your road map, don\u0026rsquo;t worry, there are still options available!\nOption 1. Use the Bot Framework Emulator If you\u0026rsquo;re building a bot, consider using the Bot Framework Emulator, which allows you to run bots locally without using the Azure Bot Service. Instead of running your bot in Teams, you run it in the emulator. The drawback is that the emulator doesn\u0026rsquo;t currently understand some Teams-specific features such as messaging extensions or other Invoke activities. However it does a great job running conversational bots! Adaptive cards work as well, though Invoke card actions do not. If your bot isn\u0026rsquo;t too Teams-specific, consider using the Bot Framework Emulator for most debugging and just do final integration testing in Teams, perhaps when the bot deployed in a staging environment which is set up for handling incoming requests.\nOption 2. Don\u0026rsquo;t debug locally Another approach is to move away from the strategy of local debugging entirely. For example, you could publish your app to Microsoft Azure app service and use the remote debugger. Here are the instructions for Visual Studio Code (NodeJS) and Visual Studio 2019 (.NET). You could even set up a development virtual machine (VM) in Azure or your cloud service of choice and open an incoming port for the Azure Bot Service. Or just run ngrok in the VM, away from the concerns of a corporate network.\nHow many services do you have? Teams applications generated by the yo teams generator have a single web server, so if your app has a combination of features - say, tabs and a bot - you can use one ngrok tunnel or one for all your application features. Teams applications generated by the Microsoft Teams Toolkit generate multiple web servers (one for tabs, another for bots, and a third for the SSO web service if you use it). If you want to use ngrok, you\u0026rsquo;ll need a tunnel for each one. This requires the paid service and you\u0026rsquo;ll have to start up multiple copies each time you begin debugging. Another option is to use a single ngrok tunnel for your bot, potentially with the free service, and then use local connections for the tab and SSO web service. Of course you don\u0026rsquo;t have to use either of these tools; they\u0026rsquo;re really just a convenience! You can use any tools you wish and create the Teams application package in App Studio or by editing your own manifest.json file and zipping it up with a couple icons.\nSummary While ngrok isn\u0026rsquo;t a requirement for Teams development, it does make it a lot easier. However if you can\u0026rsquo;t or don\u0026rsquo;t want to open up a tunnel from the Internet, there are other strategies. Many of these, such as local https servers with self-signed certificates, have been around for a long time and may already be familiar. There is nothing magic about Teams development! It was designed to use standard web tooling, and you can use the same tools that you\u0026rsquo;d use for any web development project. Trust your knowledge of web development to come up with a configuration that works for you. Just be aware of which services will be called from the Internet and plan accordingly.\nReferences  Setting up SSL for tabs in the Teams Toolkit for Visual Studio Code Debug a bot from any channel using ngrok Testing authentication to your bot using the Bot Framework Emulator  ","image":"https://pnp.github.io/blog/post/do-you-need-ngrok-to-develop-microsoft-teams-apps/images/ngrok-without-ngrok-2_hu70ac39522db45a01e976f763fba46da5_100065_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/do-you-need-ngrok-to-develop-microsoft-teams-apps/","tags":["Microsoft Teams"],"title":"Do you need ngrok to develop Microsoft Teams apps?"},{"categories":["Microsoft Graph community call"],"contents":"This month\u0026rsquo;s community call features presentations on Application Consent Deep Dive (demystifying permissions and consent when accessing Microsoft Graph) and on Considerations for Creating Online Meetings (Integration into Outlook or into other 3^rd^ party experiences). Q\u0026amp;A in this call after demos, at end and in chat. The call was hosted by Brian T. Jackett (Microsoft) | @BrianTJackett. Microsoft Presenters were Philippe Signoret and Fabian Williams. Recorded on May 4, 2021.\n Topics App Consent Deep Dive - demystifying permissions and consent when accessing Microsoft Graph. Most Graph permissions allow access to lots of data. Learn how apps and services access Microsoft Graph resources - application permissions and delegated permissions, requesting permissions, granting permissions, and restricting data access scope. General concepts \u0026ndash; direct access, access on behalf of user, app and user authorizations, permission types, service principals, consents and more.\n Considerations for creating Online Meetings - Based on specific meeting requirements, create an Online Meeting through the Calendar Events API or through the Cloud Communications API (Teams). Step through 7 questions to ask yourself to decide when to use what method. The decision is largely based on the need for a rich integrated Microsoft client (Outlook/Teams) experience vs 3^rd^ party application integration including Microsoft chat integration.  Actions  Interested in Presenting during this call? Contact Brian.Jackett@microsoft.com or Jeremy.Thake@microsoft.com Register for Microsoft Build Digital Event - May 25 \u0026ndash; 27, 2021. https://mybuild.microsoft.com/  Mark your calendar \u0026ndash; next Microsoft Graph community call is on June 1 at 08:00am PDT - https://aka.ms/microsoftgraphcall   Resources From demos:\n  Documentation - Calendar API   Documentation - Cloud Communications API   Documentation - Choose an API in Microsoft Graph to create and join online meetings   Documentation - Microsoft Graph throttling guidance   Documentation - Exchange Online limits   Documentation - Cloud Communications service limits\n  From Q\u0026amp;A\n  Documentation \u0026ndash; place resource type   Documentation - Get free/busy schedule of users and resources   Documentation - calendar: getSchedule   Documentation - user: findMeetingTimes   General Resources  Suggestions \u0026ndash; https://aka.ms/M365Dev-Suggestions  Graph TAP Program - https://aka.ms/GraphTAPForm** ** Microsoft 365 Developer Podcast http://www.m365devpodcast.com/ Microsoft Graph Mailbag - http://aka.ms/MSGraphMailbag Microsoft Q \u0026amp; A \u0026ndash; Graph - https://aka.ms/askgraph/ Learn Module - Get started with Microsoft Graph Toolkit | https://aka.ms/mgt-learn Repo - Microsoft Graph Toolkit v2.1 | https://aka.ms/mgt  Documentation \u0026ndash; Microsoft Graph Toolkit Overview | https://aka.ms/mgt-docs Playground \u0026ndash; Microsoft Graph Toolkit Playground | https://mgt.dev  Stay Connected  See the full blog post for this call at - https://aka.ms/m365pnp/community/blog Twitter - https://twitter.com/microsoft365dev @Microsoft365Dev​ YouTube - https://aka.ms/M365DevYouTube​ Blogs - https://aka.ms/m365pnp/community/blog Recurrent Invite to this community call - https://aka.ms/microsoftgraphcall  All Microsoft 365 developer community calls \u0026ndash; https://aka.ms/M365DevCalls   ","image":"https://pnp.github.io/blog/microsoft-graph-community-call/microsoft-graph-community-call-may-2021/images/TitleSlideThumbnail_hucd3fe4a181ac2a139956065aca73409c_391865_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-graph-community-call/microsoft-graph-community-call-may-2021/","tags":[],"title":"Microsoft Graph community call -- May 2021"},{"categories":["Microsoft Identity platform community call"],"contents":"**    Call summary This month\u0026rsquo;s in-depth topic: Get Change notifications delivered via Azure Event Hubs. Brief introduction to Graph change notification (webhooks) and Change notifications delivered via Azure Event hubs. Microsoft Program Manager presenters - George Juma and Kalyan Krishna. This session was delivered and recorded on April 15, 2021. Live and in chat Q\u0026amp;A throughout call.  In-depth topic:\nGet Change notifications delivered via Azure Event Hubs\n A new Microsoft Graph platform capability gives developers using change notification features in Microsoft Graph the option to get change notifications delivered to their applications more quickly and at scale using Azure Event hub. With Microsoft Graph, changes (in data in Microsoft Graph) are tracked with webhooks, a.k.a., change notifications. Presently you get change notifications via a API REST end-point exposed on the internet.  Azure Event Hub is a real-time events ingestion and distribution service built for scale. Ideal for high throughput (no dropped notifications due to timeouts), no public URL (security), no missed notifications if temporally off-line. Operationally, Microsoft Graph Change Tracking places notifications in Event Hub and your app retrieves messages from Event Hub rather than from publicly exposed end points on the internet. You need not poll for changes, change notifications are pushed to your app. You need only subscribe to notifications.  In the end-to-end demo, the presenter steps through app registration, provisioning of an Azure Event Hub, an Azure Storage and a container, add a Shared Access Policy, create an Azure Key Vault (secure connection strings), add subscription connection string and IDs of resources to the app.  Resources   Deck for this call Documentation - Use the Microsoft Graph API to get change notifications | https://docs.microsoft.com/graph/api/resources/webhooks?view=graph-rest-1.0 Documentation - Get change notifications delivered in different ways | https://docs.microsoft.com/graph/change-notifications-delivery Training - Microsoft Graph Training Module - Using Change Notifications and Track Changes with Microsoft Graph | https://github.com/microsoftgraph/msgraph-training-changenotifications/tree/event-hub Documentation - Azure Event Hubs \u0026mdash; A big data streaming platform and event ingestion service | https://docs.microsoft.com/azure/event-hubs/event-hubs-about  Actions  Submit your feedback and topic suggestions - https://aka.ms/IDDevCommunityCallSurvey  Mark your calendar. The next Identity Platform Community Call is on May 20th  Stay connected  Twitter https://twitter.com/microsoft365dev​ and @azuread YouTube https://aka.ms/M365DevYouTube​ Blogs https://aka.ms/M365DevBlog and https://aka.ms/m365pnp/community/blog Recurrent Invite https://aka.ms/IDDevCommunityCalendar   ","image":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-april-2021/images/ViewPorter_hu2fdfb62fe703000b4e5df28d892df97e_2914_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-april-2021/","tags":[],"title":"Microsoft Identity Platform community call - April 2021"},{"categories":["Microsoft Teams community call"],"contents":"Call summary Latest news from Microsoft engineering on Microsoft Teams updates and community assets. Register for Microsoft Build. Sign up for May trainings on Sharing-is-caring. Visit the Microsoft Teams samples gallery to get started with Microsoft Teams development. See the new Microsoft 365 Extensibility look book gallery co-developed by Microsoft Teams and SharePoint engineering. Get the Microsoft Teams Toolkit (Controls) \u0026ndash; \u0026ldquo;Designing your Microsoft Teams app\u0026rdquo; with layout guidance and reusable assets. Three great demos delivered during this session. The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call.\nActions  Register for Microsoft Build, May 25 \u0026ndash; 27, 2021 - https://build.microsoft.com Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; May 24^th^ (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; May PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; June  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; May 20^th^ AMA (Ask Me Anything) \u0026ndash; Microsoft Graph \u0026amp; MGT \u0026ndash; June 8 AMA (Ask Me Anything) \u0026ndash; Teams Dev \u0026ndash; June First Time Presenter \u0026ndash; May 25^th^ More than Code with VSCode \u0026ndash; May 27^th^  PnP Office Hours \u0026ndash; 1:1 session - Register   Download the recurrent invite for this call \u0026ndash; https://aka.ms/microsoftteamscommunitycall Call attention to your great work by using the #PnPWeekly on Twitter.   Microsoft Teams Development Samples: https://aka.ms/teams-samples\n Your community is looking for Samples! Please share your good work      Always a highlight to see you here. Enjoy Microsoft Build. Looking forward to seeing you in person at an event one day.\n Demos Demos delivered in this session\n  Introduction to Microsoft Teams Developer Portal - Meet the new and improved app management console for developers. Access the tools portal from a browser and from within Microsoft Teams client. This is the place to add - register and configure your Teams apps. New safeguards to prevent apps from having same app IDs. Key areas differentiating portal from App Studio called out. Access App Source from portal.   Elevate user experiences with Universal Actions on Teams and Outlook - deck, demo and documentation about consistent message (action) handling across apps (Teams, Outlook and more) using Adaptive Cards with the new Action.Execute action type. User takes action on either Teams or Outlook and action is reflected on the other platform. Vacation approval scenario shows contextual views and sequential workflows on Teams. Excellent documentation, quick start guide and code samples.   Getting started on building Microsoft Teams meeting apps \u0026ndash; step through meeting extensions - pre-meeting (tab \u0026ndash; a poll), in-meeting (side panel tab, pop-up, extension, and bot) and post-meeting (tab). Understand needed manifest updates. Microsoft Forms is a great meeting extension. Demo - create a meeting, add the Forms app to it and observe how Forms does configuration. Meeting extensions are built on top of tabs, bots and messaging extensions.   Thank you for your work. Samples are often showcased in Demos.\n Topics Topics covered in this call\n  News and updates - Vesa Juvonen (Microsoft) | @vesajuvonen - 3:35\n  Demo: Introduction to Microsoft Teams Developer Portal \u0026ndash; Karthig Balendran (Microsoft) | @KarthigBalendr1 - 10:20\nDemo: Elevate user experiences with Universal Actions on Teams and Outlook \u0026ndash; Shiladitya Saha (Microsoft) - 23:30\nDemo: Getting started on building Microsoft Teams meeting apps \u0026ndash; Rick van Rousselt (Advantive) | @RickVanRousselt - 36:54\n   Resources Additional resources around the covered topics and links from the slides.\n  Slides used in this ​community call\n  Site \u0026ndash; Developer Portal for Microsoft Teams   Documentation - Universal Actions for Adaptive Cards   Quick Start Guide - Work with Universal Actions for Adaptive Cards   Blog - Rick\u0026rsquo;s blog   PnP Weekly \u0026ndash; Episode 127 with guest MVP Rick van Rousselt (Advantive) | @RickVanRousselt | video | podcast\n  Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Controls - Designing your Microsoft Teams app | https://aka.ms/teams/ui/design\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n   General resources  Viva Connections https://aka.ms/VivaConnections Microsoft Learn - Microsoft Teams development Learning Paths Microsoft Teams Toolkit for Visual Studio Code Microsoft Teams app templates Yo Teams video training package Microsoft 365 Developer videos | aka.ms/m365devyoutube Microsoft 365 community (PnP) videos | aka.ms/m365pnp/videos yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor  Upcoming Calls | Recurrent Invites   Power Apps monthly call \u0026ndash; May 19^th^ at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; May 20^th^ at 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft Identity Platform \u0026ndash; May 20^th^ at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar  M365 General Dev call \u0026ndash; May 27^th^ at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Graph call \u0026ndash; June 1^st^ at 8:00 am PDT | https://aka.ms/microsoftgraphcall SharePoint monthly call \u0026ndash; June 8^th^ at 8:00am PDT | https://aka.ms/sp-call Office add-in monthly call \u0026ndash; June 9^th^ at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; June 10^th^ at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall Microsoft Teams monthly call \u0026ndash; June 15^th^ at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall   Microsoft Teams monthly community calls are targeted at anyone who\u0026rsquo;s interested in Microsoft Teams development topics. This includes Microsoft Teams, Bots, App templates, Samples, and more. Details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls!\n You can download recurrent invite from https://aka.ms/microsoftteamscommunitycall. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 19th of May 2021\n","image":"https://pnp.github.io/blog/microsoft-teams-community-call/microsoft-teams-community-call-may-2021/images/teams-18th-recording-promo_huad26f8f2b8826b84f73012d357eb4fda_551599_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-teams-community-call/microsoft-teams-community-call-may-2021/","tags":[],"title":"Microsoft Teams Community Call - May 2021"},{"categories":["Power Apps community call"],"contents":"Call summary Topics covered in this month\u0026rsquo;s community call include - Building multilingual Power Apps, Using Environment Variables in Canvas Apps, Using Environment Variables in Flows, Recent Power Apps News and Community Contributions and Latest on PnP Power Platform Samples Contributions. Demo Extravaganza 2021. Entries accepted now, Finalist voting starts \u0026ndash; June 1st, Finalist voting ends \u0026ndash; June 30th, Finals / Winner(s) to be Announced \u0026ndash; July 21, 2021 at 08:00 PT. This session included Q\u0026amp;A in chat. The call was hosted by Todd Baginski (Canviz). Demo presenters included Haniel Croitoru (Protiviti), Charles Sterling (Microsoft), and Reza Dorrani (Catapult). This call was recorded on May 19, 2021. Thank for attending the call or viewing it on demand.\nDemos   Building multilingual Power Apps - a high-level architecture for multilingual forms supported by one or more SharePoint lists (containing language terminology) in back-end. Multiple apps/forms can pull from same lists. Leverages native SharePoint functionality \u0026ndash; lookups to pull data. Picks up chosen language from computer Office 365 settings, so renders on all device platforms. Uses basic SharePoint and Office 365 connectors in Power apps. Easy to update, ensures consistency across apps.   Using Environment Variables in Canvas Apps in this demo, Charles creates a new environment variable and a Power App to query Environment Variable values then demonstrates how environment variables may be used at runtime.\n  Using Environment Variables in Power Automate Flows - create Environment Variables (to connect to SharePoint sites/data) and add them to Power Apps Solutions. Within your Canvas Apps, Flows, and Bots, select to incorporate your Environment Variables. Environment variables simplify moves from Dev to Test to Prod environments by handling environment configuration updates to Flows, Bots, and Apps. See how Environment Variables are created, added to an App and a Flow.\n  Recent News \u0026amp; Cool Stuff  Power Apps Demo Extravaganza 2021- aka.ms/PowerAppsDemoExtravaganza Importing \u0026amp; Exporting Power Apps With Datasource Environment Variables -aka.ms/PAvariableswalkthrough  New Robotic Process Automation training - aka.ms/RPAinaDayPackage  Adoption Maturity Model: Repeatable patterns for successful Power Platform adoption - aka.ms/PACATAdoption   Actions  Enter now for Demo Extravaganza 2021 | https://aka.ms/PowerAppsDemoExtravaganza Spanish Bizz Summit \u0026ndash; June 4 \u0026ndash; 5, https://bizzsummit.es/ Contact: Eickhel Mendoza Join us for our next call: June 16, 2021 at 08:00am PDT | https://aka.ms/powerappscommunitycall Join us for our next call: May 19, 2021 at 08:00am PDT | https://aka.ms/powerappscommunitycall  Call agenda  Building multilingual Power Apps - Haniel Croitoru (Protiviti) | @HCroitoru \u0026ndash; 3:04 Using Environment Variables in Canvas Apps - Charles Sterling (Microsoft) | @chass \u0026ndash; 21:10 Using Environment Variables in Flows - Reza Dorrani (Catapult) | rdorrani \u0026ndash; 28:52 Recent Power Apps News and Community Contributions - Charles Sterling (Microsoft) | @chass \u0026ndash; 46:28 Latest PnP Power Platform Samples \u0026ndash; April Dunnam (Microsoft) | @aprildunnam \u0026ndash; 49:05  Referenced in this session  Documentation - Environment variables overview | https://docs.microsoft.com/powerapps/maker/data-platform/EnvironmentVariables Blog - Announcing data source environment variables | https://powerapps.microsoft.com/blog/announcing-data-source-environment-variables/  Learn more  See the full blog post for this call on the Tech Community Blog - https://aka.ms/m365pnp/community/blog Microsoft\u0026rsquo;s Power Platform website Power Apps Responsive Design - https://bit.ly/responsivepowerapps  Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - https://aka.ms/PowerAppsCommunitySamples Power Apps Community Videos -https://aka.ms/PowerAppsCommunityVideos Power Addicts Hangout - https://wearepoweraddicts.com #LessCodeMorePower Video Series - https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Share more - draw attention to your great work - #PowerAppsCC  Stay connected  Twitter: https://twitter.com/MSPowerPlat Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365DevYouTube​ Blogs - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/powerappscommunitycall  ","image":"https://pnp.github.io/blog/microsoft-teams-community-call/microsoft-teams-community-call-may-2021/images/teams-18th-recording-promo_huad26f8f2b8826b84f73012d357eb4fda_551599_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-may-2021/","tags":[],"title":"Power Apps Community Call -- May 2021"},{"categories":["Office add-in developer community call"],"contents":"Agenda May\u0026rsquo;s call, hosted by David Chesnut, featured the following presenters and topics:\n Abid Rahman announced the GA of keyboard shortcuts and shared plans for the feature going forward. \u0026ndash; 00:59 Sohail Zafar announced the GA of contextual tabs and updates about the feature and plans going forward. \u0026ndash; 11:03 Special guest presenter Damien Bird (DamoBird365) demonstrated how to use Office Scripts with Power Automate to generate and fill in an invoice with data from SharePoint, and then save to a PDF. \u0026ndash; 19:57 Juan Balmori shared Outlook updates on event-based activation and announced new preview events. \u0026ndash; 35:09  Q\u0026amp;A (Question \u0026amp; Answers) Unfortunately, we had some issues with the chat during the call. We apologize to folks who were not able to ask a question. If you have a question, you can reach out to us by using our short survey form. We\u0026rsquo;ll address any questions in the form during the next call.\nIs it possible to see a demonstration of debugging Outlook add-ins in the Outlook application on mobile devices? Ideally for a local developer instance of an add-in server rather than one publicly accessible (since a hurdle is getting the mobile device to communicate successfully with lab instance of add-in server). We\u0026rsquo;ve encountered issues on Android with certificates running lab instances of add-ins so would like to see a demonstration of recommended approach to testing on mobile devices.\nThanks for this request! We\u0026rsquo;re working to schedule this demo this on a future call. When the Outlook REST API is decommissioned in November 2022, what API should add-ins deployed to customer hosted Exchange Servers (2016/2019) use for mobile support? Will the Outlook REST API remain active for Exchange Server and just be decommissioned for O365 accounts?\nWe\u0026rsquo;re still working through details on this, and we plan to share more guidance in the future. Is there any movement on supporting reading values, such as AppDomains and custom properties, from the add-in manifest at runtime through Office.js? The request has come up over the years on forums and been raised on UserVoice. We would prefer to write a key and value to the manifest, instead of passing values to URL endpoints, as this opens the door to people injecting their own values outside of the manifest to those endpoints.\nThis feature is not on our backlog. We migrated UserVoice requests that had over 100 votes to our new Microsoft 365 Developer Platform Ideas Forum. We\u0026rsquo;d ask that you Submit an Idea on this page and recreate your request. If there\u0026rsquo;s enough interest from the community we\u0026rsquo;ll definitely consider it. Thanks! What is the roadmap for Office.js for PowerPoint? When will it achieve feature parity with VSTO APIs?\nVSTO is a huge API surface, which is why we approach building out the Office JS API based on prioritized scenarios. It\u0026rsquo;s tremendously helpful to understand the scenarios you are trying to unlock and what API\u0026rsquo;s you need. That helps us prioritize. Please let us know which scenarios you need enabled on our Ideas page and use the \u0026ldquo;Office Add-ins development\u0026rdquo; label. We\u0026rsquo;re planning to deliver increased API surface area for PowerPoint going forward. In Excel on the web, when you close an Office Add-In, it creates a bar on the left side of Excel and puts an icon for the add-in on that bar, allowing the user to quickly show or hide add-ins from there. Will this be available in Excel on the desktop?\nThanks for this feature request! Can you let us know more about this on our ideas page and provide a screen shot to help us understand better? Will you support Excel.Range.Interior characters and the ability to apply formatting at the character level?\nThanks for this request! We\u0026rsquo;re looking into supporting this. Can you please create a request for this on our ideas page?\nResources Keyboard shortcuts  Custom keyboard shortcuts in Office Add-ins - Office Add-ins | Microsoft Docs PnP sample: Use keyboard shortcuts for Office add-in actions  Custom contextual tabs  Create custom contextual tabs in Office Add-ins - Office Add-ins | Microsoft Docs PnP sample: Create custom contextual tabs on the ribbon  Office Scripts demo by Damien Bird  Excel demo: https://damobird365.birdhoose.co.uk/exceldemo DamoBird365 - YouTube  Outlook event-based activation  Outlook add-ins overview - Office Add-ins | Microsoft Docs Configure your Outlook add-in for event-based activation (preview) - Office Add-ins | Microsoft Docs PnP sample: Use Outlook event-based activation to set the signature (preview)  Office Add-ins community call  Recurring, monthly community call calendar invite Community call topic requests and questions Community call recordings on the YouTube Office Dev channel  Office Add-ins feedback  Technical questions \u0026ndash; Microsoft Q\u0026amp;A (office-js-dev), (office-addins-dev) Issues \u0026ndash; GitHub  Recommendations and suggestions \u0026ndash; Microsoft 365 Developer Platform ideas The next Office Add-ins community call is on Wednesday, June 9, 2021 at 8:00AM PDT. Get the calendar invite at https://aka.ms/officeaddinscommunitycall.  ","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-may-2021/images/office-add-ins-call-recording-12th-may_hu430a48b57129cef7a6c601d77351321e_813418_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-may-2021/","tags":[],"title":"Office Add-ins community call -- May 2021"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Belgium-based, MVP, author, Microsoft Teams developer, and CTO with Advantive, Rick Van Rousselt | @RickVanRousselt. Topics discussed in this session can be summarized with one word. Change! The leap from Teams tab (iFrame) to Extension (Bot Framework) development, or transition from Skype to Teams, in the customer\u0026rsquo;s mind. Many customers are now circling back to Microsoft partners for guidance on optimizing Microsoft 365 and Microsoft Teams, yet interestingly at differing rates Worldwide. Clearly in part, adoption is cultural. As well, the partner business has changed from having a development to a consultative focus, from selling and executing long term to short term projects, and the staff from specialists to generalists. The pace of change is fast, challenging and rewarding. Case in point on the pace of change - Microsoft and the PnP Community delivered a box busting 29 articles in this last week! This session was recorded on Monday, May 17, 2021. Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\n[This episode was recorded on Monday, May 17, 2021.]\n Video at Microsoft 365 Community YouTube channel Podcast format at https://pnpweekly.podbean.com. These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!  Events  May 25-27, 2021- Microsoft Build 2021 June 1-2, 2021 - European SharePoint Conference 2021 - Online August 9-11, 2021 - North American Collaboration Summit  Register with coupon code \u0026ldquo;PnP\u0026rdquo; for 25% off from the prize at https://nacs.ticketspice.com/nacs2021    Microsoft articles  Behind the scenes on Microsoft Viva with Microsoft Mechanics - Seth Patton (Microsoft) | @SethPat Microsoft 365 admin center network connectivity is now generally available - Paul Andrew (Microsoft) | @pndrw Customer Key support for Microsoft Teams now Generally Available! - Microsoft Experience the magic of ESPC21 Online training \u0026ndash; free and paid options - Mark Kashman (Microsoft) | @mkashman \u0026ldquo;Viva Topics is the on-hovercraft of knowledge\u0026rdquo; 🎙️ \u0026ndash; The Intrazone podcast - Mark Kashman (Microsoft) | @mkashman, Chris McNulty (Microsoft) | @cmcnulty2000 \u0026amp; CJ Tan (Microsoft) Microsoft Graph .NET SDK v4 adds enhanced features \u0026ndash; now in preview - Microsoft New renewal offering for your app\u0026rsquo;s Publisher Attestation and Microsoft 365 Certification - Microsoft Microsoft Graph Mailbag \u0026ndash; Azure AD applications and users for testing - Brian T. Jackett (Microsoft) | @BrianTJackett Five new features enhancing Adaptive Cards in Microsoft Teams - Ojasvi Choudhary (Microsoft) | @Ojasvi  Community articles  Excel Scripts and Cloud Flows - Data Manipulation - Damien Bird (Aberdeen City Council) | @DamoBird365 Microsoft 365 PnP Community Spotlight: Arjun Menon - Arjun Menon (Tata Consultancy Services) | @arjunumenon \u0026amp; Luise Freese | @LuiseFreese React Groups and Teams Filters - Alison Collins  Getting Started with Azure Shell and PnP PowerShell with Certificates - Paul Bullock (Capa Creative) | @pkbullock Setting up https for Teams Tabs projects - without ngrok - Bob German (Microsoft) | @Bob1German Power Automate: skip the Parse JSON action to reference data - Django Lohn (InSpark) | @LohnDjango Community Sample: News Ticker app (SPFx Extensions) - Ari Gunawan (DevStack) | @AriGunawan Resubmit your failed Power Automate flow runs automatically using M365 CLI and REST API - Mohamed Ashiq Faleel (Tata Consultancy Services) | @AshiqFaleel SPFx People Search web part, v2.5.0 - Yannick Reekmans (Qubix) | @yannickreekmans Configure Teams Applications with Azure App Configuration (nodeJS) - Markus Möller (Avanade) | @Moeller2_0 SharePoint Online CSS Classes - Denis Molodtsov (Point Alliance) | @Zerg00s Teams + Power Apps: Building context/theme aware apps - Michel Mendes (Storm Technology Ltd) | @michelcarlo Teams Activity Notifications using Azure Services - Aakash Bhardwaj (Microsoft) | @aakash_316 PnPjs 2.5 change log - Julie Turner (Sympraxis Consulting) | @jfj1997 spfx-fast-serve 3.0: it\u0026rsquo;s all about simplicity - Sergei Sergeev (Mastaq) | @sergeev_srg Find who deleted files in SharePoint Online using PowerShell PnP (from the recycle bin) - Veronique Lengelle (CPS) | @veronicageek Episode #154 - Introducing the Microsoft Graph Toolkit - Paolo Pialorsi (PiaSys) | @PaoloPia Power Automate SharePoint Get Column Changes - April Dunnam (Microsoft) | @aprildunnam Flow Approval Dashboard in Power Apps for SharePoint - Reza Dorrani (Catapult Systems) | rdorrani Lesson 1: The attitude of a decision maker can impact the entire platform experience - Megan Strant (Strant Consulting) | @MeganStrant  Additional resources  Power Platform Sample Gallery - for finding easily samples from the GitHub - contributions from the community are welcome! PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.  \u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-127-rick-van-rousselt/images/Thumb-Ep127_hu6d048195fef81de0f359fd5b14681ae7_583628_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-127-rick-van-rousselt/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 127 - Rick Van Rousselt"},{"categories":["Community post"],"contents":" Have you discovered that the existing Power Automate actions for Excel are limited to Excel Tables? Are you looking to take your cloud flow interactions with Excel to the next level? Maybe it\u0026rsquo;s time to start looking at Excel Scripts which are currently accessible to Power Automate as a Preview Feature. What are Excel Scripts? Using either the built in recording tool or TypeScript programming language you can create a script to update cells, rows or ranges of data or indeed insert formulas into cells. You can even use Excel to perform some of the features missing to Power Automate like sorting an array. I have prepared a two part video series demo\u0026rsquo;ing how you can use Power Automate and Excel Scripts to both send data to a plain excel file and populate cells, rows and ranges but also in return, again using Excel Scripts, how you can create a table in an Excel file and return the available data either as a results array for your next action in your Cloud Flow OR by using the list all rows action based on the newly created table. First Video on Populating Excel from Cloud Flows is available here: The below Cloud Flow is relatively straight forward for this first part demo. We have an array of Rows for our Excel Worksheet and this demonstrates one of many ways to pass data to Excel via the Script Action. The real benefit of creating a bespoke function in Excel Scripts is that the Script Action is dynamic. It will return the fields you have defined in the action window and ensure the datatype provided is correct, i.e. string or number.   In the sample Typescript Excel Script built below, you can try this for yourself. The script will populate unique cells, columns and rows with data based on the 4 variable types defined, examplevar1-4 as strings, numbers, multivariables and arrays. function main(workbook: ExcelScript.Workbook, examplevar1: string, examplevar2: number, examplevar3: multivariable, //Header of Table  examplevar4: arrayvar[] //Multiple rows in Table ) { let selectedSheet = workbook.getActiveWorksheet(); // Set cells A1,B2,C3,D4 on selectedSheet  selectedSheet.getRange(\u0026#34;A1\u0026#34;).setValue(examplevar1); selectedSheet.getRange(\u0026#34;B2\u0026#34;).setValue(examplevar2); selectedSheet.getRange(\u0026#34;C3\u0026#34;).setValue(examplevar1 + \u0026#39; \u0026#39; + examplevar2); selectedSheet.getRange(\u0026#34;D4\u0026#34;).setValue(examplevar2 + 1111); //An example function to reverse the strings  function reverseString(str: string) { return str.split(\u0026#34;\u0026#34;).reverse().join(\u0026#34;\u0026#34;); } //Create Vertical Header Row with Multi Variables  const formattedColumn = [ [reverseString(examplevar3.multivar3var1)], [reverseString(examplevar3.multivar3var2)], [reverseString(examplevar3.multivar3var3)], [reverseString(examplevar3.multivar3var4)], [reverseString(examplevar3.multivar3var5)], [reverseString(examplevar3.multivar3var6)]]; selectedSheet.getRange(\u0026#34;F1:F6\u0026#34;).setValues(formattedColumn); //Create Horizontal Header Row with Multi Variables  const formattedHeader = [[examplevar3.multivar3var1, examplevar3.multivar3var2, examplevar3.multivar3var3, examplevar3.multivar3var4, examplevar3.multivar3var5, examplevar3.multivar3var6]]; selectedSheet.getRange(\u0026#34;A8:F8\u0026#34;).setValues(formattedHeader); //Populate rows below Header Row with Array Variable  const starterrow = 9; //starting row for \u0026#34;table\u0026#34; data  for (let i = 0; i \u0026lt; examplevar4.length; i++) { const currentObject = examplevar4[i]; const formattedrow = [[currentObject.arr4var1, currentObject.arr4var2, currentObject.arr4var3, currentObject.arr4var4, currentObject.arr4var5, currentObject.arr4var6,]]; const rowRange = `A${starterrow + i}:F${starterrow + i}`; selectedSheet.getRange(rowRange).setValues(formattedrow); } //Return a response to the Cloud Flow  return \u0026#34;DamoBird365 Loaded \u0026#34; + examplevar4.length + \u0026#34; Records Loaded into Excel and Demo Completed OK\u0026#34; } //Defining Interfaces for MultiVar and Array interface multivariable { multivar3var1: string, multivar3var2: string, multivar3var3: string, multivar3var4: string, multivar3var5: string, multivar3var6: string } interface arrayvar { arr4var1: number, arr4var2: string, arr4var3: string, arr4var4: string, arr4var5: string, arr4var6: string }  Second video on retrieving data back from Excel files without a table. Identify the active cells, define and create a table via the script and return the data to your cloud flow as either a result to the script action or via the traditional list rows actions. The Cloud flow on this occasion does not require any data input as its purpose is to return data back to the flow. Whilst the data could be fully repurposed in Excel, as a Power Automate enthusiast, I have used a select action to reformat the Array and rename the keys. Both the Select Action and the List Rows Action demonstrate the two methods for retrieving data from Excel where no table was present previously.   Again, in the sample Typescript Excel Script built below, you can quickly test out the functionality of creating a table and returning data to your cloud flow. The code is commented to help you understand how the solution is built. Please note I am not a coder but with the available resources online, I was quickly able to understand how to put this together. The recording tool is also useful for getting an understanding of some of the functions available. function main(workbook: ExcelScript.Workbook) { // Get the first worksheet  const selectedSheet = workbook.getFirstWorksheet(); //get active range of WorkSheet  let range = workbook.getActiveWorksheet().getUsedRange(); // Get last used row of WorkSheet  let lastrow = range.getRowCount(); // Find first reference of ID in selectedSheet i.e. header row  let IDCell = selectedSheet.getRange(\u0026#34;A1\u0026#34;).find(\u0026#34;ID\u0026#34;, { completeMatch: true, matchCase: true, searchDirection: ExcelScript.SearchDirection.forward }); // Get the current active cell in the workbook.  //and format current cell without Sheet1! reference  let activeCell = IDCell.getAddress().replace(\u0026#34;Sheet1!\u0026#34;, \u0026#34;\u0026#34;); //get table range  const TableRange = `${activeCell}:F${lastrow}`; // Create a table using the data range.  let newTable = workbook.addTable(selectedSheet.getRange(TableRange), true); newTable.setName(\u0026#34;NewTableInExcel\u0026#34;); // Get the first (and only) table in the worksheet.  let table = selectedSheet.getTables()[0]; // Get the data from the table.  let tableValues = table.getRange().getValues(); //Return a response to the Cloud Flow  return tableValues }  Where do you find Excel Scripts Functionality? It\u0026rsquo;s an Excel Online feature. Load up Excel and select the Automate Tab. Here you can view all scripts, record some actions and edit new or existing scripts that have been built.     Wondering where they live? Jump onto OneDrive and take a look at Documents/Office Scripts where you can export/import and share.     Want to see a proof of concept ? Take a look at my Invoicing Demo where I show you how you could autocompete an excel invoice template using scripts. I recently covered this in a live demo with the Monthly (12th May) Microsoft Office Scripts Dev Team and included a bonus feature, converting the excel files to PDF using the same flow without premium actions. Look out for this video on Microsoft 365 Developer Youtube channel soon. Please let me know if you found this useful and what you might use Excel Scripts for next.\n","image":"https://pnp.github.io/blog/post/excel-scripts-and-cloud-flows-data-manipulation/images/Capture_hu7e35fa41d129a33a8cd29971728142c7_246057_460x200_fill_box_smart1_3.PNG","permalink":"https://pnp.github.io/blog/post/excel-scripts-and-cloud-flows-data-manipulation/","tags":["Power Automate"],"title":"Excel Scripts and Cloud Flows - Data Manipulation"},{"categories":["Community post"],"contents":"Which community project do you maintain? CLI for Microsoft 365\nHow does it help people? It is a cross platform tool which is used by Developers and IT Pros with which you can configure Microsoft 365, manage SharePoint Framework projects and build automation scripts.\nWhat have you been working on lately? Script for notifying the tenant status for IT Pros\nWhat do you do at work? I am a consultant for Microsoft 365 services. Apart from that I am also part of a team who primarily develops the Digital workplace Apps related to Microsoft Teams.\nWhy are you a part of the M365 community? Because of the Awesome work the Microsoft 365 community is doing selflessly. More than that the inclusiveness which the community provides for all the contributors irrespective of who you are and where you are from. I have seen lot of my peers and colleagues who have got benefited from the work of the community and nothing is better than being part of the community owing to their awesome work across the Microsoft 365 areas.\nWhat was you first community contribution? First active contribution was back in July 2020 (17 July 2020 to be precise). From then on, there was no looking back for me.\nOne tip for someone who’d like to start contributing Do not underestimate your contribution. You may think your contribution is so simple and it will not be beneficial to anyone (Let me confess, I also thought the same initially). With that you are underestimating the power of simplicity. It will be beneficial and may save a lot of time for someone who might be on the other side of the globe and can save his / her / theirs time. Be kind to people who contribute and support and be compassionate. Remember, people who are part of their community is doing this just out of sheer passion and ensure that you show gratitude and empathy. Remember community is there to help you and to support. I got that during my initial days and I am sure any contributor also will get similar treatment which I have received during my starting days.\n","image":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-arjun-menon/images/Arjun_hu0dedbce16e82763572203348b97a793b_7319_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-arjun-menon/","tags":[],"title":"Microsoft 365 PnP Community Spotlight: Arjun Menon"},{"categories":["Community post"],"contents":"In this article I\u0026rsquo;ll go over both of the filters you can find in my React Groups and Teams Filters web part. The web part is useful for site managers, admins, and users to find their sites and it\u0026rsquo;s information.The first filter switches the All Groups in my Organization to My Groups and the second filters the visibility of the groups ( Public/Private/All )\nIn the screenshot below you can see the code for the buttons.   Visibility Filters The first three buttons are the visibility filters. They filter the MyGroupResultsFiltered to be the button text you clicked. For example, if you select the \u0026lsquo;Public\u0026rsquo; button MyGroupResultsFiltered will be filtered to include only groups with the visibility set as \u0026lsquo;Public\u0026rsquo;.\nLet\u0026rsquo;s dive deeper into what\u0026rsquo;s happening. On select of, for instance, Private, the button calls the SwitchGroupList2 function (line 69) and passes through \u0026lsquo;Private\u0026rsquo; as a parameter.   That parameter \u0026lsquo;Private\u0026rsquo; is now called \u0026lsquo;Switch\u0026rsquo; and next we check if that equals \u0026lsquo;All\u0026rsquo;. If it does and you clicked the button titled \u0026lsquo;All\u0026rsquo;, we want to set the state of AllGroupsresults to the state holding all of the items. We do this because if I were to filter the AllGroupsresults to private and then switch to public and filter that, we\u0026rsquo;re just filtering a filtered list and you won\u0026rsquo;t get back any results. AllGroupsresults hold all of the results for Groups in my Organization and AllGroupsresultsFiltered is the filtered version of that list.\nIn other words, when we get back the Groups ( both Groups in my Org and My Groups ) we make a copy of this list that we can filter however we would like and we can call on that list and filter it and assign it to the AllGroupsresultsFiltered value.\nIf the selected filter is anything other than \u0026lsquo;All\u0026rsquo; we go ahead and create a constant that is assigned the filtered list. What this filter does is it maps through AllGroupsresults and checks if every group has the visibility that you selected, keeps the groups that has the visibility, and assigns the value to SwitchedALL. Same thing for MyGroupResults; It maps through MyGroupResults and filters the groups to be the ones that match the visibility you selected. Next, we set the state of AllGroupsresultsFiltered and MyGroupResultsFiltered to be SwitchedALL and SwitchedMY, respectively.\nIn our case, we selected the button with the text \u0026lsquo;Private\u0026rsquo; so AllGroupsresultsFiltered and MyGroupResultsFiltered will reflect this change and only show the groups with the visibility \u0026lsquo;Private\u0026rsquo;. The last part is, after the if/else statement, we want to set the state \u0026lsquo;mode\u0026rsquo; to be the selected filter. We\u0026rsquo;re doing this so that the button we clicked will have the \u0026lsquo;SelectedFilter\u0026rsquo; styling. How we do this is by inputting a ternary operator in the code so that, depending on if the mode equals \u0026lsquo;Private\u0026rsquo;, we change the styling. If you selected the Private button the SwitchGroupList2 function will set the mode to be \u0026lsquo;Private\u0026rsquo; and, consequently, rendering the button with the class \u0026lsquo;Selected Filter\u0026rsquo;.\n   Option Filter On the bottom right of the heading before the groups you will either see a button titled \u0026lsquo;My Groups\u0026rsquo; or \u0026lsquo;Groups In My Organization\u0026rsquo;. ![option filter.png](images/option filter.png)\nThis button allows you to toggle between either displaying groups you are a member of or groups in your organization. On select of this button you call the SwitchGroupList function. ( Not the SwitchGroupList2 function mentioned earlier )\nIn this function we check if the title in state is \u0026lsquo;Groups In My Organization\u0026rsquo;. The title is what is displayed, meaning that if the button text is \u0026lsquo;View My Groups\u0026rsquo; the title is \u0026lsquo;Groups In My Organization\u0026rsquo;. ![switch group list.png](images/switch group list.png)\nIf the title is \u0026lsquo;Groups In My Organization\u0026rsquo; we change it to be \u0026lsquo;My Groups\u0026rsquo;. The opposite also applies- if the title is \u0026lsquo;My Groups\u0026rsquo; we go ahead and change it to be \u0026lsquo;Groups In My Organization\u0026rsquo;. Why is this part of the code? For two reasons: the first is because we want to toggle the button text and header text between \u0026lsquo;Groups In My Organization\u0026rsquo; and \u0026lsquo;My Groups\u0026rsquo; and also so that we can display the right information.\n   In the render there is a ternary operator that checks if the current selected option is \u0026lsquo;My Groups\u0026rsquo;.\nIf this is true it maps through MyGroupResultsFiltered and displays the groups. If not, it renders All of the groups in your organization. I hope you liked this article and it helped you out with your filters!\nYou can view the code here: https://github.com/pnp/sp-dev-fx-webparts/tree/main/samples/react-groups-teams\n","image":"https://pnp.github.io/blog/post/react-groups-and-teams-filters/images/img1_hu84eb8a9a617c68be1e59443315245a8a_71467_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/react-groups-and-teams-filters/","tags":["SharePoint framework (SPFx)"],"title":"React Groups and Teams Filters"},{"categories":[],"contents":"I recently encountered a scenario recently where I was looking to do a quick technical check on some advice I was giving to another member of the community regarding PowerShell \u0026ndash; especially capturing the output of PnP PowerShell commands and store in a text file. When I responded to the tweet, I was away from my computer, but I did have my iPad (with keyboard) with me and wanted to see if I could use PnP PowerShell with Azure Shell \u0026ndash; you may have guessed the result by \u0026ndash; YES you can. I was not using best security practice at the time to log in (username/password), which would not work if I had MFA on the account (which I should have ☹). I will include better practice configuration to include certificates and an Azure AD App in this article. What you will need So, let\u0026rsquo;s get started; you will need a few things to get going,\n Azure Subscription - this is necessary for a storage account that preserves your files between sessions and is mandatory for Azure cloud shell to work. Azure Resource Group \u0026ndash; the grouping of resources in Azure Azure KeyVault - to store a certificate for a secure connection to M365 services. PnP PowerShell - the newest PnP power shell module, this article uses v1.5.0 Permissions to consent an app as this uses an Azure AD app for the authentication. Windows Machine \u0026ndash; for creating the app and certificate. If setting up services locally by PowerShell, then install the Az module.  Setting Up There are a few tasks we are going to do to set up working with Azure Shell, Azure AD App and Certificates. Activate Azure Shell First, let\u0026rsquo;s go ahead and activate the Azure Shell; we will use this to set up the required resources as well: Navigate to https://shell.azure.com or select the icon in the Azure Portal.\nThen run through the first setup of the Azure Shell:\n![Welcome screen Azure Shell](images/Azure Shell - First Welcome.png)\nSelect PowerShell. Then run through the first setup of the Azure Shell:\n![Simple setup screen for storage](images/Azure Shell - Simple Setup.png)\nIf you choose Create storage at this point, then this will set up the storage account and resource group for you, using Azure\u0026rsquo;s naming standards and region. If you want to specify:\n Subscription Region Resource Group Storage account File share name  ![Azure Shell Advanced Setup](images/Azure Shell Advanced Settings.png)\nThen select Advanced settings. I like to name resources myself in a standard manner. For this article, I am going to use the advanced options and specify:\n Region: North Europe Resource Group Name: azure-cloud-shell Storage Account: \u0026ldquo;pkbtenantcloudshell\u0026rdquo; File Share: pkbtenantcloudshellfiles   Note: the naming of some of these resources is very strict, e.g., 3 -24characters, no spaces, lowercase\n  Select Create Storage  ![Azure Shell - Setup Complete](images/Azure Shell - Setup Complete.png) Now the Azure Shell is ready to use.\nInstalling PnP-PowerShell Next, we need to install the PnP PowerShell module in Azure Cloud shell, enter: Install-Module -Name PnP.PowerShell  The great thing about Azure Cloud Shell is the installation is persistent between sessions, so you will only have to do this once. However, you will need to upgrade the module periodically. ![Azure Shell - Install PnP PowerShell](images/Installing PnP PowerShell module.png) For information on installing PnP-PowerShell, check out the documentation site for more details: https://pnp.github.io/powershell/ Create a KeyVault Next, we want somewhere secure to store a certificate \u0026ndash; Azure KeyVault.\nA KeyVault is a secure method of storing keys, secrets and certificates. We intend to keep the certificate used for this setup in the vault. Another benefit of using this method, in larger organizations, where other teams manage apps or the security aspect of the tenant, they can set up this vault and retain control over the certificate and app creation. You can, if you prefer, navigate to the Azure Portal and use the marketplace to create a new KeyVault resource; check out this quick start guide. OR set this up in Azure Cloud Shell run the following commands: Firstly, to check that the service is available in your preferred region, run the following: New-AzKeyVault -VaultName \u0026#39;pkbtenant-keyvault\u0026#39; -ResourceGroupName \u0026#39;azure-cloud-shell\u0026#39; -Location \u0026#39;North Europe\u0026#39;  Then, provision a new KeyVault (if you have one already, then skip this step) and give yourself access to Secrets and Certificates. Set-AzKeyVaultAccessPolicy -VaultName \u0026#39;pkbtenant-keyvault\u0026#39; -UserPrincipalName \u0026#39;paul.bullock@tenant.co.uk\u0026#39; -PermissionsToCertificates All -PermissionsToSecrets All ![Azure Shell - Create KeyVault](images/New KeyVault - AzShell.png) Please refer to the documentation if you want to be more specific around the KeyVault \u0026ndash; Azure Portal PowerShell. We will be importing a certificate in a later section. Create Azure AD App with Register-PnPAzureApp There are a few options when setting up the authentication to connect with PnP PowerShell:\n Azure AD App \u0026ndash; using your app (recommended), which will use the APPLICATION permissions, meaning the connection will use the permissions the app does. PnP Management Shell \u0026ndash; the multi-tenant app PnP provides \u0026ndash; this uses DELEGATE permissions meaning the connection will need to log in as the user and will only have access to services THE user has access to. If you need clarification on the difference between the types of permissions, I highly recommend checking out an awesome community call demo from Philippe Signoret, Program Manager of the Microsoft Identity team: https://youtu.be/_BfI4L7j1Po So why are use an Azure AD app? Using the Azure Shell restricts some authentication options when connecting to services with PnP PowerShell, such as interactive login, because it cannot display a pop-up window. ![Azure Shell - doesn\u0026rsquo;t support interactive login](images/PnP PowerShell - cannot use Azure Shell.png)  The -PnPManagementShell parameter is an option; this uses the device login method BUT will require you to navigate to another site/page to authenticate, including going back to grab the code \u0026ndash; then enter your login credentials further steps if MFA is enabled. IMHO feels a bit cumbersome to do this each time I want to do a task in the Shell, especially on an iPad/phone.\nCreate an Azure AD App To set up the app quickly with PnP PowerShell, you need to use a Windows machine to run the cmdlet Register-PnPAzureApp which generates the certificate, creates the Azure AD app, sets API permissions, will pop up to consent to the app permissions. Note: you may have to install the PnP PowerShell locally if you do not already have it. To set up the app, run the following command using the PnP PowerShell cmdlet: $result = Register-PnPAzureADApp -ApplicationName \u0026#34;PnP PowerShell Azure Shell Access\u0026#34; -Tenant yourtenant.co.uk -OutPath .\\ -DeviceLogin -ValidYears 2 -CertificatePassword (ConvertTo-SecureString -String \u0026#34;yourpassword\u0026#34; -AsPlainText -Force) $result #output the result – Specifically grab the AzureAppId/ClientId – you will need this later ![PowerShell - Registering Azure App](images/Register App - Windows.png)\nDuring this operation, two windows will pop-up to authenticate with the device login method and consent to the app permissions. If you want to check the app in Azure AD, navigate to: https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps and find the app called PnP PowerShell Azure Shell Access Note: This app uses the minimum API permissions (APPLICATION) as the default; if you want to perform operations with groups or flow as an example, you will need to add these permissions to the app. ![Azure App - API permissions](images/Azure App Permissions - Application.png) For more details on generating the app, check out the authentication section of the documentation. Adding Certificate to KeyVault Now that we have the app setup, we need to upload the certificate to the KeyVault. Navigate to the KeyVault in the portal ![Azure KeyVault - Navigating to Certificates](images/Azure KeyVault - Certificates.png)\n Select Import Enter a name azureshell-pnpps-connection Select the generated certificate PnP PowerShell Azure Shell Access.pfx Enter the certificate password Select Create ![Azure Key Vault - Upload Certificate](images/KeyVault-Importing Certificate.png) This is ready to use in a later section.   Reducing the time to get going on new sessions When I start the Azure Shell, I want to minimize the number of lines, to connect to the services securely and get going quickly.\nParameter Splatting Parameter splatting is a method to pass a collection of parameters for a PowerShell command into a variable and apply this to the cmdlet you intend to run. Example: Get-NiceMessage -Param1 \u0026#34;good\u0026#34; -Param2 \u0026#34;morning\u0026#34; -Param3 \u0026#34;community\u0026#34; # Splatting alternative $MyParams = @{ Param1 = \u0026#34;good\u0026#34;, Param2 = \u0026#34;morning\u0026#34;, Param3 = \u0026#34;community\u0026#34; } Get-NiceMessage @MyParams  This will save time if you repeatedly apply the same parameters on the cmdlets, reducing the time to write the command and your scripts cleaner to read. To read more about this PowerShell feature, check out the documentation. PowerShell Profiles Interestingly, I did not know about this feature until the MOTD message appeared on the Azure Shell. I wanted to understand this further so dug deeper and I have managed to find a way to create a startup script that will make it easier to connect to Office 365. With profiles, we can setup a script to run when the Azure Shell is started, so this is an awesome opportunity to add all of the connection information when the Shell starts including retrieval, of the certificates from the KeyVault. To create a profile that is used across sessions but for your user account use: # Create Profile mkdir (Split-Path $profile.CurrentUserAllHosts) New-Item -ItemType File -Path $PROFILE.CurrentUserAllHosts -Force ![Azure Shell - Setup Profiles](images/Azure Shell - Setup Profile.png) Once created, you can open an editor in the path above to the new profile script location.\nThen using the following example, using a combination of parameter splatting and profiles, you can setup everything you need to connect to the service: # Connect to KeyVault Data try{ $vaultName = \u0026#34;pkbtenant-keyvault\u0026#34; # Replace with your KeyVault name $appName = \u0026#34;PnP PowerShell Azure Shell Access\u0026#34; $appId = (Get-AzADApplication -DisplayName $appName).ApplicationId $tenantId = (Get-AzContext).Tenant.Id $certName = \u0026#34;azureshell-pnpps-connection\u0026#34; $baseSite = \u0026#34;https://tenant.sharepoint.com\u0026#34; # Replace with your tenant $base64Cert = Get-AzKeyVaultSecret -VaultName $vaultName -Name $certName -AsPlainText # Use of parameter splatting $ConnectInfo = @{ ClientId = $appId CertificateBase64Encoded = $base64Cert Tenant = $tenantId } Write-Host \u0026#34;Ready to connect to M365/SharePoint\u0026#34; -ForegroundColor Green }catch{ Write-Host \u0026#34;Failed to get the KeyVault data\u0026#34; -ForegroundColor Yellow }  Editor \u0026ndash; Ctrl-S (Save) then Ctrl-Q (Quit) Restart Shell After setting up the profile, reboot your Shell and you should see a prompt to indicate the prerequisites are ready to use for a connection (green text). To learn more about profiles check out the documentation for profiles. Connecting to the service Once you have all these elements setup, you can connect with PnP PowerShell with one short line: Connect-PnPOnline @ConnectInfo https://tenant.sharepoint.com # -OR- Connect-PnPOnline @ConnectInfo $baseSite  ![Azure Shell - connecting with PnP PowerShell](images/Azure Shell - Connect.png)\nThe settings are persistent across sessions/devices (like an Azure app on iPad), so once setup, you can open Azure Shell and reconnect to the service and make the changes in the Shell quickly. Btw, at the beginning I mentioned about capturing the output to the text file, this is particularly useful if you are grabbing a lot of info in your session or need to show the changes you made, here is how to do it: Start-Transcript \u0026#34;log.txt\u0026#34; Get-PnPWeb Stop-Transcript  This will save the file to the current location in the Azure Shell. Use Export-File to download it, or the UI button.\nEnjoy!\n","image":"https://pnp.github.io/blog/post/getting-started-with-azure-shell-and-pnp-powershell-with/images/Azure%20Shell%20-%20First%20Welcome_hu3839e6cd2d2737d1c2ea9ea446d29ff6_19600_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/getting-started-with-azure-shell-and-pnp-powershell-with/","tags":["Azure","PnP PowerShell"],"title":"Getting Started with Azure Shell and PnP PowerShell with Certificates"},{"categories":["Community post"],"contents":"It is always interesting to hit the wall with limitations when you are working with Power Automate. Some limits are due to licensing but some are due to other good reasons. I was running a PoC where a person interacting with a Power Virtual Agent bot required to do actions on behalf of that person. And after digging some information out (Thank you @Tomasz for helping there! ) it was clear that I had reached the wall when I was trying to make my little bot to set up Out of Office for the interacting user. Using the Office 365 Set Automatic Replies action always works on the connection user only. And since you can not act on behalf of that user it required to go beyond the wall and say \u0026ldquo;there is no spoon\u0026rdquo;. And I found it there wasn\u0026rsquo;t a spoon- just the miracle world of Graph API.   From that phase I advanced to create\n Azure Logic Apps that uses **Graph API **to set the Out of Office / Automatic replies to a specific user. Setting up a Azure API Management service so that Azure Logic App can be called from the Cloud Flow running inside Power Virtual Agent \u0026ndash; and still keep on using standard licensing (no need to go to premium)  First it was necessary to create the** Azure App Registration** (applicationid, secret) with suitable set of API permissions. After that it was all about figuring out the Graph API call \u0026amp; JSON to set the Automatic Reply / Out of Office. Read the documentation (\u0026amp; about permissions) from Docs here.\nNext I built a Azure Logic Apps that uses HTTP Request trigger (get) to retrieve user email and number of away days in parameters.   This is the format to exclude parameters from the GET request. triggerOutputs()[\u0026lsquo;queries\u0026rsquo;][\u0026lsquo;FileID\u0026rsquo;]\nAfter those steps I have user email and number of days that needs to be set Out of Office. I returned the HTTP-request and prepared variables with Application ID, TenantID and App Secret information to be able to call Graph API with application permissions.   The key is of course setting the Out of Office information JSON.   The Graph API call URL and example JSON I used to test this are: https://graph.microsoft.com/v1.0/users/useremail/mailboxsettings  { \u0026#34;@odata.context\u0026#34;: \u0026#34;https://graph.microsoft.com/v1.0/$metadata#Me/mailboxSettings\u0026#34;, \u0026#34;automaticRepliesSetting\u0026#34;: { \u0026#34;externalAudience\u0026#34;: \u0026#34;all\u0026#34;, \u0026#34;externalReplyMessage\u0026#34;: \u0026#34;I am away from the office. \u0026#34;, \u0026#34;internalReplyMessage\u0026#34;: \u0026#34;I am away from the office. \u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;Scheduled\u0026#34;, \u0026#34;scheduledStartDateTime\u0026#34;: { \u0026#34;dateTime\u0026#34;: \u0026#34;2021-04-17T18:00:00.0000000\u0026#34;, \u0026#34;timeZone\u0026#34;: \u0026#34;UTC\u0026#34; }, \u0026#34;scheduledEndDateTime\u0026#34;: { \u0026#34;dateTime\u0026#34;: \u0026#34;2021-04-18T18:00:00.0000000\u0026#34;, \u0026#34;timeZone\u0026#34;: \u0026#34;UTC\u0026#34; } } }  Then it was just the case of patching the information   The next step was to create the Azure API Management Service and define the API call there. There are two ways to handle the information transportation: in the body (as JSON) or as parameters. I put the Username and Days in this Proof of Concept to parameters.   For how to create and set up Azure API Management you can find information in this URL. It is good to keep in mind that Azure API Management has a cost involved \u0026ndash; it is not a free one. I created the one with Developer (No SLA) tier to keep costs lower. And it still estimated to be over 40€ per month. For production use the price will be higher.\n\nAnother alternative would have been to put the \u0026ldquo;set these to Out of Office\u0026rdquo; information to a SharePoint List (for example) and use a Azure Logic Apps trigger to read that list and make those API Calls. That would have some delay, but since Out of Office is rarely requiring an instant response it would be a better one for the real world scenario in this case. However if you are already using Azure API management then using it for this as well is a good idea. But setting it up solely for a single purpose does not get a good ROI for most cases.\nAfter setting the API up into the Azure you can export it directly to the Dataverse for Teams environment \u0026ndash; so it is there for the bot to use without any Premium licensing.        When adding an action to your Cloud Flow in the Dataverse for Teams environment where your bot runs you can find the custom action in the menu.      Cool \u0026ndash; what about the test-run side?\nAnd when running this one from the PVA of the acting user I can see the results via Teams easily      There are of course other steps as well in that PoC conversation \u0026amp; flow but setting up the Out of Office proved to require a bit more steps than I originally thought. I have to say that this was also a great learning experience about updating user mailbox settings via Graph API and as well about using Azure API management to create a custom connector to Power Automate. With Azure API Management \u0026amp; Graph API you can quite easily go beyond the walls what you have with Dataverse for Teams bots and applications. This article is a repost of my blog post in my own blog at MyTeamsDay.Com. ","image":"https://pnp.github.io/blog/post/getting-started-with-azure-shell-and-pnp-powershell-with/images/Azure%20Shell%20-%20First%20Welcome_hu3839e6cd2d2737d1c2ea9ea446d29ff6_19600_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/power-virtual-agents-bot-setting-the-out-of-office/","tags":["Power Virtual Agents"],"title":"Power Virtual Agents bot setting the Out Of Office"},{"categories":["CLI for Microsoft 365"],"contents":"So, recognition is important, and it is important to keep in mind that not everything should be automated. But a bit of gamification is a nice way to show people how they interact with different services. When considering this approach, the first step is to determine what we require. What data is available? Office 365 provides a whole lot of data you can use. You can choose to get all actions yourself or using existing reports that are available. Most of those reports can also be retrieved by the CLI for Microsoft 365. You can use the Microsoft Docs to read what activity reports are available. Querying these reports using the CLI is done using a pattern:  m365 to execute the cli service to pass the get the report for report to identify the group  report type to identify what type of data is returned by the cli.   You can query services like SharePoint using *spo *or *teams. *And there are different report types available depending on the type of data you require. m365 spo report activityuserdetail m365 teams report activeuserdetail  The activityuserdetail provides insights into what each user is doing. The activeuserdetail returns the amount of active users. For insights into who is doing what the activityuserdetail provides the most value. Using additional parameters you can specify the timeframe to get reporting for. You can read all about all options on the CLI for Microsoft 365 documentation. In our case we want to post the weekly progress and thus retrieve a weeks worth of data. And since we are going to work with the data the output is going to be JSON. Resulting in the following snippet: m365 teams report useractivityuserdetail --period D7 --output json Working with the result set The data returned contains a bit of information we do not require and is not quite the format that we need to do reporting on. To remediate that we will use JMESPath to sort and filter the returned data. This ensures that we get only the information we need. The data returned is ordered by the user display name, so the first step is to order by a metric we care about. The data returned contains four metrics we can use.\n Team Chat Message Count Private Chat message Count Call Count Meeting Count  For this demo we will use the Team Chat Message count, but you can pick any option you like. Using JMESPath we can use the *sort_by() *functionality. Add a reverse() to make sure it is sorted with the highest number on top. And since we only care about the User itself and do not need other information we can tell JMESPath to only return the User Principal Name. We can even specify that we care only about the top 3 users. So the full query would look as follows. m365 teams report useractivityuserdetail --period D7 --output json --query \u0026#39;reverse(sort_by(@, \u0026amp;\\\u0026#34;Team Chat Message Count\\\u0026#34;)) | [0:3].\\\u0026#34;User Principal Name\\\u0026#34;\u0026#39;  Given that there are other services as well we might use different options to order by for different services. For SharePoint you could use the Viewed or Edited File Count, Visited Page Count, the Shared Internally File Count or the Shared Externally File count. And services like Yammer offer a Posted Count, Read Count and Liked *Count. * m365 spo report activityuserdetail --period D7 --output json --query \u0026#39;reverse(sort_by(@, \u0026amp;\\\u0026#34;Viewed Or Edited File Count\\\u0026#34;)) | [0:3].\\\u0026#34;User Principal Name\\\u0026#34;\u0026#39; m365 yammer report activityuserdetail --period D7 --output json --query \u0026#39;reverse(sort_by(@, \u0026amp;\\\u0026#34;Posted Count\\\u0026#34;)) | [0:3].\\\u0026#34;User Principal Name\\\u0026#34;\u0026#39;  Presenting your results With the commands above we can retrieve the information we need to identify the social champions of last week. The next challenge is to present this information. On the techcommunity there is a great walkthrough on How to send Adaptive Cards with CLI Microsoft 365. It explains into detail how to create a new webhook in teams and use the CLI to send information to this webhook. If you follow that walkthrough and perhaps set a fancy logo you will end up with the URL you need and a welcome post that looks something like the following:    Sharing your data Once the webhook is set up you can use the URL and post results to it. Since we already have the data present we can use PowerShell to set the JSON of the card, add our users to it and post the card to Teams. Make sure to add some emojis to the Adaptive card to make it look pretty 🦾 or tweak it to your own liking. $m365Status = m365 status if ($m365Status -eq \u0026#34;Logged Out\u0026#34;) { # Connection to Microsoft 365 m365 login } $webhookUrl = \u0026#34;\u0026lt;PUTYOURURLHERE\u0026gt;\u0026#34; # Send top 3 for SharePoint based on file actions. $activityUsers = m365 spo report activityuserdetail --period D7 --output json --query \u0026#39;reverse(sort_by(@, \u0026amp;\u0026#34;Viewed Or Edited File Count\u0026#34;)) | [0:3].\u0026#34;User Principal Name\u0026#34;\u0026#39; | ConvertFrom-Json $title = \u0026#34; SharePoint Weekly Social Champions \u0026#34; $card = \u0026#39;{ \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.2\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;\u0026#39;+$($title)+\u0026#39;\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Medium\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;Attention\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;Week \u0026#39;+$(get-date -UFormat %V)+\u0026#39;\u0026#34;, \u0026#34;fontType\u0026#34;: \u0026#34;Default\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Lighter\u0026#34;, \u0026#34;isSubtle\u0026#34;: true }, { \u0026#34;type\u0026#34;: \u0026#34;FactSet\u0026#34;, \u0026#34;facts\u0026#34;: [ { \u0026#34;title\u0026#34;: \u0026#34;First place\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;\u0026#39;+$($activityUsers[0])+\u0026#39;\u0026#34; }, { \u0026#34;title\u0026#34;: \u0026#34;Second place\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;\u0026#39;+$($activityUsers[1])+\u0026#39;\u0026#34; }, { \u0026#34;title\u0026#34;: \u0026#34;Third place\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;\u0026#39;+$($activityUsers[2])+\u0026#39;\u0026#34; } ] } ] }\u0026#39; m365 adaptivecard send --url $webhookUrl --card $card  Executed the result will look as follows:   You can find this sample, and many more samples at the CLI for Microsoft Sample script repository! If you want additional reports the script would look almost the same. The main difference is the service to call, and the query to sort the results on. You can use the same approach to see who is active on Teams or Yammer. Or who is working a lot on OneDrive or Exchange if you like.  # Send top 3 for Teams based on chat messages $activityUsers = m365 teams report useractivityuserdetail --period D7 --output json --query \u0026#39;reverse(sort_by(@, \u0026amp;\u0026#34;Team Chat Message Count\u0026#34;)) | [0:3].\u0026#34;User Principal Name\u0026#34;\u0026#39; | ConvertFrom-Json $title = \u0026#34; Teams Weekly Social Champions \u0026#34; $card = \u0026#39;{ \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.2\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;\u0026#39;+$($title)+\u0026#39;\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Medium\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;Attention\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;Week \u0026#39;+$(get-date -UFormat %V)+\u0026#39;\u0026#34;, \u0026#34;fontType\u0026#34;: \u0026#34;Default\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Lighter\u0026#34;, \u0026#34;isSubtle\u0026#34;: true }, { \u0026#34;type\u0026#34;: \u0026#34;FactSet\u0026#34;, \u0026#34;facts\u0026#34;: [ { \u0026#34;title\u0026#34;: \u0026#34;First place\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;\u0026#39;+$($activityUsers[0])+\u0026#39;\u0026#34; }, { \u0026#34;title\u0026#34;: \u0026#34;Second place\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;\u0026#39;+$($activityUsers[1])+\u0026#39;\u0026#34; }, { \u0026#34;title\u0026#34;: \u0026#34;Third place\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;\u0026#39;+$($activityUsers[2])+\u0026#39;\u0026#34; } ] } ] }\u0026#39; m365 adaptivecard send --url $webhookUrl --card $card # Send top 3 for Yammer based on posts $activityUsers = m365 yammer report activityuserdetail --period D7 --output json --query \u0026#39;reverse(sort_by(@, \u0026amp;\u0026#34;Posted Count\u0026#34;)) | [0:3].\u0026#34;User Principal Name\u0026#34;\u0026#39; | ConvertFrom-Json $title = \u0026#34; Yammer Weekly Social Champions \u0026#34; $card = \u0026#39;{ \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.2\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;\u0026#39;+$($title)+\u0026#39;\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Medium\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;Attention\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;Week \u0026#39;+$(get-date -UFormat %V)+\u0026#39;\u0026#34;, \u0026#34;fontType\u0026#34;: \u0026#34;Default\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Lighter\u0026#34;, \u0026#34;isSubtle\u0026#34;: true }, { \u0026#34;type\u0026#34;: \u0026#34;FactSet\u0026#34;, \u0026#34;facts\u0026#34;: [ { \u0026#34;title\u0026#34;: \u0026#34;First place\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;\u0026#39;+$($activityUsers[0])+\u0026#39;\u0026#34; }, { \u0026#34;title\u0026#34;: \u0026#34;Second place\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;\u0026#39;+$($activityUsers[1])+\u0026#39;\u0026#34; }, { \u0026#34;title\u0026#34;: \u0026#34;Third place\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;\u0026#39;+$($activityUsers[2])+\u0026#39;\u0026#34; } ] } ] }\u0026#39; m365 adaptivecard send --url $webhookUrl --card $card  What\u0026rsquo;s next With that I hope that this blog provided some insights in how you can recognize your users based on their activity. Keep in mind that just automating something is not the only way to recognize contributions, but it is a fun way to see who is doing what. It might even be a great conversation starter. Or you could use the same approach to identify who is missing out and instead of sharing that publicly let a Teams Champion know who might need additional assistance. If you have any questions regarding the CLI for Microsoft or have feedback let us know!\nWe are always looking for contributions or new sample script ideas! ","image":"https://pnp.github.io/blog/post/use-cli-for-microsoft-365-to-recognize-contributions/images/2021-07-29_17-51-58_hue7ef3e39e112817d9aa0a2bfefa4a655_25470_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/use-cli-for-microsoft-365-to-recognize-contributions/","tags":["CLI for Microsoft 365"],"title":"Use CLI for Microsoft 365 to recognize contributions"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Recording of the Microsoft 365 \u0026ndash; General M365 development Special Interest Group (SIG) community call from May 13, 2021.\nCall summary Latest news from Microsoft 365 engineering and updates on open-source projects: PnP .NET libraries, PnP PowerShell, modernization tooling, on yo Teams, on Microsoft Graph Toolkit, and on Microsoft Teams Samples. Check out the new Microsoft 365 Extensibility look book gallery, visit the Microsoft Teams samples gallery to get started with Microsoft Teams development, and register now for May trainings on Sharing-is-caring. Open-source project activity is focused on prepping for May releases in Microsoft Build time frame. Open-source project status:\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.4.0 Bug fixes, Prepping for v1.5.0 (May) PnP .NET Libraries - PnP Core SDK v1.1.0 Bug fixes, Prepping for v1.2.0 (May) PnP PowerShell v1.5.0 (just added Cmdlets for Viva Connections and Syntex) Prepping for v1.6.0 (May) Yo teams - generator-teams v3.0.3 GA, v3.1.0 Preview Preview with Viva Connections support Yo teams - yoteams-build-core v1.1.0 Yo teams - msteams-react-base-component v3.1.0 Microsoft Graph Toolkit (MGT) v2.1.0 GA, v2.2.0 Preview v2.2.0 planned Build release\n Additionally, one new Teams sample delivered. The host of this call was David Warner II (Catapult Systems) | @DavidWarnerII. Q\u0026amp;A takes place in chat throughout the call.\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; May 24th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; May PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; June  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; May 20th AMA (Ask Me Anything) \u0026ndash; Microsoft Graph \u0026amp; MGT \u0026ndash; June AMA (Ask Me Anything) \u0026ndash; Microsoft Teams Dev - June First Time Presenter \u0026ndash; May 25th More than Code with VSCode \u0026ndash; May 27th  Maturity Model Practitioners \u0026ndash; May 18th PnP Office Hours \u0026ndash; 1:1 session - Register    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Kudos App (Teams Activity Feed API) - Sébastien Levert (Microsoft) | sebastienlevert\n   Great to see all the faces in the community. Hopefully soon we will get to see each other in person. Demos Demos delivered in this session\n  Inspire, inform and prepare employees transition to the new hybrid Workplace transformation site - learn about the customizable SharePoint Hybrid Workplace site template (in look book) and new end user training (available on support.microsoft.com and in Microsoft 365 Learning Pathways playlists) to help customers and colleagues' transition to a new way of working. Article insights based on customer conversations and research by Microsoft. Training categories (playlists) \u0026ndash; meetings \u0026amp; collaboration, wellness and productivity, security \u0026amp; data protection.   Querying and Paging data with PnP Core SDK \u0026ndash; after downloading the PnPCoreAuth package, installing and configuring the needed services, obtain the PnPContext from PnPContextFactory and start using the library. There are multiple options for querying data. PnP Core SDK Query Model options \u0026ndash; Load*, Get*, LINQ, and Nested/hierarchical queries. PnP Core SDK Paging Model options - Implicit asynchronous paging*, Full load of data/synchronous implicit paging, and Manual paging with Take/Skip. *Preferred.   Advanced tricks for form formatting and customization \u0026ndash; some items in a list should not show up on a form. You can delete, hide or conditionally show values (based on entries in other fields) on a form. Column and Form formatting are vastly different. Learn ways to detect what values are in the list vs what values are on the form and also how to create read only sections on a form.\n   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  PnP .NET library updates - Paolo Pialorsi (PiaSys.com) @paolopia - 4:45\n  PnP PowerShell updates - Paolo Pialorsi (PiaSys.com) @paolopia - 6:35\n  yo Teams updates - Paolo Pialorsi (PiaSys.com) @paolopia - 7:24\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) | beth-panx - 8:34\n  Microsoft Teams Samples - Bob German (Microsoft) @Bob1German - 9:46\n  Demo: Inspire, inform and prepare employees transition to the new hybrid Workplace transformation site \u0026ndash; Holland Kaviani (Microsoft) \u0026amp; Matt Wolodarsky (Microsoft) | @mwolodarsky - 12:34\n  Demo: Querying and Paging data with PnP Core SDK \u0026ndash; Paolo Pialorsi (PiaSys) | @PaoloPia - 25:21\n  Demo: Advanced tricks for form formatting and customization \u0026ndash; Chris Kent (DMI) | @theChrisKent [- 43:22\n  Resources Additional resources around the covered topics and links from the slides.\n  Slides used in this ​community call\n  Blog post - Help employees transition to hybrid work using a new SharePoint site template and end-user training   Look book (website template) - WORKPLACE TRANSFORMATION SITE   Article - The future of work\u0026mdash;the good, the challenging \u0026amp; the unknown   Support site \u0026ndash; Hybrid workplace guides   Documentation - PnP Core SDK \u0026ndash; Get Data   Documentation - PnP Core SDK \u0026ndash; Using paging   SDK - PnP Core SDK   Code sample - PnP Core SDK Query Model sample   [PnP Weekly \u0026ndash; Episode 126] with MVP [guest ]D\u0026rsquo;arce Hess[ (TrnDigital) | @ DarceHess| ]video[ | ]podcast\n  Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  General resources  Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Microsoft Teams monthly call \u0026ndash; May 18th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall Power Apps monthly call \u0026ndash; May 19th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; May 20th at 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft Identity Platform \u0026ndash; May 20th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar  M365 General Dev call \u0026ndash; May 27th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Graph call \u0026ndash; June 1st at 8:00 am PDT | https://aka.ms/microsoftgraphcall SharePoint monthly call \u0026ndash; June 8th at 8:00am PDT | https://aka.ms/sp-call Office add-in monthly call \u0026ndash; June 9th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; June 10th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;   Microsoft 365 PnP team, Microsoft - 14th of May 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-13th-of-may/images/recording-may-13th-call_hu83d294596cab107e9a3a2fb36d8e73f5_277418_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-13th-of-may/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 13th of May, 2021"},{"categories":["Community post"],"contents":"I\u0026rsquo;ve started using the new Microsoft Teams toolkit, which is a Visual Studio Code extension and generator for Teams applications. One thing I noticed is a little challenge when creating tabs, and that\u0026rsquo;s due to the requirement to use SSL. The documentation is fine and explains how to trust your local project, but I found it a little painful since the certificates only last 1 month and there\u0026rsquo;s a different one for each project, so I need repeat the process frequently. Your teammates will need to do that as well.\n\n  [Here is an alternative approach in which you create your own certificate authority and build certs from that so you can install just one root certificate across all your projects! Each teammate can have their own certs, so you can collaborate as much as you wish and nobody has to go installing certs.]\n NOTE: Did you know that the Teams Toolkit uses Create React App (CRA) for tabs? Create React App is a toolchain from Facebook (who created React in the first place) it\u0026rsquo;s very popular and well supported! If you need help, search on \u0026ldquo;Create React App\u0026rdquo; and you can find a plethora of helpful articles; this one helped me figure this out!\n Step 1: Create and trust a certificate authority (CA) This step only needs to be done once for as many projects as you wish. It assumes you already have Node.js installed, as required by the Teams Toolkit. a. Create a safe/private folder somewhere and go there in your favorite command-line tool, and run these commands:\nnpm install -g mkcert mkcert create-ca --organization \u0026#34;MyOrg\u0026#34; --validity 3650 mkcert create-cert --ca-key \u0026#34;ca.key\u0026#34; --ca-cert \u0026#34;ca.crt\u0026#34; --validity 3650  NOTE: 3650 is the number of days your certs will be valid; feel free to change it. You can use --help on mkcert to reveal other options, such as setting an organization name and location (the default org is \u0026ldquo;Test CA\u0026rdquo;) and customizing the domain names for your certificate (the default is \u0026ldquo;localhost,127.0.0.1\u0026rdquo;).\n This will create a new Certificate Authority and a certificate that was issued from it. You should see 4 files:\nFILE DESCRIPTION\n ca.crt Certificate for your new CA ca.key Private key for your new CA cert.crt Certificate for use in projects cert.key Private key for use in projects\nb. Now you need to trust the certificate for your new CA; by doing that any cert you create will be trusted with no additional action on your part.\nOn Windows   Double select the ca.crt file and select \u0026ldquo;Install Certificate\u0026rdquo;.     Choose Local Machine and select next.      Select \u0026ldquo;Place all certificates in the following store\u0026rdquo; and then select the \u0026ldquo;Browse\u0026rdquo; button. Choose \u0026ldquo;Trusted Root Certification Authorities\u0026rdquo; select \u0026ldquo;OK\u0026rdquo; to close the dialog box, and then click \u0026ldquo;Next\u0026rdquo;.     Restart all instances of your browser to force it to re-read its trusted roots. If in doubt, reboot your computer.\n  On Mac  Double select the ca.crt file, which should be found under /Users/[your-name]/. It will launch Keychain Access app. Enter your password or use Touch ID when prompted.    The new certificate (in this case, \u0026ldquo;MyOrg\u0026rdquo;) should be added. Double-select it.    In a new window, expand the Trust section of the certificate details. Select \u0026ldquo;Always Trust\u0026rdquo; for every option.    Close the window. Enter your password or use Touch ID again if you are asked. Now the certificate is trusted.    Restart all instances of your browser to force it to re-read its trusted roots. If in doubt, reboot your computer.  On Linux There are more steps on Linux as most browsers don\u0026rsquo;t use the operating system\u0026rsquo;s certificate store, and a tool called certutil is needed to modify the browsers\u0026rsquo; cert?.db files. This article explains how to install your new root certificate on Linux.\nStep 2 \u0026ndash; Add the certs to your project This is what you need to do for each project.\na. Create a new folder in your project folder (the same level as the package.json file) called .cert. Copy the cert.crt and cert.key files into this folder\nb. Modify your .env file to tell the local web server to use your cert:\nHTTPS=true{.plain .plain}\nSSL_CRT_FILE=./.cert/cert.crt{.plain .plain}\nSSL_KEY_FILE=./.cert/cert.key{.plain .plain}\nc. Prevent saving the certs to your git repository by adding a line to the .gitignore file.\n.cert{.plain .plain}\nAzure Active Directory SSO Tabs Tabs that implement Azure Active Directory Single Sign-On need to implement more than just a web page; they need to implement a web service to exchange the SSO token for an access token that the app can use to call downstream services such as the Microsoft Graph. This is explained in this blog article, or this one, more clearly than in the documentation.\nWhen yo teams generates an SSO tab, this web service is hosted using the same web server as the page itself.\nWhen the Teams Toolkit generates one, however, it creates a separate web service for the web service so there really are two endpoints that need to be SSL enabled. The web service is in a folder called api-server. To enable SSL here, follow these steps:\n Add these lines to the api-server\\.env file.  HTTPS=trueSSL_CRT_FILE=../.cert/cert.crtSSL_KEY_FILE=../.cert/cert.keyCORS_ORIGIN=https://devappsforteams.local:3000 2. Immediately above the line app.get('/getGraphAccessToken') in server.ts or server.js, add these lines to allow the cross-origin call from the web page (port 3000) to the web service (port 5000):\nconst cors = require('cors');app.use(cors({ origin: process.env.CORS_ORIGIN})); 3. Near the bottom of the same file, replace the line\napp.listen(port);\nwith this code:\nconst fs = require(\u0026#39;fs\u0026#39;);const https = require(\u0026#39;https\u0026#39;);var privateKey = fs.readFileSync(process.env.SSL_KEY_FILE );var certificate = fs.readFileSync(process.env.SSL_CRT_FILE);https.createServer({ key: privateKey, cert: certificate}, app).listen(port); Working in a team Each team member needs to do Step 1 on their computer just once. When a developer starts working on a project they can simply copy their .cert folder into their project and go to work. \\\nMany thanks to my colleague Tomomi Imura for documenting the Mac instructions and providing screen shots.\nDo you have ideas on how to do this better, especially in a project team? Please chime in using the comments; thanks!\n","image":"https://pnp.github.io/blog/post/setting-up-https-for-teams-tabs-projects-without-ngrok/images/localhostcert_hu11b0a5d06f654541529f6eb27abc1669_14893_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/setting-up-https-for-teams-tabs-projects-without-ngrok/","tags":["Microsoft Teams"],"title":"Setting up https for Teams Tabs projects - without ngrok"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"The SharePoint community monthly call is our general monthly review of the latest SharePoint news (news, tools, extensions, features, capabilities, content and training), engineering priorities and community recognition for Developers, IT Pros and Makers. This monthly community call happens on the second Tuesday of each month. You can download recurrent invite from https://aka.ms/sp-call.\nCall summary SPFx v1.12.1 with Node v14 and Gulp4 support is generally available. Don\u0026rsquo;t miss the SharePoint sample gallery. Preview the new Microsoft 365 Extensibility look book gallery. Visit the new Microsoft 365 PnP Community hub at Microsoft Tech Communities! Sign up and attend one of a growing list of Sharing is Caring events. The Microsoft 365 Update - Community (PnP) | May 2021 is now available. In this call, quickly addressed developer and non-developer entries in UserVoice. We are in the process of moving from UserVoice to a 1st party solution for customer feedback/ feature requests. A huge thank you to the record number of contributors and organizations actively participating in this PnP Community during April. Month over month, you continue to amaze. The host of this call was Vesa Juvonen (Microsoft) @vesajuvonen. Q\u0026amp;A took place in the chat throughout the call. Featured Topic:\nSharePoint Syntex: Product overview and latest feature updates \u0026ndash; SharePoint Syntex - a new add on that builds on the content services capabilities already provided in SharePoint with an infusion of AI to automate and augment the classification of content \u0026ndash; understanding, processing, compliance. Demos on building and publishing a document understanding model using UI and on downloading a sample model, publishing and processing content using PowerShell Commandlets or APIs\nActions  Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; May 24th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; May PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; May 13th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; May 20th AMA (Ask Me Anything) \u0026ndash; Microsoft Graph \u0026amp; MGT - June First Time Presenter \u0026ndash; May 25th More than Code with VSCode \u0026ndash; May 27th  Maturity Model Practitioners \u0026ndash; May 18th PnP Office Hours \u0026ndash; 1:1 session - Register   Download the recurrent invite for this call \u0026ndash; https://aka.ms/sp-call. You can check the latest updates in the monthly summary and at aka.ms/spdev-blog.  This call was delivered on Tuesday, May 11, 2021. The call agenda is reflected below with direct links to specific sections. You can jump directly to a specific topic by clicking on the topic\u0026rsquo;s timestamp which will redirect your browser to that topic in the recording published on the Microsoft 365 Community YouTube Channel.\nCall agenda  UserVoice status for non-dev focused SharePoint entries \u0026ndash; 8:04 UserVoice status for dev focused SharePoint Framework entries \u0026ndash; 9:04  SharePoint community update with latest news and roadmap \u0026ndash; 10:35 Community contributors and companies which have been involved in the past month \u0026ndash; 11:56  Topic: SharePoint Syntex: Product overview and latest feature updates - Sean Squires (Microsoft) | @iamseansquires \u0026ndash; 15:28  **Demo: ** How to build and publish a document understanding model - James Eccles (Microsoft) | @jimdeccles \u0026ndash; 24:52 Demo: SharePoint Syntex integration and automation options - Bert Jansen (Microsoft) | @o365bert \u0026ndash; 39:36 The full recording of this session is available from Microsoft 365 \u0026amp; SharePoint Community YouTube channel - http://aka.ms/m365pnp-videos.   Presentation slides used in this community call are found at OneDrive.  Resources Additional resources on covered topics and discussions.\n  Web - SharePoint Syntex | aka.ms/SharePointSyntex\n  Blog \u0026ndash; Syntex blog | aka.ms/SharePointSyntex/blog\n  (Soon) Community \u0026ndash; Yammer Syntex Community | aka.ms/SharePointSyntex/community\n  Roadmap \u0026ndash; Syntex Roadmap | aka.ms/SharePointSyntex/roadmap\n  Documentation - Introduction to Microsoft SharePoint Syntex | aka.ms/SharePointSyntex/documentation\n  Documentation \u0026ndash; Scenario: Manage contracts using a Microsoft 365 solution   SDK - Working with SharePoint Syntex   (Soon) Samples - GitHub: https://github.com/pnp/syntex-samples\n  Learning \u0026ndash; Virtual Hub   PnP Weekly \u0026ndash; Episode 126 with MVP guest D\u0026rsquo;arce Hess (TrnDigital) | @ DarceHess| video | podcast\n  Microsoft 365 PnP Community hub | aka.ms/m365pnp/community   Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft 365 Developer Podcast | m365devpodcast.com\n  SharePoint sample gallery | aka.ms/spfx-webparts\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  Viva Connections https://aka.ms/VivaConnections   Additional resources  PnP Weekly - Videos PnP Weekly - Podcasts M365 Community Documentation - (non-dev) SharePoint Documentation and Guidance - (technical) SharePoint Framework v1.11 SharePoint Framework v1.11 release notes Exploring how to get started on open-source and community work? SharePoint Starter Kit Recurrent invite to SharePoint Development monthly calls - http://aka.ms/spdev-call SharePoint Developer documentation - http://aka.ms/spdev-docs SharePoint Development Issues - http://aka.ms/spdev-issues SharePoint GitHub organization - http://github.com/SharePoint SharePoint Development UserVoice - new feature requests - http://aka.ms/spdev-uservoice  Upcoming Calls | Recurrent Invites  Office add-in monthly call \u0026ndash; May 12th at 8:00 am PDT | https://aka.ms/officeaddinscall M365 General Dev call \u0026ndash; May 13th at 7:00 am PDT | https://aka.ms/m365-dev-sig Adaptive Cards monthly call \u0026ndash; May 13th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall Microsoft Teams monthly call \u0026ndash; May 18th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall Power Apps monthly call \u0026ndash; May 19th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; May 20th at 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft Identity Platform \u0026ndash; May 20th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar  Microsoft Graph call \u0026ndash; June 1st at 8:00 am PDT | https://aka.ms/microsoftgraphcall SharePoint monthly call \u0026ndash; June 8th at 8:00am PDT | https://aka.ms/sp-call \u0026quot;Too many links, can\u0026rsquo;t remember\u0026quot; - not a problem... just one URL is enough for all Microsoft 365 community topics - http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;   SharePoint Team, Microsoft - 12th of May 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-community-call-may-11th-2021/images/210511-together-mode_hu2df74b05bcda1d37317f6da19a1d47e9_7901567_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-community-call-may-11th-2021/","tags":[],"title":"SharePoint community call - May 11th, 2021"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Rhode Island, US-based, MVP, professional archer, blogger and presenter specializing in UI/UX, information architecture and user adoption at TrnDigital, D\u0026rsquo;arce Hess | @ DarceHess. Topics discussed in this session include: The path to IT and on becoming an MVP, reflections on UX/UI changes over the years and designing custom experiences that addresses business processes. In post pandemic times, organizations will be circling back to optimize Microsoft Teams experiences while vendors will continue efforts to land the right extensibility stories. Microsoft Viva \u0026ndash; with great power comes great responsibility and ideas about prepping for Viva. Finally, thoughts on women in IT and on using what we learn in school in the field. Microsoft and the Community delivered 18 articles in this last week. This session was recorded on Monday, May 10, 2021. Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis episode was recorded on Monday, May 10, 2021.\n Video at Microsoft 365 Community YouTube channel    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nEvents  May 25-27, 2021- Microsoft Build 2021 August 9-11, 2021 - North American Collaboration Summit  Register with coupon code \u0026ldquo;PnP\u0026rdquo; for 25% off from the prize at https://nacs.ticketspice.com/nacs2021    Microsoft articles  Use SharePoint\u0026rsquo;s new site templates today! - Nicole Woon (Microsoft) | @NovelNicole and Holland Kaviani (Microsoft) New ways to use Microsoft Whiteboard for Education - Ian Mikutel (Microsoft) | @ianmikutel Understanding the Office Add-ins runtime - Microsoft Application permissions support for assignments API in Microsoft Graph now available - Microsoft SharePoint Syntex Updates - April 2021 - Chris McNulty (Microsoft) | @cmcnulty2000  Community articles  SharePoint App Catalog Development Tips - Julie Turner (Sympraxis Consulting) | @jfj1997 Upgrade your SharePoint Framework (SPFx) projects to v1.12.1 with CLI for Microsoft 365 - Yves Habersaat (Sword Group) | @yhabersaat Adding custom formatting to all list views - Don Kirkham (GM Financial) | @DonKirkham Get Started with the New SharePoint App Bar - Matt Jimison (DMI) | @mjimison How to update an AdaptiveCard with a Teams Messaging Extension - Markus Möller (Avanade) | @Moeller2_0  React Groups and Teams - Alison Collins  spfx-fast-serve 2.0: new architecture, better extensibility, support of the latest SPFx - Sergei Sergeev (Mastaq) | @sergeev_srg Restrict SharePoint list item attachments by file type using a custom form - Michel Mendes (Storm Technology) | @michelcarlo Organization Chart web part - João Mendes (Storm Technology) | joaojmendes Episode #153​ - Batching with Microsoft Graph SDK for .NET - Paolo Pialorsi (PiaSys) | @PaoloPia SharePoint Framework What\u0026rsquo;s New 1.12.1 [Teams - Web Part APIs] - Giuliano De Luca{.yt-simple-endpoint .style-scope .yt-formatted-string} | @delucagiulian Save Microsoft Forms Attachments to SharePoint with Power Automate - April Dunnam (Microsoft) | @aprildunnam Access files offline in Teams mobile - Daniel Glenn (InfoWorks Inc) | @DanielGlenn \u0026amp; Darrel Webster (WM Reply) | @DarrellaaS  Additional resources  Power Platform Sample Gallery - for finding easily samples from the GitHub - contributions from the community are welcome! PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-126-d-arce-hess/images/Thumb-Ep126_huaaa8cfac99c2620244f449ceff2d2a2f_568612_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-126-d-arce-hess/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 126 - D'arce Hess"},{"categories":["Microsoft 365 Platform Community update"],"contents":"Microsoft 365 Patterns and Practices (PnP) Community April 2021 update is out with a summary of the latest guidance, samples, and solutions from Microsoft or from the community for the community. This article is a summary of all the different areas and topics around the community work we do around Microsoft 365 ecosystem during the past month. Thank you for being part of this success. Sharing is caring!\nWhat is Microsoft 365 Community (PnP) Microsoft 365 PnP is a nick-name for Microsoft 365 platform community activities coordinated by numerous teams inside of the Microsoft 365 engineering organizations. PnP is a community-driven open source initiative where Microsoft and external community members are sharing their learning\u0026rsquo;s around implementation practices for Microsoft 365. Topics vary from Microsoft Viva, Microsoft Graph, Microsoft Teams, OneDrive and SharePoint. Active development and contributions happen in GitHub by providing contributions to the samples, reusable components, and documentation for different areas. PnP is owned and coordinated by Microsoft engineering, but this is work done by the community for the community.\n See more details from New Microsoft 365 Patterns and Practices (PnP) team model with new community leads The initiative is facilitated by Microsoft, but we have multiple community members as part of the PnP team (see team details in end of the article) and we are always looking to extend the PnP team with more community members. Notice that since this is open source community initiative, so there\u0026rsquo;s no SLAs for the support for the samples provided through GitHub. Obviously, all officially released components and libraries are under official support from Microsoft. Some key statistics around Microsoft 365 PnP initiative from April 2021: Unique visitors during the past 2 weeks in PnP, OneDrive, Microsoft-Search, OfficeDev and SharePoint GitHub organization repositories - 63,769 Overall unique contributors in the PnP, OneDrive, Microsoft-Search, OfficeDev and SharePoint GitHub organizations - 1,824 Microsoft 365 Community (PnP) YouTube channel had 101,785 views with 6,332 hours of watch time and 22,304 subscribers Microsoft 365 Developer YouTube channel had 44,064 views with 3,297 hours of watch time and 13,633 subscribers Most viewed videos in the Microsoft 365 Community (PnP) YouTube channel during April 2021:   Getting started on deploying Viva Connections for Microsoft Teams desktop | 10,040 Microsoft Teams community call - April 2021 | 6,917 Building a beautifully designed Intranet with SharePoint - latest design and branding capabilities | Cathy Dew (Microsoft) \u0026amp; Katie Swanson (Microsoft) | 3,235 Getting started with Site Designs in SharePoint Online - Laura Kokkarinen (Sulava) | 3,085 Working with Microsoft Lists (webinar) - Harini Saladi, Miceile Barrett, Chakkaradeep Chandran and Mark Kashman | 2,930 Your intranet is now in Microsoft Teams with Microsoft Viva Connections | 2,195 Introducing: New Employee Onboarding - a Microsoft Teams app template | Nidhi Sharma (Microsoft) | 2,109 Architecting Your Intranet | Melissa Torres (Microsoft) | 2,104 SharePoint Framework Tutorial 1 - HelloWorld WebPart | 1,856 Microsoft Teams Meeting Questionnaire App with SharePoint Framework | Nanddeep Nachan | 1,717  Most viewed videos in the Microsoft 365 Developer YouTube channel during April 2021:\n Authenticate and connect with Microsoft Graph - June 2019 | 1,316 Build Outlook Add-ins that integrate your solution seamlessly into your users\u0026rsquo; Outlook experience​ | Juan Balmori, Hitesh Manwar - 1,197 An introduction to Microsoft Graph for developers - Part I - Getting started - October 2019 | 1,175 Demo: Getting started with Power Apps Portals | Brian Knight (Pragmatic Works) | 929 Getting Started with Microsoft Graph and Application Registration | 926 Build and Office add-in using modern JavaScript tools and technologies | 839 Getting Started with Microsoft Graph | 817 Create interactive conversational bots for Microsoft Teams | 803 Accessing Files with Microsoft Graph | 754 Develop multi-tenant applications with Microsoft Identity Platform - April 2020 | 725 Main resources around Microsoft 365 Community:   Microsoft 365 Community - http://aka.ms/m365pnp - One location for all the resources and news around PnP Microsoft 365 community blog - http://aka.ms/m365pnp/community/blog Microsoft 365 development blog - http://aka.ms/m365pnp-blog Microsoft 365 Community Channel on YouTube - http://aka.ms/m365pnp-videos Microsoft 365 Developer YouTube channel - https://aka.ms/M365DevYouTube  Latest Dev Blog posts Here are the latest blog posts and announcements around Microsoft 365 development topics from https://developer.microsoft.com/microsoft-365/blogs.\n 5th of May - Understanding the Office Add-ins runtime 5th of May - Application permissions support for assignments API in Microsoft Graph now available 28th of April - Announcing SharePoint Framework 1.12.1 \u0026ndash; Extending more of Microsoft Teams 28th of April - Learn how to develop apps with the Microsoft Graph Toolkit 27th of April - Microsoft Graph Mailbag \u0026ndash; Create engaging apps with the Microsoft Teams Activity Feed API 21st of April - Build quality Microsoft Teams apps with these best practices: Part 3  20th of April - Utilize change notification APIs for Microsoft Teams messages 20th of April - Breaking changes to the Microsoft Graph assignments API (beta) 19th of April - Leverage new Microsoft Teams chat APIs to enable new scenarios 15th of April - Migrate messages from other chat platforms to Microsoft Teams with Microsoft Graph APIs 14th of April - Enhance app engagement with the Microsoft Teams Activity Feed API 14th of April - Build quality Microsoft Teams apps with these best practices: Part 2 13th of April - Announcing public preview of SharePoint Framework 1.12.1 13th of April - Microsoft Graph Mailbag \u0026ndash; Copy/Move Files and Folders in SharePoint Online 12th of April - Enable compliance scenarios with hosted content and delta message APIs in Microsoft Teams 12th of April - Explore Microsoft Graph scenarios for JavaScript development now on Microsoft Learn 9th of April - New feature request experience for Microsoft Graph and Office Platform 8th of April - Jedox explains batching Excel Custom Functions API calls 6th of April - Build quality Microsoft Teams apps with these best practices: Part 1 1st of April - Get Microsoft Graph change notifications delivered through Azure Event Hubs Latest community posts at https://aka.ms/m365pnp/community/blog 10th of May - Ari Gunawan (DevStack) - Community Sample: News Ticker app (SPFx Extensions) 10th of May - Django Lohn (InSpark) - Power Apps: source code editing for Canvas Apps 7th of May - Vesa Juvonen (Microsoft) - New Microsoft 365 Patterns and Practices (PnP) team members \u0026ndash; May 2021 7th of May - Luise Freese - Microsoft 365 PnP Community Spotlight: Stefan Bauer 7th of May - Michael Roth (IT-P Information Technology-Partner GmbH) - Let\u0026rsquo;s build a timer app for Teams meetings 6th of May - André Lage (Datalynx AG) - Navigate OneDrive data with Microsoft Graph and Mgt-File-List Beta version 6th of May - Mohamed Derhalli (BDO Canada) - Introducing React Video Banner Web Part 6th of May - Carl Cookson (Avanade) - Using Power Automate And Graph API To Manage External Access To Teams 6th of May - Hubert Lam (NSW Department of Education) - Simple reminders for any Teams Channel or Chat message 5th of May - Chandani Prajapati - How to to get all site collections with their sub webs using PnP PowerShell? 5th of May - Luis Mañez (ClearPeople) - Community sample: Engage your users with SharePoint stories/reels 4th of May - Bob German (Microsoft) - What\u0026rsquo;s up with Markdown? 1st of May - Ari Gunawan (DevStack) - How to Set Up Tailwind CSS in a SPFx Project 29th of April - Damien Bird (Aberdeen City Council) - Power Platform MS Forms Quiz with dynamic Leader Board created using Power Automate and HTTP Trigger 29th of April - Luise Freese - How to get Source Code files for Power Apps Canvas apps 29th of April - Garry Trinder (CPS) - CLI for Microsoft 365 v3.9 29th of April - Vesa Nopanen (Sulava) - Power Virtual Agents bot setting the Out Of Office 29th of April - David Chesnut (Microsoft) - Office Add-in Developer Community (PnP) \u0026ndash; March 2021 update 26th of April - Damien Bird (Aberdeen City Council) - Teams - an adoption idea? Transfer your group chat emails to Teams with Power Automate 25th of April - Luise Freese - Microsoft 365 PnP Community Spotlight: Wictor Wilén 25th of April - Michael Roth (IT-P Information Technology-Partner GmbH) - What I (as a non dev) learned as I created my first Power App 25th of April - Michael Roth (IT-P Information Technology-Partner GmbH) - Learn to debug your Power Apps 23rd of April - Yves Habersaat (Sword Group) - Export Power Apps and Power Automate user licenses 21st of April - Luise Freese - How to beautify your Power Apps 17th of April - Luise Freese - Microsoft 365 PnP Community Spotlight: Mikael Svenson 15th of April - Will Holland (ThreeWill) - Use Power Automate to automatically create SharePoint News Links from an RSS feed 15th of April - Luise Freese - LearnTogether: Build Apps with Microsoft Graph 🦒 14th of April - Sam Collins (Coupled Technology) - FAQ\u0026rsquo;s in a Document Card 12th of April - Lee Ford (Symity Ltd) - Introduction to tokens 12th of April - Chandani Prajapati - How to get any site collection users with their roles using PnP PowerShell? 11th of April - Chandani Prajapati - How to show profile picture in Person column in SharePoint list/library? 9th of April - Luise Freese - Microsoft 365 PnP Community Spotlight: Albert-Jan Schot 7th of April - Luise Freese - Microsoft Graph Fundamentals learning path \u0026ndash; Module 3 7th of April - Luise Freese - PnP WatchParty for Microsoft\u0026rsquo;s \u0026lsquo;LearnTogether Building apps with Microsoft Graph\u0026rsquo; event 7th of April - Django Lohn (InSpark) - Power Apps: source code editing for Canvas Apps 7th of April - Yannick Reekmans (Qubix) - Change your own profile picture as a Guest in Microsoft Teams 6th of April - Mike Homol (ThreeWill) - Improving the Page Properties web part 5th of April - Luise Freese - Microsoft Graph Fundamentals learning path \u0026ndash; Module 2 1st of April - Luise Freese - Microsoft Graph Fundamentals learning path \u0026ndash; Module 1 1st of April - Will Holland (ThreeWill) - Copy a list - with list items - to another site Community call recording blog posts: 7th of May - SharePoint Framework Community Call Recording \u0026ndash; 6th of May, 2021 3rd of May - Office Add-ins community call \u0026ndash; April 14, 2021 30th of April - Microsoft 365 Developer Community Call recording \u0026ndash; 29th of April, 2021 28th of April - Power Apps Community Call \u0026ndash; April 2021 23rd of April - SharePoint Framework Community Call Recording \u0026ndash; 22nd of April, 2021 22nd of April - Microsoft Teams Community Call - April 2021 16th of April - Microsoft 365 Developer Community Call recording \u0026ndash; 15th of April, 2021 14th of April - SharePoint community call - April 13th, 2021 9th of April - SharePoint Framework Community Call Recording \u0026ndash; 8th of April, 2021 8th of April - Microsoft Graph community call - April 6th, 2021 2nd of April - Microsoft 365 Developer Community Call recording \u0026ndash; 1st of April, 2021 PnP Weekly video blog / podcast shows: 3rd of May - Microsoft 365 PnP Weekly - Episode 125 - Sandy Ussia (Lightning Tools) 27th of April - Microsoft 365 PnP Weekly - Episode 124 - Emily Mancini (Sympraxis Consulting) 20th of April - Microsoft 365 PnP Weekly - Episode 123 - April Dunnam (Microsoft)  13th of April - Microsoft 365 PnP Weekly - Episode 122 - Mark Rackley (PAIT Group) 4th of April - Microsoft 365 PnP Weekly \u0026ndash; Episode 121 - Nik Charlebois (Microsoft) We highly recommend also subscribing on the Microsoft 365 Developer Podcast show, which is a great show covering also latest development in the Microsoft 365 platform from developer and extensibility perspective.  Community Calls There are numerous different community calls on different areas. All calls are being recorded and published either from Microsoft 365 Developer or Microsoft 365 Community (PnP) YouTube channels. Recordings are typically released within the following 24 hours after the call. You can find a detailed agenda and links to specific covered topics on blog post articles at the Microsoft 365 developer blog when the videos are published.\n Adaptive Cards https://aka.ms/adaptivecardscommunitycall - Updates and news around Adaptive Cards with live demos Microsoft Graph https://aka.ms/microsoftgraphcall - Updates and news from Microsoft Graph with live demos Microsoft identity platform https://aka.ms/IDDevCommunityCalendar - Latest on the identity side Microsoft Teams https://aka.ms/microsoftteamscommunitycall - Microsoft Teams monthly update with live demos Office Add-ins https://aka.ms/officeaddinscommunitycall - News and community work around Office add-ins with live demos PowerApps https://aka.ms/PowerAppsMonthlyCall - Monthly summary on PowerApps community with live demos SharePoint https://aka.ms/spdev-call - Consists of the latest news, providing credits for all community contributors and live demos typically by SharePoint engineering. M365 General Dev SIG https://aka.ms/spdev-sig-call - Bi-weekly - General topics on Microsoft 365 Dev from various aspects - Microsoft Teams, Microsoft Graph Toolkit, Provisioning, Automation, Scripting, Power Automate, Solution design SharePoint Framework SIG https://aka.ms/spdev-spfx-call - Bi-weekly - Consists of topics around SharePoint Framework and JavaScript-based development in the Microsoft Teams and in SharePoint platform. If you are interested in doing a live demo of your solution or sample in these calls, please do reach out to the PnP Team members (contacts later in this post) and they are able to help with the right setup. These are great opportunities to gain visibility for example for existing MVPs, for community members who would like to be MVPs in the future or any community member who\u0026rsquo;d like to share some of their learnings.  Microsoft 365 Community (PnP) Ecosystem in GitHub Most of the community driven repositories are in the PnP GitHub organization as samples are not product specifics as they can contain numerous different solutions or the solution works in multiple different applications.\n  PnPjs - PnPjs Framework repository\n  CLI Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings\n  generator-spfx - Open-source Yeoman generator which extends the out-of-the-box Yeoman generator for SharePoint with additional capabilities\n  generator-teams - Open-source Microsoft Teams Yeoman generator - Bots, Messaging Extensions, Tabs, Connectors, Outgoing Web hooks and more\n  teams-dev-samples - Microsoft Teams targeted samples from community and Microsoft engineering\n  Sharing is Caring - Getting started on learning how to contribute and be active on the community from GitHub perspective.\n  pnpcore - The PnP Core SDK is an SDK designed to work against Microsoft 365 with Microsoft Graph API first approach\n  powershell - PnP PowerShell module which is PowerShell Core module targeted for Microsoft 365\n  pnpframework - PnP Framework is a .Net Standard 2.0 library targeting Microsoft 365 containing the PnP Provisioning engine and a ton of other useful extensions\n  https://github.com/pnp/teams-dev-samples - Samples around the Microsoft Teams development models from Microsoft and from the community\n  sp-dev-fx-webparts - Client-side web part samples from community and Microsoft engineering\n  sp-dev-fx-extensions - Samples and tutorial code around SharePoint Framework Extensions\n  sp-dev-fx-library-components - Samples and tutorial code around the SharePoint Framework library components\n  sp-starter-kit - Starter kit solution for SharePoint modern experiences\n  sp-dev-fx-vs-extension - Open source Visual Studio IDE extension for creating SharePoint Framework solutions in the Visual Studio 2015 or 2017\n  sp-dev-build-extensions - Different build extensions like gulp tasks and gulp plugins from the community and engineering around SharePoint development\n  sp-dev-solutions - Repository for more polished and fine-tuned reusable solutions build with SharePoint Framework\n  sp-dev-samples - Repository for other samples related on the SharePoint development topics - WebHooks etc.\n  sp-dev-fx-controls-react - Reusable content controls for SharePoint Framework solutions build with React\n  sp-dev-fx-property-controls - Reusable property pane controls to be used in web parts\n  sp-dev-list-formatting - Open-source community-driven repository for the column and view formatting JSON definitions\n  sp-dev-site-scripts - Open-source community-driven repository for community Site Designs and Site Scripts\n  sp-dev-modernization - Tooling and guidance around modernizing SharePoint from classic to modern\n  sp-power-platform-solutions - Solution and sample code for SharePoint Power Platform solutions\n  powerfx-samples - Samples that demonstrate different usage patterns for the Power Fx low-code programming language\\\n  powerapps-samples - Samples that demonstrate different usage patterns for Power Apps\n  powerautomate-samples - Samples that demonstrate different usage patterns for Power Automate\n  powerva-samples - Samples that demonstrate different usage patterns for Power Virtual Agents All SharePoint specific repositories or services supported directly by Microsoft are located in the SharePoint GitHub organization\n\\\n  sp-dev-docs - Source for new SharePoint dev center documentation exposed from http://docs.microsoft.com/sharepoint/dev\n  sp-dev-provisioning-templates - Open-source templates used by the SharePoint Look Book site\n  sp-provisioning-service - Source code of the SharePoint look book site PnP specific repositories - solution designs and tooling\n  PnP - Main repository for SP add-in, Microsoft Graph etc. samples\n  PnP-Sites-Core - Office Dev PnP Core component\n  PnP-PowerShell - Office Dev PnP PowerShell Cmdlets\n  PnP-Tools - Tools and scripts targeted more for IT Pro\u0026rsquo;s and for on-premises for SP2013 and SP2016\n  PnP-Provisioning-Schema - PnP Provisioning engine schema repository\n  PnP-IdentityModel - Open source replacement of Microsoft.IdentityModel.Extensions.dll Repositories in the GitHub Microsoft Search organization controlled by the PnP initiative\n  pnp-modern-search - Home of PnP Modern Search solutions, see more from the documentation Other related resources from GitHub\n  Microsoft Graph Toolkit in GitHub - Community contributions welcome!\n  Office add-in Patterns and Practices in GitHub - Community contributions welcome!\n  Microsoft Graph GitHub organization\n  OfficeDev GitHub organization - Includes all Microsoft Teams samples from Microsoft\n\\\n  What\u0026rsquo;s supportability story around the community tooling and assets? Following statements apply across all of the community lead and contributed samples and solutions, including samples, core component(s) and solutions, like SharePoint Starter Kit, yo teams or PnP PowerShell. All Microsoft released SDKs and tools are supported based on the specific tool policies.\n PnP guidance and samples are created by Microsoft \u0026amp; by the Community PnP guidance and samples are maintained by Microsoft \u0026amp; community PnP uses supported and recommended techniques PnP is an open-source initiative by the community \u0026ndash; people who work on the initiative for the benefit of others, have their normal day job as well PnP is NOT a product and therefore it\u0026rsquo;s not supported by Premier Support or other official support channels PnP is supported in similar ways as other open source projects done by Microsoft with support from the community by the community There are numerous partners that utilize PnP within their solutions for customers. Support for this is provided by the Partner. When PnP material is used in deployments, we recommend being clear with your customer/deployment owner on the support model Please see the specifics on the supportability on the tool, SDK or component repository or download page.  Microsoft 365 PnP team model    In April 2020 we announced our new Microsoft 365 PnP team model and grew the MVP team quite significantly. PnP model exists for having more efficient engagement between Microsoft engineering and community members. Let\u0026rsquo;s build things together. Your contributions and feedback is always welcome! During August, we also crew the team with 5 new members. PnP Team coordinates and leads the different open-source and community efforts we execute in the Microsoft 365 platform. We welcome all community members to get involved on the community and open-source efforts. Your input do matter!\n New Microsoft 365 Patterns and Practices (PnP) team members - May 2021 - Gautam Sheth (Valo) and Patrick Lamber (Experts Inside AG) New Microsoft 365 Patterns and Practices (PnP) team members - February 2021 - April Dunnam (Microsoft), Emily Mancini (Sympraxis Consulting) and Veronique Lengelle (CPS) New Microsoft 365 Patterns and Practices (PnP) team members - December 2020 - Luise Freese and Sébastien Levert  New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 - Albert-Jan Schot (Portiva), Koen Zomers (Microsoft), Paul Bullock (CaPa Creative), Rabia Williams (Microsoft) and Yannick Plenevaux (PVX Solutions) Got feedback, suggestions or ideas? - Please let us know. Everything we do in this program is for your benefit. Feedback and ideas are more than welcome so that we can adjust the process for benefitting you even more.  Area-specific updates These are different areas which are closely involved on the community work across the PnP initiative. Some are lead and coordinated by engineering organizations, some are coordinated by the community and MVPs.\nMicrosoft Graph Toolkit    Microsoft Graph Toolkit is engineering lead initiative, which works closely with the community on the open-source areas. The Microsoft Graph Toolkit is a collection of reusable, framework-agnostic web components and helpers for accessing and working with Microsoft Graph. The components are fully functional right of out of the box, with built in providers that authenticate with and fetch data from Microsoft Graph.\n Latest version currently is 2.1. See the v2.1 announcement blog post for more details - Microsoft Graph Toolkit adds a new Electron Provider plus enhanced capabilities mgt.dev - Microsoft Graph Toolkit Playground Getting started with Microsoft Graph Toolkit guidance video from developer community call by Beth Pan (Microsoft) Latest code and preview versions from https://aka.ms/mgt All the latest updates on the Microsoft Graph Toolkit is being presented in our bi-weekly Microsoft 365 Generic Dev community call, including the latest community contributors.  Microsoft 365 Community docs    Community docs model was announced in the April 2020 and it\u0026rsquo;s great to see the interest for community to help each other by providing new guidance on the non-dev areas. See more on the announcement from the SharePoint blog - Announcing the Microsoft 365 Community Docs. We do welcome contributions from the community - our objective is to build a valuable location for articles from Microsoft and community together.\nLatest updates on this area as follows:\n  New article by Michael Roth - Accessibility by Design\n  New article by Emily Mancini (Sympraxis Consulting) - Microsoft 3565 Maturity Model - Elevating Collaboration\n  Updated article by Ralph Rivas (Sogeti) - Understanding Power Platform Licensing\n  Updated article by Marc D Anderson (Sympraxis Consulting) - How Do Site Columns Become Managed Properties - Thus Available for Search\n  Updated article by Marc D Anderson (Sympraxis Consulting) - Glossary Have ideas for articles or want to contribute yourself? - Get involved! Here are also some additional resources explaining the model more detailed.\n  YouTube - Introducing Microsoft 365 Community Docs\n  GitHub issue list with articles ideas\n  SharePoint Framework development samples    These are the updated SharePoint Framework samples which are available from the the different repositories.\n New sample react-teams-membership-updater by Nick Brown which can be used to update the membership of a team based on the contents of a CSV file, can be hosted in a SharePoint site where a list can be defined for logging purposes or run inside teams as a personal app. New sample react-application-news-ticker by Ari Gunawan that displays news as a running text at the top of every modern page Updates to react-staffdirectory by Tristian O\u0026rsquo;Brien which is a web part shows the current user\u0026rsquo;s colleagues, and allows the user to search AD directory. Updates to react-datatable by Chandani Prajapati which provides easy way to render SharePoint custom list in datatable view with all the necessary features. Other to numerous SPFx web part and extension samples by our awesome community members! How to find what\u0026rsquo;s relevant for you? Take advantage of our SharePoint Framework web part and extension sample galleries - includes also solutions which work in Microsoft Teams Web Part sample gallery - http://aka.ms/spfx-webparts Extensions sample gallery - http://aka.ms/spfx-extensions  Microsoft Teams community samples    These are samples which have been contributed on the community samples since last summary. We do welcome all Microsoft Teams samples to this gallery. They can be implemented using in any technology.\n New sample msgext-bot-SPUploader by Sathya Raveendran and Varaprasad SSLN which is a document manager solution New sample tab-activity-feed by Sébastien Levert (Microsoft) which shows on how to build a solution leveraging the Teams Activity Feed API to send notifications to other users Updates to tab-sso by Shama which shows how to create a tab for Teams that uses the built-in Single Sign-On (SSO) capabilities Numerous updates on the existing samples provided by community and Microsoft If you are interested on Microsoft Teams samples, we have just released also new Microsoft Teams sample gallery. Contributions to Microsoft Teams samples is also more than welcome. This gallery already surfaces all Microsoft samples, Microsoft Teams app templates and community samples.  Power Platform samples    These are the updated Power Platform samples which are available from the new Power Platform sample gallery.\n New sample color-functions by P3N showing functions that calculate the contrast between two colors New sample convertbasenumber-functions by コルネ showing function that converts base numbers New sample date-functions by Matthew Devaney (Hitachi Solutions) providing set of data functions for data manipulation New sample financial-functions by Matthew Devaney (Hitachi Solutions) providing set of financial functions New sample geolocation-utils by Hiroaki Nagao providing a function to calculate distance and compass heading between two locations New sample list-functions by Laura Graham-Brown (AIS) providing set of functions around lists New sample regex-functions by Geetha Sivasaiam and P3N on set of functions that performs regex match on currency, percent \u0026amp; time formats New sample Tagbox by Carmen Ysewijn (Qubix) showing a textbox that adds items into a dynamic list New sample Timesheet by April Dunnam (Microsoft) showing a timesheet application is a tablet-based canvas app that gives you a way to create and manage weekly timesheets New sample calendar-component by April Dunnam (Microsoft) providing a re-usable component that allows you to display events in a calendar New sample expandable-navigation by Luise Freese providing an example for a expandable navigation using Fluent UI icons New sample status-indicator by Derek Cash-Peterson (Sympraxis Consulting) showing how to add a status indicator in a display form New sample timer by Michael Roth (IT-P) providing an example of how to use the timer function as a stopwatch New sample Try-Catch-Finally by Remy Blok (Prodware) providing a pattern for Try-Catch-Finally New sample exception-handing-in-do-until-loop by Remy Blok (Prodware) providing a pattern for breaking out of a \u0026lsquo;Do Until\u0026rsquo;-loop in Power Automate when an exception occurs. New sample ics-calendar-invite by April Dunnam (Microsoft) which sends an .ics calendar invite when a new event is added to a SharePoint list New sample planner-task-from-flagged-email by April Dunnam (Microsoft) which creates Planner Task from flagged emails New sample teams-invites-via-graph-api by Carl Cookson (Avanade) sample showing how guest user can request access to a Team How to find what\u0026rsquo;s relevant for you? Take advantage of our Power Platform sample gallery. Power Platform sample gallery - https://aka.ms/powerplatform-samples  Sharing is Caring initiative    The \u0026ldquo;Sharing Is Caring\u0026rdquo; imitative is targeted for learning the basics around making changes in Microsoft Docs, in GitHub, submitting pull requests to the PnP repositories and in GitHub in general. Take advantage of this instructor lead training for learning how to contribute to docs or to open-source solutions. Everyone is welcome to learn how to get started on contributing to open-source docs or code!\n See more from the guidance documentation - including all upcoming instructor lead sessions which you can participate!  Different Microsoft 365 related open-source initiatives build together with the community See exact details on the latest updates from the specific open-source project release notes. You can also follow up on the project updates from our community calls. There are numerous active projects which are releasing new versions with the community even on weekly basis. Get involved!\n Microsoft Look Book - Discover the modern experiences you can build with SharePoint in Microsoft 365. Look book provides design examples for SharePoint Online which can be automatically provisioned to any tenant in the world. See more from https://lookbook.microsoft.com. This service is also provided as open-source solution sample from GitHub. yo teams - Open-source Yeoman generator for Microsoft Teams extensibility. Supports creation of bots, messaging extensions, tabs (with SSO), connectors and outgoing Webhooks. See more from https://aka.ms/yoteams. PnP Framework - .NET Standard 2.0 SDK containing the classic PnP Sites Core features for SharePoint Online. More around this package from GitHub. PnP Core SDK - The PnP Core SDK is an SDK designed to work for Microsoft 365 with Graph API first approach. It provides a unified object model for working with SharePoint Online and Teams which is agnostic to the underlying API\u0026rsquo;s being called. See more around the SDK from documentation. PnP PowerShell - PnP PowerShell is a .NET Core 3.1 / .NET Framework 4.6.1 based PowerShell Module providing over 400 cmdlets that work with Microsoft 365 environments and more specifically SharePoint Online and Microsoft Teams. See more details from documentation. Reusable SharePoint Framework controls - Reusable controls for SharePoint Framework web part and extension development. Separate projects for React content controls and Property Pane controls for web parts. These controls are using Office UI Fabric React controls under the covers and they are SharePoint aware to increase the productivity of developers. Office 365 CLI - Using the Office 365 CLI, you can manage your Microsoft Office 365 tenant and SharePoint Framework projects on any platform. See release notes for the latest updates. PnPJs - PnPJs encapsulates SharePoint REST APIs and provides a fluent and easily usable interface for querying data from SharePoint sites. It\u0026rsquo;s a replacement of already deprecated pnp-js-core library. See changelog for the latest updates. PnP Provisioning Engine and PnP CSOM Core - PnP provisioning engine is part of the PnP CSOM extension. They encapsulate complex business driven operations behind easily usable API surface, which extends out-of-the-box CSOM NuGet packages. See changelog for the latest updates. PnP PowerShell - PnP PowerShell cmdlets are open-source complement for the SharePoint Online cmdlets. There are more than 300 different cmdlets to use and you can use them to manage tenant settings or to manipulate actual SharePoint sites. They See changelog for the latest updates. PnP Modern Search solution - The PnP \u0026lsquo;Modern Search\u0026rsquo; solution is a set of SharePoint Online modern Web Parts allowing SharePoint super users, webmasters and developers to create highly flexible and personalized search based experiences in minutes. See more details on the different supported capabilities from https://aka.ms/pnp-search. Modernization tooling - All tools and guidance on helping you to transform you SharePoint to modern experiences from http://aka.ms/sppnp-modernize. SharePoint Starter Kit v2 - Building modern experiences with Microsoft Teams flavors for SharePoint Online and SharePoint 2019 - reference solution in GitHub. List formatting definitions - Community contributed samples around the column and view formatting in GitHub. Site Designs and Site Scripts - Community contributed samples around SharePoint Site Designs and Site Scripts in GitHub. **DevOps tooling and scripts **- Community contributed scripts and tooling automation around DevOps topics (CI/CD) in GitHub. Teams provisioning solution - Set of open-source Azure Functions for Microsoft Teams provisioning. See more details from GitHub.  Documentation updates Please see all the Microsoft 365 development documentation updates from the related documentation sets and repositories as listed below:\n Microsoft Teams platform documentation - Microsoft Docs | GitHub SharePoint Developer documentation - Microsoft Docs | GitHub Microsoft Graph documentation - Microsoft Docs | GitHub Office add-in documentation - Microsoft Docs | GitHub  Microsoft 365 Dev and Microsoft 365 Community (PnP) YouTube video channels You can find all Microsoft 365 related videos on our YouTube Channel at http://aka.ms/m365pnp-videos or at Microsoft 365 Dev. These channels contains already a significant amount of detailed training material, demo videos, and community call recordings. Here are the new Microsoft demo or guidance videos released since the last monthly summary:\n Microsoft Lists integration with Power BI - Mark Kashman (Microsoft) | @mkashman SharePoint Content Type APIs in Microsoft Graph - Swapnil Shrivastava (Microsoft) SharePoint Framework v1.12.1 new features - Vesa Juvonen (Microsoft) | @vesajuvonen Getting started with Microsoft Viva Connections Desktop - Tejas Mehta (Microsoft) @tpmehta \u0026amp; Prateek Dudeja (Microsoft) @PrateekDudeja4 Viva Connections Desktop and Extensibility - Vesa Juvonen (Microsoft) | @vesajuvonen Introduction to PnP Core SDK - Getting started in .NET 5 - Bert Jansen (Microsoft) | @o365bert List group header formatting options for Microsoft Lists - Naveed Ahmed (Microsoft) | @naveed3 Best practices for data migrations to Microsoft 365 - Joshua Badach Choosing the right tools for your Microsoft 365 migration - Eric Warnke (Microsoft) | @EricWarnke Getting started on deploying Viva Connections for Microsoft Teams desktop - Microsoft Your intranet is now in Microsoft Teams with Microsoft Viva Connections - Microsoft Create custom apps with Power Apps - Microsoft Explore Microsoft Graph scenarios for JavaScript development - Dan Wahlin (Microsoft) | @danwahlin Learn how to develop apps with the Microsoft Graph Toolkit! - Ayca Bas (Microsoft) | @aycabs Outlook add-in for creating templated signatures programmatically with events - David Chesnut (Microsoft) Updates to Office Scripts and TICTAC UFO customer demonstration - Sudhi Ramamurthy (Microsoft) Support tickets on Microsoft 365 around Office add-ins - Richard Tylor (Microsoft) Take a lap around the Company Communicator app - Mykhailo Sydorchuk (Microsoft) Streamline your work with Microsoft Graph | Tips \u0026amp; Tricks #1 - Bob German (Microsoft) | @Bob1German Microsoft Graph Toolkit can do WHAT? | Tips \u0026amp; Tricks #2 - Ayca Bas (Microsoft) | @aycabs Build Teams apps with Power Apps in Dataverse for Teams | Tips \u0026amp; Tricks #3 - April Dunnam (Microsoft) | @aprildunnam Start calling the Microsoft Graph API in under 5 minutes! | Tips \u0026amp; Tricks #4 - Dan Wahlin (Microsoft) | @danwahlin Set up your new Microsoft 365 Developer subscription | Tips \u0026amp; Tricks #5 - Bob German (Microsoft) | @Bob1German Create a chatbot in Microsoft Teams with Power Virtual Agents | Tips \u0026amp; Tricks #6 - April Dunnam (Microsoft) | @aprildunnam Community demos as following: Advanced Page Properties web part solution - Mike Homol (ThreeWill) | @homol Running the CLI for Microsoft 365 in Azure Container Instances orchestrated by Logic Apps - Albert-Jan Schot (Portiva) | @appieschot Make your Power Apps sessions persistent when switching Microsoft Teams tabs! - Hardit Bhatia (Hitachi Solutions America, Ltd.) | @ThePowerAddict Surfacing your existing solution in Microsoft Teams - Rick Van Rousselt (Advantive) | @RickVanRousselt  Make your Power Apps user experience awesome with Gestalt design principles - Rory Neary | @azurerory Build your first Microsoft Teams Bot - Stephan Bisser (Solvion) | @stephanbisser Live London Underground Line Status Bot in Microsoft Dataverse for Teams - Leon Armston (Intelogy) | @LeonArmston Microsoft Lists formatting with header and footer settings - Chris Kent (DMI) | @theChrisKent Microsoft Teams Meeting Questionnaire App with SharePoint Framework - Nanddeep Nachan | nanddeepn Building an advanced SPFx Image Editor web part - Peter Paul Kirschner (cubido) | @petkir_at Customer scenario - Microsoft Teams integration with external systems - Kathy (Qinqyu) Xu (Pfizer) \u0026amp; Paolo Pialorsi (PiaSys) | @paolopia Using Single Sign-On (SSO) with Office Add-ins - Andrew Connell (Voitanos) Microsoft Teams \u0026ndash; Authentication and Single Sign-on - Andrew Connell (Voitanos) Microsoft Teams \u0026ndash; Use the teamwork Microsoft Graph endpoint - Andrew Connell (Voitanos) PnP Weekly sessions - Community visitors and latest articles from Microsoft and community on Microsoft 365 topics. Microsoft 365 PnP Weekly - Episode 125 - Sandy Ussia (Lightning Tools) Microsoft 365 PnP Weekly - Episode 124 - Emily Mancini (Sympraxis Consulting) Microsoft 365 PnP Weekly - Episode 123 - April Dunnam (Microsoft)  Microsoft 365 PnP Weekly - Episode 122 - Mark Rackley (PAIT Group) Microsoft 365 PnP Weekly - Episode 121 - Nik Charlebois (Microsoft)  Key contributors to the May 2021 update Here\u0026rsquo;s the list of active contributors (in alphabetical order) since last release details in GitHub repositories or community channels. PnP is really about building tooling and knowledge together with the community for the community, so your contributions are highly valued across the Microsoft 365 customers, partners and obviously also at Microsoft. Thank you for your assistance and contributions on behalf of the community. You are truly making a difference! If we missed someone, please let us know.\n  Adam Wójcik - Adam-it\n  Agustin Del Vento (Change Champions Consulting Inc.)\n  Albert-Jan Schot (Portiva) - @appieschot\n  Alberto Gutierrez (Minsait) - @albertogperez\n  Alex Terentiev (SharePointalist) - @alexaterentiev\n  Alex Moumne (Fluidmaster) - afhmoumne\n  Alison Collins (Coupled Technology) - ReactIntern\n  Anders Mörtsell (Sogeti) - @andersmortsell\n  André Lage (Datalynx AG) - @aaclage\n  Andrew Benson (InElec) - @ViewPorter\n  Andrew Burns (AmSty) - @SharePointRox\n  Andrew Connell (Voitanos) - @andrewconnell\n  Andrew Koltyakov (ARVO Systems) - @andrewkoltyakov\n  Andy Boylan (AdEPT Technology Group) - apboylan\n  Anoop Tatti (Content+Cloud) - @anooptells\n  Ari Gunawan (DevStack) - @arigunawan3023\n  Asha Prajapati (T-systems India Pvt Ltd) - Ashaprjpt0707\n  Beau Cameron (Aerie Consulting) - @Beau__Cameron\n  Bianca Wilkinson - bianca-git\n  Bruce Cotter (Business Journey Consulting, LLC) - businessjourneyconsulting\n  Bruce Lane - brucelane\n  Carl Cookson (Avanade) - @LinkeD365\n  Carmen Ysewijn (Qubix) - @CarmenYsewijn\n  Chandani Prajapati - @Chandani_SPD\n  Charles Ndiaye (Netexio) - @manusquall\n  chimenjoku - chimenjoku\n  Chris Kent (DMI) - @theChrisKent\n  Chris Revell (Consult 365 IT Solutions) - @consult_365\n  Christian Zuellig (Monday Coffee) \u0026ndash; @ChristianZuell1\n  Christine Green (EBSCO Information Services) - @cacurtica\n  codepwner - codepwner\n  Dan Toft (Evobis) - @tanddant\n  Daniel Westerdale (Westerdale Solutions Ltd) - @westerdaled\n  Damien Bird (Aberdeen City Council) - @DamoBird365\n  David Warner II (Catapult) - @DavidWarnerII\n  Django Lohn (InSpark) - @LohnDjango\n  Denis Molodtsov (CleverPoint Consulting) - @Zerg00s\n  Derek Cash-Peterson (Sympraxis Consulting) - @spdcp\n  Elio Struyf (Struyf Consulting) - @eliostruyf\n  Ellery July - @techrealist\n  Emily Mancini (Sympraxis Consulting) - @EEMancini\n  Eric Legault (Eric Legault Consulting Inc.) - @elegault\n  Eric Overfield (PixelMill) - @EricOverfield\n  Erwin van Hunen (Valo Intranet) - @erwinvanhunen\n  Frank Cornu (aequos) - @FranckCornu\n  Ganesh Sanap - @ganeshsanap20\n  Garry Trinder (CPS) - @garrytrinder\n  Gautam Sheth (Valo) - @gautamdsheth\n  Geetha Sivasaiam (Artis Consulting) - @GSiVed\n  Gissur Simonarson (Fujitsu) - @gissisim\n  Giacomo Pozzoni (DQC Sverige Ab) - @PozzoniGiacomo\n  Haiye Wang - haiyewang0717\n  Hardit Bhatia (Hitachi Solutions America, Ltd.) | @ThePowerAddict\n  Hamid Malik (Smart-IS) - @HamidHMalik\n  Harold Wolfinger\n  Heidi Connor - bryllyg\n  Henrik Yllemo (Ylltec Sweden AB) - @yllemo\n  Henry Morales\n  Hiroaki Nagao - @mofumofu_dance\n  Hubert Lam (NSW Department of Education) - @z3019494\n  Jarbas Horst (Valo) - @devjhorst\n  Janeen Jackson - ajhodgejackson\n  Jasper Voskuilen - @jaspervoskuilen\n  Jennifer McGee (Wood plc)\n  Jens Otto Hatlevold (Bouvet) - jensotto\n  João Mendes - @joaojmendes\n  Joel Rodrigues (Storm Technology) - @JoelFMRodrigues\n  John Kelly (Domino Printing Sciences) - @fairgold\n  John O\u0026rsquo;Brien (Microsoft Canada) - obrien-j\n  Jonathan Cooper (First Horizon) - jdcooper901\n  Joy Muehlenbein (Edwards Lifesciences) - @huh_larious\n  Julie Turner (Sympraxis Consulting) - @jfj1997\n  Kanakarajulu Thota (Atos GITSS) - @KanakarajuNaidu\n  Kathleen Boilek (Alaka\u0026rsquo;Ina Foundation) - @kaboilek\n  Kathy (Qinqyu) Xu (Pfizer)\n  Kerry Lambert (NI) - @kazoogal23\n  Keval Solanki - @keval_solanki\n  koruneko - koruneko\n  Krzysztof Mikołajec (Krzysztof Mikolajec Consulting, Sii Pl) - @krzymiko\n  Laura Graham-Brown (AIS) - @Laura_GB\n  Laura Kokkarinen (Sulava) - @LauraKokkarinen\n  Lee Ford (Symity Ltd) - @lee_ford\n  Leon Armston (Intelogy Ltd) - @LeonArmston\n  Liam Cleary (SharePlicity) - @helloitsliam\n  Luis Mañes (ClearPeople) - @luismanez\n  Luis Renteria - TheSharePointProfessional\n  Luise Freese (Luise Freese M365 Princess) - @LuiseFreese\n  Lukas Jung - lukju\n  Luke Pfaffinger (Prime Group)\n  Maarten van Stam (Deloitte Nederland) - @aafvstam\n  Manoj Kumar Mittal (Mindtree) - @Manojmcan\n  Marc D Anderson (Sympraxis Consulting) - @sympmarc\n  Mark Rackley (PAIT Group) - @mrackley\n  Matthew Devaney (Hitachi Solutions) - @mattbdevaney\n  Matt Tracy (US Air Force)\n  Mike Homol (ThreeWill) - @homol\n  Michael Fenech (Atrium Hospitality) - SPHateMe\n  Michael Roth (IT-P GmbH) - @MichaelRoth42\n  Michiel Hamers (Ordina MTech) - @michielhamers\n  Michel Mendes (Storm Technology) - @michelcarlo\n  Mike - diver7\n  Mike Duffy (Boardwalk Pipelines) - @mike_duffy\n  Mike Ruhl (Williams Companies) - @ruhlma\n  Mohamed Derhalli (BDO Canada) - derhallim\n  Nabil Cherchali (OpenText) - @ncherchali\n  Nanddeep Nachan \u0026ndash; @NanddeepNachan\n  Naveed Mohammad (Cognizant) - naveed243\n  Neil Sreenan (HKS Inc.) - @nsreenanhks\n  Nick Brown (Cardiff University) - @techienickb\n  Nikki Chapple (NTT Cloud Communications) - @chapplenikki\n  Nitin Jain (First Horizon) - @nitincomplete\n  Phil Harding - phillipharding\n  Paolo Pialorsi (PiaSys.com) - @PaoloPia\n  Patrik Hellgren (Sherpas Group) - @patrikhellgren\n  Patrick Lamber (Expertsinside AG) - @patricklamber\n  Paul Bullock (CaPa Creative Ltd) - @pkbullock\n  Paul Schaeflein (AddIn365) - @paulschaeflein\n  Peter Guhr - pguhr\n  Peter Paul Kirschner (cubido business solutions GmbH) - @petkir_at{.Link\u0026ndash;primary}\n  Phil Broadbery (PKF) - @peb71b\n  P3N - P3N\n  Ralph Rivas (Sogeti) - @bigpix2000\n  Ravi Kulkarni (Cognizant) - @RaviKul16a87\n  Remy Blok (Prodware) - remyblok\n  Reidar Husmo (PointTaken) - reidarhusmo\n  Rick Van Rousselt (Advantive) | @RickVanRousselt   Rocio Holub (DAI)\n  Rolands Strakis (Atea Global Services SIA) - wonderplayer\n  Rory Neary - @azurerory\n  Ross Allan (PKF LittleJohn)\n  Sam Collins (Coupled Technology) - @samc148\n  Sandeep Vootoori - sandeepvootoori\n  Sandy Ussia (Lightning Tools) - @SandyU\n  Sebastian Nagy - snagy22000\n  Sébastien Noel (ENGIE)\n  Sekhar Reddy Bhumireddy (Krish Services Group, Inc) - bhumi-github\n  Sergei Sergeev (Mastaq) - @sergeev_srg\n  Shiva Bezwada (JCS Solutions LLC) - @Texaport\n  Simon Doy (iThink 365) - @simondoy\n  Simon Hudson (Cloud2) - @simonjhudson\n  Smita Nachan - @smitanachan\n  Spencer Harbar (Triumph Media Limited) - @harbars\n  Stefan Bauer (n8d) - @StfBauer\n  Stephan Bisser (Solvion) - @stephanbisser\n  Steve Beaugé (Solutions pour SharePoint) - stevebeauge\n  Sudharsan Kesavanarayanan (NTT Digital Business Solutions) - @sudharsank{.Link\u0026ndash;primary}\n  Susan McClements (1st Source Bank) - @smcclements\n  Tetsuya Kawahara - @techsn_k\n  Theresa Lubelski - @SharePointMadam\n  thomassmart - thomassmart\n  Thomy Gölles (Solvion) | @thomyg\n  Todd Baginski (Canviz) - @toddbaginski\n  Tristian O\u0026rsquo;Brien - tristian2\n  Troy Meacham (US Army)\n  Wictor Wilen (Avanade) - @wictor\n  Will Holland (ThreeWill) - @_WCHolland\n  Velin Georgiev (Pramerica) \u0026ndash; @velingeorgiev\n  Veronique Lengelle (CPS) - @veronicageek\n  Vesa Nopanen (Sulava) - @vesanopanen\n  Yannick Plenevaux (PVX Solutions) - @yp_code\n  Yannick Reekmans (Qubix) - @YannickReekmans\n  Yves Habersaat (Sword Group) - @yhabersaat Companies: Here\u0026rsquo;s the companies, which provided support the community initiative for this month by allowing their employees working for the benefit of others in the community. There were also people who contributed from other companies during last month, but we did not get their logos and approval to show them in time for these communications. If you still want your logo for this month\u0026rsquo;s release, please let us know and share the logo with us. Thx.     Microsoft people: Here\u0026rsquo;s the list of Microsoft people who have been closely involved with the PnP work during last month.\n  Antons Mislevics - antonsmislevics\n  Allen Snow - @asnow003\n  April Dunnam - @aprildunnam\n  Amrutha Srinivasan | @amruthasrin\n  Ayca Bas - @aycabs\n  Bert Jansen - @O365Bert\n  Beth Pan - @beth_panx\n  Bob German - @Bob1German\n  Charles Sterling - @chass\n  Dan Wahlin - @DanWahlin\n  David Chesnut - davidchesnut\n  Elise Yang - @elisenyang\n  Hema Sandhu - hemab-toronto\n  Hugo Bernier - bernierh\n  Jason Johnston - jasonjoh\n  Jeremy Kelley - @Fizzlenik\n  Joanne Hendrickson - JoanneHendrickson\n  John Nguyen - johnguy0\n  John Sudds - jsuddsjr\n  Karthig Balendran - @KarthigBalendr1\n  Kevin Coughlin - @kevintcoughlin\n  Kinga - kkazala\n  Koen Zomers - @koenzomers\n  Holland Kaviani - Holland-ODSP\n  Laura Graham - Lauragra\n  Linda Lu Cannon - lindalu-MSFT\n  Loki Meyburg - @lokimeyburg\n  Luca Bandinelli - lucaband\n  Luis E. Torres - luisenriquetorres\n  Matt Wolodarsky - @mwolodarsky\n  Melissa Torres - @Meltorac\n  Mikael Svenson - @mikaelsvenson\n  Nik Charlebois - @NikCharlebois\n  Nicolas Vogt - vogtn\n  Nikola Metulev - @metulev\n  Pam Green (Microsoft) - @contextuallib\n  Pat Miller - @PatMill_MSFT\n  Patrick Rodgers - @mediocrebowler\n  Philippe Signoret - @psignoret\n  Rabia Williams - @williamsrabia\n  Rob Garrett - robgarrett\n  Saikrishna-MSFT - Saikrishna-MSFT\n  Shane Weaver - shweaver-MSFT\n  Sébastien Levert - @sebastienlevert\n  Steven Jia - Steven-Jia\n  Tim Mayo (Microsoft) - @timmayo\n  Tomomi Imura - @girlie_mac\n  Vesa Juvonen - @vesajuvonen\n  Waldek Mastykarz - @waldekm\n  Vincent Biret - @baywet\n  PnP Team PnP Team manages the PnP community work in the GitHub and also coordinates different open-source projects around Microsoft 365 topics. PnP Team members have a significant impact on driving adoption of Microsoft 365 topics. They have shown their commitment to the open-source and community-driven work by constantly contributing to the benefit of the others in the community. Thank you for all that you do!\n Albert-Jan Schot (Portiva) - @appieschot Alex Terentiev (SharePointalist) - @alexaterentiev Andrew Connell (Voitanos) \u0026ndash; @andrewconnell Andrew Koltyakov (ARVO Systems) \u0026ndash; @andrewkoltyakov Beau Cameron (Aerie Consulting) - @Beau__Cameron Chris Kent (DMI) \u0026ndash; @theChrisKent David Warner II (Catapult) - @DavidWarnerII Elio Struyf (Struyf Consulting) \u0026ndash; @eliostruyf Emily Mancini (Sympraxis Consulting) - @EEMancini Eric Overfield (PixelMill) - @EricOverfield Erwin van Hunen (Valo Intranet) \u0026ndash; @erwinvanhunen Frank Cornu (aequos) - @FranckCornu Garry Trinder (CPS Solutions) - @garrytrinder Gautam Sheth (Valo Intranet) - @gautamdsheth Julie Turner (Sympraxis Consulting) - @jfj1997 Laura Kokkarinen (Sulava) - @LauraKokkarinen Luise Freese - @LuiseFreese Marc D Anderson (Sympraxis Consulting) - @sympmarc Paolo Pialorsi (Piasys.com) \u0026ndash; @PaoloPia Patrick Lamber (Expertsinside AG) - @patricklamber Paul Bullock (CaPa Creative Ltd) - @pkbullock Rabia Williams (Engage Squared) - @williamsrabia Stefan Bauer (n8d) \u0026ndash; @StfBauer Velin Georgiev (Pramerica) \u0026ndash; @velingeorgiev Veronique Lengelle (CPS) - @veronicageek Wictor Wilen (Avanade) - @wictor Yannick Plenevaux (PVX Solutions) - @yp_code Here are the Microsoft Internal PnP Core team members: April Dunnam - @aprildunnam Bert Jansen \u0026ndash; @O365Bert Bob German - @Bob1German Hugo Bernier - @bernierh Koen Zomers - @koenzomers Mikael Svenson \u0026ndash; @mikaelsvenson Patrick Rodgers \u0026ndash; @mediocrebowler Rabia Williams - @williamsrabia Sébastien Levert - @sebastienlevert Vesa Juvonen \u0026ndash; @vesajuvonen Waldek Mastykarz \u0026ndash; @waldekm  Next steps See all of the available community calls, tools, components and other assets from https://aka.ms/m365pnp. Get involved! Got ideas or feedback on the topics to cover, additional partnerships, product feature capabilities? - let us know. Your input is important for us, so that we can support your journey in Microsoft 365. \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 Community (PnP) \u0026ndash; May11th 2021\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-may-2021-update/images/may-pnp-summary-available_hu6a0b13ffd7fd9341b02996f604d8f220_617537_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-may-2021-update/","tags":[],"title":"Microsoft 365 PnP Community -- May 2021 update"},{"categories":["Community post"],"contents":"Why? Let me emphasize that using the Parse JSON action (as explained in this great blog post of Luise Freese: How to use Parse JSON action in Power Automate) is always the way to go when you are starting with Power Automate. Especially if you want to have properties of your JSON ouput to show up as Dynamic Content in the rest of your Flow.\nHowever the Parse JSON action is very picky... The action will fail if a property is missing, a new property is added later on or an existing property is giving back a different type of data. In short: any schema change not being updated in the settings of the action can cause a \u0026ldquo;ValidationFailed error\u0026rdquo; ❌. Such an error will stop the Flow because the schema validation failed:\n   As long as you remind to also update the Parse JSON action schema, it will continue working fine. But in my case, I wanted to know if Power Automate could skip the Parse JSON action\nWhat? In this blog post, I can show you a way to skip the Parse JSON action and reference a property of an action with JSON output directly. This way, we can have one action less (#LessUsage #LessAPIcalls) and thus one action less that could fail (#Lean #LessActionsLessRisks).\nHow? Let\u0026rsquo;s first have a look at a simple JSON object:\n   The output of this Compose action will be this JSON output:\n{ \u0026#34;Property Product\u0026#34;: \u0026#34;Product A\u0026#34;, \u0026#34;Property Product Category\u0026#34;: \u0026#34;Product Category 1\u0026#34; } I am using a Compose action to give JSON output, but in most cases JSON output will come from actions connected to a data source. In some types of actions unfortunately Power Automate does not create Dynamic Content. In these cases, the properties of these action do not show up in the Dynamic Content Panel for the rest of your Flow. When using the Parse JSON action on the output of such an action:\n   we can force the rest of the Flow to show us these properties in the Dynamic Content Panel. Making it easy for us to reference these properties. The Content input of the Parse JSON action will be the output of the Compose - SimpleJSONObject action:\n@{outputs(\u0026#39;Compose_-_SimpleJSONObject\u0026#39;)} Thanks to the Parse JSON - SimpleJSONObject action, we can (from this action on) use the properties defined in its Schema as Dynamic Content:\n   The expression of this reference would look like:\n@{body(\u0026#39;Parse_JSON_-_SimpleJSONObject\u0026#39;)?[\u0026#39;Property Product Category\u0026#39;]} In my first screenshot, you can see the action failing. It failed because the schema was expecting a string, while the Content input was giving an integer number. This was because I changed the JSON object temporarily 😈 to:\n{ \u0026#34;Property Product\u0026#34;: \u0026#34;Product A\u0026#34;, \u0026#34;Property Product Category\u0026#34;: 1 } 1) We can also reference the property of the first action Compose - SimpleJSONObject action directly. We can use an expression like:\n@{outputs(\u0026#39;Compose_-_SimpleJSONObject\u0026#39;)?[\u0026#39;Property Product Category\u0026#39;]} Power Automate can thus skip the Parse JSON action. Even without this parsing, we can reference the property of any action with a JSON output:\n   No Parse JSON action needed!\n[Originally published at https://knowhere365.space/power-automate-skip-the-parse-json-action-to-reference-data/]\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-may-2021-update/images/may-pnp-summary-available_hu6a0b13ffd7fd9341b02996f604d8f220_617537_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/power-automate-skip-the-parse-json-action-to-reference-data/","tags":["Power Automate"],"title":"Power Automate: skip the Parse JSON action to reference data"},{"categories":["Community post"],"contents":"You might be familiar with the running text that shows some breaking news on a news tv channel. I think it would be nice if we have a similar thing on a SharePoint site to show some breaking news to its users so I created the News Ticker app. Basically, the app will show some news from a SharePoint list as a running text at the top of every modern page on the site. Below is how it looks: Below is the data source: ![Data Source List](images/2021-05-10 19_32_40-Window.png) You can find the full source code and how to install it react-application-news-ticker. In this article, I will share some key points from the solution code that might be useful for other SPFx projects. 1. Use React component in the SPFx Extension SPFx extension doesn\u0026rsquo;t include React component by default but we can easily add it manually. We just need to render our React component in the placeholder element provided by the SPFx Extension Application Customizer. You can find my implementation code NewsTickerApplicationCustomizer.   2. Get data from SharePoint list based on View using PnP JS I\u0026rsquo;m using SharePoint list as the data source. In order to make it simple to manage the news, I\u0026rsquo;m leveraging the list view and getting the data based on the view configuration. It\u0026rsquo;s great because we don\u0026rsquo;t need to build any custom configuration mechanism in our app to configure (sort, filter, top, etc.) the data to be displayed. Just use the OOTB list view configuration. It\u0026rsquo;s very easy to get the data based on the list view using the PnP JS. Below is my implementation:\n Get the view information using list.views.getByTitle(...) Get list item based on the list view XML using list.getItemsByCAMLQuery(...) You can find my implementation code react-application-news-ticker. ![Get Data Based on List View](images/2021-05-10 19_56_48-Window.png)   3. Use React third party component I\u0026rsquo;m using an open-source React third party component for the running text component: react-ticker. It\u0026rsquo;s easy to add any React third party components to our SPFx project. You can find my implementation code newsTicker. ![Use Third Party Component](images/2021-05-10 20_28_27-Window.png)\nThanks for reading. Hope you find this article useful\n","image":"https://pnp.github.io/blog/post/community-sample-news-ticker-app-spfx-extensions/images/react-application-news-ticker_hu05000597ef231ff89fb012c1a767bdf5_4534694_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/post/community-sample-news-ticker-app-spfx-extensions/","tags":["SharePoint framework (SPFx)"],"title":"Community Sample: News Ticker app (SPFx Extensions)"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from May 6th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\n Call summary Preview the new Microsoft 365 Extensibility look book gallery co-developed by Microsoft Teams and SharePoint engineering. Download showcase apps, samples, and documentation. Register now for May trainings on Sharing-is-caring New releases in this call \u0026ndash; CLI for Microsoft 365 v3.9.0, Reusable SPFx React Controls v3.1.0 and Property Controls v3.1.0 and SharePoint Framework v1.12.1. Also, a look at what\u0026rsquo;s ahead for SPFx - Microsoft Viva Connections, Teams improvements, tooling updates, and Store modernization. There were six PnP SPFx samples delivered in last 2 weeks, details below. Great work! **Latest project updates include: ** (Bold indicates update from previous report 2 weeks ago) PnP Project Current version Release/Status SharePoint Framework (SPFx) **v1.12.1 ** GA PnPjs Client-Side Libraries v2.4.0 v2.5.0 scheduled for May 14th CLI for Microsoft 365 v3.9.0 Upgrading SPFx projects to v1.12.1 Reusable SPFx React Controls v3.1.0 v2.7.0 (SPFx v1.11), v3.1.0 (SPFx v1.12.1) Reusable SPFx React Property Controls v3.1.0 v2.6.0 (SPFx v1.11), v3.1.0 (SPFx v1.12.1) PnP SPFx Generator v1.16.0 Angular 11 support PnP Modern Search v3.19 and v4.1.0 April and March 20th\nThe host of this call is Patrick Rodgers (Microsoft) @mediocrebowler. Q\u0026amp;A takes place in chat throughout the call. Thanks everybody for being part of the Community and helping making things happen. You are absolutely awesome!\nActions  Reserve date - SharePoint Monthly community call \u0026ndash; 11th of May 8 AM PDT | https://aka.ms/sp-call Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; May 24th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; May PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; May 13th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; May 20th AMA (Ask Me Anything) \u0026ndash; Tech Community \u0026ndash; May 11th AMA (Ask Me Anything) \u0026ndash; Microsoft Graph \u0026amp; MGT - June First Time Presenter \u0026ndash; May 25th More than Code with VSCode \u0026ndash; May 27th  Maturity Model Practitioners \u0026ndash; May 18th PnP Office Hours \u0026ndash; 1:1 session - Register   Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Adding support to add video with a text to modern pages with this video banner web part \u0026ndash; from the Properties Pane, select a video, add banner title text and color it, adjust video brightness and banner height. This elegantly coded modern web part was built with SPFx using standard PnP property pane controls in less than 3 hours. Add the web part to top of your pages. The web part has only one functional component named: VideoBackground.   Building company stories web part for story experience \u0026ndash; this web part allows you to add images to a SharePoint List, and renders (cycles) them with related text on page similar to Instagram Stories as a way to engage social media adept employees. Text, images, and author details stored in a SharePoint list. Uses an existing open-source React component called \u0026ldquo;react-insta-stories\u0026rdquo; and several Microsoft Graph Toolkit components. Sample in PnP Samples repository.   Building react groups and teams web part for aggregating detailed information for end users \u0026ndash; this web part helps logged-in user quickly find their Microsoft Teams and Microsoft 365 Groups sites/content. For selected site, options to go to site, mail, calendar, or Planner. Match site color theme with one click. Filter by public, private or all Groups/Teams. The main React component is MicrosoftGroups.tsx. A brilliant code walk-through by first time presenter Alison Collins.   SPFx extension samples: (https://aka.ms/spfx-extensions)\n Print List Item Command View Set - Ari Gunawan | @arigunawan3023  SPFx web part samples: (https://aka.ms/spfx-webparts)\n Teams Membership Updater - Nick Brown | @techienickb OneDrive Finder - André Lage | @aaclage Organization Chart - João Mendes | joaojmendes Remote Event Receiver Manager - Dan Toft | @tanddant All Microsoft 365 Groups and Teams - Alison Collins and Sam Collins | @Samc148 Thank you for your great work. Samples are often showcased in Demos.   Agenda items  Latest updates on SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 5:24 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 7:49 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 9:22 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 10:27 PnP SPFx Generator - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 11:57 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 12:18  Demos   Demo: Adding support to add video with a text to modern pages with this video banner web part \u0026ndash; Mohamed Derhalli (BDO Canada) | @MohamedDerhalli | Deck \u0026ndash; 13:13\n  Demo: Building company stories web part for story experience \u0026ndash; Luis Mañez (ClearPeople) | @luismanez | Deck \u0026ndash; 18:39\n  Demo: Building react groups and teams web part for aggregating detailed information for end users \u0026ndash; Alison Collins \u0026amp; Sam Collins (Coupled Technology) | @samc148 | Deck \u0026ndash; 29:39\n  Resources Additional resources around the covered topics and links from the slides.\n  The presentation used for this community call\n  Blog post - Introducing React Video Banner Web Part   Repo - Video Banner   Blog post - Community sample: Engage your users with SharePoint stories/reels   Repo - Company Stories Webpart   Alison\u0026rsquo;s Blog: Graphgod \n  Repo - All Microsoft 365 Groups and Teams with SPFx   Framework - v1.12.1 npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  Gallery - Microsoft 365 Extensibility look book gallery   PnP Weekly \u0026ndash; Episode 125 with Business Applications MVP guest Sandy Ussia (Lightning Tools ) | @SandyU | video | podcast\n  Viva Connections https://aka.ms/VivaConnections   General resources  CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring Tools - PnP Modern Search v4| https://aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other topics mentioned  SharePoint dev documentation SharePoint dev issue list  Upcoming Calls | Recurrent Invites   SharePoint monthly call \u0026ndash; May 11th at 8:00am PDT | https://aka.ms/sp-call\n  Microsoft Graph call \u0026ndash; June 1st at 8:00 am PDT | https://aka.ms/microsoftgraphcall\n  Office add-in monthly call \u0026ndash; May 12th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; May 13th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Adaptive Cards monthly call \u0026ndash; May 13th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Microsoft Teams monthly call \u0026ndash; May 18th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall\n  Power Apps monthly call \u0026ndash; May 19th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  SharePoint Framework call \u0026ndash; May 20th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Microsoft Identity Platform \u0026ndash; May 20th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar   Microsoft Graph call \u0026ndash; June 1st at 8:00 am PDT | https://aka.ms/microsoftgraphcall PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 7th of May 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-recording-6th-of-may-2021/images/210506-together-mode_hu80cbb12e1bef4d80fc00dc69f7ce8d35_3812423_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-recording-6th-of-may-2021/","tags":[],"title":"SharePoint Framework Community Call Recording -- 6th of May, 2021"},{"categories":["Community post"],"contents":"Introduction Wouldn\u0026rsquo;t it be nice to have a timer at meetings, so that everybody can see how much time has passed and how much is remaining? A timer for everybody to see. To make this transparent and accessible to everyone, I wanted to build a timer app which you can use in Teams meetings.\nAnd since we all get better at delivering and receiving virtual meetings, workshops and events, we all discover different techniques on delivering content. In a lot of agile techniques, time plays a relevant role. If you\u0026rsquo;re familiar with agile software development, Scrum in general or Stand-up meetings you know how effective timeboxing can be.\nSo I build a timer app and made it Microsoft Teams ready 😁\nI\u0026rsquo;m gonna share, how I build it, so you can build something similar with the timer control, which caused the whole idea.\nYou can also just download my sample, I\u0026rsquo;ve published on M365 PnP Power Platform Samples. You get all the images and all the code to use and improve it (tag me if you did, I\u0026rsquo;d love to see if this thing can grow ;)). It\u0026rsquo;s all for free y\u0026rsquo;know?\n I will split this blog into two parts:\n Building the app Make it available in Microsoft Teams meetings  Prerequisites To build this app you just need access to the maker portal of PowerApps. You don\u0026rsquo;t need any data source or premium connectors.\nWhen you want to make the app available in Microsoft Teams meetings you need the administrative rights to upload custom build apps in your Teams.\nAny code editor will come in handy (I prefer Visual Studio Code), but don\u0026rsquo;t worry, you don\u0026rsquo;t need to know how to write code or anything.\nAbout the app Before we start, here\u0026rsquo;s a picture of the finished app.\n[   I build this in the portrait orientation, since I want it to be used in Teams meetings. That means, it has to fit in the meeting side panel.\nIn the upper half you see a classic timer which shows the remaining time and three buttons: Start, Stop and Reset.\nYou also have four buttons to set the timer to a certain duration. In this case I went for 10 seconds, 30 seconds, 3 minutes and 5 minutes.\nIn the lower half you see two things:\n A slider indicating the remaining time and a bar turning from blue to red as the time runs out. A pie chart divided into quarters to visualize the remaining time  Accessibility Note I\u0026rsquo;d like to make it very clear in the beginning, that the colors are no coincidence. Initially I started with a classic color scheme: red and green. But then I realized that red-green colorblindness is one of the most common visual disorders. I switched the colors to make sure that everybody can see everything on the screen. Learn more about accessibility.\nOn all the Power App applications you can find the checker symbol in the upper right corner. It\u0026rsquo;s a very easy step to make sure that your product (app or flow or slide or whatever) reaches more people. We want to include everyone, correct? Correct!       Building the app We have three steps to set up this app:\n Build the timer in the upper half of the app. Build the visualization in the lower half of the app. Make it look pretty.   Build the timer in the upper half of the app At first you start with inserting four things:\n One timer input. Three buttons for controlling the timer. Four buttons to set the timer.  You will use the buttons to start, stop and reset the timer (think about renaming your controls in the tree view to remain an overview over all your components). Here is how to edit the parts:\n Timer input **[   Start by changing the Duration into a variable. I called it \u0026ldquo;Dauer\u0026rdquo; (sorry for the german, but you can call it whatever you like). The timer shows now the duration we put into that variable. By default, the timer starts counting upwards, but since we want to show the remaining time, we have to customize the Text property:\nReplace the default function\nText(Time(0, 0, Self.Value/1000), \u0026quot;hh:mm:ss\u0026quot;)\nwith this function\n*Text(Time(0, 0, (Timer4.Duration-Timer4.Value)/1000), \u0026quot;[$-en-US]mm:ss\u0026quot;) *\nNow the timer shows only the minutes and seconds and starts on whatever is written in the variable \u0026ldquo;Dauer\u0026rdquo;. And it\u0026rsquo;s ticking downwards. Not bad.\nButtons to set the timer Now we have to work further with that variable Dauer we set the timer on.\nYou add four buttons and change the text to \u0026ldquo;10 sec\u0026rdquo;, \u0026ldquo;30 sec\u0026rdquo;, \u0026ldquo;3 min\u0026rdquo; and \u0026ldquo;5 min\u0026rdquo; (remember to use the \u0026ldquo;\u0026rdquo;, because the text is just a string ;))\nThe magic happens on the OnSelect property. Set it for each button to the following function:\n10 sec button: UpdateContext({Dauer:10000})\n30 sec button: UpdateContext({Dauer:30000})\n3 min button: UpdateContext({Dauer:180000})\n5 min button: UpdateContext({Dauer:300000})\nThe timer control works with milliseconds, so you have to type your desired duration in milliseconds. When you select e of the buttons, you change the variable \u0026ldquo;Dauer\u0026rdquo; to the specific value and since the timer value show whatever the variable Dauer is set to, you can choose the duration.\nNow let\u0026rsquo;s take a look at the three buttons we want to use to control the timer.\nStart Button We set the OnSelect property to this function:\n UpdateContext({ClockTicking: true})\nWe are initializing a variable named ClockTicking and set the value to true. When we\u0026rsquo;re already on it, we use the same variable for the Stop Button.\nStop Button We set the OnSelect property to this function:\nUpdateContext({ClockTicking: true})\nThis way we have buttons to control the variable here. Logically, we have to tell our Timer input that it has to use this variable to start and to stop.\nTimer input Change the Start property to ClockTicking \nSince we want the timer to not automatically reset at the end, but to control it with the button, we set the OnTimerEnd property with this function:\nUpdateContext({ResetIt:false}); UpdateContext({ResetIt: true})\n   Now we have a timer that can be set to the values of the four buttons on the right side AND we can control it with three buttons. Neat!\nNext stop: the visualization.\n Build the visualization in the lower half of the app We have two parts here: the slider on the right side and the pie chart on the left. We\u0026rsquo;re going to start with the slider\nSlider Control To build this, start to insert the slider control.\n[   Now it\u0026rsquo;s time to flip it over.\nChange the Layout property to Vertical\nSet the Max property to Dauer/1000. This way it shows, whatever Dauer is.\nAnd to link the position of the handle to what your timer is showing set the Default property to (Timer1.Duration-Timer1.Value)/1000 Now you already have a slider whose handle slowly moves down while your timer counts down.\nHow cool is that?\nBefore we make it pretty, we set up the last element.\nThe pie chart This chart consists of five icons, put on top of each other. You will need the following icons:\n Circle (2x) Quarter circle (1x) Half circle (1x) Three-quarter circle (1x)     You need to layer these in the following order:\n   Set the Fill property to of the top four elements to some blue, the full circle at the bottom is going to be red. The exact colors don\u0026rsquo;t matter at this point. We will beautify the app in the last part, don\u0026rsquo;t worry.\nDon\u0026rsquo;t worry about the looks, we will change them in the last chapter.\nAs the timer and the slider count down, you will, step by step, let the single icons disappear by setting the Visible property to the following function:\nFull circle on top: If(Slider1.Value \u0026gt;=22.5,true,false) Three-quarter circle: If(Slider1.Value \u0026gt;=15,true,false) Half circle: If(Slider1.Value \u0026gt;=7.5,true,false) Quarter circle: If(Slider1.Value \u0026gt;0,true,false) When the timer reaches the value 22.5 the full circle on top will disappear, revealing the Three-quarter circle. That indicates that only three quarter of the time remains. It is important to place the circles on top of each other.\n That is all you need to do. What\u0026rsquo;s left to do is, to make this whole thing pretty. Are you ready?\n Make it look pretty I will split this part, again, in three parts:\n The timer in the upper part The slider and the chart in the lower part The background   The timer in the upper part I added a picture of a timer I\u0026rsquo;ve made myself. You can download and use it with the whole sample from the PnP Power Apps samples github repository.\nYou select Insert \u0026gt; Media \u0026gt; picture to use that picture in your app. Now place it in the middle of the screen (Power Apps helps you with snapping it to the middle if you drag it near the middle).\nNow you can remove the border and background from your\u0026hellip;\n Timer input The Start Button The Stop Button And the Reset Button  In the Timer properties, change these values to transparent:\n [   I did the same for the Start, Stop and Reset Button and placed them in the middle of a circle icon, I\u0026rsquo;ve added (Insert \u0026gt; Icon \u0026gt; Circle). Place the button over the circle icon and align it in the middle and in the center. You do that by right-clicking on the button and use the align feature. With Reorder you can also place the icon under the button.\n   Now select the icon and the button and group them (Ctrl+G), so you can place them in the spare holes of the timer picture.\nIn the end I group the whole timer pictures and all controls and labels to place them easily.\nThe slider and the chart in the lower part I set the size and position values of the circles like this, but you can place them wherever you like:\n   Now for the slider. Set the size and position values like this:\n   Set the Handle size value to 50.\nSet the Rail value to 20.\nThe four-colored scale behind the timer are four rectangle icons that I placed over each other.\nThe colors Now there is one last step, you have to set all the correct colors, And of course, I have another little trick, if you are lazy (like me).\nI like to set all the colors I\u0026rsquo;m going to use in an app in a variable. Then I can set the Fill or color value for each element to the name of the variable and don\u0026rsquo;t have to remember the hexcode for every color over and over again.\nYou want to set those variables on the OnStart property of the app itself, so the colors will show when, you start the app.\n[    Here is the function that I used:\n Concurrent( Set( Background_color, ColorValue(\u0026#34;#f4f4fc\u0026#34;) ), Set( Font_color, ColorValue(\u0026#34;#484644\u0026#34;) ), Set( Element_background, ColorValue(\u0026#34;#e2e2f6\u0026#34;) ), Set( Element_color, ColorValue(\u0026#34;#484644\u0026#34;) ), Set( Button_hover_Fill, ColorValue(\u0026#34;#464775\u0026#34;) ), Set( TheRed, ColorValue(\u0026#34;#cc4a31\u0026#34;) ), Set( Blurple_lightish, ColorValue(\u0026#34;#6264a7\u0026#34;) ), Set( Blurple_light, ColorValue(\u0026#34;#8b8cc7\u0026#34;) ), Set( Blurple_medium, ColorValue(\u0026#34;#6264a7\u0026#34;) ), Set( Blurple_darkish, ColorValue(\u0026#34;#464775\u0026#34;) ), Set( Blurple_dark, ColorValue(\u0026#34;#33344a\u0026#34;) ) )  Here is an overview on variables and their purposes.   Background_color: the background of the app Font_color: Color property of the timer Color property of the Duration buttons on the right Color property of the scale labels next to the timer Element_background: Fill property of the duration buttons on the right Fill property of the buttons to start, stop and reset the timer ValueFill property of the slider Element_color Color property of the icons around the circles Button_hover_Fill HoverFill property of the timer HoverFill property of the Duration buttons on the right HoverFill property of the buttons to start, stop and reset the timer TheRed HandleFill property of the slider Fill property of the red circle Blurple_lightish Fill property from the bottom rectangle behind the slider Blurple_light Fill property from the next larger rectangle behind the slider Blurple_medium Fill property of the blue circle on top Fill property of the three-quarter circle Fill property of the half circle Fill property of the quarter circle Blurple_darkish Fill property from the second largest rectangle behind the slider Blurple_dark Fill property from the largest rectangle behind the slider\nThe result should look a lot like this:\n   As you can see, I added Fluent UI Icons on the buttons of the timer (if you don\u0026rsquo;t know how to use them, have a look at this awesome blog from Luise Freese), four lines around the circle to indicate quarters and halves and an arrow to make it look nice.\nThe lines around the circles are arrow icons.\nThe round arrow, is an image I uploaded. You can find it in my sample on PnP Power Platform Samples (you can also find the timer image and the icons. Everything\u0026rsquo;s included).\nNext steps Of course, I have a few more ideas in mind. I\u0026rsquo;m planning on adding two more steps next:\n I would like to set the timer by just typing a duration into it. Or into a label somewhere around. I want to set the timer to any duration I like, instead of choosing from just four buttons. But I have no idea how to do that. Help! I would like to visualize the circle in the lower half differently. Currently it disappears at three quarters of the elapsed time, at half and at three quarters. I would like to see the circle count down a little bit smoother. But for this I still lack the idea for the implementation   I\u0026rsquo;d love to hear what you think about it. Do you like it? Do you think it\u0026rsquo;s going to be helpful for yourself or your business? Do you think I should add a few more things?\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-recording-6th-of-may-2021/images/210506-together-mode_hu80cbb12e1bef4d80fc00dc69f7ce8d35_3812423_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/post/let-s-build-a-timer-app-for-teams-meetings/","tags":["Power Apps","Microsoft Teams"],"title":"Let's build a timer app for teams meetings"},{"categories":["Community post"],"contents":"We are excited to announce that we are again extending our virtual Microsoft 365 Patterns and Practices (PnP) team with additional community members. PnP team is responsible of the different community activities in different community channels, including our open-source work in the GitHub. This team consist of Microsoft employees and community members (MVPs) focused on helping the community the best use of Microsoft products, like Microsoft Teams, Power Platform, OneDrive, SharePoint or API layer like Microsoft Graph. We announced our new PnP team model in April 2020 with additional community members and are further extending this team with new community members. We believe that working together as a one unified team across the organization barriers, we can make even larger worldwide impact and helping other community member to succeed on adopting different practices within [Microsoft 365]{.brand} platform.\n Gautam Sheth - Software Designer\n   Gautam is a Software Designer at Valo. Coming from a developer background, he builds products using the Microsoft 365 developer stack. He is also a maintainer of the PnP PowerShell repository and a contributor to PnP Framework and SPFx related repositories. He loves to contribute to the community and share his learnings. He is a firm believer in Sharing is Caring and helping others. You can read his blogs at https://gautamdsheth.wordpress.com and tweets @gautamdsheth Outside of work, you can find him reading books, listening to Bollywood songs or occasionally speaking at local community/user group events.\nPatrick Lamber \u0026ndash; Microsoft 365 Solutions Architect\n   Patrick is a Microsoft Developer MVP and Microsoft 365 solutions architect at Experts Inside AG. He builds business solutions in the Microsoft 365 ecosystem for his international customers and he is the main developer of EasyLife 365 a new governance solution for Microsoft 365. Patrick actively contributes to various projects on GitHub. You can follow him on GitHub. When Patrick isn\u0026rsquo;t coding or helping customers, you will find him walking his dog or dancing Salsa around the world.\n If you are looking for more details on what [Microsoft 365]{.brand} Patterns and Practices (PnP) is all about, see more details on the different activities and projects from https://aka.ms/m365pnp, including all community calls, open-source projects, samples and more. There are also numerous exciting new projects under development which will be released as open-source solutions soon addressing Microsoft Teams, OneDrive, Microsoft Graph and SharePoint areas. We want to thank also the countless of other community members who have been involved on this journey for past years. We still consider this as just a start and are looking your feedback and input to further improve the processes and model we use. Got ideas, feedback, comments on our community work? \u0026ndash; Don\u0026rsquo;t hesitate to let us know. We are here for you. Everyone is welcome!\nSharing is Caring!\nPrevious related announcements\n New Microsoft 365 Patterns and Practices (PnP) team members - February 2021 - April Dunnam (Microsoft), Emily Mancini (Sympraxis Consulting) and Veronique Lengelle (CPS) New Microsoft 365 Patterns and Practices (PnP) team members - December 2020 - Luise Freese and Sébastien Levert  New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 - Albert-Jan Schot (Portiva), Koen Zomers (Microsoft), Paul Bullock (CaPa Creative), Rabia Williams (Microsoft) and Yannick Plenevaux (PVX Solutions)   Friday 7th of May, 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-recording-6th-of-may-2021/images/210506-together-mode_hu80cbb12e1bef4d80fc00dc69f7ce8d35_3812423_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/post/new-microsoft-365-patterns-and-practices-pnp-team-members-may/","tags":[],"title":"New Microsoft 365 Patterns and Practices (PnP) team members -- May 20215"},{"categories":["Community post"],"contents":"While working on a project which uses Microsoft Graph APIs, I found myself opening the Microsoft Graph Explorer a lot to check which paths/parameters were available. The Microsoft Graph Explorer is a great tool, but I love not to change context too much. As I like to create Visual Studio Code extensions, I did not have to think long to start building a new extension.\nBackground info The good news for me was that Microsoft Graph Explorer has an API for retrieving the Open API information. This API returns all the available endpoints and their parameters per path. All I had to do, was create the logic to know when you are writing a Microsoft Graph URL and call the API to provide the suggestions.\nThe extension  Info: The Visual Studio Code extension can be found on the marketplace: MS Graph Completion. The initial version of the extension supports the GET API paths, query string parameters, and their values.\n  The /users/ API completion allows you to add a {user-id} token. ![Screenshot 2021-03-23 at 21.04.10.png](images/Screenshot 2021-03-23 at 21.04.10.png)\nWhen providing your user-ID or username, it will automatically tokenize it. ![Screenshot 2021-03-23 at 21.04.25.png](images/Screenshot 2021-03-23 at 21.04.25.png)\nWhen would you use it? There are various reasons for this. My reasoning, as mentioned, was to know which parameters are available for selecting and expanding quickly Another option could be to use it in combination with the popular REST Client - Visual Studio Marketplace\n![Screenshot 2021-03-24 at 08.30.52.png](images/Screenshot 2021-03-24 at 08.30.52.png) Let me know how you would use it and feel free to contribute to the project MS Graph Completion - GitHub Repository\nThanks to the Microsoft Graph team for the API and Graph explorer\n","image":"https://pnp.github.io/blog/post/new-vscode-extension-for-autocompleting-your-microsoft-graph/images/how-it-works_hu34672f88791e73f77d14ba9442934388_4136029_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/post/new-vscode-extension-for-autocompleting-your-microsoft-graph/","tags":["Microsoft Graph"],"title":"New VSCode extension for autocompleting your Microsoft Graph APIs"},{"categories":["Community post"],"contents":"Which community project do you maintain? pnp/generator-spfx\nHow does it help people? Allows people to create more advanced SPFx project with support for other frameworks VueJS, Handlebars and Angular Elements.\nWhat have you been working on lately? SPFx 1.12 integration\nWhat do you do at work? Designer and Solution Architect.\nWhy are you a part of the M365 community? Because of all the great people.\nWhat was you first community contribution? Make SharePoint 2010 responsive.\nOne tip for someone who’d like to start contributing Just do it.\n","image":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-stefan-bauer/images/stefanbauer_hub33fd5e1fec67f8152b593d5aa08d5cb_130991_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-stefan-bauer/","tags":[],"title":"Microsoft 365 PnP Community Spotlight: Stefan Bauer"},{"categories":["Community post"],"contents":"Matt Collins Jones and I presented API\u0026rsquo;s \u0026ndash; The most powerful tool, anyone can use! for D365 UG and Swiss Power Saturday recently and I thought it would be good to share the Cloud Flow I created to automate the onboarding of external users to a Microsoft Team.\nThis is usually an admin driven activity \u0026ndash; A team owner will have to type in the email address for each guest they want to add, rather than something you can push to external users and allow them to request access.\nBy using the Graph API via a Custom Connector, Microsoft Forms and Power Automate, we are able to realize this quickly and save a lot of time and effort in the manual process.\nAlso, I have been lucky to have this solution accepted as part of the samples in the Microsoft Patterns And Practices initiative, so the Flow, Custom Connector and implementation instructions are available in GitHub.\nGetting Hands-On With Graph The main part of this flow is numerous calls to the Graph API. The Graph API is Microsoft\u0026rsquo;s standard endpoint to expose and interact with data relevant to your tenant. It includes Microsoft 365 (such as Teams, Exchange, SharePoint, Workspace Analytics), Enterprise and Mobility and even Windows 10 activities and devices. It really should be seen as a single stop shop for anything and everything in your tenant. The only thing it doesn\u0026rsquo;t expose is D365 data. There is a Graph connector already available in Power Automate, but it is very limited to Security considerations.\nThankfully, the rest of the Graph API abilities are available, but you have to go via a custom connector. You could call these directly via an HTTP request action, but by wrapping the Graph API in a connector, you are enabling other members of your organization to re-use the connector and security you establish. Microsoft also allows you to \u0026ldquo;play\u0026rdquo; with the Graph API as well, via the Graph Explorer. This web interface shows you all the sample calls you can make and also what permissions you require to call it and allows you to set up a call without using Power Automate or configuring a connector. It really should be the starting point for any Graph Customer Connector.\n   If things go wrong, it is usually around the permissions. Within the Graph Explorer you can consent to these extra permissions on the fly, but more importantly, tells you what you need to configure in the permissions of your App registration to allow your connector the same access.\n   Select New client secret give it a name \u0026amp; expiry date and select Save.\n   Ensure you copy the Value here, you will only be able to see this for a short while, if you navigate away it will be gone. Not a big deal, just recreate the client secret, but you will need it later. Now select API permissions. This will list what permissions this registration has, and by inference, the caller using the client secret/application id. Select the Add a permission button.\n   This presents a choice of which API to expose. The first on the list is Microsoft Graph, the one we want.\n   Select Delegated Permissions (Custom connectors doesn\u0026rsquo;t support Application permissions yet, will run in the context of the person who runs the flow, so use an admin/system account) then type in the permission you want, listed here.\n Directory.ReadWrite.All User.Invite.All User.ReadWrite.All     Select Add Permissions to return you to the Configured permissions screen, then select Grant Admin consent button. This shortcuts and pre-approves the app. Leave this tab open and let\u0026rsquo;s go and define our custom connector.\nDefining The Custom Connector Jan Bakker has done an excellent job of walking you through this, Build a custom connector. His article goes into a lot of detail, so I will just take you through what is needed for this project. In make.powerapps.com, select the appropriate environment and chose Custom Connectors under Data. Then select New custom connector. You can import from various sources, but we want to create from blank, give it a name then fill out the next page.\n   On the next screen, there are four tabs, which we need to step through. First the General Tab.\n   Other stuff is nice to have and you *should *document your work. Ensure Scheme is HTTPS and Host/Base URL are populated.\n Host \u0026ndash; graph.microsoft.com Base URL \u0026ndash; /v1.0  Select the Security Tab next, Authentication type is OAuth 2.0. You should be presented with the below screen.\n   Now, this is where we need to use the values you saved (you did save them?) when you were registering your app up Client Id is populated with the Application (client) ID, the Client secret is populated with the Value from the Client Secret grid. Login URL will be populated for you. The Resource URL value should be https://graph.microsoft.com.Select Create Connector now, as you need the Redirect URL, created when you create the connector to put back into your App registration to complete the security process.\n   I think that this is now standard, but just in case, copy the Redirect URL and go back to your App Registration in Azure AD. select the link highlighted.\n   Select Add a platform then chose Web. Enter the Redirect URL from the Custom Connector. Now we are ready to define the actions for our connector.\nCreating the Actions For our flow, we need 3 actions, Get the owners of a team, Get a user and Invite a User. This is where Graph Explorer and Postman help. You need to establish what you are sending and what you expect back for each action. For example, lets walk through the Get Owners of a team. Select New Action and Populate General section. The Operation ID needs to be unique and is what appears within Power Automate when you select it.\n   I usually use the same for each, but be creative and descriptive. Select Import from sample then use the url below as the URL and select Get as the Verb. URL \u0026ndash; https://graph.microsoft.com/v1.0/groups/%7BteamId%7D/owners\n   By placing teamid in curly brackets { } you denote to the custom connector you want to use a parameter in that URL. You can call https://graph.microsoft.com/v1.0/groups/%7BteamId} (without the /owners) but that will return the detail from the group. In this I want get associated data, hence the /owners. Select Import. You are returned to the definition screen, where we can see that the request has been populated for us.\n   We are ready to test our Get Owners now. Update the connector once more then head over to the Test tab. You will have to create a connection if not already done, which prompts you to establish who you are running the connector under (only for testing). Then supply a team id. These can be found by using Graph Explorer to find all teams. Hit the Test operation and if everything is working you will get a 200 response with some JSON in a body showing you all the information about the owners.\n   To just define the others\nGet User Verb: Get, URL: https://graph.microsoft.com/v1.0/users?$filter=\nInvite User Verb: Put, URL: https://graph.microsoft.com/v1.0/invitations, Body is below, as you need to define a new invite, with the required parameters. The data doesn\u0026rsquo;t matter, just the parameters that you need to pass.\n{ \u0026#34;invitedUserEmailAddress\u0026#34;: \u0026#34;emailaddress\u0026#34;, \u0026#34;inviteRedirectUrl\u0026#34;: \u0026#34;https://myapp.contoso.com\u0026#34;, \u0026#34;invitedUserDisplayName\u0026#34;: \u0026#34;Testy McTest\u0026#34;, \u0026#34;sendInvitationMessage\u0026#34;: true } Make sure you test all your actions and lets move on to the Form.\nMicrosoft Form To Capture Information Not going to dwell here, as others are doing a much better job at describing Forms. Basically, a simple form to define First and Last name, the email address and a choice field to define which team the user wants access to.\n   The teams list will have to be maintained to those that you want the public to be able to request access to. Finally, lets take a look at the flow.\nPower Automate Definition This Flow is triggered by a new response being submitted against the Form defined above. Next, get the response details.\n   Next, retrieve all the Teams in your environment. This will return a JSON object which defines an array of Team definitions. We need to filter that to the one the user selected so that we can get the team id.\n   To do this, I use the Filter Array action, pass in the output from the List Teams and ensure we select where team Name is equal to the team selected (the Which Team? field in my case).\n   Next, is a compose statement. I do that just to simplify the way the flow works, as the return of filter array is an array, and I just want the first one.\n   body(\u0026#39;Filter_array\u0026#39;)[0]?[\u0026#39;id\u0026#39;] Next, lets get the Owners of the team selected, using the Id just retrieved. This is the first time using the Custom Connector, it is available under the Custom Tab.\n   Selecting the connector will show the actions or triggers available.\n   The parameters are those that were defined in the Custom connector, passing in the output from the compose above.\n   Now, the response back from Get Owners is a JSON object, so next, Parse the JSON so there is a list of JSON objects for the flow to use. All that is needed in the approval that comes next is the email address(es) of the return from the owners call. But the approval needs a semi-colon separated list of emails. To achieve this, firstly use a Select to just return the email address from the JSON object, then join the output to that with a semi colon.\n   Next, start an approval. This is populated to let the owner know who has asked for access to the team and which team.\n   Check whether the response is positive. If this was for production, I would probably send an email to the requesting user to let them know that they were denied access. You could also use the response written in the rejection.\n   In the Yes path, call the Custom connector again to check if the user is already a part of your organization as a guest user. As the parameter is expecting a query, use the expression below\n   mail eq \u0026lsquo;Email Parameter from the Form response\u0026rsquo;\nmail eq \u0026#39;Email Parameter from the Form response\u0026#39; Next, check the length of the returned object from the custom connector. This basically checks if the user already belongs to your environment.\n   length(outputs(\u0026#39;GetUser\u0026#39;)?[\u0026#39;body/value\u0026#39;]) If there is a value in the return, use the return to invite the user to the team.\n   The User id is returned by using the expression below\nbody(\u0026#39;GetUser\u0026#39;)?[\u0026#39;value\u0026#39;][0]?[\u0026#39;id\u0026#39;] On the negative side, firstly invite the user to your organization by using the final action of the custom connector.\n   And finally, use the response from your custom connector, the invited user to the team.\n   That\u0026rsquo;s it! There is a lot of configuration here, but you can see how you can extend your usage of Power Automate to automate a function usually confined to manual work by the team owner.\nThis post was originally published on LinkeD365.blog\n","image":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-stefan-bauer/images/stefanbauer_hub33fd5e1fec67f8152b593d5aa08d5cb_130991_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/using-power-automate-and-graph-api-to-manage-external-access-to/","tags":["Microsoft Graph","Power Automate","Microsoft Teams"],"title":"Using Power Automate And Graph API To Manage External Access To Teams"},{"categories":["Community post"],"contents":"Custom Connector vs HTTPS request - When to use what? First of all: a custom connector and a https request generally do the exact same thing. They both call an endpoint of a specific api to get data back.\nSince this is a blog for beginner, I won\u0026rsquo;t got into the very details of custom connectors and http requests, yet there is a straight forward explanation for when to use a custom connector instead of a http request:\nIf more people than just you should be able to use that API call, it makes sense to use a custom connector, because you can easily share it within your tenant.\nOr, if the API call you have in mind will be used more than once (in different flows or apps), you might consider creating a custom connector.\nMultiple people can use your connector OR you could even use multiple actions in one connector. You see, there are a few more possibilities with custom connectors to http requests.\nSo, let\u0026rsquo;s build one right now, shall we? 👏🏼\nBuild a custom connector Since this is part two of my mini series \u0026ldquo;working with APIs\u0026rdquo; I\u0026rsquo;m using the same scenario and API as last time. I use an open API to get the number of the day from a website called MathTOOLs. I will post this number in a Microsoft Teams channel afterwards.\nFirst of all, navigate to your Power Automate dashboard. Select \u0026ldquo;Data\u0026rdquo; and then \u0026ldquo;Custom connectors\u0026rdquo;\n   no, it\u0026rsquo;s not the Connectors menu, but the Data menu\nIf you already have some, they will be listed here, if not this page is empty. Select \u0026ldquo;+ New custom connector\u0026rdquo; in the upper right corner and then \u0026ldquo;Create from blank\u0026rdquo;.\n   Now you are in the menu to create your own custom connector. At the top of the page you can see the necessary steps in a navigation:\n  General\n  Security\n  Definition\n  Code (Preview)\n  Test\n  General\n  On the first page is only one mandatory field to fill out. We need to give a Host for our custom connector (but I strongly recommend to fill out the Description as well. Especially when you want to share it, give your colleagues an idea of what your custom connector does ;)). Now you might think, that\u0026rsquo;s the endpoint, like in the previous blog, but it\u0026rsquo;s not. The endpoint is connected to a certain method (GET, PUT, POST, PATCH, DELETE) and since we haven\u0026rsquo;t defined our method yet, this is something else. The host is a part of the URL, usually the documentation will tell you.\nIn this case, it\u0026rsquo;s api.math.tools\nYou can also upload a nice icon for you connector (which I love, obviously), just make sure that the file is .png or .jpg and smaller than 1MB.\nYou don\u0026rsquo;t need to fill out the rest. We will look into that at a another blog of this series. For now we\u0026rsquo;re good and we can select \u0026quot;Security\u0026quot; either in the lower right corner or in the navigation at the top of the page.\n   both links work, the one at the top and the one in the lower right corner\n2. Security Since we use an open API we don\u0026rsquo;t need to fill out anything here\n3. Definition Now things are getting interesting, since we\u0026rsquo;re defining the other parameters here. For this example, we just want to create an action that gets us the number of the day.\nStart by selecting \u0026ldquo;+ New action\u0026rdquo; on the right hand side.\n   Once again, only one mandatory field, yet I recommend to fill out the Summary and the Description as well.\nSummary: This will be the name of the action of your custom connector\n   Description: Gives colleagues a good idea of what it does\nOperation ID: This is going to be the string, which is used in the operation. Keep it simple, I guess.\nAfter that information is provided it\u0026rsquo;s time for our request.\n   Select \u0026ldquo;+ Import from sample\u0026rdquo; and the next menu should look familiar to you. Here we can choose the method as well as the URL.\nIn this case the method is: GET, the URL is https://api.math.tools/numbers/nod\n(We provided the same information at the last part, where we needed to give those to the https request, remember?. When we\u0026rsquo;re done, select \u0026quot;Import\u0026quot; to finish this step.\n   feels familiar?\nNow it\u0026rsquo;s time to actually create the connector. Select \u0026quot;Create connector\u0026quot; in the upper right corner and keep your fingers crossed\nUsually you get a success notification :white_heavy_check_mark: above the upper navigation.\n4. Code (Preview) Once again, no work for us here, so we skip this part\n5. Test There is one last task for us to finish our custom connector. We need to create a new connection. Select \u0026ldquo;+ New connection\u0026rdquo;.\nThere should appear a connection with the name of your connector in the \u0026ldquo;Selected connection\u0026rdquo; field.\n   Now we just need to test the connector. Select \u0026ldquo;Test operation\u0026rdquo; and wait for the response.\nIf you did everything right you should get a status 200 response. This is a good thing :)\nCongratulations, you just created your very own custom connector. Now let\u0026rsquo;s take this baby for a test drive in Power Automate, shall we? 8)\nUse your custom connector in Power Automate As in the last part, we want the information about the number of the day and use it somewhere. Let\u0026rsquo;s go for Microsoft Teams once again and post the number of the day in a channel.\nOur flow contents of three actions:\n  Get number\n  Initialize variable (so our number is always up to date)\n  Post message in a chat or channel\n     In order to select your custom connector you select \u0026ldquo;Custom\u0026rdquo; when choosing a connector in Power Automate\n   Click on custom to see all custom connectors.\nSince our connector just has one action, that\u0026rsquo;s all we needed to do.\nNow let\u0026rsquo;s put the value in a variable, so the number of the day is always up to date. Select the action \u0026quot;Initialize variable\u0026quot; and put in the following information:\nName: I called mine NrOfDay_Con (most importantly you need a name that YOU will recognize later on ;))\nType: Choose string (since the number of the day is a sequence of characters)\nValue: We need to define the value of the variable. Do you remember the JSON object this API call will give us back? If no, check out the first blog of the series: Working with APIs in Power Platform for beginners. Basically we want to get a certain value within this JSON object, which we get with a function: `body(\u0026lsquo;Get_Number\u0026rsquo;)[\u0026lsquo;contents\u0026rsquo;][\u0026rsquo;nod\u0026rsquo;][\u0026rsquo;numbers\u0026rsquo;][\u0026rsquo;number\u0026rsquo;]`\nDo you recognize the difference to the last function we used for the http request? Just the body is different, because we named it that while creating the connector.\nLast step: include that variable in a Microsoft Teams message like a boss\n   And that\u0026rsquo;s it. That is how you call an API, get a JSON object back and use certain values from that object in Power Automate...with a custom connector. Congratulations :)\nI hope it was all clear and it did work out for you. If you have any questions, recommendations or found some typos, reach out to me on twitter.\nNext API topic: Both methods (https request and custom connector) are working fine for open APIs where we don\u0026rsquo;t need any authentication. Next blog will be about https requests with authentication. Let\u0026rsquo;s tame the auth beast together.\n","image":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-stefan-bauer/images/stefanbauer_hub33fd5e1fec67f8152b593d5aa08d5cb_130991_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/working-with-custom-connectors-in-power-platform-for-beginners/","tags":[],"title":"Working with Custom Connectors in Power Platform for beginners"},{"categories":["Community post"],"contents":"In my process of self learning regarding different technologies such us Azure, SPFX WebPart, React, Microsoft Graph, Node.js, Teams and all other Office 365 services, was surprise to find the current work already made by \u0026ldquo;Microsoft Graph Toolkit\u0026rdquo; and associated documentation on how to implemented with Microsoft Graph.\nThe amount of content and features already develop to integrate multiple platforms are definitely the Key to communicate with Office 365 and became easy to access content without a lot of effort, congrats to all the team. This sample use SharePoint Online SPFX WebPart with Mgt-File-List and Mgt-File Beta version control to retrieve Shared Libraries as existing in OneDrive, navigate between their folders and use filter by file extension in a simple way using Microsoft Graph API Drive and Site. Below a draw resuming the custom query\u0026rsquo;s made and what control uses to retrieve associated folders and files from different locations.\n   How the Mgt-File-List Work As OneDrive, this control allow to display Shared Files and Folders, for this ItemID (identity of the item to read, can be a folder or a file) has the main role on how to access content. To facilitate this access the control has multiple properties that allows call to content using different options such us: *custom query\u0026rsquo;s\nThis sample used the parameters SiteID (SharePoint Online Site ID) and ItemID it\u0026rsquo;s the ID of the root Library used on site to store documents and control to display files/folders from that Path and navigate between them.\nSolution also uses the property File-List-Query that allows to search files inside shared Libraries.\n\u0026lt;FileList siteId={this._siteID} itemId={this._itemID} \u0026gt;\u0026lt;/FileList\u0026gt; Where can I found SiteID of a site? Use the Site Graph API with search query based on hostname to retrieve ID\u0026rsquo;s of sites.\n\u0026#34;https://graph.microsoft.com/v1.0/sites?search=*****.sharepoint\u0026amp;$Select=id\u0026#34; List of Site ID\u0026rsquo;s:\n{ \u0026#34;@odata.context\u0026#34;: \u0026#34;https://graph.microsoft.com/v1.0/$metadata#sites(id)\u0026#34;, \u0026#34;value\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;*******.sharepoint.com,000000-0000-0000-0000-000000,000000-0000-0000-0000-000000\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;*******.sharepoint.com,000000-0000-0000-0000-000001,000000-0000-0000-0000-000001\u0026#34; }, ... How can I found the Root Folder ItemID from Site? This can be achieved using the SiteID from last query and call the drive root from Site.\nhttps://graph.microsoft.com/v1.0/sites/*****.sharepoint.com,000000-0000-0000-0000-000000,000000-0000-0000-0000-000000/drive/Root?$select=id This query returns the Item-id of the root Folder that can be used to display content in Control.\n\u0026#34;id\u0026#34;: \u0026#34;01CM5BY6********************************\u0026#34; Retrieve OneDrive Root Folder Item-id OneDrive is managed differently and there is no need of SiteID just make the following Drive call.\nhttps://graph.microsoft.com/v1.0/me/drive/root/?$Select=id PS: This query\u0026rsquo;s can be tested using the following site.\nhttps://developer.microsoft.com/graph/graph-explorer\nBelow some additional Mgt-File-List documentation regarding possible options to use.\n FileList specifications FileList Stories  This main query will allow to fully explore the Mgt-File-List features that were used in sample \u0026ldquo;react-oneDrive-finder\u0026rdquo;\n List of Drives Sites Content List and Breadcrumb Filter of Items Filter by file extension Custom Theme styles      Mgt provider and SharePointProvider It\u0026rsquo;s important that permissions are given from Microsoft Graph to SPFX WebPart that Mgt-File-List could make the necessary query\u0026rsquo;s.\nAccess to config/package-solution.json and ensure the following permissions are given on SharePoint package.\n\u0026#34;webApiPermissionRequests\u0026#34;: [{ \u0026#34;resource\u0026#34;: \u0026#34;Microsoft Graph\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;Files.Read\u0026#34; }, { \u0026#34;resource\u0026#34;: \u0026#34;Microsoft Graph\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;Files.Read.All\u0026#34; }, { \u0026#34;resource\u0026#34;: \u0026#34;Microsoft Graph\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;Sites.Read.All\u0026#34; }] Access to your code into BaseClientSideWebPart area and ensure SharePoint Provider is loaded with the current security access that Mgt-File-List control and custom graph query\u0026rsquo;s could access to Microsoft Graph content.\nimport { Providers, SharePointProvider } from \u0026#39;@microsoft/mgt\u0026#39;; ... export default class OneDriveFinderWebPart extends BaseClientSideWebPart\u0026lt;IOneDriveFinderWebPartProps\u0026gt; { protected onInit() { Providers.globalProvider = new SharePointProvider(this.context); return super.onInit(); } ... After defining the provider you should be able to include control and use parameter\u0026rsquo;s id without permissions errors.\nimport { FileList } from \u0026#39;@microsoft/mgt-react\u0026#39;; ... \u0026lt;FileList siteId={this._siteID} itemId={this._itemID} itemClick={this.manageFolder} \u0026gt;\u0026lt;/FileList\u0026gt; Breadcrumb Navigation It\u0026rsquo;s also possible to use Breadcrumb to include the path of folders where user is situated in the Library.\nThis can be achieve capturing the itemID of Folder listed in Mgt-File-List, using the event itemClick={(e)=\u0026gt;{ console.log(e.details);}\nMore information can be found on Mgt-File-List documentation or by sample \u0026ldquo;react-onedrive-finder\u0026rdquo;.\nFiltering file extensions The Mgt-File-List property fileExtensions allows to filter documents by file extension, this can be very handy when dealing with large amounts of documents.\nCode below shows how can be implemented a multiple file extensions filter.\nconst checkFileExtensions = (event: React.FormEvent\u0026lt;HTMLDivElement\u0026gt;, selectedOption: IDropdownOption) =\u0026gt; { let fileExtensions: string[] = []; if (selectedOption.selected == true) { fileExtensions.push(selectedOption.key.toString()); fileExtensions = [...fileExtensions,...this.state.fileExtensions]; } else { fileExtensions = this.state.fileExtensions.filter(e =\u0026gt; e !== selectedOption.key ); } this.setState({ fileExtensions: [...fileExtensions] }); }; ..... \u0026lt;Dropdown placeholder=\u0026#34;Select\u0026#34; label=\u0026#34;Select file extensions\u0026#34; multiSelect options={[ { key: \u0026#34;\u0026#34;, text: \u0026#39;folder\u0026#39; }, { key: \u0026#34;docx\u0026#34;, text: \u0026#39;docx\u0026#39; }, { key: \u0026#34;xlsx\u0026#34;, text: \u0026#39;xlsx\u0026#39; }, { key: \u0026#34;pptx\u0026#34;, text: \u0026#34;pptx\u0026#34; }, { key: \u0026#34;one\u0026#34;, text: \u0026#34;one\u0026#34; }, { key: \u0026#34;pdf\u0026#34;, text: \u0026#34;pdf\u0026#34; }, { key: \u0026#34;txt\u0026#34;, text: \u0026#34;txt\u0026#34; }, { key: \u0026#34;jpg\u0026#34;, text: \u0026#34;jpg\u0026#34; }, { key: \u0026#34;gif\u0026#34;, text: \u0026#34;gif\u0026#34; }, { key: \u0026#34;png\u0026#34;, text: \u0026#34;png\u0026#34; }, ]} onChange={checkFileExtensions} styles={dropdownFilterStyles} /\u0026gt; ... \u0026lt;FileList fileExtensions={this._fileExtensions} ... /\u0026gt;\u0026lt;/FileList/\u0026gt; Styling with Mgt-File-List The Mgt-File-List includes Light and Dark theme but you can also provide your custom styles.\n\u0026lt;FileList className=\u0026#34;mgt-dark\u0026#34; ... \u0026gt;\u0026lt;/FileList\u0026gt; To create your own custom style look and feel you can use css elements to customize Mgt-File-List.\nBelow some of the options available and shared in FileList Stories of the Beta Version.\n.mgtfilelist { --file-list-background-color: #eff6fc; --file-item-background-color--hover: #deecf9; --file-item-background-color--active: #c7e0f4; --file-list-border: 0px solid #white; --file-list-box-shadow: none; --file-list-padding: 0px; --file-list-margin: 0; --file-item-border-radius: 0px; --file-item-margin: 0px 0px; --file-item-border-top: 1px solid #dddddd; --file-item-border-left: 1px solid #dddddd; --file-item-border-right: 1px solid #dddddd; --file-item-border-bottom: 1px solid #dddddd; --show-more-button-background-color: #fef8dd; --show-more-button-background-color--hover: #ffe7c7; --show-more-button-font-size: 14px; --show-more-button-padding: 16px; --show-more-button-border-bottom-right-radius: 12px; --show-more-button-border-bottom-left-radius: 12px; } Search in Shared Libraries The control by the property \u0026ldquo;fileListQuery\u0026rdquo; also allow the usage Graph Drive Search method to find Items in the Drive. Below an sample on how you could use a dynamic to search items in Drives.\n//Make query on Shared Library or OneDrive Library const checkSearchDrive = (SearchQuery: string) =\u0026gt; { if (this.state.siteID != \u0026#34;\u0026#34;) { this.setState({ searchDrive: \u0026#34;/sites/\u0026#34; + this.state.siteID + \u0026#34;/drive/root/search(q=\u0026#39;\u0026#34; + SearchQuery + \u0026#34;\u0026#39;)\u0026#34; }); } else { this.setState({ searchDrive: \u0026#34;/me/drive/root/search(q=\u0026#39;\u0026#34; + SearchQuery + \u0026#34;\u0026#39;)\u0026#34; }); } }; //Search Box for Shared Library \u0026lt;SearchBox placeholder=\u0026#34;Search Drive\u0026#34; onSearch={checkSearchDrive} onClear={checkClear} /\u0026gt; //Display search content {(this.state.searchDrive != \u0026#34;\u0026#34;) \u0026amp;\u0026amp; \u0026lt;FileList fileListQuery={searchDrive} \u0026gt;\u0026lt;/FileList\u0026gt; } Final sample solution Below the final result of the configuration of Mgt-File-List react controls:\n Solution can be found in the SharePoint Framework Client-Side Web Part Samples - OneDrive finder:\nhttps://github.com/pnp/sp-dev-fx-webparts/tree/master/samples/react-onedrive-finder\nPS: Solution will be updated with release version when Mgt-File-List is available by the Microsoft Graph Toolkit.\nHow to start with Microsoft Graph Toolkit and SharePoint Online There is a very good articles on how to start for example, Build a SharePoint web part with the Microsoft Graph Toolkit\nTo use the Mgt-File-List control in Beta version please use the following packages.\nnpm i @microsoft/mgt@next npm i @microsoft/mgt-react@next PS: The Microsoft Graph Toolkit Team made available access to Beta version of Mgt-File-List and react. Final version package can be monitor and accessible in microsoft-graph-toolkit. I will hope this article could help you onboard when the Mgt-File-List control becomes officially available. Support Documentation:\n Build a SharePoint web part with the Microsoft Graph Toolkit PnP SPFX Samples \u0026ldquo;One Drive finder\u0026rdquo; Microsoft Graph Toolkit OneDrive file storage API overview Working with files in Microsoft Graph Working with SharePoint sites in Microsoft Graph Graph Explorer FileList specifications FileList Stories  ","image":"https://pnp.github.io/blog/images/blog/monitor-and-notify-m365-health-using-cli-for-microsoft-365/ArjunMenon_0-1637745741073.jpeg","permalink":"https://pnp.github.io/blog/post/navigate-onedrive-data-with-microsoft-graph-and-mgt-file-list/","tags":["Microsoft Graph toolkit"],"title":"Navigate OneDrive data with Microsoft Graph and Mgt-File-List Beta version"},{"categories":["Community post"],"contents":"In this post, we will see how easy it is to build a cool looking video banner web part using SPFx with the help of PnP reusable property pane controls. First of all, the requirements:  The web part should look like a banner on top of pages, with a video playing Ability to change the overlay text on this video Control the banner area size  This is what the PnP React Video Banner web part offers, once you add the web part to your page, you will be able to select a video (using the file picker control from the PnP Reusable Property Pane Controls), you will be able to modify the text overlay and its color, control the height of the video area and lastly (at least for now) modify the brightness:    These settings would provide you with a web part that looks like this:   Now let\u0026rsquo;s have a look at the code itself which is pretty simple. The file structure can be seen below:\n   The web part has only one functional component named: VideoBackground that accepts the following properties as defined in the IVideoBackgroundProps.ts file: wpTitle (string), videoUrl (string), labelColor (string), brightness (number), height (number).   The video url and the label color are set with the help of PnP Property Pane Controls as shown below:   Once the properties are setup on the VideoBackgroundWebPart.ts file, we pass them to the VideoBackground.tsx component.    All good so far? Now in our functional component, we have an HTML video control where the source of the video is set to the videoUrl prop we pass and we play with the CSS filter prop to set the brightness by adding the value concatenated with % as we need a brightness percentage:    Notice the ref attribute on the video control? The reason we have it is that we want to refresh the video whenever we change the video url. By default, when changing the properties, all values will be reflected except for the video url, it needs to be explicitly refreshed on the video control. So we get a reference to the video control using React\u0026rsquo;s ref, where we define the \u0026quot;vRef\u0026quot; value on the functional component itself. We then use React\u0026rsquo;s useEffect to check if the video url has changed or not, if it has changed, we call the load() function on the video reference itself:     Some notable points about the CSS used is the div that\u0026rsquo;s available just before the video control, it\u0026rsquo;s aligned using an absolute position with a display of flex to position the h1 element inside of it. The video element itself has a CSS property object-fit: cover.\nAs demonstrated, with SPFx and the help of PnP Reusable Property Pane controls, building web parts using modern development techniques is very easy and isn\u0026rsquo;t time consuming as some may think! Source code is available on GitHub along with other awesome web parts by the community, for more information about all the PnP offerings, checkout https://aka.ms/m365pnp #SharingIsCaring\n","image":"https://pnp.github.io/blog/post/introducing-react-video-banner-web-part/images/derhallim_0-1620249069072_hu6aac08f0a139cf40fcd9b0cc130710ff_66444_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/introducing-react-video-banner-web-part/","tags":["SharePoint framework (SPFx)"],"title":"Introducing React Video Banner Web Part"},{"categories":["Community post"],"contents":"Forgetting to take action on a message, or where that message was?\nFor busy people who have their lives invested in Microsoft Teams, whether collaborating with colleagues in Team Channels or using the Chat functionality, it\u0026rsquo;s easy to forget:\n To take action or reply to a message The location of where that message is! Is it in a Chat, or a Team Channel? How far up do I have to scroll?  Outlook\u0026rsquo;s solution: a well trodden path for many ![Flags in Outlook have been the bridge to emails and task management](images/Outlook Flags.png) In Outlook, there are \u0026ldquo;flags\u0026rdquo; which can be set to remind yourself to take action for a particular email. However, this functionality is missing from Teams. Even if you are a well seasoned ToDo and Planner user, you would still have to use the Copy Link{.sample} feature and paste that into the ToDo/Planner task, which can be quite tedious. ![Copy link to a Teams Channel message](images/Copy Link.png)\nPlus I entering a phase where I was forgetting that I had to respond to messages. Sometimes I ended up talking to Google (I use an Android phone, so you might be talking to Siri) to remind myself, but that still doesn\u0026rsquo;t take you straight back to the original message with a single select - you still had to do a lot of navigation before you arrived at the message you were supposed to take action on. My poor colleagues were also getting flooded with Teams messages. If they were diligent and cleared their activity bell notifications, they would potentially lose track of a visual reminder that they need to prompt them to action on a message.\nSo what if you just needed a simple and effective visual reminder, either at some hours/minutes down the track or at a specific time?\nA Flow, some delay, and four Adaptive Cards In comes Power Automate with a few adaptive cards to the rescue - this flow will generate a reminder via the Flow bot at a certain number of hours/minutes, or at a specified time to remind you to take action for a message!\n   The beauty of this Flow is that it will give you one-select access back to the conversation thread within the team, or back to the chat with a person or a group of people. So in the blog post below, the Flow will be explained in greater detail, and some caveats highlighted for anyone wanting to pursue this quick reminder flow!\nNote: this was partially inspired by Microsoft\u0026rsquo;s own template that you can create directly from Power Automate, but extends it to bring more flexibility to the reminder time, and also bring a far more visual experience via adaptive cards rather than just the Flow bot.\nInspired by Microsoft When I first saw the template provided by Microsoft, I thought: this is nice, but it\u0026rsquo;s a bit too elementary with the fixed timeframes from the choice radio buttons:      However, that was definitely a starting point. The sample Flow used an adaptive card (with some Input.Choice{.sample} options) and a Delay action. Why not take this further?\nIngredients Here\u0026rsquo;s the \u0026quot;ingredients\u0026quot; needed for the flow to allow ourselves to set a reminder at a particular hour/minute offset from now OR at a specific time:\n  One to get user input regarding when they\u0026rsquo;d like to be reminded\\\n![The reminder setting card can accept an hour/minute offset or absolute time as input](images/Set Reminder.png)\n  One for the reminder itself:\n     Two other cards which are for catching errors: ![Cards reminding users of input error](images/Error Cards.png)\n  The Flow 1. Data entry card So the concept is basically taken from what Microsoft provided, but here we extend the adaptive card by using an Action.ToggleVisibility button to show and hide parts of a card: the relative time entry and the absolute time entry containers, in blue and green respectively:\n![The reminder setting card, with an initially invisible container](images/Card Source.png)\nThe Change reminder type button within the gray container is Action.ToggleVisibility{.sample} button that you can add from the card elements bar on the left of the adaptive card designer screen. The JSON code looks like this:\n![Action Toggle Visibility.png](images/Action Toggle Visibility.png)\nThe action button targets the section-hours{.sample} (blue) and section-absolute-time{.sample} (green) containers - i.e. when pressed, turns the visibility of section-hours{.sample} off and section-absolute-time{.sample} (as the respective ids{.sample} of the containers) on, and vice versa. The blue and green containers are never on at the same time. ![The ID and initial visibility of the blue container](images/Container ID_annotated.png)\n [For the **Change reminder type **button to turn the blue and green containers on and off, the ]Initially visible[ checkbox must be ]\n *Checked *[for the blue container] Unchecked[ for the green container:]  ![The green container should initially be invisible](images/Container ID 2_annotated.png)\nWithin the containers are also `Columnto house the fields side by side, just to make it look nice.\n    The fields also need TextBlocks{.sample} above them as their labels (until we get Adaptive Cards v1.3 in Teams), as well as having some of the parameters set properly:\n   [Finally, the ]orange [container just contains what to remind yourself of, and has an Input.ChoiceSet {.sample}][to provide the dropdown menu:]\n![Input.ChoiceSet for dropdown menu](images/What to remind_annotated.png) Below is the complete JSON code for the adaptive card that captures the user input: { \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.2\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Container\u0026#34;, \u0026#34;bleed\u0026#34;: true, \u0026#34;style\u0026#34;: \u0026#34;warning\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;width\u0026#34;: \u0026#34;75px\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Image\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;\u0026lt;your_url_here\u0026gt;/schedule.png\u0026#34; } ] }, { \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Large\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;**Set myself a reminder about this message**\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;Attention\u0026#34;, \u0026#34;fontType\u0026#34;: \u0026#34;Default\u0026#34;, \u0026#34;wrap\u0026#34;: true } ], \u0026#34;verticalContentAlignment\u0026#34;: \u0026#34;Center\u0026#34; } ] } ] }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;isSubtle\u0026#34;: true, \u0026#34;wrap\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;Fill out this card in entirety, and you\u0026#39;ll be reminded by the Flow bot after the time selected.\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Container\u0026#34;, \u0026#34;separator\u0026#34;: true, \u0026#34;style\u0026#34;: \u0026#34;emphasis\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;auto\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;ActionSet\u0026#34;, \u0026#34;actions\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Action.ToggleVisibility\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Change reminder type\u0026#34;, \u0026#34;targetElements\u0026#34;: [ \u0026#34;section-hours\u0026#34;, \u0026#34;section-absolute-time\u0026#34; ] } ], \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34; } ], \u0026#34;verticalContentAlignment\u0026#34;: \u0026#34;Center\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Click on Change reminder type to select whether to remind myself at a specific time, or after a certain number of hours from now.\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;color\u0026#34;: \u0026#34;Accent\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34; } ], \u0026#34;verticalContentAlignment\u0026#34;: \u0026#34;Center\u0026#34; } ] } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Container\u0026#34;, \u0026#34;style\u0026#34;: \u0026#34;accent\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;color\u0026#34;: \u0026#34;Accent\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Remind myself after\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Hours\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;maxLines\u0026#34;: 0, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34;, \u0026#34;isSubtle\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Input.Number\u0026#34;, \u0026#34;placeholder\u0026#34;: \u0026#34;Type in the delay in hours\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;remind-hours-later\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34;, \u0026#34;min\u0026#34;: 0, \u0026#34;max\u0026#34;: 670 } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Minutes\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Input.Number\u0026#34;, \u0026#34;placeholder\u0026#34;: \u0026#34;Type in the delay in minutes\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34;, \u0026#34;min\u0026#34;: 1, \u0026#34;max\u0026#34;: 59, \u0026#34;id\u0026#34;: \u0026#34;remind-minutes-later\u0026#34; } ] } ] }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;Hours and minutes can contain decimals, e.g. **1.2 hours = 1 hour 12 minutes**\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34; } ], \u0026#34;id\u0026#34;: \u0026#34;section-hours\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Container\u0026#34;, \u0026#34;style\u0026#34;: \u0026#34;good\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;color\u0026#34;: \u0026#34;Accent\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Remind myself at this time\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Date\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;maxLines\u0026#34;: 0, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34;, \u0026#34;isSubtle\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Input.Date\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;remind-date\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Time\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;maxLines\u0026#34;: 0, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34;, \u0026#34;isSubtle\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Input.Time\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;remind-time\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34; } ] } ] }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Ensure that \\n- Both **Date** and **Time** are selected\\n- Date and time are no later than 30 days of the current time\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34; } ], \u0026#34;id\u0026#34;: \u0026#34;section-absolute-time\u0026#34;, \u0026#34;isVisible\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;Container\u0026#34;, \u0026#34;style\u0026#34;: \u0026#34;attention\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;color\u0026#34;: \u0026#34;Accent\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Remind myself to\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Input.ChoiceSet\u0026#34;, \u0026#34;choices\u0026#34;: [ { \u0026#34;title\u0026#34;: \u0026#34;Reply to the message\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;message-reply\u0026#34; }, { \u0026#34;title\u0026#34;: \u0026#34;Get something done\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;message-get-something-done\u0026#34; } ], \u0026#34;placeholder\u0026#34;: \u0026#34;Select the action to be reminded of\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;message-subsequent-action\u0026#34; } ] } ] }  2. Reminder card groundwork After some experimentation with the For a selected message trigger for Teams, it seems that there is a good amount of dynamic content that would be useful for the reminder card:\n   We will return to this card after looking at the upcoming sections after having a look at the actions which the flow will take.\n3. Variables required Some variables are required to hold hold some of the data:\n   Then we get the user profiles of the message sender and the *person who initiated the flow: *interestingly, only the AAD ID is available as dynamic content from the trigger, but thankfully the Get user profile (V2) action is able to handle this and return all of the information required:\n   4. Check for Chat or Channel conversation message and what action to take We then build the Original message information block by testing whether the message came from a private chat, or from a Team channel with a simple check of whether the team dynamic content is null{.sample} or not (input null{.sample} as an expression, not dynamic content):\n    If the message is from a Team Channel, then the List channels action is run, and a filter applied so that only the Channel Name is extracted out of the channels of the team.  Channel Id{.sample} is from the List channels action Channel ID{.sample} (note the case sensitivity!) is from the From a selected message action.   The JSON card blocks are then saved in the TeamChannelBrick[ variable.] The ActionToTake variable is also populated after checking for whether it\u0026rsquo;s been left blank, or one of the selections have been made:     5. Time calculations, data types \u0026amp; error handling The difficult part is this bit: making sure the user\u0026rsquo;s inputs for hours/minutes, or absolute time is valid! We quickly check whether either date or time entered is null or not, and if so, the user probably has inputted the hour/minute offset instead since that is the default:\n   In the case where the user enters the hours/minutes offset to be reminded:\n Check whether the Hours entered is blank or not (note that there\u0026rsquo;s a very subtle difference between blank and null!). If so, set the HoursToDelay variable to a \u0026quot;0\u0026quot; or simply use the hours inputted. Check whether the Minutes entered is blank or not. If so, set the MinutesToDelay variable to a \u0026ldquo;0\u0026rdquo; or simply use the hours inputted.     Finally, the TotalTimeDelay is set to the following expression:\nmul(add(mul(variables('HoursToDelay'),60),variables('MinutesToDelay')),60)  e.g.\n multiply the number of hours by 60 to obtain the number of minutes add that to the number of minutes to delay by multiply the final result up by another 60 to obtain the number of seconds  In the case where the user specifies an absolute time to be reminded\nA lot more string processing is required!\n  Compose - date selected: compose the date/time that the user selected, into ISO8601 format. The caveat here: you need 7 decimal places after the seconds!\n  Compose - ticks of date to delay until: find the number of ticks from the previous compose action:\\\nticks(outputs('Compose_-_date_selected'))    Convert time zone - to UTC+10 (where I live): change this to wherever you are in the world.\n  Compose - ticks of current time: get the current time\u0026rsquo;s ticks\n  Compose - difference in ticks: subtract the ticks of current time (4) from the ticks of the selected time (1).\n  Then check for whether the selected date is before the current time by seeing whether (5) is a negative number of not in the Condition - check selected date isn\u0026rsquo;t on or before reminder date\n  Then do some final checks for whether the number of seconds falls on \u0026ldquo;0\u0026rdquo; by\n  Converting the ticks into minutes/seconds (Compose - ticks to seconds)\nThe TotalTimeToDelay{.sample} variable in this instance, should contain this expression:\n`add(0,div(outputs('Compose_-_difference_in_ticks'),10000000))`    Checking whether there\u0026rsquo;s remnant seconds (by looking for modulo 60) in Compose - modulo seconds action. If the number of seconds to delay by, falls on \u0026ldquo;0\u0026rdquo; then just add 1 more second to it in case the user enters a time which is just less than 1 minute as the div formula will only work with integers. The TotalTimeToDelay{.sample} variable in this instance, becomes this expression instead:\\\nadd(1,div(outputs('Compose_-_difference_in_ticks'),10000000))  \nThe reason for this check is that the Delay action, is very fussy. It only takes integers, and can\u0026rsquo;t cope with an input of **0 **(you\u0026rsquo;d think that an input of \u0026quot;0\u0026quot; into the Delay action would just cause it to continue full steam ahead instead of sitting there and waiting!)\n    ![Absolute time calculations: finding out the TotalTimeToDelay](images/Absolute Time Processing.png) One final major condition block: check to see if the user has set a date over 28 days (or 720 hours) We check the TotalTimeToDelay {.sample}variable and see how many days it has racked up:\n`div(int(variables('TotalTimeToDelay')),86400)`  This check is needed as Power Automate will time out after 30 days. But let\u0026rsquo;s just be a little more conservative and set that at 28 days, and throw an error if so. This will ensure no reminders (especially those over 30 days) are quietly dumped without the user\u0026rsquo;s knowledge.\n   The adaptive card that reports the error if a user enters a date that is greater than 28 days: { \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.2\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Container\u0026#34;, \u0026#34;bleed\u0026#34;: true, \u0026#34;style\u0026#34;: \u0026#34;warning\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;width\u0026#34;: \u0026#34;75px\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Image\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;\u0026lt;your_url_here\u0026gt;/error.png\u0026#34; } ] }, { \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Large\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;**Error in setting a reminder for Teams message**\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;Attention\u0026#34;, \u0026#34;fontType\u0026#34;: \u0026#34;Default\u0026#34;, \u0026#34;wrap\u0026#34;: true }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Reminder set for too far ahead!\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Large\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;Accent\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34; } ], \u0026#34;verticalContentAlignment\u0026#34;: \u0026#34;Center\u0026#34; } ] } ] }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;isSubtle\u0026#34;: true, \u0026#34;wrap\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;Oops. You\u0026#39;ve tried to set yourself a reminder for @{outputs(\u0026#39;Compose_-_check_for_28_day_limit\u0026#39;)} days later! Please ensure you set it for less than 28 days.\\n\\nIf you need something more sophisticated, use **Microsoft To Do** or **Microsoft Planner**.\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Original message information\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;separator\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;Accent\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;FactSet\u0026#34;, \u0026#34;facts\u0026#34;: [ { \u0026#34;title\u0026#34;: \u0026#34;Message author\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;@{outputs(\u0026#39;Get_user_profile_(V2)_-_person_who_typed_the_message\u0026#39;)?[\u0026#39;body/displayName\u0026#39;]}\u0026#34; } ], \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Original message\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;separator\u0026#34;: true, \u0026#34;color\u0026#34;: \u0026#34;Accent\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;@{triggerBody()?[\u0026#39;entity\u0026#39;]?[\u0026#39;teamsFlowRunContext\u0026#39;]?[\u0026#39;messagePayload\u0026#39;]?[\u0026#39;body\u0026#39;]?[\u0026#39;plainText\u0026#39;]}\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Container\u0026#34;, \u0026#34;separator\u0026#34;: true, \u0026#34;style\u0026#34;: \u0026#34;emphasis\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;50px\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Image\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;\u0026lt;your_url_here\u0026gt;/alert.png\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Action that you were going to take\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;separator\u0026#34;: true, \u0026#34;color\u0026#34;: \u0026#34;Accent\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;@{variables(\u0026#39;ActionToTake\u0026#39;)}\u0026#34; } ], \u0026#34;verticalContentAlignment\u0026#34;: \u0026#34;Center\u0026#34; } ] } ] }, { \u0026#34;type\u0026#34;: \u0026#34;ActionSet\u0026#34;, \u0026#34;actions\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Action.OpenUrl\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Go back to the message and set the reminder again\u0026#34;, \u0026#34;iconUrl\u0026#34;: \u0026#34;\u0026lt;your_url_here\u0026gt;/teams.png\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;@{triggerBody()?[\u0026#39;entity\u0026#39;]?[\u0026#39;teamsFlowRunContext\u0026#39;]?[\u0026#39;messagePayload\u0026#39;]?[\u0026#39;linkToMessage\u0026#39;]}\u0026#34; } ] } ] }  6. The Delay vs Delay Until action    We are now ready to delay the flow! Initially there was a consideration to use the Delay Until action if the user enters an absolute date/time, until a major stumbling block was encountered: time zones! Power Automate basically works in UTC or UTC-8, whereas I live in UTC+10. Having said that, the documentation for the Delay Until action is quite scant, and it doesn\u0026rsquo;t seem to take into consideration what timezone you are in. Hence all of the effort to subtract ticks and calculate remnant seconds etc when the user selects the date/time option.\n7. Oops - don\u0026rsquo;t forget the characters that adaptive cards dislike! Two more Compose actions are required before we pop the reminder card out, namely:\n   Unfortunately if you wanted to insert the **Plain Text Message **dynamic content into the replace formula, you\u0026rsquo;re almost out of luck. Here\u0026rsquo;s where **Compose **comes to the rescue. The Compose - PTM without quotes action has this in its formula: replace(replace(outputs(\u0026lsquo;Compose_-_Plain_Text_Message\u0026rsquo;),\u0026rsquo;\u0026quot; \u0026lsquo;,\u0026rsquo;\u0026rsquo;),\u0026rsquo; \u0026ldquo;\u0026rsquo;,\u0026rsquo;\u0026rsquo;)\nwhich replaces every instance of space-double-quote and double-quote-space with empty strings, in order to not allow the reminder card to spit the dummy with any double quotation marks.\n8. The reminder card\u0026rsquo;s code With the TotalChannelBlock {.sample}variable inserted into the appropriate location so that the correct information about the message is displayed to the user who initiated the flow:   ...and a summary at the bottom of the card (pop the Show advanced options open!) to ensure a summary is sent - especially useful if your smartwatch notifications rely on a summary of sorts:   { \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.2\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Container\u0026#34;, \u0026#34;bleed\u0026#34;: true, \u0026#34;style\u0026#34;: \u0026#34;warning\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;width\u0026#34;: \u0026#34;75px\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Image\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;\u0026lt;your_url_here\u0026gt;/schedule.png\u0026#34; } ] }, { \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Large\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;**Reminder for Teams message**\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;Attention\u0026#34;, \u0026#34;fontType\u0026#34;: \u0026#34;Default\u0026#34;, \u0026#34;wrap\u0026#34;: true } ], \u0026#34;verticalContentAlignment\u0026#34;: \u0026#34;Center\u0026#34; } ] } ] }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;isSubtle\u0026#34;: true, \u0026#34;wrap\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;This is a reminder message you set for yourself at\\n\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34; **@{body(\u0026#39;Convert_time_zone_-_time_executed\u0026#39;)}**.\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Original message information\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;separator\u0026#34;: true, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;Accent\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;FactSet\u0026#34;, \u0026#34;facts\u0026#34;: [ @{variables(\u0026#39;TeamChannelBrick\u0026#39;)} ], \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Original message\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;separator\u0026#34;: true, \u0026#34;color\u0026#34;: \u0026#34;Accent\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;@{outputs(\u0026#39;Compose_-_PTM_without_quotes\u0026#39;)}\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Container\u0026#34;, \u0026#34;separator\u0026#34;: true, \u0026#34;style\u0026#34;: \u0026#34;attention\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;50px\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Image\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;\u0026lt;your_url_here\u0026gt;/alert.png\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Action to take\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;separator\u0026#34;: true, \u0026#34;color\u0026#34;: \u0026#34;Accent\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Small\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;spacing\u0026#34;: \u0026#34;None\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;@{variables(\u0026#39;ActionToTake\u0026#39;)}\u0026#34; } ], \u0026#34;verticalContentAlignment\u0026#34;: \u0026#34;Center\u0026#34; } ] } ] }, { \u0026#34;type\u0026#34;: \u0026#34;ActionSet\u0026#34;, \u0026#34;actions\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Action.OpenUrl\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;See the original message\u0026#34;, \u0026#34;iconUrl\u0026#34;: \u0026#34;\u0026lt;your_url_here\u0026gt;/teams.png\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;@{triggerBody()?[\u0026#39;entity\u0026#39;]?[\u0026#39;teamsFlowRunContext\u0026#39;]?[\u0026#39;messagePayload\u0026#39;]?[\u0026#39;linkToMessage\u0026#39;]}\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Action.OpenUrl\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Chat with @{outputs(\u0026#39;Get_user_profile_(V2)_-_person_who_typed_the_message\u0026#39;)?[\u0026#39;body/displayName\u0026#39;]}\u0026#34;, \u0026#34;iconUrl\u0026#34;: \u0026#34;\u0026lt;your_url_here\u0026gt;/teams.png\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://teams.microsoft.com/l/chat/0/0?users=@{outputs(\u0026#39;Get_user_profile_(V2)_-_person_who_typed_the_message\u0026#39;)?[\u0026#39;body/mail\u0026#39;]}\u0026#34; } ] } ] }  Thanks for reading! Hope you\u0026rsquo;ve learned loads yourself!  ","image":"https://pnp.github.io/blog/post/simple-reminders-for-any-teams-channel-or-chat-message/images/z3019494_1-1620122926624_hub851447969dda3d92b3ce079b02804bd_49539_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/simple-reminders-for-any-teams-channel-or-chat-message/","tags":[],"title":"Simple reminders for any Teams Channel or Chat message"},{"categories":["Community post"],"contents":"Sometimes we have a business requirement to get site collections with all the sub-webs so we can achieve the solution easily using PnP PowerShell. Let\u0026rsquo;s see step-by-step implementation:\nImplementation Open Windows PowerShell ISE\nCreate a new file and write a script\nNow we will see all the steps which we required to achieve the solution:\n  We will initialize the admin site URL, username, and password in the global variables.\n  Then we will create a Login function to connect the O365 SharePoint Admin site.\n  Create a function to get all site collections and all the sub-webs So in the end, our script will be like this,   $SiteURL = \u0026#34;https://domain-admin.sharepoint.com/\u0026#34; $UserName = \u0026#34;UserName@domain.onmicrosoft.com\u0026#34; $Password = \u0026#34;********\u0026#34; $SecureStringPwd = $Password | ConvertTo-SecureString -AsPlainText -Force $Creds = New-Object System.Management.Automation.PSCredential -ArgumentList $UserName, $SecureStringPwd Function Login { [cmdletbinding()] param([parameter(Mandatory = $true, ValueFromPipeline = $true)] $Creds) Write-Host \u0026#34;Connecting to Tenant Admin Site \u0026#39;$($SiteURL)\u0026#39;\u0026#34; Connect-PnPOnline -Url $SiteURL -Credentials $creds Write-Host \u0026#34;Connection Successfull\u0026#34; } Function AllSiteCollAndSubWebs() { Login($Creds) $TenantSites = (Get-PnPTenantSite) | Select Title, Url ForEach ( $TenantSite in $TenantSites) { Connect-PnPOnline -Url $TenantSite.Url -Credentials $Creds Write-Host $TenantSite.Title $TenantSite.Url $subwebs = Get-PnPSubWebs -Recurse | Select Title, Url foreach ($subweb in $subwebs) { Connect-PNPonline -Url $subweb.Url -Credentials $Creds Write-Host $subweb.Title $subweb.Url } } } AllSiteCollAndSubWebs  Output    Summary In this article, we have seen how to get all the site collections and their subwebs using pnp PowerShell. Hope this helps! If it is helpful to you then share it with others. Sharing is caring!\n","image":"https://pnp.github.io/blog/post/how-to-to-get-all-site-collections-with-their-sub-webs-using-pnp/images/AllSCAndSCW_hu19d70d3112055867605d568f246f60e3_437357_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-to-get-all-site-collections-with-their-sub-webs-using-pnp/","tags":["PnP PowerShell","SharePoint"],"title":"How to to get all site collections with their sub webs using PnP PowerShell?"},{"categories":["Community post"],"contents":"Would not be cool to engage your Modern Workplace users with content appearing like in your favourite social network? In my latest community sample, I built an SPFx web part to do so. Here is how I did it, but first, this is how it looks:\n   What we need first, is a SharePoint list that will contain all the \u0026ldquo;story images\u0026rdquo;, with the author of that story, and some Text, if we want to show the \u0026ldquo;show more\u0026rdquo; option. This list will be something like this:   Now it is time to code our SPFx web part. Before starting, for all the UI thing, I am using an existing open-source React component called \u0026ldquo;react-insta-stories\u0026rdquo;, that you can find in its GitHub repository. This component does most of the hard work with the image slide and so on. In its most simple way, the component just needs an array of images:\n   But you can also specify an array of Story objects, where a Story can have the following properties:\n![Story object properties](images/Story object properties.png) Now that we know how to use the Stories component, the web part functionality is quite easy. We just need to get the Stories information from the SharePoint list, and compose the proper Stories array. As usual when developing SPFx webparts, the web part itself, just loads a React component, passing the information that we need, in this case, for simplicity, I am passing the entire WebPartContext object, but try to avoid this practice, and only pass what you need. This is the main code in the Render web part method:\n   Once in the main React component, we are calling the SharePoint REST API to get the stories from the list. To do so, I am using the endpoint: /_api/web/lists/GetByTitle(\u0026#39;Stories\u0026#39;)/RenderListDataAsStream  As this endpoint is given me the Image URL in the format that I need (but pretty sure you can do the same with other endpoints, or using the PnP JS library). The code to do so is:\n   The method \u0026ldquo;_getStoryFromListItem\u0026rdquo; will create a Story object for the \u0026ldquo;react-insta-stories\u0026rdquo; component, and here we have an interesting challenge. The Story object, has a Header property, aimed to render the Story author information, so you just provide the profile image, and a couple of texts for heading and subheading. Although we could get the Author profile image, username and email using Graph API, it is going to be much easier to make use of the MS Graph Toolkit library, and use the MGT Person component. In order to render the GMT Person component, we cannot use the Story Header property, however, the Story object allow us to specify a custom render function for the entire Story, and in that function, we can use the Person component. This is the relevant code to achieve it:\n   The storyRenderer function is the one responsible for rendering the Story, and there, we use the GMT Person component. As you can see in the code above, we also use a React High Order Component called WithSeeMore, this component is from the react-insta-stories library and is the way to load a specific text when the \u0026ldquo;See more\u0026rdquo; link is selected in the Story. So, if the list item has the Content field filled, we set the \u0026ldquo;seeMore\u0026rdquo; property of the Story object. This property is again a function, so you can customize how the content is rendered. And that´s all!\u0026hellip; you can get the full code sample in the PnP GitHub repository Cheers!\n","image":"https://pnp.github.io/blog/post/community-sample-engage-your-users-with-sharepoint-stories-reels/images/6-component-did-mount_hu7552cd18f83d2ab1590503cc797e9151_77524_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/community-sample-engage-your-users-with-sharepoint-stories-reels/","tags":["SharePoint framework (SPFx)"],"title":"Community sample: Engage your users with SharePoint stories/reels"},{"categories":["Community post"],"contents":"Perhaps you\u0026rsquo;ve noticed a technology called Markdown that\u0026rsquo;s been showing up in a lot of web sites and apps lately. This article will explain Markdown and help you get started reading and writing it.\nMarkdown is a simple way to format text using ordinary punctuation marks, and it\u0026rsquo;s very useful in Microsoft 365. For example, Microsoft Teams supports markdown formatting in chat messages and SharePoint has a Markdown web part. Adaptive Cards support Markdown as well, as do Power Automate approvals. For the bot builders among us, Bot Composer language generation and QnA Maker both support markdown as well. And what\u0026rsquo;s at the top level of nearly every GitHub repo? You guessed it, a markdown file called README.md.\nImagine you\u0026rsquo;re texting someone and all you have to work with is letters, numbers, and a few punctuation marks. If you want to get their attention, you might use **asterisks**, right? If you\u0026rsquo;ve ever done that, then you were already using Markdown! Double asterisks make the text bold.\nNow imagine you\u0026rsquo;re replying to an email and want to quote what someone said earlier in the thread. Many people use a little greater-than sign like this:\nParker said, \u0026gt; Sharing is caring  Guess what, that\u0026rsquo;s Markdown too! When it\u0026rsquo;s displayed, it looks like this:\n Parker said,\n Sharing is caring\n  Did you ever make a little table with just text characters, like this?\nAlpha | Beta | Gamma ------|------|------ 1 | 2 | 3  If so, you already know how to make a table in Markdown!\n------- ------ ------- Alpha Beta Gamma 1 2 3 ------- ------ ------- Markdown was designed to be intuitive. Where possible, it uses the formatting clues people type naturally. So you can type something _in italics_ on the screen and it actually appears in italics.\nIn all cases you\u0026rsquo;re starting with plain text - the stuff that comes out of your keyboard and is edited with Notepad or Visual Studio Code - into something richer. (Spoiler alert: it\u0026rsquo;s HTML.)\n What about emojis? 😊\n Markdown neither helps nor blocks emojis, they\u0026rsquo;re just characters. If your application can handle emojis, you can certainly include them in your markdown.\nCommonly used Markdown Markdown isn\u0026rsquo;t a formal standard, and a lot of variations have emerged. It all started at Daring Fireball; most implementations are faithful to the original but many have added their own features. For example, the SharePoint Markdown Web Part uses the \u0026quot;Marked\u0026quot; syntax; if you\u0026rsquo;re creating a README.md file for use in GitHub, you\u0026rsquo;ll want to use GitHub Flavored Markdown (GFM).\nThis article will stick to the most commonly used features that are widely supported. Each of the following sections shows an example of some simple Markdown followed by the formatted result.\n1. Emphasizing Text Markdown You can surround text with *single asterisks* or _single underscores_ to emphasize it a little bit; this usually formatted using italics. You can surround text with **double asterisks** or __double underscores__ to emphasize it more strongly; this is usually formatted using bold text. Result  You can surround text with single asterisks or single underscores to emphasize it a little bit; this usually formatted using italics.\nYou can surround text with double asterisks or double underscores to emphasize it more strongly; this is usually formatted using bold text.\n 2. Headings You can make headings using by putting several = (for a level 1 heading) or - signs (for a level 2 heading) in the line below your heading text.\nMarkdown My Heading --- Result  My Heading  You can also make headings with one or more hash marks in column 1. The number of hash marks controls the level of the heading.\nMarkdown # First level heading ## Second level heading ### Third level heading #### etc. Result  First level headingSecond level heading Third level heading etc  3. Hyperlinks Markdown To make a hyperlink, surround the text in square brackets immediately followed by the URL in parenthesis (with no space in between!) For example: [Microsoft](https://www.microsoft.com). Result  To make a hyperlink, surround the text in square brackets immediately followed by the URL in parenthesis (with no space in between!)\nFor example: Microsoft.\n 4. Images Images use almost the same syntax as hyperlinks except they begin with an exclamation point. In this case the \u0026ldquo;alt\u0026rdquo; text is in square brackets and the image URL is in parenthesis, with no spaces in between.\nMarkdown ![Parker the Porcupine](https://pnp.github.io/images/hero-parker-p-800.png) Result      In case you were wondering, you can combine this with the hyperlink like this:\nMarkdown [![Parker the Porcupine](https://pnp.github.io/images/hero-parker-p-800.png)](http://pnp.github.io) Result      5. Paragraphs and line breaks Markdown Markdown will automatically remove single line breaks. Two line breaks start a new paragraph. Result  Markdown will automatically remove single line breaks.\nTwo line breaks start a new paragraph.\n 6. Block quotes Markdown Use a greater than sign in column 1 to make block quotes like this: \u0026gt; Line 1 \u0026gt; Line 2 Result  Use a greater than sign in column 1 to make block quotes like this:\n Line 1 Line 2\n  7. Bullet lists Markdown Just put a asterisk or dash in front of a line that should be bulleted. * Here is an item starting with an asterisk * Here is another item starting with an asterisk * Indent to make sub-bullets * Like this - Here is an item with a dash - Changing characters makes a new list. Result  Just put a asterisk or dash in front of a line that should be bulleted.\n  Here is an item starting with an asterisk\n  Here is another item starting with an asterisk\n Indent to make sub-bullets  Like this      Here is an item with a dash\n Changing characters makes a new list.     8. Numbered lists Markdown 1. Beginning a line with a number makes it a list item. 1. You don\u0026#39;t need to put a specific number; Markdown will renumber for you 8. This is handy if you move items around 1. Don\u0026#39;t forget you can indent to get sub-items 1. Or sub-sub-items 1. Another item Result   Beginning a line with a number makes it a list item. You don\u0026rsquo;t need to put a specific number; Markdown will renumber for you This is handy if you move items around  Don\u0026rsquo;t forget you can indent to get sub-items  Or sub-sub-items     Another item   9. Code samples Many markdown implementations know how to format code by language. (This article was written in Markdown and made extensive use of this feature using \u0026ldquo;markdown\u0026rdquo; as the language!) For example to show some HTML:\nMarkdown ~~~html \u0026lt;button type=\u0026#34;button\u0026#34;\u0026gt;Do not push this button\u0026lt;/button\u0026gt; ~~~ Result  Do not push this button\n 10. Tables Tables are not universally supported but they\u0026rsquo;re so useful they had to be part of this article. Here is a simple table. Separate columns with pipe characters, and don\u0026rsquo;t worry about making things line up; Markdown will handle that part for you.\nMarkdown Column 1 | Column 2 | Column 3 ---|---|--- Value 1a | Value 2a | Value 3a Value 1b | Value 2b | Value 3b Result     Column 1 Column 2 Column 3     Value 1a Value 2a Value 3a   Value 1b Value 2b Value 3b     MVP Luise Freese also pointed out that there\u0026rsquo;s a great Markdown tables generator here; looks like a big timesaver!\nHTML and Markdown Markdown doesn\u0026rsquo;t create any old formatted text - it specifically creates HTML. In fact, it was designed as a shorthand for HTML that is easier for humans to read and write.\nMany Markdown implementations allow you to insert HTML directly into the middle of your Markdown; this may be limited to certain HTML tags depending on the application. So if you know HTML and you\u0026rsquo;re not sure how to format something in Markdown, try including the HTML directly!\nEditing Markdown If you\u0026rsquo;d like to play with Markdown right now, you might like to try the Markdown Previewer where you can type and preview Markdown using any web browser.\nFor more serious editing, Visual Studio Code does a great job, and has a built-in preview facility. Check the VS Code Markdown documentation for details.\nThere\u0026rsquo;s a whole ecosystem of tools around Markdown including converters for Microsoft Word and stand-alone editing apps; these are really too numerous to list but are easy to find by searching the web.\nLegacy From vinyl records to 8-bit games and static web sites, there\u0026rsquo;s a trend these days to rediscover simpler technologies from the past. Markdown definitely falls into this category.\nBack before \u0026ldquo;WYSIWYG\u0026rdquo; (What You See Is What You Get) word processors were cheap and pervasive, there were \u0026ldquo;runoff\u0026rdquo; utilities that were very much like Markdown. They turned text files into nicely formatted printed documents (usually Postscript). Markdown harkens back to these legacy tools, but adds HTML compatibility and an intuitive syntax.\nConclusion While it may seem unfamiliar at first, Markdown is intended to make it easy for people to read and write HTML. Whether you\u0026rsquo;re a power user, IT admin, or developer, you\u0026rsquo;re bound to run into Markdown sooner or later. Here\u0026rsquo;s hoping this article makes it a little easier to get started!\nFor more information please check out Cloud Advocate April Dunnam\u0026rsquo;s excellent video on Markdown!\n","image":"https://pnp.github.io/blog/post/what-s-up-with-markdown/images/hero-parker-p-800_hu246175755a55e1bbdc06a24453d58eb5_77696_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/what-s-up-with-markdown/","tags":[],"title":"What's up with Markdown?"},{"categories":["Office add-in developer community call"],"contents":"Call summary April\u0026rsquo;s call, hosted by David Chesnut, featured the following presenters and topics:\n• Richard Taylor discussed different support options available on Microsoft 365, and how to submit a new support ticket. • Sudhi Ramamurthy shared news about updates to APIs, Recorder, and Admin-control for Office Scripts. • Leslie Black (Analysis Cloud Limited) demonstrated a TICTACUFO application he created with Office Scripts. • David Chesnut demonstrated a new PnP sample that shows how to handle event-based activation and set the signature in Outlook. To watch the call, tap the following link. Office Add-ins community call \u0026ndash; April 2021 - YouTube\nQ\u0026amp;A (Question \u0026amp; Answers) We welcome you to submit questions and topic suggestions prior to each call by using our short survey form.\nSupport options When we try to open tickets in the admin center regarding SharePoint Development they are getting immediately closed with the comment \u0026quot;we don\u0026rsquo;t provide support for developer issues\u0026quot;. Is that different for Office Add-ins? The comment you see applies if you don\u0026rsquo;t have a Premier account, or Enterprise SKU. If you do have a Premier account and are seeing this comment, please reach out to us on the next community call web chat so we can follow up with you. What level of support can I get for my tenant from the Microsoft 365 Developer Program?\nThe Microsoft 365 Developer Program provides standard Office 365 support, and does not include developer support. You can get help with developer questions at Microsoft Q\u0026amp;A for Office Add-ins, or at Stack Overflow [office-js].\nOffice Scripts ServiceHub is not enabled for my Enterprise ID. Is it possible for an admin to configure without admin access to rest of the Office 365 tenant?\nIf you have a Premier account, we can reach out to your ADC/TAM and ensure you have access. If you just have an Enterprise subscription, use the O365 admin instead. Either should work. Are Office Scripts for Excel on the web available to Microsoft 365 family accounts or just Enterprise?\nCurrently, Office Scripts are only available on Enterprise, though we\u0026rsquo;re exploring expanding availability to other licenses.\nMiscellaneous questions When will the current Outlook preview requirement set, including event-based activation, be available in production?\nWe don\u0026rsquo;t have a specific date yet, but we hope to make it available soon. The Outlook REST API is going to be decommissioned. Is it safe to continue using EWS (Exchange Web Services) with Outlook add-ins going forward or is it also at risk of being decommissioned?\nAt present, there is no plan to decommission EWS. Is it possible to port Office.addin.showAsTaskpane common API function to Outlook JS?\nThis is a great suggestion! Can you please provide more details on this idea, and scenario at Microsoft 365 Developer Platform - Microsoft Tech Community?\nOne of our custom functions must access data (a table) not specified in the arguments. We\u0026rsquo;ve noticed that calling Excel.run to request that data through the Excel request context on every formula invocation leads to concurrency issues (RichApi.Error: Wait until the previous call completes.) Is there a flexible way to get this to work? There is a code approach used in GitHub issue 483 in office-js that may help you. If that doesn\u0026rsquo;t work for your scenario, please post a question with more information at Microsoft Q\u0026amp;A: Office JavaScript API. In Excel custom functions, is there a way to pause the calculations and resume later (other than setting calculation mode to manual)? End users want to pass an additional flag to the custom function that indicates if it should run or not run. We suggest switching to manual recalc mode, instead of using an argument to the function. Our goal is for Excel custom functions to run using the same paradigm as built-in functions. We don\u0026rsquo;t have a design pattern where we pause recalc based on an argument to a function. It\u0026rsquo;s clearer for users if you ask them to change to manual recalc, that you could implement in the task pane UI. Then when completed, you can switch back to automatic recalculation and the custom functions will run. In Excel custom functions, you can get the address of the calling cell from the invocation object. Is there a way to get the current value from the cell along with the address?\nWe suggest that you use the onCalculated event which is called when custom functions are calculated. Here\u0026rsquo;s an example:\nasync function onCalculated(event) { await Excel.run(async (context) =\u0026gt; { console.log(event.address); if (event.address == \u0026#34;A13\u0026#34;) // “A13” here is an example of the cell that has the custom function. It can be replaced by a real cell address.  { context.load (event.address, “values”); await context.sync(); console.log(`The range value was \u0026#34;${cellC1.values}\u0026#34;.`); } }); } Can the Microsoft Graph API be used by an add-in without a dedicated server to proxy requests to the Graph API? We\u0026rsquo;re trying to replace the usage of the Outlook REST API in an add-in that makes API calls from the client-side. We are struggling to find tutorials covering that case.\nIf you\u0026rsquo;re Outlook add-in is basically a single-page app (SPA) this tutorial will help you call the Microsoft Graph API from the add-in: Tutorial: Create a JavaScript single-page app that uses auth code flow - Microsoft identity platform.... There are also additional Microsoft Graph samples at https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/tree/master/2-W...\nWhen will Outlook sideload and debug from VS Code (as demoed in November community call) be available?\nThis feature is available, but there is an issue that prevents it from working in all scenarios. We\u0026rsquo;re working to get a fix out soon.\nResources Microsoft 365 support  Premier Services in CSS Unified Support Concierge Services in Office 365 Admin Portal Community and Q+A Answer Forums  https://developer.microsoft.com/office/blogs/ https://docs.microsoft.com/answers/topics/office-addins-dev.html https://stackoverflow.com   Troubleshoot development errors with Office Add-ins\nTroubleshoot user errors with Office Add-ins\nResource limits and performance optimization for Office Add-ins  Office Scripts demo by Leslie Black  Source for TICTACUFOGame: https://github.com/MrAnalyticals/OfficeScripts/tree/main/TICTACUFOGame Short demo video: https://youtu.be/FMOCPm1aV_Q Long demo video: https://youtu.be/F49hwCzpygQ Office Scripts LinkedIn Group: https://www.linkedin.com/groups/9016822/ Analysis Cloud Limited, The Irish Cloud Company: www.analysis.ie  PnP: Outlook set signature  Sample code: https://github.com/OfficeDev/PnP-OfficeAddins/tree/master/Samples/outlook-set-signature Configure your Outlook add-in for event-based activation  Office Add-ins community call  Recurring, monthly community call calendar invite Community call topic requests and questions Community call recordings on Microsoft 365 developer YouTube  Office Add-ins feedback  Technical questions \u0026ndash; Microsoft Q\u0026amp;A (office-js-dev), (office-addins-dev) Issues \u0026ndash; GitHub (office-js repo) Recommendations and suggestions \u0026ndash; Microsoft 365 Developer Platform ideas  The next Office Add-ins community call is on Wednesday, May 12, 2021 at 8:00AM PDT. You can download the calendar invite at https://aka.ms/officeaddinscommunitycall.\n","image":"https://pnp.github.io/blog/post/what-s-up-with-markdown/images/hero-parker-p-800_hu246175755a55e1bbdc06a24453d58eb5_77696_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-april-14-2021/","tags":[],"title":"Office Add-ins community call -- April 14, 2021"},{"categories":["PnP Weekly"],"contents":" In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Business Applications MVP, Flow Pro Show co-host, NLightning co-founder and Technical Evangelist at SharePoint ISV Lightning Tools Sandy Ussia | @SandyU. Topics discussed in this session include: The appeal of Power Apps and Power Automate - enabling Power Users especially in resource constrained smaller businesses, whether or not Power Apps is the epitome or fulfillment of \u0026ldquo;Good-enough IT\u0026rdquo;, Sandy 2.0, and Lightning Tools\u0026rsquo; business in COVID times. Microsoft and the Community delivered 22 articles in this last week. This session was recorded on Monday, May 3, 2021. Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nThis episode was recorded on Monday, May 3, 2021.\n Video at Microsoft 365 Community YouTube channel    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nEvents  May 4, 2021 - Microsoft Business Applications Summit (MBAS) - Digital Event May 25-27, 2021- Microsoft Build 2021 August 9-11, 2021 - North American Collaboration Summit  Register with coupon code \u0026ldquo;PnP\u0026rdquo; for 25% off from the prize at https://nacs.ticketspice.com/nacs2021    Microsoft articles  What\u0026rsquo;s New in Microsoft Teams | April 2021 - Microsoft Skype for Business Online retires July 31, 2021 \u0026ndash; here\u0026rsquo;s what to expect - Microsoft SharePoint Roadmap Pitstop: April 2021 - Mark Kashman (Microsoft) | @mkashman Microsoft Lists: Five free virtual workshops, May 10-14, 2021 - Mark Kashman (Microsoft) | @mkashman Announcing SharePoint Framework 1.12.1 \u0026ndash; Extending more of Microsoft Teams - SharePoint team | @SharePoint Learn how to develop apps with the Microsoft Graph Toolkit - Microsoft Updates to Organizational Theming in Microsoft 365 admin center - Maha Alam (Microsoft)  Community articles  Microsoft Graph Mailbag \u0026ndash; Create engaging apps with the Microsoft Teams Activity Feed API - Sébastien Levert (Microsoft) | sebastienlevert How to Set Up Tailwind CSS in a SharePoint Framework Project - Ari Gunawan (DevStack) | @arigunawan3023 Power Platform MS Forms Quiz with dynamic Leader Board created using Power Automate and HTTP Trigger - Damien Bird (Aberdeen City Council) | @DamoBird365 How to get Source Code files for Power Apps Canvas apps - Luise Freese | @LuiseFreese CLI for Microsoft 365 v3.9 - Garry Trinder (CPS) | garrytrinder Power Virtual Agents bot setting the Out Of Office - Vesa Nopanen (Sulava) | @vesanopanen Office Add-in Developer Community (PnP) \u0026ndash; March 2021 update - David Chesnut (Microsoft) | @msdavech Teams - an adoption idea? Transfer your group chat emails to Teams with Power Automate - Damien Bird (Aberdeen City Council) | @DamoBird365 SPFx Check Locale - a nice option to check your localization consistency across SharePoint Framework... - Sergei Sergeev (Mastaq) | @sergeev_srg SharePoint Framework v1.12.1 - What\u0026rsquo;s in the latest Update of SPFx? - Andrew Connell (Voitanos) | @andrewconnell Power Platform Rewind April 2021 - April Dunnam (Microsoft) | @aprildunnam Episode #152​ - Managing SharePoint Online Data with Microsoft Graph SDK for .NET - Paolo Pialorsi (PiaSys) | @PaoloPia Flow Pro Show - Sandy Ussia (LightningTools) |@SandyU \u0026amp; Daniel Laskewitz (Sogeti) | @laskewitz Azure Cloud Shell now available in Microsoft 365 - Robert Crane (CIAOPS) | @directorcia Bulk-create Planner tasks with dates using Microsoft Power Automate - Waldek Mastykarz (Microsoft) | @waldekm  Additional resources  Maturity Model for Microsoft 365 Power Platform Sample Gallery - for finding easily samples from the GitHub - contributions from the community are welcome! PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-125/images/Thumb-Ep125_hu90094866da4cb348427efd7647b99422_466396_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-125/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 125"},{"categories":["Community post"],"contents":"In the State of CSS 2020 survey, the Tailwind CSS becomes the number 1 CSS Framework in terms of Satisfaction and Interest in the last 2 years. It also gets the awards for The Most Adopted Technology. It seems a lot of developers like this framework. Based on my experience, this framework can help us rapidly build UI by reducing complexity when styling the UI.\n![](images/State of CSS 2020 Survey.png)\nIn this article, I will share my setup to use the Tailwind CSS in a SharePoint Framework (SPFx) project. Prepare the SPFx Project\nPrepare your SPFx project. I use a newly generated SPFx project (v1.11) but you can also use your existing SPFx project. Install Modules\nInstall all modules needed by executing the command below:\nnpm install tailwindcss@1.9.6 postcss postcss-cli postcss-import @fullhuman/postcss-purgecss gulp-postcss autoprefixer@9.8.6 -D Initialize Tailwind CSS and PostCSS\nInitialize Tailwind CSS by executing the command below:\nnpx tailwind init -p --full The command will create the tailwind.config.js in the project\u0026rsquo;s base directory. The file contains the configurations, such as colors, themes, media queries, and so on.\nThe command will also create the postcss.config.js file. We need PostCSS because we will use Tailwind CSS as a PostCSS plugin. Inject Tailwind CSS Components and Utilities\nWe need to create a CSS file that will be used to import Tailwind CSS styles.\n Create an assets folder in the project\u0026rsquo;s base directory Create a tailwind.css file in the assets folder Add the following lines of code to the file:  @import \u0026#34;tailwindcss/components\u0026#34;; @import \u0026#34;tailwindcss/utilities\u0026#34;; Add Gulp Subtask for Processing Tailwind CSS\nWe need to add the Tailwind CSS build process to our SPFx build process.\n Open the gulpfile.js Add the following lines of code to the file (before the build.initialize(require(\u0026lsquo;gulp\u0026rsquo;)); line):  const postcss = require(\u0026#34;gulp-postcss\u0026#34;); const atimport = require(\u0026#34;postcss-import\u0026#34;); const purgecss = require(\u0026#34;@fullhuman/postcss-purgecss\u0026#34;); const tailwind = require(\u0026#34;tailwindcss\u0026#34;); const tailwindcss = build.subTask( \u0026#34;tailwindcss\u0026#34;, function (gulp, buildOptions, done) { gulp .src(\u0026#34;assets/tailwind.css\u0026#34;) .pipe( postcss([ atimport(), tailwind(\u0026#34;./tailwind.config.js\u0026#34;), ...(buildOptions.args.ship ? [ purgecss({ content: [\u0026#34;src/**/*.tsx\u0026#34;], defaultExtractor: (content) =\u0026gt; content.match(/[\\w-/:]+(?\u0026lt;!:)/g) || [], }), ] : []), ]) ) .pipe(gulp.dest(\u0026#34;assets/dist\u0026#34;)); done(); } ); build.rig.addPreBuildTask(tailwindcss); The code will add the tailwindcss subtask to the SPFx Gulp Build task. It will also purge (remove unused styles) the Tailwind CSS for build with ship flag:\ngulp build --ship or\ngulp bundle --ship Add Reference to The Generated Tailwind CSS\nWe need to add reference the generated Tailwind CSS by adding the import code in your main .ts webpart file:\nimport \u0026#39;../../../assets/dist/tailwind.css\u0026#39;; That\u0026rsquo;s it!\nNow you can use Tailwind CSS utilities in your SPFx project. Result\nYou might be familiar with the below result except it\u0026rsquo;s not using styles from the 74-lines scss/css file anymore.\n   ","image":"https://pnp.github.io/blog/post/how-to-set-up-tailwind-css-in-a-spfx-project/images/State%20of%20CSS%202020%20Survey_hu16b63efb6f9d11fdabaca1a2afac0f79_119199_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-set-up-tailwind-css-in-a-spfx-project/","tags":["SharePoint framework (SPFx)"],"title":"How to Set Up Tailwind CSS in a SPFx Project"},{"categories":["Microsoft 365 Developer Community Call"],"contents":" Call summary Latest news from Microsoft 365 engineering and updates on open-source projects: PnP .NET libraries, PnP PowerShell, modernization tooling, on yo Teams, on Microsoft Graph Toolkit, and on Microsoft Teams Samples. Announcing the release of SharePoint Framework v1.12.1, check out the new Microsoft 365 Extensibility look book gallery, visit the Microsoft Teams samples gallery to get started with Microsoft Teams development, please complete the Microsoft 365 developer community survey, and register now for May trainings on Sharing-is-caring. Open-source project activity is focused on prepping for May releases. Open-source project status:\n Project Current Version Release/Status PnP .NET Libraries - PnP Framework v1.4.0 Bug fixes, Prepping for v1.5.0 (May) PnP .NET Libraries - PnP Core SDK v1.1.0 Bug fixes, Prepping for v1.2.0 (May) PnP PowerShell v1.5.0 Prepping for v1.6.0 (May) Yo teams - generator-teams v3.0.3 GA, v3.1.0 Preview Preview with Viva Connections support Yo teams - yoteams-build-core v1.1.0 Yo teams - msteams-react-base-component v3.1.0 Microsoft Graph Toolkit (MGT) v2.1.0 GA, v2.2.0 Preview Bug fixes and v2.2.0 preview updates\n Additionally, one new Teams sample delivered. The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call.\n  Last week to complete the Microsoft 365 Developer Community Survey \u0026ndash; https://aka.ms/m365pnp/survey\n  Try the public beta of SPFx v1.12.1.   Reserve date - SharePoint Monthly community call - 11th of May 8 AM PDT | https://aka.ms/sp-call\n  Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; May 24th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; April PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; May 13th  PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; May 20th AMA (Ask Me Anything) \u0026ndash; Power Platform Samples \u0026ndash; May 5th AMA (Ask Me Anything) \u0026ndash; Tech Community \u0026ndash; May 11th First Time Presenter \u0026ndash; May 25th More than Code with VS Code \u0026ndash; May 27th  Maturity Model Practitioners \u0026ndash; May 18th PnP Office Hours \u0026ndash; 1:1 session - Register    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Document manager sample app using messaging \u0026ndash; Sathya Raveendran, Varaprasa... Thank you for being part of the community and for helping others to succeed. You are awesome!   Demos Demos delivered in this session\n  Delegated and application permissions in the Microsoft Identity Platform \u0026ndash; demystifies the identity model with a clearly delivered 100 level overview of app permissions - operation and terminology, i.e., delegation, requests, grants, consent, tokens, etc. How app/services permission delegation works, how tokens are aligned to a machine or to a person. Is the app or person authorized to access resources? How and when machines dynamically/statically request permissions and more.\n  Localization check inside SharePoint Framework projects \u0026ndash; VS Code extension to increase your productivity \u0026ndash; a VS Code and Node.js extension that keeps resources in sync by making sure all localization labels inside SharePoint Framework project files across organization are consistent. The extension is automatically activated for your SPFx solutions and checks, whether localization resource files (en-us.js, nl-nl.js, etc.) follow the pattern, defined in the corresponding strings.d.ts. Prevents accidental or refactoring errors in SPFx solutions.\n  Using field lookups with list formatting \u0026ndash; Field Type = \u0026ldquo;Lookup.\u0026rdquo; Lookups get values from a list and have limited formatting options. Of horse, this limitation does not deter Chris from showing crazy, crazier, craziest formatting options for lookups. Approach = format the lookup column into which content from the list will flow. Use advanced forEach property. In this demo, Chris shows formatting capabilities available in a referenced sample.    Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  PnP .NET library updates - Bert Jansen (Microsoft) | @O365bert - 6:59\n  PnP PowerShell updates - Bert Jansen (Microsoft) | @O365bert - 8:43\n  yo Teams updates - Wictor Wilén (Avanade) | @wictor - 9:53\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) | beth-panx - 11:10\n  Microsoft Teams Samples - Vesa Juvonen (Microsoft) | @vesajuvonen - 12:33\n  Demo: Delegated and application permissions in the Microsoft Identity Platform \u0026ndash; Philippe Signoret (Microsoft) | @psignoret - 14:48\n  Demo: Localization check inside SharePoint Framework projects \u0026ndash; VS Code extension to increase your productivity \u0026ndash; Sergei Sergeev (Mastaq) | @sergeev_srg - 30:22\n  Demo: Using field lookups with list formatting \u0026ndash; Chris Kent (DMI) | @theChrisKent [- 42:48][ ]\n  Resources Additional resources around the covered topics and links from the slides.\n  Slides used in this ​community call\n  Blog - SPFx Check Locale - a nice option to check your localization consistency across SharePoint Framework...   VS Code Extension - SPFx Check Locale\n  [Repo - ]Checks that your localization files match the schema inside mystrings.d.ts\n  Repo - Multi-lookup fields and projected fields   Demos \u0026ndash; Other formatting demos from Chris   Documentation \u0026ndash; Create list relationships by using unique and lookup columns   [PnP Weekly \u0026ndash; Episode 124] with[ guest MVP from Sympraxis Consulting ]Emily Mancini[ |@EEMancini | ]video[ | ]podcast\n  Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  General resources  Microsoft 365 PnP Community hub | aka.ms/m365pnp/community  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt Viva Connections https://aka.ms/VivaConnections SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Microsoft Graph call - May 4th at 8:00 am PDT | https://aka.ms/microsoftgraphcall SharePoint Framework call \u0026ndash; May 6th at 7:00 am PDT | https://aka.ms/spdev-spfx-call SharePoint monthly call \u0026ndash; May 11th at 8:00am PDT | https://aka.ms/sp-call Office add-in monthly call \u0026ndash; May 12th at 8:00 am PDT | https://aka.ms/officeaddinscall M365 General Dev call \u0026ndash; May 13th at 7:00 am PDT | https://aka.ms/m365-dev-sig Adaptive Cards monthly call \u0026ndash; May 13th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall Microsoft Teams monthly call \u0026ndash; May 18th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall Power Apps monthly call \u0026ndash; May 19th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall Microsoft Identity Platform \u0026ndash; May 20th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 30th of April 2021 ","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-29th-of-april/images/sig-29th-apr-recording_hu47a0d1c149f10aefcb005ac33603610a_348634_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-29th-of-april/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 29th of April, 2021"},{"categories":["Community post"],"contents":"Here is an example Power Automate solution where we query a real SharePoint List acting as a Quiz Leader Board on my dev tenant and bring the contents to this very blog post (at the bottom of the page). Using the Power Automate and the HTTP trigger we can retrieve, embed and display content from our Office 365 environments. The competition is rife at the top of this Leader Board. The aim is to get 100% and it is ordered by last completed to give everyone a chance to be top, albeit I am sorry to say that there is no official badge for this one.\nWant to test your Power Automate knowledge? Click Here   For the first flow of two, using Microsoft Forms and Power Automate I have built a pretty standard process. The user completes the quiz, the form gives them feedback on how well they have done and I capture the answers to a SharePoint List - seen below.   I use the when a new [form] response is submitted trigger and during the next couple of actions I calculate their score again (based on their answers) as the score is not passed back to the Cloud Flow via the Response Body.   What\u0026rsquo;s the Score?\nIn order to calculate the score I have created an array via a compose action and used the equals expression. If the response equals the answer, it will return true. I then use a filter action on the item() of each output from the select and filter on true. This will leave me with an array of true values. During the create item score field and tweet action, I use the length() expression (i.e. length of array from 10 possible true answers) to return the number of answers equaling true and multiply by 10 to get the percentage correct.   The final stage of this flow is a **condition **where I check to see if the user has supplied a twitter handle. If it\u0026rsquo;s not empty I tweet out their score. The only disappointment here is that Twitter will not let you tag users due to spamming ! any attempt to include an @ result in it being stripped out.\nThe Leader Board\nThe interesting piece though, is the second flow, using the HTTP trigger action to present the leader board to the web and seen below (at least until my premium trial has not expired). Using the trigger we can run an action to get items, prepare HTML table rows using a select action and send back a response to the website in a fraction of a second. The end user loading the website almost doesn\u0026rsquo;t know it\u0026rsquo;s happening, albeit there is a slight delay for the flow to run, i\u0026rsquo;ll admit. Did you notice the delay in this page loading?\n   The reponse to the embedded IFrame on my Blog and indeed this article which is simply calling the url provided by the HTTP Request trigger is an HTML table. I create the table header and then using the select action body, I use the join() expression to join the elements of the array with \u0026rsquo;\u0026rsquo; into a string and complete the HTML table.   I\u0026rsquo;m not a web developer and I am sure that there will be slicker ways to embed the results of the http response into your site and for that I would be grateful to hear from those with experience but what do you think of this idea? Are you on the leader board yet? As things stand - here is the leader board. Can you resist not talking part? Click Here\nName Score Date\n Fabian 90 07/01/2022 13:45 Sam 60 27/12/2021 15:48 jc2318 40 19/01/2022 17:21\nTweets with your result will be posted via my twitter handle DamoBird365 Meanwhile, if you are looking for a certificate for your efforts, fill out my form here Happy quizzing !\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-29th-of-april/images/sig-29th-apr-recording_hu47a0d1c149f10aefcb005ac33603610a_348634_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/power-platform-ms-forms-quiz-with-dynamic-leader-board-created/","tags":["Power Automate"],"title":"Power Platform MS Forms Quiz with dynamic Leader Board created using Power Automate and HTTP Trigger"},{"categories":["CLI for Microsoft 365"],"contents":"Manage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use\nWhile building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects.\nNew version of CLI for Microsoft 365 \u0026ndash; v3.9 Following our monthly release cadence, we\u0026rsquo;ve released a new version of the CLI for Microsoft 365 with some new capabilities. Here are a few of the most noteworthy additions.\nChanges  We\u0026rsquo;ve continued improving CLI building upon the changes we\u0026rsquo;ve introduced in the previous version.\nSupport for upgrading SharePoint Framework (SPFx) projects to beta versions\nWith the new public preview release of SharePoint Framework 1.12.1 and a new public quality assurance model that was announced with it, we are delighted to announce that we have added support for upgrading your SharePoint Framework projects to the latest beta release candidate.\n To upgrade your SharePoint Framework project to the latest preview version, execute:\n m365 spfx project upgrade --preview As part of our beta release cadence, when new release candidates are made available in npm, we will release support for upgrading to that new version as soon as they are available.\nSupport for creating Azure Active Directory (AAD) applications from a manifest\nAs part of our efforts to make development easier in Microsoft 365, we have released support for creating Azure Active Directory application registrations from an app manifest file.\nA typical scenario for developers and administrators is to create app registrations in the Azure Portal manually through the friendly user interface, however this can be time-consuming and error prone to repeat for multiple environments.\nThis update will enable you to copy the app manifest file that is generated in the Azure Portal and pass it into the command to confidently recreate app registrations.\nm365 aad app add --manifest @manifest.json Support for using relative URLs in SharePoint Online (SPO) commands\n CLI for Microsoft 365 contains a number of commands for managing SharePoint Online. Each of these commands requires you to specify the site or web on which you want to execute the command. For example, to get information about a site collection located at https://contoso.sharepoint.com/sites/contoso, you\u0026rsquo;d execute: m365 spo site get --url https://contoso.sharepoint.com/sites/contoso If you executed an spo command previously, CLI for Microsoft 365 already knows the hostname of your SharePoint Online tenant. In such case, you can use a server-relative URL as well: m365 spo site get --url /sites/contoso If you try to use a server-relative URL but CLI for Microsoft 365 doesn\u0026rsquo;t know of your SharePoint Online URL yet, you will see an error prompting you to either use an absolute URL or set the SPO URL using the spo set command: m365 spo set --url https://contoso.sharepoint.com You can also execute a command like m365 spo site list that will automatically detect your SharePoint Online tenant URL for you. To check if CLI detected the SPO URL previously, use the m365 spo get command.\nMoved from adal-node to msal-node\nCLI for Microsoft 365 up to this point has been using the Microsoft Azure Directory Authentication Library for nodejs (adal-node) for handling authentication requests between the CLI and Microsoft 365, however the ADAL library was put into maintenance mode and stopped receiving updates on June 30th 2020.\nWith this release we have moved to use the Microsoft Authentication Library for nodejs (msal-node) which replaces adal-node, ensuring that the CLI for Microsoft 365 is able to receive updates and take advantage of new authentication features added to msal-node going forwards. New Commands  Add a role to a specified Azure Active Directory (AAD) app registration Role-based access control (RBAC) is a popular mechanism to enforce authorization in applications. When using RBAC, an administrator grants permissions to roles, and not to individual users or groups. The administrator can then assign roles to different users and groups to control who has access to what content and functionality. To add a role to the Azure AD application registration specified by its name, execute: m365 aad app role add --appName \u0026#34;My app\u0026#34; --name Managers --description \u0026#34;Managers\u0026#34; --allowedMembers usersGroups --claim managers  Add a new Microsoft Planner plan All teams need to track tasks, a quick and easy way to do that in Microsoft 365 is to create a shared plan in Planner to manage and assign those tasks to team members. To add a new Microsoft Planner plan to a Microsoft 365 Group, execute: m365 planner plan add --title \u0026#34;My Planner Plan\u0026#34; --ownerGroupName \u0026#34;My Planner Group\u0026#34;  Add a specific application permissions to a SharePoint Online site On Feb 11, Microsoft announced support for resource-specific consent in SharePoint via Microsoft Graph in this release we have added a new command to support adding permissions to SharePoint Online sites. To add a specific application permissions to a SharePoint Online site, execute:\nm365 spo site apppermission add --siteUrl https://contoso.sharepoint.com/sites/project-x --permission read --appDisplayName Foo Return the User Profile properties of a specific SharePoint Online user To return the user profile properties of specific user, execute: m365 spo userprofile get --userName \u0026#39;john.doe@mytenant.onmicrosoft.com\u0026#39;  Create the Microsoft Viva Connections desktop app package to upload to Microsoft Teams Microsoft Viva Connections was the first part of the Viva Employee Experience features to be be made Generally Available to all Microsoft 365 tenants on 31st March 2020, however to enable Viva Connections in your tenant a number of deployment steps that needed to be followed, which includes the creation of the desktop app package that is deployed to Microsoft Teams. So we have added a new command which simplifies the creation of this app package for you. To create the app package, execute: m365 viva connections app create --portalUrl https://contoso.sharepoint.com --appName Contoso --description \u0026#34;Contoso company app\u0026#34; --longDescription \u0026#34;Stay on top of what\u0026#39;s happening at Contoso\u0026#34; --companyName Contoso --companyWebsiteUrl https://contoso.com --coloredIconPath icon-color.png --outlineIconPath icon-outline.png  To upload the app package to your Microsoft Teams app catalog, execute: m365 teams app publish --filePath ./contoso.zip New script samples  CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts.\n If you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\nCleanup completed Microsoft To Do tasks\nMicrosoft To Do is the go to personal task management tool of choice in Microsoft 365, however completed tasks can sometimes get in the way.\nThis script helps remove all completed Microsoft To Do tasks by iterating over all of your task lists and deleting tasks that have been marked as completed.\nCreate a Microsoft Teams team and bulk add members from CSV file\nMicrosoft Teams is core to collaboration in Microsoft 365, but creating several teams and adding new members to those Teams can be time consuming.\nThis sample script shows you how to create a Team and add members and owners using a CSV.\nSetup an example SharePoint Online site\nWhen creating SharePoint Online sites, generally you want to make some immediate changes after its creation.\n\nThis script is a good starting point for a setup script to create site with some assets like columns, content types, lists, navigation etc. The given example:\n creates a site, adds a site column and a content type, adds list and modifies it\u0026rsquo;s settings (add a content type to it and makes it hidden), adds a document library with a custom column and some folder, modifies the all items view of the document library, modifies the site navigation links  Upload local files and folders to SharePoint Online\nSharePoint Online is the backbone of Microsoft 365 for file storage and sharing. This script shows how you can use the CLI to upload files located on a local folder to a SharePoint Online library or subfolder.\nBulk add members to Microsoft Teams team from CSV file\nAdding new team members to an existing Team through the Teams user interface can be time consuming, this script will add users to existing Teams contained in a .csv file. Copy files to another SharePoint Library in another site\nThis script helps you copy files across different sites in SharePoint Online, it shows you how you can copy all files and folders from source library to a different library in different SharePoint site keeping the same folder and subfolder structure and copy all files from all folders and subfolders from source library to a different library to a root folder in different SharePoint\nRemove a Site Collection Admin User from all Site Collections\nWhen employees leave organisations or change job roles it is important that access is removed where it is no longer required.\nThis script helps remove a designated user in every SharePoint Online site in the tenant if he/she is a Site Collection Admin. This applies to Group-connected sites, non group-connected sites, or classic sites.\nReplace an owner in a Microsoft 365 Group or Microsoft Team\nThis script helps find all the Microsoft 365 Groups that a user is an Owner of and replace them with someone else useful for when an employee leaves and ownership needs to be updated.\nAdd a SharePoint Site Collection Administrator using CSV file\nThis script helps you add a new SharePoint Site Collection Administrator to many sites using a CSV file, this is useful for granting access to sites that are not visible in the SharePoint Admin Center such as Microsoft Teams Private Channels.\nContributors This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order)\n  Phil Harding Patrick Lamber Veronique Lengelle Waldek Mastykarz Smita Nachan Nanddeep Nachan Dipen Shah Albert Jan-Schot Garry Trinder Joseph Velliah Rabia Williams Adam Wojcik   Thank you all for the time you chose to spend on the CLI for Microsoft 365 and your help to advance it!\nWork in progress  Here are some things that we\u0026rsquo;re currently working on.\n More commands, what else Microsoft 365 is evolving and new capabilities are being released every day. With CLI for Microsoft 365, we aim to help you manage your tenant on any platform in a consistent way, no matter which part of Microsoft 365 you interact with. While we keep adding new commands to CLI for Microsoft 365 each release, we still barely scratched the surface with what\u0026rsquo;s possible in Microsoft 365. In the upcoming versions of the CLI for Microsoft, you can expect us to add more commands across the different workloads in Microsoft 365.\nImproved managing SharePoint pages  Microsoft keeps investing in modern SharePoint pages continuously introducing new capabilities to let us publish rich content. We\u0026rsquo;re looking into extending our support for managing modern SharePoint pages to let you use them to their full potential.\nImproved creating Azure AD apps  Recently, we\u0026rsquo;ve introduced a command to easily create Azure AD app registrations. Because they\u0026rsquo;re backbone of every app you\u0026rsquo;d build on Microsoft 365, we think you should be able to create them as easily as possible. So with CLI for Microsoft 365, you can create a fully configured Azure AD app for the most common scenarios with just one line of code.\nIn the future versions of CLI for Microsoft 365 you can expect us extend the capabilities with additional scenarios and features supported by Azure AD.\nScript examples  In every release of the CLI for Microsoft 365, we introduce new commands for managing Microsoft 365. With over 350 commands across the different Microsoft 365 services, the CLI for Microsoft 365 has become a powerful tool, not just for managing your tenant but also for automating your daily work.\n We\u0026rsquo;d love to show you how you can use the CLI for Microsoft 365 to build automation scripts in PowerShell Core and Bash. If you have any scripts using SPO or PnP PowerShell that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\n\u0026rsquo;ensure\u0026rsquo; commands  We\u0026rsquo;ve just shipped our first ensure command - an easy way to help you that a site with specific settings exists. If it doesn\u0026rsquo;t, CLI creates it for you, if it does, CLI ensures it has the right properties. All in one line of code. We\u0026rsquo;d love to hear from you how you like it and if it\u0026rsquo;s something you\u0026rsquo;d like us to implement for other commands as well.\n Try it today  Get the latest release of the CLI for Microsoft 365 from npm by executing:\n npm i -g @pnp/cli-microsoft365 Alternatively, you can get the latest release from Docker by executing:\n docker run --rm -it m365pnp/cli-microsoft365:latest If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365.\n If you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-9/images/banner-cli-m365_hudf0438f961ff7b005fc2ad64065ff955_577192_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-9/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 v3.9"},{"categories":["Office add-in developer community call"],"contents":"The Office Add-ins developer platform team has new updates to share this month on Office Add-ins Patterns and Practices. PnP is a community effort, so if you are interested in contributing, see our good first issue list.\nUse Outlook event-based activation to set the signature (preview)    This sample uses event-based activation to run an Outlook add-in when the user creates a new message or appointment. The add-in can respond to events, even when the task pane is not open. It also uses the setSignatureAsync API. If no signature is set, the add-in prompts the user to set a signature, and can then open the task pane for the user.\n Check out the code sample: Use Outlook event-based activation to set the signature (preview) Check out the docs: Configure your Outlook add-in for event-based activation (preview)  Contributors Thank you to our contributors who are actively helping each month with the PnP-OfficeAddins community effort.\n Maarten van Stam - helping review PRs and issues on PnP-OfficeAddins  Want to contribute? PnP is a community effort by developers like you. Check out our good first issue list as a great place to help with some samples. Feel free to contribute to existing samples or create new ones.\nAbout Office Add-ins Patterns \u0026amp; Practices (PnP) Office Add-ins PnP is a Microsoft-led, community driven effort that helps developers extend, build, and provision customizations on the Office platform the right way by providing guidance and help through official documentation and open-source initiatives. The source is maintained in GitHub where anyone can participate. You can provide contributions to the samples, reusable components, and documentation. Office Add-ins PnP is owned and coordinated by Office engineering teams, but the work is done by the community for the community.\nYou can find code samples for Office Add-in development in the Office Add-ins PnP repo. Some samples are also documented in the Office Add-ins docs, such as Open in Excel.\nAdditional resources Get started with Office development by joining the Microsoft 365 developer program.\nTry out some samples and get coding quickly with Office add-ins by downloading Script Lab.\nLearn more by joining the monthly Office Add-ins community call.\n","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-in-developer-community-pnp-march-2021-update/images/pnp-set-signature_hud209ca94085e9a44beec0966e5481d6c_97091_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-in-developer-community-pnp-march-2021-update/","tags":[],"title":"Office Add-in Developer Community (PnP) -- March 2021 update"},{"categories":["Community post"],"contents":"This post will guide you through the process of how to use the Power Apps Language Toolkit to extract a Power Apps .msapp file. Why would you want to have the source code files? To make your app reusable, so that more people can benefit from it, you will want to share the source code files. Unfortunately, when you save your Canvas App from Power Apps Studio, it is saved in one opaque .msapp file. To be able to get the source files, you will need to use the Power Apps Language Toolkit to extract all files from the .msapp file. This way,\n developers can not only open the source code in their code editor of choice but can effectively manage the code of a Canvas app in GitHub or Azure DevOps. This makes a huge difference as we can\u0026rsquo;t look into .msapp files. makers can still open the .msapp file to easily import an app sample into their environment  Prerequisites To be able to use the Power Apps Language Toolkit, you will need to\n install Visual Studio Code  install .NET Core 3.1.x (x64)  download the Power Apps Language Toolkit  go to github.com/microsoft/PowerApps-Language-Tooling  select Code select Download ZIP    extract the Power Apps Language Toolkit to a local folder  open that local folder locate the build.cmd file rightclick, Run as Administrator in the Pop up Window, select more info select Run anyway  Please note, that command Prompt will open, show a few lines and then close automatically again. Please also not, that you can now find a bin folder in the local folder you extracted the PowerApps Language Toolkit to. In this bin folder, you will find a Debug folder and inside of the Debug folder you will find a PASopa folder.   Download the .msapp file  go to https://make.powerapps.com) log in open your app in edit mode select File select Save as select This Computer select Download move the downloaded .msapp file to your folder in which you extracted the PowerApps Language Toolkit as well  unpack .msapp file  Now that we have the .msapp file of the app: press the WINDOWS key on your keyboard and search for Command Prompt (first few letters should do) run as an Administrator copy the path of the PASopa folder  type in Command Prompt `cd \u0026lt;your PASopa path\u0026gt;` copy the path of the .msapp file create a new folder in your app folder copy the path of that new folder type in Command Prompt `pasopa -unpack \u0026lt;your msappfile path\u0026gt; \u0026lt;new folder path\u0026gt;`  Please note that you will now find all source code files in that new folder. You can open the folder in a code Editor of your choice, for example Visual Studio Code.\nsubmit as a sample Well done! If you like to contribute with your app to the PnP Power Apps sample gallery , you can submit your app with these source code files here. To do so, follow these steps: Now you can submit these source code files as a sample. Please\n fork the PnP PowerApps repository  commit your files Pull Request by filling out the PR template Please do not forget to provide as well a `README.md` file which explains what your sample is about.  If this all sounds confusing to you and you are new on GitHub - you are more than welcome to attend the Sharing Is Caring sessions, where we guide you through using GitHub and making your first PR. Sharing Is Caring\n","image":"https://pnp.github.io/blog/post/how-to-get-source-code-files-for-power-apps-canvas-apps/images/PASopa-folder_hu7af86531c70f1a0d3c5ca3dbf50ac8ca_46030_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-get-source-code-files-for-power-apps-canvas-apps/","tags":["Power Apps"],"title":"How to get Source Code files for Power Apps Canvas apps"},{"categories":["Community post"],"contents":"Why? In April, I showed how to unpack and repack Power Apps .msapp files of Canvas Apps in the blog post Power Apps Source Code file editing for Canvas Apps (microsoft.com) Using this functionality, we can view and edit the source code of Canvas Apps. In a recent announcement (Canvas source code tool integrated with Power Platform CLI | Microsoft Power Apps), Microsoft announced that the same functionalities are now available within the Power Platform VS Code Extension of Visual Studio Code!\n   This means that after installing this extension, we can do the same unpacking and packing without leaving Visual Studio Code.\nWhat? This posts will show how easy it is to use Visual Studio Code so we can unpack and (re)pack .msapp files of Canvas Apps:\n   How? 1) First install the Power Platform VS Code Extension in your Visual Studio Code Client using the Visual Studio Marketplace (Power Platform VS Code Extension - Visual Studio Marketplace).\n   2) After installing the extension a computer restart may be required. We can from this moment on, run commands from within Visual Studio using the built-in Terminal. In my example I saved the text file with commands as a Power Shell file (.ps1). In this type of files, short cuts like F8 can be used to run selected commands:\n   Notice the improved commands where referencing (input and output) files is much easier now!\n   In the Marketplace screenshot above, you can see that the extension is in Preview at the moment. Please be aware of this and read the announcement link above on how to report issues. Originally published at Power Apps: source code edit for Canvas Apps in Visual Studio Code » Knowhere365\n","image":"https://pnp.github.io/blog/post/power-apps-source-code-edit-for-canvas-apps-in-visual-studio/images/PowerApps_VisualStudio_PowerPlatform_Extension_hubdddf669bdd8ce5767bff182c3a0d20a_32948_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/power-apps-source-code-edit-for-canvas-apps-in-visual-studio/","tags":["Power Apps"],"title":"Power Apps: source code edit for Canvas Apps in Visual Studio Code"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by MVP, PnP Team member, and Architect at US-based Sympraxis Consulting Emily Mancini |@EEMancini. Topics discussed in this session include: Sharing is Caring engagement model, Aligning and addressing the client\u0026rsquo;s business needs with capabilities of owned technologies, i.e., Microsoft 365 for making changes with the business and not to the business! Conscious/unconscious usage of the Microsoft 365 Maturity Model for business ROI maximization. Ideas for increasing diversity in IT personnel, Imposter Syndrome, Tech vs Outcome and Teams or Yammer. Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse. Covering also 23 articles from Microsoft and the Community.\nThis episode was recorded on Monday, April 26, 2021.\n Video at Microsoft 365 Community YouTube channel    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nEvents  April 26-28, 2021 - Microsoft 365 Virtual Marathon 2021 May 25-27, 2021- Microsoft Build 2021 August 9-11, 2021 - North American Collaboration Summit  Register with coupon code \u0026ldquo;PnP\u0026rdquo; for 25% off from the prize at https://nacs.ticketspice.com/nacs2021    Microsoft articles  Announcing Viva Learning public preview - John Mighell (Microsoft) Build and ship software better with GitHub and Microsoft Teams - Microsoft Microsoft 365 Virtual Marathon 2021 - free, online training event - Mark Kashman (Microsoft) | @mkashman iPad support now available in Microsoft Lists for iOS - Mark Kashman (Microsoft) | @mkashman Build quality Microsoft Teams apps with these best practices: Part 3 - Microsoft Utilize change notification APIs for Microsoft Teams messages - Microsoft  Community articles  Teams - an adoption idea? Transfer your group chat emails to Teams with Power Automate - Damien Bird (Aberdeen City Council) | @DamoBird365 Microsoft 365 PnP Community Spotlight: Wictor Wilén - Luise Freese | @LuiseFreese \u0026amp; Wictor Wilén (Avanade) | @wictor What I (as a non dev) learned as I created my first Power App - Michael Roth (IT-P Information Technology-Partner GmbH) | @Gezeitenbrand Learn to debug your Power Apps - Michael Roth (IT-P Information Technology-Partner GmbH) | @Gezeitenbrand Export Power Apps and Power Automate user licenses - Yves Habersaat (Sword Group) | @yhabersaat How to beautify your Power Apps - Luise Freese | @LuiseFreese Intro to Power Apps Components and Custom Functions - April Dunnam (Microsoft) | @aprildunnam Microsoft 365 Developer - Tips \u0026amp; Tricks playlist - Bob German (Microsoft) | @Bob1German, Dan Wahlin (Microsoft) | @DanWahlin, April Dunnam (Microsoft) | @aprildunnam and Ayca Bas (Microsoft) | @aycabs​ Episode #151​ - Paging Data with Microsoft Graph SDK for .NET - Paolo Pialorsi (PiaSys) | @PaoloPia Power Apps Forms - Updates, Unsaved \u0026amp; Submit Confirmation - Reza Dorrani (Catapult Systems) | rdorrani Actually, It\u0026rsquo;s Already In The SharePoint PageContext! - Tips by Bits | @TipsByBits Implement Carousel in SPFx web part using react-slick - Prasham Sabadra | @SabadraPrasham Monitoring Microsoft 365 using Raspberry Pi and M365 CLI - Anatoly Mironov (Bool by Sigma) | @mirontoli Building Modern SharePoint Pages with Quick Links - Sam Collins (Coupled Technology) | @SamC148 Adding Conditional Formatting for a List Form Header with JSON - Marc D Anderson (Sympraxis Consulting) | @sympmarc SharePoint Syntex - teaching AI to extract contents of structured documents with Form Processing - Chris O\u0026rsquo;Brien (Content+Cloud) | @ChrisO_Brien\\ Would you ever use SharePoint Online without Microsoft Teams? - Sarah Haase | @sarahhaase, Antonio Maio | @AntonioMaio2 and Mike Maadarani | @mikemaadarani  Additional resources  Maturity Model for Microsoft 365 Microsoft 365 Community Survey - Open for April 2021 - please let us know how we can help to help you! Power Platform Sample Gallery - for finding easily samples from the GitHub - contributions from the community are welcome! PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions. \u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-124/images/Thumb-Ep124_hu5bc740a5dfcaca85c6930a3736903b6d_563281_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-124/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 124"},{"categories":["Community post"],"contents":"Transfer your group chat emails to Teams with Power Automate\nI recently covered this idea on my blog but it is a Cloud Flow that I make use of often so I thought I would share it with you all. My organisation is well in to their Teams adoption journey and whilst a large proportion of users use Teams for their first port of call for a group chat, it still often surprises me when a conversation is struck up via Outlook Email and very quickly we get lost between reply to alls and reply to sender. Could Power Automate help you move that conversation group or one to one to Teams with a mouse click before the conversation gets out of control? The simplest way for me, to transfer the conversation from Outlook and trigger a flow, was to use \u0026ldquo;When an email is flagged\u0026rdquo; trigger. Therefore I can simply flag an email in Outlook and take the conversation onto Teams. With the variables provided by the email trigger, I compose (by default) the to and from fields in order to get all mail recipients (albeit you may want to include the CC\u0026rsquo;d emails to) and simply replace the semi colon with a comma, this is needed for the final and only other step. Using the \u0026ldquo;Post your own adaptive card as the Flow bot to a user\u0026rdquo; step, I am able to send an adaptive card notification in Teams to myself and provide a summary of the email I am transferring, from, subject and body preview and in my case the option to start a one to one chat with the sender or a group chat if there are more than one recipients of the email. This is done using the Deep Link feature of Teams. I have supplied a copy/paste option at the end of my post that will allow you to replicate this in your personal PowerAutomate / Teams environment in a matter of seconds. **NOTE** make sure you update the TO field in the post adaptive card action as it\u0026rsquo;s currently set to youremail[at]yourdomain[dot]com.\nSo, what does the Cloud Flow look like?\n   The cloud flow only has 2 actions The flow simply consists of a compose action in order to structure the list of emails from the email trigger, above I don\u0026rsquo;t include the cc\u0026rsquo;d emails. You\u0026rsquo;ve therefore a couple options for the get group email compose action, do you want to include cc\u0026rsquo;d or not in the Group Chat Deep Link? The below sample snippet expression includes the ccRecipients, but feel free to adjust as necessary.\nreplace(tolower(concat(triggerOutputs()?[‘body/toRecipients’], ‘;’, triggerOutputs()?[‘body/from’], ‘;’, triggerOutputs()?[‘body/ccRecipients’])), ‘;’, ‘,’) The second and final step is an adaptive card built via adaptive cards designer. It\u0026rsquo;s a steep learning curve but Designer site gives you plenty of sample cards to experiment with and it is here that you need to include the deep links to your new Teams conversations which will automatically launch a teams conversation with these users.\nThe User Experience My colleague Alex, sends me an email with a list of colleagues in the to field. Before the conversation gets out of control, I simply flag the email and instigate a move to Teams Group Chat.   Within a matter of seconds, basically as fast as your Flow is triggered, a Flow Bot message is received to my Teams application with the subject and summary email body including a link to both a one to one and group chat.    Clicking on that Group DM in Teams button results in an opening conversation line and conversation subject (in draft), all courtesy of the deep link. Now it\u0026rsquo;s time to get the conversation going.   Want to try the solution quickly?\nDid you know that you can copy and paste Cloud Flow actions between environments really easily? Simply by creating a new Cloud Flow with the \u0026ldquo;When an email is flagged\u0026rdquo; trigger you can then copy the provided code below and paste it into your ClipBoard by clicking Next Step, selecting My ClipBoard and pasting with Ctrl + V. The only field you need to change is the Adaptive Card Recipient which by default is set to youremail[at]yourdomain[dot]com. Just make sure you set this to your own email address to receive the Adaptive Card.\n {\u0026#34;id\u0026#34;:\u0026#34;f616b2c7-1645-4360-aff5-1710-a2bfb6a1\u0026#34;,\u0026#34;brandColor\u0026#34;:\u0026#34;#8C3900\u0026#34;,\u0026#34;connectionReferences\u0026#34;:{\u0026#34;shared_office365\u0026#34;:{\u0026#34;connection\u0026#34;:{\u0026#34;id\u0026#34;:\u0026#34;/providers/Microsoft.PowerApps/apis/shared_office365/connections/shared-office365-2c7a215d-616e-4cc2-9dab-9d05f14c21a5\u0026#34;}},\u0026#34;shared_teams_1\u0026#34;:{\u0026#34;connection\u0026#34;:{\u0026#34;id\u0026#34;:\u0026#34;/providers/Microsoft.PowerApps/apis/shared_teams/connections/shared-teams-c32e6b36-e3dd-4ca6-806d-5969ba7e6dee\u0026#34;}}},\u0026#34;connectorDisplayName\u0026#34;:\u0026#34;Control\u0026#34;,\u0026#34;icon\u0026#34;:\u0026#34;data\u0026amp;colon;image/svg+xml;base64,PHN2ZyB3aWR0aD0iMzIiIGhlaWdodD0iMzIiIHZlcnNpb249IjEuMSIgdmlld0JveD0iMCAwIDMyIDMyIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPg0KIDxwYXRoIGQ9Im0wIDBoMzJ2MzJoLTMyeiIgZmlsbD0iIzhDMzkwMCIvPg0KIDxwYXRoIGQ9Im04IDEwaDE2djEyaC0xNnptMTUgMTF2LTEwaC0xNHYxMHptLTItOHY2aC0xMHYtNnptLTEgNXYtNGgtOHY0eiIgZmlsbD0iI2ZmZiIvPg0KPC9zdmc+DQo=\u0026#34;,\u0026#34;isTrigger\u0026#34;:false,\u0026#34;operationName\u0026#34;:\u0026#34;DamoBird365_Transfer_Email_To_Teams\u0026#34;,\u0026#34;operationDefinition\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;Scope\u0026#34;,\u0026#34;actions\u0026#34;:{\u0026#34;Get_All_To_and_From_Emails\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;Compose\u0026#34;,\u0026#34;inputs\u0026#34;:\u0026#34;@replace(tolower(concat(triggerOutputs()?[\u0026#39;body/toRecipients\u0026#39;], \u0026#39;;\u0026#39;, triggerOutputs()?[\u0026#39;body/from\u0026#39;])), \u0026#39;;\u0026#39;, \u0026#39;,\u0026#39;)\u0026#34;,\u0026#34;runAfter\u0026#34;:{}},\u0026#34;Post_your_own_adaptive_card_as_the_Flow_bot_to_a_user\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;OpenApiConnection\u0026#34;,\u0026#34;inputs\u0026#34;:{\u0026#34;host\u0026#34;:{\u0026#34;connectionName\u0026#34;:\u0026#34;shared_teams_1\u0026#34;,\u0026#34;operationId\u0026#34;:\u0026#34;PostUserAdaptiveCard\u0026#34;,\u0026#34;apiId\u0026#34;:\u0026#34;/providers/Microsoft.PowerApps/apis/shared_teams\u0026#34;},\u0026#34;parameters\u0026#34;:{\u0026#34;PostAdaptiveCardRequest/recipient/to\u0026#34;:\u0026#34;youremail[at]yourdomain[dot]com;\u0026#34;,\u0026#34;PostAdaptiveCardRequest/messageBody\u0026#34;:\u0026#34;{\\n \\\u0026#34;type\\\u0026#34;: \\\u0026#34;AdaptiveCard\\\u0026#34;,\\n \\\u0026#34;body\\\u0026#34;: [\\n {\\n \\\u0026#34;type\\\u0026#34;: \\\u0026#34;TextBlock\\\u0026#34;,\\n \\\u0026#34;size\\\u0026#34;: \\\u0026#34;Medium\\\u0026#34;,\\n \\\u0026#34;weight\\\u0026#34;: \\\u0026#34;Bolder\\\u0026#34;,\\n \\\u0026#34;text\\\u0026#34;: \\\u0026#34;Transfer Email to Chat\\\u0026#34;,\\n \\\u0026#34;wrap\\\u0026#34;: true\\n },\\n {\\n \\\u0026#34;type\\\u0026#34;: \\\u0026#34;ColumnSet\\\u0026#34;,\\n \\\u0026#34;columns\\\u0026#34;: [\\n {\\n \\\u0026#34;type\\\u0026#34;: \\\u0026#34;Column\\\u0026#34;,\\n \\\u0026#34;items\\\u0026#34;: [\\n {\\n \\\u0026#34;type\\\u0026#34;: \\\u0026#34;TextBlock\\\u0026#34;,\\n \\\u0026#34;weight\\\u0026#34;: \\\u0026#34;Bolder\\\u0026#34;,\\n \\\u0026#34;text\\\u0026#34;: \\\u0026#34;@{triggerOutputs()?[\u0026#39;body/from\u0026#39;]}\\\u0026#34;,\\n \\\u0026#34;wrap\\\u0026#34;: true\\n },\\n {\\n \\\u0026#34;type\\\u0026#34;: \\\u0026#34;TextBlock\\\u0026#34;,\\n \\\u0026#34;spacing\\\u0026#34;: \\\u0026#34;None\\\u0026#34;,\\n \\\u0026#34;text\\\u0026#34;: \\\u0026#34;@{triggerOutputs()?[\u0026#39;body/subject\u0026#39;]}\\\u0026#34;,\\n \\\u0026#34;isSubtle\\\u0026#34;: true,\\n \\\u0026#34;wrap\\\u0026#34;: true\\n }\\n ],\\n \\\u0026#34;width\\\u0026#34;: \\\u0026#34;stretch\\\u0026#34;\\n }\\n ]\\n },\\n {\\n \\\u0026#34;type\\\u0026#34;: \\\u0026#34;TextBlock\\\u0026#34;,\\n \\\u0026#34;text\\\u0026#34;: \\\u0026#34;@{triggerOutputs()?[\u0026#39;body/bodyPreview\u0026#39;]}\\\u0026#34;,\\n \\\u0026#34;wrap\\\u0026#34;: true\\n }\\n ],\\n \\\u0026#34;actions\\\u0026#34;: [\\n {\\n \\\u0026#34;type\\\u0026#34;: \\\u0026#34;Action.OpenUrl\\\u0026#34;,\\n \\\u0026#34;title\\\u0026#34;: \\\u0026#34;Start Group DM in Teams\\\u0026#34;,\\n \\\u0026#34;url\\\u0026#34;: \\\u0026#34;https://teams.microsoft.com/l/chat/0/0?users=@{outputs(\u0026#39;Get_All_To_and_From_Emails\u0026#39;)}\u0026amp;topicName=@{triggerOutputs()?[\u0026#39;body/subject\u0026#39;]}\u0026amp;message=Hi, regarding your Email (@{triggerOutputs()?[\u0026#39;body/subject\u0026#39;]}). \\\u0026#34;\\n },\\n {\\n \\\u0026#34;type\\\u0026#34;: \\\u0026#34;Action.OpenUrl\\\u0026#34;,\\n \\\u0026#34;title\\\u0026#34;: \\\u0026#34;Start 1:1 DM in Teams\\\u0026#34;,\\n \\\u0026#34;url\\\u0026#34;: \\\u0026#34;https://teams.microsoft.com/l/chat/0/0?users=@{triggerOutputs()?[\u0026#39;body/from\u0026#39;]}\u0026amp;topicName=@{triggerOutputs()?[\u0026#39;body/subject\u0026#39;]}\u0026amp;message=Hi, regarding your Email (@{triggerOutputs()?[\u0026#39;body/subject\u0026#39;]}). \\\u0026#34;\\n },\\n ],\\n \\\u0026#34;$schema\\\u0026#34;: \\\u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\\\u0026#34;,\\n \\\u0026#34;version\\\u0026#34;: \\\u0026#34;1.2\\\u0026#34;\\n}\u0026#34;,\u0026#34;PostAdaptiveCardRequest/messageTitle\u0026#34;:\u0026#34;Transfer Email To Teams\u0026#34;},\u0026#34;authentication\u0026#34;:\u0026#34;@parameters(\u0026#39;$authentication\u0026#39;)\u0026#34;},\u0026#34;runAfter\u0026#34;:{\u0026#34;Get_All_To_and_From_Emails\u0026#34;:[\u0026#34;Succeeded\u0026#34;]}}},\u0026#34;runAfter\u0026#34;:{},\u0026#34;description\u0026#34;:\u0026#34;***Please make sure you update the TO: in the Adaptive Card***\u0026#34;}} Summary\nGet that internal conversation moved from traditional Email into modern Teams. Not all conversation is better suited to Teams, I accept, but it\u0026rsquo;s often far more productive to have the order of conversation in front of you, expecially if you have had a couple days off. If a colleague has taken the initiative to shift a conversation into Teams, it will save the group a lot of effort having to sift through that email string and potentially allows you to work in real time seeing if someone is available/online, rather than wait for that next email to come in or maybe a couple of people reply to that email at the same time with a different opinion - I\u0026rsquo;ve enjoyed working with you email, but Teams messaging is my preferred internal conversation route these days if I can\u0026rsquo;t start a call of course. What trigger would suit you best?\nWould you include To/From or CC\u0026rsquo;d members too in your Group Email?\nHave you used Teams Deep Links before? Check out my blog for more ideas or if you have an idea of your own but don\u0026rsquo;t know where to start, give me a shout via the various platforms - DamoBird365\n","image":"https://pnp.github.io/blog/post/teams-an-adoption-idea-transfer-your-group-chat-emails-to-teams/images/DamoBird365_0-1619420006466_hu575075b505aaf4be00f8a3ef81dd77bb_312942_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/teams-an-adoption-idea-transfer-your-group-chat-emails-to-teams/","tags":["Microsoft Teams","Adaptive cards","Power Automate"],"title":"Teams - an adoption idea? Transfer your group chat emails to Teams with Power Automate"},{"categories":["Community post"],"contents":"Which community project do you maintain? yo teams\nHow does it help people? yo teams helps developers kickstart their Teams extensibility projects by providing an easy way to create the first Teams App all the way to scaffolding a solution that can be deployed, scaled and maintained.\nWhat have you been working on lately? yo teams is continuously evolving based on feedback and real-world feedback and experience from the community. As of lately we\u0026rsquo;ve been focused on making it easier and faster to create a project and at the same keep a high level of flexibility for those developers who wants to control and manage everything themselves.\nWhat do you do at work? I\u0026rsquo;m the global innovation lead for Modern Workplace at Avanade\nWhy are you a part of the M365 community? Because I learn new stuff all the time - the benefits of a community is the diversity of different voices and opinions. This eventually makes me become better in what I do, and I hope that others learn from what I do.\nWhat was you first community contribution? My first true open source community contribution was in the form of a web part for SharePoint 2007/WSS 3.0, called the ChartPart\nOne tip for someone who’d like to start contributing Just do it. You never know what you might learn and who you might learn to know.\n","image":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-wictor-wilen/images/wictorwilen_hu6747b0571803487707e9e59bd7bf39c7_36108_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-wictor-wilen/","tags":[],"title":"Microsoft 365 PnP Community Spotlight: Wictor Wilén"},{"categories":["Community post"],"contents":"I like to share my very own experiences while building my first canvas app. I have no tech background and at the beginning I thought that I could never do it. But now, looking back, I\u0026rsquo;ve learned so many things. Not only about functions and Power Apps syntax, but about the process of building apps, learning from failure and community.\nI hope you find that helpful, get inspiration or learn anything from it.\nLet\u0026rsquo;s dive into the topic, without any further delay: Here are 9 things I\u0026rsquo;ve learned while building my first canvas app. Why only 9? Why not 10? Because I want to leave room for improvement ;)\n1. Canvas App vs Model driven app The first question I had for myself was \u0026ldquo;Do I want to build a model driven app or a canvas app\u0026rdquo;? And since I had no idea at all, I tried to go for a model driven app. The app will be modelled around your data, so it sounds like this would be a lot easier than starting from scratch, right?\nFor several cases that remains true, but actually it depends from which mindset you\u0026rsquo;re coming. If you\u0026rsquo;re familiar with your data and have an idea about how data may be presented within an app, model driven apps are your way to go. It makes it really easy to design an app with little clicks.\nBUT\nIf you come from a non-tech background, like I did, maybe a canvas app is the better choice. I had a very clear image in my mind, how the app was supposed to look and perform. If you start with a model driven app you must customize it heavily until it suits your needs/ideas. And I actually found out, that while customizing it, I was deleting and editing connections, that came automatically. And then everything broke. Nothing worked anymore and it left me so frustrated.\nFor me it was so much easier to start with a canvas app. There is nothing there, just the plain white canvas. And that had two very important effects:\n  I was forced to build the app step by step and let it grow over time.\n  I learned how the connections, items and bits worked from the very beginning.\n  Let\u0026rsquo;s get into those two aspects a little bit deeper, shall we?\n2. Scavenger Hunt. Build your app bit by bit If you build your app step by step you are forced to think about an MVP in the very beginning. I don\u0026rsquo;t talk about the Microsoft Most Valuable Player, but a Minimal Viable Product. Ask yourself: What is the basic functionality that my app needs to work? That is a very important question at the beginning. After you\u0026rsquo;ve created your MVP you can add functionality and features step by step.\nAnd that leads to a much more fulfilling learning experience. You will have multiple tiny success experiences and your confidence will grow. You will get the feeling, while your app grows and gets more functionality, it will become YOUR baby. Your thing, that you created out of nothing. There\u0026rsquo;s hardly a related feeling.\n3. It\u0026rsquo;s Trial and Error all the time Start with a canvas app and add functionality piece by piece. If something doesn\u0026rsquo;t work, you know exactly what you did, before it broke (at least in theory). That makes troubleshooting so much easier. If you start with a model driven app, you have no idea where to even begin with looking for possible problems.\nBut in your own canvas app, you can recreate the steps you\u0026rsquo;ve taken, before something stopped working.\nAnd you will experience this over and over again: It\u0026rsquo;s trial and error. Get comfortable with the feeling, that this may be long way. Frustration and anger are natural parts of this and it\u0026rsquo;s perfectly fine. When you solved a problem that seems impossible to even understand at the beginning, that\u0026rsquo;s the moment when you really learn how these things work.\nGet used to it and embrace failure as THE way of learning.\n4. You\u0026rsquo;re constantly reading Microsoft Docs. All the time Usually I have an idea in my mind, what I want my app to do. Then I start to google, if this is even possible, I\u0026rsquo;ll find the right function and read on Microsoft Docs how this works. I try it out. Doesn\u0026rsquo;t\u0026rsquo; work? Back to Microsoft Docs. Are all the circumstances okay? Did you use the same data source as MS docs describes it? Try it out again. Still not working? Back to reading MS docs.\nActually, I found myself more time reading instructions, than really working in my app, but that is part of the process, too. Even people who are familiar with Power Apps and are deep into the topic have to check up things again and again. MS docs has (nearly) all the information you need to make this work. It\u0026rsquo;s all in there, but you have to be prepared to dig into this. Really deep.\n5. Knowing about the Power Apps Community is crucial MS docs may have the answer to your problem, but quite often I couldn\u0026rsquo;t find the right answer, or I didn\u0026rsquo;t understand the answer at all (no tech background, remember?). That is frustrating. So much.\nBut you can be sure about one thing: Somebody has been at exactly that point, where you are right now. And that\u0026rsquo;s where community comes into play. There are so many amazing people out there who love to share their knowledge, give you hints and tricks. There are blogs, video tutorials, the Power Apps community forum and an endless list of other sources, where you can get help.\nNext to MS docs this is the most useful source of information, by far. Quite often these people don\u0026rsquo;t give you a plain manual but describe their problem and their solution. That makes it easier to understand it yourself.\n6. Find someone who can take you by hand MS docs and the community are awesome. Hands down. But I found myself in a couple of situations where I wasn\u0026rsquo;t really able to explain my problem (I didn\u0026rsquo;t know this at this point yet). And that would make even the best manual/explanation/tutorial useless.\n THIS CRAP ISN\u0026rsquo;T WORKING AND I DON\u0026rsquo;T KNOW WHY. I DON\u0026rsquo;T EVEN KNOW WHERE TO GET HELP ANYMORE\n I\u0026rsquo;ve screamed something like this a thousand times, I swear. At least. And do you know what helps? If you can talk to someone, who\u0026rsquo;s been there. If you struggle to solve your problem on your own (even with a good tutorial at hand), reach out and talk to people. Even better, if you can show them what\u0026rsquo;s not working and where you are at the moment.\nIf you spend some time building your app you sometimes struggle to see the obvious. A view from someone uninvolved is so important. I found myself emotionally involved and too frustrated to remain calm and clear. My view was too narrow and too focused to see new ways to the solution.\nAnd quite often I shared my screen with someone and before I even explained my problem, the other person knew what was wrong. I was just buried too deep into my problems and views.\nAnd believe me, there are far more people out there, who are happy to take your hand and show you a couple if things than you may believe. I had to overcome myself to ask not only for help, but for people showing me how things work. But the member of the communities are eager to help. Shall I tell you, why so many of them are happy, if they can help you and show you stuff?\nIf you teach, you\u0026rsquo;ll learn. If you explain something to somebody else, you are forced to explain it in a way that the other person understands. And therefore, you must learn, how to describe things from different perspectives. Teachers don\u0026rsquo;t just give away their knowledge, they\u0026rsquo;re gaining experience and get deeper into the topic themselves.\nIt\u0026rsquo;s a win-win situation.\n7. Always insert, create, make!  \u0026ldquo;Nothing will work, unless you do!\u0026rdquo; \u0026ndash; Maya Angelou\n Try things out. Insert a function, create a button, make things work. As I mentioned earlier, building an app is trial and error and therefore you have to do something. Every action you make, everything that you try out, makes you better. Makes you understand more things. Lets you learn.\nSo, before you google and read for ours, go out there and try things out. Yes, it may be frustrating, but that is part of the learning process and it\u0026rsquo;s actually good for you.\nIf you are building a canvas app, you can undo every step you take, so there is actually little risk to try things out. select and see, what happens. It will teach you a lot.\nHere is a little trick that I found especially useful: Always make a button. What do I mean by that? For every new function I want to try out I make a new button. It doesn\u0026rsquo;t look good, but it gives me the possibility to test a functionality in an own, separated environment. There are no other functions on that button but the one I want to test. If it works, I copy the code and paste it into the place, where I originally wanted it.\n8. Form follows function. Make it work, then make it pretty I think this point should be obvious from what I explained earlier, but this was hard for me to learn. You take care of the functionality first; then you work on the looks and the interface. Of course I wanted to create a pretty app right away, but that didn\u0026rsquo;t work out at all.\nI ended up with a lot of different buttons, shapes and text all over the place. But everything worked.\nFrom this point on I had all the possibilities to make it pretty and didn\u0026rsquo;t need to worry about any functionality anymore. That was a relieving point while creating my first app.\nIf you focus on the functionality first, you focus on the backend first (frontend: the layer the user sees and uses; backend: the functionality layer that no user should ever see). When the backend works, you can take care about the frontend.\nYou have a lot of possibilities to make a working app look nice. The other way around, getting a nice-looking app to work is way more difficult.\n   9. Give back to the community. Tell others, what and how you did it Maybe that is one of the most important parts. I talked a lot about the community, about resources to learn online, about getting help from the community. And all of this only works, if there\u0026rsquo;s content to learn from.\nI guess many people might feel intimidated because their first app doesn\u0026rsquo;t look that beautiful or offers not that much of functionality.\nBut that doesn\u0026rsquo;t matter.\nYou created something, you learned something and you should be proud of it, so tell people about it. There are many, many people who want to hear about it. And those are thankful for the opportunity to learn from you and your experiences. There are many people out there, just starting, just as you did. Help them, teach them, learn from that experience.\nThe community thrives from content that is at every level of expertise. Your experiences matters and can help a lot of people.\nGive a little bit back, because I\u0026rsquo;m sure you needed help as well.\nThat is how we all progress and grow. That is community\n","image":"https://pnp.github.io/images/header_pic_power_apps.png","permalink":"https://pnp.github.io/blog/post/what-i-as-a-non-dev-learned-as-i-created-my-first-power-app/","tags":["Power Apps"],"title":"What I (as a non dev) learned as I created my first Power App"},{"categories":["Community post"],"contents":"Make troubleshooting and understanding single elements easier They exist. Those little moments that drive you crazy. Things simply don\u0026rsquo;t work; they don\u0026rsquo;t work the way you imagined and you almost despair because it just doesn\u0026rsquo;t want to go on. Or they break. I swear I didn\u0026rsquo;t touch anything, yet all of a sudden, my functions are broken. WHAT THE HECK???\nI\u0026rsquo;ve built a few apps by now and I always realize that I have a different view and approach than classic developers. I\u0026rsquo;m a citizen developer, with no IT knowledge and no technical background, and I\u0026rsquo;ve learned some useful techniques while building apps that I benefit from with every app. Really, with every app.\nI have talked to many people and found that these little tips and tricks can save you a lot of nerves and a lot of frustration. If you haven\u0026rsquo;t read my blog about 9 things I wish I learned before I build my first Power App, you should check it out, but this one here is the next step. It\u0026rsquo;s not only about troubleshooting and debugging, but some of those tips will also just keep you sane or teach you good habits that will make your app building experience easier.\nSo, let\u0026rsquo;s lift our troubleshoot and debugging experience on the next level\nKeep calm and let\u0026rsquo;s build apps 1. Duplicate your screen Remember my tip to build your app step by step? If you don\u0026rsquo;t add all the functionality at once, your app grows over time. At some point your pretty satisfied with your app but you want to try out new things and add others.\nIf you don\u0026rsquo;t know how some functions work exactly, always duplicate your screen, before adding new things.\nWhile building your app and adding new functions, you need to add things, you need to delete others to make it work. And you don\u0026rsquo;t want to mess with the progress you\u0026rsquo;ve made so far.\nA duplicated screen is like an additional save game slot, just to make sure. If you break everything, you can always go back.    2. Use debug label Label are a life saver in Power Apps. They literally make things visible. Let me show you an example. I have a time app and I control the timer with a variable called Uhr_tickt. If it\u0026rsquo;s set to true, the clock is ticking, if it\u0026rsquo;s set to false it isn\u0026rsquo;t. The \u0026ldquo;Go!\u0026rdquo; button sets the variable to true, the stop button sets it to false. While testing your app and adding a new functionality, I tried to make the Reset button work and had a hard time figuring out, why it wasn\u0026rsquo;t working. Quite often it was because my variable Uhr-tickt wasn\u0026rsquo;t set the correct way. Is my timer not starting, because the UpdateContext function for my variable wasn\u0026rsquo;t working or was it something else?\nThat\u0026rsquo;s when I added a debug label. It\u0026rsquo;s a simple label that shows you the status of your variable. This way you can actually see, what\u0026rsquo;s happening in the background, making debugging and troubleshooting so much easier.\n Demonstrating how debug label can give you information of the state of a variable\n3. Build a button Build a button to test a function. If it works, include it in your desired function.\nI\u0026rsquo;ve said this a million times before, but it is the most helpful habit, ever. If you want to add a new functionality, don\u0026rsquo;t put it on top of that main function you have. Insert a button and try the new functionality on that button. If it works, add it to the place where you want to have it.\nBut if it doesn\u0026rsquo;t work, you will never wonder where the error is.\n4. Snap to align Okay, this one is a mini tip: Did you ever try to align some buttons or elements and the snap to align functionality drives you crazy? Often it helps to arrange your elements but sometimes it\u0026rsquo;s your worst enemy.\nDid you know, that you can disable this function by holding the Alt-Key while placing elements? 5. Use more Excel Whaaaat? More Excel, are you sure? Okay, hear me out. Did you know, that Power FX (the syntax used in Power Apps) is based to Excel functionalities.\nI\u0026rsquo;m pretty sure you\u0026rsquo;ve seen that If-Statement before, haven\u0026rsquo;t you? That is because Power FX is designed for people who are familiar with Excel functions.\nBut how can we make use of it?\nI often have a hard time trying to visualize how my data sources work. If I want to write a functional VLOOKUP function, I need to see my tables. That can be difficult with Power Apps because your tables may be anywhere. Somebody gave me the tip to try out difficult functions (AN: like nested if-functions) (another AN: Try to avoid nested if-functions at ALL costs) in Excel. When they work you can replace the fields in your formula with the fields you need in your Power App.\n6. \u0026hellip;but it worked a minute ago Do you know that: You swear you haven\u0026rsquo;t touched anything, yet all of sudden nothing works anymore? I\u0026rsquo;ve been there too, and still am from time to time. It happens. Here\u0026rsquo;s what you do, first thing:\nCheck your connections. Are they all working fine? No? Go fix them.\nDid you just change anything in your data source? Are you sure? Update them anyway.\nDid that help already? Good, I thought so.\nCheck your connections and data sources every once in a while. If you add another column to that SharePoint list and didn\u0026rsquo;t update your data source\u0026hellip;.well. It\u0026rsquo;s a common pitfall, just remember to check those things.\nSomething else about data sources. If you use SharePoint or Excel in your OneDrive (and yes, both can be very valid data sources, don\u0026rsquo;t let any \u0026ldquo;IT pro\u0026rdquo; tell you something different), consider that not everyone in your organization has access to those. If you published and shared your app, ask yourself if everyone who wants to use it has access to the data source you used.\n7. Name the elements you use, as you build them Develop the habit of re-naming your screens and elements as you build them. That will keep you a lot of frustration and time. Especially if you have multiple screens, apps can become crowdy. So every time you add another function or you want to try something new, unnamed elements can not only cause unnecessary extra work to find the right element you\u0026rsquo;re looking for. It can also be frustrating, when you keep adding the wrong elements to your function and that causes it to not work. It can be a serious source of errors.\n   8. Learn what the result view is I haven\u0026rsquo;t used it for too long because nobody explained it to me. But this a so important to understand in order to learn what it needs for functions to work properly. If you select functions you can get two important views. The result view and the data type.\nBy clicking on Office365User the formula bar shows you the original record with all elements.\n   This way you can see, what kind of records are stored and what data you can work with.\nIf you select the next part of the function DisplayName Power Apps will show you what this function does AND what data type you get.\nThat helps you understanding complex formulas (try it with a filter function to examine what it does) and also how to work with the data. Do you know the error message \u0026ldquo;This formula expects data of the type value\u0026rdquo;? If a functions give you data type text, like in the Office365Users example above, you can\u0026rsquo;t use it in a function that needs a value to work. Here is a comparison between the Now() and the Today() function. The output looks similar, but it\u0026rsquo;s different data types. DateTime is some else than Date.\n   The formula bar shows it to you, which might help you debugging your app and functions.\n9. Dear Diary Document what you just learned. Like a learning diary. You will need this knowledge later and you can recycle bits and pieces you\u0026rsquo;ve once build again and again. Already countless times I was relieved to have written down insights and functions. That way, I can always check back to see how they work. This saves me a lot of time and above all frustration.\nAlso, the brain processes things differently when you not only think about them but write them down. This additional occupation with learning content consolidates what you just learned.\n10. The world gains beauty through all its colors If you want to make your app pretty and professional (I recommend Luise Freese\u0026rsquo;s latest blog \u0026ldquo;How to beautify your Power Apps\u0026rdquo; on that) you want to use more then the set of standard colors. But I can be a lot of work to paste all the color codes in every single element you have in your app.\nBut it\u0026rsquo;s very handy to set your colors in labels to make sure you can quickly use the correct colors.\nSet up a label for every color you want to use and set the Color value as you like. To not get confused later on, set the Text value to something clear, like BackgroundColor or IconColor and remember to rename the labels in the Tree view as well (see tip #7).\nNow, whenever you want to use that color you don\u0026rsquo;t need to remember or copy the Hexcode, but just set the value to your color label by using IconColor.Color.\nQuick, easy and you will always use the correct color without much effort.\nTwo labels for my most used colors\n      Here you see the Fill and Color values, set by the labels we defined earlier.\nThere we have it. That are 10 tips on how to start debugging your app.\nDo you like them? Do you have more tips for me? I\u0026rsquo;m always happy to get new ideas and hints because I am far from being an expert and I\u0026rsquo;m always learning.\n","image":"https://pnp.github.io/blog/post/learn-to-debug-your-power-apps/images/Debugging_Pic_hu9b1428cc4ef03b24a59f40a73fe3492c_7945281_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/learn-to-debug-your-power-apps/","tags":["Power Apps"],"title":"Learn to debug your Power Apps"},{"categories":["Community post"],"contents":"Context During a Power Platform audit for a customer, I was looking for exporting all user licenses data into a single file to analyze it with Power BI. In this article, I\u0026rsquo;ll show you the easy way to export Power Apps and Power Automate user licenses with PowerShell! Download user licenses To do this, we are using PowerApps PowerShell and more particular, the Power Apps admin module. To install this module, execute the following command as a local administrator: Install-Module -Name Microsoft.PowerApps.Administration.PowerShell  Note: if this module is already installed on your machine, you can use the Update-Module command to update it to the latest version available. Then to export user licenses data, you just need to execute the following command and replace the target file path to use: Get-AdminPowerAppLicenses -OutputFilePath \u0026lt;PATH-TO-CSV-FILE\u0026gt;  Note: you will be prompted for your Microsoft 365 tenant credentials, you need to sign-in as Power Platform Administrator or Global Administrator to execute this command successfully. After this, you can easily use the generated CSV file in Power BI Desktop for further data analysis:   Happy reporting everyone! You can read this article on my blog. Resources https://docs.microsoft.com/powershell/powerapps/get-started-powerapps-admin https://docs.microsoft.com/powershell/module/microsoft.powerapps.administration.powershell/get-adminpowerapplicenses\n","image":"https://pnp.github.io/blog/post/export-power-apps-and-power-automate-user-licenses/images/power-platform-licenses_hu380e41e820f9fc34779232627d661fc3_61737_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/export-power-apps-and-power-automate-user-licenses/","tags":["Power Apps","Power Automate"],"title":"Export Power Apps and Power Automate user licenses"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from April 22nd is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary Preview the new Microsoft 365 Extensibility look book gallery co-developed by Microsoft Teams and SharePoint engineering. Download showcase apps, samples, and documentation. Register now for April trainings on Sharing-is-caring. Give us feedback, the Microsoft 365 developer community survey is now open. Announcing public preview of SharePoint Framework 1.12.1. There were six PnP SPFx web part samples delivered in last 2 weeks. Great work! **Latest project updates include: **\n PnP Project Current version Release/Status SharePoint Framework (SPFx) v1.12.1 (beta) GA by end-of-April PnPjs Client-Side Libraries v2.4.0 April 9th CLI for Microsoft 365 v3.9 (beta) Upgrading SPFx projects to v1.12.1-rc.2 Reusable SPFx React Controls v2.6.0 v3.0.0 when SPFx v1.12.1 GA Reusable SPFx React Property Controls v2.5.0 v3.0.0 when SPFx v1.12.1 GA PnP SPFx Generator v1.16.0 PnP Modern Search v3.19 and v4.1.0 April and March 20th\n The host of this call is Patrick Rodgers (Microsoft) @mediocrebowler. Q\u0026amp;A takes place in chat throughout the call. Jungle seating in a Pacific Northwest, Washington, US amphitheater! Truly unique like this Community!\nActions  Complete the Microsoft 365 Developer Community Survey \u0026ndash; https://aka.ms/m365pnp/survey Reserve date - SharePoint Monthly community call - 13th of April 8 AM PDT | https://aka.ms/sp-call Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; April 27th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; April PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; April 29th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; May TBD AMA (Ask Me Anything) \u0026ndash; Power Platform Samples \u0026ndash; May 5th AMA (Ask Me Anything) \u0026ndash; Tech Community \u0026ndash; May 11th First Time Presenter \u0026ndash; May TBD More than Code with VSCode \u0026ndash; April 28th Maturity Model Practitioners \u0026ndash; May TBD PnP Office Hours \u0026ndash; 1:1 session - Register   Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Running the CLI for Microsoft 365 in Azure Container Instances orchestrated by Logic Apps \u0026ndash; or Flow in Power Automate. Step through how the Azure Container Instance is created with the specified managed identity. Docker enables you to bundle a pre-configured version of CLI for Microsoft 365 together with all its required dependencies and also is used to orchestrate containers. Purpose of configuration is to run scripts or reports against your tenant.\n  Advanced Page Properties web part solution \u0026ndash; when the normal page properties web part is not enough, this new Advanced Page Properties web part delivers more. New properties supporting theme variants, capsule format for list options, support for image fields, for links, for currency, and for dates. Tour the code for tracking available properties for drop downs, tracking property selections and parameters for refreshing and rendering the data.   SharePoint Framework 1.12.1 new features \u0026ndash; support for Node v12, Gulp 4, Microsoft Teams SDK v1.8 and for creating Microsoft Teams meeting apps. Demos \u0026ndash; 1) Increased access to page structure and context to avoid DOM dependency (web part detects DOM structure and selects output size to fit allotted space) and 2) SPFx support for Complex Microsoft Teams solutions (manifest included in Package to synchronize with Teams App catalog).\n  SPFx extension samples: (https://aka.ms/spfx-extensions)\n News Ticker - Ari Gunawan | @arigunawan  SPFx web part samples: (https://aka.ms/spfx-webparts)\n Data Table - Chandani Prajapati | @Chandani_SPD Staff Directory - Tristian O\u0026rsquo;Brien OneDrive Finder - André Lage | @aaclage Graph MGT Client - Sébastien Levert | sebastienlevert Teams Membership Updater - Nick Brown | @techienickb Thank you for your great work. Samples are often showcased in Demos.   Agenda items  Latest updates on SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 6:25 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 8:07 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 10:20 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 11:34 PnP Modern Search - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 12:49 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 13:57  Demos   Running the CLI for Microsoft 365 in Azure Container Instances orchestrated by Logic Apps \u0026ndash; Albert-Jan Schot (Portiva) | @appieschot | deck [\u0026ndash;][ 18:04]\n  Advanced Page Properties web part solution \u0026ndash; Mike Homol (ThreeWill) | @homol | deck [\u0026ndash;][ 32:00]\n  SharePoint Framework 1.12.1 new features \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen\n[ \u0026ndash;][ 45:33]\n  Resources Additional resources around the covered topics and links from the slides.\n  The presentation used for this community call\n  Walkthrough - Running the CLI for Microsoft 365 in an Azure Container Instance   Tool - CLI for Microsoft 365\n  Docker Hub - m365pnp/cli-microsoft365   Blog - Run CLI for Microsoft 365 in Docker   Article - Improving the Page Properties web part   Repo - Advanced Page Properties Framework - v1.12.1 public preview \\ npm install \u0026ndash;g @microsoft/generator-sharepoint@next\n  Gallery - Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility   PnP Weekly \u0026ndash; Episode 123 with guest Power Platform Cloud Advocate - April Dunnam (Microsoft) | @aprildunnam | video | podcast\n  Viva Connections https://aka.ms/VivaConnections\n  General resources  CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring Tools - PnP Modern Search v4| https://aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other topics mentioned  SharePoint dev documentation SharePoint dev issue list  Upcoming Calls | Recurrent Invites   M365 General Dev call \u0026ndash; April 29th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Microsoft Graph call - May 4th at 8:00 am PDT | https://aka.ms/microsoftgraphcall\n  SharePoint Framework call \u0026ndash; May 6th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  SharePoint monthly call \u0026ndash; May 11th at 8:00am PDT | https://aka.ms/sp-call\n  Office add-in monthly call \u0026ndash; May 12th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  Adaptive Cards monthly call \u0026ndash; May 13th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  Microsoft Teams monthly call \u0026ndash; May 18th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall\n  Power Apps monthly call \u0026ndash; May 19th at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  Microsoft Identity Platform \u0026ndash; [May 20]th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-recording-22nd-of-april-2021/images/210422-spfx_hu635526bf81930a72f8be6596b383b9ea_4577226_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-recording-22nd-of-april-2021/","tags":[],"title":"SharePoint Framework Community Call Recording -- 22nd of April, 2021"},{"categories":["Microsoft Teams community call"],"contents":"Call summary Latest news from Microsoft engineering on Microsoft Teams updates and community assets. Visit the Microsoft Teams samples gallery to get started with Microsoft Teams development, hear and see the new Microsoft 365 Extensibility look book gallery co-developed by Microsoft Teams and SharePoint engineering. Quick demo of the Extensibility look book at Microsoft Adoption site \u0026gt;\u0026gt; Solutions\u0026gt;\u0026gt;Extensibility look book. Select a Product, Type of app or Scenario. To see the Microsoft 365 extensibility options for your selection. Download showcase apps, samples and documentation. Register now for April trainings on Sharing-is-caring. Give us feedback, the Microsoft 365 developer community survey is now open. Download articles 1 and 2 of a 3-part series of articles called: \u0026ldquo;Build quality Microsoft Teams apps with these best practices.\u0026rdquo; Get the Microsoft Teams Toolkit (Controls) \u0026ndash; \u0026ldquo;Designing your Microsoft Teams app\u0026rdquo; with layout guidance and reusable assets. The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call.\nActions  Complete the Microsoft 365 Developer Community Survey \u0026ndash; https://aka.ms/m365pnp/survey Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; April 27^th^ (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; April PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; April 29^th^ PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; May TBD AMA (Ask Me Anything) \u0026ndash; May 2021 \u0026ndash; Tech Community \u0026ndash; May 11^th^ First Time Presenter \u0026ndash; May TBD More than Code with VSCode \u0026ndash; April 28^th^ Maturity Model Practitioners \u0026ndash; May TBD PnP Office Hours \u0026ndash; 1:1 session - Register   Download the recurrent invite for this call \u0026ndash; https://aka.ms/microsoftteamscommunitycall Call attention to your great work by using the #PnPWeekly on Twitter.   Microsoft Teams Development Samples:https://aka.ms/teams-samples\n Looking for Samples! Please share your good work      It\u0026rsquo;s all about Community - Hello Microsoft Teams community!\n Demos Demos delivered in this session\n  Build your first Microsoft Teams Bot \u0026ndash; Bots are used for Chat, Messaging Extensions, Task Modules, and more. 3 options for building Bots - Bot Framework SDK, Bot Framework Composer, and Power Virtual Agents. Same technology behind scenes, just matter of abstraction and options for extensibility. The recommended low code and very extensible option with templates containing triggers and dialogs for Microsoft Teams is Composer. Tour latest capabilities, install and configure.   Surfacing your existing solution in Microsoft Teams - if you have web-based apps, they can be surfaced in Microsoft Teams tab (iFrame). Security options \u0026ndash; protection built into your app and external access control by Teams. Add apps on Personal (static) or Group (Teams aware static) tabs after adding app to App Studio. Build tips: Make your app Teams aware, use different contentUrl and websiteUrl, use responsive apps, use simple app navigation.   Transforming your SharePoint Framework web part as a Microsoft Teams personal app \u0026ndash; easily extend Teams by embedding client-side SPFx web parts or personal applications (not Teams applications) in Teams tabs. Requires running SPFx v1.8 or later and execution is in the context of the SPO site behind the Team. No coding, no hosting, no Azure registration, just package and deploy. Step through app creation using SharePoint generator, create a Teams tab, add it to a Team.   Thank you for your work. Samples are often showcased in Demos.\n Topics Topics covered in this call\n  Tour the Microsoft 365 Extensibility look book gallery - 5:20\n  Latest News - Vesa Juvonen (Microsoft) | @vesajuvonen - 9:07\n  Demo: Build your first Microsoft Teams Bot - Stephan Bisser (Solvion) | @stephanbisser - 11:53\n  Demo: Surfacing your existing solution in Microsoft Teams - Rick Van Rousselt (Advantive) | @RickVanRousselt - 27:48\n  Demo: Transforming your SharePoint Framework web part as a Microsoft Teams personal app - Albert-Jan Schot (Portiva) | @appieschot - 43:20\n   Resources Additional resources around the covered topics and links from the slides.\n  Slides used in this ​community call\n  Article - Bot Framework Composer Series - 1 - Use Adaptive Cards   Repo - Microsoft Bot Framework Composer   Documentation - Bot Framework Composer documentation   Documentation - Azure Bot Service documentation   Samples - Samples by JavaScript Framework   Microsoft Teams platform documentation\n  Blog - Build quality Microsoft Teams apps with these best practices: Part 1\n  Blog - Build quality Microsoft Teams apps with these best practices: Part 2\n  Blog - Build quality Microsoft Teams apps with these best practices: Part 3\n  Documentation - Designing your Microsoft Teams app\n  Documentation - Building Microsoft Teams Tabs using SharePoint Framework   Documentation - Build a Me-experience in Microsoft Teams   Microsoft 365 PnP Community hub | aka.ms/m365pnp/community   Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  Viva Connections https://aka.ms/VivaConnections\n   General resources  Microsoft Learn - Microsoft Teams development Learning Paths Microsoft Teams Toolkit for Visual Studio Code Microsoft Teams app templates Yo Teams video training package Microsoft 365 Developer videos | aka.ms/m365devyoutube Microsoft 365 community (PnP) videos | aka.ms/m365pnp/videos yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor  Upcoming Calls | Recurrent Invites   SharePoint Framework call \u0026ndash; April 22^nd^ at 7:00 am PDT | https://aka.ms/spdev-spfx-call Microsoft 365 Development call \u0026ndash; April 29^th^ at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Graph call - May 4^th^ at 8:00 am PDT | https://aka.ms/microsoftgraphcall SharePoint monthly call \u0026ndash; May 11^th^ at 8:00am PDT | https://aka.ms/sp-call Office add-in monthly call \u0026ndash; May 12^th^ at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; May 13^th^ at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall Microsoft Teams monthly call \u0026ndash; May 18^th^ at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall Microsoft Identity Platform \u0026ndash; May 20^th^ at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar  Power Apps monthly call \u0026ndash; May 19^th^ at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall   Microsoft Teams monthly community calls are targeted at anyone who\u0026rsquo;s interested in Microsoft Teams development topics. This includes Microsoft Teams, Bots, App templates, Samples, and more. Details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls!\n You can download recurrent invite from https://aka.ms/microsoftteamscommunitycall. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 21st of April 2021\n","image":"https://pnp.github.io/blog/microsoft-teams-community-call/microsoft-teams-community-call-april-2021/images/teams-monthly-20th-april-recording_huad26f8f2b8826b84f73012d357eb4fda_549945_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-teams-community-call/microsoft-teams-community-call-april-2021/","tags":[],"title":"Microsoft Teams Community Call - April 2021"},{"categories":["Power Apps community call"],"contents":"Call summary Topics covered in this month\u0026rsquo;s community call include\n Make your Power Apps sessions persistent when switching Microsoft Teams tabs! (Making your Teams mobile and desktop power apps off-line capable), Power Apps Custom Functions Library (sharing your great work - find, use, submit samples), Make your Power Apps user experience awesome with Gestalt design principles (create visually compelling model driven apps), and Recent Power Apps News and Community Contributions.   This session included Q\u0026amp;A in chat. The call was hosted by Todd Baginski (Canviz). Demo presenters include Hardit Bhatia, Matthew Devaney, April Dunnam, Hiro Nagao, Geetha Sivasailam, Hugo Bernier, Anton Robbins and Rory Neary. Recorded on April 21, 2021. Thank for attending the call or viewing it on demand. Demos   Make your Power Apps sessions persistent when switching Microsoft Teams tabs! - tired of losing data captured in your Microsoft Teams-based Power Apps when you leave the app to respond to a chat message or go to another channel? Learn how to store data and then reload data when restarting your Power App to effectively achieve session data persistence. Hint \u0026ndash; make your app off-line capable. Works on desktop too!   Power Apps Custom Functions Library \u0026ndash; now that it is possible to create user defined custom functions in Power Apps the DRY principle applies, so let\u0026rsquo;s share! The custom functions library is the new Power Platform samples repository. Find, use, and submit custom functions, Power app, Power Automate and Power Virtual Agents samples. Not sure where to start? Community contributor training offered at PnP | Sharing Is Caring\n  Make your Power Apps user experience awesome with Gestalt design principles  - how you layout objects in your Power Apps UI is a mixture of art, industry standard, and Gestalt. In Power Apps, objects are in a 2D frame. In this demo, you will understand how and why using Gestalt principles in app design matters in a world where users do not typically read manuals and adoption is largely based on visual perceptions.   Recent News \u0026amp; Cool Stuff   Power Apps Custom Functions Library -https://github.com/yourekittenme/powerapps-custom-functions\n  PowerPlatformLearn \u0026ndash; Gestalt Principles -https://www.powerplatformlearn.academy/courses/power-apps/contents/6061fe2159dfb\n  Power Apps Demo Extravaganza 2021 - https://aka.ms/PowerAppsDemoExtravaganza\n  Actions  Complete the Microsoft 365 Developer Community Survey \u0026ndash; https://aka.ms/m365pnp/survey Entries Start May for Demo Extravaganza 2021 | https://aka.ms/PowerAppsDemoExtravaganza Microsoft Office 365 Developer Survey - https://aka.ms/developersuccess  Join the M365 Customer Success Platform Panel - https://aka.ms/SuccessPanel Join the community - Find a user group - https://aka.ms/Dynamics365UserGroups, https://aka.ms/PowerPlatformUserGroups Join us for our next call: May 19, 2021 at 08:00am PDT | https://aka.ms/powerappscommunitycall  Learn more  See the full blog post for this call on the Tech Community Blog - https://aka.ms/m365pnp/community/blog Microsoft\u0026rsquo;s Power Platform website Power Apps Responsive Design - https://bit.ly/responsivepowerapps  Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - https://aka.ms/PowerAppsCommunitySamples Power Apps Community Videos -https://aka.ms/PowerAppsCommunityVideos Power Addicts Hangout - https://wearepoweraddicts.com #LessCodeMorePower Video Series - https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Share more - draw attention to your great work - #PowerAppsCC  Stay connected  Twitter: https://twitter.com/MSPowerPlat Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365DevYouTube​ Blogs - https://aka.ms/M365DevBlog Recurrent Invite - https://aka.ms/powerappscommunitycall  ","image":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-april-2021/images/Thumbnail%20-%20Power%20Apps%20Community%20Call%20-%20April%202021_hu615abb7dfc4ac8b856d9acb9f8c9afe5_441545_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-april-2021/","tags":[],"title":"Power Apps Community Call -- April 2021"},{"categories":["Community post"],"contents":"Power Apps offers you a variety of icons - and recently, there were nice additions announced and rolled out. But if we want to create even more appealing apps, it makes sense to extend our pretty little icon library. Microsoft provides us with Fluent UI.\n Fluent UI is a collection of UX frameworks for creating beautiful, cross-platform apps that share code, design, and interaction behavior\n One part of Fluent UI is the iconography\n   How to get Fluent UI icons You can browse through the icons in the Fluent UI icons tool, but there is right-select download option. As a developer, you can import Fluent UI iconography (and more) into your applications; for Power Apps, there a different way how to use them:\nUse a community-driven tool to import icons to Power Apps there are several tools available to get Fluent UI icons into Power Apps; find two of them here:\n  Office Ui Fabric Icon Generator\n  2000 free Power Apps icons\n  However, if you only want to use a few specific icons for an app or would like to try them out, you can head over to the Fluent UI repository on GitHub and right-click-download the icons. After that, you upload them to your Power App and can use them like any other image. Super cool: You get all icons as .svg files, which have three significant advantages:\n  .svg are transparent, which means you have no extra work to remove any background\n  .svg are lossless scalable, which means that you blow them up as you like it\n  .svg have are usually smaller than .jpg files of the same quality - this will have an excellent effect on the performance of your app\n  Pop-Ups Screens in Power Apps are perfect for displaying information that should always be shown. But what if we only want to show some more content occasionally? Pop up to the rescue!\n To create a pop up effect, create:\n     a rectangle that overlays the content that our user now should not focus on - good idea to have it filled grey and semi-transparent\n  a rectangle, smaller than the GreyOutRectangle, filled in in brighter background-color\n  a text label which shows the information\n  a cancel icon\n  Group these controls; it\u0026rsquo;s easier to work with them then.\n  Now create a textlabel (or a button, or an image... something that our user will select to see the pop up).\n  Set the .onSelect property of this label to UpdateContext({isShowPopUp:true})\n  Set the .onSelect propert of the cancel icon to UpdateContext({isShowPopUp:false})\n  Set the .visible property of the whole PopUp Group tp isShowPopUp This way, we set the isShowPopUp variable to true, if the user clicks the label, which will make the PopUp visible. As soon as the user clicks the cancel icon, the isShowPopUp variable is set to false, which means that the group will not be shown anymore!\n  Create an expand- and collapse able menu As we need to deal with all screen estate carefully, it is a fantastic idea to have a menu that can expand and collapse. To create this, we need\n  a collection that holds the screens that we want our users to allow to navigate to\n  a gallery, which displays the items of our collection\n  a Hamburger Menu icon, which sets a variable to control the width of the gallery\n  a variable that ensures that we link the gallery to the screens\n   collection  To have icons (which will show while the menu is collapsed) and text (that will show up right next to our icons when the menu is expanded), we will first upload a few svgs (see above) and then refer to them in our collection: ClearCollect( NavigationMenu, { Row: 1, Title: \u0026#34;About\u0026#34;, Image: ic_fluent_lightbulb_24_regular }, { Row: 2, Title: \u0026#34;Flights\u0026#34;, Image: ic_fluent_airplane_take_off_24_regular }, { Row: 3, Title: \u0026#34;Hotels\u0026#34;, Image: ic_fluent_bed_24_regular }, { Row: 4, Title: \u0026#34;People\u0026#34;, Image: ic_fluent_people_32_regular } ) Gallery\nWe create a gallery and set the .items property to our collection\nWe set the .width property to If(!IsExpand, 200, 50) or similar - first value is the expanded width, second is the non-expanded (collapsed) width.\nAs we want to pretty things up a little bit,\n add a small rectangle to your gallery add a rectangle (width = 1) to the right of your gallery  Hamburger menu\nwe add a hamburger menu icon and set its .onSelect property to `Set(IsExpand, !IsExpand)```\nadjust all other controls on the screens\nNow work on the .X property of all labels, buttons, images, etc. Set it to If(!IsExpand, \u0026lt;original value\u0026gt;,\u0026lt;originalvalue\u0026gt;-150)\n variable so we can navigate to the selected screen on select of an item in the gallery   Set the variable on AppStart - `Set(_selectedTutorial,{Row:1,Title:\u0026ldquo;About\u0026rdquo;,Image:ic_fluent_home_48_regular})``` for each Navigation gallery set the .onSelect property to:   Set(_selectedTutorial, ThisItem); If( ThisItem.Row = 1, Navigate(\u0026#39;Welcome Screen\u0026#39;, None), ThisItem.Row = 2, Navigate(\u0026#39;Teams Screen\u0026#39;, None), ThisItem.Row = 3, Navigate(\u0026#39;Channel Screen\u0026#39;, None), ThisItem.Row = 4, Navigate(\u0026#39;Libraries Screen\u0026#39;, None), ThisItem.Row = 5, Navigate(\u0026#39;Lists Screen\u0026#39;, None) ) Our result should look something like this:\n Feedback and what\u0026rsquo;s next? What are your little tricks to make apps look more beautiful? I am curious to learn from you! Please comment below!\ntl;dr? Made a sketchnote for you :) High resolution version is available on my GitHub: still image video (click the download button)  sample app If you like to reverse-engineer this idea - I provided a sample in the PnP PowerApps sample gallery: link to source code files on GitHub\n","image":"https://pnp.github.io/blog/post/how-to-beautify-your-power-apps/images/fluentUIicons_hu9765a86f19a20e15b0b69014f2fad4b0_291222_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-beautify-your-power-apps/","tags":["Power Apps"],"title":"How to beautify your Power Apps"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by a Power Platform Cloud Advocate April Dunnam (Microsoft) | @aprildunnam\nTopics discussed in this session include:\n April\u0026rsquo;s currently role and focus areas as a Cloud Advocate Her experiences while starting her career in IT with her role models being for example Cathy Dew (Microsoft) and Laura Rodgers (IW Mentor) Discussion on the inclusiveness of the IT industry and in community efforts - we want everyone to feel welcome on getting involved! How to get started in the community - steps on getting involved in the community and growing your opportunities with the routes Power Platform and the different flavors of it - no-code, low-code, pro-code and more  Please remember to keep on providing us feedback on how we can help on this journey. We always welcome feedback on making the community more inclusive and diverse.\nCovering also 24 articles from Microsoft and the Community.\nThis episode was recorded on Monday, April 19, 2021.\n Video at Microsoft 365 Community YouTube channel    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content.\nSharing is caring! Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\\\nEvents  May 25-27, 2021- Microsoft Build 2021 August 9-11, 2021 - North American Collaboration Summit  Register with coupon code \u0026ldquo;PnP\u0026rdquo; for 25% off from the prize at https://nacs.ticketspice.com/nacs2021    Microsoft articles  Streamline requests with new approval features in Microsoft Teams - Microsoft New frontline worker enhancements in Teams to communicate, digitize processes and stay secure - Microsoft Your questions from the Microsoft Ignite Ask the Experts sessions about Microsoft Teams\u0026hellip;answered! - Stephen Rose (Microsoft) | @stephenlrose Announcing public preview of SharePoint Framework 1.12.1 - Microsoft Migrate messages from other chat platforms to Microsoft Teams with Microsoft Graph APIs - Microsoft Enhance app engagement with the Microsoft Teams Activity Feed API - Microsoft Microsoft Graph Mailbag \u0026ndash; Copy/Move Files and Folders in SharePoint Online - Srinivas Varukala (Microsoft) | @svarukala Build quality Microsoft Teams apps with these best practices: Part 2 - Erin Bailie (Microsoft) Announcing data source environment variables - Casey Burke (Microsoft) AI Builder April 2021 update - Cedrick Bellarosa  Community articles  Use Power Automate to automatically create SharePoint News Links from an RSS feed - Will Holland (ThreeWill) | @_WCHolland LearnTogether: Build Apps with Microsoft Graph 🦒 - Luise Freese | @LuiseFreese FAQ\u0026rsquo;s in a Document Card - Sam Colins (Coupled Technology) | @SamC148 Microsoft 365 PnP Community Spotlight: Mikael Svenson - Luise Freese | @LuiseFreese \u0026amp; Mikael Svenson (Microsoft) | @MikaelSvenson Power Apps print function - Laura Rogers (IW Mentor) | @wonderlaura Crawled Properties Not Created From Site Columns in Modern Team Sites - Marc Anderson (Sympraxis Consulting) | @sympmarc 8 top reasons to use Dataverse or SharePoint lists in the Power Platform - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Securing your Azure Functions with an existing Azure AD app - Elio Struyf (Struyf Consulting) | @eliostruyf Using OAuth On-Behalf-Of flow in a Node.js Azure Functions - Elio Struyf (Struyf Consulting) | @eliostruyf Filtering by a Date Range in Power Apps - April Dunnam (Microsoft) | @aprildunnam How to use React Hook Form together with Fluent UI React (aka Office UI Fabric React) - Sergei Sergeev (Mastaq) | @sergeev_srg Using the latest microsoft-graph-client in SPFx - Sébastien Levert (Microsoft) | sebastienlevert Managing concurrent tenant-wide and site collection-scoped SharePoint Framework deployments - Danny Jessee (ManTech) | @dannyjessee SPFx \u0026amp; react-localization, an easy alternative? - Robin Agten (delaware) | @AgtenRobin  Additional resources  Microsoft 365 Community Survey - Open for April 2021 - please let us know how we can help to help you! Power Platform Sample Gallery - for finding easily samples from the GitHub - contributions from the community are welcome! PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-123/images/pnp-weekly-123_hu5e376b96a845cdc3b75b4e0c8bc691af_866923_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-123/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 123"},{"categories":["Community post"],"contents":"Which community project do you maintain? PnP Modern Search\nHow does it help people? Coming from classic SharePoint many customers were used to the flexible search web parts available. In modern SharePoint there is a gap between what the highlighted content web part can do and what Microsoft Search delivers of customization, and this is where the PnP Modern Search web parts fills the gap.\nWhat have you been working on lately? Lately I\u0026rsquo;ve been fixing minor issues and bugs with v3 of the web parts which have now moved to a support state only, while the innovation goes into the new v4, which also allows use of the Microsoft Graph Search API. A similar journey to other API\u0026rsquo;s, where they move out of SharePoint, cover more scenarios and great new innovations.\nWhat do you do at work? I work as a PM on the Microsoft Search UX seen in SharePoint and Office.com where my focus area is to improve the experience around file items in search results. You might think it\u0026rsquo;s a narrow area, but there is a lot happening with signals in the Graph and AI on content which we can bring back to search results to help people searching find the right content quicker. Combining technical innovation with intuitive UX is both challenging and fun :)\nWhy are you a part of the M365 community? As I used to be a consultant on M365 and an MVP, community has been a core part of my life for so long. I love sharing and love learning, and being part of the community is by far the best way to combine those.\nWhat was you first community contribution? Probably answering a question on TechNet back in 2010.\nOne tip for someone who’d like to start contributing If you are a developer and you use open source projects via GitHub, reach out via the issue lists and ask if there is something you can help out with. Most projects have a list of bugs or improvements people are asking for, and by helping out you are putting yourself out there and you will get a lot of gratitude.\n","image":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-mikael-svenson/images/mikaelsvenson_huc7a8658391726616073fc350f4889eba_18380_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-mikael-svenson/","tags":[],"title":"Microsoft 365 PnP Community Spotlight: Mikael Svenson"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Call summary Latest news from Microsoft 365 engineering and updates on open-source projects: PnP .NET libraries, PnP PowerShell, modernization tooling, on yo Teams, on Microsoft Graph Toolkit, and on Microsoft Teams Samples. The Microsoft 365 developer community survey is now open, visit the Microsoft Teams samples gallery to get started with Microsoft Teams development, preview the new Microsoft 365 Extensibility look book gallery, and register now for April trainings on Sharing-is-caring. Recent PnP project updates include - PnP .NET Libraries - PnP Framework v1.4.0 and PnP Core SDK v1.1.0 and PnP PowerShell v1.5.0 (new commandlets for Microsoft Viva Connections and Syntex). yo Teams generator-teams (apps generator) v3.0.3 GA and 3.1.0 Preview, yo teams-build-core (gulp tasks) v1.0.1 + v1.1.0 Preview, and msteams-react-base-component (React UI helpers) v3.1.0, have been released. Microsoft Graph Toolkit try out the new OneDrive file components (Preview). The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call.\nActions   Microsoft 365 Developer Community Survey \u0026ndash; https://aka.ms/m365pnp/survey\n  Try public beta of SPFx v1.12.1.   Register for Sharing is Caring Events:\n First Time Contributor Session \u0026ndash; April 27th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; April PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; April 29th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; May AMA (Ask Me Anything) \u0026ndash; May 2021 \u0026ndash; Tech Community \u0026ndash; May 11th First Time Presenter - April 21st More than Code with VSCode \u0026ndash; April 28th Maturity Model Practitioners \u0026ndash; April 20th PnP Office Hours \u0026ndash; 1:1 session - Register    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Looking for Samples! Please share your good work   **It\u0026rsquo;s together time - Super comfy seats! **\nDemos Demos delivered in this session\n  SharePoint Content Type APIs in Microsoft Graph - Classic SharePoint APIs are now showing up in Microsoft Graph. In this demo, step through beta API methods, properties and responses for creating a content type (CT), adding CT to list, adding a column, copying to default location, updating a CT, publishing a CT, and associating CT to a hub site. API permission requirements are called out and differ slightly by API.   Live London Underground Line Status Bot in Microsoft Dataverse for Teams \u0026ndash; the next stage in the evolution of the presenter\u0026rsquo;s Tube Status solution. An interactive Tube bot in Power Virtual Agents, using Power Automate, and configuring your Azure environment for Azure API Management and Azure Functions. Dataverse for Teams allows users to leverage Azure API Management service using a custom connector in Power Platform. See solution architecture, execution triggers, rules, calls and more.   Microsoft list formatting with header and footer settings \u0026ndash; we are reminded that there are layers of formatting options for lists and that there is sample code for each layer. Here we look at header and footer settings, for groups and entire list, beyond the vanilla capabilities delivered 2 weeks ago. This session looks at Collapsed Simple formatting used for Q\u0026amp;A. Uses groupProps, aggregates, hiding, tips on double nesting and more.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  PnP .NET library updates - Bert Jansen (Microsoft) | @O365bert - 6:51\n  PnP PowerShell updates - Bert Jansen (Microsoft) | @O365bert - 9:26\n  yo Teams updates - Wictor Wilén (Avanade) @wictor - 10:42\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) | beth-panx - 12:16\n  Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German - 13:53\n  Demo: SharePoint Content Type APIs in Microsoft Graph - Swapnil Shrivastava (Microsoft) - 16:07\n  Demo: Live London Underground Line Status Bot in Microsoft Dataverse for Teams - Leon Armston (Intelogy) | @LeonArmston - 25:18\n  Demo: Microsoft list formatting with header and footer settings - Chris Kent (DMI) | @theChrisKent - 41:29\n   Resources Additional resources around the covered topics and links from the slides.\n  Slides used in this ​community call\n  Documentation - contentType resource type   Blog \u0026ndash; Create a London Underground Line Status Bot using Power Virtual Agents \u0026amp; Azure Management API in Dat...   Blog - Azure API Management connector on the Power Platform   Documentation - Use column formatting to customize SharePoint   Documentation - Use view formatting to customize SharePoint   Repo - SharePoint List Formatting Samples   PnP Weekly \u0026ndash; Episode 122 with guest MVP Mark Rackley (PAIT Group) | @mrackley| video | podcast\n  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt\n  Microsoft 365 PnP Community hub | aka.ms/m365pnp/community   Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  Viva Connections https://aka.ms/VivaConnections\n  General resources  SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  M365 General Dev call \u0026ndash; April 15th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Identity Platform \u0026ndash; April 15th at 9:00 am PDT |https://aka.ms/IDDevCommunityCalendar  Microsoft Teams monthly call \u0026ndash; April 20th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall Power Apps monthly call \u0026ndash; April 21st at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; April 22nd at 7:00 am PDT | https://aka.ms/spdev-spfx-call M365 General Dev call \u0026ndash; April 29th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Graph call - May 4th at 8:00 am PDT | https://aka.ms/microsoftgraphcall SharePoint monthly call \u0026ndash; May 11th at 8:00am PDT | https://aka.ms/sp-call Office add-in monthly call \u0026ndash; May 12th at 8:00 am PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; May 13th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall  General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 16th of April 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-15th-of-april/images/sig-agenda-15th-recording_hu6aaa24d482ae3989987195e62b7cb388_238706_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-15th-of-april/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 15th of April, 2021"},{"categories":["Community post"],"contents":"This week, I had the great pleasure to attend Microsoft\u0026rsquo;s Learn Together: Build apps for Microsoft Graph event. I also did sketchnotes of the event, you may find high resolution files (images, gifs and mp4) are available here on GitHub.\nCall to action: Learn how to make apps with Microsoft Graph and complete this Microsoft Graph Learn Challenge\n         ","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-15th-of-april/images/sig-agenda-15th-recording_hu6aaa24d482ae3989987195e62b7cb388_238706_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/learntogether-build-apps-with-microsoft-graph/","tags":[],"title":"LearnTogether: Build Apps with Microsoft Graph 🦒"},{"categories":["Community post"],"contents":"There\u0026rsquo;s a blog for that A somewhat common complaint I\u0026rsquo;ve heard from organizations I\u0026rsquo;ve worked with is that folks within the organization frequently are unaware of press releases, blogs, or other information the organization is publicly sharing. In fact, I\u0026rsquo;m guilty of it as well. On numerous occasions, I\u0026rsquo;ve gone to a coworker for some quick troubleshooting only to be told \u0026quot;I wrote a blog for that\u0026quot;.\nNow that Microsoft Viva Connections is here, I\u0026rsquo;ve been putting a lot of energy into my company\u0026rsquo;s SharePoint home site and trying to come up with ways to break down the information silo\u0026rsquo;s we\u0026rsquo;ve just naturally accrued over the years. Fortunately, it turned out that our company blog already had an RSS feed setup, which opened up some opportunities, one of which was to create a flow in Power Automate that automatically creates a SharePoint \u0026ldquo;News Link\u0026rdquo; in our home site whenever a new blog post is published to our public site. So, with this blog, we\u0026rsquo;ll walk through the steps used to accomplish that feat.   Triggered As with any flow, we need something to kick things off. I was afraid that this was going to be the biggest technical challenge but, thankfully, it turns out that there is a trigger purpose built to do exactly what we need: the When a feed item is published trigger!   As you can see, the configuration here is dead simple. You simply provide it the URL to an RSS feed and select either the PublishDate or UpdatedOn values. We\u0026rsquo;ll stick with the default PublishDate setting so that we\u0026rsquo;re only being triggered by brand new articles. So, with this configuration, our flow will be executed anytime a new article is published to the XBOX news RSS feed. Once triggered, seemingly regardless of the specific RSS feeds schema, a standardized JSON object is returned to the flow that gives us most of what we need.\n{ \u0026#34;body\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;https://news.xbox.com/?p=152438\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Wasteland 3: The Battle of Steeltown Releasing June 3 \u0026#34;, \u0026#34;primaryLink\u0026#34;: \u0026#34;https://news.xbox.com/2021/04/15/wasteland-3-the-battle-of-steeltown-releasing-june-3/\u0026#34;, \u0026#34;links\u0026#34;: [ \u0026#34;https://news.xbox.com/2021/04/15/wasteland-3-the-battle-of-steeltown-releasing-june-3/\u0026#34; ], \u0026#34;updatedOn\u0026#34;: \u0026#34;0001-01-01 00:00:00Z\u0026#34;, \u0026#34;publishDate\u0026#34;: \u0026#34;2021-04-15 14:00:00Z\u0026#34;, \u0026#34;summary\u0026#34;: \u0026#34;The Wasteland 3 team here at inXile is very excited to announce the first narrative expansion for Wasteland 3: The Battle of Steeltown will be releasing June 3. Since the game’s launch last August, we’ve been working on adding new features, quality of life changes, and fixing bugs and improving game stability and performance. But [\u0026amp;#8230;]\u0026#34;, \u0026#34;copyright\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;categories\u0026#34;: [] } } Even better, this data gets turned into variables we can access through the Dynamic Content selector in Power Automate.   Take a picture, it\u0026rsquo;ll last longer One thing we don\u0026rsquo;t get is any sort of image to show, which is a bummer because without them, all of our News Links would end up looking like the below image.   Thankfully, SharePoint has a handy-dandy little service hidden away that can help. If you ever created a new \u0026quot;News Link\u0026quot;, you\u0026rsquo;ll know that you simply give SharePoint the URL to your article and it auto-magically snags the title, summary and a thumbnail image to use. If you open up your browser\u0026rsquo;s developer tools, you can see that SharePoint calls this _api/SP.Publishing.EmbedService/EmbedData endpoint, passing along an encoded URL and some additional query strings. It turns out that this is what handles all that \u0026lsquo;magic\u0026rsquo; and it\u0026rsquo;s also something we can leverage for our own ends here! Thanks to the output of our trigger, we know the URL of the blog post we\u0026rsquo;re working with, and we can access it through the   variable. However, we do need to make sure that the URL is in the right format, so we\u0026rsquo;ll create our own variable to make it so.\n   We\u0026rsquo;ll call it PrimaryLinkEncoded, make it a string, and initialize its value using the following expression: concat('%27',encodeUriComponent(triggerOutputs()?['body/primaryLink']),'%27') Once run, we\u0026rsquo;ll end up with an encoded URL surrounded by apostrophes, which is what the EmbedData service expects. Now that we have that we just need to call the aforementioned service using the Send an HTTP request to SharePoint action.\n   We\u0026rsquo;ll be making a GET request to the root of our SharePoint site. Technically, this could be any SharePoint site you have access to, but since we\u0026rsquo;ll be posting news articles to our home site, we\u0026rsquo;ll just stick with that. For the Uri configuration, we\u0026rsquo;re calling the previously mentioned service with a few required query string parameters like so: _api/SP.Publishing.EmbedService/EmbedData?url=@{variables('PrimaryLinkEncoded')}\u0026amp;version=1\u0026amp;bannerImageUrl=true We\u0026rsquo;re passing along the encoded URL we created in the last step, specifying version 1 (which is required, despite their only being one version) and we\u0026rsquo;re asking for the bannerImageUrl to be included (otherwise we\u0026rsquo;re not getting ) We only need to include one header, the accept header, with a value of application/json;odata.metadata=minimal. Finally, to make things a bit easier to use in a moment, we\u0026rsquo;ll capture the output of this request into a variable using the Initialize Variable action again, like so.   We\u0026rsquo;re creating a new string variable named BannerImageUrl and we\u0026rsquo;re setting its value using the following expression: outputs('Get_Thumbnail')?['body']?['d']?['ThumbnailUrl']\nCompose yourself Now that we\u0026rsquo;ve got just about everything we can get, we need to put into the format that SharePoint expects when creating a News Link item, so it\u0026rsquo;s time to prepare our payload using the Compose action.   It\u0026rsquo;s a fairly simply and (mostly) self-explanatory bit of JSON, so we won\u0026rsquo;t dwell on it much. Below is the exact JSON used in the above screenshot.\n{ \u0026#34;BannerImageUrl\u0026#34;: @{variables(\u0026#39;BannerImageUrl\u0026#39;)}, \u0026#34;Description\u0026#34;: @{triggerOutputs()?[\u0026#39;body/summary\u0026#39;]}, \u0026#34;IsBannerImageUrlExternal\u0026#34;: true, \u0026#34;OriginalSourceUrl\u0026#34;: @{triggerOutputs()?[\u0026#39;body/primaryLink\u0026#39;]}, \u0026#34;ShouldSaveAsDraft\u0026#34;: false, \u0026#34;Title\u0026#34;: @{triggerOutputs()?[\u0026#39;body/title\u0026#39;]}, \u0026#34;__metadata\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;SP.Publishing.RepostPage\u0026#34; } } Spread the word The only thing left to do now is make our post, which will do by using another Send an HTTP request to SharePoint action, shown below.   This time, we\u0026rsquo;ll be making a POST to the _api/sitepages/pages/reposts endpoint (which is what SharePoint does when you post a news link). Our headers are only slightly more involved. Our endpoint is expecting to receive and will return JSON, so we need to include the appropriate headers...\n{ \u0026#34;accept\u0026#34;: \u0026#34;application/json\u0026#34;, \u0026#34;content-type\u0026#34;: \u0026#34;application/json;odata=verbose;charset=utf-8\u0026#34; } Last but not least, we need to include the Output of the compose action we created in the previous step so that SharePoint knows what we\u0026rsquo;re sharing. Once that\u0026rsquo;s all setup, go ahead and save.\nWrapping up At this point, you\u0026rsquo;re done developing. The only thing left to do is wait, really. Once new items are published to the RSS feed, you\u0026rsquo;ll eventually see them start showing up in your News web parts!   ","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-15th-of-april/images/sig-agenda-15th-recording_hu6aaa24d482ae3989987195e62b7cb388_238706_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/use-power-automate-to-automatically-create-sharepoint-news-links/","tags":["Power Automate","SharePoint\""],"title":"Use Power Automate to automatically create SharePoint News Links from an RSS feed"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"The SharePoint community monthly call is our general monthly review of the latest SharePoint news (news, tools, extensions, features, capabilities, content and training), engineering priorities and community recognition for Developers, IT Pros and Makers. This monthly community call happens on the second Tuesday of each month. You can download recurrent invite from https://aka.ms/sp-call.\nCall summary Visit the new Microsoft 365 PnP Community hub at Microsoft Tech Communities! Preview the new Microsoft 365 Extensibility look book gallery, attend one of a growing list of Sharing is Caring events. The Microsoft 365 Update - Community (PnP) | April 2021 is now available. SPFx v1.12.1 with Node v14 and Gulp4 support was released for public beta today and GA slated for end of April. In this call, quickly addressed developer and non-developer entries in UserVoice.\nA huge thank you to the record number of contributors and organizations actively participating in this PnP Community. You continue to amaze. The host of this call was Vesa Juvonen (Microsoft) @vesajuvonen. Q\u0026amp;A took place in the chat throughout the call. Getting started with Microsoft Viva Connections Desktop - an employee centric app in Teams with one stop access to internet resources, global search, contextual actions, and company branded experience. A SharePoint home site powered by Microsoft Teams, backed by Microsoft security, privacy and compliance. No additional licensing. Familiar extensible platform that will include mobile this summer. Create Viva Connections app package in PowerShell, upload package to Teams Admin Center. Actions  Register for livestream and for a regional watch party:  Register to watch the Microsoft Graph livestream on April 14 with your community at: https://aka.ms/pnpwatchparty RSVP to attend - 2-hour livestream \u0026ndash; Building Apps for with Microsoft Graph \u0026ndash; 2 sessions \u0026ndash; April 14th, 2:00pm AEST (Asia Pacific Region) | APAC Watch Party and 8:30am PDT (North America \u0026amp; Europe Regions) | https://aka.ms/learntogether-graph   Try public beta of SPFx v1.12.1, access through npm. Complete the Developer Success Survey \u0026ndash; https://aka.ms/developersuccess Join the M365 customer success platform panel \u0026ndash; https://aka.ms/SuccessPanel Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; April 27th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; April PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; April 29th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; April 15th First Time Presenter \u0026ndash; April 21st More than Code with VSCode \u0026ndash; April 14th \u0026amp; 28th Maturity Model Practitioners \u0026ndash; April 20th PnP Office Hours \u0026ndash; 1:1 session \u0026ndash; Register   Download the recurrent invite for this call \u0026ndash; https://aka.ms/sp-call. You can check the latest updates in the monthly summary and at aka.ms/spdev-blog.  This call was delivered on Tuesday, April 13, 2021. The call agenda is reflected below with direct links to specific sections. You can jump directly to a specific topic by clicking on the topic\u0026rsquo;s timestamp which will redirect your browser to that topic in the recording published on the Microsoft 365 Community YouTube Channel.\nCall agenda  SharePoint community update with latest news and roadmap \u0026ndash; 2:47 UserVoice status for non-dev focused SharePoint entries \u0026ndash; 8:36 UserVoice status for dev focused SharePoint Framework entries \u0026ndash; 9:45  Community contributors and companies which have been involved in the past month \u0026ndash; 12:50  **Topic: **Getting started with Microsoft Viva Connections Desktop - Tejas Mehta (Microsoft) | @tpmehta and Prateek Dudeja (Microsoft) | @PrateekDudeja4 \u0026ndash; 16:16 The full recording of this session is available from Microsoft 365 \u0026amp; SharePoint Community YouTube channel - http://aka.ms/m365pnp-videos. Presentation slides used in this community call are found at OneDrive.  Resources Additional resources on covered topics and discussions.\n  Documentation - Add Viva Connections for Microsoft Teams desktop   Overview - Microsoft Viva | https://aka.ms/Viva\n  PnP Weekly \u0026ndash; Episode 122 with guest MVP Mark Rackley (PAIT Group) | @mrackley| video | podcast\n  Microsoft 365 PnP Community hub | aka.ms/m365pnp/community   Microsoft 365 Extensibility look book gallery | aka.ms/m365/extensibility\n  Microsoft 365 Developer Podcast | m365devpodcast.com\n  Viva Connections https://aka.ms/VivaConnections   Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  Additional resources  PnP Weekly - Videos PnP Weekly - Podcasts M365 Community Documentation - (non-dev) SharePoint Documentation and Guidance - (technical) SharePoint Framework v1.11 SharePoint Framework v1.11 release notes Exploring how to get started on open-source and community work? SharePoint Starter Kit Recurrent invite to SharePoint Development monthly calls - http://aka.ms/spdev-call SharePoint Developer documentation - http://aka.ms/spdev-docs SharePoint Development Issues - http://aka.ms/spdev-issues SharePoint GitHub organization - http://github.com/SharePoint SharePoint Development UserVoice - new feature requests - http://aka.ms/spdev-uservoice  Upcoming Calls | Recurrent Invites  Office add-in monthly call \u0026ndash; April 14th at 8:00 am PDT | https://aka.ms/officeaddinscall M365 General Dev call \u0026ndash; April 15th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Identity Platform \u0026ndash; April 15th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar  Microsoft Teams monthly call \u0026ndash; April 20th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall Power Apps monthly call \u0026ndash; April 21st at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall SharePoint Framework call \u0026ndash; April 22nd at 7:00 am PDT | https://aka.ms/spdev-spfx-call M365 General Dev call \u0026ndash; April 29th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Graph call - May 4th at 8:00 am PDT | https://aka.ms/microsoftgraphcall SharePoint monthly call \u0026ndash; May 11th at 8:00am PDT | https://aka.ms/sp-call Adaptive Cards monthly call \u0026ndash; May 13th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall \u0026quot;Too many links, can\u0026rsquo;t remember\u0026quot; - not a problem... just one URL is enough for all Microsoft 365 community topics - http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;   SharePoint Team, Microsoft - 14th of April 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-community-call-april-13th-2021/images/15th-april-together-mode_hudb7d466ede2ca8d90884122387e994c3_3909711_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-community-call-april-13th-2021/","tags":[],"title":"SharePoint community call - April 13th, 2021"},{"categories":["Community post"],"contents":"I recently had a need for a web part for a frequently asked questions list that was a bit more interactive than what I could find on the internet. So I decided to build one and once it was finished I thought it was a great resource to share. Here\u0026rsquo;s what the web part looks like and an idea how it functions\n TLDR: For a tutorial of how to build the whole thing from scratch check out this video: https://www.youtube.com/watch?v=oIr-rgGvUUk A main driver for creating this web part was wanting something that didn\u0026rsquo;t look like SharePoint or an intranet. I spent some time looking for examples and inspiration from code samples, the Look Book, and intranet examples but I felt like I kept landing on the same accordion look and feel. Don\u0026rsquo;t get me wrong, I appreciate the accordion, I\u0026rsquo;ve even added it into my web part when you\u0026rsquo;re viewing all questions under a specific category \u0026ndash; but was this really my only option? So I started looking at external sites and finally found something I thought was cool enough to build and the react-docCard-faq idea was born! Now that I had a general idea of my data (questions and answers) and I\u0026rsquo;ve picked a layout I need to break out my questions into sub groups, something to separate them out by. That\u0026rsquo;s where the categories comes in, questions are grouped into categories. But I wasn\u0026rsquo;t finished there, what if, you don\u0026rsquo;t want to show every category. It could be that open enrollment questions only need displayed around that time or you\u0026rsquo;re launching a new product and only want to highlight it for a short period of time! So instead of always displaying every category in the FAQ list you can select which categories you want to view from the property pane when you add the web part to the page. Use cases:  A site can host a single FAQ list and only display certain categories on specific pages. Season change, Holiday\u0026rsquo;s, Enrollment time \u0026ndash; all reasons you might want to change which categories (or how many) you\u0026rsquo;re showing   Once I had the idea that you might want to *change *which categories are showing and not just always display the same categories, the featured toggle came in. Adding an additional boolean column let\u0026rsquo;s us not only select which questions will be showing in main display, but it makes it incredibly easy for anyone managing the list (not the site) to add or change which questions will display in the document card. Why in the world did I do a document card for FAQ? A few reasons for the specific design that includes so much white space. First, I wanted something that doesn\u0026rsquo;t look like a standard intranet/internal site. The layout gives a modern, professional feel that could be on any external facing site. Second, not every department/group/team knows what to share on their site or page but everyone needs FAQ\u0026rsquo;s! Because you control how many categories and questions are on the page, it can take up more or less depending on how you lay it out. Third, it\u0026rsquo;s a great way to drive adoption to your questions. Tired of answering the same 3-6 questions over and over? Direct questions to your SharePoint site where all the answers are! Added bonus, no one has to wait on you to get back from vacation for an 1 sentence answer Lastly, it drives whoever\u0026rsquo;s maintaining the list to keep it up to date. It\u0026rsquo;s not a set of boring questions and answers to go stale. With category options, a featured toggle, and the ability to write beautiful answers using rich text you\u0026rsquo;re empowered to take your FAQ to the next level! I hope I\u0026rsquo;ve inspired you to think outside of the box and get creative! Code: https://github.com/pnp/sp-dev-fx-webparts/tree/master/samples/react-doccard-faq\n","image":"https://pnp.github.io/blog/post/faq-s-in-a-document-card/images/updateFAQgif_hu465aac3307297312d48487d2fc477339_4568142_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/post/faq-s-in-a-document-card/","tags":["SharePoint","SharePoint framework (SPFx)"],"title":"FAQ's in a Document Card"},{"categories":["Microsoft 365 Platform Community update"],"contents":"Microsoft 365 Patterns and Practices (PnP) Community April 2021 update is out with a summary of the latest guidance, samples, and solutions from Microsoft or from the community for the community. This article is a summary of all the different areas and topics around the community work we do around Microsoft 365 ecosystem during the past month. Thank you for being part of this success. Sharing is caring!\nWhat is Microsoft 365 Community (PnP) Microsoft 365 PnP is a nick-name for Microsoft 365 platform community activities coordinated by numerous teams inside of the Microsoft 365 engineering organizations. PnP is a community-driven open source initiative where Microsoft and external community members are sharing their learning\u0026rsquo;s around implementation practices for Microsoft 365. Topics vary from Microsoft Viva, Microsoft Graph, Microsoft Teams, OneDrive and SharePoint. Active development and contributions happen in GitHub by providing contributions to the samples, reusable components, and documentation for different areas. PnP is owned and coordinated by Microsoft engineering, but this is work done by the community for the community.\n See more details from New Microsoft 365 Patterns and Practices (PnP) team model with new community leads The initiative is facilitated by Microsoft, but we have multiple community members as part of the PnP team (see team details in end of the article) and we are always looking to extend the PnP team with more community members. Notice that since this is open source community initiative, so there\u0026rsquo;s no SLAs for the support for the samples provided through GitHub. Obviously, all officially released components and libraries are under official support from Microsoft. Some key statistics around Microsoft 365 PnP initiative from March 2021: Unique visitors during the past 2 weeks in PnP, OneDrive, Microsoft-Search, OfficeDev and SharePoint GitHub organization repositories - 72,290 Overall unique contributors in the PnP, OneDrive, Microsoft-Search, OfficeDev and SharePoint GitHub organizations - 1,799 Microsoft 365 Community (PnP) YouTube channel had 92,953 views with 6,835 hours of watch time and 21,597 subscribers Microsoft 365 Developer YouTube channel had 50,060 views with 3,628 hours of watch time and 13,111 subscribers Most viewed videos in the Microsoft 365 Community (PnP) YouTube channel during March 2021:   Working with Microsoft Lists (webinar) - Harini Saladi, Miceile Barrett, Chakkaradeep Chandran and Mark Kashman | 4,207 Getting started with Site Designs in SharePoint Online - Laura Kokkarinen (Sulava) | 3,974 Architecting Your Intranet | Melissa Torres (Microsoft) | 2,659 Building a beautifully designed Intranet with SharePoint - latest design and branding capabilities | Cathy Dew (Microsoft) \u0026amp; Katie Swanson (Microsoft) | 2,431 SharePoint App Bar - Global navigation and wayfinding | Melissa Torres (Microsoft) | 2,263 Introducing: New Employee Onboarding - a Microsoft Teams app template | Nidhi Sharma (Microsoft) | 2,227 SharePoint Framework Tutorial 1 - HelloWorld WebPart | 1,764 SharePoint at 20 🎂 | 1,731 Migration to SharePoint, OneDrive, and Microsoft Teams in Microsoft 365, free and easy - Hani Loza (Microsoft) \u0026amp; Eric Warnke (Microsoft) | 1,718 Latest on Power Automate integration within SharePoint Online | Chakkaradeep Chandran (Microsoft) | 1,678  Most viewed videos in the Microsoft 365 Developer YouTube channel during March 2021:\n Microsoft Teams community call - March 2021 | 3,817 Authenticate and connect with Microsoft Graph - June 2019 | 1,639 Build Outlook Add-ins that integrate your solution seamlessly into your users\u0026rsquo; Outlook experience​ | Juan Balmori, Hitesh Manwar - 1,321 An introduction to Microsoft Graph for developers - Part I - Getting started - October 2019 | 1,218 Getting Started with Microsoft Graph and Application Registration | 1,020 Create interactive conversational bots for Microsoft Teams | 954 Build and Office add-in using modern JavaScript tools and technologies | 924 Accessing Files with Microsoft Graph | 772 Getting Started with Microsoft Graph | 767 Develop multi-tenant applications with Microsoft Identity Platform - April 2020 | 743  Main resources around Microsoft 365 Community:\n Microsoft 365 Community - http://aka.ms/m365pnp - One location for all the resources and news around PnP Microsoft 365 community blog - http://aka.ms/m365pnp/community/blog Microsoft 365 development blog - http://aka.ms/m365pnp-blog Microsoft 365 Community Channel on YouTube - http://aka.ms/m365pnp-videos Microsoft 365 Developer YouTube channel - https://aka.ms/M365DevYouTube  Latest Dev Blog posts Here are the latest blog posts and announcements around Microsoft 365 development topics from https://developer.microsoft.com/microsoft-365/blogs.\n 9th of April - New feature request experience for Microsoft Graph and Office Platform 8th of April - Jedox explains batching Excel Custom Functions API calls 6th of April - Build quality Microsoft Teams apps with these best practices: Part 1 1st of April - Get Microsoft Graph change notifications delivered through Azure Event Hubs 31st of March - Accelerate your app adoption with MSAL for Node.js  31st of March - Microsoft Graph Fundamentals now on Microsoft Learn  30th of March - Microsoft Graph Java SDK v3 adds enhanced capabilities with general availability 29th of March - Announcing Project Reunion 0.5! 26th of March - Tips for using the shared JavaScript runtime in your Office Add-in  23rd of March - Microsoft Graph Mailbag \u0026ndash; Getting Started with the Microsoft Graph PowerShell SDK 18th of March - Upgrade signed Office VBA macro projects to V3 signature 17th of March - Announcing SharePoint Framework 1.12 \u0026ndash; Extending more of Microsoft Teams 16th of March - Announcing Windows Community Toolkit v7.0 16th of March - FactSet for Excel leverages the EquivalentAddin element for COM add-in compatibility 11th of March - Build Cross-Platform apps with WinUI and Uno Platform 9th of March - Four device capabilities developers can utilize for Microsoft Teams mobile apps 9th of March - Microsoft Graph Mailbag \u0026ndash; Microsoft Graph in Electron applications using Microsoft Graph Toolkit 8th of March - Microsoft Graph Toolkit adds a new Electron Provider plus enhanced capabilities 4th of March - What\u0026rsquo;s new for Excel add-ins developers in 2021  4th of March - Office Add-ins partner Sheetgo integrates Excel\u0026rsquo;s extensibility features 2nd of March - What\u0026rsquo;s new for Microsoft 365 and Teams Platform @ Ignite 2021 Latest community posts at https://aka.ms/m365pnp/community/blog 12th of April - Lee Ford (Symity Ltd) - Introduction to tokens 12th of April - Chandani Prajapati - How to get any site collection users with their roles using PnP PowerShell? 11th of April - Chandani Prajapati - How to show profile picture in Person column in SharePoint list/library? 9th of April - Luise Freese - Microsoft 365 PnP Community Spotlight: Albert-Jan Schot 7th of April - Luise Freese - Microsoft Graph Fundamentals learning path \u0026ndash; Module 3 7th of April - Luise Freese - PnP WatchParty for Microsoft\u0026rsquo;s \u0026lsquo;LearnTogether Building apps with Microsoft Graph\u0026rsquo; event 7th of April - Django Lohn (InSpark) - Power Apps: source code editing for Canvas Apps 7th of April - Yannick Reekmans (Qubix) - Change your own profile picture as a Guest in Microsoft Teams 6th of April - Mike Homol (ThreeWill) - Improving the Page Properties web part 5th of April - Luise Freese - Microsoft Graph Fundamentals learning path \u0026ndash; Module 2 1st of April - Luise Freese - Microsoft Graph Fundamentals learning path \u0026ndash; Module 1 1st of April - Will Holland (ThreeWill) - Copy a list - with list items - to another site 31st of March - Peter Paul Kirschner (Cubido Business Solutions GmbH) - SPFx Image Editor Sample - Playing with Canvas 30th of March - Garry Trinder (CPS) - CLI for Microsoft 365 v3.8 29th of March - Yannick Reekmans (Qubix) - Add Developer PowerShell and Developer Command Prompt for Visual Studio to Windows Terminal 28th of March - Waldek Mastrykarz (Microsoft) - Start building apps for Teams 27th of March - Will Holland (ThreeWill) - Using the PnP Modern Search Web Parts 26th of March - Luise Freese - How to get started with Graph Explorer 26th of March - Luise Freese - Microsoft 365 PnP Community Spotlight: Julie Turner 24th of March - Chandani Prajapati - Fetch User Profile Properties From Site Collection And Export To CSV Using PNP PowerShell 24th of March - Elio Struyf (Struyf Consulting) - New VSCode extension for autocompleting your Microsoft Graph APIs 23rd of March - Yves Habersaat (Sword Group) - How to determine web part size with SPFx v1.12 19th of March - Will Holland (ThreeWill) - Getting started with SharePoint\u0026rsquo;s custom view formatting 19th of March - Luise Freese - Microsoft 365 PnP Community Spotlight: David Warner 17th of March - Chandani Prajapati - Break And Change List Item Permission Using PnP JS In SPFx 17th of March - Waldek Mastrykarz (Microsoft) - CLI for Microsoft 365 v3.7 15th of March - Paul Bullock (CaPa Creative) - Getting started with PnP Core SDK 14th of March - Will Holland (ThreeWill) - Getting started with SharePoint\u0026rsquo;s custom column formatting 13th of March - Garry Trinder (CPS) - Run CLI for Microsoft 365 in Docker 11th of March - Luise Freese - 10 things we should think about before we build an app 11th of March - Luise Freese - 5 commands to try in CLI for Microsoft 365 to fall in love with it 10th of March - Elio Struyf (Struyf Consulting) - Doctor - Maintain your documentation on SharePoint without pain 10th of March - Michaël Maillot (onepoint) - Init API permissions for your SPFx projects without deploying them 8th of March - Waldek Mastrykarz (Microsoft) - Getting started with SharePoint Framework 7th of March - Yves Habersaat (Sword Group) - How to start a new SPFx web part project with Microsoft Graph Toolkit and React 6th of March - Leon Armston (Intelogy) - Avoid Unnecessary Looping (Apply to each) in Power Automate 5th of March - Luise Freese - How to create a (faux) table in Adaptive Cards with Power Automate 3rd of March - Luise Freese - Should we use SharePoint REST or Microsoft Graph API in Power Automate? 32nd of March - Paul Bullock (CaPa Creative) - Modernization lives on in PnP Framework 2nd of March - Elio Struyf (Struyf Consulting) - To write code comments or not, it should not be a question Community call recording blog posts: 9th of April - SharePoint Framework Community Call Recording \u0026ndash; 8th of April, 2021 8th of April - Microsoft Graph community call - April 6th, 2021 2nd of April - Microsoft 365 Developer Community Call recording \u0026ndash; 1st of April, 2021 29th of March - Microsoft Identity Platform community call - March 2021 26th of March - SharePoint Framework Community Call Recording \u0026ndash; 25th of March, 2021 23rd of March - Power Apps Community Call \u0026ndash; March 2021 19th of March - Microsoft 365 Developer Community Call recording \u0026ndash; 18th of March, 2021 18th of March - Microsoft Teams Community Call - March 2021 17th of March - Adaptive Cards community call \u0026ndash; March 2021 15th of March - Office Add-ins community call \u0026ndash; March 10, 2021 12th of March - SharePoint Framework Community Call Recording \u0026ndash; 11th of March, 2021 4th of March - Microsoft 365 PnP \u0026ndash; General Developer SIG recording \u0026ndash; 4th of March, 2021 PnP Weekly video blog / podcast shows: 4th of April - Microsoft 365 PnP Weekly \u0026ndash; Episode 121 - Nik Charlebois (Microsoft) 30th of March - Microsoft 365 PnP Weekly \u0026ndash; Episode 120 - Paolo Pialorsi (PiaSys) 23rd of March - Microsoft 365 PnP Weekly \u0026ndash; Episode 119 - Chris O\u0026rsquo;Brien (Content+Cloud) 16th of March - Microsoft 365 PnP Weekly \u0026ndash; Episode 118 - Veronique Lengelle (CPS) 9th of March - Microsoft 365 PnP Weekly \u0026ndash; Episode 117 - Bert Jansen (Microsoft) We highly recommend also subscribing on the Microsoft 365 Developer Podcast show, which is a great show covering also latest development in the Microsoft 365 platform from developer and extensibility perspective.  Community Calls There are numerous different community calls on different areas. All calls are being recorded and published either from Microsoft 365 Developer or Microsoft 365 Community (PnP) YouTube channels. Recordings are typically released within the following 24 hours after the call. You can find a detailed agenda and links to specific covered topics on blog post articles at the Microsoft 365 developer blog when the videos are published.\n Adaptive Cards https://aka.ms/adaptivecardscommunitycall - Updates and news around Adaptive Cards with live demos Microsoft Graph https://aka.ms/microsoftgraphcall - Updates and news from Microsoft Graph with live demos Microsoft identity platform https://aka.ms/IDDevCommunityCalendar - Latest on the identity side Microsoft Teams https://aka.ms/microsoftteamscommunitycall - Microsoft Teams monthly update with live demos Office Add-ins https://aka.ms/officeaddinscommunitycall - News and community work around Office add-ins with live demos PowerApps https://aka.ms/PowerAppsMonthlyCall - Monthly summary on PowerApps community with live demos SharePoint https://aka.ms/spdev-call - Consists of the latest news, providing credits for all community contributors and live demos typically by SharePoint engineering. M365 General Dev SIG https://aka.ms/spdev-sig-call - Bi-weekly - General topics on Microsoft 365 Dev from various aspects - Microsoft Teams, Microsoft Graph Toolkit, Provisioning, Automation, Scripting, Power Automate, Solution design SharePoint Framework SIG https://aka.ms/spdev-spfx-call - Bi-weekly - Consists of topics around SharePoint Framework and JavaScript-based development in the Microsoft Teams and in SharePoint platform. If you are interested in doing a live demo of your solution or sample in these calls, please do reach out to the PnP Team members (contacts later in this post) and they are able to help with the right setup. These are great opportunities to gain visibility for example for existing MVPs, for community members who would like to be MVPs in the future or any community member who\u0026rsquo;d like to share some of their learnings.  Microsoft 365 Community (PnP) Ecosystem in GitHub Most of the community driven repositories are in the PnP GitHub organization as samples are not product specifics as they can contain numerous different solutions or the solution works in multiple different applications.\n  PnPjs - PnPjs Framework repository\n  CLI Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings\n  generator-spfx - Open-source Yeoman generator which extends the out-of-the-box Yeoman generator for SharePoint with additional capabilities\n  generator-teams - Open-source Microsoft Teams Yeoman generator - Bots, Messaging Extensions, Tabs, Connectors, Outgoing Web hooks and more\n  teams-dev-samples - Microsoft Teams targeted samples from community and Microsoft engineering\n  Sharing is Caring - Getting started on learning how to contribute and be active on the community from GitHub perspective.\n  pnpcore - The PnP Core SDK is an SDK designed to work against Microsoft 365 with Microsoft Graph API first approach\n  powershell - PnP PowerShell module which is PowerShell Core module targeted for Microsoft 365\n  pnpframework - PnP Framework is a .Net Standard 2.0 library targeting Microsoft 365 containing the PnP Provisioning engine and a ton of other useful extensions\n  https://github.com/pnp/teams-dev-samples - Samples around the Microsoft Teams development models from Microsoft and from the community\n  sp-dev-fx-webparts - Client-side web part samples from community and Microsoft engineering\n  sp-dev-fx-extensions - Samples and tutorial code around SharePoint Framework Extensions\n  sp-dev-fx-library-components - Samples and tutorial code around the SharePoint Framework library components\n  sp-starter-kit - Starter kit solution for SharePoint modern experiences\n  sp-dev-fx-vs-extension - Open source Visual Studio IDE extension for creating SharePoint Framework solutions in the Visual Studio 2015 or 2017\n  sp-dev-build-extensions - Different build extensions like gulp tasks and gulp plugins from the community and engineering around SharePoint development\n  sp-dev-solutions - Repository for more polished and fine-tuned reusable solutions build with SharePoint Framework\n  sp-dev-samples - Repository for other samples related on the SharePoint development topics - WebHooks etc.\n  sp-dev-fx-controls-react - Reusable content controls for SharePoint Framework solutions build with React\n  sp-dev-fx-property-controls - Reusable property pane controls to be used in web parts\n  sp-dev-list-formatting - Open-source community-driven repository for the column and view formatting JSON definitions\n  sp-dev-site-scripts - Open-source community-driven repository for community Site Designs and Site Scripts\n  sp-dev-modernization - Tooling and guidance around modernizing SharePoint from classic to modern\n  sp-power-platform-solutions - Solution and sample code for SharePoint Power Platform solutions\n  powerfx-samples - Samples that demonstrate different usage patterns for the Power Fx low-code programming language\nAll SharePoint specific repositories or services supported directly by Microsoft are located in the SharePoint GitHub organization\n\\\n  sp-dev-docs - Source for new SharePoint dev center documentation exposed from http://docs.microsoft.com/sharepoint/dev\n  sp-dev-provisioning-templates - Open-source templates used by the SharePoint Look Book site\n  sp-provisioning-service - Source code of the SharePoint look book site PnP specific repositories - solution designs and tooling\n  PnP - Main repository for SP add-in, Microsoft Graph etc. samples\n  PnP-Sites-Core - Office Dev PnP Core component\n  PnP-PowerShell - Office Dev PnP PowerShell Cmdlets\n  PnP-Tools - Tools and scripts targeted more for IT Pro\u0026rsquo;s and for on-premises for SP2013 and SP2016\n  PnP-Provisioning-Schema - PnP Provisioning engine schema repository\n  PnP-IdentityModel - Open source replacement of Microsoft.IdentityModel.Extensions.dll Repositories in the GitHub Microsoft Search organization controlled by the PnP initiative\n  pnp-modern-search - Home of PnP Modern Search solutions, see more from the documentation Other related resources from GitHub\n  Microsoft Graph Toolkit in GitHub - Community contributions welcome!\n  Office add-in Patterns and Practices in GitHub - Community contributions welcome!\n  Microsoft Graph GitHub organization\n  OfficeDev GitHub organization - Includes all Microsoft Teams samples from Microsoft\n\\\n  What\u0026rsquo;s supportability story around the community tooling and assets? Following statements apply across all of the community lead and contributed samples and solutions, including samples, core component(s) and solutions, like SharePoint Starter Kit, yo teams or PnP PowerShell. All Microsoft released SDKs and tools are supported based on the specific tool policies.\n PnP guidance and samples are created by Microsoft \u0026amp; by the Community PnP guidance and samples are maintained by Microsoft \u0026amp; community PnP uses supported and recommended techniques PnP is an open-source initiative by the community \u0026ndash; people who work on the initiative for the benefit of others, have their normal day job as well PnP is NOT a product and therefore it\u0026rsquo;s not supported by Premier Support or other official support channels PnP is supported in similar ways as other open source projects done by Microsoft with support from the community by the community There are numerous partners that utilize PnP within their solutions for customers. Support for this is provided by the Partner. When PnP material is used in deployments, we recommend being clear with your customer/deployment owner on the support model Please see the specifics on the supportability on the tool, SDK or component repository or download page.  Microsoft 365 PnP team model    In April 2020 we announced our new Microsoft 365 PnP team model and grew the MVP team quite significantly. PnP model exists for having more efficient engagement between Microsoft engineering and community members. Let\u0026rsquo;s build things together. Your contributions and feedback is always welcome! During August, we also crew the team with 5 new members. PnP Team coordinates and leads the different open-source and community efforts we execute in the Microsoft 365 platform. We welcome all community members to get involved on the community and open-source efforts. Your input do matter!\n New Microsoft 365 Patterns and Practices (PnP) team members - February 2021 New Microsoft 365 Patterns and Practices (PnP) team members - December 2020 New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 Got feedback, suggestions or ideas? - Please let us know. Everything we do in this program is for your benefit. Feedback and ideas are more than welcome so that we can adjust the process for benefitting you even more.  Area-specific updates These are different areas which are closely involved on the community work across the PnP initiative. Some are lead and coordinated by engineering organizations, some are coordinated by the community and MVPs.\nMicrosoft Graph Toolkit    Microsoft Graph Toolkit is engineering lead initiative, which works closely with the community on the open-source areas. The Microsoft Graph Toolkit is a collection of reusable, framework-agnostic web components and helpers for accessing and working with Microsoft Graph. The components are fully functional right of out of the box, with built in providers that authenticate with and fetch data from Microsoft Graph.\n Latest version currently is 2.1. See the v2.1 announcement blog post for more details - Microsoft Graph Toolkit adds a new Electron Provider plus enhanced capabilities mgt.dev - Microsoft Graph Toolkit Playground Getting started with Microsoft Graph Toolkit guidance video from developer community call by Beth Pan (Microsoft) Latest code and preview versions from https://aka.ms/mgt All the latest updates on the Microsoft Graph Toolkit is being presented in our bi-weekly Microsoft 365 Generic Dev community call, including the latest community contributors.  Microsoft 365 Community docs    Community docs model was announced in the April 2020 and it\u0026rsquo;s great to see the interest for community to help each other by providing new guidance on the non-dev areas. See more on the announcement from the SharePoint blog - Announcing the Microsoft 365 Community Docs. We do welcome contributions from the community - our objective is to build a valuable location for articles from Microsoft and community together.\nLatest updates on this area as follows:\n  New article by Simon Hudson and Simon Doy - Customization and Development Competency\n  Updated article by Callum Crowley (Method4) - Power Automate vs Logic Apps\n  Updated article by Callum Crowley (Method4) - Benefits of using PowerShell with SharePoint\n  Updates by Emily Mancini (Sympraxis Consulting) on the Maturity Model for Microsoft 365\n  Updates by Leon Armston (Intelogy) on the Follow Microsoft 365 on Social Media\n  Updates by Trevor Seward (Seattle Genetics) on Should everyone create Teams? A Low Code Provisioning solution\n  Updates by Callum Crowley (Method4) and Liam Cleary (SharePlicity) on Basic Security Set Up for Microsoft 365 Have ideas for articles or want to contribute yourself? - Get involved! Here are also some additional resources explaining the model more detailed.\n  Updates on the Microsoft 365 Community Docs - June 2020\n  YouTube - Introducing Microsoft 365 Community Docs\n  GitHub issue list with articles ideas\n  SharePoint Framework development samples    These are the updated SharePoint Framework samples which are available from the the different repositories.\n New sample react-image-editor by Peter Paul Kirschner (cubido business solutions GmbH) on having more advance image web part with editing experience model New sample react-teams-meeting-app-questionnaire by Nanddeep Nachan, Ravi Kulkarni and Smita Nachan on building Microsoft Teams meeting app for asking pre-meeting questions and collecting input from the meeting attendees New sample react-advanced-page-properties by Mike Homol (ThreeWill) on having additional metadata exposed and collection from a page level New sample react-video-banner by Mohamed Derhalli Use this Web Part to add a video banner with a text on top of it to your pages New sample react-doccard-faq by Sam Collins (Coupled Technology) as a custom FAQ Document Card Web Part Updates to react-calendar by Mohammed Amer (Atea Global Service) which is a custom web part to manage events in a calendar Updates to react-jump-to-folder by Joel Rodrigues (Storm Technology) which is an extension to facilitates navigation between large collections of SharePoint library folders Updates to react-questions-and-answers by Bo George (ThreeWill) which provides a dynamic question and answer experience Updates to react-staffdirectory by Ari Gunawan which shows current user\u0026rsquo;s colleagues, and allows the user to search AD directory Other to numerous SPFx web part and extension samples by our awesome community members! How to find what\u0026rsquo;s relevant for you? Take advantage of our SharePoint Framework web part and extension sample galleries - includes also solutions which work in Microsoft Teams Web Part sample gallery - http://aka.ms/spfx-webparts Extensions sample gallery - http://aka.ms/spfx-extensions  Microsoft Teams community samples    These are samples which have been contributed on the community samples since last summary. We do welcome all Microsoft Teams samples to this gallery. They can be implemented using in any technology.\n Numerous updates on the existing samples provided by community and Microsoft If you are interested on Microsoft Teams samples, we have just released also new Microsoft Teams sample gallery. Contributions to Microsoft Teams samples is also more than welcome. This gallery already surfaces all Microsoft samples, Microsoft Teams app templates and community samples.  Sharing is Caring initiative    The \u0026ldquo;Sharing Is Caring\u0026rdquo; imitative is targeted for learning the basics around making changes in Microsoft Docs, in GitHub, submitting pull requests to the PnP repositories and in GitHub in general. Take advantage of this instructor lead training for learning how to contribute to docs or to open-source solutions. Everyone is welcome to learn how to get started on contributing to open-source docs or code!\n See more from the guidance documentation - including all upcoming instructor lead sessions which you can participate!  Different Microsoft 365 related open-source initiatives build together with the community See exact details on the latest updates from the specific open-source project release notes. You can also follow up on the project updates from our community calls. There are numerous active projects which are releasing new versions with the community even on weekly basis. Get involved!\n Microsoft Look Book - Discover the modern experiences you can build with SharePoint in Microsoft 365. Look book provides design examples for SharePoint Online which can be automatically provisioned to any tenant in the world. See more from https://lookbook.microsoft.com. This service is also provided as open-source solution sample from GitHub. yo teams - Open-source Yeoman generator for Microsoft Teams extensibility. Supports creation of bots, messaging extensions, tabs (with SSO), connectors and outgoing Webhooks. See more from https://aka.ms/yoteams. PnP Framework - .NET Standard 2.0 SDK containing the classic PnP Sites Core features for SharePoint Online. More around this package from GitHub. PnP Core SDK - The PnP Core SDK is an SDK designed to work for Microsoft 365 with Graph API first approach. It provides a unified object model for working with SharePoint Online and Teams which is agnostic to the underlying API\u0026rsquo;s being called. See more around the SDK from documentation. PnP PowerShell - PnP PowerShell is a .NET Core 3.1 / .NET Framework 4.6.1 based PowerShell Module providing over 400 cmdlets that work with Microsoft 365 environments and more specifically SharePoint Online and Microsoft Teams. See more details from documentation. Reusable SharePoint Framework controls - Reusable controls for SharePoint Framework web part and extension development. Separate projects for React content controls and Property Pane controls for web parts. These controls are using Office UI Fabric React controls under the covers and they are SharePoint aware to increase the productivity of developers. Office 365 CLI - Using the Office 365 CLI, you can manage your Microsoft Office 365 tenant and SharePoint Framework projects on any platform. See release notes for the latest updates. PnPJs - PnPJs encapsulates SharePoint REST APIs and provides a fluent and easily usable interface for querying data from SharePoint sites. It\u0026rsquo;s a replacement of already deprecated pnp-js-core library. See changelog for the latest updates. PnP Provisioning Engine and PnP CSOM Core - PnP provisioning engine is part of the PnP CSOM extension. They encapsulate complex business driven operations behind easily usable API surface, which extends out-of-the-box CSOM NuGet packages. See changelog for the latest updates. PnP PowerShell - PnP PowerShell cmdlets are open-source complement for the SharePoint Online cmdlets. There are more than 300 different cmdlets to use and you can use them to manage tenant settings or to manipulate actual SharePoint sites. They See changelog for the latest updates. PnP Modern Search solution - The PnP \u0026lsquo;Modern Search\u0026rsquo; solution is a set of SharePoint Online modern Web Parts allowing SharePoint super users, webmasters and developers to create highly flexible and personalized search based experiences in minutes. See more details on the different supported capabilities from https://aka.ms/pnp-search. Modernization tooling - All tools and guidance on helping you to transform you SharePoint to modern experiences from http://aka.ms/sppnp-modernize. SharePoint Starter Kit v2 - Building modern experiences with Microsoft Teams flavors for SharePoint Online and SharePoint 2019 - reference solution in GitHub. List formatting definitions - Community contributed samples around the column and view formatting in GitHub. Site Designs and Site Scripts - Community contributed samples around SharePoint Site Designs and Site Scripts in GitHub. **DevOps tooling and scripts **- Community contributed scripts and tooling automation around DevOps topics (CI/CD) in GitHub. Teams provisioning solution - Set of open-source Azure Functions for Microsoft Teams provisioning. See more details from GitHub.  Documentation updates Please see all the Microsoft 365 development documentation updates from the related documentation sets and repositories as listed below:\n Microsoft Teams platform documentation - Microsoft Docs | GitHub SharePoint Developer documentation - Microsoft Docs | GitHub Microsoft Graph documentation - Microsoft Docs | GitHub Office add-in documentation - Microsoft Docs | GitHub  Microsoft 365 Dev and Microsoft 365 Community (PnP) YouTube video channels You can find all Microsoft 365 related videos on our YouTube Channel at http://aka.ms/m365pnp-videos or at Microsoft 365 Dev. These channels contains already a significant amount of detailed training material, demo videos, and community call recordings. Here are the new Microsoft demo or guidance videos released since the last monthly summary:\n Use SharePoint pages to support on-demand training - Mark Kashman (Microsoft) | @mkashman Building extension to save documents as PDF in tenant document libraries - Mikael Svenson (Microsoft) | @MikaelSvenson Jeff Teper\u0026rsquo;s Beatles-inspired \u0026quot;SharePoint at 20\u0026quot; birthday singalong 🎂🎸 - Jeff Teper (Microsoft) | @jeffteper \u0026ldquo;Happy Birthday, SharePoint\u0026rdquo; 🎂: 20 years young - Microsoft SharePoint at 20 🎂 - Microsoft Getting started with Microsoft Viva Topics - Naomi Moneypenny (Microsoft) | @nmoneypenny Azure Communication Services - Voice Calling Quick Start - Dan Wahlin (Microsoft) | @danwahlin Building a list view command set to demote previously promoted news articles from pages library - Mikael Svenson (Microsoft) | @MikaelSvenson Using Kiota to generate a TypeScript SDK for Microsoft Graph - Vincent Biret (Microsoft) | @baywet Building an application using Microsoft Graph Toolkit and Electron provider - Amrutha Srinivasan (Microsoft) | @amruthasrin Microsoft Graph Fundamentals on Microsoft Learn - Dan Wahlin (Microsoft) | @DanWahlin Business to Citizen Consumer Communication Bot - Sathya Raveendran (Microsoft), Arun Kumar Anaparthi (Microsoft) Bot Composer in Microsoft Teams - Bob German (Microsoft) | @Bob1German UX changes for Outlook add-ins on the web - Hitesh Manwar (Microsoft) Excel JS API v1.13 updates - Raymond Lu (Microsoft) PowerPoint ribbon updates - Lillian Liu (Microsoft) Getting started with Power Apps ALM - Phil Topness (Microsoft) | @topness, Mike Ochs (Exalents) | @mikefactorial \u0026amp; Marc Scgweigert (Microsoft) | @devkeyde Utilizing Mobile First Device Capabilities for Microsoft Teams Apps - Anuj Bahl (Microsoft) \u0026amp; Shubham Chauhan (Microsoft) Deep dive into Universal Actions for Microsoft Teams and Outlook - Shiladitya Saha (Microsoft) \u0026amp; Karan Thapar (Microsoft) Office Scripts Tutorial: Scripting for Beginners - Ayushi Garg (Microsoft) | @Ayushi_at_msft Community demos as following: PnP Watch Party - Building Apps with Microsoft Graph - Learn Together - David Warne (Catapult) Sending messages to Microsoft Teams using Microsoft Graph from SharePoint Framework solution - David Ramalho (Storm Technology) | @davRamalho The Microsoft Graph Toolkit in Microsoft Teams with Blazor - Thomy Gölles (Solvion) | @thomyg Accessing comment information in list formatting and advance form adjustments - Chris Kent (DMI) | @theChrisKent Getting started on using Microsoft Teams Yeoman generator v3 - Wictor Wilén (Avanade) | @wictor Using a web part to control which Sites have been grated permissions in Azure AD application - Fredrik Thorild (Sogeti) | @taxonomythorild Building List Search web part for showing data flexibly from lists or libraries - Alberto Gutierrez Perez (Minsait) | @albertogperez DataTable web part for rendering data from lists with advance features - Chandani Prajapati | @Chandani_SPD \u0026amp; David Warner (Catapult) | @DavidWarnerII Exporting SharePoint site structures/documentation to Markdown - Kevin McDonnell (CPS) | @kevmcdonk New SP Editor chrome extension with Microsoft Graph Toolkit React playground - Tomi Tavela (RND Works) | @tavikukko List formatting fundamentals - options and considerations - Chris Kent (DMI) | @theChrisKent Add Folder Command Extension for easy doc library structure management - Michaël Maillot (onepoint) | @michael_maillot Using reusable chart controls to present business data in a web part - Hugo Bernier (Tahoe Ninjas) | @bernierh Creating a responsive Power App running Dataverse in Teams - Reza Dorrani (Catapult) | @RezaDorran Automating metadata tagging with AI using Power Automate - Uday Adhikari | @udayadhikari PnP Weekly sessions - Community visitors and latest articles from Microsoft and community on Microsoft 365 topics. Microsoft 365 PnP Weekly - Episode 120 - Mark Rackley (PAIT Group) Microsoft 365 PnP Weekly - Episode 121 - Nik Charlebois (Microsoft) Microsoft 365 PnP Weekly - Episode 120 - Paolo Pialorsi (PiaSys) Microsoft 365 PnP Weekly - Episode 119 - Chris O\u0026rsquo;Brien (Content+Cloud) Microsoft 365 PnP Weekly - Episode 118 - Veronique Lengelle (CPS)  Microsoft 365 PnP Weekly - Episode 117 - Bert Jansen (Microsoft)  Key contributors to the April 2021 update Here\u0026rsquo;s the list of active contributors (in alphabetical order) since last release details in GitHub repositories or community channels. PnP is really about building tooling and knowledge together with the community for the community, so your contributions are highly valued across the Microsoft 365 customers, partners and obviously also at Microsoft. Thank you for your assistance and contributions on behalf of the community. You are truly making a difference! If we missed someone, please let us know.\n  Abderahman Moujahid - Abderahman88\n  Adam - Adam-it\n  Agustin Del Vento (Change Champions Consulting Inc.)\n  Aimery Thomas - @aimery_thomas\n  Albert-Jan Schot (Portiva) - @appieschot\n  Alberto Gutierrez (Minsait) - @albertogperez\n  Alex Grover - groveale\n  Alex Terentiev (SharePointalist) - @alexaterentiev\n  Alexander Ernon (Amplexor) - alex-ernon\n  Alikont - Alikont\n  Andres Ibarra (CloudIgnite) - @Riftsan{.Link\u0026ndash;primary}\n  Andrew Benson (InElec) - @ViewPorter\n  Andrew Burns (AmSty) - @SharePointRox\n  Andrew Connell (Voitanos) - @andrewconnell\n  Andrew Koltyakov (ARVO Systems) - @andrewkoltyakov\n  Andy Boylan (AdEPT Technology Group) - apboylan\n  Andy Dawson (Black Marble) - @W4050\n  Anoop Tatti (Content+Cloud) - @anooptells\n  April Watson (Wood Plc) - AprilWatson\n  Arjun Menon (Mindtree) - @arjunumenon\n  Ari Gunawan (DevStack) - @kuboconcept\n  Axel Raeves (Spikes) - @axelraeves\n  Beau Cameron (Aerie Consulting) - @Beau__Cameron\n  Bo George (ThreeWill) - @bo_george\n  Bill Ayers (Flow Simulation Ltd) - @SPDoctor\n  Bill Brockbank (ATGS Canada) - billbrockbank\n  Callum Crowley (Method4) - @CallumNCrowley\n  Carlos Infante - carlhanz17\n  Chandani Prajapati - @Chandani_SPD\n  Chandra Sekhar Malla - @OfficialartistC\n  Charles Ndiaye (Netexio) - @manusquall\n  Chris Kent (DMI) - @theChrisKent\n  Chris O\u0026rsquo;Brien (Content+Cloud) - @ChrisO_Brien\n  Christian Zuellig (Monday Coffee) \u0026ndash; @ChristianZuell1\n  Christine Green (EBSCO Information Services) - @cacurtica\n  Copowell - Copowell\n  Cristian Civera - @CristianCivera\n  Dale Pilarczyk (Centric Consulting) - DalePilarczyk\n  Dan Bennett - @nonodename\n  Django Lohn (InSpark) - @lohndjango\n  Daniel Tshin (UNDP) - @dtshin\n  Daniel Westerdale (Westerdale Solutions Ltd) - @westerdaled\n  Darren Brown (Node4)\n  David Gent - dgtheninja\n  David Ramalho (Storm Technology) - @DavRamalho\n  David Warner II (Catapult) - @DavidWarnerII\n  Dean Gross (Insight) - @dean144\n  Dipen Shah (Stridely Solutions) - @Dips_365\n  Dinesh Bhat (Cognizant) - techbvdinesh\n  Divya Akula (Tarento Technologies) - @_divyaakula\n  Don Kirkham (Probitas Data Solutions) - @DonKirkham\n  Elio Struyf (Struyf Consulting) - @eliostruyf\n  Eloisa Marquez-Gonzalez (Evolution Consulting Group) - @EvolveWithECG\n  Emily Mancini (Sympraxis Consulting) - @EEMancini\n  Eric Overfield (PixelMill) - @EricOverfield\n  Erwin van Hunen (Valo Intranet) - @erwinvanhunen\n  Franck Catinot (Abalon Consulting) - fcatinot\n  Frank Cornu (aequos) - @FranckCornu\n  Frank Costa (West Monroe)\n  Fredrik Thorild (Sogeti Sweden) - @taxonomythorild\n  Ganesh Sanap - @ganeshsanap20\n  Garry Trinder (CPS) - @garrytrinder\n  Gautam Sheth (Valo Intranet) - @gautamdsheth\n  Gissur Simonarson (Fujitsu) - @gissisim\n  gszdev - gszdev\n  Giacomo Pozzoni (DQC Sverige Ab) - @PozzoniGiacomo\n  Harlan Koehn (Village Media) - harlankoehn\n  Harminder Singh - @Harminder_Sethi\n  Harold Wolfinger\n  Hiroaki Nagao - @mofumofu_dance\n  Igor Karon (Clean Energy) - IgorKaron\n  James Fisher - jamesfisher1081\n  Jarbas Horst (Valo Intranet) - @devjhorst\n  Jason Rivera (Anexinet) - @sharepointjr\n  João Mendes - @joaojmendes\n  Joanne Klein (NexNovus Consulting) - @JoanneCKlein\n  Joel Rodrigues (Storm Technology) - @JoelFMRodrigues\n  John VanDaele - oxyd5000\n  Joseph Velliah - @JosephVelliah\n  Joy Muehlenbein (Edwards Lifesciences) - @huh_larious\n  Julie Batista (Smarter Consulting LLC) - @JulieB365\n  Julie Turner (Sympraxis Consulting) - @jfj1997\n  Kanakarajulu Thota (Atos GITSS) - @KanakarajuNaidu\n  Kanwal Khipple (2toLead) - @kkhipple\n  Kathleen Boilek (Alaka\u0026rsquo;Ina Foundation) - @kaboilek\n  Kerry Lambert (NI) - @kazoogal23\n  Kevin McDonnell (CPS) | @kevmcdonk\n  Kinga - kkazala\n  Konradox - Konradox\n  koruneko - koruneko\n  xKrutika Brahmbhatt - krutikabrahmbhatt\n  Krzysztof Mikołajec (Krzysztof Mikolajec Consulting, Sii Pl) - @krzymiko\n  Kunal Patil (Burns \u0026amp; McDonnell) - krazykap\n  Laura Kokkarinen (Sulava) - @LauraKokkarinen\n  Lee Ford (Symity Ltd) - @lee_ford\n  Leon Armston (Intelogy Ltd) - @LeonArmston\n  Liam Cleary (SharePlicity) - @helloitsliam\n  Lindsay Shelton (Smarter Consulting) - @lshelton_tech\n  Luis Mañes (ClearPeople) - @luismanez\n  Luise Freese (Luise Freese M365 Princess) - @LuiseFreese\n  Manjunath Puttaswamy (Momentive Performance Material India Pvt Ltd) - @ManjunathPutta3\n  Marc D Anderson (Sympraxis Consulting) - @sympmarc\n  Marcin Wojciechowski (Valo Intranet) - @mgwojciech\n  Mark Rackley (PAIT Group) - @mrackley\n  Matthew Devaney - @mattbdevaney\n  Matt Carter (Valorem Reply) - @cartmatt\n  Miguel Tena (2toLEad) - @mikeware_tena\n  Mike Duffy (Boardwalk Pipelines) - @mike_duffy\n  Mike Homol (ThreeWill) - @homol\n  Mike Ochs (Exalents) | @MikeFactorial\n  Michael Kriese (VisualOn GmbH) - viceice\n  Michaël Maillot (onepoint) - @michael_maillot\n  Mohammad Amer (Atea Global Service) - @Mohammad3mer\n  Mohamed Derhalli - derhallim\n  Nanddeep Nachan \u0026ndash; @NanddeepNachan\n  Naveed Mohammad (Cognizant) - naveed243\n  Neil Sreenan (HKS Inc.) - @nsreenanhks\n  Nizar Grindi (Avanade) - @nizar_grindi\n  Paolo Pialorsi (PiaSys.com) - @PaoloPia\n  Patrick Galloway - BammaSlim\n  Patrik Hellgren (Sherpas Group) - @patrikhellgren\n  Patrick Lamber (Expertsinside AG) - @patricklamber\n  Patrick Tucker (KiZAN) - @Tuckersnet\n  Paul Bullock (CaPa Creative Ltd) - @pkbullock\n  Paul Schaeflein (AddIn365) - @paulschaeflein\n  Pete Bostrom (Bakkavor) - @petebostrom\n  Peter Paul Kirschner (cubido business solutions GmbH) - @petkir_at{.Link\u0026ndash;primary}\n  Phil Broadbery (PKF) - @peb71b\n  Ravi Kulkarni (Cognizant) - @RaviKul16a87\n  Ravichandran Krishnasamy (Content Formula) - @spfx_blog\n  Reza Dorrani (Catapult) | @RezaDorran\n  Rohit S Patil (C3it)\n  Ron Jones (Organogenesis)\n  Russell Gove - russgove\n  Sam Collins (Coupled Technology) - @samc148\n  Sarah Wilson (Orchestry) - Sarah4x\n  Seb Matthews (ProvisionPoint Ltd) - @sebmatthews\n  Sergei Sergeev (Mastaq) - @sergeev_srg\n  Shiva Bezwada (JCS Solutions LLC) - @Texaport\n  Simon Doy (iThink 365) - @simondoy\n  Simon Hudson (Cloud2) - @simonjhudson\n  Smita Nachan - @smitanachan\n  Spencer Harbar (Triumph Media Limited) - @harbars\n  Stefan Bauer (n8d) - @StfBauer\n  Steve Babulski (Progressive Insurance) - @sbabulski\n  Sudharsan Kesavanarayanan (NTT Digital Business Solutions) - @sudharsank{.Link\u0026ndash;primary}\n  Suzanne Kozina (Roberts Technology Solutions) - suzannekozina\n  Tetsuya Kawahara - @techsn_k\n  Thomy Gölles (Solvion) | @thomyg\n  Todd Baginski (Canviz) - @toddbaginski\n  Tomi Tavela (RND Works) - @tavikukko\n  Uday Adhikari | @udayadhikar\n  Wictor Wilen (Avanade) - @wictor\n  Will Holland (ThreeWill) - @_WCHolland\n  Velin Georgiev (Pramerica) \u0026ndash; @velingeorgiev\n  Veronique Lengelle (CPS) - @veronicageek\n  Vincent Georges (Microsoft) - VincentGeorges\n  Yannick Plenevaux (PVX Solutions) - @yp_code\n  Yannick Reekmans (Qubix) - @YannickReekmans\n  Yücel Tasyol (Agile-IS GmbH) - ytasyol\n  Yves Habersaat (Sword Group) - @yhabersaat\n  Zach Bean (Charles River Laboratories) Companies: Here\u0026rsquo;s the companies, which provided support for PnP initiative for this month by allowing their employees working for the benefit of others in the community. There were also people who contributed from other companies during last month, but we did not get their logos and approval to show them in time for these communications. If you still want your logo for this month\u0026rsquo;s release, please let us know and share the logo with us. Thx.   Microsoft people: Here\u0026rsquo;s the list of Microsoft people who have been closely involved with the PnP work during last month.\n  Aakash Bhardwaj - @aakash_316\n  Allen Snow - @asnow003\n  April Dunnam - @aprildunnam\n  Amrutha Srinivasan | @amruthasrin\n  Arun Kumar Anaparthi - arun-msft\n  Ayushi Garg | @ayushi_at_msft\n  Ayca Bas - @aycabs\n  Bert Jansen - @O365Bert\n  Beth Pan - @beth_panx\n  Bob German - @Bob1German\n  Brad Schlintz - @bschlintz\n  Callum Crowley - @CallumNCrowley\n  Chakkaradeep (Chaks) CC - @chakkaradeep\n  Charles Sterling - @chass\n  Dan Wahlin - @DanWahlin\n  David Chesnut - davidchesnut\n  Doğan Erişen - derisen\n  Elise Yang - @elisenyang\n  Hugo Bernier - bernierh\n  Jason Johnston - jasonjoh\n  Jeremy Kelley - @Fizzlenik\n  Joanne Hendrickson - JoanneHendrickson\n  John Nguyen - johnguy0\n  John Sudds - jsuddsjr\n  Karthig Balendran - @KarthigBalendr1\n  Kevin Coughlin - @kevintcoughlin\n  Kiran Thomas - @notkiran\n  Koen Zomers - @koenzomers\n  Laura Graham - Lauragra\n  Linda Lu Cannon - lindalu-MSFT\n  Loki Meyburg - @lokimeyburg\n  Luca Bandinelli - lucaband\n  Marc Mroz - @marcmroz\n  Marc Scgweigert - @devkeydet\n  Matt Wolodarsky - @mwolodarsky\n  Melissa Torres - @Meltorac\n  Miceile Barrett (Microsoft) - @MSFTMiceile\n  Mikael Svenson - @mikaelsvenson\n  Nik Charlebois - @NikCharlebois\n  Nick Kramer - nkramer\n  Nicolas Vogt - vogtn\n  Nidhi Sharma - @nidsonbirdie\n  Nikola Metulev - @metulev\n  Pam Green (Microsoft) - @contextuallib\n  Pat Miller - @PatMill_MSFT\n  Patrick Rodgers - @mediocrebowler\n  Phil Topness - @topness\n  Philippe Signoret - @psignoret\n  Rabia Williams - @williamsrabia\n  Rob Garrett - robgarrett\n  Sam Larson - salarson\n  Shreyansh Agrawal - shagra-ms\n  Saikrishna-MSFT - Saikrishna-MSFT\n  Shane Weaver - shweaver-MSFT\n  Sébastien Levert - @sebastienlevert\n  Steven Jia - Steven-Jia\n  Tomomi Imura - @girlie_mac\n  Vesa Juvonen - @vesajuvonen\n  Waldek Mastykarz - @waldekm\n  Vincent Biret - @baywet\n  Westley - westleyMS\n  PnP Team PnP Team manages the PnP community work in the GitHub and also coordinates different open-source projects around Microsoft 365 topics. PnP Team members have a significant impact on driving adoption of Microsoft 365 topics. They have shown their commitment to the open-source and community-driven work by constantly contributing to the benefit of the others in the community. Thank you for all that you do!\n Albert-Jan Schot (Portiva) - @appieschot Alex Terentiev (SharePointalist) - @alexaterentiev Andrew Connell (Voitanos) \u0026ndash; @andrewconnell Andrew Koltyakov (ARVO Systems) \u0026ndash; @andrewkoltyakov Beau Cameron (Aerie Consulting) - @Beau__Cameron Chris Kent (DMI) \u0026ndash; @theChrisKent David Warner II (Catapult) - @DavidWarnerII Elio Struyf (Struyf Consulting) \u0026ndash; @eliostruyf Emily Mancini (Sympraxis Consulting) - @EEMancini Eric Overfield (PixelMill) - @EricOverfield Erwin van Hunen (Valo Intranet) \u0026ndash; @erwinvanhunen Frank Cornu (aequos) - @FranckCornu Garry Trinder (CPS Solutions) - @garrytrinder Julie Turner (Sympraxis Consulting) - @jfj1997 Laura Kokkarinen (Sulava) - @LauraKokkarinen Luise Freese - @LuiseFreese Marc D Anderson (Sympraxis Consulting) - @sympmarc Paolo Pialorsi (Piasys.com) \u0026ndash; @PaoloPia Paul Bullock (CaPa Creative Ltd) - @pkbullock Rabia Williams (Engage Squared) - @williamsrabia Stefan Bauer (n8d) \u0026ndash; @StfBauer Velin Georgiev (Pramerica) \u0026ndash; @velingeorgiev Veronique Lengelle (CPS) - @veronicageek Wictor Wilen (Avanade) - @wictor Yannick Plenevaux (PVX Solutions) - @yp_code Here are the Microsoft Internal PnP Core team members: April Dunnam - @aprildunnam Bert Jansen \u0026ndash; @O365Bert Bob German - @Bob1German Hugo Bernier - @bernierh Koen Zomers - @koenzomers Mikael Svenson \u0026ndash; @mikaelsvenson Patrick Rodgers \u0026ndash; @mediocrebowler Rabia Williams - @williamsrabia Sébastien Levert - @sebastienlevert Vesa Juvonen \u0026ndash; @vesajuvonen Waldek Mastykarz \u0026ndash; @waldekm  Next steps See all of the available community calls, tools, components and other assets from https://aka.ms/m365pnp. Get involved! Got ideas or feedback on the topics to cover, additional partnerships, product feature capabilities? - let us know. Your input is important for us, so that we can support your journey in Microsoft 365. \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 Community (PnP) \u0026ndash; April 13th 2021\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-april-2021-update/images/april-monthly-update_hu6a4e9724e822cd84cf3b2fb253677284_650269_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-community/microsoft-365-pnp-community-april-2021-update/","tags":[],"title":"Microsoft 365 PnP Community -- April 2021 update"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by a Partner at the US-based consultancy PAIT Group and Microsoft 365 MVP Mark Rackley | @mrackley. Topics discussed in this session include: Hillbilly tabs, North American Collaboration Summit, how the transition from on-Prem to Cloud along with a talented PnP community has impacted the need to customize applications. Hiring based on who\u0026rsquo;s available, managing the pace of change and customer expectations, deployment planning, and the business unit customer\u0026rsquo;s interest in Microsoft Viva experience.\nCovering also 20 articles from Microsoft and the Community.\nThis episode was recorded on Monday, April 12, 2021.\n Video at Microsoft 365 Community YouTube channel    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nEvents  April 14, 2021 - Building Apps with Microsoft Graph May 25-27, 2021- Microsoft Build 2021 August 9-11, 2021 - North American Collaboration Summit  Register with coupon code \u0026ldquo;PnP\u0026rdquo; for 25% off from the prize at https://nacs.ticketspice.com/nacs2021    Microsoft articles  Microsoft Teams Rooms on Android | April 2021 Updates - Microsoft New feature request experience for Microsoft Graph and Office Platform - Microsoft Build quality Microsoft Teams apps with these best practices: Part 1 - Microsoft  Community articles  Introduction to tokens - Lee Ford (Symity Ltd) | @lee_ford How to get any site collection users with their roles using PnP PowerShell? - Chandani Prajapati | @Chandani_SPD How to show profile picture in Person column in SharePoint list/library? - Chandani Prajapati | @Chandani_SPD Microsoft 365 PnP Community Spotlight: Albert-Jan Schot - Luise Freese | @LuiseFreese Microsoft Graph Fundamentals learning path \u0026ndash; Module 3 - Luise Freese | @LuiseFreese \u0026lsquo;LearnTogether Building apps with Microsoft Graph\u0026rsquo; event - Luise Freese | @LuiseFreese Microsoft Graph Learn Together Event \u0026ndash; Join Our APAC Watch Party - Cameron Dwyer (OnePlace Solutions) | @camerondwyer Power Apps: source code editing for Canvas Apps - Django Lohn (InSpark) | @lohndjango Change your own profile picture as a Guest in Microsoft Teams - Yannick Reekmans (Qubix) | @yannickreekmans Improving the Page Properties web part - Mike Homol (ThreeWill) | @homol Microsoft Graph Fundamentals learning path \u0026ndash; Module 2 - Luise Freese | @LuiseFreese Options for obtaining an access token with Azure application to application authentication - Anoop Tatti (Content+Cloud) | @anooptells Power Apps Data Sources Explained - April Dunnam (Microsoft) | @aprildunnam SharePoint List Form - Form Editor - Laura Rogers (IW Mentor) | @WonderLaura Upgrading the PnP Modern Search Web Parts from v3 to v4: Where are they? - Marc D Anderson (Sympraxis Consulting) | @sympmarc How to build a SharePoint glossary page using view formatting and connected list Web Parts - Michel Mendes (Storm Technology Ltd) | @michelcarl Change your background for a Teams meeting on mobile - Darrell Webster (WM Reply) | @DarrellaaS  Additional resources  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-122/images/Thumb-Ep122_hu828210fe02873f448f1f8dbbefd036f3_574285_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-122/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 122"},{"categories":["Community post"],"contents":"Introduction Sometimes we have a requirement to get reports of users and their roles on the SharePoint site and we have to export to CSV/Excel format. To achieve this solution we will use PnP PowerShell. Let\u0026rsquo;s see step-by-step implementation: Implementation  Open Windows PowerShell ISE Create a new file and write a script Now we will see all the steps which we required to achieve the solution: 1. We will read the site URL from the user  2. Then we will connect to the O365 admin site and then we will connect to the site which the user has entered 3. Create a function to get user and their roles and store it in an array 4. And we will export the array to CSV format\nSo in the end, our script will be like this, $basePath = \u0026#34;E:\\Chandani\\Blogs\\UserRolesPS\\\u0026#34; $dateTime = \u0026#34;{0:MM_dd_yy}_{0:HH_mm_ss}\u0026#34; -f (Get-Date) $csvPath = $basePath + \u0026#34;\\userdetails\u0026#34; + $dateTime + \u0026#34;.csv\u0026#34; $adminSiteURL = \u0026#34;https://*****-admin.sharepoint.com/\u0026#34; #O365 admin site URL $username = #Email ID $password = \u0026#34;********\u0026#34; $secureStringPwd = $password | ConvertTo-SecureString -AsPlainText -Force $Creds = New-Object System.Management.Automation.PSCredential -ArgumentList $username, $secureStringPwd $global:userRoles = @() Function Login() { [cmdletbinding()] param([parameter(Mandatory = $true, ValueFromPipeline = $true)] $Creds) #connect to the O365 admin site Write-Host \u0026#34;Connecting to Tenant Admin Site \u0026#39;$($adminSiteURL)\u0026#39;\u0026#34; -f Yellow Connect-PnPOnline -Url $adminSiteURL -Credentials $Creds Write-Host \u0026#34;Connection Successfull\u0026#34; -f Yellow } Function StartProcessing { Login($Creds); GetUserRoles } Function GetUserRoles { try { $siteURL = Read-Host \u0026#34;Please enter site collection URL\u0026#34; Write-Host \u0026#34;Connecting to Site \u0026#39;$($siteURL)\u0026#39;\u0026#34; -f Yellow Connect-PnPOnline -Url $siteURL -Credentials $Creds $web = Get-PnPWeb -Includes RoleAssignments foreach ($roles in $web.RoleAssignments) { $member = $roles.Member $loginName = get-pnpproperty -ClientObject $member -Property LoginName $title = get-pnpproperty -ClientObject $member -Property Title $rolebindings = get-pnpproperty -ClientObject $roles -Property RoleDefinitionBindings $roleName = $($rolebindings.Name) $global:userRoles += New-Object PSObject -Property ([ordered]@{ UserName = $title LoginName = $loginName Roles = $roleName }) } } catch { Write-Host -f Red \u0026#34;Error in connecting to Site \u0026#39;$($TenantSite)\u0026#39;\u0026#34; } Write-Host \u0026#34;Exporting to CSV\u0026#34; -ForegroundColor Yellow $global:userRoles | Export-CSV $csvPath -NoTypeInformation Write-Host \u0026#34;Export to CSV successfully!\u0026#34; -ForegroundColor Yellow } StartProcessing  Output    Summary So in this article, we have seen how to get users and their roles from any SharePoint site collection and convert it in CSV format. Hope this helps! If it is helpful to you then share it with others. Sharing is caring!\n","image":"https://pnp.github.io/blog/post/how-to-get-any-site-collection-users-with-their-roles-using-pnp/images/UserRolesOP_hua9bd1fe860eee45d73743dbd227d9da9_25495_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-get-any-site-collection-users-with-their-roles-using-pnp/","tags":["SharePoint","PnP PowerShell"],"title":"How to get any site collection users with their roles using PnP PowerShell?"},{"categories":["Community post"],"contents":"Introduction  This article is written to explain OAuth 2.0 and OpenID Connect bearer tokens (JWT) and concepts relating to Microsoft Azure AD and related technologies, but can most likely be applied elsewhere too.\n Tokens are everywhere on the Internet. Even if you don\u0026rsquo;t realise it, you may have just used one on the way to read this article! You may ask \u0026ldquo;What is a token and what do I need it for?\u0026rdquo; and my answer would be \u0026ldquo;Which token?\u0026rdquo;. You see, there are different types of tokens all with their use cases.\nThis article is here to break down the different types, how and when they are used and what a token is comprised of. Hopefully this article will help you better understand tokens and apply this to getting started with other technologies such as Microsoft Graph.\nWhat is a token? A token is a list claims of something. A real world analogy could be a receipt from a purchase of goods you made. Let\u0026rsquo;s say you needed to prove that you bought to goods to return something. The receipt would most likely contain the date of purchase, the price you paid and most importantly, the goods purchased. Essentially, you are making a claim of ownership using the receipt. A token works in a similar way - it is a way to claim \u0026ldquo;I am me\u0026rdquo; or \u0026ldquo;I am allowed to do this\u0026rdquo;.\nToken types As explained in the introduction, there are many different types of tokens. This article will concentrate on the 3 most commonly used tokens in Azure AD:\nID tokens ID tokens are used by a client to provide a user\u0026rsquo;s identity. This is referred to as authentication. One example is a user entering their credentials in to a client and being given an ID token on sign-in success. By then having an ID token, the client then can access resources as the signed-in user without prompting the user.\n Important Note: ID tokens should only be used for identity purposes and NOT be used to grant access to additional resources. This will be covered next\n Access tokens Access tokens are used by a client to obtain access to additional resources e.g. a protected API such as Microsoft Graph. This is referred to as authorization. With an access token, you can have a list of permissions (scopes) granted to you against a resource. You can then use these permissions in the access token to access protected resources that you would not be able to access with an ID token.\nIf you are still confused of the difference between authentication and authorization, @LuiseFreese sums it up perfectly:    The term \u0026ldquo;auth token\u0026rdquo; is widely used can become misleading as it could be interpreted as an authentication (ID) or authorization (access) token. It is important to distinguish the difference between the two and try to avoid using the term \u0026ldquo;auth token\u0026rdquo;.\n Refresh tokens Refresh tokens can be issued with ID and access tokens. Tokens have a fixed lifetime and expire, but with a refresh token a client can obtain a token without prompting the user for input. A basic example could be you are signed in to a client and it is using an access token with Microsoft Graph. On expiry of the access token, instead of interrupting the user, a new access token is silently obtained before the old access token expires using the refresh token from the original access token.\nWhat makes up a token? Let\u0026rsquo;s look at a sample token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjFMVE16YWtpaGlSbGFfOHoyQkVKVlhlV01xbyJ9.eyJ2ZXIiOiIyLjAiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vOTEyMjA0MGQtNmM2Ny00YzViLWIxMTItMzZhMzA0YjY2ZGFkL3YyLjAiLCJzdWIiOiJBQUFBQUFBQUFBQUFBQUFBQUFBQUFJa3pxRlZyU2FTYUZIeTc4MmJidGFRIiwiYXVkIjoiNmNiMDQwMTgtYTNmNS00NmE3LWI5OTUtOTQwYzc4ZjVhZWYzIiwiZXhwIjoxNTM2MzYxNDExLCJpYXQiOjE1MzYyNzQ3MTEsIm5iZiI6MTUzNjI3NDcxMSwibmFtZSI6IkFiZSBMaW5jb2xuIiwicHJlZmVycmVkX3VzZXJuYW1lIjoiQWJlTGlAbWljcm9zb2Z0LmNvbSIsIm9pZCI6IjAwMDAwMDAwLTAwMDAtMDAwMC02NmYzLTMzMzJlY2E3ZWE4MSIsInRpZCI6IjkxMjIwNDBkLTZjNjctNGM1Yi1iMTEyLTM2YTMwNGI2NmRhZCIsIm5vbmNlIjoiMTIzNTIzIiwiYWlvIjoiRGYyVVZYTDFpeCFsTUNXTVNPSkJjRmF0emNHZnZGR2hqS3Y4cTVnMHg3MzJkUjVNQjVCaXN2R1FPN1lXQnlqZDhpUURMcSFlR2JJRGFreXA1bW5PcmNkcUhlWVNubHRlcFFtUnA2QUlaOGpZIn0.1AFWW-Ck5nROwSlltm7GzZvDwUkqvhSQpm55TQsmVo9Y59cLhRXpvB8n-55HCr9Z6G_31_UbeUkoz612I2j_Sm9FFShSDDjoaLQr54CreGIJvjtmS3EkK9a7SJBbcpL1MpUtlfygow39tFjY7EVNW9plWUvRrTgVk7lYLprvfzw-CIqw3gHC-T7IK_m_xkr08INERBtaecwhTeN4chPC4W3jdmw_lIxzC48YoQ0dB1L9-ImX98Egypfrlbm0IBL5spFzL6JDZIRRJOu8vecJvj1mq-IUhGt0MacxX8jdxYLP-KUu2d9MbNKpCKJuZ7p8gwTL5B7NlUdh_dmSviPWrw  Makes sense, right? Of course not. Azure AD ID and access tokens are also referred to as \u0026quot;JWTs\u0026quot; or JSON Web Tokens. This means that the token is formatted as a JSON object and then \u0026quot;base64Url\u0026quot; encoded and signed and with a bit of extra security (we\u0026rsquo;ll cover this soon), the end result is what we have above.\n For an introduction in to JSON, I highly recommend Bob German\u0026rsquo;s article.\n Decoding a token Taking the sample above and putting in in to jwt.ms, it is possible to decode from \u0026ldquo;base64url\u0026rdquo; back to human-readable JSON.   You will now see a JWT is made up of 3 parts:\n Header (red text) Payload (blue text) Signature (green text)  In the next two sections, we\u0026rsquo;ll cover off each part.\nPayload A payload or body is the content of the token where the claims are stored. Most tokens contain standard claims such as:\n \u0026ldquo;iss\u0026rdquo; - Identity of the service that issued the token e.g. https://login.microsoftonline.com/9122040d-6c67-4c5b-b112-36a304b66dad/v2.0 \u0026ldquo;sub\u0026rdquo; - The subject of the token e.g. the user \u0026ldquo;aud\u0026rdquo; - The audience of the token, who the token is intended for. This is usually the client and not the user \u0026ldquo;exp\u0026rdquo; - Expiry date of token in seconds since the Unix epoch \u0026ldquo;iat\u0026rdquo; - Time token was issued (Unix epoch seconds) \u0026ldquo;nbf\u0026rdquo; - Time token is valid from (Unix epoch seconds)  In addition to standard claims, there are custom claims in Azure AD tokens such as:\n \u0026ldquo;name\u0026rdquo; - Name of the subject \u0026ldquo;oid\u0026rdquo; - Azure AD object ID of the subject \u0026ldquo;tid\u0026rdquo; - Azure AD tenant ID of the subject   One great feature of jwt.ms is that you can view detailed descriptions of standard and Azure AD claims.\n Validating a token You may be thinking: I just decoded a token on a webpage - how is that secure? JWTs are typically \u0026quot;signed\u0026quot; (not encrypted) with an algorithm and private key by the issuer of the token. This doesn\u0026rsquo;t stop any of the payload or header from being decoded as the aim of a token isn\u0026rsquo;t to hide information, but provide validity to it.\n Never store secret information in a payload of a token as it can be easily decoded.\n It is up to the recipient e.g. your client to validate the token to ensure it can be trusted.\nThere is a bit more nuance to the process than outlined here, but here is the summary on how to validate a token. Within the header part of the JWT, it contains the information on how the JWT was \u0026ldquo;signed\u0026rdquo; (what algorithm and private/public key pair was used). With this information it is possible for the client (if it has access to the public key) to validate the signature part of the JWT.\nIn addition to the signature, validation should also be taken place on the payload such as expiry time, audience and issuer.\nToken usage Now we are familiar with tokens. Let\u0026rsquo;s cover how they could be used in a couple of scenarios:\nOpenID Connect OpenID Connect is a way to sign a user in to an application. It is used for authentication only and not authorization. In this example, the end-user (user-agent) requests access to an application. The application requires authentication, so the end-user is redirected to authenticate at the authorization server (I know, confusing). If successful, an ID token is returned and then validated by the application. If it passes validation, access is granted to the application.   OAuth 2.0 auth code grant Auth code grant flow is where a user is asked to sign-in at the authorization server (Azure AD). This time, however, instead of an ID token being returned, an authorization code is returned. A second request is then made to the authorization server with the authorization code, but this time an access token is returned. With the access token, a protected API can then be accessed.\n   Wrap up I hope you found this useful and understand more around what tokens are, the different types of tokens and how they are used.\n","image":"https://pnp.github.io/blog/post/introduction-to-tokens/images/01ed60e47ba84e66b302a6ef0e9035d2_hu4f37e8602df462e66c82a4363a7f45ab_78672_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/introduction-to-tokens/","tags":[],"title":"Introduction to tokens"},{"categories":["Community post"],"contents":"Introduction Currently, Microsoft released a new update to the show profile picture of the user column in the SharePoint list/library. So in this article, we will see how to use this feature in our list or library. for more details refer to What\u0026rsquo;s new for Microsoft Lists. How to use it?   Log in to any SharePoint Modern Site.\n  Move to the modern list/library\n  Create a Person column in List/Library as below,      4. Turn on to show profile photo to see profile URL.\n   5. Then create a list item and check it in the list/library view.\n   Summary In this article, we have seen how to show the profile picture in the person column. Hope this helps! Sharing is caring!\n","image":"https://pnp.github.io/blog/post/how-to-show-profile-picture-in-person-column-in-sharepoint-list/images/22_hu06418d7ab26f26809c38f922c23dd81a_47493_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-show-profile-picture-in-person-column-in-sharepoint-list/","tags":["SharePoint"],"title":"How to show profile picture in Person column in SharePoint list/library?"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework bi-weekly community call recording from April 8th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Viva, Microsoft Teams and for SharePoint Online.\nCall summary Preview the new Microsoft 365 Extensibility look book gallery \u0026ndash; cross platform extensibility. Update on upcoming SharePoint Framework v1.12.1 features, preview, beta and release. Register now for April trainings on Sharing-is-caring. Latest project updates include: PnPjs Client-Side Libraries v2.4.0 release scheduled for April 9, and please provide feedback on v3.0 Hub planning and discussion issues posted - issue 1636 by April 15th. CLI for Microsoft 365 Beta v3.9 delivered. Reusable SPFx React Controls \u0026ndash; v2.6.0 and v3.0.0 (on hold for SPFx v1.12.1) and Reusable SPFx React Property Controls \u0026ndash; v2.5.0 and v3.0.0 (on hold for SPFx v1.12.1). PnP SPFx Generator v1.16.0 (Angular 11 supported), PnP Modern Search v3.19 to be released shortly and v4.1.0 released March 20th. There were eight PnP SPFx web part samples delivered last 2 weeks. Great work! The host of this call is Patrick Rodgers (Microsoft) @mediocrebowler. Q\u0026amp;A takes place in chat throughout the call.  Register for both: community at: https://aka.ms/pnpwatchparty  RSVP to attend - 2-hour livestream \u0026ndash; Building Apps for with Microsoft Graph \u0026ndash; 2 sessions \u0026ndash; 2:00pm AEST (Asia Pacific Region) and 8:30am PDT (North America \u0026amp; Europe Regions) | https://aka.ms/learntogether-graph   Reserve date - SharePoint Monthly community call - 13th of April, 8 AM PDT | https://aka.ms/sp-call Complete the Developer Success Survey - https://aka.ms/developersuccess Join the M365 customer success platform panel - https://aka.ms/SuccessPanel Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; April 27th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; April PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; April 29th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; April 15th PnP \u0026ndash; AMA (Ask Me Anything) \u0026ndash; CLI for Microsoft 365 Edition \u0026ndash; April 13th First Time Presenter - April 21st More than Code with VSCode \u0026ndash; April 14th \u0026amp; 28th Maturity Model Practitioners \u0026ndash; April 20th PnP Office Hours \u0026ndash; 1:1 session - Register   Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Teams Meeting Questionnaire App with SharePoint Framework \u0026ndash; The Questionnaire Pre-meeting app allows Microsoft Teams meeting attendees to ask questions related to meeting before meeting starts. SPFx v1.12 provides support for Microsoft Teams meeting apps development, this web part. Operationally \u0026ndash; in calendar create meeting, then add Meeting Questionnaire tab to meeting. Questionnaire is tied to a single SharePoint list that organizes questions by Meeting ID. Sample in PnP Samples repository.\n  Building an advanced SPFx Image Editor web part - This solution contains an SPFx web part - a browser-based HTML Image Editor that uses canvas and Office UI Fabric. Use File Picker component to select image and manipulate it \u0026ndash; Resize, Crop, Flip, Rotate, Scale, Filter (Grayscale / Sepia), Redo / Undo, History of Actions. Web part created initially to pick files from a custom external data source. Sample is in Sample Gallery.\n  Viva Connections Desktop and Extensibility - Microsoft Viva is a suite of products. Viva Connections is an integrated experience with Microsoft Teams and SharePoint backed by Microsoft security, privacy, and compliance. Viva Connections is extensible \u0026ndash; use out of the box web parts or create custom web parts and extensions based on requirements. You ultimately determine what capabilities to make available in the Viva Connections UX. The journey \u0026ndash; a phased rollout of capabilities Worldwide over the next 6 months. Currently available Viva Connections Desktop is just a start on this journey.\n  SPFx extension samples: (https://aka.ms/spfx-extensions)\n  Send to Teams - João Mendes | joaojmendes  SPFx web part samples: (https://aka.ms/spfx-webparts)\n  Calendar - Mohammad Amer | @Mohammad3mer\n  Staff Directory - Ari Gunawan | @AriGunawan\n  Advanced Page Properties \u0026ndash; Mike Homol (ThreeWill) | @homol\n  Datatable - Chandani Prajapati | @Chandani_SPD\n  Company Stories - Luis Mañez | @luismanez\n  Video Banner - Mohamed Derhalli | @MohamedDerhalli\n  Document Card FAQ - Sam Collins | @SamCollins\n  As is the case this week, samples are often showcased in Demos. Thank you for your great work.\nAgenda items  Latest updates on SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash;5:41 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj1997 \u0026ndash; 7:59 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 9:19 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 10:11 PnP SPFx Generator - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 11:22 PnP Modern Search - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 12:21 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 13:09  Demos   Teams Meeting Questionnaire App with SharePoint Framework \u0026ndash; Nanddeep Nachan | nanddeepn \u0026ndash; 17:09\n  Building an advanced SPFx Image Editor web part \u0026ndash; Peter Paul Kirschner (cubido) | @petkir_at \u0026ndash; 31:05\n  Viva Connections Desktop and Extensibility \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 39:29\n  Resources Additional resources around the covered topics and links from the slides.\n  The presentation used for this community call\n  Gallery - Microsoft 365 Extensibility look book gallery   Blog - Build Microsoft Teams meeting app with SPFx\n  Repo - Questionnaire Teams Meeting App\n  Blog - Support Microsoft Teams Themes in SharePoint Framework Solutions   Documentation - Create apps for Teams meetings\n  Repo - React Image Editor   Blog Post - Install Viva Connections today   Look book - SharePoint look book   Documentation - Embedding modern SharePoint pages in Microsoft Teams as personal apps (preview)   PnP Weekly \u0026ndash; Episode 121 with guest Senior Program Manager from Microsoft Graph team Nik Charlebois | @NikCharlebois | video | podcast\n  Viva Connections https://aka.ms/VivaConnections   General resources  CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring PnP Modern Search | aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other topics mentioned  SharePoint dev documentation SharePoint dev issue list  Upcoming Calls | Recurrent Invites   SharePoint monthly call \u0026ndash; April 13th at 8:00am PDT | https://aka.ms/sp-call\n  Office add-in monthly call \u0026ndash; April 14th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; April 15th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Microsoft Identity Platform \u0026ndash; April 15th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar   Microsoft Teams monthly call \u0026ndash; April 20th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall\n  Power Apps monthly call \u0026ndash; April 21st at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall\n  SharePoint Framework call \u0026ndash; April 22nd at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  M365 General Dev call \u0026ndash; April 29th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Microsoft Graph call - May 4th at 8:00 am PDT | https://aka.ms/microsoftgraphcall\n  Adaptive Cards monthly call \u0026ndash; May 13th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-recording-8th-of-april-2021/images/8th-april-together-mode_hu038cea7c8e94b2fcaea9df71ec2e2d3c_4038580_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-recording-8th-of-april-2021/","tags":[],"title":"SharePoint Framework Community Call Recording -- 8th of April, 2021"},{"categories":["Community post"],"contents":"Which community project do you maintain?\nCLI Microsoft 365\nHow does it help people? It helps you automate tasks for your Microsoft 365 tenant and helps developers with their SPFx projects\nWhat have you been working on lately? We recently released our docker container; I\u0026rsquo;ve been working on getting that docker container running in the Azure Container Instances orchestrated from an Azure Logic App. And obviously helping out with new commands.\nWhat do you do at work? I provide our sales team with a technical conscience. Have the opportunity to collaborate with my colleagues on our larger projects. And last but not least I get to play around with the new shiny toys in an R\u0026amp;D setting to see if they would improve our development practices.\nWhy are you a part of the M365 community? I get to learn from inspiring people, learn new technologies or products that I might not know about and finally committing to something forces me to push myself outside of the comfort zone.\nWhat was you first community contribution? A minor fix for the PnP Modern Search WebParts, followed by a few Dutch translations for that same webpart.\nOne tip for someone who’d like to start contributing Anyone can make the world a better place, if you see something that you think is wrong raise an issue, if you have an opinion on something engage in the discussions and if you can just improve what is already there. It doesn\u0026rsquo;t matter if it is code or docs, complex functions or sample scripts. If you learned something, chances are high that someone else will as well!\n","image":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-albert-jan-schot/images/Appie_huf6bb73a21a8072486e0765605555147a_168408_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-albert-jan-schot/","tags":[],"title":"Microsoft 365 PnP Community Spotlight: Albert-Jan Schot"},{"categories":["Microsoft Graph community call"],"contents":"Hosted by Nik Charlebois, this month\u0026rsquo;s call covered topics including the Microsoft Graph Java SDK version 3, project Kiota and an overview of what\u0026rsquo;s new with the Microsoft Graph Toolkit.\n     Topics Microsoft Graph Java SDK version 3 Maisa Rissi from the Microsoft Graph SDK team delivers an update on Microsoft Graph Java SDK version 3 \u0026ndash; new features including a streamlined authentication with Azure Identity and improved batch support. To learn more about enhanced capabilities with the release of version 3, go to https://developer.microsoft.com/microsoft-365/blogs/microsoft-graph-java-sdk-v3-adds-enhanced-....\n Project Kiota Vincent Biret from the Microsoft Graph team introduced Project Kiota, a new project to project to build an OpenAPI based code generator for creating SDKs for HTTP APIs. To learn more about the project or to get involved, go to https://GitHub.com/Microsoft/Kiota\n What\u0026rsquo;s New with the Microsoft Graph Toolkit Elisa Yang and Amrutha Srinivasan from the Microsoft Graph Toolkit team gave an overview of new features being rolled out and worked on in the Graph toolkit, including a new electron provider. To learn more about the Microsoft Graph Toolkit, go to: https://aka.ms/MGT\n Microsoft Graph TAP program As part of our TAP program for Microsoft Graph, we are looking for additional partners and customers to join. Benefits to participation in the program include:  Monthly TAP calls with workload deep dives  Early access / notification of upcoming features  Case studies and keynote showcases  Share feedback and feature requests   Complete the submission for our review at https://aka.ms/GraphTAPForm.   Actions:  Complete the Microsoft 365 Developer Survey - https://aka.ms/developersuccess  Join the M365 customer success platform panel - Join //aka.ms/SuccessPanel and/or contact yinghao@; nikhilv@ Interested in Presenting during this call? Contact Brian.Jackett@microsoft.com, Jeremy.Thake@microsoft.com and/or Nik.Charlebois@microsoft.com Mark your calendar \u0026ndash; next Microsoft Graph community call is on May 4 at 08:00am PDT - https://aka.ms/microsoftgraphcall  Try new file components \u0026ndash; npm install @microsoft/mgt@next.file Try MSAL 2.0 Provider \u0026ndash; npm install @microsoft/mgt@next.msal2provider  Resources:   Blog post - Microsoft Graph Java SDK v3 adds enhanced capabilities with general availability | https://aka.ms/ga-javav3   Repo - Microsoft Graph SDK for Java\n  Repo \u0026ndash; Microsoft Kiota   Learn Module - Get started with Microsoft Graph Toolkit | https://aka.ms/mgt-learn\n  Repo - Microsoft Graph Toolkit v2.1 | https://aka.ms/mgt   Documentation \u0026ndash; Microsoft Graph Toolkit Overview | https://aka.ms/mgt-docs\n  Playground \u0026ndash; Microsoft Graph Toolkit Playground | https://mgt.dev\n  Documentation - Electron Provider   Electron applications using Microsoft Graph Toolkit - https://developer.microsoft.com/graph/blogs/microsoft-graph-mailbag-microsoft-graph-in-electro...\n  General Resources:  Graph TAP Program - https://aka.ms/GraphTAPForm** ** Microsoft 365 Developer Podcast http://www.m365devpodcast.com/ Microsoft Graph Mailbag - http://aka.ms/MSGraphMailbag Microsoft Q \u0026amp; A \u0026ndash; Graph - https://aka.ms/askgraph/  Stay connected  See the full blog post for this call at - http://aka.ms/m365pnp-blog Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365DevYouTube​ Blogs - https://aka.ms/M365DevBlog Recurrent Invite to this community call - https://aka.ms/microsoftgraphcall  All Microsoft 365 developer community calls \u0026ndash; https://aka.ms/M365DevCalls  ","image":"https://pnp.github.io/blog/microsoft-graph-community-call/microsoft-graph-community-call-april-6th-2021/images/TitleSlidewithPhotos_hu46d50dcfac0a2d6d1ad49f4b1e5c57f3_467288_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-graph-community-call/microsoft-graph-community-call-april-6th-2021/","tags":[],"title":"Microsoft Graph community call - April 6th, 2021"},{"categories":["Community post"],"contents":"This is already the third part of my little series on what it takes to do theMicrosoft Graph Fundamentals Learning Path on Microsoft Learn. If you missed part 1 or part 2, it would be a good idea to catch up first, as the parts build upon each other.\n After we already saw how easily we could configure a JavaScript application to retrieve Microsoft 365 data using Microsoft Graph in the last module, we will focus this time on how to access user photo information by using Microsoft Graph.\nThis module is supposed only to take 17 minutes to complete - timer set 😇.\n intro Our goal is to insert a user profile in our app that we already used in the last module. We will need to authenticate our user using Microsoft identity and receive an access token and call Microsoft Graph API with this token. - If you now wonder, \u0026lsquo;wait, but why?\u0026rsquo; it\u0026rsquo;s a good idea to reread part 2 of my summary or do the last module.\n After making us aware of WHY we should display a user picture, we learn that there are several ways to get profile picture information with Microsoft Graph, for example\n`GET https://graph.microsoft.com/v1.0/me/photo/$value` gets us the image of the signed-in user itself. I used the Graph Explorer to check that:\n     Let\u0026rsquo;s do an exercise:\nExercise - Use Microsoft Graph in your web application to retrieve a user\u0026rsquo;s profile photo build upon module 2 As we are building upon the last module, we will not need to clone the repository again. The unit quickly walks us through the four primary files for our app `index.html`, `auth.js`, `graph.js` and `ui.js` to make us aware of what they will do and repeats the steps we did in module 2 to insert tenant ID and application ID.\nNow the new part  copy - paste two code snippets into the `index.html` file to create and style a button with an image element\\ add a function to the `graph.js` file to call Microsoft Graph API and retrieve the photo of the signed-in user\\ add a function to the `ui.js` file that displays the image that we got from Graph into the image element that we created and styled in step 1\\ copy-paste a snippet to show a button that a signed-in user can click on to view their profile picture.        time to run our app Like in Module 2, open your terminal (I use the built-in PowerShell in Visual Studio Code) and type in `npm start`, which will open your browser with `localhost:8080`.\n* Select **Sign in with Microsoft**\n* Select the `show profile picture` button\n* see that profile pic? YAY - time for a happy dance- You made it!\n    conclusion As I did module 2 just a couple of days before, I did not need to reinvent the wheel, and it took me way less than 17 minutes to complete this module 3 - but I realized that I could reuse this app over and over again to whenever I need to sign-in a user or want to display information that I can get from Microsoft Graph API.\n I wrote this summary of the whole learning path because I worked with Microsoft Graph before, and although I don\u0026rsquo;t write (a lot) of code daily, these modules felt doable - even if you are not a super experienced developer. I hope there will be even more cool content!\nIf you now read this and wonder if you could build applications with Microsoft Graph as well: Yes, you can! To learn more - from developers, please join Microsoft\u0026rsquo;s Learn Together event: Building apps with Microsoft Graph %20)on April 14!\n I would love to hear your feedback! Did you start this learning path? Or completed it? What were your aha moments? Where did you struggle? What content is now needed to take you to the next level? Please comment below!\n🦒\n","image":"https://pnp.github.io/blog/post/microsoft-graph-fundamentals-learning-path-module-3/images/GraphFun-image_hu702da21198669cd7f2cd6ea2d709ef2c_85612_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/microsoft-graph-fundamentals-learning-path-module-3/","tags":["Microsoft Graph"],"title":"Microsoft Graph Fundamentals learning path -- Module 3"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by are joined Canadian based Senior Program Manager from Microsoft Graph team Nik Charlebois | @NikCharlebois. Topics discussed in this session include Nik\u0026rsquo;s career development in Canada from being a customer, then moving to Microsoft as a Premier Field Engineer and also on his recent role change on moving to the Microsoft Graph team. They focus on his current responsibilities on driving usage for Microsoft Graph data connect, which helps on accessing information in Microsoft 365. They also talk about Microsoft 365 DSC open-source work which Nik has been driving for a long time to be able to have desired state configuration for Microsoft 365 tenants.\nThey also covered 25 articles from last week published by Microsoft and Community.\nThis episode was recorded on Tuesday, April 6, 2021.\n Video at Microsoft 365 Community YouTube channel   youtube Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026quot; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nEvents  April 14, 2021 - Building Apps with Microsoft Graph May 25-27, 2021- Microsoft Build 2021  Microsoft articles  Install Viva Connections today - Mike Holste (Microsoft) | @Mike_Holste What\u0026rsquo;s New in Microsoft Teams | February and March 2021 - Microsoft What\u0026rsquo;s new for Teams phones | March 2021 - Microsoft SharePoint Roadmap Pitstop: March 2021 - Mark Kashman (Microsoft) | @mkashman Get Microsoft Graph change notifications delivered through Azure Event Hubs - Microsoft Accelerate your app adoption with MSAL for Node.js - Microsoft What\u0026rsquo;s new for admins in Microsoft 365 Apps for enterprise - Microsoft Microsoft Graph Fundamentals now on Microsoft Learn - Rabia Williams (Microsoft) | rabwill Power Platform Rewind March 2021 - April Dunnam (Microsoft) | @aprildunnam  Community articles  Microsoft Graph Fundamentals learning path \u0026ndash; Module 1 - Luise Freese | @LuiseFreese Microsoft Graph Fundamentals learning path \u0026ndash; Module 2 - Luise Freese | @LuiseFreese SPFx Image Editor Sample - Playing with Canvas - Peter Paul Kirschner (cubido) | @petkir_at CLI for Microsoft 365 v3.8 - Garry Trinder (CPS) | garrytrinder Copy a list - with list items - to another site - Will Holland (ThreeWill) | @_WCHolland Add Developer PowerShell and Developer Command Prompt for Visual Studio to Windows Terminal - Yannick Reekmans (Qubix) How to create and Install the Viva Connections application from macOS - João Ferreira (Beezy) How to create the Viva Connections desktop application using PnP PowerShell - João Ferreira (Beezy) Create Viva Connections App Using PnP PowerShell (Publish-PnPCompanyApp) - Leon Armston (Intelogy) | @LeonArmston Microsoft Teams | SharePoint Permissions: 7 Things to consider - Tracy van der Schyff | @tracyvds SharePoint Tips And Tricks - Ishai Sagi (Extelligent Design) | @ishaisagi Inside the Viva Connections desktop app, or BYO Viva app - Wictor Wilén (Avanade) | @wictor Dear Microsoft: Determining Solution Usage in Your Tenant Shouldn\u0026rsquo;t Be Like This - Marc D Anderson (Sympraxis Consulting) | @sympmarc Many running flows in Power Automate - Pieter Veenstra (HybrIT Services) | @PieterVeenstra Microsoft 365 connectivity testing tool - Robert Crane | @directorcia Microsoft Graph Essentials extension released for VSCode - Elio Struyf (Struyf Consulting) | @eliostruyf  Additional resources  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-121/images/pnp-weekly-121-nik_hue5b2c34e1914c5ce14f39146f1ad6c59_681688_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-121/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 121"},{"categories":["Community post"],"contents":"I love Microsoft Teams and I also love controlling my online appearance, but sadly both aren\u0026rsquo;t big friends when you are a Guest in another tenant. There still isn\u0026rsquo;t a good/easy way of controlling your own profile picture, which is sad because you are reduced to a not-very-personal colored circle with initials:   Fellow MVP Kazushi Kamegawa shared a method of changing your profile picture in a private forum, but it stopped working due to some UI changes in the Azure Portal. Luckily, with some more \u0026ldquo;hackery\u0026rdquo;, we can still make it work! The tl;dr version:\n Tenant switch to the tenant where you want to change your profile picture Figure out the ID of your user account in that tenant Open your user profile page in the Azure Portal using a direct link Edit the profile, upload a profile picture Wait for about a week to have the profile picture synced into Teams  Switch tenants If you found this blogpost, it\u0026rsquo;s probably safe to assume that you know how to switch tenants. For the purpose of this guide, it is VERY important you do this in your browser because otherwise authentication will get confused ;).\n Open your browser, go to https://teams.microsoft.com and sign in with your credentials Top right of the Teams UI, switch to the tenant where you want to change the profile picture of your Guest account     Get ID of user account I don\u0026rsquo;t know of any place in the UI that shows the id of your Guest account in a tenant, so I had to find a way using the Developer Tools of Chrome/Edge.\n After switching to the Guest tenant, hit the F12 key to open the Developer Tools Select the Applications tab In the left part underneath Storage and Local storage, select https://teams.microsoft.com In the right part, do a search for ts.tenantList. It should only show one result, select it. It shows all tenants you are part of as a Guest, open up the one you are currently in. You\u0026rsquo;ll need the value next to the userId property. In my screenshot, it is the GUID that starts with f35707ec-...     User profile page in Azure Portal Now that you have your user account ID, you can open up your profile page in the Azure AD of the Guest tenant!\n In the same browser window, open https://portal.azure.com Top right of the portal, make sure you are in the tenant where you are a Guest. Most probably that is not the case, so do a tenant switch in the Azure Portal too. In the same browser window, open up this link: https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/Profile/userId/\u0026lt;userId\u0026gt;. Make sure to replace \u0026lt;userId\u0026gt; with the id you copied in the previous step. You should now see your profile page in the Azure AD where you are a Guest.     Edit profile and upload picture Finally time to upload your profile picture!\n Top of the profile, select the Edit button With your profile in edit mode, you can browse for a photo on your computer and upload it to your profile!     Wait and enjoy success It takes a while for your profile picture to show in Teams, and it might even show for a short while and go away again. But if you have enough patience, after about a week or so, your profile picture should show consistently across the Teams UI both for you and for others!   Until Microsoft Teams or Microsoft 365 gives us an easier way to change our profile picture, this is the best way to do it self service. The days of the anonymous circle with initials are over, time to show your personality also in your Guest tenants!\n","image":"https://pnp.github.io/blog/post/change-your-own-profile-picture-as-a-guest-in-microsoft-teams/images/image_hu0994db7ed34f96b788ac0262c972de12_2132_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/change-your-own-profile-picture-as-a-guest-in-microsoft-teams/","tags":["Microsoft Teams","Azure AD"],"title":"Change your own profile picture as a Guest in Microsoft Teams"},{"categories":["Community post"],"contents":"Ever get annoyed with the page properties web part put out by Microsoft? If you\u0026rsquo;ve got some OCD issues (like me) then it may not take very long. At ThreeWill, we help clients with their digital workplaces and improving the way their users can obtain information and makes sense of it all. Oftentimes, the Page Properties web part can be useful here, as we very often add valuable metadata to pages in a digital workplace, which we often tie to page templates as well. News might roll up based on these page properties, which can assist in finding information in many ways. But its often handy to display this metadata in a clean way on a page as well. The standard Page Properties web part seeks to do just that. And, for the most part, it does a fine job with it. But it has a few deficiencies. The most annoying thing to me, when setting up digital workplaces was that it only supports a white background. But there are other small things, like the limitations with pretty standard field types. I like the idea of taking advantage of metadata columns for pages, but being able to use it visually is equally important. I finally decided to do something about it and build a new version of this web part. So with this in mind, let\u0026rsquo;s lay out our goals with this new web part. We will call it the Advanced Page Properties web part. Feature Goals Attempt to replicate the functionality of Page Properties with the following improvements:\n Support for theme variants Updated to standard capsule look for list options Support for image fields Support for hyperlink fields Support for currency Improved support for dates  In other words, we\u0026rsquo;re shooting for this:\n![Screen Shot 2021-04-06 at 2.40.56 PM.png](images/Screen Shot 2021-04-06 at 2.40.56 PM.png)\nProperty Pane For a part like this, it\u0026rsquo;s all about getting the property page figured out first. We want this to feel familiar too and not stray too much from the original design, unless it helps.\nLet\u0026rsquo;s start by recognizing our chief property that the web part needs: selectedProperties. This array will hold the internal names of the fields that a user has selected for display in our web part. We intend on passing this property down to our React component. Here\u0026rsquo;s a look at our property object:\nexport interface IAdvancedPagePropertiesWebPartProps { title: string; selectedProperties: string[]; } In our AdvancedPagePropertiesWebPart, we want to hold all possible properties for drop downs in a single array.\nprivate availableProperties: IPropertyPaneDropdownOption[] = []; Next, we need the following method to obtain the right types of properties for display:\nprivate async getPageProperties(): Promise\u0026lt;void\u0026gt; { Log.Write(\u0026#34;Getting Site Page fields...\u0026#34;); const list = sp.web.lists.getByTitle(\u0026#34;Site Pages\u0026#34;); const fi = await list.fields(); this.availableProperties = []; Log.Write(`${fi.length.toString()}fields retrieved!`); fi.forEach((f) =\u0026gt; { if (!f.FromBaseType \u0026amp;\u0026amp; !f.Hidden \u0026amp;\u0026amp; !f.Sealed \u0026amp;\u0026amp; f.SchemaXml.indexOf(\u0026#34;ShowInListSettings=\u0026#34;FALSE\u0026#34;\u0026#34;) === -1 \u0026amp;\u0026amp; f.TypeAsString !== \u0026#34;Boolean\u0026#34; \u0026amp;\u0026amp; f.TypeAsString !== \u0026#34;Note\u0026#34; \u0026amp;\u0026amp; f.TypeAsString !== \u0026#34;User\u0026#34;) { this.availableProperties.push({ key: f.InternalName, text: f.Title }); Log.Write(f.TypeAsString); } }); } We are using the PnP JS library for gathering the fields in the Site Pages library. Figuring out the right types of filters to gather was a bit of trial-and-error. We are excluding anything that\u0026rsquo;s inherited from a base type or is hidden in any way. We are also excluding 3 standard types so far: boolean, note and user. Note doesn\u0026rsquo;t make sense to display. Boolean can definitely work, but needs a good display convention. User was the only tricky object, which is the reason it isn\u0026rsquo;t done yet.\nWe call the above method prior to loading up the property pane.\nprotected async onPropertyPaneConfigurationStart(): Promise\u0026lt;void\u0026gt; { Log.Write(`onPropertyPaneConfigurationStart`); await this.getPageProperties(); this.context.propertyPane.refresh(); } We need handlers for adding and deleting a property and selecting a property from a dropdown. These methods make necessary changes to the selectedProperties array.\nprotected onAddButtonClick (value: any) { this.properties.selectedProperties.push(this.availableProperties[0].key.toString()); } protected onDeleteButtonClick (value: any) { Log.Write(value.toString()); var removed = this.properties.selectedProperties.splice(value, 1); Log.Write(`${removed[0]}removed.`); } protected onPropertyPaneFieldChanged(propertyPath: string, oldValue: any, newValue: any): void { if (propertyPath.indexOf(\u0026#34;selectedProperty\u0026#34;) \u0026gt;= 0) { Log.Write(\u0026#39;Selected Property identified\u0026#39;); let index: number = _.toInteger(propertyPath.replace(\u0026#34;selectedProperty\u0026#34;, \u0026#34;\u0026#34;)); this.properties.selectedProperties[index] = newValue; } } Finally, with all of our pieces in place, we can render our property pane with all it\u0026rsquo;s needed functionality.\nprotected getPropertyPaneConfiguration(): IPropertyPaneConfiguration { Log.Write(`getPropertyPaneConfiguration`); // Initialize with the Title entry  var propDrops: IPropertyPaneField\u0026lt;any\u0026gt;[] = []; propDrops.push(PropertyPaneTextField(\u0026#39;title\u0026#39;, { label: strings.TitleFieldLabel })); propDrops.push(PropertyPaneHorizontalRule()); // Determine how many page property dropdowns we currently have  this.properties.selectedProperties.forEach((prop, index) =\u0026gt; { propDrops.push(PropertyPaneDropdown(`selectedProperty${index.toString()}`, { label: strings.SelectedPropertiesFieldLabel, options: this.availableProperties, selectedKey: prop, })); // Every drop down gets its own delete button  propDrops.push(PropertyPaneButton(`deleteButton${index.toString()}`, { text: strings.PropPaneDeleteButtonText, buttonType: PropertyPaneButtonType.Command, icon: \u0026#34;RecycleBin\u0026#34;, onClick: this.onDeleteButtonClick.bind(this, index) })); propDrops.push(PropertyPaneHorizontalRule()); }); // Always have the Add button  propDrops.push(PropertyPaneButton(\u0026#39;addButton\u0026#39;, { text: strings.PropPaneAddButtonText, buttonType: PropertyPaneButtonType.Command, icon: \u0026#34;CirclePlus\u0026#34;, onClick: this.onAddButtonClick.bind(this) })); return { pages: [ { header: { description: strings.PropertyPaneDescription }, groups: [ { groupName: strings.SelectionGroupName, groupFields: propDrops } ] } ] }; } Our Component and Displaying our fields/values Our React component needs to properly react to the list of selected properties changing. It also needs to react to our theme changing. I leveraged this awesome post from Hugo Bernier for the theming, so I will not cover that in-depth, although you will see how it\u0026rsquo;s being leveraged in the code snippets below. Here are the properties we plan to start with and respond to: import { IReadonlyTheme } from \u0026#39;@microsoft/sp-component-base\u0026#39;; import { WebPartContext } from \u0026#34;@microsoft/sp-webpart-base\u0026#34;; export interface IAdvancedPagePropertiesProps { context: WebPartContext; title: string; selectedProperties: string[]; themeVariant: IReadonlyTheme | undefined; } We will track the state of our selected properties and their values with hooks. We want to trigger off of changes to our properties, so we will setup a reference to their current state. We will also establish our themeVariant and context at the start of our component.\n// Main state object for the life of this component - pagePropValues  const [pagePropValues, setPagePropValues] = useState\u0026lt;PageProperty[]\u0026gt;([]); const propsRef = useRef(props); const { semanticColors }: IReadonlyTheme = props.themeVariant; propsRef.current = props; sp.setup({ spfxContext: props.context }); So we are tracking the state of pagePropValues, which is an array of type PageProperty. What is PageProperty?\nimport { IFieldInfo } from \u0026#34;@pnp/sp/fields\u0026#34;; export interface PageProperty { info: IFieldInfo; values: any[]; } Our effect is looking to see when changes are made to the properties, then is performing our core logic to refresh properties and values.\n/** * @description Effects to fire whenever the properties change */ useEffect(() =\u0026gt; { refreshProperties(); return () =\u0026gt; { // No cleanup at this moment  }; }, [propsRef.current]); The core method is refreshProperties. It has 2 main calls it needs to make, whenever selected properties has changed: Establish any known metadata for each property that will assist in display and obtain all actual values for this property and the specific page id that we are viewing.\n/** * refreshProperties * @description Gets the actual values for any selected properties, along with critical field metadata and ultimately re-sets the pagePropValues state */ async function refreshProperties () { var newSetOfValues: PageProperty[] = []; if (props.selectedProperties !== undefined \u0026amp;\u0026amp; props.selectedProperties !== null) { Log.Write(`${props.selectedProperties.length.toString()}properties used.`); // Get the value(s) for the field from the list item itself  var allValues: any = {}; if (props.context.pageContext.listItem !== undefined \u0026amp;\u0026amp; props.context.pageContext.listItem !== null) { allValues = await sp.web.lists.getByTitle(\u0026#34;Site Pages\u0026#34;).items.getById(props.context.pageContext.listItem.id).select(...props.selectedProperties).get(); console.log(allValues); } for (let i = 0; i \u0026lt; props.selectedProperties.length; i++) { const prop = props.selectedProperties[i]; Log.Write(`Selected Property: ${prop}`); // Get field information, in case anything is needed in conjunction with value types  const field = await sp.web.lists.getByTitle(\u0026#34;Site Pages\u0026#34;).fields.getByInternalNameOrTitle(prop)(); // Establish the values array  var values: any[] = []; if (allValues.hasOwnProperty(prop)) { switch (field.TypeAsString) { case \u0026#34;TaxonomyFieldTypeMulti\u0026#34;: case \u0026#34;MultiChoice\u0026#34;: values = _.clone(allValues[prop]); break; case \u0026#34;Thumbnail\u0026#34;: values.push(JSON.parse(allValues[prop])); break; default: // Default behavior is to treat it like a string  values.push(allValues[prop]); break; } } // Push the final setup of a PageProperty object  newSetOfValues.push({ info: field, values: [...values] }); } setPagePropValues({...newSetOfValues}); } } As we loop through all of the properties that have been selected, we make calls with PnP JS to get all of the metadata per field and all of the values per field. The call to get all of the values can return with any number of data types, so we need to be prepared for that. This is why it is of type any[] to start. But this is also why we have a switch statement for certain outlier situations, where the line to set the array of any need to be done a little differently than the default. Our 3 known cases of needing to do something different are TaxonomyFieldTypeMulti, MultiChoice and Thumbnail.\nReact and Display Our function component returns the following:\nreturn ( \u0026lt;div className={`${styles.advancedPageProperties}${styles.container}`} style={{backgroundColor: semanticColors.bodyBackground, color: semanticColors.bodyText}}\u0026gt; {RenderTitle()} {RenderPageProperties()} \u0026lt;/div\u0026gt; ); RenderTitle is pretty straightforward.\n/** * RenderTitle * @description Focuses on the 1 row layer, being the Title that has been chosen for the page * @returns */ const RenderTitle = () =\u0026gt; { if (props.title !== \u0026#39;\u0026#39;) { return \u0026lt;div className={styles.title}\u0026gt;{props.title}\u0026lt;/div\u0026gt;; } else { return null; } }; RenderPageProperties is the first of a 2-dimensional loop, where we want to display a section for each page property that was select, just like the original.\n/** * RenderPageProperties * @description Focuses on the 2nd row layer, which is the property names that have been chosen to be displayed (uses Title as the display name) * @returns */ const RenderPageProperties = () =\u0026gt; { if (pagePropValues !== undefined \u0026amp;\u0026amp; pagePropValues !== null) { var retVal = _.map(pagePropValues, (prop) =\u0026gt; { return ( \u0026lt;\u0026gt; \u0026lt;div className={styles.propNameRow}\u0026gt;{prop.info.Title}\u0026lt;span style={{display: \u0026#39;none\u0026#39;}}\u0026gt; - {prop.info.TypeAsString}\u0026lt;/span\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div className={styles.propValsRow}\u0026gt; {RenderPagePropValue(prop)} \u0026lt;/div\u0026gt; \u0026lt;/\u0026gt; ); }); return retVal; } else { return \u0026lt;i\u0026gt;Nothing to display\u0026lt;/i\u0026gt;; } }; This method then calls our final display method, RenderPagePropValue, which performs our 2nd layer of array display, mapping all of the values and providing the correct display, based on the field type of the selected property. This is the heart of the display, where various type conversions and logic are done real-time as we display the values, including trying to achieve a slightly more modern SharePoint look using capsules for array labels.\n/** * RenderPagePropValue * @description Focuses on the 3rd and final row layer, which is the actual values tied to any property displayed for the page * @param prop * @returns */ const RenderPagePropValue = (prop: PageProperty) =\u0026gt; { console.log(prop); var retVal = _.map(prop.values, (val) =\u0026gt; { if (val !== null) { switch (prop.info.TypeAsString) { case \u0026#34;URL\u0026#34;: return ( \u0026lt;span className={styles.urlValue}\u0026gt;\u0026lt;a href={val.Url} target=\u0026#34;_blank\u0026#34; style={{color: semanticColors.link}}\u0026gt;{val.Description}\u0026lt;/a\u0026gt;\u0026lt;/span\u0026gt; ); case \u0026#34;Thumbnail\u0026#34;: return ( \u0026lt;span\u0026gt;\u0026lt;img className={styles.imgValue} src={val.serverRelativeUrl} /\u0026gt;\u0026lt;/span\u0026gt; ); case \u0026#34;Number\u0026#34;: return ( \u0026lt;span className={styles.plainValue}\u0026gt;{(prop.info[\u0026#34;ShowAsPercentage\u0026#34;] === true ? Number(val).toLocaleString(undefined,{style: \u0026#39;percent\u0026#39;, minimumFractionDigits:0}) : (prop.info[\u0026#34;CommaSeparator\u0026#34;] === true ? val.toLocaleString(\u0026#39;en\u0026#39;) : val.toString()))}\u0026lt;/span\u0026gt; ); case \u0026#34;Currency\u0026#34;: return ( \u0026lt;span className={styles.plainValue}\u0026gt;{(prop.info[\u0026#34;CommaSeparator\u0026#34;] === true ? new Intl.NumberFormat(\u0026#39;en-US\u0026#39;, { style: \u0026#39;currency\u0026#39;, currency: \u0026#39;USD\u0026#39; }).format(val) : Intl.NumberFormat(\u0026#39;en-US\u0026#39;, { style: \u0026#39;currency\u0026#39;, currency: \u0026#39;USD\u0026#39;, useGrouping: false }).format(val))}\u0026lt;/span\u0026gt; ); case \u0026#34;DateTime\u0026#34;: //,\u0026#34;\u0026#34;,,  switch (prop.info[\u0026#34;DateFormat\u0026#34;]) { case \u0026#34;StandardUS\u0026#34;: return ( \u0026lt;span className={styles.plainValue}\u0026gt;{new Date(val).toLocaleDateString()}\u0026lt;/span\u0026gt; ); case \u0026#34;ISO8601\u0026#34;: const d = new Date(val); return ( \u0026lt;span className={styles.plainValue}\u0026gt;{`${d.getFullYear().toString()}-${d.getMonth()}-${d.getDate()}`}\u0026lt;/span\u0026gt; ); case \u0026#34;DayOfWeek\u0026#34;: return ( \u0026lt;span className={styles.plainValue}\u0026gt;{new Date(val).toLocaleDateString(\u0026#34;en-US\u0026#34;, { weekday: \u0026#39;long\u0026#39;, month: \u0026#39;long\u0026#39;, day: \u0026#39;numeric\u0026#39;, year: \u0026#39;numeric\u0026#39; })}\u0026lt;/span\u0026gt; ); case \u0026#34;MonthSpelled\u0026#34;: return ( \u0026lt;span className={styles.plainValue}\u0026gt;{new Date(val).toLocaleDateString(\u0026#34;en-US\u0026#34;, { month: \u0026#39;long\u0026#39;, day: \u0026#39;numeric\u0026#39;, year: \u0026#39;numeric\u0026#39; })}\u0026lt;/span\u0026gt; ); default: return ( \u0026lt;span className={styles.plainValue}\u0026gt;{new Date(val).toLocaleDateString()}\u0026lt;/span\u0026gt; ); } case \u0026#34;TaxonomyFieldTypeMulti\u0026#34;: case \u0026#34;TaxonomyFieldType\u0026#34;: return ( \u0026lt;span className={styles.standardCapsule} style={{backgroundColor: semanticColors.accentButtonBackground, color: semanticColors.accentButtonText}}\u0026gt;{val.Label}\u0026lt;/span\u0026gt; ); default: return ( \u0026lt;span className={styles.standardCapsule} style={{backgroundColor: semanticColors.accentButtonBackground, color: semanticColors.accentButtonText}}\u0026gt;{val}\u0026lt;/span\u0026gt; ); } } else { return (\u0026lt;span className={styles.plainValue}\u0026gt;N/A\u0026lt;/span\u0026gt;); } }); return retVal; }; So that\u0026rsquo;s all of the necessary code. Here\u0026rsquo;s what the finished product looks like, compared to the original page properties web part.\n   This web part is now officially apart of the PnP Web Parts repository. I would love to hear about improvements you\u0026rsquo;d like to see and obviously you are more than welcome to contribute. I already have a bit of a list of things I\u0026rsquo;d love to see it do. Other ideas for improvements  Capsules to be linkable to either a search result page or a filtered view of site pages (we always get client requests for this) Support for People fields (this is the only thing lacking from the original) Support for Boolean fields (just need the right idea for proper display, really) Styling per property (i.e. colorizing per property or something to that effect)  Conclusion Hopefully, I\u0026rsquo;ve gotten you excited about Page Properties again and you\u0026rsquo;ve learned a little along the way around how the current Page Properties part might be doing what it does under the hood. Please consider contributing and feel free to reach out to me anytime. Thanks for your time!\n","image":"https://pnp.github.io/blog/post/improving-the-page-properties-web-part/images/diff-screencap_hu4a5a17a203397084643876347eba07d8_841292_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/improving-the-page-properties-web-part/","tags":["SharePoint framework (SPFx)"],"title":"Improving the Page Properties web part"},{"categories":["Community post"],"contents":"Welcome back to my series about the Microsoft Graph Fundamentals learning path on Microsoft Learn. This is part 2; if you did not read part 1 yet, this is your chance to catch up! I will stay here and wait for you with a coffee\nThis module is called Configure a JavaScript application to retrieve Microsoft 365 data using Microsoft Graph and we start with an\nintro We are still sticking to the business scenario from module 1: We want to create an app that can access email, chats, files, meetings. To authenticate users, Microsoft 365 uses Microsoft Identity, and we will need to use Microsoft Identity and Microsoft Graph to get the data we want to display in our app by using Microsoft Authentication Library(MSAL).\nWait, what? Don\u0026rsquo;t worry if you did not completely understand this. We will do this step-by-step.\nUnderstand the role of Azure Active Directory with Microsoft Graph OK, we already understood that Microsoft Graph is THE API to access data in Microsoft 365 - but of course, this data needs to be secured because we don\u0026rsquo;t want everyone to access them, right? This is what we need Microsoft Identity platform for. Microsoft identity ensures that only authorized users (delegated permissions) and apps (application permissions) access data stored in Microsoft 365. The challenge now is to link Microsoft Identity (of which we will use Azure Active Directory) to our Microsoft Graph powered app. The module explains in detail how you register your app in Azure AD and retrieve your application ID. Later on, you will add this ID into the MSAL (Microsoft Authentication Library)\u0026rsquo;s code of your app to link to your Azure Active directory.\nBut before we do this in an exercise, we will learn some theoretical stuff that we need later on.\nUnderstand Microsoft Graph permissions and consent Crucial to understand that a user or admin needs to consent before the app requests permission to access Microsoft 365 data via Graph, which is why we need to know a little bit more about:\nScopes All resources have specific scopes, like User.Read (lets you read the profile of the signed-in user) or User.Read.All lets you read the profiles of all users present in this directory. Of course, you will want only to allow scopes that are necessary for the application. You can look up scopes for each request in the official documentation and also learn about them while trying out requests in Graph Explorer.\nPermission types We can perform requests on behalf of a user (delegated permission), and we can run background processes like creating, reading, updating, or deleting events of all calendars without the requirement of a signed-in user. This means that an admin will need to pre-consent to these permissions.\nAccess tokens The unit also describes how the magic with an access token works - and uses a great comparison for that! An access token is like a movie ticket - but your application gives it to Graph to show it has permission to access the requested data in Microsoft 365. LOVE this explanation so much!\n   We use this movie ticket/access token in the Authorization header of our HTTP request.\nRegister an application with Azure Active Directory In this unit, you learn which account type you can select when registering an app in AD and that web and single-page apps will require a redirect URI so that identity platform redirects and sends security tokens after authentication.\nIn case you wondered: There is a big difference between authentication and authorization.\n   Exercise - Register an application with Azure Active Directory This exercise walks us step by step through registering an app in Azure AD- I highly recommend following this unit if you never registered an application before:\n   Let\u0026rsquo;s now\nRetrieve an access token using MSAL MSAL will make Token interaction more effortless for you because we can acquire tokens from the identity platform to authenticate users and access Microsoft Graph.\n Now that we understood the authentication flow, it\u0026rsquo;s time to get our hands dirty with\nExercise - Retrieve an access token using MSAL To get this straight - you will clone a repository either using git or downloading a zip file. After opening this in Visual Studio Code (or any other editor), you will need to replace two placeholders with tenant ID and app ID from your Azure app registration.\nThe unit walks you through some crucial parts of your app and lets you map this code to the authentication flow.\n   Congrats! - you made it!\n   Conclusion I loved this module - even if I already knew how to register applications and what Microsoft Graph does - it clarified the authentication flow once again and walked me nicely through some crucial parts of the code that I cloned from the MSLearn repository. Some basic understanding of JavaScript was beneficial to let the app run and know WHY and HOW it runs.\n","image":"https://pnp.github.io/blog/post/microsoft-graph-fundamentals-learning-path-module-2/images/GraphAccessTokenTicket_hu887c3b6edcd28d86d3efe7205e23d636_285394_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/microsoft-graph-fundamentals-learning-path-module-2/","tags":["Microsoft Graph"],"title":"Microsoft Graph Fundamentals learning path -- Module 2"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Recording of the Microsoft 365 \u0026ndash; General M365 development Special Interest Group (SIG) community call from April 1, 2021.\nCall summary Latest news from Microsoft 365 engineering and updates on open-source projects: PnP .NET libraries, PnP PowerShell, modernization tooling, on yo Teams, on Microsoft Graph Toolkit, and on Microsoft Teams Samples. An update on SharePoint Framework v1.12.1 release plan. Recent PnP project releases include - PnP .NET Libraries - PnP Framework v1.4.0 and PnP Core SDK v1.1.0 and PnP PowerShell v1.5.0 (new commandlets for Microsoft Viva Connections and Syntex). yo Teams generator-teams (apps generator) v3.0.3 GA and 3.1.0 Preview, yo teams-build-core (gulp tasks) v1.0.1 + v1.1.0 Preview, and msteams-react-base-component (React UI helpers) v3.1.0, have been released. Microsoft Graph Toolkit in the works MSAL 2.0 provider and preview of OneDrive file components. Delivered 1 new Microsoft Teams sample \u0026ndash; the first SPFx Teams Meeting sample from the community! Register now for March/April trainings on Sharing-is-caring. Register to join fellow community members to watch the 2-hour livestream - Building Apps with Microsoft Graph, on the 14th of April. The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call\nActions   Register for both:\n Register to watch the Microsoft Graph livestream with your community at: https://aka.ms/pnpwatchparty RSVP to attend the 2-hour livestream \u0026ndash; Building Apps for with Microsoft Graph. 2 sessions \u0026ndash; 2:00pm AEST (Asia Pacific Region) and 8:30am PDT (North America \u0026amp; Europe Regions) | https://aka.ms/learntogether-graph    Complete the Developer Success Survey - https://aka.ms/developersuccess\n  Join the M365 customer success platform panel - https://aka.ms/SuccessPanel\n  Register for Sharing is Caring Events:\n PnP Office Hours \u0026ndash; 1:1 session - Register Maturity Model Practitioners \u0026ndash; April 20th More than Code with VSCode \u0026ndash; April 14th \u0026amp; 28th First Time Presenter - April 7th \u0026amp; 21st PnP \u0026ndash; AMA (Ask Me Anything) \u0026ndash; CLI for Microsoft 365 Edition \u0026ndash; April 13th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; April 8th \u0026amp; 15th PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; April 29th Community Docs Session \u0026ndash; April First Time Contributor Session \u0026ndash; April 6th \u0026amp; 27th (EMEA, APAC \u0026amp; US friendly times available)    Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig\n  Call attention to your great work by using the #PnPWeekly on Twitter. **Microsoft Teams Development Samples: **(https://aka.ms/TeamsSampleBrowser)\n  Questionnaire Teams Meeting App - Nanddeep Nachan | nanddeepn, Ravi Kulkarni, and Smita Nachan   It\u0026rsquo;s together time - Spring time!\nDemos Demos delivered in this session\n  List group header formatting options \u0026ndash; new list formatting options in JSON using use groupProps for Group header and footer formatters. Conditional formatting - colors, counts, icons, for all list items now available for groups of list items. Formatting capabilities in both list and gallery views. There are new tokens for group headers and footers. Copy and paste code chunks from docs.microsoft.com into Format View pane.   Introduction to PnP Core SDK - Getting started \u0026ndash; see how PnP Core works and how a mixture of APIs \u0026ndash; Microsoft Graph GA and Beta, Rest, CSOM, Microsoft Teams, are called behind the scenes, transparent to developer. Create basic .NET console application, add NuGet, PnP.Core and/or PnP.Core.Auth and Microsoft.Injection.Hosting packages, minimum code. Add more code to get data. Create list, add items, query the data, update data and delete list.   Customer scenario \u0026ndash; Microsoft Teams integration with external systems - appreciate the power of Teams to deliver a SSO personal app experience to consume and share data and analytics from an external data catalog in a Microsoft 365 environment. This Proof-of-Concept solution includes search and message composition capabilities. App created in yoTeams v3.0, .NET back-end, Security Vault, consuming Alation (data catalog) APIs Uses Fluent and React Northstar library components for Teams.   Thank you for your work. Samples are often showcased in Demos.\nTopics Topics covered in this call\n  Updates from Microsoft 365 Engineering - Vesa Juvonen (Microsoft) | @vesajuvonen - 7:23\n  PnP.NET library updates - Bert Jansen (Microsoft) | @O365bert - 9:06\n  PnP PowerShell updates - Erwin van Hunen (Valo Intranet) | @erwinvanhunen - 11:08\n  yo Teams updates - Wictor Wilén (Avanade) @wictor - 13:07\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) | beth-panx - 14:23\n  Microsoft Teams Samples - Bob German (Microsoft) | @Bob1German - 16:17\n  Demo: List group header formatting options \u0026ndash; Naveed Ahmed (Microsoft) - 17:56\n  Demo: Introduction to PnP Core SDK - Getting started \u0026ndash; Bert Jansen (Microsoft) | @O365Bert - 25:54\n  Demo: Customer scenario - Microsoft Teams integration with external systems \u0026ndash; Kathy (Qingyu) Xu (Pfizer) and Paolo Pialorsi (PiaSys) | @PaoloPia - 43:43\n  Resources Additional resources around the covered topics and links from the slides.\n Slides used in this ​community call Documentation - Use view formatting to customize SharePoint  Repo - PnP Core SDK Library - PnP Core SDK [Documentation - Getting started with the PnP Core SDK Tech Community Blog - Getting started with PnP Core SDK  Documentation - Create your first Microsoft Teams app using the Yeoman generator Documentation - Single sign-on (SSO) support for tabs Documentation - Microsoft identity platform and OAuth 2.0 On-Behalf-Of flow Library - Fluent UI - React Northstar Templates \u0026amp; Components - Teams React UI Library PnP Weekly \u0026ndash; Episode 120 with guest MVP Paolo Pialorsi (PiaSys) | @paolopia | video | podcast Microsoft Teams Samples Gallery | aka.ms/teams-samples Viva Connections https://aka.ms/VivaConnections  General resources  SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  Microsoft Graph call - April 6th at 8:00 am PDT | https://aka.ms/microsoftgraphcall SharePoint Framework call \u0026ndash; April 8th at 7:00 am PDT | https://aka.ms/spdev-spfx-call Adaptive Cards monthly call \u0026ndash; April 8th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall SharePoint monthly call \u0026ndash; April 13th at 8:00am PDT | https://aka.ms/sp-call Office add-in monthly call \u0026ndash; April 14th at 8:00 am PDT | https://aka.ms/officeaddinscall M365 General Dev call \u0026ndash; April 15th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Identity Platform \u0026ndash; April 15th at 9:00 am PDT |https://aka.ms/IDDevCommunityCalendar  Microsoft Teams monthly call \u0026ndash; April 20th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall Power Apps monthly call \u0026ndash; April 21st at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall  General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp.\n\u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 PnP team, Microsoft - 2nd of April 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-1st-of-april/images/sig-1st-april-recording_huce66ebad3d9e99b5208cd1bca37b9d28_256468_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-1st-of-april/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 1st of April, 2021"},{"categories":["Community post"],"contents":"The Problem Have you ever heard this from a client or colleague?  \u0026ldquo;I have a list of data on this one site that I need to move to another site.\u0026rdquo;\n    Just a simple list of data that they want moved from Site A to Site B. For such a simple request, the solution has, historically, always been anything but simple. Until now! Thanks to PnP PowerShell, we can handle this request in 5 lines of PowerShell! The Setup Aside from the obvious set of SharePoint sites and a list, the only real prerequisite is to make sure you have PnP PowerShell installed. This blog is running the newer PnP.PowerShell module, which I highly recommend you jump over to. You can use the link from the introduction for the full instructions, or you can open up PowerShell and... Install-Module -Name PnP.PowerShell  The Solution In a previous blog post, we walked through the process of creating custom view formats to create a pretty nifty dashboard full of cards about members of the Fellowship of the Ring. For the sake of this example, let\u0026rsquo;s pretend I made a mistake (which never happens IRL), and I put that list on the wrong site. The solution is pretty straightforward. We\u0026rsquo;re basically going to create a PnP site template, add our list data to it, and then apply that template to our target site. Step 1 - Connect to the Source Site The first thing we\u0026rsquo;ll do is connect to the source site. Connect-PnPOnline -Url https://constoso.sharepoint.com/sites/star-wars -Interactive  Step 2 - Create the Template We actaully have two lists we need to copy. Fellowship Members is the list we care about but, since it contains a lookup column, we need to grab the Middle Earth Locales lookup list as well. Get-PnPSiteTemplate -Out Lists.xml -ListsToExtract \u0026#34;Middle Earth Locales\u0026#34;, \u0026#34;Fellowship Members\u0026#34; -Handlers Lists  Step 3 - Get the List Data We\u0026rsquo;ll use the Add-PnPDataRowToSiteTemplate cmdlet to populate our list instances with actual list item. Because we have two lists, we need to run the cmdlet twice. (So, technically, I guess we\u0026rsquo;re doing 6 lines of PowerShell. Shh!) Add-PnPDataRowsToSiteTemplate -Path Lists.xml -List \u0026#34;Middle Earth Locales\u0026#34; Add-PnPDataRowsToSiteTemplate -Path Lists.xml -List \u0026#34;Fellowship Members\u0026#34;  Step 4 - Connect to Target Site Now we connect to the target site... Connect-PnPOnline -Url https://constoso.sharepoint.com/sites/lotr -Interactive  Step 5 - Apply the Template ...and we apply our template using the Invoke-PnPSiteTemplate cmdlet. Invoke-PnPSiteTemplate -Path Lists.xml Game Over Now you\u0026rsquo;ve got your list(s), complete with data, copied over to another site. All that\u0026rsquo;s left to do is get rid of the old one, if necessary.\n   ","image":"https://pnp.github.io/blog/post/copy-a-list-with-list-items-to-another-site/images/sad-mario_hu9e9d9da167404c444c7acc469946f8d9_58371_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/copy-a-list-with-list-items-to-another-site/","tags":["SharePoint","PnP PowerShell"],"title":"Copy a list - with list items - to another site"},{"categories":["Community post"],"contents":"This blog post will summarize how I did the brand new Microsoft Graph Fundamentals Learning path. Microsoft Graph Fundamentals consists of 3 modules:\n  What is Microsoft Graph - lets you understand the Graph services and shows you how you can access user information from Graph using their learning playground called Graph Explorer. You will do a short exercise on that as well.\n  Configure a JavaScript application to retrieve Microsoft 365 data using Microsoft Graph - lets you understand how app registration works in Azure AD with permissions for Microsoft Graph powered apps and closes with two exercises using MSAL - making authentication easy.\n  Access user photo information with Microsoft Graph - in this module, you continue with the application you built-in module 2 and learn how to retrieve a user photo and do an exercise about it.\n  The whole learning path is estimated to take us ~75 minutes. Let\u0026rsquo;s see how it goes  To be very honest: I worked with Graph before - see my blog posts here: Microsoft Graph \u0026ndash; M365 Princess - but it\u0026rsquo;s the first time I do this guided learning on Microsoft Learn. I will cover module 1 in this post and continue with module 2 and 3 in the following posts.\nWhat is Microsoft Graph In super short: Microsoft Graph is a set of APIs that lets you access data in Microsoft 365 and use it for custom coded and low code applications. With this, Microsoft Graph is your key to data. Here are three tremendous advantages of it:\n across all Microsoft services, you can use one endpoint https://graph.microsoft.com - which makes development straightforward as you don\u0026rsquo;t need to learn all the different APIs for mail and calendar and files and so on documentation is fantastic, and there is a ton of learning material - like this learning path or the upcoming Learn Together- Building apps with Microsoft Graph event you can try out Graph in Graph Explorer - if you like to read more about that, read my blog post on how to get started with Graph Explorer Microsoft Graph Toolkit (you will learn more about it later) makes authentication (my personal kryptonite) easy. It also provides you with ready-to-use components and reduces the time you need to develop.  Intro For this module, you will need to be a global admin in a Microsoft 365 tenant. The easiest way to have this is to join the Microsoft 365 developer program and get a free E5 subscription. If you are not familiar with this, read Julie Turner\u0026rsquo;s article about it, at least some basic JavaScript understanding, and you should know what Azure Active Directory does. You will also need to have Node.js installed.\nThe learning module introduces you to a business scenario so that it is easier for you to imagine which kind of applications we are talking about. In this scenario, we want to bring together messages from chat, emails, attended meetings, notes, key contacts, and relevant files.\nOur application could also grow later on and bring in data from more services like Windows 10 services or Enterprise Mobility and Security Services. We will not build this in total in this learning path, but we get a perspective, what we can develop based on our organization\u0026rsquo;s needs.\nUnderstand Microsoft Graph Services At the very heart of Graph, we will find users and groups. In our application, we will need to access data from a single user\u0026rsquo;s personal scope (mail, messages, events) and a group scope (teamwork).\nThe module introduces you to some Microsoft Graph API calls and shows you how the response will look. All API responses will be in JSON format - in case you want to learn more about it, read this article by Bob German on Introduction to JSON\nThe even more exciting part is that apart from making direct API calls, Microsoft provides us with the Graph SDK (Software Developer Kit). We can use the client Graph SDK client libraries to even more easily call the Graph API.\nAccess user information from Microsoft Graph using Graph Explorer This chapter introduces you to Graph Explorer -easily access it at aka.ms/ge, try out some sample queries! My blog post on how to get started with Graph Explorer explains that in detail.\nExercise - Access user information from Microsoft Graph using Graph Explorer Time to access your own data! I strongly recommend not playing in your production tenant- especially if you do not only want to read data with GET requests but also want to write, update, or delete data with POST, PATCH, UPDATE, or DELETE requests. Get yourself a Microsoft 365 developer tenant and use this.\nThis chapter teaches you how to modify permissions in Graph explorer and how tips help you.\nYou will learn how to send a message to Teams via Graph - this is not a test; it will really appear in Teams.\nLet us 1\u0026rsquo;up this already fantastic experience. Besides using this beautiful UI, Graph Explorer provides you with:\n Access tokens used for authentication (recognizing who a user is) and authorization (looking up the correct privileges) Code snippets for three different languages so that you can copy-paste them into your applications Microsoft Graph Toolkit components - most fabulous thing ever! If you are not familiar with MGT, go check it out Adaptive cards snippets so you can quickly build UI components for your apps  You see, this is the \u0026lsquo;absolutely carefree package\u0026rsquo; provided by the Microsoft Graph team.\nConclusion on Module 1 Microsoft Graph is not only THE door opener to access all kinds of information and data across Microsoft 365 for developers and makers. They also provide us with this fantastic learning playground, aka Graph Explorer, in which we can try out, learn, explore and get snippets for all kinds of development scenarios.\nAfter introducing you to some basic concepts on Microsoft Graph, you have learned on a real-world example how to use Microsoft Graph before continuing to access data via Graph in a JavaScript application. This learning module is fantastic! If you never heard about Graph, you\u0026rsquo;ll get everything you need to start right away with it!\n   ","image":"https://pnp.github.io/blog/post/microsoft-graph-fundamentals-learning-path-module-1/images/GraphFun_huf5471dc5c3d9af843532f8ec5f9b9aa2_129401_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/microsoft-graph-fundamentals-learning-path-module-1/","tags":["Microsoft Graph"],"title":"Microsoft Graph Fundamentals learning path -- Module 1"},{"categories":["Community post"],"contents":"In the year 2020, Microsoft added a new capability to the Image Viewer Web part Resize and Crop. These are excellent features, but I want to try to give the End User more Manipulation Options. I was thinking about Flip and Rotate. First, I tried with CSS it worked, but for me, an Image-Editor should work in every combination of applied manipulations.\nSo, I started to play with canvas.\n![Screenshot 2021-03-22 at 21.42.06.png](images/Screenshot 2021-03-22 at 21.42.06.png)\nHow HTML canvas works  ![Screenshot 2021-03-22 at 20.29.22.png](images/Screenshot 2021-03-22 at 20.29.22.png) ![Screenshot 2021-03-22 at 20.29.33.png](images/Screenshot 2021-03-22 at 20.29.33.png)\n The next step is to draw an image to our HTML canvas \u0026lt;canvas id=\u0026#34;myCanvas\u0026#34; width=\u0026#34;200\u0026#34; height=\u0026#34;100\u0026#34; style=\u0026#34;border:1px solid #d3d3d3;\u0026#34;\u0026gt;\u0026lt;/canvas\u0026gt; \u0026lt;script\u0026gt; const img= new Image() img.crossOrigin = \u0026#34;Anonymous\u0026#34;; img.addEventListener(\u0026#34;load\u0026#34;, imageReceived, false); img.src=\u0026#39;https://pnp.github.io/images/hero-parker-p-800.png\u0026#39;; function imageReceived() { const c = document.getElementById(\u0026#34;myCanvas\u0026#34;); const ctx = c.getContext(\u0026#34;2d\u0026#34;); c.width = img.width; c.height = img.height; ctx.drawImage(img, 0, 0); ctx.font = \u0026#34;30px Arial\u0026#34;; ctx.strokeText(\u0026#34;Hello PnP-Community\u0026#34;,10,50); } \u0026lt;/script\u0026gt;  ![Parker draw on canvas](images/Screenshot 2021-03-23 at 14.38.34.png)\nHow to Flip such thing\nFlipY ctx.translate(c.width, 0); ctx.scale(-1, 1);  ![Flip Parker Y](images/Screenshot 2021-03-23 at 14.47.53.png)\nFlipX ctx.translate(0, c.height); ctx.scale(1, -1);  ![Flip Parker X](images/Screenshot 2021-03-23 at 14.47.07.png)\nRotate:\nTo explain rotation, I start with a straightforward Sample\nI draw only a Rectangle on a canvas\n![Screenshot 2021-03-22 at 21.48.21.png](images/Screenshot 2021-03-22 at 21.48.21.png)\n Then I rotate this thing for 20 Degree\n![Screenshot 2021-03-22 at 21.48.51.png](images/Screenshot 2021-03-22 at 21.48.51.png)\n As you can see the rotation Point is not in the Center of the Canvas. The Rotation Point is at Position 0,0\n![Screenshot 2021-03-22 at 21.54.42.png](images/Screenshot 2021-03-22 at 21.54.42.png)\nFor this sample I want to rotate the Rectangle from the center of the Black box. So we have to move center to position 0,0 than the rotation and than move it back to original position. Now it looks good, but the edges are out of the canvas. Due to the rotation, the height and width has to be changed. Welcome back to maths class.\nTo i Combine the previous knowledge with the basic Parker Sample here it is const img= new Image() img.crossOrigin = \u0026#34;Anonymous\u0026#34;; img.addEventListener(\u0026#34;load\u0026#34;, imageReceived, false); img.src=\u0026#39;https://pnp.github.io/images/hero-parker-p-800.png\u0026#39;; function imageReceived() { const c = document.getElementById(\u0026#34;myCanvas\u0026#34;); const ctx = c.getContext(\u0026#34;2d\u0026#34;); const oldwidth =c.width = img.width; const oldheight =c.height = img.height; const degree=20; const radian=degree*Math.PI/180 //Radian  const a = oldwidth * Math.abs(Math.cos(radian)); const b = oldheight * Math.abs(Math.sin(radian)); const p = oldwidth * Math.abs(Math.sin(radian)); const q = oldheight * Math.abs(Math.cos(radian)); const newwidth = a + b; const newheight = p + q; const offsetwidth = (newwidth - oldwidth) / 2; const offsetheight = (newheight - oldheight) / 2; c.width = newwidth; c.height = newheight; ctx.translate(newwidth/2,newheight/2); ctx.rotate(radian); ctx.translate(-newwidth/2,-newheight/2); ctx.fillStyle = \u0026#34;#0078d4\u0026#34;; ctx.fillRect(offsetwidth,offsetheight,oldwidth,oldheight); ctx.drawImage(img, offsetwidth, offsetheight); ctx.font = \u0026#34;30px Arial\u0026#34;; ctx.strokeText(\u0026#34;Hello PnP-Community\u0026#34;,offsetwidth+10,offsetheight+50); } ![Screenshot 2021-03-23 at 15.18.24.png](images/Screenshot 2021-03-23 at 15.18.24.png)\n Thank\u0026rsquo;s, Parker to be my Top-Model\nTry it sp-dev-fx-webparts/samples/react-image-editor at master · pnp/sp-dev-fx-webparts (github.com) ","image":"https://pnp.github.io/blog/post/spfx-image-editor-sample-playing-with-canvas/images/Screenshot%202021-03-22%20at%2021.42.06_huc05de2d6c7a7294a717415a5655b8039_683173_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/spfx-image-editor-sample-playing-with-canvas/","tags":["SharePoint framework (SPFx)"],"title":"SPFx Image Editor Sample - Playing with Canvas"},{"categories":["CLI for Microsoft 365"],"contents":"We\u0026rsquo;ve just published a new version of the CLI for Microsoft 365 with new commands for working with and managing Microsoft 365 tenants and SharePoint Framework projects on any platform.\n Manage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use.\nWhile building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects.\nNew version of CLI for Microsoft 365 \u0026ndash; v3.8 Following our monthly release cadence, we\u0026rsquo;ve released a new version of the CLI for Microsoft 365 with some new capabilities. Here are a few of the most noteworthy additions.\nChanges We\u0026rsquo;ve continued improving CLI building upon the changes we\u0026rsquo;ve introduced in the previous version.\nAdded support for configuring default command output In the previous release, we added a new command `m365 cli config set` which gave you the ability to configure the CLI to your personal preferences, so with this release we have added the ability to configure the default output for all commands.\nTo set the default output for all commands to JSON, execute:\nm365 cli config set --key output --value json To set the default output for all commands to test, execute:\n m365 cli config set --key output --value text  If there are other options that you would like to be able to configure, please let us know.\nImproved error messages In the 3.2.0 release of CLI for Microsoft 365, we replaced the request library with axios which we use to handle our requests to Microsoft 365 APIs. Unfortunately, this change also changed the way that we handled error messages and instead of replying with the error message from the API we instead returned a generic error message which was meaningless.\nSo in this release, we have reverted back to our previous behaviour and so now error messages will be returned direct from the API call.\nNew Commands  Return Policies from Azure AD  Azure Active Directory (Azure AD) uses policies to control Azure AD feature behaviors in your organization. Policies are custom rules that you can enforce on applications, service principals, groups, or on the entire organization they are assigned to.\nAdministrators currently need to call multiple endpoints in the Microsoft Graph to return a list of policies based on policy type, as there are eight types of policies that can be listed this is not a trivial task, so we have We\u0026rsquo;ve introduced a single command that can return all policies created or policies of a specific type.\nTo return all policies from Azure AD, execute:\nm365 aad policy list To return only Authorization policies, execute:\nm365 aad policy list --policyType authorization For information on the policy types that can be returned, checkout our documentation for this command.\n New script samples  CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts.\nIf you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\n Monitor and notify Microsoft 365 health status  This script helps monitor the health status of your Microsoft 365 tenant and notifies if something is not normal. It creates a SharePoint List and will add the outage content to that and will also send an email notification to a specified mailbox to notify that an ouage has occured.\n Grant API permissions to SharePoint Azure Active Directory (AAD) Application  This script helps you to automate a common manual task by granting API permissions to an Azure Active Directory application for use in a SharePoint Framework (SPFx) project.\n List all Microsoft Teams team\u0026rsquo;s Owners and Members  This script helps you to list all Teams team\u0026rsquo;s owners and members and export them into a CSV file.\n Contributors  This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order)\n  Patrick Lamber Michaël Maillot [Waldek Mastykarz] Arjun Menon Garry Trinder Joseph Velliah  Thank you all for the time you chose to spend on the CLI for Microsoft 365 and your help to advance it!\n Work in progress  Here are some things that we\u0026rsquo;re currently working on.\n More commands, what else  Microsoft 365 is evolving and new capabilities are being released every day. With CLI for Microsoft 365, we aim to help you manage your tenant on any platform in a consistent way, no matter which part of Microsoft 365 you interact with. While we keep adding new commands to CLI for Microsoft 365 each release, we still barely scratched the surface with what\u0026rsquo;s possible in Microsoft 365. In the upcoming versions of the CLI for Microsoft, you can expect us to add more commands across the different workloads in Microsoft 365.\nImproved managing SharePoint pages  Microsoft keeps investing in modern SharePoint pages continuously introducing new capabilities to let us publish rich content. We\u0026rsquo;re looking into extending our support for managing modern SharePoint pages to let you use them to their full potential.\nImproved creating Azure AD apps  Recently, we\u0026rsquo;ve introduced a command to easily create Azure AD app registrations. Because they\u0026rsquo;re backbone of every app you\u0026rsquo;d build on Microsoft 365, we think you should be able to create them as easily as possible. So with CLI for Microsoft 365, you can create a fully configured Azure AD app for the most common scenarios with just one line of code.\nIn the future versions of CLI for Microsoft 365 you can expect us extend the capabilities with additional scenarios and features supported by Azure AD.\nScript examples  In every release of the CLI for Microsoft 365, we introduce new commands for managing Microsoft 365. With over 350 commands across the different Microsoft 365 services, the CLI for Microsoft 365 has become a powerful tool, not just for managing your tenant but also for automating your daily work.\nWe\u0026rsquo;d love to show you how you can use the CLI for Microsoft 365 to build automation scripts in PowerShell Core and Bash. If you have any scripts using SPO or PnP PowerShell that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\n\u0026rsquo;ensure\u0026rsquo; commands  We\u0026rsquo;ve just shipped our first ensure command - an easy way to help you that a site with specific settings exists. If it doesn\u0026rsquo;t, CLI creates it for you, if it does, CLI ensures it has the right properties. All in one line of code. We\u0026rsquo;d love to hear from you how you like it and if it\u0026rsquo;s something you\u0026rsquo;d like us to implement for other commands as well.\n Try it today  Get the latest release of the CLI for Microsoft 365 from npm by executing:\nnpm i -g @pnp/cli-microsoft365 Alternatively, you can get the latest release from Docker by executing:\ndocker run --rm -it m365pnp/cli-microsoft365:latest If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365.\nIf you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter\n","image":"https://pnp.github.io/blog/post/spfx-image-editor-sample-playing-with-canvas/images/Screenshot%202021-03-22%20at%2021.42.06_huc05de2d6c7a7294a717415a5655b8039_683173_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-8/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 v3.8"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Italy/US-based Senior Consultant at his own company PiaSys.com, PnP Team member, and Microsoft MVP Paolo Pialorsi | @paolopia. Topics discussed in this session include the SharePoint 20th anniversary party, changes in PnP since Paolo\u0026rsquo;s last appearance as a guest on the show 2 years ago, PnP Provisioning Engine, the value of the PnP Core SDK, and the scoop on Paolo\u0026rsquo;s weekly video tutorials. A very interesting deep dive on the approach behind PnP Sites Core library (Now PnP Core SDK \u0026ndash; the Modern developer experience for building apps for SPO and Microsoft Teams in .NET with a Microsoft Graph first, falling back to SharePoint Rest APIs approach). The trio wraps up pondering the future of SPFx \u0026ndash; perhaps a new name?, server-side capabilities?, v2.00?. In the last week Microsoft and Community members delivered 22 articles and videos. This episode was recorded on Monday, March 29, 2021.\n Video at Microsoft 365 Community YouTube channel    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026rdquo;\nHere are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\\\nEvents  April 14, 2021 - Building Apps with Microsoft Graph  Microsoft articles  \u0026ldquo;SharePoint: 20 years young\u0026rdquo; Mark Kashman (Microsoft) | @mkashman Microsoft Teams Displays Update | March 2021 - Microsoft Live transcription with speaker attribution now available in Teams meetings for English (US) - Shalendra Chhabra (Microsoft) PowerPoint for the web introduces Auto Fix: A new time-saving feature to clean up your slides! - Andrea Eoanou (Microsoft) Microsoft Graph Mailbag \u0026ndash; Getting Started with the Microsoft Graph PowerShell SDK - Matt Krause (Microsoft) | @mattckrause Tips for using the shared JavaScript runtime in your Office Add-in - David Chesnut (Microsoft) | @DavidChesnut Start building apps for Teams - Waldek Mastykarz (Microsoft) | @waldekm Add Viva Connections for Microsoft Teams desktop - Microsoft SharePoint List Formatting for Grouped Views - April Dunnam (Microsoft) | @aprildunnam  Community articles  SharePoint Framework v1.12 Deprecated!!! (+ how to roll back) - Andrew Connell (Voitanos) | @andrewconnell How to determine web part size with SPFx v1.12 - Yves Habersaat (Sword Group) | @yhabersaat New VSCode extension for autocompleting your Microsoft Graph APIs - Elio Struyf (Struyf Consulting) | @eliostruyf  Fetch User Profile Properties From Site Collection And Export To CSV Using PNP PowerShell - Chandani Prajapati | @Chandani_SPD Microsoft 365 PnP Community Spotlight: Julie Turner - Luise Freese | @LuiseFreese How to get started with Graph Explorer - Luise Freese | @LuiseFreese Using the PnP Modern Search Web Parts \u0026ndash; Will Holland (ThreeWill) | @_wcholland How to use Azure CLI to Generate Documentation for Azure AD Applications? - Joseph Velliah | @josephvelliah Running the CLI for Microsoft 365 in an Azure Container Instance - Albert-Jan Schot (Portiva) | @appieschot Build Microsoft Teams meeting app with SPFx - Nanddeep Nachan | nanddeepn Episode #147​ - PnP Core SDK Authentication Models - Paolo Pialorsi (Piasys) | @PaoloPia Ignite 2021 announcements summary - Teams, Power Platform, Azure, Security and Compliance - Chris O\u0026rsquo;Brien (Content+Cloud) | @ChrisO_Brien  Additional resources  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-120/images/Thumb-Ep120_hu5582b4300f52dee95ea3c48edaf5351f_584890_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-120/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 120"},{"categories":["Microsoft Identity platform community call"],"contents":"Call summary In this session - Microsoft Identity platform for developers, Microsoft Authentication Libraries (JS, .NET, Android, iOS, Python, Java, Angular, Microsoft Identity Web), and top developer mistakes seen on the Microsoft Identity platform. Microsoft Program Manager presenters - Harish Suresh | @harish_suresh and Sahil Malik | @sahilmalik. This session was delivered and recorded on March 18, 2021. Q\u0026amp;A in chat throughout call. In-depth topic **Microsoft Identity platform - Do\u0026rsquo;s and Don\u0026rsquo;t. ** Based on extensive hands-on experience with enterprise customers - developers, ISVs, and Partners pushing the limits of the identity platform on application integration, the Microsoft presenters Harish Suresh and Sahil Malik call out the top \u0026ndash; common developer mistakes using the Microsoft Identity platform. Each problem - what is it, why it\u0026rsquo;s a concern, tips for isolating and the good-better-best recommended solutions for minimizing security issues and maximizing best usability. Common mistakes include:  Putting secrets in code Using prompt=consent Mismatched reply URLs Incorrect response handling leading to throttling failures (http 429 response) Incorrect usage of tokens (by token type) Acquire token paradigm (token acquisition mechanism) Usage of implicit, ROPC and client credential flows (application scenarios) Mobile broker/SSO behavior (approaches to performing SSO on iOS and Android).   Resources  Deck Documentation - Migrate applications to the Microsoft Authentication Library (MSAL) | https://docs.microsoft.com/azure/active-directory/develop/msal-migration Documentation - Redirect URI (reply URL) restrictions and limitations | https://docs.microsoft.com/azure/active-directory/develop/reply-url Website - OAuth 2.0 | https://oauth.net/2/ Help Options for Developers  Q \u0026amp; A \u0026ndash; Technical Q \u0026amp; A on Microsoft Identity | https://aka.ms/AzureIdentityQnA Post a query on Microsoft Q\u0026amp;A with the right tags | https://docs.microsoft.com/azure/active-directory/develop/developer-support-help-options#post-... Create a GitHub issue against the MSAL library | https://docs.microsoft.com/azure/active-directory/develop/developer-support-help-options#creat... Submit feedback for new feature requests | https://docs.microsoft.com/azure/active-directory/develop/developer-support-help-options#submi... Create an Azure Support Request | https://docs.microsoft.com/azure/active-directory/develop/developer-support-help-options#creat...    Actions  Microsoft Office 365 Developer Survey - https://aka.ms/developersuccess  Join the M365 Customer Success Platform Panel - https://aka.ms/SuccessPanel  Stay connected  Twitter https://twitter.com/microsoft365dev​ YouTube https://aka.ms/M365DevYouTube​ Blogs https://aka.ms/M365DevBlog Recurrent Invite https://aka.ms/IDDevCommunityCalendar    ","image":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-march-2021/images/ViewPorter_hu2fdfb62fe703000b4e5df28d892df97e_2914_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-identity-platform-community-call/microsoft-identity-platform-community-call-march-2021/","tags":[],"title":"Microsoft Identity Platform community call - March 2021"},{"categories":["Community post"],"contents":"Windows Terminal is great, I use it for all my command line work. It automatically detects new shells that are installed on your system, like the shell for Ubuntu or PowerShell Core 7. Unfortunately, it doesn\u0026rsquo;t detect the Developer Command Prompt and Developer PowerShell for Visual Studio. Luckily, you can add them yourself!\n   The steps are rather simple:\n Open Windows Terminal Open the Settings through the UI (see screenshot) or with Ctrl+, In the settings.json file that opens in your favorite code editor, locate the lists array inside the profiles object     {\nInside that lists array, you can add your additional profiles. In this case, for the Visual Studio command prompts, just use the following snippet:\n{ \u0026#34;name\u0026#34;: \u0026#34;Developer PowerShell for VS 2019\u0026#34;, \u0026#34;commandline\u0026#34;: \u0026#34;powershell.exe -noe -c \u0026#34;\u0026amp;{$vsPath = \u0026amp;(Join-Path ${env:ProgramFiles(x86)} \u0026#39;\\\\Microsoft Visual Studio\\\\Installer\\\\vswhere.exe\u0026#39;) -property installationpath; Import-Module (Join-Path $vsPath \u0026#39;Common7\\\\Tools\\\\Microsoft.VisualStudio.DevShell.dll\u0026#39;); Enter-VsDevShell -VsInstallPath $vsPath -SkipAutomaticLocation}\u0026#34;\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;%ProgramFiles(x86)%\\\\Microsoft Visual Studio\\\\2019\\\\Enterprise\\\\Common7\\\\IDE\\\\Assets\\\\VisualStudio.70x70.contrast-standard_scale-180.png\u0026#34; }, { \u0026#34;name\u0026#34;: \u0026#34;Developer Command Prompt for VS 2019\u0026#34;, \u0026#34;commandline\u0026#34;: \u0026#34;%comspec% /k \u0026#34;%ProgramFiles(x86)%\\\\Microsoft Visual Studio\\\\2019\\\\Enterprise\\\\Common7\\\\Tools\\\\VsDevCmd.bat\u0026#34;\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;%ProgramFiles(x86)%\\\\Microsoft Visual Studio\\\\2019\\\\Enterprise\\\\Common7\\\\IDE\\\\Assets\\\\VisualStudio.70x70.contrast-standard_scale-180.png\u0026#34; }, Save the settings.json file, and now the new options show when opening a new tab:\n   Time to do your Visual Studio command line work in the fancy new Windows Terminal!\n","image":"https://pnp.github.io/blog/post/add-developer-powershell-and-developer-command-prompt-for-visual/images/image_hu07c51a6445e2bd228255df5447c02895_144547_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/add-developer-powershell-and-developer-command-prompt-for-visual/","tags":["PowerShell"],"title":"Add Developer PowerShell and Developer Command Prompt for Visual Studio to Windows Terminal"},{"categories":["Community post"],"contents":"Microsoft Teams is a rich collaboration platform used by millions of people every day. By building custom apps for Teams you can help them work more effectively and connect them with even more knowledge and insights. Here are some resources to help you get started.\nWhat kind of apps can you build on Teams The Microsoft Teams platform offers you several extensibility points for building apps. On Teams you can build:\n tabs that allow you to expose your whole web app inside Teams to let users conveniently access it without leaving Teams bots that help people complete tasks through conversations. Bots are a great way to expose relevant features of your app and guide users through the scenario like a personal assistant messaging extensions to help people complete tasks in a visually-compelling way. Messaging extensions are similar to bots but are more visually oriented and ideal for showing rich data webhooks to bring notifications from external systems into conversations  If you have an existing web or mobile app, you can also bring information from Teams into your app.\nResources for getting started with building apps for Teams Sounds interesting? Here are some resources to help you get started building apps for Teams.\nDevelop apps for Microsoft Teams (learning path) If you learn in a structured way and like to understand the concepts before getting to code, this is the best place to start. This learning path will teach you the most important pieces of building apps for Teams. You will learn what types of apps you can build for Teams and how to use the available tools. This learning path is a part of preparation for a Microsoft 365 developer certification.\nView the learning path\nMicrosoft Teams developer documentation Another great place to start is the developer documentation. It\u0026rsquo;s a complete reference of the different development capabilities on the Teams platform. You will find in there everything from a high-level overview of what you can build on Teams to the detailed specification of the different features. What\u0026rsquo;s cool about learning from the docs is that you can choose your own path and which topics you want to learn first.\nView Microsoft Teams developer documentation\nTeams app templates One way to learn is to see what\u0026rsquo;s possible and what others build. If you want to get inspired, see what\u0026rsquo;s possible or look at how you could implement a specific scenario, you should check out the Teams app templates. There are over 40 sample ready-to-use apps including their source code for you to explore!\nTutorials for the Microsoft Teams developer platform A part of the docs are tutorials for the Teams developer platform. If you want to get hands-on, this is a great place to start. You can find tutorials showing apps built using different technologies like Node.js or C#. And don\u0026rsquo;t forget to check out code samples too!\nView tutorials for the Teams developer platform\nMicrosoft 365 PnP Community Microsoft 365 has a vibrant community that supports each other in building apps on Microsoft 365. We share our experiences through regular community calls, offer guidance, record videos, share sample apps, and build tools to speed up development. You can find everything we have to offer at aka.ms/m365pnp.\ntoday Over 250 million users work with Microsoft 365 and Microsoft Teams plays a key role in people\u0026rsquo;s workdays. By integrating your app with Teams you bring it to where people already are and make it a part of their daily routine. Give Teams a try and I\u0026rsquo;m curious to hear what you\u0026rsquo;ve built. And if you have any questions, don\u0026rsquo;t hesitate to ask them on our community forums at aka.ms/m365pnp-community.\n","image":"https://pnp.github.io/blog/post/start-building-apps-for-teams/images/teams-hero_hu311c18f2aa41bd95101f55fc569c48aa_684536_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/start-building-apps-for-teams/","tags":["Microsoft Teams"],"title":"Start building apps for Teams"},{"categories":["Community post"],"contents":"Microsoft Graph offers us a single endpoint https://graph.microsoft.com to access data in Microsoft 365, Windows 10, and Enterprise Mobility and Security and can be used by makers and developers. To get started to use the Graph API, the Graph Team offers us a very fantastic tool called Graph Explorer. What does it do? Well, it lets us explore Graph! It\u0026rsquo;s a learning playground where we can try out requests, get responses, learn about permission scopes, and more. To access Graph Explorer, visit aka.ms/ge and make yourself familiar with it:\n   Authentication You can decide if you want to sign in or if you want to try out with\nsample data provided by Microsoft. I recommend \u0026lsquo;playing\u0026rsquo; in your developer tenant; if you don\u0026rsquo;t have one, learn here how to join the Microsoft 365 developer program and get a developer tenant. The benefit of signing in with your (developer) account is, that you can execute all requests including POST and DELETE requests, which is not possible in the sample account. When you select the gear icon, you will find a shortcut to the Microsoft 365 developer program website (to get your sandbox with sample data), and you can change the theme as it suits your needs best. I like dark mode most 🖤.   Sample queries You will find sample queries below authentication - some may be disabled if you are not logged in. If you select a sample, like I did in the screenshot below, Graph Explorer will send this HTTP request to Microsoft Graph - and get my joined teams. We can see this in the request area (upper part) and the response area (lower part):   We now want to create a channel called \u0026lsquo;Microsoft Graph\u0026rsquo; in the Team \u0026lsquo;Insidious Word Domination Plans\u0026rsquo;. We first copy the ID of the Team from the response of that request and then use this ID in the next sample we try out, which is:\n   We then replace the `{teams-id}` placeholder with the copied ID value from the previous request and change the body to our needs:\n   In the **Modify permissions** tab, we can learn about - and consent to permissions needed to execute this request:\n   But the awesomeness of this tool doesn\u0026rsquo;t stop here - we get ready-to-use code snippets in different languages to insert them into our applications:\n   And for some GET requests, we even get Adaptive Cards:\n   We can also try out Microsoft Graph Toolkit components right here, although I would personally recommend doing this in the dedicated Microsoft Graph Toolkit Playground. If you are unfamiliar with Microsoft Graph Toolkit, you can read how I started to use it - in my blog series about MGT - I also recommend having a look at the beautiful [Microsoft Graph component](https://developer.microsoft.com/graph/components ) browser. Last but not least: Documentation to every sample is nicely tied in - select the pop-out icon next to the sample queries:\n   How does Graph Explorer help building apps? I use Microsoft Graph in Power Apps with custom connectors or in Power Automate and Azure Logic Apps with the HTTP action to execute actions that are not present (yet). If you never did that, but want to learn about it, here are two blog posts that will get you started:\nHow to use a custom connector\nHow to get started with HTTP requests in Power Automate To get from the rough idea to a working up, I follow this process:\n Read the docs. I mean, seriously. learn, which endpoint you will need to call, which permissions you will need. Try out in Graph Explorer; when it works, proceed to step 3, in case it doesn\u0026rsquo;t, go back to step 1 :\u0026rsquo;) Register your application in Azure AD with the permission scope that was needed for the request in Graph Explorer Try out the flow/the action of your custom connector in a basic sample flow/app. Now replace all hard-coded values like a Teams ID with Dynamic Content from within your flow You see, Graph Explorer is an amazing tool to learn and try out - it gets you a step closer to a working solution, but you do not need to worry upfront about app registration, permissions etc. It\u0026rsquo;s a cool way to do a proof of concept - trying out if you can get, post, patch, update or delete the resources you like to before you start building your app.  Feedback and what\u0026rsquo;s next? I am curious - which other tools help you developing with Microsoft Graph? Recently, Elio Struyf published a VSCode extension, that auto-completes Graph URLs for you, read more about it: vscode-msgraph-autocomplete. Also, please share below what you build with Microsoft Graph? And how you use Graph Explorer? If you like to contribute, you can check out Graph Explorer on GitHub. I am looking forward to your feedback!\n❤ Sharing is Caring ","image":"https://pnp.github.io/blog/post/how-to-get-started-with-graph-explorer/images/adi-suryanata-5T0bY-x9A8U-unsplash_hu201dad819259654be3aa7708f483ad1e_655108_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/how-to-get-started-with-graph-explorer/","tags":[],"title":"How to get started with Graph Explorer"},{"categories":["Community post"],"contents":"Which community project do you maintain? PnPjs; Microsoft 365 learning pathways\nHow does it help people? PnPjs: PnPjs is a collection of fluent libraries for consuming SharePoint, Graph, and Office 365 REST APIs in a type-safe way. You can use it within SharePoint Framework, Nodejs, or any JavaScript project.\nMicrosoft 365 Learning Pathways: Provides a framework to administer and surface in any site collection learning content from\n Microsoft content curated into playlists by Microsoft\u0026rsquo;s documentation team Custom content you build on your own in SharePoint and surface as playlists Content curated by third parties that you include as content packs  What have you been working on lately? PnPjs: Planning V3 of the library. Microsoft 365 learning pathways: We\u0026rsquo;ve recently brought the code base for the web parts to open source and a content update for Microsoft\u0026rsquo;s playlists was updated for Q1 - 2021.\nWhat do you do at work? As a member of a small consulting company my role is to try and stay on top of all things development related with Microsoft 365 platform. My favorite part of that task is working on client-side solutions but I also write a lot of integrations which utilize my C# chops.\nWhy are you a part of the M365 community? Because contributing to the community and being part of the community lifts all boats. I try to help people and people try to help me succeed with this platform and these tools which is rewarding in many ways.\nWhat was you first community contribution? In sp-dev-solutions the Multilingual Pages solution: https://github.com/pnp/sp-dev-solutions/tree/master/solutions/MultilingualPages/SPFxExt\nOne tip for someone who’d like to start contributing If you\u0026rsquo;re familiar with GitHub and working on a team, just read the contribution guidelines for the repo you want to contribute to. Should be all there is to it. If you have an idea for an enhancement submit an issue to the issues list to indicate, you\u0026rsquo;d like to work on a particular enhancement and ask for feedback that way you know that your enhancement idea is in line with how the maintainers envision the project evolving. If you\u0026rsquo;re not super familiar with GitHub and intimidated by the process, check out a Sharing is Caring event to get some guidance.​\n","image":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-julie-turner/images/julieturner_hu8484249bfe5440ba9332446004e0e3c1_26903_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-julie-turner/","tags":[],"title":"Microsoft 365 PnP Community Spotlight: Julie Turner"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from March 25th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary Welcome Luise Freese | @LuiseFreese to the Sharing is Caring team and Joel Rodrigues | @JoelFMRodrigues who is a new maintainer on the Reusable SPFx Controls team. ** Register now for April trainings on Sharing-is-caring. ** SharePoint Framework v1.12 has been deprecated due to unexpected regressions. Discussion later in the call on SharePoint Framework v1.12.1 capabilities to be released shortly. Latest project updates include: PnPjs Client-Side Libraries v2.3.0 released and please provide feedback on v3.0 Hub planning and discussion issues posted - issue #1636. CLI for Microsoft 365 GA v3.7 delivered. Reusable SPFx React Controls \u0026ndash; v2.6.0 and v3.0.0 (SPFx v1.12 support) and Reusable SPFx React Property Controls \u0026ndash; v2.5.0 and v3.0.0 (SPFx v1.12 support) delivered. Released PnP SPFx Generator v1.16.0 (Angular 11 supported), PnP Modern Search v3.18.1 released March 9th and v4.1.0 released March 20th. There were six PnP SPFx web part samples delivered last 2 weeks. Great work! The host of this call is Patrick Rodgers (Microsoft) @mediocrebowler. Q\u0026amp;A takes place in chat throughout the call. Actions  RSVP to attend - 2-hour livestream \u0026ndash; Building Apps for with Microsoft Graph \u0026ndash; 2 sessions \u0026ndash; 2:00pm AEST and 8:30am PDT | https://aka.ms/learntogether-graph Join the discussion - PnPjs v3.0 Hub planning and discussion - issue #1636. Complete the Developer Success Survey - https://aka.ms/developersuccess Join the M365 customer success platform panel - https://aka.ms/SuccessPanel Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; April 6th \u0026amp; 27th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; April PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; April 29th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; April 8th \u0026amp; 15th PnP \u0026ndash; AMA (Ask Me Anything) \u0026ndash; CLI for Microsoft 365 Edition \u0026ndash; April 13 First Time Presenter - April 7th \u0026amp; 21st More than Code with VSCode \u0026ndash; April 14th \u0026amp; 28th Maturity Model Practitioners \u0026ndash; April 20th PnP Office Hours \u0026ndash; 1:1 session - Register   Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   Building extension to save documents as PDF in tenant document libraries - updated list extension first created 2 years ago for converting one or more selected documents into pdfs using internal SharePoint REST APIs. 2 methods \u0026ndash; Export (create) and Save As (download). Saves pdfs to current library. Step through the conversion and render code - copy entire document and metadata to blob, writes data into pdf. Tenant wide extension automatically created in App Catalog.\n  Sending messages to Microsoft Teams using Microsoft Graph from SharePoint Framework solution - a simple web part for sending a message from a SharePoint page to a recipient\u0026rsquo;s mailbox or into a Microsoft Teams chat using Microsoft Graph. Conversation elements include send email, my profile information, target user\u0026rsquo;s principal name, get chat ID (determines if existing chat or creates new). Uses Graph APIs, PnP People Picker, React hooks and code snippets in Graph Explorer.\n  Update:\nLatest on SharePoint Framework \u0026ndash; SPFx v1.12.1 includes additional functionality over v1.12 for creating complex Microsoft Teams solutions including SPFx elements. In addition to corrections to SPFx v1.12, v1.12.1 includes Node v12/v14 and Gulp support, more access to page structure, embed manifest configuration option, support for Teams meeting apps and for Microsoft Teams SDK v1.8. Post v1.12.1 \u0026ndash; integration in Microsoft Viva Connections, Teams Development, Store, Communications and Quality improvements. SPFx extension samples: (https://aka.ms/spfx-extensions)\n No new or updated extensions last week  SPFx web part samples: (https://aka.ms/spfx-webparts)\n Teams Meeting Questionnaire App - Nanddeep Nachan | nanddeepn, Ravi Kulkarni | @RaviKul16a87, Smita Nachan | @SmitaNachan Questions and Answers - Bo George | @bo_george Calendar - Peter Paul Kirschner | @petkir_at Image Editor - Peter Paul Kirschner | @petkir_at Jump to Folder - Joel Rodrigues | @joelfmrodrigues Calendar - Mohammad Amer | @Mohammad3mer As is the case this week, samples are often showcased in Demos. Thank you for your great work.  Agenda items  Latest updates on SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 7:30 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj199 \u0026ndash; 8:55 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 11:03 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 12:03 PnP SPFx Generator - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 13:15 PnP Modern Search - Mikael Svenson (Microsoft) | @MikaelSvenson PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 15:24  Demos  Building extension to save documents as PDF in tenant document libraries \u0026ndash; Mikael Svenson (Microsoft) | @MikaelSvenson Sending messages to Microsoft Teams using Microsoft Graph from SharePoint Framework solution \u0026ndash; David Ramalho (Storm Technology) | @davRamalho  **Update: **\n Latest on SharePoint Framework - Pat Miller (Microsoft) | @PatMill_MSFT \u0026amp; Luca Bandinelli (Microsoft) | @BandinelliLuca- 42:48  Resources Additional resources around the covered topics and links from the slides.\n  The presentation used for this community call\n  Gallery - Microsoft 365 Extensibility look book gallery   Repo - Save and convert as PDF by PnP   Documentation - SPRenderListDataOptions options   Article - Send a message to Microsoft Teams using Microsoft Graph in SPFx   Documentation - Message Teams User   Graph Explorer \u0026ndash; https://developer.microsoft.com/graph/graph-explorer\n  Documentation - Add Viva Connections for Microsoft Teams desktop   PnP Weekly \u0026ndash; Episode 119 with guest MVP Chris O\u0026rsquo;Brien | @ChrisO_Brien | video | podcast\n  Viva Connections https://aka.ms/VivaConnections   General resources   CLI for Microsoft 365 v3\n  CodeTour\n  Sharing is Caring | aka.ms/sharing-is-caring\n  PnP Modern Search | aka.ms/pnp-search\n  M365 PnP site | aka.ms/m365pnp\n  SharePoint Starter Kit v2\n  Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series\n  New Microsoft 365 Patterns and Practices (PnP) team model with new community leads\n  Microsoft 365 Community Content (non-Dev docs)\n  PnP SPFx web part samples\n  PnP SPFx extension samples\n  GitHub PnPjs\n  Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos)\n  Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos)\n  Docs - Tutorials and training material for SharePoint Development\n  SPFX Training Package\n  SPFx Web Parts\n  SPFx Extensions\n  SPFx Library Components\n  Documentation - PnPjs v2 documentation\n  Link - Microsoft 365 developer training\n  Link - Office 365 Developer Program\n  Latest documentation on SharePoint Framework\n  Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues\n  Reusable web part property controls\n  Reusable react controls for SharePoint Framework solutions\n  Reusable controls webcast\n  Office 365 CLI\n  PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities\n  SharePoint Dev UserVoice - for new feature requests Other mentioned topics\n  SharePoint dev documentation\n  SharePoint dev issue list\n  Upcoming Calls | Recurrent Invites   M365 General Dev call \u0026ndash; April 1st at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Microsoft Graph call - April 6th at 8:00 am PDT | https://aka.ms/microsoftgraphcall\n  SharePoint Framework call \u0026ndash; April 8th at 7:00 am PDT | https://aka.ms/spdev-spfx-call\n  Adaptive Cards monthly call \u0026ndash; April 8th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall\n  SharePoint monthly call \u0026ndash; April 13th at 8:00am PDT | https://aka.ms/sp-call\n  Office add-in monthly call \u0026ndash; April 14th at 8:00 am PDT | https://aka.ms/officeaddinscall\n  M365 General Dev call \u0026ndash; April 15th at 7:00 am PDT | https://aka.ms/m365-dev-sig\n  Microsoft Identity Platform \u0026ndash; April 15th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar   Microsoft Teams monthly call \u0026ndash; April 20th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall\n  Power Apps monthly call \u0026ndash; April 21st at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n  SharePoint Framework engineering update from Microsoft\n  Talk about PnP JavaScript Core libraries\n  Office 365 CLI Updates\n  SPFx reusable controls\n  PnP SPFx Yeoman generator\n  Share code samples and best practices\n  Possible engineering asks for the field - input, feedback, and suggestions\n  Cover any open questions on the client-side development\n  Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context\n  You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!\n  \u0026ldquo;Sharing is caring\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-recording-25th-of-march-2021/images/together-pnp-25th-march-bi-weekly_hub114bae33e145feafea9ca0bab25ce3d_4457022_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-recording-25th-of-march-2021/","tags":[],"title":"SharePoint Framework Community Call Recording -- 25th of March, 2021"},{"categories":["Community post"],"contents":"Introduction  Many times we have a requirement like to get users or user profile properties from any SharePoint site collection and we need it in CSV or Excel format. so to achieve this solution we will use PnP PowerShell. Let\u0026rsquo;s see step-by-step implementation. Prerequisites If we are using Window 10 or we have PowerShellGet then we can run the below commands to install PnP PowerShell and AzureAD Modules\\\nInstall PnP PowerShell Module, Install-Module SharePointPnPPowerShellOnline -Scope CurrentUser  Implementation   Open Windows PowerShell ISE Create a new file and write a script Now we will see all the steps which we required to achieve the solution:  1. We will read the site URL from the user 2. then we will connect to the O365 admin site and then we will connect to the site which the user has entered 3. Create a function to bind a CSV 4. Create a function to get user profile properties by email 5. In the main function we will write a logic to get web and users of site collection URL and then get all the properties and bind it to CSV So at the end, our script will be like this, $basePath = #base path where you want to save CSV file(\u0026#34;D:\\Chandani\\...\\\u0026#34;) $dateTime = \u0026#34;{0:MM_dd_yy}_{0:HH_mm_ss}\u0026#34; -f (Get-Date) $csvPath = $basePath + \u0026#34;\\userdetails\u0026#34; + $dateTime + \u0026#34;.csv\u0026#34; $adminSiteURL = \u0026#34;https://****-admin.sharepoint.com/\u0026#34; #O365 admin site URL $username = #user email id $password = \u0026#34;********\u0026#34; $secureStringPwd = $password | ConvertTo-SecureString -AsPlainText -Force $Creds = New-Object System.Management.Automation.PSCredential -ArgumentList $username, $secureStringPwd $global:userDetails = @() $index = 1; $userInfo; Function Login() { [cmdletbinding()] param([parameter(Mandatory = $true, ValueFromPipeline = $true)] $Creds) #connect to O365 admin site Write-Host \u0026#34;Connecting to Tenant Admin Site \u0026#39;$($adminSiteURL)\u0026#39;\u0026#34; -f Yellow | Out-File $LogFile -Append -Force Connect-PnPOnline -Url $adminSiteURL -Credentials $Creds Write-Host \u0026#34;Connection Successfull\u0026#34; -f Yellow | Out-File $LogFile -Append -Force } Function StartProcessing { Login($Creds); ConnectionToSite($Creds) } Function ConnectionToSite() { $siteURL = Read-Host \u0026#34;Please enter site collcetion URL\u0026#34; try { Write-Host \u0026#34;Connecting to Site \u0026#39;$($siteURL)\u0026#39;\u0026#34; -f Yellow $SCWeb = Get-PnPWeb -Identity \u0026#34;\u0026#34; $getusers = Get-PnPUser -Web $SCWeb ForEach ($user in $getusers) { $email = $user.Email If ($email) { $userInfo = GetUserProfileProperties $email #creating object fro CSV $global:userDetails += New-Object PSObject -Property ([ordered]@{ Id = $index GUID = $userInfo.\u0026#39;UserProfile_GUID\u0026#39; FirstName = $userInfo.FirstName LastName = $userInfo.LastName WorkEmail = $userInfo.WorkEmail PictureURL = $userInfo.PictureURL Department = $userInfo.Department PreferredName = $userInfo.PreferredName }) $index++ } } } catch { Write-Host -f Red \u0026#34;Error in connecting to Site \u0026#39;$($TenantSite)\u0026#39;\u0026#34; } BindingtoCSV($global:userDetails) } Function BindingtoCSV { [cmdletbinding()] param([parameter(Mandatory = $true, ValueFromPipeline = $true)] $Global) Write-Host -f Yellow \u0026#34;Exporting to CSV...\u0026#34; $userDetails | Export-Csv $csvPath -NoTypeInformation -Append Write-Host -f Yellow \u0026#34;Exported Successfully...\u0026#34; } Function GetUserProfileProperties($username) { $Properties = Get-PnPUserProfileProperty -Account $username $Properties = $Properties.UserProfileProperties If ($Properties) { $Properties = $Properties } else { $Properties = $null } return $Properties } StartProcessing  In the above script do the following changes:  Change O365 Site URL, base path, username, and password To check all the properties you can print $userInfo and then change $global:userDetails object as per your requirement at where I have used $userInfo.FirstName,LastName etc. Then run the script with the F5 command.   Output    After this check the CSV file at your base location. Summary  So in this article, we have seen how to get user and user profile properties and as well as how to export them to CSV. Hope this helps! If it is helpful to you then share it with others. Sharing is caring!\n","image":"https://pnp.github.io/blog/post/fetch-user-profile-properties-from-site-collection-and-export-to/images/OP_hu35f5302f6d3cd674dbfe251994d9cd35_74616_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/fetch-user-profile-properties-from-site-collection-and-export-to/","tags":["PnP PowerShell","SharePoint"],"title":"Fetch User Profile Properties From Site Collection And Export To CSV Using PNP PowerShell"},{"categories":["Community post"],"contents":"Context You might know that this new SPFx v1.12 feature has an old story behind it. In the past, developers were getting web part\u0026rsquo;s width by unsupported ways like DOM classes or attributes. It was working pretty well until Microsoft decided to update SharePoint Online DOM in October last year and broke a lot of custom developments. As Microsoft says, DOM is not and API and you should avoid taking any dependencies in it but until now, nothing was officially released to solve this issue correctly. It\u0026rsquo;s now done, SPFx v1.12 adds a width property and an onAfterResize() event to determine the width of your web part. Note: In this article, I\u0026rsquo;m using a web part project with SPFx v.1.12 and React framework.\nDetermine web part size In your web part TS file, you can add the onAfterResize() method to get notified when the web part is resized (for example when you resize your window):\nprotected onAfterResize(newWidth: number) { console.log(\u0026#34;New web part width: \u0026#34; + newWidth); } This new method is documented as below:\nThis API is invoked when the web part container dom element width is changed, e.g. when the browser window is resized and when the property pane is toggled open/closed. @param newWidth — Width (in pixels) of the container for the web part after the resize event. @remarks Web parts should utilize this method to perform operations such as potentially re-rendering components based on the new available width for the web part. @virtual Then you can use the width property as a prop for your React component:\npublic render(): void { const element: React.ReactElement\u0026lt;IDemoWebPartWidthProps\u0026gt; = React.createElement( DemoWebPartWidth, { description: this.properties.description, webPartWidth: this.width } ); ReactDom.render(element, this.domElement); } This new property is documented as below:\nThis propery returns the width of the container for the web part. @returns — Width (in pixels) of the container for the web part. @remarks Web parts should utilize this property to perform operations such as any conditional styling of components based on the initial available width for the web part. @internalRemarks This function retrieves web part\u0026#39;s key to get stored section width from cache. If cache key does not exist in cache it will calculate and store the width before returning. In the case where getWebPartCacheKey is not passed down, it will go through the original workflow to caculate web part width. And you can display it in your component render() method:\n\u0026lt;p className={ styles.description }\u0026gt;Web part width = { this.props.webPartWidth }\u0026lt;/p\u0026gt; Final result of this demo web part:\n   This a great add to SPFx and allows developers to re-render components when the web part is resized Happy coding everyone!\nResources Determine the rendered web part width | Microsoft Docs\nSharePoint Framework enterprise guidance | Microsoft Docs\n","image":"https://pnp.github.io/blog/post/how-to-determine-web-part-size-with-spfx-v1-12/images/web-part-width_hu588686e10013c99316453f27171eb50a_33061_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-determine-web-part-size-with-spfx-v1-12/","tags":["SharePoint framework (SPFx)"],"title":"How to determine web part size with SPFx v1.12"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by London-based Products and Services Director at Content+Cloud and Microsoft MVP Chris O\u0026rsquo;Brien | @ChrisO_Brien. Topics discussed in this session include: Organizational coder vs influencer, work-life balance and prioritization, the importance of sustained focus, Partner opportunity in the cloud and success tied to being agile and innovating rapidly \u0026ndash; attributes in a successful organization\u0026rsquo;s DNA! Finally, AI and Automation \u0026ndash; options and Synapse. Microsoft and the Community delivered 18 articles and videos this last week. This session was recorded on Monday, March 22, 2021.\nThis episode was recorded on Monday, March 22, 2021.\n Video at Microsoft 365 Community YouTube channel    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026rdquo; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Announcing SharePoint Framework 1.12 \u0026ndash; Extending more of Microsoft Teams - SharePoint team | @SharePoint Get started with Microsoft Graph Toolkit at Microsoft Learn \u0026ndash; Ayca Bas (Microsoft) | @aycabs Find, do, and discover with Cortana \u0026amp; Microsoft 365 \u0026ndash; Bill Baer (Microsoft) | @williambaer Office Add-in Developer Community (PnP) \u0026ndash; February 2021 update \u0026ndash; David Chesnut (Microsoft) | @davidchesnut CLI for Microsoft 365 v3.7 \u0026ndash; Waldek Mastykarz (Microsoft) | @waldekm  Community articles  Getting started with SharePoint\u0026rsquo;s custom view formatting \u0026ndash; Will Holland (ThreeWill) | @_wcholland Break And Change List Item Permission Using PnP JS In SPFx - Chandani Prajapati | @Chandani_SPD Microsoft 365 PnP Community Spotlight: David Warner \u0026ndash; Luise Freese | @LuiseFreese Build Microsoft Teams meeting app with SPFx - Nanddeep Nachan | nanddeepn, Ravi Kulkarni, Smita Nachan JMESPath queries for CLI for Microsoft 365 - Albert-Jan Schot (Portiva) | @appieschot Me Experience as a bot in Microsoft Teams using Bot Composer - Rabia Williams (Microsoft) | rabwill Office 365 Management API (M365 Audit Logs) with Logic Apps \u0026amp; Power Automate - including Pagination \u0026ndash; Leon Armston (Intelogy) | @LeonArmston Teams App Deployment to Azure Web App - Aakash Bhardwaj (HCL Technologies) | @aakash_316 IDX12729: Unable to decode the header \u0026lsquo;[PII]\u0026rsquo; is hidden\u0026rsquo; - Joel Rodrigues (Storm Technology Ltd) | @JoelFMRodrigues Manage sites content types with Microsoft Graph (beta) - Yves Habersaat (Sword Group) | @yhabersaat Episode #146​ - Creating a Bot with Yo Teams v. 3.x - Paolo Pialorsi (PiaSys.com) | @paolopia SPFx Anatomy of a Webpart Project | Episode #03 | SharePoint Framework for Beginners (SPFx) 2021 - Rob Pearmain (yorcloud) | @robertpearmain SharePoint\u0026rsquo;s 20th birthday party \u0026ndash; European Collaboration Summit  Additional resources  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-119/images/Thumb-Ep119_hufc6fe3af67ce65d74fa4e1ca36e5fc5e_517482_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-119/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 119"},{"categories":["Community post"],"contents":"Introduction In a previous blog post, the basic building blocks of custom column formatting were introduced to us. From that, we learned how to customize our columns to create some interesting visuals.   Things look better, but each column is still a separate component. What if we want to tie them all together into a more cohesive presentation? The good news is that we can! Just like we customized our columns, we can also customize SharePoint list views! That will allow us to go from a traditional table/column/cell view, to something that looks \u0026lsquo;put together\u0026rsquo;, like so...\n   Preparing for your journey Before you get going, there are a few things that will help prepare you for the trek ahead. If you haven\u0026rsquo;t, I would highly recommend reading the first blog post in this series: Getting started with SharePoint\u0026rsquo;s custom column formatting. You can also refer to the official documentation for view formatting to help fill in any gaps not covered here. I should also warn you that your HTML and CSS skills are going to come into play a lot more here, as you\u0026rsquo;ll be trying to work with multiple elements to position them correctly. If you\u0026rsquo;re not an expert, that\u0026rsquo;s perfectly okay - I\u0026rsquo;m not one either - you\u0026rsquo;ll just need an extra dose of patience. Trial and error will get you there, eventually. I\u0026rsquo;m not going to dwell on the particular CSS used in these examples except in cases where it\u0026rsquo;s a pattern that could be applied to other use cases. And that\u0026rsquo;s pretty much it. There\u0026rsquo;s some new stuff we\u0026rsquo;ll learn about that only applies to View formatting, but everything we learned from the previous blog post will apply here as well.\nChoose your own adventure In case you weren\u0026rsquo;t aware, views in a Modern SharePoint list come in a few flavors.\n   Most of us are probably already very familiar with the List layout; It\u0026rsquo;s what we\u0026rsquo;ve been used to for decades. Compact List is the same as List...just smaller. The Tiles view, frequently referred to as the Gallery view, is somewhat newer. As you may expect, it will display your list items as cards/tiles in a classic grid view. There\u0026rsquo;s also a Calendar view/layout that was recently added, but is not currently customizable. When it comes to custom formatting, we can customize both the List and Gallery layouts. They do need to be customized separately, as their schemas are slightly different, but they\u0026rsquo;re close enough that you can usually take your JSON from one and apply it to the other with minimal changes. For our journey here, we\u0026rsquo;re going to start with a List view and then use it to create a Tile view.\nI wisely started with a map Before we get into defining our custom view formatting, it may be helpful to spend some time up front thinking about how we\u0026rsquo;ll structure our view. The more you want to transform your view, the more important it will be to plan things out in advance. This is where some understanding of HTML will come in handy. To help guide myself, I created the following image to try and visualize how my various DIVs and other elements would be laid out.   This isn\u0026rsquo;t necessary, obviously, but I personally find it helpful to have a blueprint in front of me (even if it\u0026rsquo;s only a mental one).\nFormatting List views If you recall from the column formatting article, each custom format followed the same basic structure: A $schema definition along with a parent HTML element and optional attributes, styles and children.\n{ \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;Game\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;font-size\u0026#34;: \u0026#34;48px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;red\u0026#34; }, \u0026#34;children: [] } List views aren\u0026rsquo;t that much different.\n{ \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/row-formatting.schema.json\u0026#34;, \u0026#34;hideSelection\u0026#34;: true, \u0026#34;hideColumnHeader\u0026#34;: true, \u0026#34;rowFormatter\u0026#34;: {} } We still have our $schema property, but it\u0026rsquo;s important to notice that it\u0026rsquo;s pointing to a different schema definition. We also have some new optional properties: hideSelection \u0026amp; hideColumnHeader. As you may suspect, hideSelection will do away with the ability to select a particular list item while hideColumnHeader will do away with the the column headers normally present on a list. What\u0026rsquo;s a little different here is that we\u0026rsquo;re missing our parent element. Instead, we have this rowFormatter property. The reason for this is that we can choose between using this and an additionalRowClass property. If you choose the latter, you\u0026rsquo;re limited to applying CSS classes to the entire row, similar to what you can do with the out-of-box \u0026quot;Conditional formatting\u0026quot;. If all you want to do is make your row a different color, you\u0026rsquo;re probably better off using the design mode tools, but if you\u0026rsquo;re interested in learning more about the additionalRowClass property, it is covered well enough in the official documentation. We, however, will not be satisfied with applying some simplistic styling. NO! We are bound for greater rowFormatter glory!\n NOTE: There are other properties available that are not covered in this blog, most notably the groupProps property. This allows you to customize the grouping header that appears when items are grouped together by some column. There are also footerFormatter and hideFooter properties that affect the \u0026quot;List Footer\u0026quot; that appears if you\u0026rsquo;re displaying item totals.\n One container to rule them all The rowFormatter property is simply an object that wraps all of the HTML elements we\u0026rsquo;re going to create our view. If, for some reason, we wanted every row in our list to just simply display the basic column formatting shown in the previous section, we\u0026rsquo;d end up with the following JSON definition.\n{ \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/row-formatting.schema.json\u0026#34;, \u0026#34;hideSelection\u0026#34;: true, \u0026#34;hideColumnHeader\u0026#34;: true, \u0026#34;rowFormatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;Game\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;font-size\u0026#34;: \u0026#34;48px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;red\u0026#34; }, \u0026#34;children: [] } } That\u0026rsquo;s probably not the greatest idea, but it does illustrate the point. Once we make it inside of the rowFormatter object, it\u0026rsquo;s almost business as usual. There\u0026rsquo;s one more difference we need to understand...how we reference columns.\nHow to reference fields When we were dealing with formatting individual columns, we always used the built-in variable @currentField, but what about when we\u0026rsquo;re dealing with more than one view? @currentField is still there, but it holds a slightly different meaning in this context. It will always be a reference to the standard Title field.   Instead of using @currentField to reference a column, we\u0026rsquo;ll need to use a slightly different format: [$InternalColumnName]. In our list, we have a handful of columns including a Member lookup column. If we want to reference that field, we\u0026rsquo;d use [$Member]. Even if we change the display name from \u0026quot;Member\u0026quot; to \u0026quot;Hero\u0026quot;, our variable would still be [$Member]. And, since Member is a lookup column, if we want to show the display name of the user, we need to use the title property. We\u0026rsquo;d do that in the following way [$Member.title].\nThe World Is Not In Your Books And Maps. It Is Out There Alright. Enough with the lessons, it\u0026rsquo;s time to get started. We can use the \u0026quot;map\u0026quot; we created earlier and turn it into a rough skeleton. Each layer in that blowout represent a parent/child relationship. So, by looking at our map...   We come up with this.\n{ \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/row-formatting.schema.json\u0026#34;, \u0026#34;hideColumnHeader\u0026#34;: true, \u0026#34;hideSelection\u0026#34;: true, \u0026#34;rowFormatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Parent Container\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Background Image\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Column Container\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Member/Role DIV\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Large Member profile picture\u0026#34; } }, { \u0026#34;columnFormatterReference\u0026#34;: \u0026#34;[$Title]\u0026#34; } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Text DIV\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Member Name row/div\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Age row/div\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;From row/div\u0026#34; } } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Race/Weapons DIV/Column\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Race icon DIV/Row\u0026#34; }, \u0026#34;children\u0026#34;: [] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Weapon icons DIV/Row\u0026#34; }, \u0026#34;children\u0026#34;: [] } ] } ] }] }] } } That\u0026rsquo;s the basic layout of our custom view, simply a series of parent and child divs. We\u0026rsquo;ll start filling this skeleton out with content shortly, but there are a couple of things to point out already. First, there are several examples of this \u0026quot;attributes\u0026quot;: { \u0026quot;title\u0026quot;: \u0026quot;\u0026lt;TEXT\u0026gt;\u0026quot; } pattern. We can use this as a means of commenting about the purpose of the element, since comments aren\u0026rsquo;t allowed in valid JSON and would break our view. Again, this isn\u0026rsquo;t required and adds absolutely no value to the view itself. It does, however, help keep us (and any future adventurer) oriented as to where we are in our JSON.\n NOTE: Using the title attribute will cause whatever you specify to be displayed as a tooltip when a user hovers over the element. You can remove your titles after you done, if that bothers you. Otherwise, just be aware that users may see your witty comments.\n Also, in the \u0026ldquo;Member/Role DIV\u0026rdquo; children, the second child looks a little peculiar.\n{ \u0026quot;columnFormatterReference\u0026quot;: \u0026quot;[$Title]\u0026quot; }  This columnFormatterReference property is a nifty shortcut that tells the view formatter to display the referenced field (Title, in this case) as it normally would, including any custom column formatting that may have been configured. This is a great opportunity for some reusability, especially if you want the column to show exactly the same way on every view. If you take our skeleton and put it into SharePoint, there\u0026rsquo;s not going to be much to look at. So let\u0026rsquo;s fix that.\nPutting some meat on the bone Now that we\u0026rsquo;ve got our skeleton all rigged up, it\u0026rsquo;s time to fill it out some. It\u0026rsquo;s certainly a little short and skinny, so let\u0026rsquo;s start by defining some CSS on our parent div. We know we want a border around the whole thing, as well as a particular font style and size, so we can apply those things at the top level.\n\u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;relative\u0026#34;, \u0026#34;border\u0026#34;: \u0026#34;5px solid black\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;10px\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;600px\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;175px\u0026#34;, \u0026#34;font-family\u0026#34;: \u0026#34;Luminari, Papyrus, Brush Script MT\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;24px\u0026#34; } We\u0026rsquo;re also specifying a position value of \u0026quot;relative\u0026quot;, which tells the browser to display that DIV relative to it\u0026rsquo;s parent container. In this case, that parent container will be the row in the list. It won\u0026rsquo;t have any noticeable effect here, but will help us later. Let\u0026rsquo;s also go ahead and setup our second layer too, our background image. Normally, we\u0026rsquo;d just use the css property background-image and point it to a URL. Unfortunately, we can\u0026rsquo;t do that here because the ( character is prohibited in most use cases. So, instead, we have to use an img element and size it appropriately.\n{ \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;z-index\u0026#34;: \u0026#34;-3\u0026#34;, \u0026#34;opacity\u0026#34;: \u0026#34;.5\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Background Image\u0026#34;, \u0026#34;src\u0026#34;: \u0026#34;=@currentWeb + \u0026#39;/SiteAssets/MiddleEarthLocales/\u0026#39; + [$From.lookupValue] + \u0026#39;.jpg\u0026#39;\u0026#34; }, \u0026#34;children\u0026#34;: [...] } We\u0026rsquo;ve added the src attribute, which should look mostly familiar. Notice, though, that we\u0026rsquo;re referencing the [$From] variable. We\u0026rsquo;re also setting the width and height to be 100% of the parent so the image fills the space and we\u0026rsquo;re setting the opacity to half so that the image is a little on the transparent side (this will help the text and images we lay on top of it stand out more). Finally, we\u0026rsquo;re setting this z-index property to a negative value. Typically, HTML will render any content inside of the div on top of the div. Think of it like a stack of plates. That last thing you put on the stack is the most visible. We can use the z-index property to affect that, and by setting to a negative value here, we\u0026rsquo;re ensuring that out content will be rendered behind our parent div. Without this, the background image would cover up our border.\nStylin\u0026rsquo; and Profilin\u0026rsquo; Now that we\u0026rsquo;ve got our first two layers done, let\u0026rsquo;s take a look at our third layer. If we refer back to our skeleton, we can see that our img element has a single child titled \u0026ldquo;Column Container\u0026rdquo;, and that child has three children of its own. What we want to happen is to have a three-column layout and to do that, we\u0026rsquo;re going to style this \u0026quot;column container\u0026quot; like so.\n\u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34; } We have to specify the width and height here as being \u0026ldquo;100%\u0026rdquo; because, without it, the DIV will only grow as large as the content and we want to ensure that it stays as large as it can. We\u0026rsquo;re also specifying a different position value here - absolute - which basically tells the browser to render our DIV at a specific position. In this case, we\u0026rsquo;re letting it default the starting point, which is the \u0026quot;top left corner\u0026quot; of the first ancestor element with a \u0026quot;position\u0026quot; attribute on it (in this case, our parent div, which we said was relative positioned). We\u0026rsquo;re also specifying a display property with a value of flex. This creates what\u0026rsquo;s known as \u0026quot;Flexbox\u0026quot; which will help us deal with the concept of turning our child DIVs into \u0026quot;Columns\u0026quot; and \u0026quot;Rows\u0026quot;. Now that we\u0026rsquo;ve got our container, let\u0026rsquo;s work on the next three children, which will represent our three columns.\nFirst column We\u0026rsquo;ll just div right into the definition for our first column, which is a simple parent div to hold our image and role icon.\n{ \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Member/Role DIV\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;=replace([$Member.picture], \u0026#39;MThumb\u0026#39;, \u0026#39;LThumb\u0026#39;)\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;height\u0026#34;: \u0026#34;175px\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;175px\u0026#34;, \u0026#34;border-style\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;border-color\u0026#34;: \u0026#34;black\u0026#34;, \u0026#34;border-width\u0026#34;: \u0026#34;0px 5px 0px 0px\u0026#34; } }, { \u0026#34;columnFormatterReference\u0026#34;: \u0026#34;[$Title]\u0026#34; } ] } Two points of interest here. First, for the src attribute for our img property, we\u0026rsquo;re using the replace() function to swap out the text \u0026lsquo;MTHUMB\u0026rsquo; for \u0026lsquo;LTHUMB\u0026rsquo;. When a user uploads a profile picture, SharePoint will create three versions of it (large, medium, and small). For formatting, referencing the picture property will always return the medium thumbnail. Rather than stretching a smaller thumbnail, we can use pattern to retrieve the larger one instead. Also, because we formatted the Role (which is a rename of the Title column), we don\u0026rsquo;t have specify the definition here. Instead, we\u0026rsquo;re using the columnFormatterReference property and referencing our field.\n NOTE: The column formatting for Role was slightly updated from the previous blog.\n Just for reference, here\u0026rsquo;s the definition we created for the custom column formatting used on the Role field.\n{ \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;24px\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;24px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;24px\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;green\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;left\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;bottom\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;4px\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;margin\u0026#34;: \u0026#34;auto\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;=if(@currentField == \u0026#39;Ring-bearer\u0026#39;, \u0026#39;StatusCircleRing\u0026#39;, if(@currentField == \u0026#39;Guardian\u0026#39;, \u0026#39;Shield\u0026#39;, if(@currentField == \u0026#39;Melee\u0026#39;, \u0026#39;DecisionSolid\u0026#39;, \u0026#39;Bullseye\u0026#39;)))\u0026#34; } }] } At this point, we have something like the below image.   Second column Our second column consists of three rows, each containing a different bit of text relating information about the current member. Here\u0026rsquo;s the definition for this section.\n{ \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Text DIV\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;padding-left\u0026#34;: \u0026#34;5px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;inherit\u0026#34;, \u0026#34;text-shadow\u0026#34;: \u0026#34;2px 2px 0 #000000\u0026#34;, \u0026#34;font-weight\u0026#34;: \u0026#34;bolder\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;column\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;space-between\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;font-size\u0026#34;: \u0026#34;1.5em\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;[$Member.title]\u0026#34; }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;font-size\u0026#34;: \u0026#34;1.25em\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=\u0026#39;Age: \u0026#39; + [$Age.displayValue]\u0026#34; }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;font-size\u0026#34;: \u0026#34;1.25em\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=\u0026#39;From: \u0026#39; + [$From.lookupValue]\u0026#34; } ] } The only thing of real note here is that our parent container in this case is again defining a \u0026quot;Flexbox\u0026quot; with its display property. We\u0026rsquo;re also using two new properties, flex-direction and justify-content, to control how our children are displayed relative to one another.\nWe\u0026rsquo;re using the width property with a value of inherit to force our column to take up the maximum amount of width possible. It won\u0026rsquo;t have a noticeable affect here, but will come into play in the next section. The flex-direction property tells the browser to make each child grow to take up the entire column, width wise. That will force each child div onto its own line. The justify-content property, on the other hand, tells the browser to evenly distribute our rows across the available height.\nWe\u0026rsquo;re getting closer to our desired end result.   The final column Our last column consists of two rows of equal size to hold our Race and Weapon Icons. Let\u0026rsquo;s take a look.\n{ \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Race/Weapons DIV/Column\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;48px\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;5px 5px 5px 0px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;column\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Race icon DIV/Row\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;flex-grow\u0026#34;: \u0026#34;1\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;columnFormatterReference\u0026#34;: \u0026#34;[$Race]\u0026#34; }] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Weapon icons DIV/Row\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;columnFormatterReference\u0026#34;: \u0026#34;[$Weapons]\u0026#34; }] } ] } There\u0026rsquo;s nothing new to discuss here, but it does finish off our sample.   The Complete Schema { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/row-formatting.schema.json\u0026#34;, \u0026#34;hideColumnHeader\u0026#34;: true, \u0026#34;hideSelection\u0026#34;: true, \u0026#34;rowFormatter\u0026#34;: { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;relative\u0026#34;, \u0026#34;border\u0026#34;: \u0026#34;5px solid black\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;10px\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;600px\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;175px\u0026#34;, \u0026#34;font-family\u0026#34;: \u0026#34;Luminari, Papyrus, Brush Script MT\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;24px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Parent Container\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;z-index\u0026#34;: \u0026#34;-3\u0026#34;, \u0026#34;opacity\u0026#34;: \u0026#34;.5\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Background Image\u0026#34;, \u0026#34;src\u0026#34;: \u0026#34;=@currentWeb + \u0026#39;/SiteAssets/MiddleEarthLocales/\u0026#39; + [$From.lookupValue] + \u0026#39;.jpg\u0026#39;\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Column Container\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;100%\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Member/Role DIV\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;=replace([$Member.picture], \u0026#39;MThumb\u0026#39;, \u0026#39;LThumb\u0026#39;)\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;height\u0026#34;: \u0026#34;175px\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;175px\u0026#34;, \u0026#34;border-style\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;border-color\u0026#34;: \u0026#34;black\u0026#34;, \u0026#34;border-width\u0026#34;: \u0026#34;0px 5px 0px 0px\u0026#34; } }, { \u0026#34;columnFormatterReference\u0026#34;: \u0026#34;[$Title]\u0026#34; } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Text DIV\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;padding-left\u0026#34;: \u0026#34;5px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;inherit\u0026#34;, \u0026#34;text-shadow\u0026#34;: \u0026#34;2px 2px 0 #000000\u0026#34;, \u0026#34;font-weight\u0026#34;: \u0026#34;bolder\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;column\u0026#34;, \u0026#34;justify-content\u0026#34;: \u0026#34;space-between\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;font-size\u0026#34;: \u0026#34;1.5em\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;[$Member.title]\u0026#34; }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;font-size\u0026#34;: \u0026#34;1.25em\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=\u0026#39;Age: \u0026#39; + [$Age.displayValue]\u0026#34; }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;font-size\u0026#34;: \u0026#34;1.25em\u0026#34; }, \u0026#34;txtContent\u0026#34;: \u0026#34;=\u0026#39;From: \u0026#39; + [$From.lookupValue]\u0026#34; } ] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Race/Weapons DIV/Column\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;48px\u0026#34;, \u0026#34;padding\u0026#34;: \u0026#34;5px 5px 5px 0px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;column\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Race icon DIV/Row\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;flex-grow\u0026#34;: \u0026#34;1\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;columnFormatterReference\u0026#34;: \u0026#34;[$Race]\u0026#34; }] }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Weapon icons DIV/Row\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;columnFormatterReference\u0026#34;: \u0026#34;[$Weapons]\u0026#34; }] } ] } ] }] }] } } Our adventure draws near its end Now that we\u0026rsquo;ve got our view formatted, we\u0026rsquo;re done, right? We could be, but the list view is off somehow...   Look at all that empty white space! Such a waste, but showing each item in a row is what the list view does. Sometimes, that may be exactly what you need in some cases but here...we don\u0026rsquo;t need it. Instead, we can use the \u0026quot;Gallery\u0026quot; (or \u0026quot;Tile)\u0026quot; view, which will display our items in a grid view. We can copy the the schema we\u0026rsquo;ve already defined, and change the selected layout from \u0026quot;List\u0026quot; to \u0026quot;Gallery\u0026quot;   After that, we can paste it in, but we\u0026rsquo;ll need to modify things every so slightly, as the Gallery layout has some additional properties we need to specify. Let\u0026rsquo;s look at the basic schema for a gallery view.\n{ \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/tile-formatting.schema.json\u0026#34;, \u0026#34;height\u0026#34;: 175, \u0026#34;width\u0026#34;: 650, \u0026#34;fillHorizontally\u0026#34;: true, \u0026#34;hideSelection\u0026#34;: true, \u0026#34;formatter\u0026#34;: { } } Unlike columns and list view formats, the tile schema wants us to specify an exact width and height (in pixels) for each tile. It\u0026rsquo;s not strictly required, but we\u0026rsquo;ll want to supply our own values here to ensure that each card has the right dimensions. We\u0026rsquo;re also using a new property, fillHorizontally, which will ensure that our cards do not overlap one another. Finally, instead of the rowFormatter object we use in List views, we have a simple formatter property for our Tile views. After that, we can simply copy the contents of the rowFormatter property in the list view example and paste them into the new formatter property. Doing that should get us to where we want to be.   Prologue Over the course of two blogs, we\u0026rsquo;ve covered the basic building blocks of custom column formatting as well as how to customize our list and gallery views. We turned a boring old list of text into far less boring visuals, and then turned those visuals into a \u0026quot;who\u0026rsquo;s who\u0026quot; of Middle Earth. And while our journey together might be coming to an end, it doesn\u0026rsquo;t mean your adventures are over. Take what you\u0026rsquo;ve learned, go out into the world, and make your lists beautiful!\n","image":"https://pnp.github.io/blog/post/getting-started-with-sharepoint-s-custom-view-formatting/images/column-formatting-after_huf4c6edd1e7534b0c407769bba4eac3ff_219131_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/getting-started-with-sharepoint-s-custom-view-formatting/","tags":["Microsoft lists","SharePoint","List formatting"],"title":"Getting started with SharePoint's custom view formatting"},{"categories":["Community post"],"contents":"Which community project do you maintain? Sharing is Caring\nHow does it help people? It helps by providing guidance and confidence for community members to know how and where they can get more involved and collaborate.\nIt is co-maintained by Hugo, Emily and April.\nWhat have you been working on lately? Increasing the session topic spectrum and finding other ways for folks in the community to get involved, no matter what their skill and talent is.\nWhat do you do at work? Development and also provide guidance on M365 Architecture\nWhy are you a part of the M365 community? I love the collaborative feeling and inclusiveness within the community.\nWhat was you first community contribution? List Formatting definition. Chris was amazing, helpful and supportive.\nOne tip for someone who’d like to start contributing Don\u0026rsquo;t be afraid to ask others to collaborate. You will be amazed at the new friends you make!\n","image":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-david-warner/images/David_hu3646932b72025bcf0bdfe85a5e207d69_136224_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-community-spotlight/microsoft-365-pnp-community-spotlight-david-warner/","tags":[],"title":"Microsoft 365 PnP Community Spotlight: David Warner"},{"categories":["Office add-in developer community call"],"contents":"The Office Add-ins developer platform team has new updates to share this month on Office Add-ins Patterns and Practices. PnP is a community effort, so if you are interested in contributing, see our good first issue list.\nCreate custom contextual tabs on the ribbon    This sample shows how to create a custom contextual tab on the ribbon in the Office UI. The sample creates a table, and when the user moves the focus inside the table, the custom tab is displayed. When the user moves outside the table, the custom tab is hidden.\n Check out the code sample: Create custom contextual tabs on the ribbon Check out the docs: Create custom contextual tabs in Office Add-ins  Contributors Thank you to our contributors who are actively helping each month with the PnP-OfficeAddins community effort.\n Maarten van Stam - helping review PRs and issues on PnP-OfficeAddins  Want to contribute? PnP is a community effort by developers like you. Check out our good first issue list as a great place to help with some samples. Feel free to contribute to existing samples or create new ones.\nAbout Office Add-ins Patterns \u0026amp; Practices (PnP) Office Add-ins PnP is a Microsoft-led, community driven effort that helps developers extend, build, and provision customizations on the Office platform the right way by providing guidance and help through official documentation and open source initiatives. The source is maintained in GitHub where anyone can participate. You can provide contributions to the samples, reusable components, and documentation. Office Add-ins PnP is owned and coordinated by Office engineering teams, but the work is done by the community for the community.\nYou can find code samples for Office Add-in development in the Office Add-ins PnP repo. Some samples are also documented in the Office Add-ins docs, such as Open in Excel.\nAdditional resources  Get started with Office development by joining the Microsoft 365 developer program. Try out some samples and get coding quickly with Office add-ins by downloading Script Lab.  Learn more by joining the monthly Office Add-ins community call.\n","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-in-developer-community-pnp-february-2021-update/images/create-custom-contextual-tabs-on-the-ribbon_hua59e9412113003af3405aa4f475251ab_148935_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-in-developer-community-pnp-february-2021-update/","tags":[],"title":"Office Add-in Developer Community (PnP) -- February 2021 update"},{"categories":["Microsoft 365 Developer Community Call"],"contents":"Recording of the Microsoft 365 \u0026ndash; General M365 development Special Interest Group (SIG) community call from March 18, 2021.\nCall Summary Latest news from Microsoft 365 engineering and updates on open-source projects: PnP .NET libraries, PnP PowerShell, modernization tooling, on yo Teams, on Microsoft Graph Toolkit, and on Microsoft Teams Samples. Announcing the GA release of SharePoint Framework v1.12 along with a host of other GA releases - PnP .NET Libraries - PnP Framework v1.3.0, PnP Core SDK v1.0.0 and PnP PowerShell v1.4.0. yo Teams generator-teams (apps generator) v3.0.3 GA and 3.1.0 Preview, yo teams-build-core (gulp tasks) v1.0.1 + v1.1.0 Preview, and msteams-react-base-component (React UI helpers) v3.1.0, have been released. In development - MSAL 2.0 provider and preview of OneDrive file components in Microsoft Graph Toolkit. Released new Microsoft Graph Toolkit training in Microsoft Learn, Register now for March/April trainings on Sharing-is-caring. The host of this call was Vesa Juvonen (Microsoft) | @vesajuvonen. Q\u0026amp;A takes place in chat throughout the call.\n**Actions: **\n Get SharePoint Framework v1.12 - https://aka.ms/spfx Complete the Developer Success Survey - https://aka.ms/developersuccess Join the M365 customer success platform panel - https://aka.ms/SuccessPanel Register for Sharing is Caring Events:  First Time Contributor Session \u0026ndash; March 22nd, April 6th \u0026amp; 27th (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; March/April PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; April 29th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; April 8th \u0026amp; 15th PnP \u0026ndash; AMA (Ask Me Anything) \u0026ndash; CLI for Microsoft 365 Edition \u0026ndash; April 13 First Time Presenter - March 24th, April 7th \u0026amp; 21st More than Code with VSCode \u0026ndash; March 23rd, April 14th \u0026amp; 28th Maturity Model Practitioners \u0026ndash; April 20th PnP Office Hours \u0026ndash; 1:1 session - Register   Download the recurrent invite for this call \u0026ndash; http://aka.ms/m365-dev-sig [Call attention to your great work by using the ]#PnPWeekly on Twitter Microsoft Teams Development Samples  (https://aka.ms/TeamsSampleBrowser)\n  Teams SSO with server-side Graph calls - Hilton Giesenow | @TheMossShow \u0026amp; Doğan Erişen. Supporting Article - Securely connect to Microsoft Graph from Teams tabs using SSO   **\u0026ldquo;Hello Community\u0026rdquo; ** Demos delivered in this session\n  Accessing comment information in list formatting and advance form adjustments - draw people\u0026rsquo;s attention to discussions around selected list items by more prominently displaying the number of comments on each item. Accomplish this by using CommentCount, a fluent UI icon and formatting. Be aware of and adjust for differences between how icon containing number renders slightly differently in forms, lists and tiles views. Use sample script in your list today!   Getting started on using Microsoft Teams Yeoman generator v3 \u0026ndash; get newest Microsoft Teams App Project Generator - #YoTeams at the Repo. Presenter takes viewer from generator installation, project creation \u0026ndash; scaffolding of files, to VS code and explains created files. Note: not using class based React components but using functional components and React hooks. Then create a build and install app \u0026ndash; a configurable tab, in Teams. New V3 capabilities called out through demo.   The Microsoft Graph Toolkit in Teams with Blazor \u0026ndash; more comfortable in C#, Server-side, .NET development as opposed to React, then this Blazor demo is for you. The demo focuses on using the Microsoft Graph Toolkit (MGT) in Server-side Blazor via SignalR in Teams App Dev. Authentication is handled by providers from MGT. Blazor components call Microsoft Graph functions to get list of teams, agenda, usernames and roles.   Thank you for your work. Samples are often showcased in Demos. Topics covered in this call\n  Updates from Microsoft 365 Engineering - Vesa Juvonen (Microsoft) | @vesajuvonen - 6:29\n  PnP.NET library updates - Bert Jansen (Microsoft) | @O365bert - 7:24\n  PnP PowerShell updates - Bert Jansen (Microsoft) | @O365bert - 10:29\n  yo Teams updates - Wictor Wilén (Avanade) @wictor [- 11:42]{style=\u0026ldquo;float: none; background-color: #ffffff; color: #333333; cursor: text; font-family: Georgia,\u0026lsquo;Times New Roman\u0026rsquo;,\u0026lsquo;Bitstream Charter\u0026rsquo;,Times,serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none;\u0026rdquo;}\n  Microsoft Graph Toolkit updates - Beth Pan (Microsoft) | beth-panx - 13:41\n  Microsoft Teams Samples - Vesa Juvonen | @vesajuvonen - 15:21\n  Demo: Accessing comment information in list formatting and advance form adjustments \u0026ndash; Chris Kent (DMI) | @theChrisKent - 16:53\n  Demo: Getting started on using Microsoft Teams Yeoman generator v3 \u0026ndash; Wictor Wilén (Avanade) | @wictor - 30:54\n  Demo: The Microsoft Graph Toolkit in Teams with Blazor \u0026ndash; Thomy Gölles (Solvion) | @thomyg\n- 43:42\n  Resources Additional resources around the covered topics and links from the slides.\n  Slides used in this ​community call\n  Microsoft Graph Toolkit in Microsoft Learn | http://aka.ms/learn-mgt   Microsoft Teams Samples Gallery | aka.ms/teams-samples\n  Documentation - Use column formatting to customize SharePoint   Samples \u0026ndash; SharePoint List Formatting Samples   Repo \u0026ndash; Comment Count   Repo - Row Index Drawing   Repo - Microsoft Teams App Project Generator - #YoTeams   Blog - Thomy Gölles   Repo - Awesome Blazor   Webinar - MICROSOFT GRAPH TOOLKIT WITH BLAZOR   Post \u0026ndash; How to present at online meetings and events like an ignite superstar \n  Video - Getting started with Microsoft Graph Toolkit\n  PnP Weekly \u0026ndash; Episode 118 with dual MVP Veronique Lengelle (CPS) | @veronicageek | video | podcast\n  Viva Connections https://aka.ms/VivaConnections\n  General resources  SharePoint look book Yo Teams video training package .NET Standard 2.0 version of SharePoint Online CSOM API Microsoft 365 community (PnP) videos | aka.ms/m365pnp-videos Microsoft Teams Toolkit for Visual Studio Code yo Teams | aka.ms/yoteams Video - Getting started using yo Teams | Wictor Wilén (Avanade)| @wictor Build a crisis management site to connect people and information Developer documentation | https://aka.ms/spdev-docs PnP Power Shell SharePoint Modernization Partner Guidance - Feedback welcome Solution - Building a modern search experiences with SharePoint Framework web parts Page transformation guidance Page transformation videos Modernization scanner Microsoft 365 developer program site - Need to become a Tenant Admin to test look book capabilities? Get a Microsoft 365 E5 developer subscription (free tenant for 90 days) SharePoint Provisioning Service - Easily provision look book designs to any tenant in the world SharePoint Provisioning templates on GitHub PnP Provisioning Tenant Templates documentation SharePoint Page Transformation webcast series PnP Power Shell SharePoint Modernization Tools  Upcoming Calls | Recurrent Invites  SharePoint Framework call \u0026ndash; March 25th at 7:00 am PDT | https://aka.ms/spdev-spfx-call M365 General Dev call \u0026ndash; April 1st at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Graph call - April 6th at 8:00 am PDT | https://aka.ms/microsoftgraphcall SharePoint Framework call \u0026ndash; April 8th at 7:00 am PDT | https://aka.ms/spdev-spfx-call Adaptive Cards monthly call \u0026ndash; April 8th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall SharePoint monthly call \u0026ndash; April 13th at 8:00am PDT | https://aka.ms/sp-call Office add-in monthly call \u0026ndash; April 14th at 8:00 am PDT | https://aka.ms/officeaddinscall M365 General Dev call \u0026ndash; April 15th at 7:00 am PDT | https://aka.ms/m365-dev-sig Microsoft Identity Platform \u0026ndash; April 15th at 9:00 am PDT | https://aka.ms/IDDevCommunityCalendar  Microsoft Teams monthly call \u0026ndash; April 20th at 8:00 am PDT | https://aka.ms/microsoftteamscommunitycall Power Apps monthly call \u0026ndash; April 21st at 8:00 am PDT | https://aka.ms/PowerAppsMonthlyCall General Microsoft 365 Dev Special Interest Group bi-weekly calls are targeted at anyone who\u0026rsquo;s interested in the general Microsoft 365 development topics. This includes Microsoft Teams, Bots, Microsoft Graph, CSOM, REST, site provisioning, PnP PowerShell, PnP Sites Core, Site Designs, Microsoft Flow, PowerApps, Column Formatting, list formatting, etc. topics. More details on the Microsoft 365 community from http://aka.ms/m365pnp. We also welcome community demos, if you are interested in doing a live demo in these calls! You can download recurrent invite from http://aka.ms/m365-dev-sig. Welcome and join in the discussion. If you have any questions, comments, or feedback, feel free to provide your input as comments to this post as well. More details on the Microsoft 365 community and options to get involved are available from http://aka.ms/m365pnp. \u0026ldquo;Sharing is caring\u0026rdquo;   Microsoft 365 PnP team, Microsoft - 19th of March 2021\n","image":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-18th-of-march/images/sig-18th-march-recording_hue5f0164a033f8cc305ac0b55c9155b29_286209_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-developer-community-call/microsoft-365-developer-community-call-recording-18th-of-march/","tags":[],"title":"Microsoft 365 Developer Community Call recording -- 18th of March, 2021"},{"categories":["Microsoft Teams community call"],"contents":"Call summary This month\u0026rsquo;s community call featured latest look at the Teams Sample Repository (consolidated sample code Repo for Teams platform), then two Community Sample Showcase entries: Business to Citizen Consumer Communication Bot (allows citizen end-users with no Teams license to engage a business licensed user in a real-time Teams chat), and Bot Composer (create a simple bot, install it in Teams and have it calling the Graph in 15 minutes!), followed by a presentation on Utilizing Mobile First Device Capabilities for Teams Apps (how developers are able to extend hardware capabilities in mobile devices to build richer mobile apps), and a 10-minute Q\u0026amp;A. The call was hosted by Jun Pak (Microsoft). Microsoft presenters included Wajeed Shaikh, Sathya Raveendran, Arun Kumar Anaparthi, Bob German, Anuj Bahl and Shubham Chauhan. Recorded on February 16, 2021. Thank for attending the call or viewing on demand.  Demos Business to Citizen Consumer Communication Bot \u0026ndash; sample allows citizen end-users with no Teams license to engage a business licensed user in a real-time Teams chat and vice versa, using a consumer chat channel. Chat conversations may be escalated into a call/meetings with anonymous (guest) users. Allows quick and easy file/image transfers and handling of multiple chat sessions in parallel with clear user attribution in each chat thread. Uses Graph APIs for chat and file transfers.\n Bot Composer create a simple bot, install it in Teams and have it calling the Graph in 15 minutes! Step-by-step - Name your bot, add a trigger, use ngrok to make bot work in Teams, register bot, create an app (in App Studio), install bot locally, connect it to the Graph, create trigger to respond with person\u0026rsquo;s title from profile, ask question in Teams!  Utilizing Mobile First Device Capabilities for Teams Apps \u0026ndash; four device capabilities (Image, Location, Mic, and Scanner APIs) now in Teams Client JS SDK that developers can utilize for extending bots, tabs, messaging extensions and personal apps, in mobile apps. Reviewed mobile device capabilities Roadmap, 3 UI demos, and scenarios with API configurations. Have a look at the mobile People Picker Control in development. API documentation with code snippets is current.  Resources  Repository - Microsoft Teams Samples Repository  Repo - Business to Citizen Consumer Communication Bot - Sample code  Repo - Microsoft Bot Framework Composer  Documentation - Bot Framework Emulator App - Download \u0026amp; setup ngrok Documentation - Instructions to register your bot and an application that can call the Microsoft Graph  BlogPost - Four device capabilities developers can utilize for Microsoft Teams mobile apps  Documentation - Build apps for Microsoft Teams Documentation - Device capabilities  Documentation - Request device permissions for your Microsoft Teams app  Documentation - Integrate media capabilities  Documentation - Integrate QR or barcode scanner capability  Documentation - Integrate location capabilities  Documentation - Microsoft Teams JavaScript client SDK   Actions  Survey - Complete the Microsoft 365 developer success survey - https://aka.ms/developersuccess Join - M365 customer success platform panel  Provide feedback \u0026ndash; Microsoft Teams Developer Community channels  Join us for our next call: April 20 at 8:00am PDT | https://aka.ms/microsoftteamscommunitycall    General Resources  Teams developer documentation​ | https://aka.ms/teamsdev ​ ​Teams developer feedback​ | https://aka.ms/teamsdevfeedback  Microsoft Teams Sample gallery | https://aka.ms/teams-samples - One location for all samples from Microsoft and community  Stay connected  Full post for this call - https://aka.ms/m365pnp/community/blog Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365DevYouTube​ Blogs - https://aka.ms/M365DevBlog Microsoft 365 PnP Blog - https://aka.ms/m365pnp/community/blog Recurrent Invite - https://aka.ms/microsoftteamscommunitycall   ","image":"https://pnp.github.io/blog/microsoft-teams-community-call/microsoft-teams-community-call-march-2021/images/TitleSlide_hu13465c4980858184e87ba127b23f1002_250627_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-teams-community-call/microsoft-teams-community-call-march-2021/","tags":[],"title":"Microsoft Teams Community Call - March 2021"},{"categories":["CLI for Microsoft 365"],"contents":"We\u0026rsquo;ve just published a new version of the CLI for Microsoft 365 with new commands for working with and managing Microsoft 365 tenants and SharePoint Framework projects on any platform.\nManage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use. While building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects. New version of CLI for Microsoft 365 \u0026ndash; v3.7 With the release of SharePoint Framework v1.12, we release this new version of CLI for Microsoft 365 to help you upgrade your projects. Along with it, we included some new commands and improvements. Here are some of the most noteworthy additions. For the full list of changes, see our release notes. Upgrade SharePoint Framework projects to v1.12 Microsoft has just released a new version of SharePoint Framework v1.12. The most notable improvements are support for Node@12, including custom Teams manifests and support for building Teams meetings apps. For the full list of features, see the documentation. Upgrading SharePoint Framework projects goes beyond updating dependencies to the latest version. Often, there are changes to the different files in the project. To help you upgrade your SPFx project to the latest version and benefit from the latest improvements, we offer you a one-command upgrade. To get a list of changes necessary to upgrade your project to the latest version of the SharePoint Framework, execute in the folder of your SharePoint Framework project:\nm365 spfx project upgrade --output md \u0026gt; report.md  This will generate a Markdown report with all findings. From the summary section of the report, you can copy a complete set of commands to run to update all packages. If you want to better understand what\u0026rsquo;s changed and where, I\u0026rsquo;d recommend you use the CodeTour report, which you can get by executing:\nm365 spfx project upgrade --output tour When you open your SharePoint Framework project in VSCode, you will get an interactive tour of all the locations in your project that needs an update. Ensure that you have all prerequisites for building apps using SharePoint Framework v1.12 SharePoint Framework v1.12 comes with a new set of prerequisites. To build apps on SPFx v1.12, you need to be using Node v12 and Gulp v4. To help you double check that you have all prerequisites and won\u0026rsquo;t hit any errors, we offer the spfx doctor command. To check if your machine has all prerequisites for building apps using SPFx v1.12, install the SharePoint Framework Yeoman generator v1.12 and run:\nm365 spfx doctor  The command will check if your machine for all prerequisites and tell you if there is anything missing. Configure CLI to your personal preferences As more and more people use CLI for Microsoft 365, we get more feedback about what they\u0026rsquo;d prefer CLI to work. Some of our users, prefer for example to automatically get command help when running the command fails. Others, prefer to see help only when they explicitly ask for. When you use CLI for building scripts, you might want it to use the JSON output by default. On the other hand, if you use it for quickly looking things up, you\u0026rsquo;d prefer to use the text mode. Because the only person knowing best how to work is you, we want to give you the ability configure CLI to your personal preferences. In this release we introduce support for configuring CLI. The first option that you can set, is to choose if you want to automatically see help when running command failed. It\u0026rsquo;s turned on by default, and to turn it off you can run:\nm365 cli config set --key showHelpOnFailure --value false  We\u0026rsquo;re planning to introduce the ability to configure the default output mode next. And if there are other things that you\u0026rsquo;d like to be able to configure, please let us know. List application permissions for SharePoint sites Recently, Microsoft released a new way of granting apps access to SharePoint sites. Rather than having apps access all sites, you can let them access selected sites only. In this version of CLI for Microsoft 365, we introduce support for retrieving app permissions set on a specific site. To get the list of permissions granted to apps on a specific site, execute:\nm365 spo site apppermission list --siteUrl https://contoso.sharepoint.com/sites/project-x  To get more information about a specific site app permission, execute:\nm365 spo site apppermission get --siteUrl https://contoso.sharepoint.com/sites/project-x --permissionId aTowaS50fG1zLnNwLmV4dHw4OWVhNWM5NC03NzM2LTRlMjUtOTVhZC0zZmE5NWY2MmI2NmVAZGUzNDhiYzctMWFlYi00NDA2LThjYjMtOTdkYjAyMWNhZGI0  In the future versions of CLI for Microsoft 365, you can expect more commands allowing you to manage app permissions for SharePoint sites. Changes We\u0026rsquo;ve continued improving CLI, building upon the changes we\u0026rsquo;ve introduced in the previous version. Improved managing SharePoint pages and sites CLI for Microsoft 365 is a great tool for automating managing your Microsoft 365 tenant and SharePoint Framework projects. It\u0026rsquo;s also great as an engine to build other tools on top! Elio Struyf has build a static site generator for SharePoint named Doctor. If you want to author product documentation or a knowledgebase in Markdown but publish it to SharePoint, Doctor is the tool for the job! As Elio is extending Doctor with new capabilities, he\u0026rsquo;s contributed a number of enhancements to managing pages and sites with CLI for Microsoft 365. Added Remote Development container One of the things that often stand in the way of contributing to open source projects is setting up the dev environment. Often, specific projects require specific tools and sometimes even specific versions of them. If you\u0026rsquo;re not using the particular stack in your daily work, it can be cumbersome to even get started. To help you contribute to CLI for Microsoft 365, we\u0026rsquo;d like to introduce a Remote Developer container. Using GitHub Codespaces, it allows you to get up and running your dev environment in minutes, without worrying about installing dependencies. We\u0026rsquo;ll provide instructions on how to get started using the Remote Development container shortly. Sample scripts CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts. If you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios. Provision a Team with channels and assign a custom icon A sample script which creates a Microsoft 365 Group, associates a logo to it and some members. Afterward, it teamyfies the Group and creates two public channels. List site collections and their lists This script helps you to list and export all site collection and their lists SharePoint Online sites, ideal for getting insights into the size of your environment. List all external users in all site collections This script helps you to list all external users in all SharePoint Online sites. It provides insights in who the users are, and if available who they where invited by. Delete all Microsoft 365 groups and SharePoint sites There are so many different ways to create Microsoft 365 groups. Teams, Planner, SharePoint team sites, etc. \u0026mdash; you can accumulate a lot of them very fast. Use this script to delete the ones you no longer need. Contributors This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order) Aakash Bhardwaj, Luise Freese, Patrick Lamber, Michaël Maillot, Waldek Mastykarz, Arjun Menon, Abderahman Moujahid, Nanddeep Nachan, Albert-Jan Schot, Elio Struyf, Fredrik Thorild, Garry Trinder and Rabia Williams. Thank you all for the time you chose to spend on the CLI for Microsoft 365 and your help to advance it! Work in progress Here are some things that we\u0026rsquo;re currently working on. More commands, what else Microsoft 365 is evolving and new capabilities are being released every day. With CLI for Microsoft 365, we aim to help you manage your tenant on any platform in a consistent way, no matter which part of Microsoft 365 you interact with. While we keep adding new commands to CLI for Microsoft 365 each release, we still barely scratched the surface with what\u0026rsquo;s possible in Microsoft 365. In the upcoming versions of the CLI for Microsoft, you can expect us to add more commands across the different workloads in Microsoft 365. Improved managing SharePoint pages Microsoft keeps investing in modern SharePoint pages continuously introducing new capabilities to let us publish rich content. We\u0026rsquo;re looking into extending our support for managing modern SharePoint pages to let you use them to their full potential. Improved creating Azure AD apps Recently, we\u0026rsquo;ve introduced a command to easily create Azure AD app registrations. Because they\u0026rsquo;re backbone of every app you\u0026rsquo;d build on Microsoft 365, we think you should be able to create them as easily as possible. So with CLI for Microsoft 365, you can create a fully configured Azure AD app for the most common scenarios with just one line of code. In the future versions of CLI for Microsoft 365 you can expect us extend the capabilities with additional scenarios and features supported by Azure AD. Script examples In every release of the CLI for Microsoft 365, we introduce new commands for managing Microsoft 365. With over 350 commands across the different Microsoft 365 services, the CLI for Microsoft 365 has become a powerful tool, not just for managing your tenant but also for automating your daily work. We\u0026rsquo;d love to show you how you can use the CLI for Microsoft 365 to build automation scripts in PowerShell Core and Bash. If you have any scripts using SPO or PnP PowerShell that you use frequently, please share them with us so that we can learn more about the common automation scenarios. ensure commands We\u0026rsquo;ve just shipped our first ensure command - an easy way to help you that a site with specific settings exists. If it doesn\u0026rsquo;t, CLI creates it for you, if it does, CLI ensures it has the right properties. All in one line of code. We\u0026rsquo;d love to hear from you how you like it and if it\u0026rsquo;s something you\u0026rsquo;d like us to implement for other commands as well. Try it today Get the latest release of the CLI for Microsoft 365 from npm by executing in the command line:\nnpm i -g @pnp/cli-microsoft365  Alternatively, you can get the latest release from Docker by executing in the command line:\ndocker run --rm -it m365pnp/cli-microsoft365:latest  If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365. If you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/microsoft-teams-community-call/microsoft-teams-community-call-march-2021/images/TitleSlide_hu13465c4980858184e87ba127b23f1002_250627_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-7/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 v3.7"},{"categories":["Power Apps community call"],"contents":"Call summary Topics covered in this month\u0026rsquo;s community include Creating Responsive Dataverse for Teams Power Apps (Use responsive containers for gallery and underlying form screen connected to a Dataverse table), Tagging documents with AI Builder (Power Automate flow calls Computer Vision Read API to scan for keywords to tag documents), Getting started with Power Apps ALM (ALM Accelerators automate packaging of Power Apps projects for transfer) and Recent Power Apps News and Community Contributions. This session included Q\u0026amp;A in chat. The call was hosted by Todd Baginski (Canviz). Demo presenters include Reza Dorrani (Catapult), Uday Adhikari, Phil Topness and Mike Ochs. Recorded on March 17, 2021. Thank for attending the call or viewing it on demand. Demos  Creating a responsive Power App running Dataverse in Teams \u0026ndash; Minor configuration tips elevates OOB responsiveness to next level. Start with responsive containers template \u0026ndash; layout for header, footer, and page body (gallery control). Create a form screen, same structure \u0026ndash; header, footer, body (form control). Connect gallery and form to data source (table). Connect gallery and form together using item property. Data collected in form is stored in Dataverse, rendered in gallery item.  Automating metadata tagging with AI using Power Automate \u0026ndash; Need to scan and tag 15k inconsistently formatted documents annually that are uploaded to a SharePoint document library? Presenter evaluated 3 capable options (OneDrive, OCR, Computer Vision) and based on technology strengths/limitations, choose Azure\u0026rsquo;s Cognitive Services - Computer Vision Read API that\u0026rsquo;s called from the shown Power Automate flow. Customer updates keyword mapping in a list rather than in the Flow.  Getting started with Power Apps ALM \u0026ndash; The Power CAT team has built 2 ALM Accelerators for Business Maker (Makers) and Advanced Maker audiences. Accelerators automate the process of packaging up a Power Apps Solution and all supporting components for complete and documented movement between environments \u0026ndash; Dev, Text, Prod. Source control in GitHub or Azure DevOps. Makers Accelerator available now in CoE Starter Kit. ALM for Advanced Makers is in Private preview.   Recent News \u0026amp; Cool Stuff  Introducing Power Apps mobile app\u0026rsquo;s new look (public preview) - https://powerapps.microsoft.com/blog/introducing-power-apps-mobile-apps-new-look-public-previe... Power Apps Custom Functions Library - https://github.com/yourekittenme/powerapps-custom-functions Power Apps Demo Extravaganza 2021 - https://aka.ms/PowerAppsDemoExtravaganza Introducing Microsoft Power Fx - https://aka.ms/PowerAppsPowerFX   Actions  Entries Start May for Demo Extravaganza 2021 - https://aka.ms/PowerAppsDemoExtravaganza Microsoft Office 365 Developer Survey - https://aka.ms/developersuccess  Join the M365 Customer Success Platform Panel - https://aka.ms/SuccessPanel Provide feedback \u0026ndash; Microsoft Teams Developer Community channels - https://docs.microsoft.com/microsoftteams/platform/feedback Join us for our next call: April 21, 2021 at 08:00am PDT - https://aka.ms/powerappscommunitycall  Learn more  Microsoft\u0026rsquo;s Power Platform website Power Apps Responsive Design - https://bit.ly/responsivepowerapps  Power Apps Training Resources - https://aka.ms/PowerAppsTraining Power Apps Community - https://Community.PowerApps.com Power Apps Community Samples - https://aka.ms/PowerAppsCommunitySamples Power Apps Community Videos -https://aka.ms/PowerAppsCommunityVideos Power Addicts Hangout - https://wearepoweraddicts.com #LessCodeMorePower Video Series - https://www.youtube.com/playlist?list=PL8IYfXypsj2Cr4DUqMKYkGM-Wejfim2QX Share more - draw attention to your great work - #PowerAppsCC  Stay connected  Twitter - https://twitter.com/microsoft365dev​ YouTube - https://aka.ms/M365DevYouTube​ Blogs - https://aka.ms/M365DevBlog Recurrent Invite - https://aka.ms/powerappscommunitycall  ","image":"https://pnp.github.io/blog/microsoft-teams-community-call/microsoft-teams-community-call-march-2021/images/TitleSlide_hu13465c4980858184e87ba127b23f1002_250627_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/power-platform-community-call/power-apps-community-call-march-2021/","tags":[],"title":"Power Apps Community Call -- March 2021"},{"categories":["Community post"],"contents":"Introduction In SPFx many times we have a requirement like break permissions for the list, list items and etc for the particular users. for eg., we want to break permission of the list item for XYZ user.so in this article, we will see how to implement break permission of the list items using PnP js so we can use this in SPFx.\nImplementation For the testing purpose of our PnP js query, we can use the SP Editor extension for chrome. After installation, you can check it in the developer tool. So open developer tool(F12) \u0026gt; SharePoint Tab \u0026gt; PnP Js Console \u0026gt; At here you can write PnP queries and using ctrl + D we can test it.\nNow we will implement the logic for break permission as below,\n For eg. I want to set \u0026ldquo;Contribute\u0026rdquo; permission so we have to get a Role definition Id. you can set it as per your requirement. for more details to refer to this article.  Then get list by title and break list permission.  Get list item by id.  Break list item permission and then set permission. To add permission we require two parameters UserId and Role definition ID. The meaning of this method is to give permission to a specific user.  Setting list item permission to one user ![Single user.png](images/Single user.png)\nSetting list item permission to multiple users ![Multiple users.png](images/Multiple users.png)\nHere logic will be the same as above. just have to add one array with required user IDs and then will iterate this array and set the permissions.\nOutput\nAfter successfully running the query now we will check the permission. so first select the list item and select the details panel from the right corner second last icon (above the list title). you can see the panel as below,\n   Select manage access and then select Advanced as below,\n   It will open another tab and in this, you can see all the list item level permission as below,\n   Summary In this article, we have seen how to break and add permission to list items using PnP JS.\nHope this helps! If it is helpful to you then share it with others. Give your valuable feedback and suggestions in the comments section below.\nSharing is caring!\n","image":"https://pnp.github.io/blog/post/break-and-change-list-item-permission-using-pnp-js-in-spfx/images/FirstOP_hu8bd980e57fa82ff6e78dfd4ea275d543_68700_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/break-and-change-list-item-permission-using-pnp-js-in-spfx/","tags":["PnPjs","SharePoint framework (SPFx)"],"title":"Break And Change List Item Permission Using PnP JS In SPFx"},{"categories":["Adaptive Cards community call"],"contents":"In this month\u0026rsquo;s community call, there is\n a quick roadmap update \u0026ndash; 9 features in development to be delivered in Schema versions 1.4, 1.5, 1.6 over the next 3 months. Then there is a deep dive with demos and Q\u0026amp;A, focused on the Action. Execute feature and underlying Universal Actions Model for Microsoft Teams, Outlook and more, rolling out mid-April in Schema v1.4. The new Action.Execute action type synchronizes activity (payload) in the back-end while rendering cards natively in Teams and Outlook front-ends. Developers no longer need to build separate applications for each environment. The call was hosted by Matt Hidinger (Microsoft). Presenters include Shiladitya Saha (Microsoft Teams) and Karan Thapar (Microsoft Outlook). Recorded on March 11, 2021.  Demo Deep dive into Universal Actions for Microsoft Teams and Outlook cards authored using the new Action.Execute action type \u0026ldquo;just work\u0026rdquo; in Teams chats, Outlook emails and more thanks to seamless back-end activity synchronization. Action.Execute can return a new card to replace the current one. Several light demos show the experience. Also shown: Contextual views in Teams bots/adaptive cards - allows specific users to have individualized cards and Sequential Workflows support on Teams - progress through a multi-step process in a single adaptive card using auto invoke and synchronized refresh capabilities. Referenced in this call  Portal - Roadmap updates  Document - Universal Action Model  Schema Explorer - Schema v1.4 Docs  Resources in General  Let us know the features you need - https://aka.ms/ACRoadmap Get started with Templating - https://aka.ms/ACTemplating Browse the Adaptive Cards Code - https://aka.ms/ACRepo Check out the Build 2020 Session - https://aka.ms/m365sk134 Find tools, sample cards and more - https://www.madewithcards.io  Stay connected  Twitter https://twitter.com/microsoft365dev​ YouTube https://aka.ms/M365DevYouTube​ Blogs https://aka.ms/M365DevBlog Recurrent Invite https://aka.ms/adaptivecardscommunitycall Next call: April 8th at 09:00am PDT  ","image":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-march-2021/images/THumbnailTitleSlide_hu6d954b45a75b3ea81486f3a456655e5b_318269_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/adaptive-cards-community-call/adaptive-cards-community-call-march-2021/","tags":["Adaptive Cards"],"title":"Adaptive Cards community call -- March 2021"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by are joined by Scotland-based Solution Architect, dual MVP Veronique Lengelle (CPS) | @veronicageek. The discussion included insights to the role of technical architect for Microsoft 365 platform - both about designing solutions that solve customer problems and as important - educating customers on the value of the integrated platform. Microsoft Teams vs SharePoint \u0026ndash; meet the customer where they are at and coach from there. \u0026ldquo;Don\u0026rsquo;t neglect to deliver SharePoint training and don\u0026rsquo;t focus solely on Microsoft Teams.\u0026rdquo; And finally, the growth in partner opportunities as many customers who quickly moved to M365 and the cloud in the last year are now looking for guidance on how to leverage many more of the platform\u0026rsquo;s capabilities that they own. Veronique is an active contributor to PnP PowerShell project, as a champion for Sys Admin users. As with the previous week, Microsoft and the Community delivered 23 articles and videos this last week. Brilliant! This session was recorded on Monday, March 15, 2021. This episode was recorded on Monday, March 15, 2021.\n Video at Microsoft 365 Community YouTube channel    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026rdquo; Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Four device capabilities developers can utilize for Microsoft Teams mobile apps - Microsoft Microsoft Graph Mailbag \u0026ndash; Microsoft Graph in Electron applications using Microsoft Graph Toolkit - Microsoft Microsoft Graph Toolkit adds a new Electron Provider plus enhanced capabilities - Microsoft GlobalCon5 \u0026ndash; three days of sessions and workshops - Mark Kashman (Microsoft) | @mkashman 11 New Connectors Released in February 2021! - Doug Elliott (Microsoft)  How to implement document automation in your business with Microsoft Power Platform - Cedrick Bellarosa (Microsoft) Microsoft 365 Extensibility look book gallery - Microsoft   Community articles  Microsoft 365 Community (PnP) \u0026ndash; March 2021 update - Vesa Juvonen (Microsoft) | @vesajuvonen Getting started with PnP Core SDK - Paul Bullock (CaPa Creative) | @pkbullock Getting started with SharePoint\u0026rsquo;s custom column formatting - Will Holland (ThreeWill) | @_wcholland Run CLI for Microsoft 365 in Docker - Garry Trinder (CPS) | @garrytrinder 10 things we should think about before we build an app - Luise Freese | @LuiseFreese 5 commands to try in CLI for Microsoft 365 to fall in love with it - Luise Freese | @LuiseFreese Doctor - Maintain your documentation on SharePoint without pain - Elio Struyf (Struyf Consulting) | @eliostruyf Init API permissions for your SPFx projects without deploying them - Michaël Maillot (onepoint) | @michael_maillot Getting started with SharePoint Framework - Waldek Mastykarz (Microsoft) | @waldekm Episode #145​ - Welcome PnP Core SDK! - Paolo Pialorsi (PiaSys) | @PaoloPia SharePoint Framework for beginners (SPFx) 2021 | Episode 02 - Development Environment - Rob Pearmain (yorcloud) | @robertpearmain Migration report with CLI for Microsoft 365 - Albert-Jan Schot (Portiva) | @appieschot Building Outlook addin with SPFx - save mail to OneDrive with Azure Function, MSAL.NET and MS Graph ... - Sergei Sergeev (Mastaq) | @sergeev_srg Export external users with CLI for Microsoft 365 - Albert-Jan Schot (Portiva) | @appieschot Should you use a default label with Microsoft Information Protection (MIP)? - Sarah Haase | @sarahhaase, Antonio Maio | @AntonioMaio2 and Mike Maadarani | @mikemaadarani SharePoint Form Conditional Formulas - Laura Rogers (IW Mentor) | @WonderLaura  Additional resources  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-118/images/Thumb-Ep118_hud7bcbea9b301170368d0aa1f773281a6_505295_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-118/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 118"},{"categories":["Community post"],"contents":"Introduction PnP Core SDK is a library designed to help you work with Microsoft 365 services in your .NET projects, this currently focuses on SharePoint and Teams as part of the V1.0 GA release. The PnP Core SDK is the successor to the PnP-Sites-Core project - the library that underpins well known tools such as the PnP Provisioning Engine and PnP PowerShell, and is designed to use the latest development techniques and standards such as:\n .Net 5 and .Net Standard 2.0 support \u0026ndash; this has cross-platform support allowing you to build solutions for a wider range of platforms, greater performance, and a larger range of APIs. Unified object model - obscures the underlying API used to retrieve the data, so from a developer point of view, the SDK handles determining the best API to use e.g., Graph, SharePoint, REST or CSOM meaning you can focus on writing your business logic rather than dealing with working with the various APIs to access the features you need to consume. This yields a significantly faster response and huge performance benefits over the older CSOM method accessing SharePoint. Batching support at the API level to reduce the calls to the service with retry logic to handle cases such as service throttling.  Improved Quality The PnP Core SDK has a strong focus on quality, to help reduce bugs and issues, provide developers with better support working with the SDK, concentrating, and building on the following points:\n Unit testing \u0026ndash; with a project goal to maintain over 80% of the SDK covered by unit tests, we also as part use a new mocking framework that allows us to perform rapid tests without the dependency of the underlying services. Improved documentation \u0026ndash; we have built a portal that contains all the API documentation, how to use the SDK and perform common operations with sample code to help developers use the SDK in their business logic. Samples \u0026ndash; a range of samples initially focusing on, Console App, Web App, Azure Functions, Blazor, WPF and even an example on a Raspberry Pi \u0026ndash; each demonstrating a working example using the SDK interacting with Microsoft 365 services. Contributor guidance \u0026ndash; we have included support documentation for contributors to explain, how to get setup, how to extend the models that work with SharePoint and the Graph, writing unit tests and supporting documentation. This is a starting point, and we are actively working on better ways of supporting developers with the use of the SDK and testing to ensure that SDK maintains a high standard of quality \u0026ndash; of course, we welcome any feedback, issues, suggestions from the community, all are welcome.  Getting started building an app We are next going to show you, the simplest method of creating a console app that interacts with Microsoft 365, provides you with a login window, and creates a page in SharePoint using the awesome support for working with Modern Pages in the PnP Core SDK. But before we start writing the application, we are going to need to setup a few things in Azure and SharePoint:\nSharePoint Site For the purposes of this example, we will use a Microsoft 365 Group connected team, please sure that you set one up for the application to connect to.\nAzure AD App The application uses Azure AD app to authenticate into the services required, for this you we recommend creating your own Azure AD app, and there are tools that can assist with this either the Microsoft 365 CLI, PnP PowerShell are great at making it easy to setup your own Azure AD Apps \u0026ndash; additionally, we also have documentation to help set up the app. Make sure you take a note of the Azure AD app - Application Id, you will need this later. If you want to test the app first, we recommend setup of a \u0026ldquo;dev\u0026rdquo; tenant to test the application in a non-production environment \u0026ndash; check out this article to understand on how to get a free developer tenant from Microsoft.\nBuilding the Application So, let\u0026rsquo;s get going with using the SDK, so for this next section, we will show you how to get going in Visual Studio (btw, Visual Studio Code supported as well), to get the packages and connect to the Microsoft 365 Services using a C# Console Application. Note: If you do not have visual studio, and you are using this for academic, open-source, or personal usage, you can download Visual Studio Community edition to get going, this blog is using Visual Studio 2019, version V16.9. In Visual Studio, create a new C# Console Application (.NET core), ![Create a new visual studio project](images/Create a new project.png)\n(Note: I have filtered the list using the dropdowns to find the project type quickly)\nSelect Next, and Enter Project Name, Location and Solution Name as your discretion,\nUnder additional information, please select .NET 5.0 as the Target Framework ![Visual studio - select .NET version](images/additional information.png)\nVisual Studio will create a hello world project for you, as a starting place. Next we, want to get the NuGet package for the PnP Core SDK, NuGet is a package manager tool that by Microsoft is an essential tool in modern development that allows you to download, create, share, useful libraries and packages to use in your .NET projects \u0026ndash; this is where the PnP Core SDK packages are published to. Continuing in Visual Studio, right select the solution and find the \u0026ldquo;Manage NuGet Packages for Solution\u0026rdquo; option.\n![Option to manage NuGet packages in the solution right-select menu](images/Manage Nuget.png)\nWhen the package manager opens, Select to Browse for Packages and Enter \u0026ldquo;PnP Core SDK\u0026rdquo; in the search bar, to show the two packages described earlier.\n![Find the PnP Core SDK NuGet packages](images/Nuget Packages.png)\nAbout the versions and libraries When searching for the NuGet packages you will see two options, these options are:\n PnP.Core \u0026ndash; this includes the core library that interacts with the Microsoft 365 workloads such as SharePoint and Microsoft Graph. PnP.Core.Auth \u0026ndash; includes the authentication library providing multiple methods in which to securely connect to Microsoft 365 using Azure Active Directory - this includes PnP.Core as a dependency. In most cases, you will only need to use this one to get started.  You will need an additional NuGet Package called \u0026ldquo;Microsoft.Extensions.Hosting\u0026rdquo; \u0026ndash; this allows us to manage the services in the lifetime of running the app. For further information, please refer the documentation around the generic host library. With regards to the way versioning is done for the SDK, there are major releases which currently is v1.0.0 and nightly releases e.g., v1.0.1-nightly which are the prerelease versions allowing you to use the very latest build this would include any fixes and new features.\n![PnP Core SDK release versions](images/SDK Release versions.png)\nLet\u0026rsquo;s start writing some code Once you have added the NuGet packages, open the program.cs file, this is the entry point that the application runs calling on the Main method, we need to add code to this to configure the connection to Microsoft 365 services and perform the page operations. Change the program.cs file using the following code: using System; // Add the relevant using statements for PnP Core using Microsoft.Extensions.DependencyInjection; using Microsoft.Extensions.Hosting; using PnP.Core.Model.SharePoint; using PnP.Core.Services; using System.Threading.Tasks; using PnP.Core.Auth; // Ensure you have added the NuGet packages // - PnP.Core.Auth // - Microsoft.Extensions.Hosting namespace GettingStartedConsoleApp { class Program { // Update main method for asynchronous  static async Task Main(string[] args) { // Setup the host // This app uses interactive login var host = Host.CreateDefaultBuilder() .ConfigureServices((hostingContext, services) =\u0026gt; { // Add the PnP Core SDK library services services.AddPnPCore(options =\u0026gt; { options.DefaultAuthenticationProvider = new InteractiveAuthenticationProvider( \u0026#34;f8023692-08de-48ea-8bef-d987f10e08d2\u0026#34;, // Client Id \u0026#34;contoso.onmicrosoft.com\u0026#34;, // Tenant Id new Uri(\u0026#34;http://localhost\u0026#34;)); // Redirect Id }); }) // Let the builder know we\u0026#39;re running in a console .UseConsoleLifetime() // Add services to the container .Build(); // Start console host await host.StartAsync(); // Connect to SharePoint using (var scope = host.Services.CreateScope()) { // Obtain a PnP Context factory var pnpContextFactory = scope.ServiceProvider.GetRequiredService\u0026lt;IPnPContextFactory\u0026gt;(); // Use the PnP Context factory to get a PnPContext for the given configuration using (var context = await pnpContextFactory.CreateAsync(new Uri(\u0026#34;https://contoso.sharepoint.com/sites/pnpcoresdktestgroup\u0026#34;))) { var web = await context.Web.GetAsync(); Console.WriteLine($\u0026#34;Title: {web.Title}\u0026#34;); // Create the page var page = await context.Web.NewPageAsync(); // Configure the page header // Check out for more detail https://pnp.github.io/pnpcore/using-the-sdk/pages-header.html page.SetDefaultPageHeader(); page.PageHeader.LayoutType = PageHeaderLayoutType.CutInShape; page.PageHeader.ShowTopicHeader = true; page.PageHeader.TopicHeader = \u0026#34;Welcome\u0026#34;; page.PageHeader.TextAlignment = PageHeaderTitleAlignment.Center; // adding sections to the page page.AddSection(CanvasSectionTemplate.OneColumn, 1); // Adding text control to the first section, first column // Check out for more detail https://pnp.github.io/pnpcore/using-the-sdk/pages-webparts.html#working-with-text-parts page.AddControl(page.NewTextPart(\u0026#34;\u0026lt;p style=\u0026#34;text-align:center\u0026#34;\u0026gt;\u0026#34; + \u0026#34;\u0026lt;span class=\u0026#34;fontSizeSuper\u0026#34;\u0026gt;\u0026#34; + \u0026#34;\u0026lt;span class=\u0026#34;fontColorRed\u0026#34;\u0026gt;\u0026#34; + \u0026#34;\u0026lt;strong\u0026gt;PnP Core SDK Rocks!\u0026lt;/strong\u0026gt;\u0026#34; + \u0026#34;\u0026lt;/span\u0026gt;\u0026#34; + \u0026#34;\u0026lt;/span\u0026gt;\u0026#34; + \u0026#34;\u0026lt;/p\u0026gt;\u0026#34;), page.Sections[0].Columns[0]); // Save the page await page.SaveAsync(\u0026#34;Awesomeness.aspx\u0026#34;); // Publish the page await page.PublishAsync(); } } // Cleanup console host host.Dispose(); } } }  In the above sample, we look through the sections of the code: Async \u0026ndash; the PnP Core SDK is designed to work asynchronously, so we need to update the main method to include the \u0026ldquo;async\u0026rdquo; keyword and \u0026ldquo;Task\u0026rdquo; return type to allow the code inside to run. // Update main method for asynchronous  static async Task Main(string[] args)  \nConfigure Host ­\u0026ndash; This block creates and configures the host to run the application, this adds references to the PnP Core SDK, configures the default authentication method, as the simplest method of connecting to Microsoft 365 services, there are other ways to implement this, such as using an appsettings.json file or inline code, if you want more information about this - the PnP Core SDK documentation site contains the additional instructions. // Setup the host // This app uses interactive login var host = Host.CreateDefaultBuilder() .ConfigureServices((hostingContext, services) =\u0026gt; { // Add the PnP Core SDK library services services.AddPnPCore(options =\u0026gt; { options.DefaultAuthenticationProvider = new InteractiveAuthenticationProvider( \u0026#34;f8023692-08de-48ea-8bef-d987f10e08d2\u0026#34;, // Client Id \u0026#34;contoso..onmicrosoft.com\u0026#34;, // Tenant Id new Uri(\u0026#34;http://localhost\u0026#34;)); // Redirect Id }); }) // Let the builder know we\u0026#39;re running in a console .UseConsoleLifetime() // Add services to the container .Build(); // Start console host await host.StartAsync();  Note, the client ID shown above is the same as the ID as the Azure AD app, you set up earlier.\n\nSetup Context \u0026ndash; This block will create a context to connect to SharePoint supplying the URL to the site this will use the default authentication provider specified earlier \u0026ndash; on running the app, this will open a window or tab to allow you to interactively log into your tenant. When authenticated, you are returned a context to perform further options using the connection. // Connect to SharePoint using (var scope = host.Services.CreateScope()) { // Obtain a PnP Context factory var pnpContextFactory = scope.ServiceProvider.GetRequiredService\u0026lt;IPnPContextFactory\u0026gt;(); // Use the PnP Context factory to get a PnPContext for the given configuration using (var context = await pnpContextFactory.CreateAsync(new Uri(\u0026#34;https://contoso.sharepoint.com/sites/pnpcoresdktestgroup\u0026#34;))) {  \nMake a page \u0026ndash; Now that you have connected and you have a context object, you can set to write code that interacts with the service. // Create the page var page = await context.Web.NewPageAsync(); // Configure the page header // Check out for more detail https://pnp.github.io/pnpcore/using-the-sdk/pages-header.html page.SetDefaultPageHeader(); page.PageHeader.LayoutType = PageHeaderLayoutType.CutInShape; page.PageHeader.ShowTopicHeader = true; page.PageHeader.TopicHeader = \u0026#34;Welcome\u0026#34;; page.PageHeader.TextAlignment = PageHeaderTitleAlignment.Center; // adding sections to the page page.AddSection(CanvasSectionTemplate.OneColumn, 1); // Adding text control to the first section, first column // Check out for more detail https://pnp.github.io/pnpcore/using-the-sdk/pages-webparts.html#working-with-text-parts page.AddControl(page.NewTextPart(\u0026#34;\u0026lt;p style=\u0026#34;text-align:center\u0026#34;\u0026gt;\u0026#34; + \u0026#34;\u0026lt;span class=\u0026#34;fontSizeSuper\u0026#34;\u0026gt;\u0026#34; + \u0026#34;\u0026lt;span class=\u0026#34;fontColorRed\u0026#34;\u0026gt;\u0026#34; + \u0026#34;\u0026lt;strong\u0026gt;PnP Core SDK Rocks!\u0026lt;/strong\u0026gt;\u0026#34; + \u0026#34;\u0026lt;/span\u0026gt;\u0026#34; + \u0026#34;\u0026lt;/span\u0026gt;\u0026#34; + \u0026#34;\u0026lt;/p\u0026gt;\u0026#34;), page.Sections[0].Columns[0]); // Save the page await page.SaveAsync(\u0026#34;Awesomeness.aspx\u0026#34;); // Publish the page await page.PublishAsync();  The code fragment is a simple example of using the Modern Pages support, by doing the following:\n Creating a modern page Setting the header of the page Adds a one column section to the page Adds a text web part to the page with some simple formatting, to the new section in the first column. Saving the page Publishing the page  If you want to dive deeper into how to use the SDK when working with Modern Pages, there is documentation on the site that covers adding web parts, configuring the header, publishing and promoting pages and multi-lingual support. Once written, Hit F5, log in and see the result:\n   What\u0026rsquo;s Next So, you have written the app, what\u0026rsquo;s next, if you want a further examples and a video walkthrough, checkout the short video by Paolo Pialorsi (one of the major authors of the SDK) on PiaSys Tech Bites, \u0026ldquo;Welcome PnP Core SDK\u0026rdquo; with a fantastic demo (no spoilers here) - https://www.youtube.com/watch?v=ozqN5-Yh5cM\nCheck out these great resources to help you build your solutions:\n For understanding how the PnP Core SDK fits in the picture of the wave of uplifts by the team check out - How the new wave of libraries from Microsoft 365 PnP will change the way you modernize SharePoint (p... The PnP Core SDK site with guidance on using the SDK, API level documentation, how to contribute and samples - Getting started with the PnP Core SDK | PnP Core SDK Want to contribute, have an issue, bug, feature suggestion \u0026ndash; please engage with using the project site on GitHub - pnp/pnpcore | github.com  There is still plenty to do in the SDK, if you want to contribute to this open source repository, you are most welcome to, we have tagged areas in the issues list for areas we are looking for help with, please reach out either on social media, via GitHub to connect and support you getting started.\nEnjoy!\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-118/images/Thumb-Ep118_hud7bcbea9b301170368d0aa1f773281a6_505295_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/getting-started-with-pnp-core-sdk/","tags":["PnP Core SDK"],"title":"Getting started with PnP Core SDK"},{"categories":["Office add-in developer community call"],"contents":"Call summary This month\u0026rsquo;s community call features presentations on Excel JS API v1.13 updates, PowerPoint ribbon updates, UX changes for Outlook add-ins on the web and Discussion on building for the Microsoft 365 ecosystem. Discussion focused on ways Microsoft can help developers to be more successful building on the M365 ecosystem. 9 enabling components of a M365 Customer Success Developer Journey were presented. This month\u0026rsquo;s Community spotlight recognizes MVP Maarten van Stam. Thank you! Q\u0026amp;A in chat throughout call. The call was hosted by David Chesnut (Microsoft). Microsoft Presenters include: Raymond Lu, Lillian Liu, Hitesh Manwar, Nikhil Verma, Ying Hao. Recorded on March 10, 2021.\nTopic Summaries Excel JS API v1.13 updates - Excel APIs are in Preview today, targeting GA release in July. The APIs are presently available in Script lab, include Dependent, Workbook, Range/Table, Event, Pivot Layout and Table style. Quick demos today on Range/Table APIs. Feedback on preview APIs requested.\nPowerPoint ribbon updates - available in Office Online week of March 15th, Desktop and Mac in May+. New features shown \u0026ndash; Allowing native controls, Setting tab location (to any location you want), and Setting focus for a tab. All functions accomplished in manifest with new elements. UX changes for Outlook add-ins on the web - whenever an Admin installs an add-in, the user will now see a one-time nudge informing them that a new item has been installed and prompts the user to customize the settings as necessary. UX changes release to OWA commercial users April 2021. Discussion on building for the Microsoft 365 ecosystem \u0026ndash; focused on how Microsoft can help developers to be more successful with M365 ecosystem. 9 enabling components of a M365 Customer Success Developer Journey shown. Join the ongoing discussion at M365 Customer Success Platform Panel   Resources:  Documentation - Integrate built-in Office buttons into custom control groups and tabs  Documentation - Position a custom tab on the ribbon   Actions:   Join - Microsoft Customer Success Platform - User Research Panel to be part of M365 customer success platform panel and share your challenges/ideas on M365 adoption \u0026amp; success. Also you may email the presenters from the Customer Success Engineering Team directly - yinghao@microsoft.com, nikhilv@microsoft.com   Recurrent Invite - https://aka.ms/officeaddinscommunitycall\n  Link to all Microsoft Developer Community calls - https://aka.ms/M365DevCalls\n  Submit questions for next community call - https://aka.ms/officeaddinsform General Resources: (referenced in every call, blog post only):\n  Office Developer Community help: https://developer.microsoft.com/office (Office-js-docs-pr, PnP-OfficeAddins)   Office Add-ins documentation | aka.ms/office-add-ins-docs\n  Office Scripts | aka.ms/office-scripts-docs\n  Microsoft 365 Developer Program | https://aka.ms/M365devprogram   Script Lab | https://aka.ms/getscriptlab   [Office Add-ins documentation |]{.underline} https://aka.ms/office-add-ins-docs{.underline}\n  Stack Overflow (questions) | https://stackoverflow.com (office-js, outlook-web-addins, office-scripts)\n  GitHub (issues) | https://github.com/OfficeDev/office-js\n  UserVoice (feature requests) | https://officespdev.uservoice.com Stay connected \u0026ndash; (all groups) (Blog and YouTube posts)\n  Twitter https://twitter.com/microsoft365dev​\n  YouTube https://aka.ms/M365DevYouTube **Q\u0026amp;A (Question \u0026amp; Answers): **\n  We welcome you to submit questions and topic suggestions prior to each call by using our short survey form. Excel API updates for 1.13*** ***\nQ: Will insertWorksheetsFromBase64 preserve formula references between worksheets? A: Yes, it will preserve formula references between worksheets if reference worksheets are copied as well. Please test this out while it is in preview. Q: Will the insertWorksheetsFromBase64 API work on both Excel on Windows and on the web? A: Yes, the insertWorksheetsFromBase64 API will work for Excel on Windows, Excel on Mac, and Excel on the web. PowerPoint ribbon update*** ***\nQ: Are the PowerPoint ribbon updates just for PowerPoint? A: Our goal is to make sure our user experience features are consistent across all hosts. Currently, these updates are only available in PowerPoint. Q: Can you bring in a ribbon item, that isn\u0026rsquo;t in one of the default tabs, into your own tab? A: You can bring in any native feature that is currently supported. See the following list representing all controls that are currently supported and visible on the Office ribbon: https://github.com/OfficeDev/office-control-ids. Q: What are the future plans for the shapes API on PowerPoint? A: We have some of the shapes API in preview documented in the article PowerPoint JavaScript preview APIs. We also have some additional APIs planned around adding shapes, textbox and tags to shapes. We don\u0026rsquo;t have a concrete timeline yet. *Miscellaneous questions\nQ: Is there a timeline for support of the message compose command surface on Outlook for mobile? A: Compose scenarios are on the backlog, but we do not have an ETA yet. Q: In the February call, you mentioned the registry key option to disable web-plugins for Outlook on Windows. Where can we find documentation on what registry keys to set and where? A: We haven\u0026rsquo;t yet documented the Group Policy (\u0026quot;Deactivate Outlook web add-ins whose equivalent COM or VSTO add-in is installed\u0026quot;) that configures this behavior. However, it will be added to the article Make your Office Add-in compatible with an existing COM add-in. ","image":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-march-10-2021/images/M365ScuccessJourney_hu6239379e4faa3ef382321cde31f5ed80_266755_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/office-add-ins-community-call/office-add-ins-community-call-march-10-2021/","tags":[],"title":"Office Add-ins community call -- March 10, 2021"},{"categories":["Community post"],"contents":"Have you ever wished that you could turn your boring old SharePoint list, full of useful data as it may be, into something with a little more pizzazz? And not just the simple (but highly effective) conditional formatting that SharePoint can give you for free, but something truly outside of the box.\nContinue reading to learn how to turn this.\u0026hellip;\n   \u0026hellip;into something like this\u0026hellip;\n   What do you need to get started? Thankfully, custom formatting isn\u0026rsquo;t terribly complicated, although it does take some getting used to. The only thing you\u0026rsquo;ll absolutely need is a modern SharePoint list with some columns, a basic understanding of JSON (this post has you covered), and some patience. You\u0026rsquo;ll also need to know that you can customize most, but not all, column types in SharePoint online. As of this writing, you cannot customize the following field types: Managed Metadata, Filename (in Document Libraries), Retention Label, Sealed columns, Multi-line text column with enhanced rich text. If you have it, some experience with HTML and CSS will come in handy, as would a little familiarity with Excel style functions, but none of it is required to just get started. If you haven\u0026rsquo;t already, you may also want to at least scan through the official documentation for column formatting to get yourself acquainted with the schema used.\nSchema Basics The key to creating your custom column formatting will be in understanding the basics of the JSON schema used to define your presentation. Basically, what you\u0026rsquo;re attempting to do is describe some basic HTML elements and CSS styles using JSON. Every definition will follow the same basic pattern: An object representing an HTML element, with optional attributes, CSS styling, and child elements. { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;Game\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;font-size\u0026#34;: \u0026#34;48px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;red\u0026#34; } }  In the above sample, we\u0026rsquo;re defining our object as an HTML div element. A div is just a container for other HTML elements, such as text, images, links or even other divs. There are other valid values for \u0026ldquo;elmType\u0026rdquo; as well, such as \u0026lsquo;span\u0026rsquo;; \u0026lsquo;button\u0026rsquo;; and \u0026lsquo;img\u0026rsquo;; just to name a few. In the case here, we\u0026rsquo;re also declaring that our div has an attribute named \u0026ldquo;iconName\u0026rdquo; with a value of \u0026ldquo;Game\u0026rdquo;. We\u0026rsquo;re also defining the CSS styling we want to use, setting the font size and color to \u0026lsquo;big and red\u0026rsquo;. This definition would turn any column in our list into the below.   Our definition only has one element being defined. If all we wanted to do was display the icon, then we\u0026rsquo;re all set. But what if we also want to show the text content that was originally being displayed as well? { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;48px\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;block\u0026#34;, \u0026#34;text-align\u0026#34;: \u0026#34;center\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;Game\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;font-size\u0026#34;: \u0026#34;48px\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;red\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;@currentField\u0026#34; } ] }  With this, we\u0026rsquo;ve changed our root element to act as a container for two children. The first child is the same as the original example. The second child is another div that simply displays the string value of the column, resulting in the following:   Working with text In the last example, we used the txtContent property and the @currentField built-in variable. For basic SharePoint field types, such as text, you can simply do like what was done in that example. However, some field types \u0026ndash; such as people or date fields - may require a little extra work. \u0026ldquo;There and back again\u0026rdquo; to the original example with Frodo, you may have noticed the \u0026lsquo;Age\u0026rsquo; column (yes, Frodo was 50 years old when he leaves on his adventure). Here is the definition used for the transformation shown at the beginning. { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;span\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;@currentField.displayValue\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;font-family\u0026#34;: \u0026#34;Luminari, Papyrus, Brush Script MT\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;28px\u0026#34;, \u0026#34;text-align\u0026#34;: \u0026#34;center\u0026#34; } } Raw value vs Display value Notice how it\u0026rsquo;s using that displayValue property of @currentField? We could have simply done like in the original example and simply referenced the @currentField and have gotten away with it except that it would only display the raw numeric value, such as 1234 (sans comma). By adding the additional property, we\u0026rsquo;re telling SharePoint to \u0026ldquo;give us the text as you would have displayed it\u0026rdquo;. For Frodo, there\u0026rsquo;s no noticeable change, but once we get to some of the longer lived folk in Middle Earth we\u0026rsquo;ll see the difference. Here\u0026rsquo;s a before-and-after of what we get if we omit the property and when we include it\u0026hellip;\n   It\u0026rsquo;s a subtle but impactful difference.\nFont styling You\u0026rsquo;ll also see that we\u0026rsquo;re not using the standard font to display our age. We can use the CSS \u0026lsquo;font-family\u0026rsquo; property to use a non-standard font. In this sample, we\u0026rsquo;ve suggested three different styles of font to use. The browser will attempt to use them in the order specified, falling back to the next on the list if it doesn\u0026rsquo;t know about the first. Not all fonts or font-families may be supported and it\u0026rsquo;s a bit of trial-and-error to find the right one. In general, stick \u0026ldquo;Web Safe Fonts\u0026rdquo; and you\u0026rsquo;ll be alright.\nWorking with People fields Like with number fields, people fields also have a set of extra properties we can use to display different things related to our people. Below is a complete example of a user object. { \u0026#34;id\u0026#34;: \u0026#34;122\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Kalya Tucker\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;kaylat@contoso.com\u0026#34;, \u0026#34;sip\u0026#34;: \u0026#34;kaylat@contoso.com\u0026#34;, \u0026#34;picture\u0026#34;: \u0026#34;https://contoso.sharepoint.com/kaylat_contoso_com_MThumb.jpg?t=63576928822\u0026#34;, \u0026#34;department\u0026#34;:\u0026#34;Human Resources\u0026#34;, \u0026#34;jobTitle\u0026#34;:\u0026#34;HR Manager\u0026#34; }  From this, we can see that that user\u0026rsquo;s display name \u0026ndash; Kayla Tucker \u0026ndash; is stored in the title property and the URL for their profile picture is stored in the \u0026ldquo;picture\u0026rdquo; property. We can use that knowledge (and some CSS) to turn the standard people picker into something with a little more flair.   Here\u0026rsquo;s the JSON definition. { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;column\u0026#34; }, \u0026#34;children\u0026#34;: [ { \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;@currentField.picture\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;ms-borderColor-themePrimary\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;border-width\u0026#34;: \u0026#34;5px\u0026#34;, \u0026#34;border-style\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;15px\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;@currentField.title\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;margin\u0026#34;: \u0026#34;auto\u0026#34;, \u0026#34;font-family\u0026#34;: \u0026#34;Luminari, Papyrus, Brush Script MT\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;1.25em\u0026#34; } } ] }  Our schema defines a parent div with two child elements: an img element and another div for our text. Our image element has an attributes property, which is an object that has two properties defined: src \u0026amp; img. The src property, which is required for all img elements, tells SharePoint where to find the image, which we\u0026rsquo;re specifying as the location for the picture property of the user field. The other property, class, is available for all elements and allows us to specify a particular CSS class to the element. In this case, we\u0026rsquo;re telling it to use one of the built-in CSS classes available in SharePoint. Using these, we can support using theme colors without worrying about what happens when someone changes the current theme.\nWorking with expressions There will be plenty of cases where we need to use some programmatic logic to accomplish your goals. Let\u0026rsquo;s look at our \u0026ldquo;Race\u0026rdquo; column example. Among members of the Fellowship of the Ring are representatives of five of the different races that populate Middle Earth: Ainur, Elf, Dwarf, Human and Hobbit. We have a choice column to represent the valid options for our members but, rather than simply display the name of the race, let\u0026rsquo;s see how we make the following transformation.   Here\u0026rsquo;s the definition: { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;48px\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;=@currentWeb + \u0026#39;/SiteAssets/RaceIcons/\u0026#39; + @currentField + \u0026#39;.svg\u0026#39;\u0026#34;, \u0026#34;alt\u0026#34;: \u0026#34;@currentField\u0026#34; } }  We\u0026rsquo;ve taken some images, which were found \u0026ndash; and purchased \u0026ndash; a website (there\u0026rsquo;s a link included in the resources section at the end of this post), and uploaded them into a folder named \u0026ldquo;RaceIcons\u0026rdquo; inside of the standard Site Assets library on my SharePoint site. They\u0026rsquo;re also named exactly the same as the available choices in the Race field on our list. By structuring my pictures in this way, I can use an Excel-style expression to display the right image for the selected race with little effort.\nWorking with multi-valued fields Many fields in SharePoint allow the selection of multiple values, such as lookups, people and choice columns. In these cases, we need to use a special attribute named forEach. Let\u0026rsquo;s look at our Weapons multi-choice field transformation to see how this works. Perhaps my favorite character to see battling it out on screen was Gandalf. Watching him swinging a sword and staff around was really exciting, so we\u0026rsquo;ll use him as our example. \\\n   Here\u0026rsquo;s our definition. { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;children\u0026#34;: [{ \u0026#34;forEach\u0026#34;: \u0026#34;weapon in @currentField\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;=@currentWeb + \u0026#39;/SiteAssets/WeaponIcons/\u0026#39; + [$weapon] + \u0026#39;.svg\u0026#39;\u0026#34;, \u0026#34;alt\u0026#34;: \u0026#34;[$weapon]\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;32px\u0026#34;, \u0026#34;margin\u0026#34;: \u0026#34;auto\u0026#34; } }] }  Like the previous example, we\u0026rsquo;ve loaded up some images in well-known location, and we\u0026rsquo;ve made sure that we\u0026rsquo;ve named our image files the same as the corresponding choices available in the choice field. What\u0026rsquo;s special here is the use of the forEach attribute. The value \u0026ldquo;weapon in @currentField\u0026rdquo; tells SharePoint \u0026ldquo;Hey, for each selected option, create a copy of this element\u0026rdquo;; in this case, our image element. You\u0026rsquo;ll also notice that in our src attribute, instead of using the @currentField built-in, we\u0026rsquo;re using the [$weapon] variable. Whatever text you put in front of \u0026ldquo;in @currentField\u0026rdquo; will be your variable name, so if we had said \u0026ldquo;thing in @currentField\u0026rdquo;, our variable would be [$thing].\nDealing with conditions Plenty of times, you\u0026rsquo;ll want to render things differently based on certain conditions. SharePoint offers a lot built-in support for conditional formatting if all you need to do is change the text or background color. A common example would be to set the background or font color of a \u0026ldquo;Due Date\u0026rdquo; field to red if the date has passed. If you need something more, though, we can use the if function in an expression in our custom formatting. In our example, the Role field is a simple text field used to describe what role the member had within the group, but rather than display that text we want to display a different Fabric icon depending on the role.   And here\u0026rsquo;s the definition. { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;48px\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;48px\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;32px\u0026#34;, \u0026#34;background-color\u0026#34;: \u0026#34;green\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;white\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;margin\u0026#34;: \u0026#34;auto\u0026#34; }, \u0026#34;attributes\u0026#34;: { \u0026#34;iconName\u0026#34;: \u0026#34;=if(@currentField == \u0026#39;Ring-bearer\u0026#39;, \u0026#39;StatusCircleRing\u0026#39;, if(@currentField == \u0026#39;Guardian\u0026#39;, \u0026#39;Shield\u0026#39;, if(@currentField == \u0026#39;Melee\u0026#39;, \u0026#39;DecisionSolid\u0026#39;, \u0026#39;Bullseye\u0026#39;)))\u0026#34; } }] }  For the iconName property value, we\u0026rsquo;re using an if expression to walk through the possible conditions until we find the right one. The if expression is straightforward: if( \u0026lt;condition to evaluate\u0026gt;, \u0026lt;value if true\u0026gt;, \u0026lt;value if false\u0026gt;). Where it gets a little difficult is when you have multiple conditions, like we do in our example. In our example, all but the last condition have another if statement for the \u0026ldquo;value if false\u0026rdquo; part. To read our statement in English would go something like this: \u0026ldquo;If \u0026lsquo;role\u0026rsquo; is equal to \u0026lsquo;Ring-bearer\u0026rsquo;, then use the \u0026lsquo;StatusCircleRing\u0026rsquo; icon. Otherwise, if \u0026lsquo;role\u0026rsquo; is equal to \u0026lsquo;Guardian\u0026rsquo;, then use the the \u0026lsquo;Shield\u0026rsquo; icon. Otherwise, if \u0026lsquo;role\u0026rsquo; is equal to \u0026lsquo;Melee\u0026rsquo;, then use the \u0026lsquo;DecisionSolid\u0026rsquo; icon. Otherwise, just use the \u0026lsquo;Bullseye\u0026rsquo; icon\u0026rdquo;.\nA final example For our final example, we\u0026rsquo;ll look at the last column in our list: From. The From column is a lookup column that references list items in a Middle Earth Locales list.   And the definition... { \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json\u0026#34;, \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;display\u0026#34;: \u0026#34;flex\u0026#34;, \u0026#34;flex-direction\u0026#34;: \u0026#34;column\u0026#34;, \u0026#34;text-align\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;font-family\u0026#34;: \u0026#34;Luminari, Papyrus, Brush Script MT\u0026#34;, \u0026#34;font-size\u0026#34;: \u0026#34;18px\u0026#34; }, \u0026#34;children\u0026#34;: [{ \u0026#34;elmType\u0026#34;: \u0026#34;img\u0026#34;, \u0026#34;attributes\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;=@currentWeb + \u0026#39;/SiteAssets/MiddleEarthLocales/\u0026#39; + @currentField.lookupValue + \u0026#39;.jpg\u0026#39;\u0026#34; }, \u0026#34;style\u0026#34;: { \u0026#34;height\u0026#34;: \u0026#34;48px\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;48px\u0026#34;, \u0026#34;border-width\u0026#34;: \u0026#34;3px\u0026#34;, \u0026#34;border-style\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;border-color\u0026#34;: \u0026#34;=if(@currentField.lookupValue == \u0026#39;The Shire\u0026#39;, \u0026#39;brown\u0026#39;, if(@currentField.lookupValue == \u0026#39;Rivendell\u0026#39;, \u0026#39;purple\u0026#39;, if(@currentField.lookupValue == \u0026#39;Osgiliath\u0026#39;, \u0026#39;grey\u0026#39;, if(@currentField.lookupValue == \u0026#39;Mirkwood Forest\u0026#39;, \u0026#39;green\u0026#39;, if(@currentField.lookupValue == \u0026#39;Blue Mountains\u0026#39;, \u0026#39;blue\u0026#39;, \u0026#39;gold\u0026#39;)))))\u0026#34;, \u0026#34;border-radius\u0026#34;: \u0026#34;100px\u0026#34; } }, { \u0026#34;elmType\u0026#34;: \u0026#34;div\u0026#34;, \u0026#34;txtContent\u0026#34;: \u0026#34;@currentField.lookupValue\u0026#34; } ] }  There\u0026rsquo;s not much new in this example, aside from the use of a lookup field and its lookupValue property to display the value (there\u0026rsquo;s also a lookupId property available, if you need it) but it does illustrate how we can take all of the previous tactics to create something unique.\nOne DOES simply create awesome list visuals We\u0026rsquo;ve been through all of our columns and we\u0026rsquo;ve covered all of the basic building blocks for creating amazing visuals and really spicing up the life of our list data, creating a great little breakdown of information related to members of the Fellowship with interesting visuals and colors.   Now that you\u0026rsquo;ve seen it all come together, time to get out there and start your own journey!\nAdditional Resources While this post was pretty long, it still couldn\u0026rsquo;t quite cover everything out there. Below are some additional resources you may find useful.\n Examples Repository (github.com) \u0026ndash; My repository containing all of the JSON definitions shown in this blog, as well as a PnP provisioning template you can use to provision everything. Use column formatting to customize SharePoint | Microsoft Docs \u0026ndash; The official documentation for custom column formatting. Flicon - Fluent UI Icon Search\u0026ndash; A super handy tool for finding the right Fabric UI icon. SharePoint List Formatting Samples (pnp.github.io) \u0026ndash; A PnP community driven repository of custom column \u0026amp; view formatting samples. A great place to go to get inspired, or look for other samples if Hobbits aren\u0026rsquo;t your thing. Iconfinder.com \u0026ndash; This is the site I used to purchase the icons shown for weapons and races.  ","image":"https://pnp.github.io/blog/post/getting-started-with-sharepoint-s-custom-column-formatting/images/Will_Holland_0-1615739594928_hu1e922ef1a9cf37e5246d035494efd1d7_29599_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/getting-started-with-sharepoint-s-custom-column-formatting/","tags":["Microsoft lists","SharePoint","List formatting"],"title":"Getting started with SharePoint's custom column formatting"},{"categories":["CLI for Microsoft 365"],"contents":"We are delighted to announce that CLI for Microsoft 365 Docker images are now available to download and use from the Docker Hub. If this doesn\u0026rsquo;t mean a lot to you right now, then let me explain why we feel this is a big deal.\nDocker enables us to bundle a pre-configured version of CLI for Microsoft 365 together with all its required dependencies into a publicly downloadable image, which you can then use to create an isolated environment on your local machine, called a container, where you can use the CLI for Microsoft 365 without cluttering your machine with dependencies, and all performed by executing just a single command. Sounds great, right? So how do you get started? Firstly, you will need to have Docker installed and running on your host machine, to do that, checkout the guides over in the Docker documentation, its free and can be installed on any operating system. Once you have Docker running on your machine, open up your command prompt of choice and run the below command.\ndocker run --rm -it m365pnp/cli-microsoft365:latest This command will instruct the Docker engine running on your host machine to start a container using an image called m365pnp/cli-microsoft365, as the :latest tag is specified we are also telling the engine to get the image which contains the latest stable version of the CLI. As the image won\u0026rsquo;t exist on your host machine yet, Docker will automatically download the image from the Docker Hub, where our images are publicly available, then start a new container which invoking an interactive terminal session inside the container, this is determined by the presence of the -it switch in the docker run command.\n   By default, the interactive terminal that is opened is a bash shell, however if you prefer using PowerShell then thats fine, we have you covered as we also bundle PowerShell 7 as part of the image.\nIf you want to use PowerShell, simply add pwsh{.language-plaintext .highlighter-rouge} to the end of the docker run{.language-plaintext .highlighter-rouge} command and you will get a PowerShell session instead.\ndocker run --rm -it m365pnp/cli-microsoft365:latest pwsh    Now that you are at the interactive terminal, you can now invoke any CLI for Microsoft 365 command using the m365{.language-plaintext .highlighter-rouge}prefix as it is already installed, to help you, we have even pre-configured tab command completion for you in both bash and PowerShell. Neat right.\n   When you are done with your session, just type exit and your interactive terminal will be closed and with that, the isolated container will also be stopped and removed, freeing up resources on your host machine, this is determined by the presence of the --rm{.language-plaintext .highlighter-rouge} switch in the docker run{.language-plaintext .highlighter-rouge} command.\n   This doesn\u0026rsquo;t mean that the image you just downloaded has been removed as well, this remains on your machine, we just removed the container instance that was started, so when you run the docker run command again, this time you won\u0026rsquo;t need to download the image and just head straight for the interactive terminal. As the container is removed after exiting the interactive terminal, everything stored in the container is removed, this includes any authentication information, therefore when you start a new container you will need to re-authenticate with Microsoft 365. Checkout our guide for more details on how to use these images, including how to get the latest beta releases, update existing images, execute scripts stored on your local machine inside the running container and how to use your own Azure AD identity for connecting to Microsoft 365 from the running container. We also demonstrated how to run CLI for Microsoft 365 in Docker container in the General Microsoft 365 Development Special Interest Group (SIG) - Bi-weekly sync call recorded on February 18, 2021.\nWe will be releasing new beta and stable versions as part of our regular release cadence, so you will be able to use the new version of the CLI for Microsoft 365 in Docker immediately after our release to npm. For a list of available tags, checkout the m365pnp/cli-microsoft365 repository on Docker Hub for the latest images.\n","image":"https://pnp.github.io/blog/post/run-cli-for-microsoft-365-in-docker/images/garrytrinder_0-1615630685864_hue512d7b50ad1281a132c036cc6e1b9d5_180652_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/run-cli-for-microsoft-365-in-docker/","tags":["CLI for Microsoft 365"],"title":"Run CLI for Microsoft 365 in Docker"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"SharePoint Framework Special Interest Group (SIG) bi-weekly community call recording from March 11th is now available from the Microsoft 365 Community YouTube channel at http://aka.ms/m365pnp-videos. You can use SharePoint Framework for building solutions for Microsoft Teams and for SharePoint Online.\nCall summary New Microsoft 365 Extensibility look book gallery preview released. Work continues on Microsoft Viva Connections \u0026ndash; an extensibility model to be previewed in weeks. Register now for March trainings on Sharing-is-caring. Latest project updates include: SPFx v1.12 release \u0026ndash; ETA \u0026ndash; in days. PnPjs Client-Side Libraries v2.3.0 release scheduled for March 12th, v3.0 Hub planning and discussion issues posted - issue 1636. CLI for Microsoft 365 Beta v3.7 delivered. Reusable SPFx React Controls \u0026ndash; v2.5.0 and Reusable SPFx React Property Controls \u0026ndash; v2.4.0 delivered. PnP Modern Search v3.18.0 released March 9th, v4.1 in progress. There were five PnP SPFx web part samples delivered last week. So useful! The host of this call is Patrick Rodgers (Microsoft) @mediocrebowler. Q\u0026amp;A takes place in chat throughout the call.   Actions  Register for Sharing is Caring Events  First Time Contributor Session \u0026ndash; March 22nd (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; March PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; April TBD PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; April TBD PnP \u0026ndash; AMA (Ask Me Anything) \u0026ndash; SPFx Samples Edition \u0026ndash; April 13 First Time Presenter - March 24th More than Code with VSCode \u0026ndash; March 23rd Maturity Model Practitioners \u0026ndash; March 16th PnP Office Hours \u0026ndash; 1:1 session - Register    Download the recurrent invite for this call \u0026ndash; https://aka.ms/spdev-spfx-call  Demos   DataTable web part for rendering data from lists with advance features \u0026ndash; this web part provides an easy way to render an interactive SharePoint custom list in DataTable view with many configuration options in the property pane. Provides all the important table formatting features like: Search \u0026amp; exclude from search, filter, pagination, column selection, column ordering, alternative row formatting, etc. Export the selected table data to CSV or PDF. Uses PnPjs, React property controls.\n  Building List Search web part for showing data flexibly from lists or libraries \u0026ndash; this React list search web part allows the user to show data that\u0026rsquo;s pulled from different lists or libraries on multiple sites into a searchable summary list. Presenter steps through extensive, appropriate configuration options. Functionally - Select source data - sites, lists and fields, and Set up destination (summary) list columns, formatting, filtering, and on-select dynamic data functionality. Full documentation with sample.\n  Using a web part to control which Sites have been granted permissions in Azure AD application \u0026ndash; the Sites Selected Admin SPFx web part enables Site Collection Admins to check which in scope apps have been added to a SharePoint site, to list Azure AD registered apps using Microsoft Graph API scope, and to add SharePoint sites to the Azure AD listed Apps. Uses functional components to granularly control apps accessing their SharePoint sites using Microsoft Graph APIs.   SPFx extension samples: (https://aka.ms/spfx-extensions)\n No new or updated extensions last week  SPFx web part samples: (https://aka.ms/spfx-webparts)\n  Data Table - Chandani Prajapati | @Chandani_SPD   Feedback - Abderahman Moujahid\n  Search Directory - Abderahman Moujahid\n  Sites Selected Admin - Fredrik Thorild | @taxonomythorild\n  Security Grid - Russell Gove | @russgove\n  As is the case this week, samples are often showcased in Demos. Thank you for your great work.\nAgenda items  Latest updates on SharePoint Framework - Vesa Juvonen (Microsoft) | @vesajuvonen \u0026ndash; 5:30 PnPjs Client-Side Libraries - Julie Turner (Sympraxis Consulting) | @jfj199 \u0026ndash; 8:16 CLI for Microsoft 365 - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 10:33 PnP SPFx Controls - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 11:31 PnP SPFx Generator - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 12:25 PnP Modern Search - Patrick Rodgers (Microsoft) | @mediocrebowler \u0026ndash; 13:07 PnP SPFx Samples - Hugo Bernier (Tahoe Ninjas) | @bernierh \u0026ndash; 13:42  Demos :\n DataTable web part for rendering data from lists with advance features \u0026ndash; Chandani Prajapati | @Chandani_SPD \u0026amp; David Warner | @DavidWarnerII \u0026ndash; 16:45 Building List Search web part for showing data flexibly from lists or libraries \u0026ndash; Alberto Gutierrez Perez (Minsait) | @albertogperez \u0026ndash; 28:00 Using a web part to control which Sites have been granted permissions in Azure AD application \u0026ndash; Fredrik Thorild (Sogeti) | @taxonomythorild \u0026ndash; 35:50  Resources Additional resources around the covered topics and links from the slides.\n  The presentation used for this community call\n  Gallery - Microsoft 365 Extensibility look book gallery   Repo - SharePoint Framework DataTable web part sample   Samples - SharePoint Framework Client-Side Web Part Samples   Repository - Reusable React controls for your SharePoint Framework solutions   Repo - List Search   Blog - Controlling app access on a specific SharePoint site collections is now available in Microsoft Graph   Repo - Sites Selected Admin client-side web part   Documentation - Permission resource type   Video \u0026ndash; Requesting API Permissions in Azure   PnP Weekly \u0026ndash; Episode 117 with guest Bert Jansen (Microsoft) | @o365bert | video | podcast\n  Microsoft 365 Developer Podcast \u0026ndash; March 8, 2021, with guest Stephan Bisser (Solvion) | @stephanbisser | podcast   Viva Connections https://aka.ms/VivaConnections   General resources  CLI for Microsoft 365 v3 CodeTour Sharing is Caring | aka.ms/sharing-is-caring PnP Modern Search | aka.ms/pnp-search M365 PnP site | aka.ms/m365pnp SharePoint Starter Kit v2 Blog: \u0026ldquo;A Lap Around Microsoft Graph Toolkit\u0026rdquo; blog series New Microsoft 365 Patterns and Practices (PnP) team model with new community leads Microsoft 365 Community Content (non-Dev docs) PnP SPFx web part samples PnP SPFx extension samples GitHub PnPjs Tutorials - Getting started with SharePoint Framework v1.10 Tutorials (12 videos) Tutorials - Getting started with SharePoint Framework v1.10 Extensions (6 videos) Docs - Tutorials and training material for SharePoint Development SPFX Training Package SPFx Web Parts SPFx Extensions SPFx Library Components Documentation - PnPjs v2 documentation Link - Microsoft 365 developer training Link - Office 365 Developer Program Latest documentation on SharePoint Framework Found an issue with SharePoint Dev? - please let us know at http://aka.ms/spdev-issues Reusable web part property controls Reusable react controls for SharePoint Framework solutions Reusable controls webcast Office 365 CLI PnP SPFx Yeoman Generator - Extends the out-of-the-box experience with open-source community capabilities SharePoint Dev UserVoice - for new feature requests  Other mentioned topics\n SharePoint dev documentation SharePoint dev issue list  Upcoming Calls | Recurrent Invites  Microsoft Teams monthly call \u0026ndash; March 16th at 8:00am PDT | https://aka.ms/microsoftteamscommunitycall Power Apps monthly call - March 17th at 8:00am PDT | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call \u0026ndash; March 18th at 07:00am PDT | https://aka.ms/m365-dev-sig SharePoint Framework call \u0026ndash; March 25th at 07:00am PDT | https://aka.ms/spdev-spfx-call Microsoft Graph call - April 6th at 8:00am PDT | https://aka.ms/microsoftgraphcall SharePoint monthly call \u0026ndash; April 9th at 08:00am PDT | https://aka.ms/sp-call Office add-in monthly call \u0026ndash; April 10th at 8 AM PDT | https://aka.ms/officeaddinscall Adaptive Cards monthly call \u0026ndash; April 11th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall  PnP SharePoint Framework Special Interest Group bi-weekly calls are targeted at anyone who is interested in the JavaScript-based development towards Microsoft Teams, SharePoint Online, and also on-premises. SIG calls are used for the following objectives.\n SharePoint Framework engineering update from Microsoft Talk about PnP JavaScript Core libraries Office 365 CLI Updates SPFx reusable controls PnP SPFx Yeoman generator Share code samples and best practices Possible engineering asks for the field - input, feedback, and suggestions Cover any open questions on the client-side development Demonstrate SharePoint Framework in practice in Microsoft Teams or SharePoint context You can download a recurrent invite from https://aka.ms/spdev-spfx-call. Welcome and join the discussion!  \u0026ldquo;Sharing is caring\u0026rdquo;\n Microsoft 365 Patterns and Practices team - 12th of March, 2021\n","image":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-recording-11th-of-march-2021/images/PictureTime-OutsideInTheGreenAmphitheater_huacf1c9485e1550e28152d40f0d8b4aac_2891655_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-viva-and-spfx-community-call/sharepoint-framework-community-call-recording-11th-of-march-2021/","tags":[],"title":"SharePoint Framework Community Call Recording -- 11th of March, 2021"},{"categories":["Community post"],"contents":"After I blogged about How to send Adaptive Cards with CLI for Microsoft 365 and also used CLI to compare different ways to create SharePoint lists, I found some more commands that made me fall in love with it. CLI for Microsoft 365 has three main benefits from my point of view:\n it\u0026rsquo;s platform-agnostic and even works on Azure Cloud Shell so that every browser can be my admin machine the syntax is easy and almost intuitive to use for me, although I only start to not use the UI for everything I want to manage in my Microsoft 365 tenant documentation is clear and concise with excellent code samples.  Bonus: Caring maintainers and awesome contributors\nIn case you never used CLI for Microsoft 365 before, please first read how to get started with CLI Microsoft 365 where I explain how to install the CLI.\nMy screenshots will show that I work in PowerShell in Visual Studio Code, but you can use any other shell you like to use.\nGet a list of Power Apps Wouldn\u0026rsquo;t it be nice to get a list of apps? This is what I thought as well. We will look into the CLI for Microsoft 365 documentation find the command to list all Power Apps in this tenant, which gives us an idea, what makers are doing to be able to offer help and support as well.\nAfter having installed CLI and logged in:\nRun m365 pa app list\nwhich will get you exactly that list - with internal names and display names:\n   Get an overview of custom connectors in an environment If we allowed makers to build their custom connectors to fulfill their unique needs, we might want to look at that as well. If you never create a custom connector, you can read my blog post about how to build a custom connector.\nRun m365 pa environment get --name Default-\u0026lt;name of your default environment\u0026gt;\nNow, where do we get this \u0026lt;name of your default environment\u0026gt; from? This is your tenant ID, which you can obtain from the URL of any Power App running in this environment, or you can copy it from portal.azure.com, where you will find it in Azure Active Directory as Tenant ID.\n    Copy this Tenant ID Replace \u0026lt;name of your default environment\u0026gt; with this Tenant ID Run the command  Get a list of users Obtaining a list of users on a specific SharePoint website will be helpful to get their IDs.\nRun m365 spo user list --webUrl \u0026quot;https://m365princess.sharepoint.com/sites/m365princess\u0026quot;by replacing my webUrl with the tenant you are logged in and a site URL you want to query.\nThe response will be something like this:\n   Get a list of external users Another cool starting point is to get a list of external users. As internal users tend to invite many guests, it could help have an overview of external users and see when these external users were created. You can also obtain the ID of users.\nRun m365 spo externaluser list,\n   remove users With\nm365 spo user remove --webUrl \u0026quot;https://contoso.sharepoint.com/sites/HR\u0026quot; --id 10 --confirm\nwe can remove users.\nFeedback \u0026amp; What\u0026rsquo;s next? I hope that you now got an idea of how you can get started with CLI for Microsoft 365 :) Shall I blog more about it and show even more commands? Still, I am curious, what would you use it for? Which are the commands that you use every single day? Please comment below!\n","image":"https://pnp.github.io/blog/post/5-commands-to-try-in-cli-for-microsoft-365-to-fall-in-love-with/images/list-pa_hu55e89e652655d10c5d520e1758a04b4d_102220_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/5-commands-to-try-in-cli-for-microsoft-365-to-fall-in-love-with/","tags":["CLI for Microsoft 365"],"title":"5 commands to try in CLI for Microsoft 365 to fall in love with it"},{"categories":["Community post"],"contents":"With Power Apps, we can rapidly build custom business applications that connect to our business data in a low code manner. This means that not only professional developers can develop applications but that a lot more people will be able to make apps that fit their specific use cases.\nBut as development is not only writing code, there are certainly some things we should do before we hit make.powerapps.com. Many developers will agree that development is 20% about writing code and 80% about communications (meetings, gathering requirements, adjusting things).\nIf we now introduce \u0026rsquo;low code development\u0026rsquo;, we work on these 20%, not on those 80%.\nThe issue with that is that the narrative of \u0026rsquo;everyone should make apps\u0026rsquo; doesn\u0026rsquo;t reflect that there is much content out there to teach business users how to use controls, components, connectors, and ask the community when in doubt which function they should use. But there is about near to zero guidance around making better decisions about how we should approach building apps. Regardless of by whom it is developed, every app needs to be documented, maintained, and supported. Pro-developers are very aware of this, as DevOps is what they live and breathe every single day. But apart from IT departments, who will need to care about governance, application lifecycle management, etc., there are some things on the business user side that we should consider.\nThis post will list ten things that we should think about before we start building our apps\n1- which problem does the app solve? This sounds obvious that one would first do a proper analysis of value proposition and if the app they have in mind is a must-have solution to a specific business case or if it\u0026rsquo;s more or less \u0026lsquo;yet another thing to use\u0026rsquo;, although there are working alternatives in place.\nunderstand your market Let us take some time to segment our market and understand who (even if we build for our colleagues) needs our app. There will be roles that will rely on our app, and it will become mission-critical to them. Others will have already found applications that do similar things, or the app doesn\u0026rsquo;t solve a relevant problem. We can specifically look at underserved groups, such as blue-collar workers, and see if we can address their needs. Becoming obsessed with solving specific needs without assumptions is critical here. This means that we will need to validate the market that we have in mind. Even if we consider ourselves a business user/power user /citizen developer, doesn\u0026rsquo;t necessarily mean that we are our user and precisely know what they need.\npsychological strain vs. energy of change To make users love an app, we will need to solve their pains or address their needs and make it not too hard for them to change their behavior. If the energy they will need to change their behavior is higher than the psychological strain they face right now, they will not adopt your app. It\u0026rsquo;s unfortunately as simple as that.\n2- calculate value Now you have a fair idea of who will use your app for which use cases and also know what users are doing now:\n  abuse other tools\n  work on paper\n  purchase 3rd party tools\n  use unapproved shadow IT tools\n  and to which results this leads\n  be busy with tasks that don\u0026rsquo;t add value\n  lose information\n  cause additional costs\n  severe risks in terms of data security, governance, compliance etc.\ntl;dr: it costs time \u0026amp; money\n  But we need to make an effort to calculate the higher costs in terms of money and time and make an estimation for the next 12 or 24 months in order. This will also help with any approval process/ get funding. If the app we have in mind doesn\u0026rsquo;t create (enough) value, we can take this as a learning opportunity better to meet the needs of our (internal) customers.\nThe goal is to provide more value, not to deliver a poorly designed app that costs a little less. Of course, we can build apps \u0026lsquo;for fun\u0026rsquo; or because we want to learn, or \u0026lsquo;just because we can\u0026rsquo;, but we should carefully distinguish those apps from apps that we want to pitch and \u0026lsquo;sell internally\u0026rsquo;.\n3- scope The mother of all questions: Does it scale? Will our app be something for our personal productivity? Ease a workload for a small team? Or do we talk about a mission-critical process? And even if we start with a small group of users to try out, is there a way where a broader audience could want to use it? We need to carefully identify our app\u0026rsquo;s scope, as this will impact many decisions.\n4- data model Let\u0026rsquo;s talk about our data model. Which data source will you need to get data, in which services will you write data? Which dependencies do you have, which other apps, flows, bots will be part of the solution? Of course, the consultant answer on when to use what will always be an \u0026lsquo;it depends\u0026rsquo;, but there are probably more reasons to look into different data sources as you are aware of:\nlicensing As this is a pretty emotionally driven subject, we should handle this some more cool-headed. The idea of first understanding which needs your app solves, who would benefit from it, and how much money and time all users would save together by using it is the licensing discussion\u0026rsquo;s counterpart. Of course, organizations tend not to want to pay for additional licenses, but the idea that one could deliver excellent business value without any costs is somehow romanticized. Incorporate licensing fees for premium connectors (as you need them) in your calculation, and if the app still delivers more value than it costs, we will probably get approval/green lights for it.\nIf the app isn\u0026rsquo;t worth more than ~10$ per month and user, we should probably not be building it.\nperformance The data sources we choose have not only impacted the licensing model but also our apps\u0026rsquo; performance. For instance, if data needs to travel through an on-premises data gateway to a SQL server, most probably, our app will not be as fast as if the data sits in Dataverse. For an elaborated comparison on this and other data sources such as Excel, SharePoint, and more, please read this article about Considerations for optimized performance in Power Apps\ndeveloper and user experience We can also impact the experience you as a developer will have while building the app, depending on the data source. If you ever \u0026rsquo;loved\u0026rsquo; to deal with, for example, lookup columns from a SharePoint list, you will agree that you didn\u0026rsquo;t choose the easiest way to build an app. If you need to find workarounds as a developer, this will impact your user, which means that their experience won\u0026rsquo;t be as good as possible.\n5- delivery Let\u0026rsquo;s say we are about to make.powerapps.com, and we have a fair idea of what to do there to make an app. We will publish our app, share it, and mentally move on to something different. Now, who cares for that app? Who will maintain our app? Things can easily change when we create apps on top of cloud services. This can quickly become a not to be underestimated workload, and probably we as a business user won\u0026rsquo;t have the capacity to cover that. And even if we are not talking about adjusting to things that changed: Who will support our app? Who will answer questions? Who will implement new features?\nDelivery of software should contain code (and yes, this applies to Power Apps) and proper documentation. Sharing knowledge about our app (what we use, inputs, outputs, dependencies, licensing, data model, accessibility, features, etc.) very early by writing it down to enable those who need to maintain and support our solution is essential. Making it a habit to have a changelog, where we document which features we add, remove or change, is crucial. If we think that this is too time-consuming, we should be aware that someone will need to spend more time on fixing the lack of documentation for us. A lack of documentation will create technical debt\n6- what is your minimal l❤vable product? Yes, I mean it! Define your minimal lovable product. If you only heard about a minimal viable product so far, please read this article How to Build a Minimum Loveable Product. In essence? Which features will we need to make users fall in love with our app? We will build this. We will not fall into the rabbit hole of delivering the whole software in one piece but focus on the crucial parts. Once we published our first version, we gather feedback on how we can improve it. Becoming comfortable with a mindset that software is never finished can be a good idea.\n7- mock-up your app Finally- let\u0026rsquo;s talk frontend - how shall our app look like? It\u0026rsquo;s super tempting to start building screens and buttons and decide on colors etc., but we will get a better impression on the big picture of our app if we first do a mock-up. We may choose to use a professional app for that or if we will draw something (I personally do this in OneNote). Defining which screens and buttons and forms and galleries you will need will make the next steps easier.\n8- componentize your app Reinventing the wheel is always painful, and to avoid this, we can think about components in our apps so that we reuse what we (or even others in this environment in the component library) build before. While controls are an excellent way to start learning and understanding how everything works, components are the way to accelerate our process of making apps and make sure that we easily adjust them and don\u0026rsquo;t need to start over again for the next app we are making. It is also the low-code equivalent to the principle of \u0026lsquo;Don\u0026rsquo;t repeat yourself\u0026rsquo;. Thinking upfront about which controls we would repeatedly use and planning to componentize these will ensure that we don\u0026rsquo;t need to start all over again. You can watch April Dunnam\u0026rsquo;s video about componetizing Power Apps to get up to speed.\n9- accessibility Accessibility is nothing that comes on top of a ready-to-publish app but should be one of your core concepts straight from the beginning. The accessibility checker in Power Apps is a good start, but it\u0026rsquo;s always worth exploring even more ideas. We can find lots of guidance on ensuring that more people can benefit from our apps, Microsoft Inclusive Design is an excellent go-to resource.\n10- build in Microsoft Teams As we are more and more working in Microsoft Teams, we should not only build applications for teams, but for (Microsoft) Teams! Considering the context of apps gives you even more ways to satisfy user needs. Coming back to the scope of our app, we need to carefully think if this app is just for our team, or if we want to make it available for the whole organization. Staying in Teams also has an impact on licensing, as you can for instance use Dataverse for Teams, which is then seeded in you Microsoft 365 license.\nConclusion As we could see, there are quite some things to do and think about before we hit make.powerapps.com and I put these together as an approach for good practices. What do you do before you actually start developing? What would you like to add to my list?\nPlease comment below!\n","image":"https://pnp.github.io/blog/post/5-commands-to-try-in-cli-for-microsoft-365-to-fall-in-love-with/images/list-pa_hu55e89e652655d10c5d520e1758a04b4d_102220_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/10-things-we-should-think-about-before-we-build-an-app/","tags":["Power Apps"],"title":"10 things we should think about before we build an app"},{"categories":["Community post"],"contents":"The story  Internally in our team, we did the same. For our Valo partner/client documentation, we used mkdocs as our static site generator. Static is just fast and relatively easy to use. All our developers know how to use Markdown, and it is also a great way to add code snippets and such. A couple of months, we were discussing to start writing some developer guidance. Which tools are we using, how do we do things, and why? The platform\u0026rsquo;s idea would be to make it easier for anyone new to quickly get started and get a good view of how our team works. As this was developer focussed in the first place, we started thinking about a static site. Although we opted for Azure DevOps wiki, as we are thinking about moving towards GitHub, we went for mkdocs. The platform should also consolidate all the documentation that lives in the project repository, wiki, and old intranet (soon to be removed). After a couple of iterations, I asked the question: are we doing the right thing here? Is this platform the right thing to use? After that, I proposed the crazy idea to move all our documentation to SharePoint. The first thought was, it would be hard to maintain. As a developer, you want to add the documentation as quickly as possible so that you can go and focus on your code again. Going to SharePoint meant our developers would have to add multiple web parts on the page (text, images, snippets, \u0026hellip;). That is when the second crazy idea came. What if I create a static site generator for our team?\nDoctor came to life  After that meeting, I did a quick proof of concept with the CLI for Microsoft 365 and Markdown web part in SharePoint. I never saw a real use-case in the web part, but it makes total sense for Doctor. After some fiddling around, and some tests, it would work. All I had to do was create a new CLI for Microsoft 365 command, which allows updating the contents/properties of a web part.  [INFO:] The required command to create was spo page control set. Once I created control set command, my next task was to build an internal tool we could use during a CI/CD. As I saw value for others and as Valo, we want to help others in the community. I made this an open-source project.   [INFO:] The reason for using the CLI for Microsoft is because it is feature-rich, and I do not want to reinvent the wheel. Using the CLI allows the tool to open many more possibilities in the future and build upon the shoulder of giants.\n What makes Doctor great?  The great thing about Doctor is that you can keep the documentation as close to your code as you want. Of course, you do not have only to use it for development projects. You can also use it for other scenarios like documentation and architecture projects. The tool itself will keep the pages up to date on SharePoint. During this process, it does the following:  Check if the page exists. If not, it will create the page Check if the Markdown web part with a specific ID exists. If not, add it Update the Markdown from the current page to the web part   The process is straightforward but so powerful.    [INFO:] Right now, the tool does only create and update. It will not remove any content. I have already added this as an enhancement to the issue list: Specify if you allow pages to be removed on publish #7.\n What makes it great to move your documentation with Doctor to SharePoint?  For us, the move of our documentation to SharePoint has the following advantages:  Dogfooding (as we have an intranet project, it is a great way to dogfood it as well). One platform to rule it all, but still, use the most familiar tools to use. For instance, HR can use SharePoint, but Development can use Markdown, and it all ends up on the same platform. Powerful search capabilities of Microsoft 365 You can modify the page, add web parts to it, change its layout, and so much more as long as you keep the Markdown web part on the page. It will only update that. Your ID department will love it as they can manage security and do not have yet another platform to support it.  Getting started  If you want to get started, check out the documentation on getdoctor.io. Installing the doctor on your machine can be done by running: npm i -g @estruyf/doctor. To make your start as easy as possible, I shared a sample repository for you to use: doctor sample. Clone it, and get started.   What do you think?  Of course, you like your tools and see value in them, but what do you think? Would this be something you see yourself using? Do you face similar challenges in your company when it comes to where to write documentation? Happy to chat about it in the discussion section of the repository.\nFeedback?  In case you have feedback/ideas. Feel free to add them to the discussions section as well.\nCan I contribute?  Yes, you can! It is for the community, so if you see the value and want to add something, please do a PR. I would be pleased to merge it and credit you with our changelog and socials. Showcase how you are using Doctor  If you want, you can also showcase how you are using Doctor in your project/solution/company. Feel free to checkout showcase Doctor to find out more about how you can do this. Happy documenting ","image":"https://pnp.github.io/blog/post/doctor-maintain-your-documentation-on-sharepoint-without-pain/images/doctor1_huf839312134ad13f3bf50439d31b61c18_36555_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/doctor-maintain-your-documentation-on-sharepoint-without-pain/","tags":["CLI for Microsoft 365"],"title":"Doctor - Maintain your documentation on SharePoint without pain"},{"categories":["Community post"],"contents":"When developing your SPFx components, you usually first run them locally before deploying them (really?). And then comes the time to work with API such as Microsoft Graph. If you never use those permissions before in your SPFx projects (and the tenant with which you\u0026rsquo;re working), you realize that you have to:\n Add required API permissions in your package-solution.json file Bundle / Ship your project Publish it Go to the SharePoint Admin Center Web API Permissions page Approve those permissions All of this, just to play with the API as you didn\u0026rsquo;t plan to release your package in a production environment. So what if you could bypass all these steps for both Graph and owned API?  Warning\nThis trick is just for development purposes. In Production environment, you should update your package-solution.json file to add required permissions and allow them (or ask for validation) in the API access page.\nPrerequisites  An Office 365 (Dev) Tenant or a Partner Demo Tenant The following Azure AD role at least  Application Administrator    With Graph API First, we\u0026rsquo;re going to play with Graph API through the Microsoft Graph Toolkit.\nPrepare your sample Init a SPFx project (WebPart one with React, let\u0026rsquo;s call it HelloApi), then add the Microsoft Graph Toolkit by executing npm i @microsoft/mgt @microsoft/mgt-react from the project\u0026rsquo;s root path. Once done, open your main component file (let\u0026rsquo;s say here HelloApi.tsx) and add the PeoplePicker component like this:\nimport * as React from \u0026#39;react\u0026#39;; import styles from \u0026#39;./HelloApi.module.scss\u0026#39;; import { IHelloApiProps } from \u0026#39;./IHelloApiProps\u0026#39;; import { escape } from \u0026#39;@microsoft/sp-lodash-subset\u0026#39;; import { PeoplePicker } from \u0026#39;@microsoft/mgt-react\u0026#39;; export default class HelloApi extends React.Component\u0026lt;IHelloApiProps, {}\u0026gt; { public render(): React.ReactElement\u0026lt;IHelloApiProps\u0026gt; { return ( \u0026lt;div className={ styles.HelloApi }\u0026gt; \u0026lt;div className={ styles.container }\u0026gt; \u0026lt;div className={ styles.row }\u0026gt; \u0026lt;div className={ styles.column }\u0026gt; \u0026lt;span className={ styles.title }\u0026gt;Welcome to SharePoint!\u0026lt;/span\u0026gt; \u0026lt;p className={ styles.subTitle }\u0026gt;Customize SharePoint experiences using Web Parts.\u0026lt;/p\u0026gt; \u0026lt;p className={ styles.description }\u0026gt;{escape(this.props.description)}\u0026lt;/p\u0026gt; \u0026lt;a href=\u0026#34;https://aka.ms/spfx\u0026#34; className={ styles.button }\u0026gt; \u0026lt;span className={ styles.label }\u0026gt;Learn more\u0026lt;/span\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;PeoplePicker /\u0026gt; \u0026lt;/div\u0026gt; ); } } Run it in remote workbench Now run your sample with gulp serve and display your web part in your remote workbench (https://contoso.sharepoint.com/_layouts/15/workbench.aspx). Try to use the PeoplePicker component: you\u0026rsquo;ll see that just by clicking on the search box, you\u0026rsquo;ll get We didn\u0026rsquo;t find any matches.   Display your developer toolbox (F12) and go to the browser console, you should see the following error:   As you can see, it\u0026rsquo;s a 403 error, which is well-known when using Graph API endpoints that have not been allowed on the first place. Add Graph API through UI From the Azure portal, display the Azure Active Directory (AAD), then select the App Registration menu and select All Applications, then select SharePoint Online Client Extensibility Web Application Principal. It\u0026rsquo;s the AAD Application that holds the connection to the API (Microsoft and others) from SharePoint (SPFx or every other development) using the Implicit Flow. Once here, select Add a permission, then select Microsoft Graph and add the [People.Read] Graph API [delegated permission]{.underline} (you can type the name of the permission in the available search box to get it easily).   Once added, grant it by clicking on Grant admin consent for contoso. If you go in the API access page (https://contoso-admin.sharepoint.com/_layouts/15/online/AdminHome.aspx#/webApiPermissionManagement), you should see something like this:   Warning\nIt can take a couple of minutes before consented permissions is effective, so don\u0026rsquo;t be surprised if it\u0026rsquo;s not working right away after approval.\nAdd Graph API through CLI for Microsoft 365 m365 login # Don\u0026#39;t execute that command if you\u0026#39;re already connected m365 spo serviceprincipal grant add --resource \u0026#39;Microsoft Graph\u0026#39; --scope \u0026#39;People.Read\u0026#39; Info\nDon\u0026rsquo;t be surprised if by that way, the permission appears in the \u0026quot;Other permissions granted for [your tenant]\u0026quot;: it won\u0026rsquo;t prevent your SPFx solution to work.\nTry again Now try to use the PeoplePicker component again: you\u0026rsquo;ll see that with the addition of the Graph API permission, you should be able to use that component!   With custom API When using a custom API, it\u0026rsquo;s a little bit more tricky but easy to handle anyway. You can follow this Microsoft article until the \u0026ldquo;Deploy the solution\u0026rdquo; part. Instead of bundling and shipping, we\u0026rsquo;ll add the AAD App (called contoso-api-dp20200915 if we follow the mentioned article) created from the Azure Function Authentication part in the SharePoint Service Principal.\nAdd your AAD Application to the SharePoint Service Principal Display again the AAD page, then select the App Registration menu, select All Applications and select SharePoint Online Client Extensibility Web Application Principal. Once here, select Add a permission, then select the My APIs tab and select the fresh added AAD App created before. Select the user_impersonation permission, then confirm.   Finally, grant this permission by clicking on Grant admin consent for contoso. If you go again in the API access page, you should see something like this:   Add custom API through CLI for Microsoft 365 m365 login # Don\u0026#39;t execute that command if you\u0026#39;re already connected m365 spo serviceprincipal grant add --resource \u0026#39;contoso-api-dp20200915\u0026#39; --scope \u0026#39;user_impersonation\u0026#39; Info\nDon\u0026rsquo;t be surprised if by that way, the permission appears in the \u0026quot;Other permissions granted for [your tenant]\u0026quot;: it won\u0026rsquo;t prevent your SPFx solution to work. Warning\nIf you use an Azure Function as an API and enable Managed Identity for any reason, you better have to rename the linked AAD Application to give it a different name than both your Function and its Managed Identity. Otherwise, the command will try to find a scope on it instead of the AAD App and fail.\nUpdated sample To run your custom API from your SPFx component, you can update your sample like below: IHelloApiProps.ts\nimport { AadHttpClientFactory } from \u0026#39;@microsoft/sp-http\u0026#39;; export interface IHelloApiProps { aadFactory: AadHttpClientFactory; description: string; }  HelloApiWebPart.ts\n// ... export default class HelloApiWebPart extends BaseClientSideWebPart\u0026lt;IHelloApiWebPartProps\u0026gt; { // ...  public render(): void { const element: React.ReactElement\u0026lt;IHelloApiProps\u0026gt; = React.createElement( HelloGraph, { description: this.properties.description, aadFactory: this.context.aadHttpClientFactory, } ); ReactDom.render(element, this.domElement); } // ... }  HelloApi.tsx\nimport * as React from \u0026#39;react\u0026#39;; import styles from \u0026#39;./HelloApi.module.scss\u0026#39;; import { IHelloApiProps } from \u0026#39;./IHelloApiProps\u0026#39;; import { AadHttpClient, HttpClientResponse } from \u0026#39;@microsoft/sp-http\u0026#39;; interface IHelloApiState { ordersToDisplay: any; } export default class HelloApi extends React.Component\u0026lt;IHelloApiProps, IHelloApiState\u0026gt; { public constructor(props) { super(props); this.state = { ordersToDisplay: null }; } public componentDidMount() { this.props.aadFactory .getClient(\u0026#39;https://contoso-api-dp20191109.azurewebsites.net\u0026#39;) .then((client: AadHttpClient): void =\u0026gt; { client .get(\u0026#39;https://contoso-api-dp20191109.azurewebsites.net/api/Orders\u0026#39;, AadHttpClient.configurations.v1) .then((response: HttpClientResponse): Promise\u0026lt;any\u0026gt; =\u0026gt; { return response.json(); }) .then((orders: any): void =\u0026gt; { this.setState({ ordersToDisplay: orders }) }); }).catch((err) =\u0026gt; { console.log(err); }); } public render(): React.ReactElement\u0026lt;IHelloApiProps\u0026gt; { return ( \u0026lt;div className={ styles.HelloApi }\u0026gt; \u0026lt;div className={ styles.container }\u0026gt; \u0026lt;div className={ styles.row }\u0026gt; \u0026lt;div className={ styles.column }\u0026gt; \u0026lt;span className={ styles.title }\u0026gt;Welcome to SharePoint!\u0026lt;/span\u0026gt; \u0026lt;p className={ styles.subTitle }\u0026gt;Customize SharePoint experiences using Web Parts.\u0026lt;/p\u0026gt; \u0026lt;p className={ styles.description }\u0026gt; \u0026lt;ul\u0026gt; {this.state.ordersToDisplay \u0026amp;\u0026amp; this.state.ordersToDisplay.map(o =\u0026gt; { return \u0026lt;li\u0026gt;{o.rep}: {o.total}\u0026lt;/li\u0026gt; }) } \u0026lt;/ul\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; ); } }  Now you can run your sample locally and try it in your hosted workbench, playing with it and updating your WebPart as you want! ... And don\u0026rsquo;t forget to update your package-solution.json file to include the required APIs before shipping!\nHappy coding! This article was cross-posted on my blog.\n","image":"https://pnp.github.io/blog/post/init-api-permissions-for-your-spfx-projects-without-deploying/images/peoplepicker-ui-fail_hud1adc162e1a935aea9a02951b6b6c415_4802_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/init-api-permissions-for-your-spfx-projects-without-deploying/","tags":["SharePoint framework (SPFx)"],"title":"Init API permissions for your SPFx projects without deploying them"},{"categories":["Microsoft Viva and SPFx community call"],"contents":"The SharePoint PnP Community monthly call is our general monthly review of the latest SharePoint and Microsoft 365 PnP topics (news, tools, extensions, features, capabilities, content and training), engineering priorities and community recognition for Developers, IT Pros and Makers. This monthly community call happens on the second Tuesday of each month. You can download recurrent invite from https://aka.ms/sp-call.\nCall summary If you\u0026rsquo;re looking at this blog post, then you are at the new Microsoft 365 PnP Community hub at Microsoft Tech Communities! Please take a moment to look around. The Microsoft 365 Update - Community (PnP) | March 2021is available. In this call, the Top 10 developer and non-developer entries in UserVoice are reviewed and top engineering priorities identified. Your votes do influence engineering priorities. You are invited to attend the growing list of Sharing is Caring events. Register today. In Episode 117 of PnP Weekly tools and approaches for simplifying the move from Classic to Modern, on-prem to cloud were discussed. Why Modern? Well, one reason \u0026ndash; Viva capabilities like the one that will be demonstrated today are available only in Modern. Testing of SPFx v1.12 is on the final stretch. Release expected any day. Thank you to the 200 + active contributors and organizations actively participating in this PnP Community during February. You are truly amazing. The host of this call was Vesa Juvonen (Microsoft) @vesajuvonen. Q\u0026amp;A took place in the chat throughout the call. Demo: Getting started with Microsoft Viva Topics \u0026ndash; system and tools to help customers manage knowledge within their organizations through a conscious AI assisted strategy of connecting people and actionable knowledge. Content is ultimately rendered through the Topic web part. Topics along with aligned content and SMEs are initially discovered through AI algorithms, then confirmed and curated by humans. Topics draws on capabilities from across Microsoft and can be extended by you. Actions  Register for Sharing is Caring Events  First Time Contributor Session \u0026ndash; March 22nd (EMEA, APAC \u0026amp; US friendly times available) Community Docs Session \u0026ndash; March PnP \u0026ndash; SPFx Developer Workstation Setup \u0026ndash; March 10th PnP SPFx Samples \u0026ndash; Solving SPFx version differences using Node Version Manager \u0026ndash; March 11th PnP \u0026ndash; AMA (Ask Me Anything) \u0026ndash; SPFx Samples Edition \u0026ndash; March 9th First Time Presenter - March 24th More than Code with VSCode \u0026ndash; March 23rd Maturity Model Practitioners \u0026ndash; March 16th PnP Office Hours \u0026ndash; 1:1 session - Register   Download the recurrent invite for this call \u0026ndash; https://aka.ms/sp-call. You can check the latest updates in the monthly summary and at aka.ms/spdev-blog.  This call was delivered on Tuesday, March 9, 2021. The call agenda is reflected below with direct links to specific sections. You can jump directly to a specific topic by clicking on the topic\u0026rsquo;s timestamp which will redirect your browser to that topic in the recording published on the Microsoft 365 Community YouTube Channel.\nCall agenda  UserVoice status for non-dev focused SharePoint entries \u0026ndash; 4:10 UserVoice status for dev focused SharePoint Framework entries \u0026ndash; 5:08 SharePoint community update with latest news and roadmap \u0026ndash; 8:57 Community contributors and companies which have been involved in the past month \u0026ndash; 10:40 **Demo: **Getting started with Microsoft Viva Topics - Naomi Moneypenny (Microsoft) | @nmoneypenny - 14:26 The full recording of this session is available from Microsoft 365 \u0026amp; SharePoint Community YouTube channel - http://aka.ms/m365pnp-videos. Presentation slides used in this community call are found at OneDrive.  Resources Additional resources on covered topics and discussions.\n  Documentation - Set up Microsoft Viva Topics\n  Overview - Microsoft Viva   Microsoft Viva Topics   SharePoint Syntex   Content Services Partner Program   Microsoft Knowledge \u0026amp; Content Services Resource Center   Documentation - Microsoft Search Graph Content Connectors   PnP Weekly \u0026ndash; Episode 117 with guest Bert Jansen (Microsoft) | @o365bert | video | podcast\n  Microsoft 365 Developer Podcast \u0026ndash; March 8, 2021, with guest Stephan Bisser (Solvion) | @stephanbisser | podcast   Viva Connections https://aka.ms/VivaConnections\n  Additional resources  PnP Weekly - Videos PnP Weekly - Podcasts M365 Community Documentation - (non-dev) SharePoint Documentation and Guidance - (technical) SharePoint Framework v1.11 SharePoint Framework v1.11 release notes Exploring how to get started on open-source and community work? SharePoint Starter Kit Recurrent invite to SharePoint Development monthly calls - http://aka.ms/spdev-call SharePoint Developer documentation - http://aka.ms/spdev-docs SharePoint Development Issues - http://aka.ms/spdev-issues SharePoint GitHub organization - http://github.com/SharePoint SharePoint Development UserVoice - new feature requests - http://aka.ms/spdev-uservoice  Upcoming Calls | Recurrent Invites  Office add-in monthly call \u0026ndash; March 10th at 8 AM PDT | https://aka.ms/officeaddinscall SharePoint Framework call \u0026ndash; March 11th at 07:00am PDT | https://aka.ms/spdev-spfx-call Adaptive Cards monthly call - March 11th at 9:00 am PDT | https://aka.ms/adaptivecardscommunitycall Microsoft Teams monthly call \u0026ndash; March 16th at 8:00am PDT | https://aka.ms/microsoftteamscommunitycall Power Apps monthly call - March 17th at 8:00am PDT | https://aka.ms/PowerAppsMonthlyCall M365 General Dev call \u0026ndash; March 18th at 07:00am PDT | https://aka.ms/m365-dev-sig Microsoft Graph call - April 6th at 8:00am PDT | https://aka.ms/microsoftgraphcall SharePoint monthly call \u0026ndash; April 13th at 08:00am PDT | https://aka.ms/sp-call \u0026quot;Too many links, can\u0026rsquo;t remember\u0026quot; - not a problem... just one URL is enough for all Microsoft 365 community topics - http://aka.ms/m365pnp.  \u0026ldquo;Sharing is caring\u0026rdquo;\n SharePoint Team, Microsoft - 10th of March 2021\n","image":"https://pnp.github.io/blog/post/sharepoint-monthly-community-call-march-9-2021/images/march-sp-monthly-together-mode_hub7195470ac255001cd6b79ed1209dd0e_4504759_460x200_fill_box_smart1.gif","permalink":"https://pnp.github.io/blog/post/sharepoint-monthly-community-call-march-9-2021/","tags":[],"title":"SharePoint monthly community call -- March 9, 2021"},{"categories":["Microsoft 365 Platform Community update"],"contents":"Microsoft 365 Patterns and Practices (PnP) Community March 2021 update is out with a summary of the latest guidance, samples, and solutions from Microsoft or from the community for the community. This article is a summary of all the different areas and topics around the community work we do around Microsoft 365 ecosystem during the past month. Thank you for being part of this success. Sharing is caring!\nWhat is Microsoft 365 Community (PnP) Microsoft 365 PnP is a nick-name for Microsoft 365 Community activities coordinated by numerous teams inside of the Microsoft 365 engineering organizations. PnP is a community-driven open source initiative where Microsoft and external community members are sharing their learning\u0026rsquo;s around implementation practices for Microsoft 365. Topics vary from Microsoft Graph, Microsoft Teams, OneDrive and SharePoint. Active development and contributions happen in GitHub by providing contributions to the samples, reusable components, and documentation for different areas. PnP is owned and coordinated by Microsoft engineering, but this is work done by the community for the community.\n See more details from New Microsoft 365 Patterns and Practices (PnP) team model with new community leads The initiative is facilitated by Microsoft, but we have multiple community members as part of the PnP team (see team details in end of the article) and we are always looking to extend the PnP team with more community members. Notice that since this is open source community initiative, so there\u0026rsquo;s no SLAs for the support for the samples provided through GitHub. Obviously, all officially released components and libraries are under official support from Microsoft. Some key statistics around Microsoft 365 PnP initiative from February 2021: Unique visitors during the past 2 weeks in PnP, OneDrive, Microsoft-Search, OfficeDev and SharePoint GitHub organization repositories - 71,936 Overall unique contributors in the PnP, OneDrive, Microsoft-Search, OfficeDev and SharePoint GitHub organizations - 1,782 Merged pull requests across PnP, OneDrive, Microsoft-Search, OfficeDev and SharePoint repositories (cumulative) - 20,423 Closed issues and enhancements ideas cross PnP, OneDrive, Microsoft-Search, OfficeDev and SharePoint repositories (cumulative) - 20,724 Microsoft 365 Community (PnP) YouTube channel had 79,339 views with 6,165 hours of watch time and 20,921 subscribers Microsoft 365 Developer YouTube channel had 38,802 views with 3,006 hours of watch time and 12,671 subscribers Most viewed videos in the Microsoft 365 Community (PnP) YouTube channel during February 2021:   Getting started with Site Designs in SharePoint Online - Laura Kokkarinen (Sulava) | 3,845 Working with Microsoft Lists (webinar) - Harini Saladi, Miceile Barrett, Chakkaradeep Chandran and Mark Kashman | 3,631 Architecting Your Intranet | Melissa Torres (Microsoft) | 2,278 SharePoint Monthly Community Call - February 2021 | 1,795 SharePoint Framework Tutorial 1 - HelloWorld WebPart | 1,764 SharePoint App Bar - Global navigation and wayfinding | Melissa Torres (Microsoft) | 1,706 Configure list custom header, footer and the form body with JSON | Chris Kent (DMI) | 1,588 Introducing: New Employee Onboarding - a Microsoft Teams app template | Nidhi Sharma (Microsoft) | 1,585 Migration to SharePoint, OneDrive, and Microsoft Teams in Microsoft 365, free and easy - Hani Loza (Microsoft) \u0026amp; Eric Warnke (Microsoft) | 1,578 Latest on Power Automate integration within SharePoint Online | Chakkaradeep Chandran (Microsoft) | 1,534 Most viewed videos in the Microsoft 365 Developer YouTube channel during February 2021:  1.Authenticate and connect with Microsoft Graph - June 2019 | 1,299 2. Build Outlook Add-ins that integrate your solution seamlessly into your users\u0026rsquo; Outlook experience​ | Juan Balmori, Hitesh Manwar - 1,213 3. An introduction to Microsoft Graph for developers - Part I - Getting started - October 2019 | 1,044 4. Getting Started with Microsoft Graph and Application Registration | 896 5. Build and Office add-in using modern JavaScript tools and technologies | 838 6. Create interactive conversational bots for Microsoft Teams | 828 7. Develop multi-tenant applications with Microsoft Identity Platform - April 2020 | 763 8. SharePoint Site Collection Level Permissions | 657 9. Microsoft identity platform: Getting Started with Microsoft identity | 644 10. Getting Started with Microsoft Graph | 644 Main resources around Microsoft 365 Community:\n Microsoft 365 Community - http://aka.ms/m365pnp - One location for all the resources and news around PnP Microsoft 365 community blog - http://aka.ms/m365pnp/community/blog Microsoft 365 development blog - http://aka.ms/m365pnp-blog Microsoft 365 Community Channel on YouTube - http://aka.ms/m365pnp-videos Microsoft 365 Developer YouTube channel - https://aka.ms/M365DevYouTube  Latest Dev Blog posts Here are the latest blog posts and announcements around Microsoft 365 development topics from https://developer.microsoft.com/microsoft-365/blogs.\n 8th of March - Microsoft Graph Toolkit adds a new Electron Provider plus enhanced capabilities 4th of March - What\u0026rsquo;s new for Excel add-ins developers in 2021  4th of March - Office Add-ins partner Sheetgo integrates Excel\u0026rsquo;s extensibility features 2nd of March - What\u0026rsquo;s new for Microsoft 365 and Teams Platform @ Ignite 2021 23rd of February - Microsoft Graph Mailbag \u0026ndash; Intro to Microsoft Graph and Top 5 API Requests 11th of February - Controlling app access on a specific SharePoint site collections is now available in Microsoft Graph 11th of February - Announcing Microsoft Teams App Generator (Yo Teams) version 3 9th of February - Microsoft Graph Mailbag \u0026ndash; Blazor Web Assembly and Microsoft Graph with Azure Functions 9th of February - Microsoft 365 Community (PnP) \u0026ndash; February 2021 update 5th of February - Basic Authentication and Exchange Online \u0026ndash; February 2021 Update  5th of February - Application Access Policy Support Added to Exchange Web Services in Exchange Online 5th of February - Use the shared JavaScript runtime to improve the UI experience of your Office Add-in 5th of February - Basic Authentication and Exchange Online \u0026ndash; February 2021 Update  5th of February - Application Access Policy Support Added to Exchange Web Services in Exchange Online 5th of February - Use the shared JavaScript runtime to improve the UI experience of your Office Add-in 5th of February - Announcing the public preview of Microsoft Graph Java SDK v3 4th of February - Use UI Automation custom properties to customize your assistive technologies to Office applications 4th of February - New Microsoft 365 Patterns and Practices (PnP) team members \u0026ndash; February 2021 2nd of February - Best practices and updates for bot lifecycle events in Microsoft Teams 2nd of February - General Availability of the new PnP Framework library for automating SharePoint Online operations Community call recording blog posts: 4th of March - Microsoft 365 PnP \u0026ndash; General Developer SIG recording \u0026ndash; 4th of March, 2021 25th of February - SharePoint Framework Community Call Recording \u0026ndash; 25th of February, 2021 25th of February - Office Add-ins community call\u0026ndash;February 10, 2021 19th of February - Microsoft Teams community call-January 19, 2021  18th of February - Microsoft 365 PnP \u0026ndash; General Developer SIG recording \u0026ndash; 18th of February, 2021 11th of February - SharePoint Framework Community Call Recording \u0026ndash; 11th of February, 2021 9th of February - SharePoint monthly community call \u0026ndash; February 9, 2021 5th of February - Microsoft Graph community call-February 2, 2021 5th of February - Microsoft 365 PnP \u0026ndash; General Developer SIG recording \u0026ndash; 4th of February, 2021 PnP Weekly video blog / podcast shows: 9th of March - Microsoft 365 PnP Weekly \u0026ndash; Episode 117 2nd of March - Microsoft 365 PnP Weekly \u0026ndash; Episode 116 23rd of February - Microsoft 365 PnP Weekly \u0026ndash; Episode 115 16th of February - Microsoft 365 PnP Weekly \u0026ndash; Episode 114 8th of February - Microsoft 365 PnP Weekly \u0026ndash; Episode 113  2nd of February - Microsoft 365 PnP Weekly \u0026ndash; Episode 112 We highly recommend also subscribing on the Microsoft 365 Developer Podcast show, which is a great show covering also latest development in the Microsoft 365 platform from developer and extensibility perspective.  Community Calls There are numerous different community calls on different areas. All calls are being recorded and published either from Microsoft 365 Developer or Microsoft 365 Community (PnP) YouTube channels. Recordings are typically released within the following 24 hours after the call. You can find a detailed agenda and links to specific covered topics on blog post articles at the Microsoft 365 developer blog when the videos are published.\n Adaptive Cards https://aka.ms/adaptivecardscommunitycall - Updates and news around Adaptive Cards with live demos Microsoft Graph https://aka.ms/microsoftgraphcall - Updates and news from Microsoft Graph with live demos Microsoft identity platform https://aka.ms/IDDevCommunityCalendar - Latest on the identity side Microsoft Teams https://aka.ms/microsoftteamscommunitycall - Microsoft Teams monthly update with live demos Office Add-ins https://aka.ms/officeaddinscommunitycall - News and community work around Office add-ins with live demos PowerApps https://aka.ms/PowerAppsMonthlyCall - Monthly summary on PowerApps community with live demos SharePoint https://aka.ms/spdev-call - Consists of the latest news, providing credits for all community contributors and live demos typically by SharePoint engineering. M365 General Dev SIG https://aka.ms/spdev-sig-call - Bi-weekly - General topics on Microsoft 365 Dev from various aspects - Microsoft Teams, Microsoft Graph Toolkit, Provisioning, Automation, Scripting, Power Automate, Solution design SharePoint Framework SIG https://aka.ms/spdev-spfx-call - Bi-weekly - Consists of topics around SharePoint Framework and JavaScript-based development in the Microsoft Teams and in SharePoint platform. If you are interested in doing a live demo of your solution or sample in these calls, please do reach out to the PnP Team members (contacts later in this post) and they are able to help with the right setup. These are great opportunities to gain visibility for example for existing MVPs, for community members who would like to be MVPs in the future or any community member who\u0026rsquo;d like to share some of their learnings.  Microsoft 365 Community (PnP) Ecosystem in GitHub Most of the community driven repositories are in the PnP GitHub organization as samples are not product specifics as they can contain numerous different solutions or the solution works in multiple different applications.\n  PnPjs - PnPjs Framework repository\n  CLI Microsoft 365 - Cross-OS command line interface to manage Office 365 tenant settings\n  generator-spfx - Open-source Yeoman generator which extends the out-of-the-box Yeoman generator for SharePoint with additional capabilities\n  generator-teams - Open-source Microsoft Teams Yeoman generator - Bots, Messaging Extensions, Tabs, Connectors, Outgoing Web hooks and more\n  teams-dev-samples - Microsoft Teams targeted samples from community and Microsoft engineering\n  Sharing is Caring - Getting started on learning how to contribute and be active on the community from GitHub perspective.\n  pnpcore - The PnP Core SDK is an SDK designed to work against Microsoft 365 with Microsoft Graph API first approach\n  powershell - PnP PowerShell module which is PowerShell Core module targeted for Microsoft 365\n  pnpframework - PnP Framework is a .Net Standard 2.0 library targeting Microsoft 365 containing the PnP Provisioning engine and a ton of other useful extensions\n  https://github.com/pnp/teams-dev-samples - Samples around the Microsoft Teams development models from Microsoft and from the community\n  sp-dev-fx-webparts - Client-side web part samples from community and Microsoft engineering\n  sp-dev-fx-extensions - Samples and tutorial code around SharePoint Framework Extensions\n  sp-dev-fx-library-components - Samples and tutorial code around the SharePoint Framework library components\n  sp-starter-kit - Starter kit solution for SharePoint modern experiences\n  sp-dev-fx-vs-extension - Open source Visual Studio IDE extension for creating SharePoint Framework solutions in the Visual Studio 2015 or 2017\n  sp-dev-build-extensions - Different build extensions like gulp tasks and gulp plugins from the community and engineering around SharePoint development\n  sp-dev-solutions - Repository for more polished and fine-tuned reusable solutions build with SharePoint Framework\n  sp-dev-samples - Repository for other samples related on the SharePoint development topics - WebHooks etc.\n  sp-dev-fx-controls-react - Reusable content controls for SharePoint Framework solutions build with React\n  sp-dev-fx-property-controls - Reusable property pane controls to be used in web parts\n  sp-dev-list-formatting - Open-source community-driven repository for the column and view formatting JSON definitions\n  sp-dev-site-scripts - Open-source community-driven repository for community Site Designs and Site Scripts\n  sp-dev-modernization - Tooling and guidance around modernizing SharePoint from classic to modern\n  sp-power-platform-solutions - Solution and sample code for SharePoint Power Platform solutions\n  powerfx-samples - Samples that demonstrate different usage patterns for the Power Fx low-code programming language\nAll SharePoint specific repositories or services supported directly by Microsoft are located in the SharePoint GitHub organization\n\\\n  sp-dev-docs - Source for new SharePoint dev center documentation exposed from http://docs.microsoft.com/sharepoint/dev\n  sp-dev-provisioning-templates - Open-source templates used by the SharePoint Look Book site\n  sp-provisioning-service - Source code of the SharePoint look book site PnP specific repositories - solution designs and tooling\n  PnP - Main repository for SP add-in, Microsoft Graph etc. samples\n  PnP-Sites-Core - Office Dev PnP Core component\n  PnP-PowerShell - Office Dev PnP PowerShell Cmdlets\n  PnP-Tools - Tools and scripts targeted more for IT Pro\u0026rsquo;s and for on-premises for SP2013 and SP2016\n  PnP-Provisioning-Schema - PnP Provisioning engine schema repository\n  PnP-IdentityModel - Open source replacement of Microsoft.IdentityModel.Extensions.dll Repositories in the GitHub Microsoft Search organization controlled by the PnP initiative\n  pnp-modern-search - Home of PnP Modern Search solutions, see more from the documentation Other related resources from GitHub\n  Microsoft Graph Toolkit in GitHub - Community contributions welcome!\n  Office add-in Patterns and Practices in GitHub - Community contributions welcome!\n  Microsoft Graph GitHub organization\n  OfficeDev GitHub organization - Includes all Microsoft Teams samples from Microsoft\n\\\n  What\u0026rsquo;s supportability story around PnP material? Following statements apply across all of the community lead and contributed samples and solutions, including samples, core component(s) and solutions, like SharePoint Starter Kit or PnP PowerShell. All Microsoft released SDKs and tools are supported based on the specific tool policies\n PnP guidance and samples are created by Microsoft \u0026amp; by the Community PnP guidance and samples are maintained by Microsoft \u0026amp; community PnP uses supported and recommended techniques PnP is an open-source initiative by the community \u0026ndash; people who work on the initiative for the benefit of others, have their normal day job as well PnP is NOT a product and therefore it\u0026rsquo;s not supported by Premier Support or other official support channels PnP is supported in similar ways as other open source projects done by Microsoft with support from the community by the community There are numerous partners that utilize PnP within their solutions for customers. Support for this is provided by the Partner. When PnP material is used in deployments, we recommend being clear with your customer/deployment owner on the support model Please see the specifics on the supportability on the tool, SDK or component repository or download page.  Microsoft 365 PnP team model    In April 2020 we announced our new Microsoft 365 PnP team model and grew the MVP team quite significantly. PnP model exists for having more efficient engagement between Microsoft engineering and community members. Let\u0026rsquo;s build things together. Your contributions and feedback is always welcome! During August, we also crew the team with 5 new members. PnP Team coordinates and leads the different open-source and community efforts we execute in the Microsoft 365 platform. We welcome all community members to get involved on the community and open-source efforts. Your input do matter!\n New Microsoft 365 Patterns and Practices (PnP) team members - February 2021 New Microsoft 365 Patterns and Practices (PnP) team members - December 2020 New Microsoft 365 Patterns and Practices (PnP) team members - August 2020 Got feedback, suggestions or ideas? - Please let us know. Everything we do in this program is for your benefit. Feedback and ideas are more than welcome so that we can adjust the process for benefitting you even more.  Area-specific updates These are different areas which are closely involved on the community work across the PnP initiative. Some are lead and coordinated by engineering organizations, some are coordinated by the community and MVPs.\nMicrosoft Graph Toolkit    Microsoft Graph Toolkit is engineering lead initiative, which works closely with the community on the open-source areas. The Microsoft Graph Toolkit is a collection of reusable, framework-agnostic web components and helpers for accessing and working with Microsoft Graph. The components are fully functional right of out of the box, with built in providers that authenticate with and fetch data from Microsoft Graph.\n Latest version currently is 2.1. See the v2.1 announcement blog post for more details - Microsoft Graph Toolkit adds a new Electron Provider plus enhanced capabilities mgt.dev - Microsoft Graph Toolkit Playground Getting started with Microsoft Graph Toolkit guidance video from developer community call by Beth Pan (Microsoft) All the latest updates on the Microsoft Graph Toolkit is being presented in our bi-weekly Microsoft 365 Generic Dev community call, including the latest community contributors.  Microsoft 365 Community docs    Community docs model was announced in the April 2020 and it\u0026rsquo;s great to see the interest for community to help each other by providing new guidance on the non-dev areas. See more on the announcement from the SharePoint blog - Announcing the Microsoft 365 Community Docs. We do welcome contributions from the community - our objective is to build a valuable location for articles from Microsoft and community together.\nLatest updates on this area as follows:\n  New article by Waldek Mastykarz (Microsoft) - What kind of apps can you build on Microsoft 365?\n  New article by Emily Mancini (Sympraxis Consulting) - Elevating Communication\n  New article by Emily Mancini (Sympraxis Consulting) - How can I use Learning Pathways in my organization?\n  Updated article by Ganesh Sanap and Christophe Humbert - Follow Microsoft 365 on Social Media\n  Updated article by Luise Freese - Should everyone create Teams? A Low Code Provisioning solution\n  Updated article by Marc Anderson (Sympraxis Consulting) - Maturity Model for Microsoft 365 - Introduction Have ideas for articles or want to contribute yourself? - Get involved! Here are also some additional resources explaining the model more detailed.\n  Updates on the Microsoft 365 Community Docs - June 2020\n  YouTube - Introducing Microsoft 365 Community Docs\n  GitHub issue list with articles ideas\n  SharePoint Framework development samples    These are the updated SharePoint Framework samples which are available from the the different repositories.\n New sample react-list-search by Alberto Gutiérrez (Minsait) to show data from lists and to search information in the lists New sample react-staffdirectory by João Mendes (Storm Technology) shows the current user\u0026rsquo;s colleagues, and allows the user to search AD directory. New sample react-datatable by Chandani Prajapati as a web part that provides easy way to render SharePoint custom list in datatable view with all the necessary features New sample react-command-demote-news by Mikael Svenson (Microsoft) as SharePoint Framework list view command set extension to demote a previously promoted News page New sample react-command-convert-to-pdf by Mikael Svenson (Microsoft) that allows to convert one or more document in-place to PDF or download documents as PDF. New sample react-teams-message-user by David Ramalho (Storm Technology) on sending a message to Microsoft Teams using a SharePoint framework solution using Microsoft Graph Updates to numerous SPFx web part and extension samples by our awesome community memebers! How to find what\u0026rsquo;s relevant for you? Take advantage of our SharePoint Framework web part and extension sample galleries - includes also solutions which work in Microsoft Teams Web Part sample gallery - http://aka.ms/spfx-webparts Extensions sample gallery - http://aka.ms/spfx-extensions  Microsoft Teams community samples    These are samples which have been contributed on the community samples since last summary. We do welcome all Microsoft Teams samples to this gallery. They can be implemented using in any technology.\n New sample bot-b2c-chat-bot by Abtin Amini, Sathya Raveendran, Saikrishna Neeli and Arun Kumar Anaparthi on building a Business to Citizen Consumer Communication Bot Updates to tab-sso to by Doğan Erişen to add MSAL.js support for signle sign on experience If you are interested on Microsoft Teams samples, we have just released also new Microsoft Teams sample gallery. Contributions to Microsoft Teams samples is also more than welcome. This gallery already surfaces all Microsoft samples, Microsoft Teams app templates and community samples.  Sharing is Caring initiative    The \u0026ldquo;Sharing Is Caring\u0026rdquo; imitative is targeted for learning the basics around making changes in Microsoft Docs, in GitHub, submitting pull requests to the PnP repositories and in GitHub in general. Take advantage of this instructor lead training for learning how to contribute to docs or to open-source solutions. Everyone is welcome to learn how to get started on contributing to open-source docs or code!\n See more from the guidance documentation - including all upcoming instructor lead sessions which you can participate!  Different Microsoft 365 related open-source initiatives build together with the community See exact details on the latest updates from the specific open-source project release notes. You can also follow up on the project updates from our community calls. There are numerous active projects which are releasing new versions with the community even on weekly basis. Get involved!\n Microsoft Look Book - Discover the modern experiences you can build with SharePoint in Microsoft 365. Look book provides design examples for SharePoint Online which can be automatically provisioned to any tenant in the world. See more from https://lookbook.microsoft.com. This service is also provided as open-source solution sample from GitHub. yo teams - Open-source Yeoman generator for Microsoft Teams extensibility. Supports creation of bots, messaging extensions, tabs (with SSO), connectors and outgoing Webhooks. See more from https://aka.ms/yoteams. PnP Framework - .NET Standard 2.0 SDK containing the classic PnP Sites Core features for SharePoint Online. More around this package from GitHub. PnP Core SDK - The PnP Core SDK is an SDK designed to work for Microsoft 365 with Graph API first approach. It provides a unified object model for working with SharePoint Online and Teams which is agnostic to the underlying API\u0026rsquo;s being called. See more around the SDK from documentation. PnP PowerShell - PnP PowerShell is a .NET Core 3.1 / .NET Framework 4.6.1 based PowerShell Module providing over 400 cmdlets that work with Microsoft 365 environments and more specifically SharePoint Online and Microsoft Teams. See more details from documentation. Reusable SharePoint Framework controls - Reusable controls for SharePoint Framework web part and extension development. Separate projects for React content controls and Property Pane controls for web parts. These controls are using Office UI Fabric React controls under the covers and they are SharePoint aware to increase the productivity of developers. Office 365 CLI - Using the Office 365 CLI, you can manage your Microsoft Office 365 tenant and SharePoint Framework projects on any platform. See release notes for the latest updates. PnPJs - PnPJs encapsulates SharePoint REST APIs and provides a fluent and easily usable interface for querying data from SharePoint sites. It\u0026rsquo;s a replacement of already deprecated pnp-js-core library. See changelog for the latest updates. PnP Provisioning Engine and PnP CSOM Core - PnP provisioning engine is part of the PnP CSOM extension. They encapsulate complex business driven operations behind easily usable API surface, which extends out-of-the-box CSOM NuGet packages. See changelog for the latest updates. PnP PowerShell - PnP PowerShell cmdlets are open-source complement for the SharePoint Online cmdlets. There are more than 300 different cmdlets to use and you can use them to manage tenant settings or to manipulate actual SharePoint sites. They See changelog for the latest updates. PnP Modern Search solution - The PnP \u0026lsquo;Modern Search\u0026rsquo; solution is a set of SharePoint Online modern Web Parts allowing SharePoint super users, webmasters and developers to create highly flexible and personalized search based experiences in minutes. See more details on the different supported capabilities from https://aka.ms/pnp-search. Modernization tooling - All tools and guidance on helping you to transform you SharePoint to modern experiences from http://aka.ms/sppnp-modernize. SharePoint Starter Kit v2 - Building modern experiences with Microsoft Teams flavors for SharePoint Online and SharePoint 2019 - reference solution in GitHub. List formatting definitions - Community contributed samples around the column and view formatting in GitHub. Site Designs and Site Scripts - Community contributed samples around SharePoint Site Designs and Site Scripts in GitHub. **DevOps tooling and scripts **- Community contributed scripts and tooling automation around DevOps topics (CI/CD) in GitHub. Teams provisioning solution - Set of open-source Azure Functions for Microsoft Teams provisioning. See more details from GitHub.  Documentation updates Please see all the Microsoft 365 development documentation updates from the related documentation sets and repositories as listed below:\n Microsoft Teams platform documentation - Microsoft Docs | GitHub SharePoint Developer documentation - Microsoft Docs | GitHub Microsoft Graph documentation - Microsoft Docs | GitHub Office add-in documentation - Microsoft Docs | GitHub  Microsoft 365 Dev and Microsoft 365 Community (PnP) YouTube video channels You can find all Microsoft 365 related videos on our YouTube Channel at http://aka.ms/m365pnp-videos or at Microsoft 365 Dev. These channels contains already a significant amount of detailed training material, demo videos, and community call recordings. Here are the new Microsoft demo or guidance videos released since the last monthly summary:\n What is Azure Communication Services and how to get started? - Dan Wahlin (Microsoft) | @DanWahli Build your Microsoft Graph powered electron apps with Microsoft Graph Toolkit - Amrutha Srinivasan (Microsoft) Preview of the Ask Away v2 \u0026ndash; Microsoft Teams app template - Kiran Thomas (Microsoft) | @NotKiran SharePoint App Bar - Global navigation and wayfinding - Melissa Torres (Microsoft) | @Meltorac Build Bots using Microsoft Teams Toolkit - Ayca Bas (Microsoft) | @aycabs Introduction to Timesheet Microsoft Teams app template - Nidhi Sharma (Microsoft) | @nidsonbirdie Microsoft Lists: Edit in grid view - Miceile Barrett (Microsoft) | @MSFTMiceile Microsoft Teams and Power Platform drive low code digital transformation - Microsoft Using Microsoft Teams apps for meetings - Microsoft Share and have your PVA chatbots approved in Microsoft Teams - Microsoft Create chatbots with Power Virtual Agents - Microsoft Streamline processes in Microsoft Teams with Power Automate - Microsoft New MSAL for React, Angular - James Mantu (Microsoft) New PowerPoint JavaScript APIs - Aishwarya Iyer (Microsoft) Contextual tabs in Microsoft Excel - David Chesnut (Microsoft) | @davidchesnut Community Sample Showcase: Virtual Event Manager - Sathya Raveendran (Microsoft) \u0026amp; Arun Kumar Anaparthi (Microsoft) Introduction to Power BI layout containers - Charles Sterling (Microsoft) | @Chas Community demos as following: Streamline SPFx development in Microsoft Teams with easy debugging and reusable controls - Marcin Wojciechowski (Valo Intranet) | @mgwojciech Run CLI for Microsoft 365 in Docker container - Garry Trinder (CPS) | garrytrinder React web part to group documents based on metadata - Hugo Bernier (Tahoe Ninjas) | @bernierh, João Mendes (Storm Technology) | joaojmendes Using Aurelia in SharePoint Framework - Magnus Danielson (Dunite) | @MagnusDanielson Building generic feedback form with SPFx, with panel and email sending capabilities - Perry Kankam (ThreeWill) SP Formatter - Enhanced SharePoint List Column formatting - Sergei Sergeev (Mastaq) | @sergeev_srg  Building Microsoft Teams Apps with Blazor - Mika Berglund (Valtti) | @MikaBerglund Building personal events web part with SPFx and Microsoft Graph Toolkit - Hugo Bernier (Tahoe Ninjas) | @bernierh, João Mendes (Storm Technology) | joaojmendes Connecting to external APIs in SPFx \u0026ndash; case Soccer Highlights - Jerry Yasir (DXC Technology) | @jerryyasir Send Notifications to Microsoft Teams from SPFx solution using Microsoft Graph - Luis Mañez (ClearPeople) | @luismanez Getting started on using CLI for Microsoft 365 - Albert-Jan Schot (Portiva) | @appieschot Building a SharePoint Migration Dashboard with SharePoint Framework - Denis Molodtsov (CleverPoint) | @Zerg00s Auto refresh BI visuals in Power Apps using the new Power BI connector - Daniel Christian (Wells Fargo) | @dchristian19 Drive Approvals with Adaptive Cards in Microsoft Teams and Outlook - Tomasz Poszytek (Konsultanci Digital Workplace) PnP Weekly sessions - Community visitors and latest articles from Microsoft and community on Microsoft 365 topics. Microsoft 365 PnP Weekly - Episode 116 - João Mendes (Storm Technology) Microsoft 365 PnP Weekly - Episode 115 - Jarbas Horst (Valo Intranet) Microsoft 365 PnP Weekly - Episode 114 - Bill Ayers (Flow Simulation Ltd)  Microsoft 365 PnP Weekly - Episode 113 - Tom Morgan (Modality Systems) Microsoft 365 PnP Weekly - Episode 112 - Ed Everett (Microsoft)  Key contributors to the March 2021 update Here\u0026rsquo;s the list of active contributors (in alphabetical order) since last release details in GitHub repositories or community channels. PnP is really about building tooling and knowledge together with the community for the community, so your contributions are highly valued across the Microsoft 365 customers, partners and obviously also at Microsoft. Thank you for your assistance and contributions on behalf of the community. You are truly making a difference! If we missed someone, please let us know.\n  Abderahman Moujahid - Abderahman88\n  Albert-Jan Schot (Portiva) - @appieschot\n  Alberto Gutierrez (Minsait) - @albertogperez\n  Alex Terentiev (SharePointalist) - @alexaterentiev\n  Allan Hvam (Delegate A/S) - allanhvam\n  Alok Kumar Gupta (Netwoven Inc) - alokegupta\n  Andrew Burns (AmSty) - @SharePointRox\n  Andres Ibarra (CloudIgnite) - @Riftsan{.Link\u0026ndash;primary}\n  Andrew Benson (InElec) - @ViewPorter\n  Andrew Connell (Voitanos) - @andrewconnell\n  Andrew Koltyakov (ARVO Systems) - @andrewkoltyakov\n  Andy Dawson (Black Marble) - @W4050\n  Anthony Kauenhowen (Cognizant) - @akauenhowen\n  Arjun Menon (Mindtree) - @arjunumenon\n  Ari Gunawan (DevStack) - @kuboconcept\n  Ashok Gopalan (IBM) - ashokgop\n  Baldo Martínez (Ahead) - Baldj\n  Bassem Khalil - BassemNKhalil\n  Beau Cameron (Aerie Consulting) - @Beau__Cameron\n  Bill Ayers (Flow Simulation Ltd) - @SPDoctor\n  Brad Chaney (SPR) - @bradleechaney\n  Brent Ely (NTT Data) - gitbrent\n  Carl Abrahamson (Entegris) - @TheCarl\n  Chandani Prajapati - @Chandani_SPD\n  Chandra Sekhar Malla (Royalgroup) - @OfficialartistC\n  Charles Emmanuel Saturnin Ndiaye (Netexio) - @manusquall\n  Charles Ndiaye (Netexio) - @manusquall\n  Chris Kent (DMI) - @theChrisKent\n  Christian Zuellig (Monday Coffee) \u0026ndash; @ChristianZuell1\n  Christophe Humbert - @Path2SharePoint\n  Collin Argo - SCollinA\n  Cornelius J. van Dyk (Crayveon) - cjvandyk\n  Cory Roberts (University of Charleston) - CoryRobertsDev\n  Craig Hunter (AT\u0026amp;T) - CraigHunter\n  Cristian Civera - @CristianCivera\n  Dan Bennett - @nonodename\n  Daniel Christian (Wells Fargo) | @dchristian1\n  Dattatray Patil - dattatray-patil\n  David Ramalho (Storm Technology) - @DavRamalho\n  David Warner II (Catapult) - @DavidWarnerII\n  Declan Turner (Ombudsman Services) - DTGitRepository\n  Denis Molodtsov (CleverPoint) | @Zerg00\n  Dinesh Bhat (Cognizant) - techbvdinesh\n  Don Kirkham (Probitas Data Solutions) - @DonKirkham\n  Eli H. Schei (Point Taken AS) - @acupof_dev\n  Elio Struyf - @eliostruyf\n  Emily Mancini (Sympraxis Consulting) - @EEMancini\n  Eric Overfield (PixelMill) - @EricOverfield\n  Erik van Seters (Macaw) - ErikVanSeters\n  Erwin van Hunen (Valo Intranet) - @erwinvanhunen\n  evlo - evlo\n  Faizal Khatri - fz8975\n  Franck Catinot (Abalon Consulting) - fcatinot\n  Flavia Gomes (FunctionOne) - FunctionOne\n  Frank Cornu (aequos) - @FranckCornu\n  Fredrik Ekström - FredrikEkstroem\n  Fredrik Thorild (Sogeti Sweden) - @taxonomythorild\n  Ganesh Sanap - @ganeshsanap20\n  Garry Trinder (CPS) - @garrytrinder\n  Gautam Sheth (Valo Intranet) - @gautamdsheth\n  Geetha Sivasaiam - GSiVed\n  gdk-max - gdk-max\n  Giacomo Pozzoni (DQC Sverige Ab) - @PozzoniGiacomo\n  Hardy - HardySch\n  Hiroaki Nagao - @mofumofu_dance\n  Hugo Bernier - bernierh\n  Imke Feldmann - ImkeF\n  Jake Stanger (ADM Computing) - JakeStanger\n  Jarbas Horst (Valo Intranet) - @devjhorst\n  Jeff Thorpe (3M) - jathorpe\n  Jenna Eagleson - @JennaEagleson\n  Jerry Yasir (DXC Technology) - @jerryyasir\n  Jim Duncan (ShareSquared) - @sparchitect\n  Jim Love (ID Live Ltd) - @jimmywim\n  João Mendes - @joaojmendes\n  Joel Rodrigues (Storm Technology) - @JoelFMRodrigues\n  John Bontjer - JohnBontjer\n  John Rafael (100Devs) - @rafaelcad_\n  John VanDaele - oxyd5000\n  Jonathan Cardy - johnnycardy\n  Joseph Velliah - @JosephVelliah\n  Julie Turner (Sympraxis Consulting) - @jfj1997\n  Kathy Boilek (Alakaina Foundation) - @kaboilek\n  Kaylee Goss - @kaylee_goose\n  Kman1131 - Kman1131\n  Krutika Brahmbhatt - krutikabrahmbhatt\n  Laura Kokkarinen (Sulava) - @LauraKokkarinen\n  Leon Armston (Intelogy Ltd) - @LeonArmston\n  Lindsay Shelton (Smarter Consulting) - @lshelton_tech\n  Luis Arraiz - @larraiz\n  Luis Mañes (ClearPeople) - @luismanez\n  Luise Freese (Luise Freese M365 Princess) - @LuiseFreese\n  Maarten van Stam (Deloitte Nederland) - @aafvstam\n  Mahesh Chintha - chinthamahesh\n  Manjunath Puttaswamy (Momentive Performance Material India Pvt Ltd) - @ManjunathPutta3\n  Marc D Anderson (Sympraxis Consulting) - @sympmarc\n  Marcin Wojciechowski (Valo Intranet) - @mgwojciech\n  Markus Hanisch (DAS Environmental) - Markus-Hanisch\n  Matthew Devaney - @mattbdevaney\n  Matthew Stark (Making Things Work) - @thastark\n  Mike Honey (Manga Solutions) - @Mike_Honey_{.Link\u0026ndash;primary}\n  Marco von Hagen (Bright Skies GmbH) - M2vH\n  Mark Cho (LA Metro) - metro-mark\n  Mika Berglund (Valtti) - @MikaBerglund   Mike Ott (Dewberry) - @enemykilowatt\n  Mike Zimmerman (Autoliv) - mikezimm\n  Mohammad Amer (Atea Global Service) - @Mohammad3mer\n  Mohamed Derhalli - derhallim\n  Monty Evans (Idaho Department of Labor) - iamnitewalker\n  Nanddeep Nachan \u0026ndash; @NanddeepNachan\n  Natalie Harzic (Dulwich College) - harzicn\n  Nick Brown (Cardiff University) - @techienickb\n  Paolo Pialorsi (PiaSys.com) - @PaoloPia\n  Patrick Galloway - BammaSlim\n  Patrik Hellgren (Sherpas Group) - @patrikhellgren\n  Patrick Lamber (Expertsinside AG) - @patricklamber\n  Paul Bullock (CaPa Creative Ltd) - @pkbullock\n  Paul Schaeflein (AddIn365) - @paulschaeflein\n  Perry Kankam (ThreeWill) - perr12Thre4\n  Peter Paul Kirschner (cubido business solutions GmbH) - @petkir_at{.Link\u0026ndash;primary}\n  Ravi Chandra (Netwoven) - Ravikadri\n  Reidar Husmo (PointTaken) - reidarhusmo\n  Robert Navarrette (Koniag) - @RobNavarrette\n  Russell Gove - russgove\n  Ryan Starno (Washington State University) - CodeRedJack\n  Sai Nikhitha (Sacha Engineering) - @Handle\n  Sergei Sergeev (Mastaq) - @sergeev_srg\n  Shannon Lindsay (Microsoft) - @shan_gsd\n  Sincere Ng - sincereng\n  Smita Nachan - @smitanachan\n  Spencer Harbar (Triumph Media Limited) - @harbars\n  Stefan Bauer (n8d) - @StfBauer\n  Sudharsan Kesavanarayanan (NTT Digital Business Solutions) - @sudharsank{.Link\u0026ndash;primary}\n  Tetsuya Kawahara - @techsn_k\n  TimOdell - Chiliyago\n  Theresa Lubelski - @SharePointMadam\n  Todd Baginski (Canviz) - @toddbaginski\n  Todd Klindt (Sympraxis Consulting) - @ToddKlindt\n  Tom Laciano - @tomllcskid\n  Tom Morgan (Modality Systems) - @tomorgan\n  Tomasz Poszytek - @TomaszPoszytek\n  Tomi Tavela (RND Works) - @tavikukko\n  Tracy Chesson - chesson25\n  Wictor Wilen (Avanade) - @wictor\n  Velin Georgiev (Pramerica) \u0026ndash; @velingeorgiev\n  Veronique Lengelle (CPS) - @veronicageek\n  victorbutuza - victorbutuza\n  vin-ol - vin-ol\n  Vineet Desai - vineet2907\n  Yannick Plenevaux (PVX Solutions) - @yp_code\n  Yannick Reekmans (Qubix) - @YannickReekmans Companies: Here\u0026rsquo;s the companies, which provided support for PnP initiative for this month by allowing their employees working for the benefit of others in the community. There were also people who contributed from other companies during last month, but we did not get their logos and approval to show them in time for these communications. If you still want your logo for this month\u0026rsquo;s release, please let us know and share the logo with us. Thx.     Microsoft people: Here\u0026rsquo;s the list of Microsoft people who have been closely involved with the PnP work during last month.\n Allen Snow - @asnow003 April Dunnam - @aprildunnam Arun Kumar Anaparthi - arun-msft Ayca Bas - @aycabs Bert Jansen - @O365Bert Beth Pan - @beth_panx Bob German - @Bob1German Brad Schlintz - @bschlintz Callum Crowley - @CallumNCrowley Chakkaradeep (Chaks) CC - @chakkaradeep Charles Sterling - @chass Dan Wahlin - @DanWahlin David Chesnut - davidchesnut Doğan Erişen - derisen Elise Yang - @elisenyang Jason Johnston - jasonjoh Jeremy Kelley - @Fizzlenik Joanne Hendrickson - JoanneHendrickson John Nguyen - johnguy0 John Sudds - jsuddsjr Karthig Balendran - @KarthigBalendr1 Kevin Coughlin - @kevintcoughlin Kiran Thomas - @notkiran Koen Zomers - @koenzomers Laura Graham - Lauragra Linda Lu Cannon - lindalu-MSFT Loki Meyburg - @lokimeyburg Luca Bandinelli - lucaband Matt Wolodarsky - @mwolodarsky Melissa Torres - @Meltorac Miceile Barrett (Microsoft) - @MSFTMiceile Mikael Svenson - @mikaelsvenson Nik Charlebois - @NikCharlebois Nick Kramer - nkramer Nicolas Vogt - vogtn Nidhi Sharma - @nidsonbirdie Nikola Metulev - @metulev Pam Green (Microsoft) - @contextuallib Pat Miller - @PatMill_MSFT Patrick Rodgers - @mediocrebowler Rabia Williams - @williamsrabia Saikrishna-MSFT - Saikrishna-MSFT Shane Weaver - shweaver-MSFT Sébastien Levert - @sebastienlevert Steven Jia - Steven-Jia Tomomi Imura - @girlie_mac Vesa Juvonen - @vesajuvonen Waldek Mastykarz - @waldekm  PnP Team PnP Team manages the PnP community work in the GitHub and also coordinates different open-source projects around Microsoft 365 topics. PnP Team members have a significant impact on driving adoption of Microsoft 365 topics. They have shown their commitment to the open-source and community-driven work by constantly contributing to the benefit of the others in the community. Thank you for all that you do!\n Albert-Jan Schot (Portiva) - @appieschot Alex Terentiev (SharePointalist) - @alexaterentiev Andrew Connell (Voitanos) \u0026ndash; @andrewconnell Andrew Koltyakov (ARVO Systems) \u0026ndash; @andrewkoltyakov Beau Cameron (Aerie Consulting) - @Beau__Cameron Chris Kent (DMI) \u0026ndash; @theChrisKent David Warner II (Catapult) - @DavidWarnerII Elio Struyf (Valo Intranet) \u0026ndash; @eliostruyf Emily Mancini (Sympraxis Consulting) - @EEMancini Eric Overfield (PixelMill) - @EricOverfield Erwin van Hunen (Valo Intranet) \u0026ndash; @erwinvanhunen Frank Cornu (aequos) - @FranckCornu Garry Trinder (CPS Solutions) - @garrytrinder Hugo Bernier (Point Alliance) - bernierh Julie Turner (Sympraxis Consulting) - @jfj1997 Laura Kokkarinen (Sulava) - @LauraKokkarinen Luise Freese - @LuiseFreese Marc D Anderson (Sympraxis Consulting) - @sympmarc Paolo Pialorsi (Piasys.com) \u0026ndash; @PaoloPia Paul Bullock (CaPa Creative Ltd) - @pkbullock Rabia Williams (Engage Squared) - @williamsrabia Stefan Bauer (n8d) \u0026ndash; @StfBauer Velin Georgiev (Pramerica) \u0026ndash; @velingeorgiev Veronique Lengelle (CPS) - @veronicageek Wictor Wilen (Avanade) - @wictor Yannick Plenevaux (PVX Solutions) - @yp_code Here are the Microsoft Internal PnP Core team members: April Dunnam - @aprildunnam Bert Jansen \u0026ndash; @O365Bert Bob German - @Bob1German Koen Zomers - @koenzomers Mikael Svenson \u0026ndash; @mikaelsvenson Patrick Rodgers \u0026ndash; @mediocrebowler Rabia Williams - @williamsrabia Sébastien Levert - @sebastienlevert Vesa Juvonen \u0026ndash; @vesajuvonen Waldek Mastykarz \u0026ndash; @waldekm  Next steps See all of the available community calls, tools, components and other assets from https://aka.ms/m365pnp. Get involved! Got ideas or feedback on the topics to cover, additional partnerships, product feature capabilities? - let us know. Your input is important for us, so that we can support your journey in Microsoft 365. \u0026ldquo;Sharing is caring\u0026rdquo;\nMicrosoft 365 Community (PnP) \u0026ndash; March 9th 2021\n","image":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-community-pnp-march-2021-update/images/march-2021-pnp-monthly-update-promo_hu083427de49f2db03ca27501e942a9605_650928_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-platform-community-update/microsoft-365-community-pnp-march-2021-update/","tags":[],"title":"Microsoft 365 Community (PnP) -- March 2021 update"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts \u0026ndash; Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Belgium-based Senior Service Engineer from Microsoft - Bert Jansen | @o365bert. Bert splits his time coaching ISVs and Partners on how to get the most out of their SharePoint Online experience and on PnP Community projects \u0026ndash; Modernization and PnP Core SDK. This episode\u0026rsquo;s discussion focuses on why Partners and ISVs would be interested in Microsoft 365 \u0026ndash; the Intelligent file handling platform, on-site migrations \u0026ndash; on-prem to cloud \u0026ndash; classic to modern, and on modern pages - APIs, Microsoft Graph and PnP Core SDK. A blog busting 23 articles and videos were published by Microsoft and Community members in the last week. This episode was recorded on Monday, March 8, 2021.\n Video at Microsoft 365 Community YouTube channel    Podcast format at https://pnpweekly.podbean.com.    These videos and podcasts are published each week and are intended to be roughly 45 - 60 minutes in length. Please do give us feedback on this video and podcast series and also do let us know if you have done something cool/useful so that we can cover that in the next weekly summary! The easiest way to let us know is to share your work on Twitter and add the hashtag #PnPWeekly. We are always on the lookout for refreshingly new content. \u0026ldquo;Sharing is caring!\u0026rdquo;](https://twitter.com/search?q=%23pnpweekly) Here are all the links and people mentioned in this recording. Thanks, everyone for your contributions to the community!\nMicrosoft articles  Microsoft Viva announcements at Microsoft Ignite - Seth Patton (Microsoft) | @SethPat What\u0026rsquo;s New in Microsoft Teams | Microsoft Ignite 2021 - Microsoft What\u0026rsquo;s new for Microsoft Lists - Microsoft Ignite 2021 [Mar.2-4] announcements - Mark Kashman (Microsoft) | @mkashman Secure and compliant collaboration with Microsoft Teams - Microsoft New inclusive features in Microsoft Teams and more | Ignite 2021 Edition - Microsoft Help employees transition to hybrid work using a new SharePoint site template and end-user training - Matt Wolodarsky (Microsoft) | @mwolodarsky What\u0026rsquo;s new in Security and Compliance in SharePoint, OneDrive, and Teams - Microsoft Ignite 2021 - Sesha Mani (Microsoft) | @SeshaManiS SharePoint Roadmap Pitstop: February 2021 - Mark Kashman (Microsoft) | @mkashman What\u0026rsquo;s new for Microsoft 365 and Teams Platform @ Ignite 2021 - Microsoft What\u0026rsquo;s new for Excel add-ins developers in 2021 - Keyur Patel (Microsoft) | @keyurp32 Introducing Microsoft Viva Connections - Adam Harmetz (Microsoft) | @AdamHarmetz What is Azure Communication Services and how to get started? - Dan Wahlin (Microsoft)   Community articles  To write code comments or not, it should not be a question - Elio Struyf (Valo Intranet) | @eliostruyf Modernization lives on in PnP Framework - Paul Bullock (CaPa Creative) | @pkbullock Should we use SharePoint REST or Microsoft Graph API in Power Automate? - Luise Freese | @LuiseFreese How to create a (faux) table in Adaptive Cards with Power Automate - Luise Freese | @LuiseFreese Avoid Unnecessary Looping (Apply to each) in Power Automate - Leon Armston (Intelogy) | @LeonArmston How to start a new SPFx web part project with Microsoft Graph Toolkit and React - Yves Habersaat (Sword Group) | @yhabersaat Episode #144​ - Creating Teams Link Unfurling Extensions with Yo Teams v 3.x - Paolo Pialorsi (PiaSys) | @PaoloPia SharePoint Framework for beginners 2021 | Episode 01 - Introduction - Rob Pearmain (yorcloud) | @robertpearmain New Features Coming to Microsoft Teams - William Holland (ThreeWill) | @_wcholland [SPFx] Init API permissions for your SPFx projects without deploying them - Michaël Maillot (onepoint) | @michael_maillot SharePoint Syntex AI - tips for choosing between document understanding and form processing models - Chris O\u0026rsquo;Brien (Content+Cloud) | @ChrisO_Brien  Additional resources  Migration Tool - Metalogix Content Matrix (Qwest)  Blog \u0026ndash; Microsoft 365 PnP Blog  PnP Sharing is Caring initiative - Getting started guidance and training for using GitHub and contributing to the community Want to ask a question or in general engage with the community - Add a note in the Microsoft 365 PnP Community hub at https://aka.ms/m365pnp/community Check out all the great community calls, SDKs, and tooling for Microsoft 365 from https://aka.ms/m365pnp  If you\u0026rsquo;d like to hear from a specific community member in an upcoming recording and/or have specific questions for Microsoft 365 engineering or visitors \u0026ndash; please let us know. We will do our best to address your requests or questions.\n\u0026ldquo;Sharing is caring!\u0026rdquo;\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-117/images/pnp-weekly-117_hu580041a291b661f544cc2f1e4c7d056e_656991_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-117/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 117"},{"categories":["Community post"],"contents":"Using SharePoint Framework you can extend portals on Microsoft 365 and expose your apps where people work. Here are some resources to get you started.\nWhat is SharePoint Framework and why should you care SharePoint Framework is a development model for building apps on Microsoft 365. Originally, it started as a way to extend SharePoint portals. Nowadays, it allows you to also build apps for Microsoft Teams. When you use SharePoint Framework to build your apps, you don\u0026rsquo;t need to worry about hosting and auth. You can build your app using any client-side framework you want and easily deploy your app to your users.\nResources for getting started with SharePoint Framework Here is a list of resources to help you get started with building apps using the SharePoint Framework.\nIntroduction to customizing and extending SharePoint (learn module) If you like a structured way of learning, this is the best place to start. This learn module takes you through the basics of what SharePoint Framework is, what kind of apps it allows you to build and how to do it. This module is a part of a larger learning path that allows you to get certified as a Microsoft 365 developer. View the learn module\nHands-on tutorials for SharePoint development If you prefer a more hands-on approach, the SharePoint development tutorials and training are another great place to start. There are both written and recorded walkthroughs presenting the different aspects of building solutions using SharePoint Framework. They\u0026rsquo;re kept up-to-date with the latest version of SharePoint Framework so it\u0026rsquo;s a great resource for you to bookmark. View the hands-on tutorials for SharePoint development\nSharePoint development docs Once you\u0026rsquo;re past the basics, the official SharePoint Framework is a great place to deepen your knowledge. In the docs you will find explanation of the different capabilities and how they work. The docs also offer prescriptive guidance on topics such as how to implement SharePoint Framework in development teams or what enterprise organizations should take into account. View SharePoint Framework docs\nMicrosoft 365 Community Microsoft 365 has a vibrant community that supports each other in building apps on Microsoft 365. We share our experiences through regular community calls, offer guidance, record videos and build tools to speed up development. You can find everything we have to offer at aka.ms/m365pnp.\nStart building your apps on Microsoft 365 today Over 250 million users work with Microsoft 365 and using SharePoint Framework is an easy way to bring your application to where people are. I\u0026rsquo;d encourage you to check out the resources I mentioned and give SharePoint Framework a try. And if you have any questions, don\u0026rsquo;t hesitate to ask them on our community forums at aka.ms/m365pnp-community.\nLooking forward to hearing what you\u0026rsquo;ve built!\n","image":"https://pnp.github.io/blog/post/getting-started-with-sharepoint-framework/images/graph_hu3251c1fcf7e893f38de48b1cf5e292a8_675045_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/getting-started-with-sharepoint-framework/","tags":["SharePoint framework (SPFx)"],"title":"Getting started with SharePoint Framework"},{"categories":["Community post"],"contents":"Context\nMicrosoft Graph Toolkit is a set of reusable components working with Microsoft Graph to accelerate your web developments with SharePoint Online, Microsoft Teams and more. With this kit, developers don\u0026rsquo;t have to write any code for authentification and authorization so I\u0026rsquo;m sure you\u0026rsquo;ll save a lot of time using it in your various projects. Now let\u0026rsquo;s see how we setup a SPFx web part project with Microsoft Graph Toolkit and React!\nCreate a new SPFx web part project\nFirst, we need to create a new SPFx web part project with React framework using Yeoman generator tool:\nyo @microsoft/sharepoint Note: don\u0026rsquo;t forget to choose React framework during the setup of your project and use default project settings.\nInstall Microsoft Graph Toolkit for React\nTo install Microsoft Graph Toolkit for React, we need to install two packages with npm as below:\n mgt mgt-react  But why two packages? Because we need to use Providers and SharePointProvider classes included in mgt to pass the web part context to mgt-react components inside onInit method of the web part.\nInstall the two required packages with the following npm commands:\nnpm i @microsoft/mgt npm i @microsoft/mgt-react Install MGT dependencies\nTo use Microsoft Graph Toolkit components with React, we need to use TypeScript 3.7 at least. Install this dependency with the following npm command:\nnpm i @microsoft/rush-stack-compiler-3.7 --save-dev Note: -dev command add this package inside the devDependencies section in package.json file. Then we need to update the tsconfig.json with the following content at line 2:\n\u0026#34;extends\u0026#34;: \u0026#34;./node_modules/@microsoft/rush-stack-compiler-3.7/includes/tsconfig-web.json\u0026#34; Finally remove the following line from tslint.json to compile the project without any warning:\n\u0026#34;no-use-before-declare\u0026#34;: true Configure MGT in the project\nNow we have installed all the required dependencies, we can configure MGT in our project. First you need to add the API permissions in your package-solution.json file as below:\n\u0026#34;webApiPermissionRequests\u0026#34;: [ { \u0026#34;resource\u0026#34;: \u0026#34;Microsoft Graph\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;User.Read.All\u0026#34; } ] Note: you need to add all API permissions depending on which MGT components you are using in your project. In this example, I just need to read user profiles to display some properties in the web part with a Person component. After this, we need to pass the context of the web part to MGT components, add the following code in your web part file (in my project MgtReactDemoWebPart) as below:\nimport { Providers, SharePointProvider } from \u0026#39;@microsoft/mgt\u0026#39;; // ...  protected onInit() { Providers.globalProvider = new SharePointProvider(this.context); return super.onInit(); } Use MGT components in the project\nWe are ready to use MGT components in our project, in this example I\u0026rsquo;ll use the Person component to display basic informations about the current user. To do this, we need to import classes from mgt-react then using them in our render method as below:\nimport { Person, PersonViewType } from \u0026#39;@microsoft/mgt-react\u0026#39;; // ...  public render(): React.ReactElement\u0026lt;IMgtReactDemoProps\u0026gt; { return ( \u0026lt;div className={ styles.mgtReactDemo }\u0026gt; \u0026lt;Person personQuery=\u0026#34;me\u0026#34; view={PersonViewType.twolines} line2Property={\u0026#34;jobTitle\u0026#34;}\u0026gt;\u0026lt;/Person\u0026gt; \u0026lt;/div\u0026gt; ); } We can now build and run our project for SharePoint Online service (no local workbench) using the following command:\ngulp serve --nobrowser To debug your web part in SharePoint Online service, use the workbench located here:\nhttps://your-sharepoint-online-site/_layouts/workbench.aspx We can now see the result of our web part using MGT in the SPO workbench:\n   That\u0026rsquo;s it, you have configured a SPFx web part project with Microsoft Graph Toolkit and React. You can now integrate other components in your web part project without writing any line of code. And don\u0026rsquo;t forget to look at the Get\ncomponent which provides a great way to query any Microsoft Graph endpoint and display the results with a custom template you made for your line of business application ;) You can read this article in my blog.\nResources\nhttps://docs.microsoft.com/graph/toolkit/get-started/overview\nhttps://docs.microsoft.com/graph/toolkit/get-started/mgt-react\nhttps://www.npmjs.com/package/@microsoft/mgt\nhttps://www.npmjs.com/package/@microsoft/mgt-react\n","image":"https://pnp.github.io/blog/post/how-to-start-a-new-spfx-web-part-project-with-microsoft-graph/images/mgt-react-result-2_hu94a24c48ef43d2fe6c89181331ba852e_15586_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-start-a-new-spfx-web-part-project-with-microsoft-graph/","tags":["SharePoint framework (SPFx)","Microsoft Graph tookit"],"title":"How to start a new SPFx web part project with Microsoft Graph Toolkit and React"},{"categories":["Community post"],"contents":"Use Case Often you want to retrieve just one item in a SharePoint list and then display the value of a property from it. You will use the SharePoint Get Items action with a query (ODATA filter query) i.e. Title eq \u0026lsquo;City\u0026rsquo; and you know that it should only return one record. Unfortunately the SharePoint Get Items action by default returns an array (collection of items) even if there is just one item and even if you specify the Top Count (items to be returned) to be 1. So if you want to use a property from the Get Items action then Power Automate will automatically add the action to an Apply to each loop as it comes from an Array (see image below).\n   If we test the Flow and we can see there is only one object in the array so we can see the Apply to each loop is unnecessary as it does not need to loop through any other items.\n   I always like to reduce the amount of actions and loops in Power Automate for speed and readability reasons.\nRemove unnecessary Apply to each loops with the first() function I will now show you how to avoid having unnecessary Apply to each loops being added to your Flow and instead just access the first element of the array using an Expression.\nEnter to the room: the Power Automate first function which is used for retrieving the first item from an array or string. Now we will delete the Apply to each loop from our Flow and then create a new Compose action where we will enter the following expression to access just the Title property of the list item without a loop.\n   In the image below I will describe the expression: in blue the first() expression is being used and within it is brackets () in red is a body reference to the SharePoint Get Items action. If you have renamed the SharePoint Get Items action then you will need to replace \u0026lsquo;Get_Items\u0026rsquo; with the name of your action with spaces replaced by underscores. Next in Grey is the SharePoint value column which holds all of the SharePoint list item values in an array \u0026ndash; this does not need to be changed. The first function brackets are then closed in blue. Then finally in green enter the internal name of the SP column you wish display in my case the Title column.\n   The above expression could also be done with the following expression using [0] to access the first element of the array. However using the first() function is much better for readability.\nI will now test my Flow by running it and we can now see from the image below that it ran successfully and without a adding the Compose action to a Apply to each loop.\n   Summary So there we have it we have learnt how to remove unnecessary Apply to each loops when using the SharePoint Get Items action by using the First() function. You can use the knowledge you have learned in this article to reduce the amount of actions and loops in your flows in Power Automate today. As an extra bonus the same first() function can also be used in Azure Logic Apps which names it\u0026rsquo;s loop For each.\n","image":"https://pnp.github.io/blog/post/avoid-unnecessary-looping-apply-to-each-in-power-automate/images/LeonArmston_2-1615045186651_hub9e1432d23493a1591156251b8c08770_22087_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/avoid-unnecessary-looping-apply-to-each-in-power-automate/","tags":["Power Automate"],"title":"Avoid Unnecessary Looping (Apply to each) in Power Automate"},{"categories":["Community post"],"contents":"In this blog post we learn how we can display a table in an Adaptive Card, pull data from a SharePoint list and use Power Automate to do that in one flow.\nWhen I read in the documentation, that tables and headers are not supported, it was somehow a BUMMER 🙄, but then I asked the worlds laziest developer Hugo Bernier, if there was really now way to do it.\nOur first idea was, to templatize an Adaptive Card, and then pass data into that template; but very unfortunately, this isn\u0026rsquo;t supported in Power Automate. Our second idea resolved the whole problem: We would build the JSON for our Adaptive Card like different LEGO bricks and then put them together.\nWe would need\n 1 brick (we will use variables in Power Automate) for the upper part of the Card, where we create a columnset, 3 bricks for the headers of our faux table 3 bricks for the rows over which we will loop 1 brick that contains our \u0026lsquo;Open Link\u0026rsquo; button 1 brick at the end of the card to close all open { and [ with } and ]  To make things a bit more approachable, here is our little\u0026hellip;\nuse case We want to display items of a SharePoint list in an Adaptive Card as a table. The result should look like this:\n Purpose is to notify the Team each Monday about all Unicorns with a unicornibility index of less than 85 so that the team can take care of them. We do not only want to display 1 single item of our list with a factsheet but display as many items as match our query (unicornibility lt 85). We don\u0026rsquo;t want to hard-code any value in here to keep things flexible.\nLet\u0026rsquo;s start building our Power Automate flow recurrence Trigger We start with a Recurrence trigger, set the interval to 1 and the Frequency to Week.\n get Items (SharePoint) Next action is getting the items from our SharePoint list.\nSet Filter Query to unicornibility lt 85 to only get those items, that match our query \u0026ndash; this will ensure a better performance than first pulling all list items and then working with conditions later. You can also limit how many items you want to retrieve.\n Preparations to bind data and JSON schema of the Adaptive Card We want to get a table into an Adaptive Card, which is not supported natively, so we need to do a little trick. We will use variables to build the different pieces of the Adaptive Card JSON, that we will later need. The Code in total would look like this: { \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.2\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Hey Team- watch out! 🦄 need some extra 💖\u0026#34;, \u0026#34;wrap\u0026#34;: true, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;ColumnSet\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Name\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;separator\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;UNICORN1\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;separator\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;UNICORN2\u0026#34; } ], \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Unicornibility\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;separator\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;VALUE1\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;separator\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;VALUE2\u0026#34; } ], \u0026#34;width\u0026#34;: \u0026#34;auto\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Column\u0026#34;, \u0026#34;items\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Bolder\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Party Readiness\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;separator\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;PValue1\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;separator\u0026#34;: true, \u0026#34;text\u0026#34;: \u0026#34;PValue2\u0026#34; } ], \u0026#34;width\u0026#34;: \u0026#34;stretch\u0026#34; } ] }, { \u0026#34;type\u0026#34;: \u0026#34;ActionSet\u0026#34;, \u0026#34;actions\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Action.OpenUrl\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;open here and care 💖\u0026#34; } ] } ] } Let\u0026rsquo;s break this into pieces:\n  First variable will be the upper part of the Adaptive Card in which we define the schema, a title and create a column set.   We initialize variables for the 3 Headers \u0026ldquo;Name\u0026rdquo;, \u0026ldquo;Unicornibility\u0026rdquo; and \u0026ldquo;Party Readiness Index\u0026rdquo;\n     We create an Apply to Each and loop over the values of our SharePoint list for each column by appending our variables\n We append the upper part of our card by the 3 columns (consisting of the headers and rows) and the actionset plus end of the card\n![append columns to card](images/append to Card.png\u0026quot;)\nIn case you wonder why we needed to somehow unclean cut the JSON \u0026ndash; this is a bug in Power Automate.\nAlthough we defined our variables as string, Power Automate asked us to provide valid JSON. We could not provide valid JSON though, because we needed to cut the JSON into pieces.\nWe needed therefore to find a way to make Power Automate believe, that we are not storing JSON in a string variable, and apparently a { at the beginning was a trigger for Power Automate to check if JSON was valid (which was not, but on purpose!).\nOur Code would look color coded like this: [And if we now lay the color-code blocks over the Adaptive Card:]\n You may choose if you want to send the Post as the Flow bot or as a user or if you want to send this into a 1:1 chat or into a Channel. The Adaptive Card is our card variable.\n Conclusion and what\u0026rsquo;s next Although not natively supported, we can actually display a (faux) table in Adaptive Cards and bind this to a datasource. Potentially issues could occur here, as our columns are independent from each other. The Adaptive Cards renders columns, but not rows, which means that if we have different heights, it could be problematic to make them look good and even.\nWhat\u0026rsquo;s next? Find the limit how many rows we can display and what else we could do with Cards :\u0026rsquo;)\nWhat would you like to figure out?\nI am curious, please reply below!\n","image":"https://pnp.github.io/blog/post/how-to-create-a-faux-table-in-adaptive-cards-with-power-automate/images/LuiseFreese_12-1629042402697_hu3268279c95b7cb112d578236c06d44a7_37433_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-create-a-faux-table-in-adaptive-cards-with-power-automate/","tags":["Adaptive cards"],"title":"How to create a (faux) table in Adaptive Cards with Power Automate"},{"categories":["Community post"],"contents":"When working with Microsoft 365, we see many overlapping tools and features, and we will need (to provide) much guidance around \u0026lsquo;when to use what\u0026rsquo; for users. While most comparisons address users, I want to cover some more IT-related scenarios in this blog post. Specifically, I want to compare two different RESTful APIs, which we can use in Power Automate and Azure Logic Apps to send HTTP requests. If you are not familiar with that, don\u0026rsquo;t fret; continue to read my blog post about how to get started with http requests in Power Automate, I will grab a coffee ☕ in the meanwhile.\nBack again? Cool. Let me introduce you to our\nuse case We want to create a new SharePoint list and add some columns based on the user\u0026rsquo;s input using Power Automate or Azure Logic Apps. When we look at the different available SharePoint actions in Power Automate, we will see that there is no \u0026lsquo;create a list\u0026rsquo; and no \u0026lsquo;add column to SharePoint list\u0026rsquo; action, but that we could try out something with \u0026lsquo;send an HTTP request to SharePoint\u0026rsquo;\nOption No. 1: SharePoint REST The \u0026lsquo;send an HTTP request to SharePoint\u0026rsquo; action uses SharePoint REST API. To create a list, we can look up working with lists and lists items and see that we need to send a POST request to the https://{site_url}/_api/web/lists endpoint and specify in the body of our list how it should look like. We can define the title and description of the list and also set the Basetemplate (in case you want to do the same with a library etc.):\nPOST https://{site_url}/_api/web/lists Authorization: \u0026quot;Bearer \u0026quot; + accessToken Accept: \u0026quot;application/json;odata=verbose\u0026quot; Content-Type: \u0026quot;application/json\u0026quot; Content-Length: {length of request body as integer} X-RequestDigest: \u0026quot;{form_digest_value}\u0026quot; { \u0026quot;__metadata\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;SP.List\u0026quot; }, \u0026quot;AllowContentTypes\u0026quot;: true, \u0026quot;BaseTemplate\u0026quot;: 100, \u0026quot;ContentTypesEnabled\u0026quot;: true, \u0026quot;Description\u0026quot;: \u0026quot;My list description\u0026quot;, \u0026quot;Title\u0026quot;: \u0026quot;Test\u0026quot; }  Now how do we do this in Power Automate without writing much code?\nmobile flow button To make things easier, I will use the mobile flow trigger with three text inputs:\n     You can also trigger the flow from a list, a form, an app, a bot, or whatever suits your use case.\nSend an HTTP request to SharePoint - create a list Now we need to add the \u0026lsquo;send an HTTP request to SharePoint\u0026rsquo; action:\n Select the site of your choice from the dropdown menu Select method Post enter _api/web/lists/ as URI enter Headers as follows:  Content-type : application/json;odata=verbose accept:application/json;odata=verbose   enter  \u0026#34;__metadata\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;SP.List\u0026#34; }, \u0026#34;AllowContentTypes\u0026#34;: true, \u0026#34;BaseTemplate\u0026#34;: 100, \u0026#34;ContentTypesEnabled\u0026#34;: true, \u0026#34;Description\u0026#34;: \u0026#34;@{triggerBody()[\u0026#39;text_1\u0026#39;]}\u0026#34;, \u0026#34;Title\u0026#34;: \u0026#34;@{triggerBody()[\u0026#39;text\u0026#39;]}\u0026#34; } as body- make sure you replace the placeholder with Dynamic Content:\n{#tinyMceEditorLuise Freese_1 .mceNonEditable .lia-copypaste-placeholder}     Parse JSON Now we want to add a column. Let\u0026rsquo;s have a look into the documentation, how we can do this.\nPOST https://{site_url}/_api/web/lists(guid'{list_guid}')/Fields Authorization: \u0026quot;Bearer \u0026quot; + accessToken Accept: \u0026quot;application/json;odata=verbose\u0026quot; Content-Type: \u0026quot;application/json\u0026quot; Content-Length: {length of request body as integer} X-RequestDigest: \u0026quot;{form_digest_value}\u0026quot; { \u0026quot;__metadata\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;SP.Field\u0026quot; }, \u0026quot;Title\u0026quot;: \u0026quot;field title\u0026quot;, \u0026quot;FieldTypeKind\u0026quot;: FieldType value, \u0026quot;Required\u0026quot;: \u0026quot;true/false\u0026quot;, \u0026quot;EnforceUniqueValues\u0026quot;: \u0026quot;true/false\u0026quot;, \u0026quot;StaticName\u0026quot;: \u0026quot;field name\u0026quot; }  We need another \u0026lsquo;send an HTTP request to SharePoint\u0026rsquo; action, and we need the list Guid. To get the list Guid, we need to add a Parse JSON action. If you are not familiar with that - I blogged about it: How to use Parse JSON action in Power Automate\nParse JSON  Let your flow run - just the mobile trigger and the \u0026lsquo;send an HTTP request to SharePoint\u0026rsquo; action Go to your flow run history Copy the outputs from the \u0026lsquo;send an HTTP request to SharePoint\u0026rsquo; action add a \u0026lsquo;Parse JSON\u0026rsquo; action to your flow select body from the \u0026lsquo;send an HTTP request to SharePoint\u0026rsquo; action as Content click Generate from sample paste the copied JSON code in here click Done  When we now have a look into our Dynamic Content, we will see many more options, also the list Guid, which is named Id here.\nSend an HTTP request to SharePoint 2 - add a column Now we add another \u0026lsquo;send an HTTP request to SharePoint\u0026rsquo; action, which will create us a column:\n Select the site of your choice from the dropdown menu Select method Post enter _api/web/lists(guid'@{body('Parse_JSON')?['d']?['Id']}')/Fieldsas URI (replace the placeholder with Dynamic content) enter Headers as follows:  Content-type : application/json;odata=verbose accept:application/json;odata=verbose enter in the Body:    { \u0026#34;__metadata\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;SP.Field\u0026#34; }, \u0026#34;Title\u0026#34;: \u0026#34;@{triggerBody()[\u0026#39;text_2\u0026#39;]}\u0026#34;, \u0026#34;FieldTypeKind\u0026#34;: 2, \u0026#34;Required\u0026#34;: \u0026#34;false\u0026#34;, \u0026#34;EnforceUniqueValues\u0026#34;: \u0026#34;false\u0026#34;, \u0026#34;StaticName\u0026#34;: \u0026#34;@{triggerBody()[\u0026#39;text_2\u0026#39;]}\u0026#34; }  Please replace again all placeholder by Dynamic content     Should you stumble upon the FieldTypeKind, please find reference here: FieldTypeKind - 2 means \u0026lsquo;single line of text\u0026rsquo;.\nIf you want to run your flow, please think about changing the list name because you already created a list!\nIf we now control our newly created SharePoint list, we will see that our new column doesn\u0026rsquo;t show up in the default view but that we need to enable the column- bummer!\nSend an HTTP request to SharePoint 3 - add column to view To have the column in the default view (or another view), we need to add another \u0026lsquo;send an HTTP request to SharePoint\u0026rsquo; action:\n Select the site of your choice from the dropdown menu Select method Post enter _api/web/Lists/getByTitle('@{triggerBody()['text']}')/views/getByTitle('All Items')/ViewFields/addViewField('@{triggerBody()['text_2']}')as URI (replace the placeholder with Dynamic content) enter Headers as follows:  Content-type : application/json;odata=verbose accept:application/json;odata=verbose   Body is empty       Advantages of this solution  no need to register an application in Azure AD send an HTTP request to SharePoint is not a premium connector, which means that you won\u0026rsquo;t need a Power Automate Standalone license  Disadvantages of this solution:  with an \u0026lsquo;http request to SharePoint\u0026rsquo; action you have - compared to the power of Microsoft Graph API - limited options, as you can only send requests to SharePoint, but not to other services in Microsoft 365- to add the new column to our default view, we need 3 HTTP requests - which makes the flow unnecessarily more complex  Option No. 2: Microsoft Graph API Let\u0026rsquo;s see how we can create a SharePoint list or library and columns in it using Microsoft Graph. Microsoft Graph is a super powerful set of APIs that gives you a consistent experience for authentication, documentation, and samples. You can try it out on Microsoft Graph Explorer. For full documentation please continue here: Microsoft Graph Docs. If you are not familiar with using Microsoft Graph in Power Automate, please continue to read here time for another coffee for me then :)\nmobile flow trigger Again, to make things easy, we will use the same trigger as in Option No. 1.\n   HTTP action Now that we registered our app in Azure AD, we can continue with the HTTP action in Power Automate.\nTo create a list, we will look up documentation here and see that we will need to send a POST request to\nhttps://graph.microsoft.com/v1.0/sites/{site-id}/lists\nAnd that we will need to add permissions to be able to call this API. Our HTTP request requires authentication, which can be done via Azure Active Directory OAuth, but we will first need to represent our app (yes, this flow that calls Microsoft Graph is an application) in Azure AD.\nWe will follow these steps to register an app in Azure AD:\n Go to portal.azure.com and log in Select app registrations Select New App registration Give your app a nice name Save tenant ID and Client(app) ID somewhere (notepad or similar) Click API PERMISSIONS and select Microsoft Graph  Now look up the permissions needed for this action: Create a new list:\nApplication Sites.ReadWrite.All\n Select all these permissions Grant Admin consent Click Certificates \u0026amp; secrets Click New client secret Type in a description Click Add Copy the value and save it in your notepad (you will need that later)  Initialize variables for Tenant ID, App ID and App Secret Create three different string variables with the copied values of Tenant ID, App ID, and App Secret\nHTTP action to create a list Add an HTTP (not \u0026lsquo;send an HTTP request to SharePoint action) action to your flow and fill it out as follows:\n Method: Post URI: https://graph.microsoft.com/v1.0/sites/{site-id}/lists - You can obtain the site-id from a request in Graph Explorer: https://graph.microsoft.com/v1.0/sites?search=keyword add Content-Type: application/json to the Headers enter as body:  { \u0026#34;displayName\u0026#34;: \u0026#34;@{triggerBody()[\u0026#39;text\u0026#39;]}\u0026#34;, \u0026#34;columns\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;@{triggerBody()[\u0026#39;text_2\u0026#39;]}\u0026#34;, \u0026#34;text\u0026#34;: {} } ], \u0026#34;list\u0026#34;: { \u0026#34;template\u0026#34;: \u0026#34;genericList\u0026#34; } } Replace the placeholders by Dynamic Content If you stumble off the genericList, please read here for reference about other list templates like libraries.\nIf you need to add more columns, you can do that by\n{ \u0026quot;displayName\u0026quot;: \u0026quot;@{triggerBody()['text']}\u0026quot;, \u0026quot;columns\u0026quot;: [ { \u0026quot;name\u0026quot;: \u0026quot;@{triggerBody()['text_2']}\u0026quot;, \u0026quot;text\u0026quot;: {} }, { \u0026quot;name\u0026quot;: \u0026quot;@{triggerBody()['text_3']}\u0026quot;, \u0026quot;text\u0026quot;: {} }, { \u0026quot;name\u0026quot;: \u0026quot;@{triggerBody()['text_4']}\u0026quot;, \u0026quot;text\u0026quot;: {} } ], \u0026quot;list\u0026quot;: { \u0026quot;template\u0026quot;: \u0026quot;genericList\u0026quot; } }  and so on. Let\u0026rsquo;s go ahead and\n Click Advanced Options Select Active Directory OAuth Enter https://login.microsoftonline.com as Authority Enter the Tenant ID variable as Tenant Enter https://graph.microsoft.com as Audience Enter the App ID variable as Client ID Select Secret as Credential Type Enter the App Secret variable as Secret      When we now run our flow, we will see that the columns that we created are already visible in the default view.\nAdvantages of this solution  We only need one HTTP request to Create a list, columns and have the columns in the default view If our flow gets more complex over time and we provision more things in not only SharePoint, we can do this with Microsoft Graph as well and extend our permission scope in Azure AD app registration  Disadvantages of this solution  Because HTTP is a premium connector, we will need a Power Apps Standalone license We also need to register an app in Azure AD  Bonus Chapter: What about CLI Microsoft 365? If you read one of my previous blog posts about How to get started with CLI Microsoft 365 and Adaptive Cards, you could read between the lines that I found CLI Microsoft 365 pretty cool. Although I wanted to compare SharePoint REST and Microsoft Graph API using Power Automate in this Post, I felt it could be a cool idea to check how things would go in CLI Microsoft 365.\nIf you are not familiar with it, please read my blog post first or head over to the full documentation. After you installed CLI Microsoft 365, open a shell that makes you happy (I use PowerShell inside Visual Studio Code Terminal).\nLogin  Run m365 login Copy the Login Code, select the link Paste the Login Code Select the user you want to log in with from the list Return to your shell window  Create a list  Run m365 spo list add --title Awesome%20List --baseTemplate DocumentLibrary --webUrl https://xxx.sharepoint.com/sites/yyy by replacing xxxby your tenantname and yyy by your sitename  Add fields and more You can now run even more commands to add fields, make them required, add them to default view, and so on, feel free to try it out!\n   Conclusion As always, the answer to the question \u0026quot;When shall I use what\u0026quot; will be a typical consultant \u0026lsquo;It Depends.\u0026rsquo; Depending on your experience and skillset, the scope of your app, and how you approach it, you will prefer one tool over another - the purpose of this blog was to share some options to achieve the same thing - with creating a SharePoint list as an example. Please tell me - which solution would you prefer? Which are your use cases? Please reply below; I am curious!\n   ","image":"https://pnp.github.io/blog/post/should-we-use-sharepoint-rest-or-microsoft-graph-api-in-power/images/hello-i-m-nik-n1ccr-zVG68-unsplash_hu7e0015561d098952e455e7bff58a8a23_532373_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/should-we-use-sharepoint-rest-or-microsoft-graph-api-in-power/","tags":["Microsoft Graph","SharePoint"],"title":"Should we use SharePoint REST or Microsoft Graph API in Power Automate?"},{"categories":["Community post"],"contents":"Using the Modernization tooling, classic SharePoint pages can be converted to Modern pages residing in Microsoft 365 Team or Communication sites.\nThe overall benefit of using this tooling, is that you can scan the environment to get an inventory by using the Modernization scanner (SharePoint Online only); and then with the Page Transformation tools, you then have the option to move your classic content to the modern experience - this supports either an on-premises SharePoint system or sites in SharePoint Online. The tooling is focused on the pages in classic sites and will allow you to keep and convert that content in which you have invested in resources to produce.\n There is currently a major multi-step project to move away from older versions of PnP Sites Core and PnP PowerShell to taking advantage of modern .NET 5 and refocus the SDK to Graph first. For details of this project check out this blog for more details about the long term plans for the project for General Availability of the new PnP Framework library for automating SharePoint Online operations\n    The modernization tooling is dependent on the PnP Sites Core, we are pleased to announce this now has been ported and integrated into PnP Framework as part of the steppingstone of improvements \u0026ndash; meaning you can continue to take advantage of this tooling, if you wish, via either new PnP.PowerShell library that contains the cmdlets required to perform page transformation or the PnP.Framework NuGet package to use in your .NET applications.\n There is one caveat with the move to PnP Framework, that we have no longer support for SharePoint 2010, due to the widening gaps between Office 365 APIs and the older SharePoint 2010 APIs (which is also coming up for retirement in April 2021).\n To resolve the issues, we would have to spend significant time engineering a fix and we feel that better value of time can be used to continue integrating into the newest frameworks. If you wish to use the tooling with SharePoint 2010 support then please download the older versions Alternatively, you can use a migration tool to copy the classic sites to SharePoint Online and then convert to modern.\n  Old GitHub Repository Location New GitHub Repository Location PnP-Sites-Core repository (archived) PnP Framework repository PnP-PowerShell repository (archived) PnP.PowerShell repository SP-Dev-Modernization repository PnP Framework repository\n  As PnP Sites Core and older PnP PowerShell GitHub repositories are now archived, this will mean these are no longer updated and there will be no further releases of PnP PowerShell (classic) and PnP Sites Core.\nUpdates to the modernization tool, specifically the page transformation tool are no longer being released as this would require a new release of the underlying archived frameworks; updates will now be released via the PnP Framework repository and as these now have builds either nightly or monthly, you will be able to take advantage of updates the next day \u0026ndash; to use these nightly versions, you can install the prerelease version of the PowerShell modules from the gallery or grab the latest NuGet packages.\n The Modernization scanner is currently being maintained for the time being in the SP-Dev-Modernization repository, as this tool is , any issues found with this tool can continue to be posted to this repository.\nFor bugs, enhancements with the page transformation tooling, please post to the issues list on the PnP Framework page \u0026ndash; these will then be investigated and any bug or enhancement that is written as a outcome of the issue will be included in the nightly builds of PnP Framework.\n Currently, the PnP Core SDK that will eventually replace PnP Framework is currently in beta and is currently under active development. When this is complete, the next steps are to transition all the tooling, PnP Framework, PnP PowerShell, and Modernization tooling to utilize this library -details on timelines and what features are included will be announced on a later date.\n","image":"https://pnp.github.io/blog/post/should-we-use-sharepoint-rest-or-microsoft-graph-api-in-power/images/hello-i-m-nik-n1ccr-zVG68-unsplash_hu7e0015561d098952e455e7bff58a8a23_532373_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/modernization-lives-on-in-pnp-framework/","tags":["SharePoint"],"title":"Modernization lives on in PnP Framework"},{"categories":["Community post"],"contents":"Comments, just do it. I write this post because I read a couple of articles, and messages on social platforms about stop using comments in your code. In some cases, there is good reasoning behind it, but even with this reasoning, I believe that comments are too valuable for your DEV team\nTo start this article, I want to tell you that using comments or not in your codebase is an opinion. There are always PROs and CONs with everything you do or use. I also want to point out that people saying not to use comments are not wrong or right. They have good intentions and believe why they think comments should not exist in your code. For instance, they want to highlight that it is essential to write clean code, invest more in better documentation, less code smells, and many more reasons.\nI agree that we need to make our code better, write better documentation, and do more end-to-end testing, but comments have no impact on these points. They might even improve some of these points.\nComments == Clean Code Writing comments in your code does not mean that your code cannot be clean.\nWhat is clean code? Clean code is yet again an opinion. It is like when you ask a kid to clean their room. Two minutes later, they tell you it is completed. When you go to their room, they put everything in a box. For them, that is cleaning, but is it for you? Maybe you like that all of their stuff is sorted in different boxes.\nWhen you write code, the first intent should be to write it so that everyone can understand it. Sometimes you implement the functionality so that you need to remind yourself why you did it or tell someone else. If you would not do it, it can lead to bugs later on in the process, when someone would refactor the code.\nBy not writing comments, you make the assumption everyone else is on par with you. That would be so great, but this is far from the truth.\nImportant: Never assume anything\nI still know when C# introduced Linq or Lambda expressions. It was very easy to refactor all your loops to use this new way of writing your code. Instead of 10 lines, you ended up with two lines. Incredible, you might think, but many developers did not even know what was happening. It was too new, and some developers were using tools to do the refactoring of this. At that time, in the company I was working in, we decided to educate everyone before refactoring all the code to use it. Once everyone understands how it works, we could think about starting to use it.\nOnce everyone understood it, we also started commenting when we refactored these lines. Everyone in the team indeed understood it, so what is the point? Well, new developers are joining the team.\nAnother good reason from Wassim Chegham\n   Comments != bad code Comments cannot fix bad code or bugs. This statement is something I read as well in one of the articles. I agree that comments cannot fix bad code, but what is the reason for the bad code, and what is bad code?\nAgain, it assumes that the other developer has the same skills as you.\nWhat if a junior developer in your team wrote the code?\nIf there were comments, you could see where she/he was after. Show the person how to write the particular code more solidly. Or teach them why you think this is bad behavior. We were not perfect the first time when we were writing code, and still, each day, we learn new things ourselves.\nIt might even be so that the comments will help you fix the bug, but the comments will not create the bug. Comments lead to more productivity Many believe that comments lead to noise in the codebase, but is this actually true?\nI Believe that having comments in the code is beneficial for productivity. Imagine if you do not understand a part of the logic or why functionality was implemented in a particular way.\nHaving no comments or references, you might need to go through the whole code step by step to understand the person\u0026rsquo;s thoughts and implementation. Another option would be to call the person to clear things out, but two people are less productive during that call.\nComments are a way of communication Communication in your team is crucial. A great team relies on good communication.\nComments are a way to communicate to other developers to give more information about how a particular functionality is implemented.\nChallenges Comments also come with a couple of challenges, which I believe are a way of working or guidelines in your team.\n[Outdated comments] What do you do when you implement a breaking change? Do you leave your documentation untouched?\nYou will have to do an update to your documentation. The same goes for your comments. When you refactor code, you will have to update the comments or remove them if it does not make sense anymore.\nUpdating your comments is good developer behavior.\nOver-documenting I also read that many think you need to document in multiple locations when you are writing comments. Comments are not documentation.\nDocumentation: material that provides official information or evidence or that serves as a record.\nComments will not serve as the official information about how your solution works or how you can use it.\nComments: an explanatory note in a book or other written text.\n Do not write comments for having more lines of code. Do not write comments to document your code. Write comments if it makes sense to write them. For instance, to prevent someone else from writing the same mistake. Use them to explain the `why`, not the `what`.  Comments create noise in your code In my opinion, it also creates structure. It let your eyes rest. Take a break. For me, line breaks are even more important to add to your code and the number of code lines.\nI have a hard time focusing on code when there are too many lines in one file, hardly any line breaks, and no comments. When this is the case, it feels like I am on a boat and get a bit see sick. The reason for this is due to my astigmatism, also the reason why I am wearing glasses.\nAs these lines of code might feel noise to you, to me, they give my eyes a break. Let me focus on the next block of code.\nWhy should you comment? The most crucial reason to comment is for yourself as this will help the future you from understanding your own code.\nThe next reason is to help others understand you. Suppose an employee takes over a project from you or enters your team. It will make their lives easier. Or when you do a handover when leaving the company, the person sill not have any ways to contact you anymore. Would you like it that you enter a codebase where you do not understand any of the written logic?\nCommenting tips  KISS: Keep it short and simple - you do not need to write a book. Do not comment-out lines of code. During debugging/testing, this might happen, but make sure not to check in these lines. This behavior leads to code smells. Be sure your code lives inside source-control. That way, you do not have to worry about a deleted line of code. The main reason why this behavior happens is not to lose that one precious line of code. Write code you understand so that you do not always need to comment. Explain the why not the what.  If you need to explain the what, in many cases, it is too difficult to understand. Try to simplify, if not possible, you can comment. An example could be the screenshot from above.    Best of both worlds There is a solution for everything. Almost everything can be solved by code. If you are a person that does not like to see comments, I have created just the VSCode Extension for you. With the Hide Comments extension, you decide if you want to show or hide the comments for the project.\n   ","image":"https://pnp.github.io/blog/post/to-write-code-comments-or-not-it-should-not-be-a-question/images/comments1_hu49b7f61ae2afecc6d168fa7738df212f_132469_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/to-write-code-comments-or-not-it-should-not-be-a-question/","tags":[],"title":"To write code comments or not, it should not be a question"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by Porto, Portugal-based MVP, João Mendes – Senior Office 365 Solution/Architect Developer, Storm Technology Ltd | @joaojmendes. The episode’s discussion focuses on being familiar with your tools in order to create beautiful apps, the need for a Fluent tutorial, and top features that could be added to SPFx one day and on João’s story-filled career.\nThe session was recorded on Monday, March 1, 2021.\n Video at Microsoft 365 Community YouTube channel.    Podcast format at https://pnpweekly.podbean.com.    Did we miss your article? Please use #PnPWeekly hashtag in the Twitter for letting us know the content which you have created. As always, if you need help on an issue, want to share a discovery, or just want to say: “Job well done”, please reach out to Vesa, to Waldek or to your Microsoft 365 PnP Community.\nSharing is caring!\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-116/images/pnp-weekly-116_hu11b4a60bebe59da865bffe2fa3906c28_895556_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-116/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 116"},{"categories":["CLI for Microsoft 365"],"contents":"We\u0026rsquo;ve just published a new version of the CLI for Microsoft 365 with new commands for working with and managing Microsoft 365 tenants and SharePoint Framework projects on any platform.\nManage Microsoft 365 and SharePoint Framework projects on any platform CLI for Microsoft 365 is a cross-platform CLI that allows you to manage various configuration settings of Microsoft 365 and SharePoint Framework projects no matter which operating system or shell you use. While building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it\u0026rsquo;s inconvenient for them to have to use a Windows virtual machine to configure their tenants. With the CLI for Microsoft 365, you can configure your tenant no matter which operating system you use. Additionally, using CLI for Microsoft 365, you can manage your SharePoint Framework projects. New version of CLI for Microsoft 365 \u0026ndash; v3.6 Following our monthly release cadence, we released this new version of CLI for Microsoft 365 with some new commands and improvements. Here are some of the most noteworthy additions. For the full list of changes, see our release notes.\nEnsure SharePoint site When building provisioning scripts, you often need to check if a particular site already exists. If it doesn\u0026rsquo;t, you need to create it. If it does, you need to check if it has the necessary settings. Depending what exactly you need to check, this logic can become pretty elaborate. If you need to create a couple of sites, you\u0026rsquo;re quickly looking at lengthy scripts that you not only need to write but also maintain.\nTo help you easily ensure that sites with the right configuration exists, we introduce the spo site ensure command. Using this command, you can for example easily ensure that a site exists at the specified URL and create one if it doesn\u0026rsquo;t:\nm365 spo site ensure --url https://contoso.sharepoint.com/sites/team1 --alias team1 --title \u0026#34;Team 1\u0026#34; Using the command you can also ensure that the site that exists has the right type and properties:\nm365 spo site ensure --url https://contoso.sharepoint.com/sites/team1 --alias team1 --title \u0026#34;Team 1\u0026#34; --isPublic --shareByEmailEnabled This is the first ensure command that we introduce in CLI for Microsoft 365. We\u0026rsquo;d love you to give it a try and tell us what you think. For more information about what\u0026rsquo;s possible, see the command\u0026rsquo;s documentation.\nConfigure SharePoint site chrome Microsoft is continuously investing in modernizing SharePoint. With every update, we get more features to build rich portals in a robust and future-ready way. One of the recently introduced features is site chrome that allows you to control how the site\u0026rsquo;s header and footer look like. In this version of CLI for Microsoft 365, we introduce a command that allows you to control site\u0026rsquo;s chrome. To show site\u0026rsquo;s header in compact mode, execute:\nm365 spo site chrome set --url https://contoso.sharepoint.com/sites/project-x --headerLayout Compact  To show site\u0026rsquo;s header in extended mode and align the logo to the right, execute:\nm365 spo site chrome set --url https://contoso.sharepoint.com/sites/project-x --headerLayout Extended --logoAlignment Right  To disable the footer, execute:\nm365 spo site chrome set --url https://contoso.sharepoint.com/sites/project-x --disableFooter true  For the full list of supported settings, see the command\u0026rsquo;s documentation. Copy SharePoint pages and page templates When working with pages and page templates, you might want to copy specific pages or page templates in bulk. The easiest way to automate it, is using CLI for Microsoft 365. In this version we introduce a command that let\u0026rsquo;s you copy the specified page or page template. To copy a page template, execute:\nm365 spo page copy --webUrl https://contoso.sharepoint.com/sites/team-a --sourceName \u0026#34;templates/PageTemplate.aspx\u0026#34; --targetUrl \u0026#34;page.aspx\u0026#34; To copy a page to another site, execute:\nm365 spo page copy --webUrl https://contoso.sharepoint.com/sites/team-a --sourceName \u0026#34;templates/PageTemplate.aspx\u0026#34; --targetUrl \u0026#34;https://contoso.sharepoint.com/sites/team-b/sitepages/page.aspx\u0026#34;  For the full list of supported options, see the command\u0026rsquo;s docs. Manage Power Apps More and more organizations use Power Apps to automate their work. With Power Apps, they can build applications for their business processes with little to no code. To help organizations manage their Power Apps, we introduce in this version three new commands. First, we let you get the list of your Power Apps environments, by executing:\nm365 pa environment list  To get more information about a specific environment, execute:\nm365 pa environment get --name Default-d87a7535-dd31-4437-bfe1-95340acd55c5  To get information about a specific app, execute:\nm365 pa app get --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d These commands extend our set of Power Platform commands. For the list of all commands for Power Platform, see the documentation.\nChanges We\u0026rsquo;ve continued improving CLI, building upon the changes we\u0026rsquo;ve introduced in the previous version. Browser-based login Many organizations become more and more conscious about their security posture. As their awareness matures, they implement more measure to ensure that they can work securely. One of such measures is conditional access that allows organizations enforce specific checks on clients authenticating against their Microsoft 365 tenant. To let organizations who enforce conditional policies use CLI for Microsoft 365, we introduced a browser-based way to login to Microsoft 365. After executing: m365 login --authType browser, CLI for Microsoft 365 will launch a browser, let you sign in and obtain an access token on your behalf. If you have the browser with the right user profile active, the automatically opened login page will give you a smooth login experience without having to copy \u0026amp; paste device code. From that point on, CLI for Microsoft 365 will work exactly the same way you\u0026rsquo;re used to it, allowing you to run scripts and automate managing your tenant. Improved managing SharePoint pages and sites CLI for Microsoft 365 is a great tool for automating managing your Microsoft 365 tenant and SharePoint Framework projects. It\u0026rsquo;s also great as an engine to build other tools on top! Elio Struyf has build a static site generator for SharePoint named Doctor. If you want to author product documentation or a knowledgebase in Markdown but publish it to SharePoint, Doctor is the tool for the job! As Elio is extending Doctor with new capabilities, he\u0026rsquo;s contributed a number of enhancements to managing pages and sites with CLI for Microsoft 365. Improved creating Azure AD apps Recently we\u0026rsquo;ve introduced an easy way to create Azure AD apps with CLI for Microsoft 365. With just one line of code, you can create an app registration full configured to support your scenario. In this version of CLI for Microsoft 365, we extended the command so that it returns the ID of your Azure AD directory, which you need to include in your code when building single-tenant apps. We\u0026rsquo;ve also improved the mechanism to lookup service principal in cases where their names end with a / (slash).\nSimplified retrieving access token for SharePoint When building apps for Microsoft 365, you often need an access token to quickly test your code. The easiest way to get it, is using CLI for Microsoft 365. In this version, we made it even easier by introducing an alias for the resource. If you called SharePoint previously using CLI for Microsoft 365, you can quickly get an access token for SharePoint by executing:\nm365 util accesstoken get --resource sharepoint  Rather than having to specify the full URL of your SharePoint tenant, you can use sharepoint instead. It\u0026rsquo;s that easy! Are there any other aliases that we should add? Sample scripts CLI for Microsoft 365 is a great tool both for quick adjustments to the configuration of your Microsoft 365 tenant as well as automating more complex tasks. Because CLI for Microsoft 365 is cross-platform you can use it on any OS and in any shell. To help you get started using the CLI for Microsoft 365 for automation scenarios, we started gathering some sample scripts. If you have any scripts that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\nExport conversations from Microsoft Teams Channels We utilize Teams during incidents and create channels for each. We would like to be able to export conversation history.\nTo help you quickly export conversations from the teams your members of, Joseph Velliah contributed a sample script that iterates over your Teams and channels and exports conversations to a JSON fil Contributors This release wouldn\u0026rsquo;t be possible without the help of (in alphabetical order) Hugo Bernier, Luise Freese, Patrick Lamber, Waldek Mastykarz, Nanddeep Nachan, Smita Nachan, John Rafael, Albert-Jan Schot, Elio Struyf, Fredrik Thorild, Garry Trinder, Joseph Velliah and Rabia Williams. Thank you all for the time you chose to spend on the CLI for Microsoft 365 and your help to advance it!\nWork in progress Here are some things that we\u0026rsquo;re currently working on More commands, what else Microsoft 365 is evolving and new capabilities are being released every day. With CLI for Microsoft 365, we aim to help you manage your tenant on any platform in a consistent way, no matter which part of Microsoft 365 you interact with. While we keep adding new commands to CLI for Microsoft 365 each release, we still barely scratched the surface with what\u0026rsquo;s possible in Microsoft 365. In the upcoming versions of the CLI for Microsoft, you can expect us to add more commands across the different workloads in Microsoft 365. Improved managing SharePoint pages Microsoft keeps investing in modern SharePoint pages continuously introducing new capabilities to let us publish rich content. We\u0026rsquo;re looking into extending our support for managing modern SharePoint pages to let you use them to their full potential. Improved creating Azure AD apps Recently, we\u0026rsquo;ve introduced a command to easily create Azure AD app registrations. Because they\u0026rsquo;re backbone of every app you\u0026rsquo;d build on Microsoft 365, we think you should be able to create them as easily as possible. So with CLI for Microsoft 365, you can create a fully configured Azure AD app for the most common scenarios with just one line of code. In the future versions of CLI for Microsoft 365 you can expect us extend the capabilities with additional scenarios and features supported by Azure AD. Script examples In every release of the CLI for Microsoft 365, we introduce new commands for managing Microsoft 365. With over 350 commands across the different Microsoft 365 services, the CLI for Microsoft 365 has become a powerful tool, not just for managing your tenant but also for automating your daily work. We\u0026rsquo;d love to show you how you can use the CLI for Microsoft 365 to build automation scripts in PowerShell Core and Bash. If you have any scripts using SPO or PnP PowerShell that you use frequently, please share them with us so that we can learn more about the common automation scenarios.\nensure commands We\u0026rsquo;ve just shipped our first ensure command - an easy way to help you that a site with specific settings exists. If it doesn\u0026rsquo;t, CLI creates it for you, if it does, CLI ensures it has the right properties. All in one line of code. We\u0026rsquo;d love to hear from you how you like it and if it\u0026rsquo;s something you\u0026rsquo;d like us to implement for other commands as well.\nTry it today Get the latest release of the CLI for Microsoft 365 from npm by executing in the command line:\nnpm i -g @pnp/cli-microsoft365 Alternatively, you can get the latest release from Docker by executing in the command line:\ndocker run --rm -it m365pnp/cli-microsoft365:latest If you need more help getting started or want more details about the commands, the architecture or the project, go to aka.ms/cli-m365. If you see any room for improvement, please, don\u0026rsquo;t hesitate to reach out to us either on GitHub or twitter.\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-116/images/pnp-weekly-116_hu11b4a60bebe59da865bffe2fa3906c28_895556_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/cli-for-microsoft-365/cli-for-microsoft-365-v3-6/","tags":["CLI for Microsoft 365"],"title":"CLI for Microsoft 365 v3.6"},{"categories":["Community post"],"contents":"In this blog I want to show you, how you can build, test and publish an FAQ bot for Microsoft Teams within minutes. We will use the Power Virtual Agents for Teams, which means, that you will not need any additional license to your Microsoft 365 license, for reference see also Power Virtual Agents for Microsoft Teams plan.\nWhat is Power Virtual Agents? Power Virtual Agents belongs like Power Apps, Power Automate and Power Bi to the Power Platform (wow, that was a powerFULL sentence 😇). You can create chatbots, which can interact with users in apps and websites, trigger workflows and more, without the need of writing code. You can choose if you want to use it in the Power Virtual Agents standalone web app or as app within Microsoft Teams.\nLet\u0026rsquo;s build a bot I will guide you how to create an FAQ bot. To feed our bot we will need some FAQ so that our can bot can learn them. I will use FAQ regarding licensing 🤓, but you can choose any FAQ from a website or PDF or even Word file that you like.\n Open Teams Select the Apps icon Search for Power Virtual Agents       Click Add          Give your bot a name ans select a language that your bot shall understand (should be the same language as your FAQ)       Click Chatbots - here you get an overview of ALL your chatbots      Add topics from any website  Click Topics     You see, that some basic topics are already created for you. You can take a look later.\n Click Suggested     Now we want to work on feeding our bot with the FAQ from the website that we selected.\n Copy the URL auf the FAQ website Paste the URL into the Link to online content field       Click Add Click Start  This may take now a couple of minutes. Grab a coffee in the meanwhile: ☕. Soon you will see the message that your new suggested topics are now in:\n    Review \u0026amp; edit topics You can now review and edit each topic:\n    Click Save Topic  After you are done with reviewing and editing your topics, you will need to turn on the topics\n Switch the toggle to on      Train your bot by entering more trigger phrases. This way, it is more likely that the Chatbot understands users asking questions even if they don\u0026rsquo;t exactly match the trigger phrases\n Time to test the bot!\n   You can now review and edit your topics until you are happy with the results.\nPublish your Bot to Microsoft Teams  Select the Publish icon       Click Add       Click Add to Teams      Use your bot     Conclusion \u0026amp; what\u0026rsquo;s next It took us only a few minutes to create, test and publish a chatbot, that now works inside of Microsoft Teams. Want to do some more? We could extend the capabilities of our Power Virtual Agents bot: Let\u0026rsquo;s say our bot can\u0026rsquo;t answer a question and needs to transfer the chat to a human agent, who will answer that question. What if we trained the bot with that answer so that our bot gets smarter over time? I will cover that in one of my next blog posts. What do you use chatbots for? Did you already try to make a 5 minute bot? Please share below :)\n","image":"https://pnp.github.io/blog/post/how-to-build-an-faq-bot-for-microsoft-teams-with-power-virtual/images/walle_hu593093e06cd498cf36e71fb49f4ef859_256709_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-build-an-faq-bot-for-microsoft-teams-with-power-virtual/","tags":["Power Virtual Agents","Microsoft Teams"],"title":"How to build an FAQ bot for Microsoft Teams with Power Virtual Agents"},{"categories":[],"contents":"Now let\u0026rsquo;s imagine this. You have the developer tenant from your Microsoft 365 Developer Subscription, and you enrolled the Power Apps Community Plan with it, so you have the full range of possibilities on your dev tenant, right? Not quite. Yes, you have access to Dataverse now and yes, you can even use premium connectors and that\u0026rsquo;s cool. But you can go one step further. ![Kind of dev.png](images/Kind of dev.png) The Power Apps Community Plan gives you a Development Environment and you can add even more Trial Environments on your dev tenant. But you can\u0026rsquo;t set up new Production Environments. What are Production Environments and why do you want one? Production Environments are used for your daily business with production data. If your organization is spread over multiple countries or even continents, it makes sense to give every country its own production environment. Production Environments are backed up frequently to protect your data. But on your dev tenant you don\u0026rsquo;t need one, right? Because you\u0026rsquo;re just testing out and learning things, correct? Well yes, but what if you want to learn how to set up a staging environment for your organization, where you have the recommended environments?\n Development Testing  Production   And imagine you want to learn how to set up the correct security roles in Azure to test things out. You can\u0026rsquo;t do that on your regular dev tenant, because you are not allowed to set up more environments (especially Production Environments). Many users are simply not allowed to get full control in the organizations they\u0026rsquo;re working for, because of security and compliance reasons. So, what to do? Wouldn\u0026rsquo;t it be cool, if you could get a Power Apps Standalone license for your dev tenant? Sure, that costs money but you would have it all:  A Microsoft 365 E5 license  Multiple environments to plan out real-life scenarios for your organization  Dummy users, mailboxes and SharePoint sites to test your flows and apps  Premium connectors  Access to Dataverse   And guess what? You can actually purchase a Power Apps standalone license for your dev tenant! You are capable to build a complete safe tenant to test, learn and grow for your organization with just the cost of the Power Apps license. Here is how you do it Log into your dev tenant and go to the Admin center. Select the waffle menu in the upper left corner and select Admin.   Next, select Purchase services.    In the category Business apps you find all the Power Platform plans. In this example I highlighted the Power Apps per user plan, but you can also go for the Power Automate per user plan (it\u0026rsquo;s way cheaper and you have very similar possibilities. Remember, you just want to create different environments and you can do that with both plans. Then click on Details to see, what\u0026rsquo;s included.   In the next screen you can check all the details. Select Included apps to see every detail. If you\u0026rsquo;re happy with it click on Purchase. Now Now   Now you\u0026rsquo;re almost done. You already are at the Checkout. Fill in your postal address and your billing information. After that click on Place order.   After a few minutes you will get your confirmation mail.   If you select Get started you will be transferred to the Your products section of the Admin center. Select Assign licenses.     For whatever reasons, you have to select Assign licenses once again. After that you can type in a name and select the chevron icon next to Turn apps and services on or off. Check all the apps and services you want to assign, then finish the process by clicking on Assign again, on the bottom of the page.   BOOM, there you go.   As described in my previous post How to enhance your \u0026ldquo;dev tenant\u0026rdquo; to unleash the full potential of the Power Platform, you can now add multiple environments and yes, even Production Environments. Check out the Microsoft documentation about environments to get more details and why and how to use them. Enjoy. ","image":"https://pnp.github.io/blog/post/fully-leverage-the-possibilities-of-the-dev-tenant/images/Gezeitenbrand42_10-1614283053396_hu770d519f381f0052fa171819b8a8b430_31892_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/fully-leverage-the-possibilities-of-the-dev-tenant/","tags":["Power Apps","Power Automate"],"title":"Fully leverage the possibilities of the dev tenant"},{"categories":["Community post"],"contents":" I was asked to share how I have been adding new OneNote tabs to a team channel in Microsoft Teams using Power Automate + Graph API. If you look at the documentation it shows you this:   Of course I never believed that but found earlier a way to hack OneNote into a channel as tab but also updated my methods when it became much simpler than before. In this blog post I show you the simple way how to add OneNote book as a tab.  You need t use a Premium licensing if you are using Power Automate since this is done using Graph API calls. Set up Azure AD App Registration with application id and client secret with required permissions for OneNote and to adding a tab to create OneNote books and adding them to tabs. You need a team id and a channel id you want to put the OneNote book into as a tab   Adding a new notebook is done directly to the team. The creation is quite simple \u0026ndash; I used the team name as part of the Notebook\u0026rsquo;s name. Once you have created the notebook you need to parse the body for some important variabled.   I created the schema based on one creation body to retrieve essential info about notebook ID and also it\u0026rsquo;s weburl.   { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;@@odata.context\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;id\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;self\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;createdDateTime\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;displayName\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;lastModifiedDateTime\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;isDefault\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;boolean\u0026#34; }, \u0026#34;userRole\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;isShared\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;boolean\u0026#34; }, \u0026#34;sectionsUrl\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;sectionGroupsUrl\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;createdBy\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;id\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;displayName\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; } } } } }, \u0026#34;lastModifiedBy\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;id\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; }, \u0026#34;displayName\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; } } } } }, \u0026#34;links\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;oneNoteClientUrl\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;href\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; } } }, \u0026#34;oneNoteWebUrl\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;href\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34; } } } } } } }  The final piece is to use this information to add OneNote as a tab to a channel. For this you need the notebook id, the channel id along with the team id.   I got the display name directly out of parsed JSON but you can rename the tab better. And that\u0026rsquo;s that.   Of course we could take this further by adding new sections and pages to the OneNote \u0026ndash; or even content. But even as this is now this is very useful when doing a custom team provisioning. If you have premium licenses for Power Automate.   Instead of using Power Automate Premium this could be very well done with Azure Logic Apps, which can provide a cost-effective way to use occasional Graph API calls (it always depends): do the ROI calculation for your situation/platform. This article is a repost from my blog.\n","image":"https://pnp.github.io/blog/post/create-and-add-a-onenote-tab-to-your-microsoft-teams-team/images/image-13_hu238ff64ae409659bd035aa807917618d_6192_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/create-and-add-a-onenote-tab-to-your-microsoft-teams-team/","tags":["Power Automate","Microsoft Graph"],"title":"Create and add a OneNote tab to your Microsoft Teams team channel using Power Automate + Graph API"},{"categories":["Community post"],"contents":"In this blog post, I will show how to send email reminders for Microsoft Lists items based on a date column using Power Automate. I am using the Microsoft Lists Issue Tracker template for this blog. Automated email reminders give users time and opportunity to intervene in the business process prior to expiration or end dates. In this demo, we will base our Power Automate Flow on the \u0026ldquo;Due Date\u0026rdquo; column and will send reminders 30 days in advance of the date.\nIssue Tracker setup You can get started with the Issue Tracker by navigating to Microsoft Lists, select New list and then select Issue tracker.\n   Review the sample and select Use template.\n   Provide a Name, Color, Icon and storage location (i.e. Save to) (OneDrive aka My lists or SharePoint) and then select Create. I am using My lists in this example.\n   We will add a Due Date column to connect our reminders to. From Issue Tracker to the right of the Date reported column select + Add column or + and select Date and Time from the dropdown list of column types.    Set Name to Due Date and select Save.\n   Flow build Create a new Flow by selecting Automate \u0026gt; Power Automate \u0026gt; See your flows.\n   Select New \u0026gt; Scheduled\u0026ndash;from blank.\n   Provide a Flow name, I.e. Issue Tracker -- Daily, set Starting to 10:00 AM, Repeat every to 1, Day and select Create.\n   Tip\nUse the advanced options to set your target time zone.\n    Select New step, search for Variable and select the Initialize variable action. Set the Name to varNumDays; Type to Integer and Value to 30.\n   Select New step, search for Variable and select the Initialize variable action. Set the Name to varReminderDate; Type to String and Value to the following expression:\naddDays(utcNow(), variables(\u0026#39;varNumDays\u0026#39;), \u0026#39;yyyy-MM-dd\u0026#39;)  Note\nSelect Add dynamic content \u0026gt; Expression to access the expression editor.\n    Select New step, search for SharePoint and select the Get items action. Note\nMicrosoft Lists is really SharePoint, so that is why we are using the Power Automate SharePoint actions.\n Set the Site Address and List Name to your Issue Tracker site and list. Use the Advanced options to set Filter query to the following ODATA filter query:\nDueDate eq \u0026#39;@{variables(\u0026#39;varReminderDate\u0026#39;)}\u0026#39; Where @{variables('varReminderDate')} is the varReminderDate variable. Note\nPay attention to the single quotes used in the ODATA filter query.\n    Select New step, search for Office 365 Outlook and select the Send an email (V2) action.\nSet To to Person or group the issue is assigned to Email (from the SharePoint Get items action). Power Automate will put this into a Apply to each loop so it can send multiple emails based on the previous Get items action.\nSet Subject and Body to something similar to the image below.\n   My completed Flow looks like the image below.\n   Save and test the Flow. If you have items due in 30 days the owner will receive a reminder email.\n   This Flow is relatively simplistic in design and function but illustrates how value can be added to existing business processes by automating tasks and giving users an opportunity to act prior to a due date.\nThanks for reading.\nNY\nAdapted from normyoung.ca\n","image":"https://pnp.github.io/blog/post/send-email-reminders-from-microsoft-lists-using-power-automate/images/issuetracker01_hub7f54722fcfa801759a32256f9784ac4_43426_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/send-email-reminders-from-microsoft-lists-using-power-automate/","tags":["Power Automate","Microsoft Lists"],"title":"Send email reminders from Microsoft Lists using Power Automate"},{"categories":["Community post"],"contents":"The Microsoft 365 Developer tenant is an amazing feature to learn and experiment in the Microsoft 365 universe (actually I\u0026rsquo;m talking about your personal development \u0026ldquo;sandbox\u0026rdquo; of the Microsoft 365 developer program.\nIf you have no idea, what a \u0026ldquo;dev tenant\u0026rdquo; is, read the article \u0026ldquo;What is a \u0026ldquo;Dev tenant\u0026rdquo; and why would you want one\u0026rdquo; from Julie Turner).\nBut there are limitations if it comes to experience the full potential of the Power Platform. Power Platform licensing is a bit complex, but to simplify things: You may use standard connectors within most Microsoft 365 licenses (like E3 or E5), but you can\u0026rsquo;t you can\u0026rsquo;t use premium connectors, or on prem data gateways, or add Microsoft Dataverse to your environments. Since the dev tenant gives only you a Microsoft 365 E5 license, you would need to purchase a standalone license., Which is not ideal if you just want to learn and decide later on if you want to dig deeper into the Power Platform.\nLuckily there is the Power Apps Community Plan and you can add this plan to your developer tenant.\nWhat are the advantages of the Power App Community Plan? With the Community plan, you get a developer environment for free which gives you the possibility to learn and develop your skills (check out the Power Platform Apps plan docs article for more information). Developer environments are exclusively for the Community Plan , you can learn more here in the environments overview documentation. In this environment you get a lot of possibilities which are not included in the Power Apps license seeded in the Microsoft 365 E5 license:\n You can use premium connectors (only for data sources within Power Apps) You can build unlimited custom connectors You can use Dataverse You\u0026rsquo;re able to export your apps and flows to AppSource for others to test  You see, if you want to learn more about the Power Platform and develop your skills, this is a huge benefit for you. And it comes for free.   How to join the Community Plan? Let me walk you through the process. You need your log in data for the developer tenant: Mail address and password.\nGo to the Power Apps Community Plan website and click on Get started free.   In the next step you need to insert the mail address of your dev tenant.\nThat is very important, do not use a different mail address, since you want the Community Plan to be linked to your dev tenant. After that select Sign Up.   You will get a notification that says, that you\u0026rsquo;re using this address with another Microsoft Service already. Of course, you do, you use it for your developer tenant, right? So select Sign In.   The next window is a confirmation that you\u0026rsquo;re signed in and you can (important, you don\u0026rsquo;t have to) decide to get promotion and offers send to your address.\nYou can also decide to share your information with partners in order to get more relevant information.\nYou don\u0026rsquo;t have to, so choose wisely.\nAnd naturally by clicking on Start you confirm that you\u0026rsquo;ve read the terms and conditions and the Microsoft Privacy Policy. So maybe it\u0026rsquo;s a good point to read them ;)\n   Don\u0026rsquo;t you worry, you\u0026rsquo;re almost done. In order to start with the Power Apps Community Plan you need to choose the country you\u0026rsquo;re using the Power Platform in. There are various legal conditions, which differ depending on the country. Once again you can choose the get the latest Power Apps tips and information, yet this is no mandatory field.\nIf you hit that Accept button you\u0026rsquo;re done.   If you check the Power Platform Admin Center you will recognize, that there is another environment, next to the default one.\nCongratulations, you\u0026rsquo;ve just joined the Power Apps Community Plan and can now see your new Developer environment.   Now you can start developing apps and flows in this specific environment.\nBut there is one more thing you need to pay attention to: If you open Power Automate or Power Apps, make sure that you\u0026rsquo;re in the correct environment. In the upper right corner of your browser you can see, what environment you\u0026rsquo;re currently in. Select the button Environments to see a list of all your available environments. Now select you newly created Developer environment (in my case it\u0026rsquo;s Michael Roth\u0026rsquo;s Environment).\nNow you\u0026rsquo;re using the newly created Developer environment with all the benefits from the Power Apps Community Plan.   ","image":"https://pnp.github.io/blog/post/how-to-enhance-your-dev-tenant-to-unleash-the-full-potential-of/images/devtenant-micha_hu6bfa260d3cf33cee7066c5cad2239f0f_1519574_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-enhance-your-dev-tenant-to-unleash-the-full-potential-of/","tags":["Power Automate","Power Apps"],"title":"How to enhance your \"dev tenant\" to unleash the full potential of the Power Platform"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm, are joined by Germany-based MVP, Product owner for the Valo Teamwork tool, and community contributor – Jarbas Horst – working for Finland-based Valo Intranet | @devjhorst. The discussion touches on role transition from developer to big picture manager, what suggests a successful day, evaluating feedback, the value of being an empathetic leader, proper onboarding, and the challenge of bringing people together in remote work times.\nThe session was recorded on Monday, February 22, 2021.\n Video at Microsoft 365 Community YouTube channel.    Podcast format at https://pnpweekly.podbean.com.    Did we miss your article? Please use #PnPWeekly hashtag in the Twitter for letting us know the content which you have created. As always, if you need help on an issue, want to share a discovery, or just want to say: “Job well done”, please reach out to Vesa, to Waldek or to your Microsoft 365 PnP Community.\nSharing is caring!\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-115/images/pnp-weekly-episode-115_huc7d0ea51441793d427dd75d90bd29037_802582_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-115/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 115"},{"categories":["Community post"],"contents":"Power Automate is a super cool tool, which gives us a lot of options. But sometimes, the built-in connectors, are not enough. In one of previous posts, I showed you how to send HTTP requests to Microsoft Graph API. This time, I will show you how to connect to APIs outside of Microsoft 365 in Power Automate and even use an IOT button to trigger your flow.\nUse case To make things more approachable, here is a little use case for you:\nI want to Select an IOT button and this shall trigger a flow which tweets about the music I currently listen to on Spotify. The result will look like this:\n   What we need To achieve this, we will need a couple of things:\n an IOT button - I use a Flic Smart button for that- that triggers my flow a flow that connects to our Spotify and to twitter  So lets have a look at IOT button I use a Flic IOT button trigger my flow. This button works with Bluetooth, which means that we will need a Bluetooth enabled device to work with this button- either a smartphone or an IOT Hub.\nSet up your IOT button\n download the app from your app store install the app register a new account connect your flic button by pressing it for ~10 seconds  If you like to, rename this button - please keep in mind, that one button can be used to trigger several flows, as we have three different event types: Select, Double-Select and Hold.\nSpotify In this flow we want to trigger by one or any event of the flic button and then tweet the song we are currently listening to on Spotify. Turns out, that there is no connector for Spotify, so why not building our own custom connector?\nTo be able to build custom actions, you will need an API for this service. Lucky us, that Spotify provides us with that API so that we can use this to build our custom connector.\nOf course we need to have at least a free Spotify account so that we can listen to music that then shall be tweeted about. Before we can build the connector, we will need to register for Spotify\u0026rsquo;s Developer program. Once this is done, we can retrieve Spotify content such as album data, playlists and more though Spotify Web API. To get user-related data (like the song our user is playing right now) we need to authorize our application so that we are allowed to retrieve this information. Register our application on Spotify\nLog into your brand new Spotify for Developers account\n Go to your Dashboar Select Create an App Give your app a name and accept T\u0026amp;C Select Create Copy the Client ID and the Client Secret  Build the custom Connector  Go to flow.microsoft.com Select Data Select Custom connectors Select New Custom connector, Create from blank Add a name for your connector Select Continue If you like to, you can upload a connector icon, this step is optional enter api.spotify.com as Host \nYou can find the values you need to fill in here in Spotify for developers documentation, but to make things easier for you, I will provide them for you. Select Security Select OAuth2.0 Select Generic OAuth 2 as Identity Provider Paste in your Client ID and Client secret enter https://accounts.spotify.com/authorize as Authorization URL enterhttps://accounts.spotify.com/api/token as Token URL and Refresh URL enter user-read-currently-playing as scope Select Create connector Copy the Redirect URL go to your Spotify app Select Edit settings past the Redirect URI into the field for Redirect URIs Select Add Select Save  \nNow go back to your Custom connector\n Select Definition Select New action enter something like GetSong in Summary enter a description enter an operation ID like getssong- please note, that this ID shouldn\u0026rsquo;t start with an upper case letter Select import from sample Select verb Get paste in https://api.spotify.com/v1/me/player/currently-playing as URL\n(For reference: https://developer.spotify.com/console/get-users-currently-playing-track/) Select Import Select Update connector Select Test\nTo test our new connector, we need to select from an existing connection or create a new connection. Select New connection\nA new pop up window will appear and prompt us to Agree - you as a user authorize your Spotify app to retrieve data related to your user account - such as the song currently playing. Select Agree Select Close  Use the custom connector in our flow Now it\u0026rsquo;s time to build our flow\nTrigger flic As already said, we want the flic button to be our trigger\nYou can choose, if you want this flow to be triggered by any event type or if you want to save the two other event types for other flows. Now we want to get the current song from our shiny new Custom connector:\nGet current song   Select Insert a new Step\n  Select Custom\n  Select the new custom connector for Spotify Our intention now is to tweet something like \u0026ldquo;I am currently listenintg to {songname} by {artistname}, check it out {spotify URL}.\u0026quot; But from our custom connector, we don\u0026rsquo;t get the name of song and artist per se, we will need to first parse the JSON output. If you never heard of that before, don\u0026rsquo;t worry, go read this article about how to parse JSON in Power Automate, I will just wait here for you and drink a coffee. Back again? Cool!   Let your flow run\n  Go to your run history\n  Copy the output of the Get current song action\n  Insert a Parse JSON action\n  Select Generate from sample\n  Paste into the new field\n  Select done Magic - Now we can see all the output from our custom action as Dynamic content. Next thing up is to send the tweet. We can use the twitter connector for it, but Buffer works fine as well.\n  Add the post a tweet action provide your tweet text with Dynamic content as you wish from your Parse JSON action. Don\u0026rsquo;t be afraid when the flow adds Apply to each loops! Unfortunately, both artist-name and -song-name are named name, so you will need to figure out which is which.\n  save your flow\n  Run your flow\n  Open your flic app and select the new button, set the action that is triggered by the Select event to Microsoft Flow (watch out, this is the old name of Power Automate, which is not reflected in the Flic app). When you now Select the button, this will trigger our flow, that listens to the Select event of that button, get the current song and tweet about it!\n  Conclusion and what\u0026rsquo;s next In this post I explained, how you can create a custom connector and call an API outside of Microsoft 365. You learned how to define actions and how to authorize your application so that you can retrieve the requested data. Which use cases do you have in mind? What would you like to build a custom connector for? Please share!\n","image":"https://pnp.github.io/blog/post/how-to-use-a-custom-connector-in-power-automate/images/tweet_hu8319b03f8719c93ca4a05ee89cb72ef4_240148_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-use-a-custom-connector-in-power-automate/","tags":["Power Automate"],"title":"How to use a custom connector in Power Automate"},{"categories":["Community post"],"contents":"Learning Pathways is a customizable on-demand learning solution in Microsoft 365. Learning Pathways offers - a customizable SharePoint Online communication site (that may be used as a training portal),\n easy provisioning from the SharePoint Look Book the ability to make your own training playlists with custom assets a custom web part to surface training content across your SharePoint site collections, and up-to-date Microsoft documentation for Microsoft 365 solutions     The information architecture behind Learning Pathways supports structuring your playlists by category and subcategory. Within a playlist, you may add custom assets (in the form of SharePoint site pages) or use the content provided by Microsoft. For each playlist, you may add additional information for the playlist title, description, technology, subcategory, level, and audience. While you may add your own subcategories to Learning Pathways, out of the box you cannot add new categories or choices within technology level, or audience.\n   Some organizations may find the existing choices do not support their needs. To customize these fields, you will need to create a custom content pack within GitHub and add the content pack to your Learning Pathways instance.\nDeciding to Make a Custom ContentPack There are two primary reasons an organization may decide to begin using a custom content pack:\n  Edit the information architecture in Learning Pathways further than what is capable out of the box. As we discussed, there are some fields where you cannot add values.\n  [Control the release of Microsoft\u0026rsquo;s automatic content updates to Learning Pathways. Some organizations might want to review the new content releases to evaluate what is applicable to the organization before it appears in their Learning Pathways instance.\n  Please note, creating a custom content pack also means you will need to submit a pull request from the main Learning Pathways repo to your forked repo to take advantage of any content updates. In layman\u0026rsquo;s terms, you divided your content from the Learning Pathways original source so you will not get the automatic content updates from Microsoft for new docs.microsoft.com content. You will instead need to complete manual steps to get that content into your custom content pack.\nPre-Work: Provision Learning Pathways Follow the docs.microsoft.com instructions for [provisioning Learning Pathways] \nStep 1: Fork the Learning Pathways Repo Navigate to https://github.com/pnp/custom-learning-office-365[ and select Fork in the upper-right hand of the page. This will create an identical copy of the Learning Pathways content in your own repository allowing you to make customizations to the information architecture through editing the JSON.\n   After you are done forking the repo, you will see your own copy of the repo in the top left navigation:\n   Step 2: Turn on GitHub pages Select Settings in the top navigation:\n   Scroll down the page until you see a header for GitHub Pages . In the Source dropdowns, select Main and docs then select Save   Upon saving, GitHub will bring you to the top of the page again. Scroll down to ] GitHub Pages once more to copy the URL for your GitHub pages:\n   Follow the docs.microsoft.com instructions for adding a content pack to learning pathways. When adding the URL for your custom content pack, paste the URL from step 3, add learningpathways to the URL, and select Save. For example:\nhttps://eemancini.github.io/custom-learning-office-365/learningpathways/\nThis adds your forked copy of Learning Pathways as a tab in the site page CustomLearningAdmin.aspx of Learning Pathways: ]\n   Step 5: Edit metadata in GitHub As of this step, your custom content pack is an identical copy of Learning Pathways content as you have not made any edits in the repo. Navigate to https://\\[yourusername\\].github.io/custom-learning-office-365/learningpathways/v4 to begin making edits. Open the applicable language folder, in this example we will be working in en-us. In this folder you will find 3 JSON files. Select metadata.json\n   Explore the metadata.json structure for more guidance on how to edit the information architecture within this JSON file. If you are new to JSON, Bob German\u0026rsquo;s Introduction to JSON provides an excellent overview for beginners. Watch an example video of editing the existing technologies field and adding new ones.\nStep 6: Commit changes to main branch of your forked repo After completing your JSON edits, scroll to the bottom of the page to the section for Commit Changes Add a title and description that clarifies what edits you made and select Commit Changes. Once you commit a change, your edits will automatically appear in Learning Pathways. (Note: You may need to hard refresh or clear your cache to see these changes).\nStep 7: Add the web part to a page and filter to the content pack Now that your custom content is added to Learning Pathways, you can surface it by adding a Learning Pathways web part to a page. Follow the docs.microsoft.com instructions on how to filter to the content pack\nConclusion\nWhether you are creating a content pack to customize the metadata or control the content releases by Microsoft, creating a custom content pack is a powerful way to support your needs as long as you can support manually pulling content from the Learning Pathways repo in the future.\n","image":"https://pnp.github.io/blog/post/adding-custom-metadata-through-a-content-pack-in-learning/images/eemancini_1-1613662523389_hu7345e871ba57dbe8968f5bb7b1247f8e_111621_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/adding-custom-metadata-through-a-content-pack-in-learning/","tags":["SharePoint"],"title":"Adding Custom Metadata Through a Content Pack in Learning Pathways"},{"categories":["Community post"],"contents":"In this blog post I want to explain how you can send an Adaptive Card with CLI Microsoft 365. I will guide you from zero to hero 🚀, so even if you don\u0026rsquo;t know anything about the CLI Microsoft 365 or about Adaptive cards, don\u0026rsquo;t stop reading, you will be able to do that in a few minutes- I promise!\nWhat is CLI Microsoft 365? Lets first get us all on the same page and clarify, what CLI Microsoft 365 is and why we should use it: It is a CLI (Command Line Interface) which let\u0026rsquo;s us manage Microsoft 365 from any kind of OS: It doesn\u0026rsquo;t matter if we work on Windows, MacOS or Linux. Previously, some configurations were only possible by PowerShell for Windows, which limited a lot of admins. But even if you work on Windows and are pretty fine with using PowerShell, CLI might be a nice alternative to try out.\nHow to use CLI Microsoft 365 I will now describe your first steps:\nInstall Node.js To use the CLI Microsoft 365, you will need to install Node.js - Please follow these steps:\n* go to https://nodejs.org/en/\n* download the LTS version of Node.js\n* install Node.js If in doubt, if you have the correct version installed or if you need to use different versions of Node.js, please read Use Node Version Manager to develop your SPFx apps by Toni Pohl Install CLI Microsoft 365 Now that you have Node.js installed, we can continue with installing the CLI Microsoft 365. You can choose any shell you like: If you want to, you can use PowerShell or PowerShell in the Terminal in Visual Studio Code or whatever makes you happy. I like to use the PowerShell terminal in Visual Studio Code, because links render to be clickable and this saves me copy/pasting links into a new browser tab. But if you like to any other shell, that is perfectly fine as well. To install CLI Microsoft 365, run the command: npm i -g @pnp/cli-microsoft365  In case you wonder:\n the i is an alias for install the -g means that we want to install this package globally it will take about 2 minutes  Login Now that we installed CLI Microsoft 365, it\u0026rsquo;s time to actually do something here. But before we can get or post anything, we will need to log into our tenant. Pro Tip: You can use your your Developer tenant for this. If you don\u0026rsquo;t know, what this is, please go read What is a \u0026ldquo;Dev Tenant\u0026rdquo; and why would you want one? by Julie Turner Run the following command: m365 login  In response you will be asked to open a web browser and login with a code. If you are using Visual Studio Code, you can select the link, please copy the code upfront.\n   After you pasted the code,\n select Next pick an account out of the list of accounts  You will be seeing this message and can close this browser tab- we won\u0026rsquo;t need it anymore.\n   Yay! You successfully logged in! You don\u0026rsquo;t believe that? Let\u0026rsquo;s check with CLI Microsoft 365 and run this command to get your status: m365 status  and it will get your status for you:\n   If you want some inspiration, what you could do now, run this command: m365 help    which gives you a list of things you can try, these are called command groups, as each of them can contain several commands. When you now choose one of the command groups and run for example this one: m365 outlook  you will get the commands, that are available to you in this command group. Sometimes, you can go several levels deep-Just try them out!\nWhat are Adaptive Cards? Next thing we need to know is, what are Adaptive Cards and why would we want to use them? When we look at adaptivecards.io we can read the definition Adaptive Cards are platform-agnostic snippets of UI, authored in JSON, that apps and services can openly exchange. When delivered to a specific app, the JSON is transformed into native UI that automatically adapts to its surroundings. It helps design and integrate light-weight UI for all major platforms and frameworks. This means, that we get a nice method to share and display information without needing to know how to use HTML/CSS to render them correctly in different host applications. If you like to know more, please read Get started with Adaptive Cards by Tomasz Poszytek\nHow do we send an Adaptive Card with CLI Microsoft 365? Now that we know what is an Adaptive Card, let\u0026rsquo;s have a look on how we get this sent by CLI. The documentation provides us with a sample and this sample needs to have a URL. Where do we get this from? This depends on where you want to send this Adaptive Card to. In this example, I want to use Microsoft Teams as host application and therefore we will need to create an incoming webhook in Teams.\nCreate the Webhook If you have no clue what is a webhook, no problem, Rabia Williams got you covered with How to configure and use Incoming Webhooks in Microsoft Teams * Open Microsoft Teams\n* Select the ellipsis icon on the Teams channel that you want to send the Adaptive Card to\n* Select Connectors\n* Search for \u0026lsquo;webhook\u0026rsquo;\n  * Select Add\n* Select Add (yes, yet again)\n* Give your webhook a name\n* If you like to, you can upload a picture- messages sent via this webhook (our Adaptive Card) will have this image then as Profile Pic - this step is optional. * Select Create\n* Copy the generated URL\n* Select Done This URL is the URL we will need in the command later - If you want to, paste it into a notepad or similar.\nAuthor your Card Now it\u0026rsquo;s time to author your card. You can do this in a lot of editors, I use either the Adaptive Cards Designer or the Adaptive Cards Viewer Extension in Visual Studio Code, but recently also found Adaptive Card Studio. You can also use one of the provided samples and use them as-is or adjust them to your needs.\nIf you feel like authoring your Card in Designer or Visual Studio Code is fine for you right now, go ahead with this, otherwise you can also use the examples that are provided in the documentation of CLI Microsoft 365. I used the last one, \u0026lsquo;Send custom card with card data\u0026rsquo;.\nFor everyone not very familiar writing and understanding code: We can make more sense of the snippet by copy/paste this into Visual Studio Code, and then press Alt+z to soft-wrap this and then separate the Adaptive Card from the rest:\n Select JSON in Language Mode\\ Insert somenew lines right before the first `{`\\ Delete the '\\ at the beginning and the end of the snippet\\ Format with Shift + Alt + f Now go ahead and adjust the sample to work in your environment: replace the URL in the code with the URL that we copied when we added the webhook connector to Teams\\ copy the whole code\\ run it  !! Turned out, that there are some differences how to use quotes `\u0026rsquo;` or `\u0026quot;` - please consider which shell you are using before you copy/paste the code from CLI Microsoft 365 documentation. Congratulations 🚀- you sent your first adaptive Card with CLI.\nFeedback and what\u0026rsquo;s next? I hope you liked this little post on how to get started with CLI Microsoft 365 and learning how to send an Adaptive Card with it. I would like to learn, for which use cases you would do this? Please comment below!\n","image":"https://pnp.github.io/blog/post/how-to-send-adaptive-cards-with-cli-microsoft-365/images/yulia-matvienko-kgz9vsP5JCU-unsplash_hu539f77a09de0d83250c7143ab416ed48_1519013_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/how-to-send-adaptive-cards-with-cli-microsoft-365/","tags":["CLI for Microsoft 365","Adaptive Cards"],"title":"How to send Adaptive Cards with CLI Microsoft 365"},{"categories":["Community post"],"contents":"To develop applications for SharePoint or Microsoft Teams with the SPFx framework, a few requirements must be met on your development computer. Learn how to install the supported Node.js v10.x version and how you can use other Node.js versions additionally with Node Version Manager!\nWhy? As developer, it often makes sense to have multiple versions of a framework installed on a single computer. For developing an app for SharePoint Server 2019 or SharePoint Online with the SPFx framework, you need to have Node.js LTS v10.x.x installed (LTS stands for Long Time Support). You can find all the requirements at Set up your SharePoint Framework development environment. For developing other web applications, e.g. when using frameworks such as Angular, you might need other versions of Node.js installed.\nThe solutions for operation with several different versions of Node.js are supplied with the Node Version Manager (NVM). Here is a step-by-step guide on how to remove old versions of Node.js, how to install NVM and desired Node.js versions, and how to switch between the Node.js versions. After the installation process, learn how to develop your custom SharePoint app using the provided tools.\nInstall nvm and Node.js First, follow the steps here to install the Node.js frameworks on your machine. Alternatively, there´s a good description at Set up your Node.js development environment directly on Windows.\nIf you already have installed other Node.js versions, it´s a good idea to remove existing versions in the Windows Apps \u0026amp; Features settings. When you have a later version, such as 14.5, already installed, it´s usually not required to uninstall this version. nvm finds that version and allows to use it with nvm.\n   Alternatively, when you have chocolatey installed, you can run\nchoco uninstall nodejs -y (as I did on my machine to cleanup.)\n   You can install nvm from Node Version Manager (nvm) for Windows by Corey Butler. The latest version is nvm v1.1.7. Download nvm-setup.zip and run it. Or, you can use choco (if installed on your computer):\nchoco install nvm -y\nLet´s check if nvm is working:\nnvm ls should find no Node.js versions.\n   To see the latest Node.js versions check https://nodejs.org/en/, or simply run\nnvm ls available    Now, install the desired Node.js versions:\nnvm install 10.23.0    nvm install 14.15.4    Etc. For the latest Node.js version, simply run\nnvm install latest Now check the installed versions:\nnvm ls    You can now switch between versions with nvm. Use \u0026lt;nvm version\u0026gt;, e.g.\nnvm use 10.23.0 or\nnvm use 14.15.4 That´s the basic installation of Node.js and npm.\nInstall the SPFx development tools once To install the required tools yo with the sharepoint generator and gulp and for SharePoint development, we follow the steps at Set up your SharePoint Framework development environment. Here are the commands to run in a PowerShell console: First, switch to Node.js v10, confirm, (check the current version), and install the tools with npm.\nnvm use 10.23.0 npm install gulp yo @microsoft/generator-sharepoint --global    Create a new SPFx web part To create a new SPFx app, follow the steps described at Build your first SharePoint client-side web part (Hello World part 1). In a new directory, run\nyo @microsoft/sharepoint    You need to trust the development self-signed SSL certificate as described at Trusting the self-signed developer certificate here. Then, you can open the workbench with SSL.\ngulp trust-dev-cert    You can open Visual Studio Code now to modify the solution: code .\nRun the SPFx web part The generated solution includes the sample app that can now be modified.\n   When done, let´s open the default browser with the gulp webserver:\ngulp serve This opens the SPFx workbench, in our sample at https://localhost:4321/temp/workbench.html. Here, you can add the web part to the workbench page and test it.\n   Tip: When gulp serve is running, you can open your M365 tenant´s SPO site and use the custom web part with the data from SharePoint, too: https://\u0026lt;tenant\u0026gt;.sharepoint.com/sites/\u0026lt;sitename\u0026gt;/_layouts/15/workbench.aspx\nDeploy the SPFx solution To build the ready-to-use solution, run\ngulp bundle --ship to build the package for the correct folder and\ngulp package-solution --ship to create the \\sharepoint\\solution\\\u0026lt;project\u0026gt;.sppkg file that can be uploaded to the SharePoint App catalog.\nDevelop the solution You can follow the next steps to develop the app described here:\n  Build your first SharePoint client-side web part (Hello World part 1)\n  Connect your client-side web part to SharePoint (Hello World part 2)\n  Deploy your client-side web part to a SharePoint page (Hello World part 3)\n  Host your client-side web part from Microsoft 365 CDN (Hello World part 4)\n  Switch as required with nvm The Node Version Manager helps to work with multiple versions of Node.js for different purposes on the same machine. I hope this tip helps developers for a productive development environment! Happy developing!\nThis blog article is a repost from blog.atwork.at. ","image":"https://pnp.github.io/blog/post/use-node-version-manager-to-develop-your-spfx-apps/images/p6_hu238df58ce308e8e68ef2b5c023ea221c_7069_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/use-node-version-manager-to-develop-your-spfx-apps/","tags":["SharePoint framework (SPFx)"],"title":"Use Node Version Manager to develop your SPFx apps"},{"categories":["Community post"],"contents":"This article shall give you guidance and inspiration on how to turn your classic boring lists into interactive modern list experiences, which will wow your users, let them get information at first sight, and increase overall productivity. This post is not about the Microsoft 365 list templates; I will cover them in one of the next blog posts.\nIf you never heard anything about modern SharePoint list formatting, don\u0026rsquo;t worry; I will guide you through this.\n   Why would we use SharePoint lists First things first: Why should we use SharePoint lists and not use - for instance - an Excel spreadsheet? Because we don\u0026rsquo;t need to hide information in cascading folders, that should be at the user\u0026rsquo;s fingertips. The beauty of lists lies in their simplicity and flexibility to organize work and track the information that matters most to our businesses.\nCreating, sharing, and tracking lists is easy and available on any device; everyone stays in the loop, and we can use lists for all kinds of purposes like tracking issues, assets, routines, contacts, inventory, and more. Lists can easily be customized to make them visually more appealing.\nHow can we turn on modern experience Now that we are teased into modern lists and libraries in SharePoint, it\u0026rsquo;s time to turn on modern experiences. We can do it like this in the classic experience:\n select Library Settings or List Settings on the ribbon select Advanced settings and select List experience select New experience save with Ok  How can we change the look and feel of a list in the UI Lists can contain different columns, and each column has a certain column type, depending on the kind of value we want to store in that column like text, numbers, dates, choice, persons, locations, links, or images. As lists can contain much information, its brilliant if we emphasize crucial parts by formatting them in a way that they are\n easier to read give a grasp on what is going on are mobile-friendly  Already built-in, we will find options to format columns and views. Formatting a view means modifying the way the entire list is displayed. Formatting a column means changing the way this particular column looks like.\n    Formatting Views\n  We can change the format view   and also display a gallery view\n     Formatting columns  If we want to change the column\u0026rsquo;s appearance, we can do that very end-user-friendly directly in the UI:     and even with rules like if - then - else:\n   How can I apply conditional formatting, aka rules Rules are a powerful feature to determine how a column should look like. Let\u0026rsquo;s say we want to apply a background color depending on a number value. If the number is below 30, the field should be red; between 30 and 70, it should yellow, and above 70, it should be green. Let\u0026rsquo;s see how this looks like:\n How can we change the look and feel of a list with JSON Sometimes, even if those options are already cool, we need some more flexibility.\n   There is a way to format both columns and views beyond what is already offered, as seen above. Perhaps you might have noticed the little link Advanced mode? This is where we will find the cool tools to play with!\n   This field expects you to put some JSON code in it to format this column. If you never heard about JSON, you can quickly get started with Intro to JSON by Bob German, this video, or you can learn more at w3schools.\nSamples We will browse to the Microsoft 365 PnP List formatting repository on GitHub and open the folder column samples. In here, we will find free-to-use samples to make our lists look fantastic.\nInstead of having a list like this:\n![example list-BEFORE.png](images/example list-BEFORE.png)\nwe can now look at a list like that:\n[![example list.png](images/example list.png)\nHow can we apply a sample?  Get familiar with the samples that are available on GitHub regularly check for new ones / pin the repo select the one that is interesting for you read the readme.md file to know the requirements for your column. Some samples only work with choice, text, or number columns open the JSON file copy the code to your clipboard go to your SharePoint list go to column settings --\u0026gt; format this column select Advanced mode paste the code click Save   One more example how amazing a list can look like? I run a the PimpYourOwnDevoce.com sticker store together with Elio Struyf and we use a SharePoint list as our inventory (Elio blogged about the whole architecture here. With this sample we can hover over our images to have a big preview:\n That\u0026rsquo;s it!!\nWe will find view samples in the same GitHub repository.\nWant to learn more? You can find helpful resources to learn more here:\n aka.ms/m365pnp Microsoft 365 PnP Community on TechCommunity Microsoft 365 PnP List formatting repository on GitHub  Have fun and happy Modern SharePoint list formatting\n- #SharingIsCaring ❤\nPS: Did you like this post? I wrote even more about list formatting\nFirst published on m365princess.com\n","image":"https://pnp.github.io/blog/post/modern-sharepoint-list-formatting/images/daniel-cheung-zky0BmMT5m8-unsplash_hu6a6d7582b64ed31c8a0e99cabda493e1_989353_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/modern-sharepoint-list-formatting/","tags":["SharePoint","List formatting"],"title":"Modern SharePoint list formatting"},{"categories":["Community post"],"contents":"We are all there during some days: Power Automate Premium is the key to the next level but there is no way we could justify that licensing \u0026ndash; the ROI is simply not enough. Have you thought that you could be utilizing a Azure Logic App instead?\n   Following my earlier post ( How to: initiate a document approval directly in team files tab (using Power Automate) ) that required a Power Automate Premium license I recreated that with Azure Logic Apps solution. Please do refer and compare to that blog post these steps to see how they differ. For later mentioned parts you need to follow steps in that post.\nWhat are Azure Logic Apps and do they cost? First: what are Logic Apps? Let\u0026rsquo;s take a snippet from Microsoft Azure Logic Apps documentation here. Azure Logic Apps is a cloud service that helps you schedule, automate, and orchestrate tasks, business processes, and workflows when you need to integrate apps, data, systems, and services across enterprises or organizations. Logic Apps simplifies how you design and build scalable solutions for app integration, data integration, system integration, enterprise application integration (EAI), and business-to-business (B2B) communication, whether in the cloud, on premises, or both. In short: you are create something almost like a Power Automate Cloud Flow but you do that in the Azure. The user interface is slightly different but almost all essential parts are there: triggers, actions, connections and of course various connector. The big difference is that you will be paying for all Logic App runs but the bright side is that you don\u0026rsquo;t have to purchase Power Automate Premium. Of course it pays to do some rough calculation on Logic Apps. In my demos for a week I accumulated less than one euro on Logic Apps costs.. If something you construct is used repeatedly and has lots of loops costs can build up. But if you have a random need for a Premium or custom connector requirements Logic Apps might be a perfect solution. This also depends on number of users you would have to license Premium Power Automates to: yearly investment counts. Read more about Logic Apps pricing here. I suggest to start with\n Create a resource group for Logic Apps so you can easily keep on track of the costs \u0026ndash; and also manage your apps Put a budget to Azure in place so your costs don\u0026rsquo;t suddenly skyrocket Follow costs and cost estimate  Creating Azure Logic Apps -process for file approval requests Now that we have that householding taken care of we can finally create the Logic App.\nNavigate to your Resource Group and select Add.\nAdd a Logic App. Use search to narrow the list down.   Note: Be careful how you name your Logic App in the next step because you won\u0026rsquo;t be able to change it later!   Add Tags if you use them, Review and Create the App. The Logic App is deployed rather quickly and you can then go to the Resource. Go to Logic App Designer    From there you can start selecting your trigger how the Logic App is activated. Since we are duplicating the earlier post functionality with Azure Logic Apps we choose \u0026ldquo;When a HTTP request is received\u0026rdquo;    And now the UI starts to look very Power Automatish   The difference is about available parameters. You need to select Add new parameter to open menu that is in this (and in many other actions) not visible unlike at Power Automate designer.    Check Method   And you can choose Get from the list.    And now we have the trigger part ready (waiting for a save)!   Then we add other parts. The search for actions is not as good as in Power Automate Cloud Flows but keep on trying \u0026ndash; the actions are there!    Let\u0026rsquo;s populate that with triggerOutputs()[\u0026lsquo;queries\u0026rsquo;][\u0026lsquo;FileID\u0026rsquo;] just like in the earlier blog post.    Add there Get File Properties from SharePoint. In this point we need to add a connection to the SharePoint. Use credentials that you seem to be fit.      Once you have signed in you can define the information how to get file properties.   The FileID is missing. You need to do a bit trick here:\n Change parameter to integer add it to the Get file properties Change parameter back to string     And select see more at Variable section in Dynamic content   Choose fileid. And yes! (don\u0026rsquo;t forget to change the fileid parameter back to string)   At this point we have\n FileID All file properties Open HTTP request..  Let\u0026rsquo;s close that HTTP request first. Add Response-action and instruct to close the tab. **   **   Note: here is when you need to progress differently than with Power Automate Cloud Flow approval This is because Azure Logic Apps doesn\u0026rsquo;t have Approval-connection. In this phase I decided to make the demo easily: writing the approval request to a SharePoint list in the tenant and and creating a another Power Automate with a when item is inserted trigger there. First \u0026ndash; let\u0026rsquo;s create that list where we can write the information to. We can use Teams Lists -app for that.\n   Search for the action in Azure Logic Apps and add Create Item      Now, we need to select Add new parameter to add list columns to the action.   Choosing Approver, FileID, and Outcome. I actually should have named Approver as Approval Requestor but hopefully it doesn\u0026rsquo;t confuse too much.   When filling up information you can use Dynamic values from Get file properties. Since we don\u0026rsquo;t really know who clicked that request approval button we just assume it was the person who did changes the last time.\nAnd that\u0026rsquo;s it!   Hit save (if you haven\u0026rsquo;t already) and you have the URL in the trigger action available. Proceed with column formatting as stated in previous post.\nFast forwarding the Power Automate that is created as a trigger to the File Approvals -list looks like this:   Steps are roughly similar to the ones as in the earlier post.\n The new item is inserted trigger Getting file properties from the Documents (based on the fileID ) Updating that file that Approval is processing Storing the file name into a variable Getting a comment from the user that last modified the file why this document needs approving I didn\u0026rsquo;t add this one but you could figure out who is really the document approver. Perhaps there is metadata that can define that one \u0026ndash; or the library / folder itself is tied to a structure that defines the real approver Create the approval request Wait for the approval to conclude. I have found out that it is better to use Create + Wait combination in separate actions compared to the Start \u0026amp; Wait single action. If you need to count your Power Automate executions then a single action might make more sense.. Add also the check is it approved or rejected. I didn\u0026rsquo;t add this either to this demo but this is definitely needed if you are taking any real action after the approval process! Updated the outcome to the list and then to the file itself to a dedicated columns Added a information about approval request to be sent to a channel  Conclusion With Azure Logic Apps it is possible to go the next level without paying for Premium Power Automates. There are also other create features in Logic Apps that I didn\u0026rsquo;t even touch on this one: ability to modify the app in Visual Studio for example. And that means it is easy to add to a version control as well..\nYou need to pay attention to the execution costs and make sure that your Logic Apps stay in the budget. This suits extremely well for low-medium usage actions. You may have to switch from a Logic App to Power Automate at some point \u0026ndash; like we did in this example. Plan carefully how you do the data exchange and where do you store the information \u0026amp; who can access it. The HTTP trigger in this example isn\u0026rsquo;t the safest one to use (it lacks security) so you need to plan how you either add some security to it or secure it in some other way. In my earlier post I also made some pointers about this: look them up. Not all connectors / actions are in the Logic Apps but many of them are.\n Azure Logic Apps are a great way to extend Microsoft Teams and integrate it to different systems \u0026ndash; inside and outside of Microsoft 365 cloud.\n This blog article is a repost from MyTeamsDay.Com.\n","image":"https://pnp.github.io/blog/post/how-to-create-an-improved-microsoft-teams-files-approval-process/images/2021-02-10_22-02-47_huc3cd63449c3f93ff518e158ec5512c51_36020_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-create-an-improved-microsoft-teams-files-approval-process/","tags":["Azure","Azure Logic Apps","Microsoft Teams"],"title":"How to create an improved Microsoft Teams Files approval process using Azure Logic Apps"},{"categories":["Community post"],"contents":"If you ever wondered what is an HTTP request and why you would want to know how this works - this post is made for you.\nWhat is a HTTP request and why would I need it? HTTP requests are a super powerful thing - not only in Power Automate! We will first need to understand what this is in order to determine why we would like to know how to use them. But wait - HTTP?\nWhat is HTTP? Let\u0026rsquo;s first get us all an the same page. HTTP is the acronym for Hypertext Transfer Protocol. Its purpose is to structure requests and responses over the internet (yeah, you heard of that one 😇\n) - Data needs to be transferred from Point A to Point B over the network.\nThe transfer of resources (like html files, images, videos etc) happens with TCP - which again is acronym, for Transmission Control Protocol. When you read this blog post, TCP manages the channels between your browser (hope you are using Microsoft Edge) and the server. TCP is used a lot for scenarios in which one computer sends something to another. Now what has TCP to do with HTTP? Think of HTTP as the command language for both computers so they are able to communicate.\nWhen you type a URL like https://www.m365princess.com into the address bar of your browser, your computer establishes first a TCP connection and then makes a request. We will call your computer now client. The request is a HTTP GET request, as we nicely ask to retrieve the website that the browser shall display. And as we send a (nice) request, the server (site that you requested) will send a response and close the TCP connection afterwards. Of course, there are more methods than just the GET method, you will learn later more about methods POST, PUT, PATCH, DELETE.\nNow that we know what an HTTP request does, we want to learn what it could do in Power Automate\nWhat can HTTP requests do in Power Automate? Power Automate offers you a huge variety of connectors and within those connectors, many actions which you can use to automate your processes. But although we have so many options, this won\u0026rsquo;t cover everything you need or that you might want to build in Power Automate, which is why we have an HTTP action in Power Automate as well. With the HTTP action we can invoke a REST API.\nWhat is a REST API? Wait but what? Ok, let\u0026rsquo;s slow down a little bit. What is a REST API and would we want to invoke that?\nAPI is -yet again- an acronym for application programming interface and it is a set of rules and mechanisms. By these an app or a component interacts with others. RESTful APIs (REST means representational state transfer) can return data that you need for your app in a convenient format (for example JSON or XML). By using the HTTP action in Power Automate we can invoke/call an API by using methods GET (read), POST (write), PUT (update), PATCH (update, but only partially) or DELETE (remove). The same way as our browser made a call towards a website and getting a response using HTTP, we now use HTTP to send a request to a service. In my example, I will use Microsoft Graph. Microsoft Graph is a RESTful API that enables you to access Microsoft Cloud service resources. It is literally THE way to read, create, update and delete resources (like files, teams, meetings etc.).\nMicrosoft provides us with an amazing tool to try out Microsoft Graph, it\u0026rsquo;s the Graph Explorer.\nHow to create a HTTP request in Power Automate Now how do we create an HTTP requests in Power Automate? First let me introduce everyone to our little\nUse case We want to use Power Automate to create a Team with some predefined content in it. To make things easier, we will use the mobile trigger and ask for Team Name, Team Description, and if a user wants a channel for Learning and wants to pin training material (a website) as a tab to this channel    (Of course, we would do that later in a form, an app, or a bot, but for understanding the logic of HTTP requests in Power Automate I will keep this as simple as possible)\nWe will now add actions to create the team and then we add a condition: If user wants learning material, we want create a channel called Learning and want to pin a website to it.\nUnfortunately, there is no action \u0026ldquo;pin a website to a channel in Teams\u0026rdquo; in Power Automate. Fortunately, we can still do this by making an HTTP request towards Microsoft Graph. This is why I added the HTTP action into the flow:\n   You can see a lot of fields in that HTTP action, so I will make you understand them.\nWhat do we need to make a successful HTTP request? It is a very good idea to open documentation on docs.microsoft.com while building your flows that call Microsoft Graph. You will find in nearly all pages four things, that we need to consider when doing an HTTP request:\nEndpoint First things first, if we want to call an API with HTTP, we need to know the right endpoint. Think of an endpoint like a phone number that you want to call. You need to know it, because otherwise you won\u0026rsquo;t reach the right person.\nAn endpoint is a URL like this: https://graph.microsoft.com/v1.0/{resource}?[query_parameters] and we will later use https://graph.microsoft.com/v1.0/teams/{team-id}/channels/{channel-id}/tabs to create this tab.\nMethod Second thing we need to know is which method we want to use. As already explained, GET == Read\nPOST == Write\nPUT == Update\nPATCH == partially update\nDELETE == remove If we now open the dropdown menu for the Method field in the HTTP action, we will see a representation of that:\n   As we want to create a new tab in a channel, we will use POST.\nHeaders Headers are not mandatory for all requests, but look like this: Content-type: application/json - If they are needed, documentation will tell you.\nData (or body) If we call an endpoint, it\u0026rsquo;s not enough to specify the URL the request needs to make to, but we will also need to post some additional info into the body of our requests. Most GET requests though don\u0026rsquo;t need information in the body, as they will only list the requested resources.\nFill in the HTTP action If we carefully follow the Docs, we will see that we should do this:\nPOST https://graph.microsoft.com/v1.0/teams/{team-id}/channels/{channel-id}/tabs\n{ \u0026#34;displayName\u0026#34;: \u0026#34;M365Princess Blog\u0026#34;, \u0026#34;teamsApp@odata.bind\u0026#34; :\u0026#34;https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.web\u0026#34;, \u0026#34;configuration\u0026#34;: { \u0026#34;contentUrl\u0026#34;: \u0026#34;https://m365princess.com\u0026#34;, \u0026#34;websiteUrl\u0026#34;: \u0026#34;https://m365princess.com\u0026#34; } } Some remarks on that:\n Choose Method POST - we already figured that out https://graph.microsoft.com/v1.0/teams/%7Bteam-id%7D/channels/%7Bchannel-id%7D/tabs is our URL, but we will need to replace {team-id} and {channel-id} with the actual dynamic content Choose a displayName for the Tab as you wish \u0026quot;teamsApp@odata.bind\u0026quot; is \u0026ldquo;https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.web\u0026rdquo; Both websiteUrl and contentUrl are the full URL of the website you want to pin including https://. If your website is only http:// you can\u0026rsquo;t use that inside of Teams.  In total, this looks like this:\n   Authentication in Azure AD We are almost there, but some critical parts are missing. As you can see in the last image, there is a Show advanced options link in the HTTP action and we need to select it. Our HTTP request need authentication. We can authenticate via Azure Active Directory OAuth, but we will first need to have a representation of our app (yes, this flow that calls Graph is an application) in Azure AD.\nWe will follow these steps to register an app in Azure AD:\n Go to portal.azure.com and log in Click app registrations Click New App registration Give your app a nice name Save tenant ID and Client(app) ID somewhere (notepad or similar) Click API PERMISSIONS and select Microsoft Graph Now look up the permissions needed for this action: Add tabs to a channel  Permission type Permissions (from least to most privileged)\nApplication TeamsTab.Create.Group*, TeamsTab.Create, TeamsTab.ReadWriteForTeam.All, TeamsTab.ReadWrite.All, Group.ReadWrite.All, Directory.ReadWrite.All\n Select all these permissions Grant Admin consent Click Certificates \u0026amp; secrets Click New client secret Type in a description Click Add Copy the value and save it in your notepad (you will need that later)  Write the IDs into variables In our flow, we will now initialize three variables at first level (before any condition) and set their values the copied values of Tenant ID, App ID and App Secret. All three variables are of type string.\nComplete the HTTP request Now we will fill in some more information in the HTTP request:\n Authority: https://login.microsoftonline.com Audience: https://graph.microsoft.com  Besides that, we will use our three variables for Tenant ID, App ID and App Secret.\n Our flow should look like this:\n   Celebrate If we now run the flow and take a look at the new team in Microsoft Teams:\n   we can spot our freshly created tab with the the content we wanted to provide!\nConclusion HTTP requests re a super coo method to achieve a lot of things that are not actions in Power Automate, but can still be executed using Microsoft Graph (or other APIs!). What are you using HTTP requests for?\nFirst published on m365princess.com\n","image":"https://pnp.github.io/blog/post/how-to-get-started-with-http-requests-in-power-automate/images/explorer_hu4e7df906fff88b161aebcce466a1ec22_20067_460x200_fill_q100_box_smart1.jpg","permalink":"https://pnp.github.io/blog/post/how-to-get-started-with-http-requests-in-power-automate/","tags":[],"title":"How to get started with HTTP requests in Power Automate"},{"categories":["Community post"],"contents":"We can see a a lot of JSON in our Power Automate flow run history, and if you wonder, how you can parse JSON to make Dynamic Content (which is selectable) out of it so you can more easily make use of an object, then this post is made for you. ![james-pond-26vBUtlufFo-unsplash (1).jpg](images/james-pond-26vBUtlufFo-unsplash (1).jpg)\nIf you want to know what exactly is JSON and what you need to know about it, please read this great article by Bob German in the Microsoft 365 PnP Community at TechCommunity or watch this cool video by April Dunnam first, I will just wait here for you.\na little use case Back again? Cool. Now that you know what JSON is, here is a little use case. Let\u0026rsquo;s say we wanted to post a random item from a SharePoint list to twitter each day using Power Automate. This is a screenshot of my list:\n   and this is the overview of the flow that we are going to build:\n   Trigger First things first, our trigger needs to be the Recurrence trigger, in which we specify, in which rhythm this flow shall run.\nSharePoint Get Items Now our flow needs to get all items from the list that we want to randomly pick one item from.\nCompose We need to do some magic so we get a random item, I used the following expression for that:\nbody('Get_items')?['value'][rand(1,length(body('Get_items')?['value']))]\nWe use the rand() expression to get a random list item from that list. The arguments inside of the expression 1,length(body('Get_items')?['value']) mean that our flow needs to pick a random number between 1 and (as this value could change over time) the amount of list items (which is expressed by our length(body('Get_items')?['value']))expression. The output of this Compose action will reflect a random list item.\nParse JSON Now to the interesting part of this flow: We want to exactly post this random list item but we if we look into our Dynamic Content, it gives us only content from the Get items action, but that is before we get a random list item, and as we do\u0026rsquo;t want to tweet ALL list items, this isn\u0026rsquo;t a good idea. How do we solve this now? Well, we parse JSON, which means that we turn the code into objects again and those objects are then reflected in the Dynamic Content in Power Automate.\nBefore we add the Parse JSON action, we need to find out, WHICH JSON we need to parse. As already mentioned, we can see the JSON code in our run history, which is why we save our unfinished flow and let it run. Then we open the run history, and have a look at the Outputs of the Compose action and copy everything inside of that box.\n   Now we edit our flow again, add the Parse JSON action, add the Outputs from our Compose Action as Inputs to that action and click the Generate from sample button. We will now paste the copied JSON into the Insert a sample JSON Payload box and click Done. What we did with that is telling the flow which objects it needs to parse. If we now look at this action, we can see the JSON inside of our Parse JSON action, but all values from the run history are replaced by placeholders: \u0026ldquo;string\u0026rdquo; (if it was text), \u0026ldquo;boolean\u0026rdquo; (if it was a yes/no), etc.\nNow that this action knows what to parse, we can proceed with the next action\nSend a tweet We can now see a lot of new Dynamic Content which comes from our Parse JSON action.\nWe can now select all values we need in that tweet, plus some more or less generic hashtags (Pro\u0026rsquo;s will add hashtags into a dedicated column in SharePoint.) If we now save and run our flow, it will first GET all items from the list, then identify a random list element and send out a tweet with the Title and URL auf exactly that list item.\n   Conclusion \u0026amp; What\u0026rsquo;s next? The Parse JSON action can help you turn Outputs from previous actions into Dynamic Content which you can then use in your flow. I\u0026rsquo;d love to know what you do with Parse JSON, let me know!\nIf you are now hungry because of recipes in the list: ThatKitchenPrincess.com First published on m365princess.com\n","image":"https://pnp.github.io/blog/post/how-to-use-parse-json-action-in-power-automate/images/parsejson-SPList_hu67e888788725dbd500db8a528bc26766_136775_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-use-parse-json-action-in-power-automate/","tags":["Power Automate"],"title":"How to use Parse JSON action in Power Automate"},{"categories":["Community post"],"contents":"Hello dear digital technology enthusiast. I heard you would like to find out what Adaptive Cards are? In this article I will help you to understand what[Adaptive Cards technology is, how it works and how you can use it. Follow me through the next chapters and I will try to explain it as clear.\nIn short words \u0026ndash; Adaptive Cards is a technology, that lets you to focus on content and layout, not how it will be displayed on a specific device or browser. What you are responsible for is to prepare what you would like to show and how it should be organized, e.g. should there be any tables, images, columns. However, the display side is taken care by the host. The host is an application, that displays Adaptive Card. It controls the colors, fonts, specific parts of layout, buttons\u0026rsquo; shapes, backgrounds and almost everything that makes the Card to look, once displayed, as if this is just another piece of the user interface. Like a YouTube video in Facebook Messenger conversation. You see how seamlessly it displays within other chat messages? This is an example of a similar cards\u0026rsquo; technology too. In Microsoft landscape we do have Adaptive Cards already in various places. Have you known it? You can find them when you talk to Cortana.    They are also in Windows Timeline (access it by pressing Win+Tab).    You can find them in your Outlook when you receive a message containing an interactive form inside.    And what is the most obvious \u0026ndash; they are also present are very commonly used in Microsoft Teams \u0026ndash; this is the platform on which I will focus in this article. Apart from the places I mentioned, Adaptive Cards are also present in multiple services from Microsoft, like Microsoft Search, Microsoft GraphAPI explorer, Azure Bot Framework and many more. This technology however is not limited and exclusively used only by Microsoft. Cisco is using it to display cards in their Webex Teams and Adaptive Cards\u0026rsquo; SDK (Software Development Kit \u0026ndash; set of tools used to build and run software) is open-source and hosted on GitHub, therefore anyone can use it in their development own projects, for example when building apps for Android or custom web sites with JavaScript or .NET. How do Adaptive Cards work? Adaptive Card is a technology that uses JSON (JavaScript Object Notation \u0026ndash; structured method to describe information, learn more from Bob German here: https://techcommunity.microsoft.com/t5/microsoft-365-pnp-blog/introduction-to-json/ba-p/2049369) to declare how the final card should look like. The defined code is then parsed by the host that has Adaptive Cards SDK installed. Using SDK and JSON schema (schema defines what information can be used by authors in their cards) for the specific version translates code into valid HTML that is being displayed to users.    Thanks to this approach, creation of user interface using Adaptive Cards is not only fast (no need to design separate card for desktop and mobile, for Android and iOS etc.), but also secure, since if part of JSON code that is used in card does not exist in SDK, it will not be rendered, so no malicious code can be then executed at user side. All right. Now that we know what they are and how they work, let me tell you how to create them. Adaptive Cards authoring The best place to start authoring your first (and every next) Adaptive Card is the designer, that you can find at https://adaptivecards.io/designer. There you can, following drag\u0026amp;drop visual designing approach create Adaptive Card and then configure all required properties. The designer is built from the following functionalities:     New card \u0026ndash; allows to create a card from a blank canvas or to start using one from existing templates.  Select host app \u0026ndash; is used to switch between hosts. Remember what I wrote at the beginning? Host control how the card is going to be displayed. Just experiment for example by choosing Microsoft Teams \u0026ndash; Dark and Light host. See the differences.  Target version. Each host has different version of Adaptive Cards implemented. Therefore, once you select host, the version will be automatically selected for you. Version determines what functionalities can be used.  Card elements are the building bricks of the card. Here you need to choose between:  Containers \u0026ndash; they define the layout, like imageSet will be displayed as a gallery, whereas FactSet as a table with two columns.  Elements \u0026ndash; those are the pieces used to display the information like text or image. Why ActionSet is here? Good question. This container is lets you to define actions within any place of the card.  Inputs \u0026ndash; with their help card can not only be used for displaying data, but also for its collecting. With inputs authors can build rich forms and request information from users.    Main canvas \u0026ndash; here you can, following drag\u0026amp;drop method, place elements and build final card\u0026rsquo;s interface.  Card structure displays hierarchy of elements. Like TextBlock will be always below a container etc.  Element properties \u0026ndash; here authors define parameters specific per each element. Like font size, align, id, values and much more.  Payload editor displays working JSON code, that author can simply copy and paste e.g. in Power Automate to display the card in Microsoft Teams.  Data editor is used to bind data placeholders in card with specific values from data object. This is called Adaptive Cards Templating and since is not yet supported in Microsoft Teams will not be explained in this article.   What are the Actions? Actions can be added to the card via the ActionSet or simply defined at the bottom of the main container.   There are four types of actions that author can choose from:  OpenUrl \u0026ndash; lets to open an external URL. Like hyperlink.  Submit \u0026ndash; sends back data from the card and inputs back to the host. Host is then responsible for the data processing and further operations.  ShowCard \u0026ndash; displays or hides sub-card \u0026ndash; like a card within a card.  ToggleVisibility \u0026ndash; shows or hides defined elements on the card.   Adaptive Cards in Microsoft Teams In Microsoft Teams the host that displays Adaptive Cards is called Flow Bot. This is a bot built using Azure Bot Framework technology. Its job is not only to display custom cards, but also Power Automate Approvals and some more. Today there is just one option to display Adaptive Cards in Microsoft Teams without a need to develop custom bots. This is through Power Automate. How? Flow sends Adaptive Cards JSON code to the Flow Bot which renders it and display in Microsoft Teams conversation. In Power Automate there are several actions that allows to generate Adaptive Cards in MS Teams, however each has significantly different purpose.      Post a choice of options as the Flow bot to a user – action allows to send an Adaptive Card in a pre-defined layout, where author can define message and options – that will be displayed as button. After card is sent, flow is paused for up to 30 days waiting for user’s response. This action can be used in simple approval/ collecting feedback scenarios, where no fancy layout is expected.     Post an Adaptive Card to a Teams user and wait for a response – allows to send custom built Adaptive Card to a specific Microsoft Teams user and to pause the flow for up to 30 days while waiting for response.\n  Post an Adaptive Card to a Teams channel and wait for a response – the same as above, but Adaptive Card is sent to a channel.     Post a message as the Flow bot to a user – sends a pre-defined Adaptive Card to a chosen user but does nothing more. Author cannot embed here custom JSON code.     Post a message as the Flow bot to a channel – the same as above, but message is sent to a channel.\n  Post your own adaptive card as the Flow bot to a user – allows author to send custom Adaptive Card to a user, however it is not waiting for the response so in case card contains form, Action.Submit results in error.\n  Post your own adaptive card as the Flow bot to a channel. As above, however the card is sent to a channel. The above two actions simply allow to send the card, but they do not offer any way to collect feedback. They are a good choice if you are planning to simply send informative card, without forms.     Exercise Now it is your turn. Build an easy flow, that is triggered manually and all it does is posting an Adaptive Card to a Teams channel (of your choice), using Post your own adaptive card as the Flow bot to a channel action.   Then copy paste the following Adaptive Card JSON code and paste as Message inside the action: { \u0026#34;$schema\u0026#34;: \u0026#34;http://adaptivecards.io/schemas/adaptive-card.json\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;AdaptiveCard\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.2\u0026#34;, \u0026#34;body\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Hey @{triggerOutputs()[\u0026#39;headers\u0026#39;][\u0026#39;x-ms-user-name\u0026#39;]}! Here are some cool cats photos\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Large\u0026#34;, \u0026#34;wrap\u0026#34;: true }, { \u0026#34;type\u0026#34;: \u0026#34;TextBlock\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;I hope you like them ;)\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Medium\u0026#34;, \u0026#34;weight\u0026#34;: \u0026#34;Lighter\u0026#34;, \u0026#34;wrap\u0026#34;: true }, { \u0026#34;type\u0026#34;: \u0026#34;ImageSet\u0026#34;, \u0026#34;imageSize\u0026#34;: \u0026#34;medium\u0026#34;, \u0026#34;images\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Image\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://4.bp.blogspot.com/-XkviAtJ1s6Q/T3YFb2RUhDI/AAAAAAAAAVQ/EHomLZlFMKo/s1600/small+cat.jpg\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Medium\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Image\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://images4.fanpop.com/image/photos/18500000/Kitten-cats-18565791-1024-768.jpg\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Medium\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Image\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://tse2.mm.bing.net/th?q=Funny+Cats\u0026amp;pid=Api\u0026amp;mkt=en-US\u0026amp;adlt=moderate\u0026amp;t=1\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Medium\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Image\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://tse3.mm.bing.net/th?q=Grumpy+Cat\u0026amp;pid=Api\u0026amp;mkt=en-US\u0026amp;adlt=moderate\u0026amp;t=1\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;Medium\u0026#34; } ] } ] }  Now save and test your flow. You should see the below cool Adaptive Card in Microsoft Teams channel:   Further learning Adaptive Cards is not just a simple technology. It is also the community that is behind. If you are interested in learning more about it, check the assets under the links below:  https://adaptivecards.io \u0026ndash; here is the documentation, JSON schema explorer to tell you what is possible and what is not plus several samples.  https://adaptivecards.io/designer \u0026ndash; the already known visual designer.  https://aka.ms/acroadmap \u0026ndash; here is the roadmap, release log and user voice, where you can submit your ideas.  https://madewithcards.io/ \u0026ndash; the repository of community built Adaptive Cards examples, ready to use.  https://aka.ms/adaptivecardscommunitycall \u0026ndash; add monthly, community call about Adaptive Cards to your calendar and be up to date with the latest ideas the team behind is planning.  https://github.com/microsoft/AdaptiveCards \u0026ndash; the official GitHub repository for Adaptive Cards code, where you can find the latest SDK if you plan to begin your journey as a developer.   Wrap up Adaptive Cards is a modern technology built by Microsoft to help content creators author parts of user interface much faster and with less issues, due to device-specific aspects. Knowledge about JSON code is useful, however it is not mandatory to successfully design cards. With the easy to use designer and intuitive actions in Power Automate, anyone can easily create and use Adaptive Cards for communication purposes and to enrich user experience in processes taking place inside Microsoft Teams. The technology can be used for many scenarios, that turns Microsoft Teams powered with Power Automate into a real digital workplace, where users can take part in the processes directly from conversations or chats, not being disturbed by the need to navigate between different systems. I encourage you to try it right away. ","image":"https://pnp.github.io/blog/post/get-started-with-adaptive-cards/images/TomaszPoszytek_0-1610369598416_hub4183e5c4a2dd7acb91f5075ef9f87cd_89076_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/get-started-with-adaptive-cards/","tags":["Adaptive cards"],"title":"Get started with Adaptive Cards"},{"categories":[],"contents":"It seems like JSON is everywhere these days. Adaptive cards, Microsoft Teams app manifests, and SharePoint list formats are all written in JSON. And JSON is the de-facto standard for REST APIs like Microsoft Graph; you can\u0026rsquo;t make a call without it. Power Apps, Power Automate, and Power BI can all handle JSON too. It really is everywhere except, it seems, in older products which were written when XML was king.\nThe intent of this article is to teach you what you need to know to use JSON in typical IT, low-code, or JavaScript development scenarios. It\u0026rsquo;s organized in order from simple to complex; if you don\u0026rsquo;t need some sections, just skip over them; you can always come back and read them later!\n   Working with JSON in the Adaptive Card Designer\nWhat is JSON? JSON is a standard format for representing structured data as text. JSON is commonly used to store data in text files and to exchange data between programs over a network. JSON files usually have a .json filename extension.\n Geek Note: JSON serves more or less the same purpose as XML (eXtensible Markup Language) but it\u0026rsquo;s shorter and easier to read. CSV format serves a similar purpose as well, but it\u0026rsquo;s not a standard so the details tend vary, and it can only store tables (rows and columns) of data.\n JSON data is organized as \u0026ldquo;objects\u0026rdquo; which contain name/value pairs. This example is the first step toward building a profile for Parker, the PnP mascot, who has kindly agreed to share personal information for this article.\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34; } JSON objects always begin with { and end with }; the very shortest valid JSON, {}, represents an empty object. The JSON example above contains a single name/value pair; the name is name and the value is \u0026quot;Parker\u0026quot;. As you can see, the name and value are separated by a :. Names are case sensitive and need to be enclosed in double quotes. In this case, since \u0026quot;Parker\u0026quot; is a text value, it\u0026rsquo;s enclosed in double quotes as well. Spaces, tabs, and newlines are ignored in JSON, but are helpful for readability.\nThe values can be simple things like text strings or numbers, collections of values (arrays), or more objects containing their own name/value pairs. If you want to put more than one name/value pair in your JSON, separate them with commas like this:\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;porcupine\u0026#34; } Note that the order of the name/value pairs doesn\u0026rsquo;t matter; this JSON is equivalent to the one above:\n{ \u0026#34;species\u0026#34;: \u0026#34;porcupine\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34; } The values don\u0026rsquo;t need to be text like \u0026quot;Parker\u0026quot;; they can also be numbers, booleans, collections, or more JSON objects. This allows you to have objects within objects. Here\u0026rsquo;s a more complete description of the Quilled Crusader that uses all of the JSON data types:\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;porcupine\u0026#34;, \u0026#34;occupation\u0026#34;: \u0026#34;mascot\u0026#34;, \u0026#34;motto\u0026#34;: \u0026#34;Sharing is caring\u0026#34;, \u0026#34;centimeters\u0026#34;: 75, \u0026#34;kilograms\u0026#34;: 28.5, \u0026#34;quills\u0026#34;: 3.0e+4, \u0026#34;friendly\u0026#34;: true, \u0026#34;bossy\u0026#34;: false, \u0026#34;nicknames\u0026#34;: [ \u0026#34;Quilled Crusader\u0026#34;, \u0026#34;Spike\u0026#34; ], \u0026#34;classification\u0026#34;: { \u0026#34;kingdom\u0026#34;: \u0026#34;animalia\u0026#34;, \u0026#34;phylum\u0026#34;: \u0026#34;chordata\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;mammalia\u0026#34;, \u0026#34;order\u0026#34;: \u0026#34;rodentia\u0026#34;, \u0026#34;suborder\u0026#34;: \u0026#34;hystricomorpha\u0026#34;, \u0026#34;infraorder\u0026#34;: \u0026#34;hystricognathi\u0026#34; }, \u0026#34;dnaSequence\u0026#34;: null } These are all name/value pairs, but there are several kinds of values; the next few sections will explain each of them.\n Geek note: Turning data objects into JSON is called \u0026ldquo;serialization\u0026rdquo;; turning JSON back into data objects is called \u0026ldquo;parsing\u0026rdquo; or sometimes \u0026ldquo;deserialization\u0026rdquo;.\n Strings (Text) Strings are just text that\u0026rsquo;s part of the data, such as \u0026quot;Parker\u0026quot; or \u0026quot;rodentia\u0026quot;, and they need to be enclosed in double quotes. That seems simple enough, but what if your string has a double quote in it? \u0026quot;Parker says \u0026quot;Sharing is caring\u0026quot;\u0026quot; is not a valid JSON value because the parser thinks the \u0026quot; before Sharing is the end of the string, and then it gets really confused. (Computers are really stupid, aren\u0026rsquo;t they?) So to put a \u0026quot; within a string, you need to \u0026quot;escape\u0026quot; it by preceding it with a \\. For example:\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;action\u0026#34;: \u0026#34;Parker says \u0026#34;Sharing is caring\u0026#34;\u0026#34; } As you might expect, this escaping thing is a bit of a slippery slope, as the parser may now be confused by the \\ character. So you also have to escape the \\ character:\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;home\u0026#34;: \u0026#34;C:\\\\Users\\\\Parker\u0026#34; } While \u0026quot; and \\ are the only characters you need to escape, a number of others are available. You can also insert special characters using Unicode (UTF-16) character codes using the format \\uXXXX, but often it\u0026rsquo;s easier to just type Unicode characters in your JSON.\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;mood\u0026#34;: \u0026#34;😀\u0026#34; } Numbers Numeric values don\u0026rsquo;t get quotes around them. For example, Parker\u0026rsquo;s length and weight are expressed as numbers.\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;centimeters\u0026#34;: 75, \u0026#34;kilograms\u0026#34;: 28 } Note that 75 is not the same as \u0026ldquo;75\u0026rdquo;; the quotes would indicate the characters 7 and 5 rather than a number. Numbers are in decimal, and can contain a sign, decimal point, and exponent such as:\n{ \u0026#34;quills\u0026#34;: 3.0e+4, \u0026#34;damage\u0026#34;: -10 } Boolean (True or False) For boolean values, just use true and false with no quotes.\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;friendly\u0026#34;: true, \u0026#34;bossy\u0026#34;: false } Objects (name/value pairs) All the JSON examples in this article so far have consisted of one JSON object with name/value pairs enclosed in a set of curly braces. But you don\u0026rsquo;t need to limit yourself to one object! You can have as many objects as you want as values inside other objects. This nesting allows you to create a hierarchy.\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;classification\u0026#34;: { \u0026#34;kingdom\u0026#34;: \u0026#34;animalia\u0026#34;, \u0026#34;phylum\u0026#34;: \u0026#34;chordata\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;mammalia\u0026#34;, \u0026#34;order\u0026#34;: \u0026#34;rodentia\u0026#34;, \u0026#34;suborder\u0026#34;: \u0026#34;hystricomorpha\u0026#34;, \u0026#34;infraorder\u0026#34;: \u0026#34;hystricognathi\u0026#34; } } The top-level object has two name/value pairs, \u0026quot;name\u0026quot; and \u0026quot;classification\u0026quot;, and the value of \u0026quot;classification\u0026quot; is itself an object with several name/value pairs of its own. This is very convenient for organizing the data and, when combined with arrays, allows creating lists, tables, and all sorts of other data structures.\nArrays (collections) An array is an ordered set of values enclosed in square braces [ and ] and separated by commas, such as:\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;nicknames\u0026#34;: [ \u0026#34;Quilled Crusader\u0026#34;, \u0026#34;Spike\u0026#34; ] } or, more succinctly,\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;nicknames\u0026#34;: [ \u0026#34;Quilled Crusader\u0026#34;, \u0026#34;Spike\u0026#34; ] } Mascots could have any number of nicknames or none at all, and an array allows you to list them. Parker\u0026rsquo;s sister Penny doesn\u0026rsquo;t have any nicknames.\n{ \u0026#34;name\u0026#34;: \u0026#34;Penny\u0026#34;, \u0026#34;nicknames\u0026#34;: [] } Arrays of objects are especially useful. For example, suppose you wanted to compile a list of Microsoft developer mascots:\n{ \u0026#34;mascots\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Bit\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;raccoon\u0026#34;, \u0026#34;team\u0026#34;: \u0026#34;Microsoft Developer Advocates\u0026#34; }, { \u0026#34;name\u0026#34;: \u0026#34;G-raffe\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;giraffe\u0026#34;, \u0026#34;team\u0026#34;: \u0026#34;Microsoft Graph\u0026#34; }, { \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;porcupine\u0026#34;, \u0026#34;team\u0026#34;: \u0026#34;Microsoft 365 PnP\u0026#34; } ] } Remember that spaces, tabs, and newlines are ignored, so this the same data could be written more compactly like this. Suddenly it starts to look a little bit like a table!\n{ \u0026#34;mascots\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Bit\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;raccoon\u0026#34;, \u0026#34;team\u0026#34;: \u0026#34;Microsoft Developer Advocates\u0026#34; }, { \u0026#34;name\u0026#34;: \u0026#34;G-raffe\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;giraffe\u0026#34;, \u0026#34;team\u0026#34;: \u0026#34;Microsoft Graph\u0026#34; }, { \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;porcupine\u0026#34;, \u0026#34;team\u0026#34;: \u0026#34;Microsoft 365 PnP\u0026#34; } ] }  MIND THE COMMAS! There must be exactly one (1) comma between name/value pairs and array elements. It\u0026rsquo;s really easy to misplace a comma in JSON, especially if you\u0026rsquo;re copying and pasting. Some people like to leave an extra comma after the last name/value pair or array element to make it easier to re-arrange things, but that\u0026rsquo;s cheating; it\u0026rsquo;s not part of the JSON standard and some applications won\u0026rsquo;t accept it.\n Dates and other things Unfortunately, there is no standard way to express a date in JSON. In practice, dates are passed in string values, but different applications use different date formats, which can be a bit maddening at times. The Microsoft Graph API uses ISO 8601 format.\nImages and other binary objects are rarely included in JSON, but if you wanted to do that you\u0026rsquo;d need to turn them into strings somehow, perhaps by Base64 encoding them.\nNull To indicate an empty value, use null. For example, Parker hasn\u0026rsquo;t had his DNA sequenced, so there is no value for that in his profile.\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;dnaSequence\u0026#34;: null } Note that [], an empty array, and {}, an empty object, are different than null. They\u0026rsquo;re empty containers whereas null is really nothing at all.\nComments If only JSON supported comments, we could write much more readable code! Officially there are no comments in JSON, but some products (like the SharePoint Framework) seem to encourage using JavaScript style comments in JSON. It seems harmless but it\u0026rsquo;s not proper JSON, and most applications will choke on them. One trick that\u0026rsquo;s usually OK is to just add a few extra name/value pairs in lieu of comments; most software will simply ignore the extra data. For example:\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;classification\u0026#34;: { \u0026#34;comment\u0026#34;: \u0026#34;This is the biological taxonomy\u0026#34;, \u0026#34;kingdom\u0026#34;: \u0026#34;animalia\u0026#34;, \u0026#34;phylum\u0026#34;: \u0026#34;chordata\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;mammalia\u0026#34;, \u0026#34;order\u0026#34;: \u0026#34;rodentia\u0026#34;, \u0026#34;suborder\u0026#34;: \u0026#34;hystricomorpha\u0026#34;, \u0026#34;infraorder\u0026#34;: \u0026#34;hystricognathi\u0026#34; } } While it\u0026rsquo;s not recommended, it is legal to have duplicate names in a JavaScript object, so you could have more than one \u0026quot;comment\u0026quot; if you\u0026rsquo;re daring. This is valid JSON:\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;comment\u0026#34;: \u0026#34;Great mascot but gets a bit prickly at times\u0026#34;, \u0026#34;comment\u0026#34;: \u0026#34;Check out \u0026#34;Parker\u0026#39;s Place\u0026#34; online apparel shop\u0026#34; } Tools There are a lot of web sites out there that will format and validate your JSON; this one does both.\nWarning\nRemember to remove any personal or confidential data before using online JSON tools!\n Schema support It\u0026rsquo;s often helpful to impose some structure on your JSON, specifying which name/value pairs are required and what value types they should contain. That\u0026rsquo;s the role of JSON Schema. This allows validating the JSON and offering features such as intellisense.\nA JSON Schema describes a specific JSON structure. For example, all animal mascots need to have a name and zero or more nicknames with an optional value for quills, such as:\n{ \u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;, \u0026#34;nicknames\u0026#34;: [ \u0026#34;Quilled Crusader\u0026#34;, \u0026#34;Spike\u0026#34; ], \u0026#34;quills\u0026#34;: 30000 } This would be expressed in JSON Schema as:\n{ \u0026#34;definitions\u0026#34;: {}, \u0026#34;$schema\u0026#34;: \u0026#34;http://json-schema.org/draft-07/schema#\u0026#34;, \u0026#34;$id\u0026#34;: \u0026#34;https://example.com/object1607485037.json\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Root\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;required\u0026#34;: [ \u0026#34;name\u0026#34;, \u0026#34;nicknames\u0026#34; ], \u0026#34;properties\u0026#34;: { \u0026#34;name\u0026#34;: { \u0026#34;$id\u0026#34;: \u0026#34;#root/name\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Name\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;examples\u0026#34;: [ \u0026#34;Parker\u0026#34; ], \u0026#34;pattern\u0026#34;: \u0026#34;^.*$\u0026#34; }, \u0026#34;nicknames\u0026#34;: { \u0026#34;$id\u0026#34;: \u0026#34;#root/nicknames\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Nicknames\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;array\u0026#34;, \u0026#34;default\u0026#34;: [], \u0026#34;items\u0026#34;:{ \u0026#34;$id\u0026#34;: \u0026#34;#root/nicknames/items\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Items\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;examples\u0026#34;: [ \u0026#34;Quilled Crusader\u0026#34; ], \u0026#34;pattern\u0026#34;: \u0026#34;^.*$\u0026#34; } }, \u0026#34;quills\u0026#34;: { \u0026#34;$id\u0026#34;: \u0026#34;#root/quills\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Quills\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;integer\u0026#34;, \u0026#34;examples\u0026#34;: [ 30000 ], \u0026#34;default\u0026#34;: 0 } } } If this looks complicated, don\u0026rsquo;t worry; there are many tools that will generate a schema from sample JSON. This is built into Power Apps and Power Automate, and you can generate a schema online using the JSON Schema Validator and Generator; it was used to generate the schema above.\nWhy bother with a schema? Well once you have one, you can get syntax checking and intellisense in tools like Visual Studio Code. Power Apps and Power Automate use schemas to determine what name/value pairs to expose as properties in your project, and what data types they should be.\nYou can add a property to your JSON to indicate the URL of the JSON schema; for example, to indicate that a file is a Microsoft Teams manifest, include this schema URL:\n{ \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/teams/v1.2/MicrosoftTeams.schema.json\u0026#34; } When a $schema property is present, Visual Studio and Visual Studio Code will validate your JSON automatically and provide intellisense. There are a ton of schemas available at https://www.schemastore.org/json/ for you to reference. You can even reference a JSON schema in your own project by just specifying a relative path:\n{ \u0026#34;$schema\u0026#34;: \u0026#34;./myschema.json\u0026#34; } OData You may notice some name/value pairs in your JSON which look kind of odd and begin with @odata. For example, here\u0026rsquo;s the beginning of the data returned by the Microsoft Graph call https://graph.microsoft.com/v1.0/me/messages (returns messages in the user\u0026rsquo;s inbox):\n{ \u0026#34;@odata.context\u0026#34;: \u0026#34;https://graph.microsoft.com/v1.0/$metadata#users(\u0026#39;19671429-1359-457f-bfc1-1be1ee65d4d9\u0026#39;)/messages\u0026#34;, \u0026#34;@odata.nextLink\u0026#34;: \u0026#34;https://graph.microsoft.com/v1.0/me/messages?$skip=10\u0026#34;, \u0026#34;value\u0026#34;: [ { \u0026#34;@odata.type\u0026#34;: \u0026#34;#microsoft.graph.eventMessage\u0026#34;, \u0026#34;@odata.etag\u0026#34;: \u0026#34;W/\u0026#34;DQAAABYAAADcd/V5PKGOSLpB9pjjNuVqAALT5+Dw\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;AAMkADIxMjk0NDNjLTJmNWItNDYzNy04MmQ2LTQyMjhkM2FjOWE3MQBGAAAAAAA7bH43fGymSJWqX6oeXPByBwDcd-V5PKGOSLpB9pjjNuVqAAAAAAEMAADcd-V5PKGOSLpB9pjjNuVqAALV0JNVAAA=\u0026#34;, \u0026#34;createdDateTime\u0026#34;: \u0026#34;2020-12-16T00:14:19Z\u0026#34;, ... OData is a standard for doing Create, Read, Update, and Delete (CRUD) operations on tabular data using a REST web service, and the Microsoft Graph uses it where appropriate. A folder of email messages is easily expressed as tabular data, so it\u0026rsquo;s no surprise that the Graph uses OData to work with them. The name/value pairs beginning with @odata. are OData control information used to control the flow of data. For example the value of @odata.nextLink is the URL to retrive the next set of rows in a large dataset. You can find details on all the OData Control Information here in the OData documentation.\nJSON and JavaScript Although JSON stands for \u0026ldquo;JavaScript Object Notation\u0026rdquo;, and was inspired by the format JavaScript uses for object literals, they are not the same. Indeed, JSON is intended to be language independent. Some major differences between JSON and JavaScript are:\n In a JavaScript object literal, the names only need to be enclosed in quotes if they are reserved words like for or if in JavaScript. Furthermore, you can use either single or double quotes. In JSON, names always need to be enclosed in double quotes. JavaScript strings can be contained in single or double quotes; JSON strings must be contained in double quotes JavaScript numbers can be in octal (using a leading 0) or hexadecimal (using a leading 0x) as well as decimal; JSON numbers must be in decimal. JavaScript objects can contain values such as dates, regular expressions, and HTML elements, whereas JSON values are limited to strings, numbers, boolean, objects, arrays, and null. JavaScript allows comments; JSON does not.  Bottom line: all JSON objects are valid JavaScript object literals but not all JavaScript object literals are valid JSON. To convert between JSON and objects, use the JSON object that\u0026rsquo;s built into JavaScript. This is preferable to using eval which is prone to security issues. To convert JSON to a JavaScript object:\nvar json = \u0026#39;{\u0026#34;name\u0026#34;: \u0026#34;Parker\u0026#34;}\u0026#39;; var o = JSON.parse(json); console.log(o.name); // Parker To convert a JavaScript object to JSON:\nvar o = new Object(); o.name = \u0026#34;Parker\u0026#34;; var json = JSON.stringify(o); console.log(json); // {\u0026#34;name\u0026#34;:\u0026#34;Parker\u0026#34;} When you make a REST call, you end up using JSON as well. Here\u0026rsquo;s a call to the Microsoft Graph:\n// Assume Parker has logged in and a variable called accessToken contains // a valid Azure AD access token for Parker to call the Microsoft Graph const response = await fetch(\u0026#34;https://graph.microsoft.com/v1.0/me/\u0026#34;, { method: \u0026#39;GET\u0026#39;, headers: { \u0026#34;accept\u0026#34;: \u0026#34;application/json\u0026#34;, \u0026#34;authorization\u0026#34;: \u0026#34;bearer \u0026#34; + accessToken, } }); if (response.ok) { const profile = await response.json(); const name = profile.displayName; // Parker } Notice that to ask the service for a JSON response, the HTTP header is set to accept application/json, which is the MIME type for JSON. And the response object returned by fetch() has a json() function built right in to turn the returned JSON into a JavaScript object.\nConclusion Learning to work with JSON is an important skill for both low-code and full stack developers, as well as for many IT Pro tasks. Here\u0026rsquo;s hoping this article has helped you to understand and use JSON in your next project!\n(This article is cross-posted at https://bob1german.com)\n","image":"https://pnp.github.io/blog/post/introduction-to-json/images/AdaptiveCardJSON_hu61460a93035f4dcb91f11e52ed413cd7_245326_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/introduction-to-json/","tags":[],"title":"Introduction to JSON"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm are joined by DESCRIPTION, NAME (Company) | @TWITTER\nTopics raised in today’s discussion include voice extensibility, Microsoft Teams – the OS for work, and the value of integrating communications into apps or business processes enabling users to take action without having jump from environment to environment. Viewing the Microsoft Graph as APIs organized by workload with the benefit of shared authentication and discussion and articles on the recent Microsoft Viva announcement.\nThe session was recorded on Monday, February 8, 2021.  Video at Microsoft 365 Community YouTube channel.    Podcast format at https://pnpweekly.podbean.com.    Did we miss your article? Please use #PnPWeekly hashtag in the Twitter for letting us know the content which you have created. As always, if you need help on an issue, want to share a discovery, or just want to say: “Job well done”, please reach out to Vesa, to Waldek or to your Microsoft 365 PnP Community.\nSharing is caring!\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-113/images/pnp-weekly-episode-113_hu96d971ebfa78fea816bfa15f967e6087_850203_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/episode-113/","tags":[],"title":"Microsoft 365 PnP Weekly - Episode 113"},{"categories":["PnP Weekly"],"contents":"In this installment of the weekly discussion revolving around the latest news and topics on Microsoft 365, hosts – Vesa Juvonen (Microsoft) | @vesajuvonen, Waldek Mastykarz (Microsoft) | @waldekm, are joined by Ed Everett, Principal Group Program Manager from Microsoft, leading the platform extensibility efforts for OneDrive and SharePoint areas. The trio talk about continued integrations of infrastructure and app platform across Microsoft 365, including still tighter integration with Microsoft Teams, Microsoft Graph, Power Platform, resource-based consent for app development, several SPFx updates, and more on forms customization. The session was recorded on Monday, February 1, 2021.\n Video at Microsoft 365 Community YouTube channel.    Podcast format at https://pnpweekly.podbean.com.    Did we miss your article? Please use #PnPWeekly hashtag in the Twitter for letting us know the content which you have created. As always, if you need help on an issue, want to share a discovery, or just want to say: “Job well done”, please reach out to Vesa, to Waldek or to your Microsoft 365 PnP Community.\nSharing is caring!\n","image":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-112/images/pnp-weekly-112_hu30fb6fe58f931dcbab13fac5660f0ce8_774278_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/microsoft-365-pnp-weekly/microsoft-365-pnp-weekly-episode-112/","tags":[],"title":"Microsoft 365 PnP Weekly – Episode 112"},{"categories":["Community post"],"contents":"Microsoft Teams can be extended in several different ways using no-code, low-code and custom code solutions. Microsoft Teams app templates are a great way to start discovering ideas, extensibility options and examples of application architectures and coding patters or just start using an app right away in your organization. App templates are community driven, open source and production-ready apps.\n   Installation instructions, detailed prerequisites and source code are available for each app on GitHub (Office Developer). You can install each app as it is or clone the GitHub repository of an app and start developing it for your own purposes. You can find a detailed list of app templates here: App Templates for Microsoft Teams. In time of writing this article there are already 45 templates available.\nApp templates are developed using several different technologies and an app can utilize one or more of there technologies.\n Microsoft Teams Bots (What are conversational bots?) Tabs (What are Microsoft Teams custom tabs?) Personal apps (tabs available on Teams left-rail) Message extensions (What are messaging extensions?) Power Apps and Power Automate workflows (Teams integration with Microsoft Power Platform) SharePoint sites, lists, pages and templates  Prerequisites\n Microsoft 365 tenant. If you are a developer, you can get a free Microsoft 365 Developer tenant by joining a Microsoft 365 Developer program.  Depending on an app template, you may also require a Microsoft Azure subscription for running web applications, workflows and for data storage. You can get a free trial subscription with $200 credits for first 30 days and 12 months of popular free services here: Azure trial subscription Some templates may require a Power BI license, which is now included in new Microsoft 365 Developer subscription tenants. You can also use Power BI Pro trial license on your tenant. Depending on a template Power Apps and Power Automate flows can be tested either in default Power Platform environment created for Office 365 subscription or some applications may require Dataverse environment. For production usage I suggest creating a separate production environment, if your organization doesn\u0026rsquo;t have one already.  Deploying an app template to your environment\nOnce you have picked a template, first thing is to read the documentation. Documentation contains an overview of the solution, solution architecture, data storage and detailed deployment instructions. For Azure related resources there is also a cost estimation. All apps can be deployment following deployment guide. Depending on a template you may require to deploy and configure\n App Registration to Azure Active Directory Resources to Azure using ready-made ARM template Import and configure a Power App and/or Power Automate Flow Create artifacts like sites and lists to SharePoint manually, with Power Automate or with PowerShell Install the app to Teams using side-loading or uploading to app catalog  Deploying an Azure resources\nFor Azure based resources you need to have an Azure subscription and permissions to deploy resources to the subscription. For Azure AD App registration you need to have Global Admin role access to Azure Active Directory in your Microsoft 365 tenant.\nAll Azure related services are created with Azure Resource Manager template (ARM). Each app has a Deploy to Azure button, which opens up the Azure Portal based on your credentials.\n   Easiest way is to use that browser session, where you have logged in with an account linked to your Azure subscription where you like to deploy the services. Based on required resources for the app, ARM template is providing different configuration options.\n   First pick-up a subscription and a resource group to deploy new resources. I suggest creating a new resource group for the app, at least when you are testing, so you can easily manage app\u0026rsquo;s resources and access to them. Choose something unique for Base Resource Name, it\u0026rsquo;s quite commonly used as part of deployed service URL endpoints, so it needs to be globally unique. Refer the app deployment documentation for other configuration options. Once complete select Create and Azure resource deployment begins. Depending on a type and number of services, it can take up to 15 minutes to complete. Azure portal will notify when resources are deployed.\nConsiderations\nEach app template with Azure resources also contains a documentation about estimated costs. Cost estimation is based on production usage for certain number of users and usage of the app. Actual costs depend on how resources are scaled and how much usage there is. For testing apps you can scale down at least the app service plan and Azure Search. Note that Azure Search cannot be scaled after deployment. Deploying SharePoint resources\nSome app templates require you to create new resources, like sites and lists, to SharePoint Online. SharePoint resources are created with a PowerShell script provided in deployment guide, with a Power Automate Flow or manually. If the app is using a premade site template, deployment is done from SharePoint Lookbook. For scripts you need PnP PowerShell module installed and easiest way is to install it from PowerShell Gallery by running a command Install-Module SharePointPnPPowerShellOnline  When SharePoint resources are deployed with Power Automate, first you import a Flow to your environment in Power Automate portal, configure the Flow and run it manually. Creating resources manually is guided in the deployment guide, remember to use exact column names or otherwise rest of the solution might not work correctly.\nDeploying a Power App\nPower Apps are first deployed to Power Apps environment in Power Apps maker portal. Depending of a template app is either uploaded as a Canvas App (image below) on Apps page or as a solution in Solutions page. Solution require a separate Dataverse environment, which can be created from Power App admin portal.\n![Import a Power App](images/Screenshot 2021-01-13 175255.png)\nAfter import is complete, you can create a Teams app package for created Power App by selecting \u0026ldquo;Add to Teams\u0026rdquo;. Fill-out details and click Download app.\n   Install the app (downloaded zip file) to Teams either using side-loading or uploading the app to Teams app catalog.\nInstalling an app to Teams\nWhen you have your Teams app package ready, either downloaded from Power Apps portal or created following deployment guide, you can install it to Teams. Depending on your tenant\u0026rsquo;s configuration, there is two options for installing an app. With sideloading you can upload the app to you or your team. App is not available for anyone else in your tenant. To sideload an app open \u0026ldquo;Apps\u0026rdquo; in bottom left corner on Teams client, select \u0026ldquo;Upload a custom app\u0026rdquo; and select \u0026ldquo;Upload for me or my teams\u0026rdquo;. If the option is not available for you, sideloading is disabled. Configure the app and you\u0026rsquo;re done.\n   For uploading an app to your whole tenant, select \u0026quot;Upload a custom app\u0026quot; and select \u0026quot;Upload for \u0026lt;your tenant name\u0026gt;\u0026quot;. App will appear on \u0026quot;Built for \u0026lt;your tenant name\u0026gt;\u0026quot; section on Apps. Other option is to upload your app on Teams Admin Center\u0026rsquo;s app catalog. After uploading an app, it will be available for your users.\nWrap-up\nTeams app templates are ready to use solutions. Deployment and installation to Teams is fairly simple, when you have needed services and tools in place, just by following a deployment guidance. Templates are also great way to learn how solutions around Microsoft Teams can be built using different technology approaches and patterns. Always see the documentation first to see what is the purpose of the app, how it is built, what data is stored and what are the possible costs. New app templates are introduces quite often, so also remember to check out what new apps are available.\n","image":"https://pnp.github.io/blog/post/how-to-use-microsoft-teams-app-templates/images/ask-away-app_hu58cd5d14d4d479325d801657c52ca986_188008_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-use-microsoft-teams-app-templates/","tags":["Microsoft Teams"],"title":"How to use Microsoft Teams app templates"},{"categories":["Community post"],"contents":"Introduction Hello, are you looking to understand the differences between Power Automate and Azure Logic Apps \u0026ndash; or not sure what each of these does and when to use them? Well, you have come to the right place. Let\u0026rsquo;s go through these, to understand the differences and similarities and to look at how you can transition between them.\nPower Automate is Azure Logic apps under the hood. These share the same workflow engine, designer surface, allowing the easy and familiar experience of creating Flows. These have an extensive range of connectors built in the service, enabling you to build solutions that connect to a broader range of first and third party services. If these do not suffice, there is the option to create a custom connector to integrate your app with Power Automate and Logic Apps.\nBoth have:\n Triggers \u0026ndash; the entry point which starts the workflow, such as Item Creation or modification, an Email, an event that is triggered by another service, scheduled time, and many more. Actions \u0026ndash; the changes you want to make during the workflow. For example, updating a data source, perform manipulation of incoming data, send an email. Connectors \u0026ndash; provide the connections to a wide range of services such as Office 365, Power Apps, Azure, are many more, see this reference for the full range of connectors ß this resource is pretty cool as you can filter based on which product you are using.  What are the use cases for each product? You may be asking yourself, why are there two similar products that seemingly do the same thing - which the answer sits in how they are used. So, the primary difference between the two is:\n  Power Automate resides with the Office 365 suite providing an end-user focused experience to allow users to build flows without the complexity of development knowledge to achieve the goal they have in mind.\n  Azure Logic Apps \u0026ndash; well, resides in Azure and provides an option use development knowledge to build workflow apps including all the benefits this brings such as DevOps, advanced security scenarios and integrate with related Azure resources. This leads to functionality and focuses on the features that support these features, providing unique capabilities in each product that are not shared between them. For example,\n  The security controls differ between them such as   Triggers are not the same\n  The licensing model is different for example; Power Automate relies on Office 365 license and plans, Logic Apps use subscriptions.\n  For more detail on comparing the two, check out the section Compare Microsoft Power Automate and Azure Logic Apps in the documentation.\nTransitioning from Power Automate to Logic Apps So, let\u0026rsquo;s see moving a Flow from Power Automate to Logic Apps. In this scenario, in Power Automate, a Flow has been created to trigger when a SharePoint list item, get property from my Office 365 profile and Email me when the item has changed (btw, this is available as a template), the Flow would look like this:\n![Example Flow in Power Automate](images/Power Automate Flow Example.jpg)\nWithin Power Automate, you have the option of exporting a Flow to Logic apps:\n![Screenshot showing the export option to Logic Apps](images/Export to Logic Apps - When an item is modified.jpg)\nThe export feature generates an ARM template (an Azure Resource Manager template are used to provision resources in Azure) in JSON format. If you are unfamiliar with JSON, refer to the fantastic article from Bob German - Introduction to JSON. Using the ARM template, you can go to Azure (https://portal.azure.com), note - this will require an Azure Subscription. Search for \u0026ldquo;custom template\u0026rdquo; then find the option to \u0026ldquo;Deploy a custom template\u0026rdquo; as shown below:\n![Deploy a template option in the Azure Portal](images/Deploy a custom template.jpg)\nFollowing the instructions and complete the fields in which Azure presents to you, can deploy the template. After deployment is complete, navigate to the Logic App Designer, you may need to authenticate the connections, select those and a pop-up window will show for you to log in.\nOnce completed, you will need to Enable your Logic App then your Flow will be ready in Azure: ![Showing the Logic App Designer and the example Flow](images/Azure Logic App Equivelant.jpg)\nWhilst this is not the full instructions for performing the import, if you want to see the full process of importing the Flow, visit the article titled Export Flows from Power Automate and deploy to Azure Logic Apps.\nWhy would you transition from Power Automate to Logic Apps? It\u0026rsquo;s a good question. There are many factors that could influence the decision to move, such as:\n You need to connect to Azure resources that would require Premium connectors \u0026ndash; licensing could be a key factor. If you feel like the Flow could provide better value in that environment, then it is worth checking the option out with your IT team; additionally, you can visit the Azure Calculator to gauge the cost difference. Azure Logic Apps include connectors that connect to Office 365 services. As you develop or the Flow evolves, you might start to realise from an architectural standpoint that it makes sense for the Flow to reside in that environment. Take a flow that you are familiar with and explore this in the Azure ecosystem to understand what tools, options, and integrations you can expand to as part of a learning or exploratory exercise. You have an advanced security scenario that you cannot utilise with Power Automate. From a service perspective, you want to hand over to a support team that was provided by a third party or customised template over to Azure Logic apps to take advantage of the advanced features.  Whilst this is not an exhaustive list of reasons, there will be plenty of scenarios for the transition. But with the move to Azure, there are additional factors to consider, especially if you are setting up for the first time:\n The security profile in Azure, is this configured? And how the usage is monitored, and are there any connectors that are blocked by the policy? Who owns the subscription? And bears the cost for the app? Who within the team would be responsible for supporting the app once in place? I am deciding on a cool dev tool to explore and expand the logic within the app.  Whilst there is a lot to consider when looking at your Flow, you can rule out elements that do not apply, removing the noise from any decision.\nWhat are the licensing implications? Whilst this is not a licensing guide, this model does change as you move to Azure. The following provides an overview of the licensing differences between the two services:\n ** ** Power Automate Azure Logic Apps Charged By Office 365 plan, Per User Plan, Per Flow plan Azure Subscription Cost change Predictable cost each month or year \u0026ndash; subscribe to a plan Consumption-based \u0026ndash; pay for what you use Connectors Shown as Standard or Premium, Premium requires plan elevation from Office 365 plan. Standard or Enterprise Connector executions Other costs Standard cost model with an option to add connectors that require additional licensing such as Adobe Sign You can add services to the Logic Apps such as App Insights, Log Analytics that increases the cost profile.\n When considering a change, ensure that the target service is configured appropriately and that you have done estimates based on the connectors used, number of actions, and executions per month to ensure there are no unexpected bills at the end of each month. Typically, when you provision Azure Resource Groups (like folders - just one level ;)) that contain the Azure resources you can planning to deploy \u0026ndash; the advantage of this, there is a feature called \u0026ldquo;Budgets\u0026rdquo; which allow you to set up an alerting period, e.g. monthly that send notifications if the costings go over a budget, allowing you to assess the resource and optimise \u0026ndash; but to note this isn\u0026rsquo;t a cap. ![Azure Resource Group with the Budget settings screen](images/Azure Budget.jpg)\nAzure Logic apps also have the option of Integrated Service Environments, whilst they provide access to dedicated Azure resources, the cost does go up accordingly. Check out the\ncalculator\nto understand the costs before proceeding.\nCommunity Resources If you want to learn more about Power Automate, Logic Apps or the comparison, here are a list of additional resources that you can use to explore the technologies further:\n Microsoft Learn - Build automated workflows to integrate data and apps with Azure Logic Apps - Learn | Microsoft Docs Microsoft Learn - Browse all Power Automate Modules in Microsoft Learn | Microsoft Docs M365 Community Docs - Power Automate vs Logic Apps | Microsoft Docs Example Teams App Templates using Logic Apps and Power Automate - OfficeDev/microsoft-teams-apps-requestateam: Power Apps solution that automates the team creation pr...  ","image":"https://pnp.github.io/blog/post/how-to-use-microsoft-teams-app-templates/images/ask-away-app_hu58cd5d14d4d479325d801657c52ca986_188008_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-transition-from-power-automate-to-logic-apps/","tags":["Power Automate","Azure Logic Apps"],"title":"How to transition from Power Automate to Logic Apps"},{"categories":[],"contents":" This blog post is inspired by Ayca Bas\u0026rsquo;s excellent blog post on this subject using Azure Logic Apps instead of Power Automate\n Introduction Microsoft To Do is a great tool for allowing you to keep lists of tasks across your personal and work life. This could be something as simple as a shopping list or a project or anything that can be split down into individual tasks.\nWith the release of the To Do APIs in Microsoft Graph, it is now possible to integrate with your To Do tasks outside of To Do.\n   A Helpful Reminder Whilst you can set reminders against tasks in To Do, wouldn\u0026rsquo;t it be awesome to have these surface outside of the To Do app too? Before we start, make sure you have some pending tasks on your Tasks list in To Do!\n   In this article, we will go over how we can have Power Automate send your outstanding tasks daily into Microsoft Teams. To achieve this, we will undertake the following:\n Learn how to interact with the Microsoft Graph To Do APIs in Microsoft Graph Explorer Register an Azure Active Directory app Create a Power Automate Custom Connector to interface with the Microsoft Graph To Do APIs Create a Power Automate Flow to automate sending tasks to Microsoft Teams using the Microsoft Teams Flow Bot  Microsoft Graph To Do APIs in Graph Explorer To understand how the Microsoft Graph To Do API queries work, let\u0026rsquo;s use Microsoft Graph Explorer to make a query against your own data. The first task is to select Sign in to Graph Explorer. Microsoft Graph Explorer is a great web-based tool for using Microsoft Graph without having to create anything yourself. If you want to test something will work (before you create your app) or try out a new command, this is the quickest and easiest way to do so.\nOnce signed in, under the Getting Started section of Sample queries run the my To Do task lists query. This should run the query of https://graph.microsoft.com/v1.0/me/todo/lists and return your task lists.\n   You will notice inside the response there is a task list with an id. Using the id, change the address of the query to https://graph.microsoft.com/v1.0/me/todo/lists/%7BtaskListId%7D/tasks, with {taskListId} being replaced with the id in the response.\n If the task lists response contains multiple task lists, don\u0026rsquo;t worry, just choose the list with the name Tasks\n Based on my response above, my query would be https://graph.microsoft.com/v1.0/me/todo/lists/AQMkAGYxYjhlNDIxLTRlN2YtNGMwNi1hYzg2LTJmMzVkMDYxYzQ1N...\n     Ensure you set the request type to GET and the version to v1.0 Take a copy of your request address as we will need that later on.  Register an app in Azure Active Directory To be able to read your To Do task data using Microsoft Graph, we will need to grant an Azure AD application permission to access it.  This app registration can be used for more than one user, should you wish for multiple users to use this solution, the same registration can be used for each Power Automate Flow\n Registration First, go to Azure Active Directory in the Azure Portal. Under App registrations select New registration from the top menu.\n   Give the app an arbitrary Name e.g. To Do_PowerAutomate, leave Supported account types and Redirect URI with the default values. Select Register to create the app.\n   With the app created, take note of the Application (client) ID as this will be needed later.\n   Create a secret Next, we need to create a secret under Certificates and secrets on the left-hand menu. To create a secret, select New client secret and give the secret a Description and when it Expires.\n     Before the next step, take a copy of the Value of the secret and store it securely somewhere. This has to be copied now as once we move away the secret value will be hidden.\n   Assign Microsoft Graph permissions Finally, we need to assign Microsoft Graph To Do permissions to our app. This allows our app to query To Do APIs in Microsoft Graph as we did in Microsoft Graph Explorer earlier.\nUnder API permissions on the left-hand menu, select Add a permission.\n   Select Microsoft Graph as the Microsoft API and Delegated permissions. Search for Tasks and choose the Tasks.Read permission and select Add permissions.\n   You should now see Tasks.Read under Configured permissions.\n Tasks.Read is one of many different API permissions in Graph. Helpfully, there is a full breakdown of the different Microsoft Graph Permissions   That is all we need to do here for now, but there is one final step to be done, later on, so leave the page open in your browser.\n Create Power Automate Custom Connector Moving over to Power Automate, we need to create a Custom Connector. A Custom Connector is a way of interfacing with APIs in specific ways, in our case - talking to Microsoft Graph and obtaining our list of tasks.\nTo create a Custom Connector, go to Data \u0026gt; Custom connectors on the left-hand menu in Power Automate. Here, select New custom connector and Create from blank\n**   Give your connector an arbitrary Connector name e.g. To Do_Connector and choose Continue\n**   For the first step, we need to specify the Host as graph.microsoft.com and select Security to move on to the next step.\n   For security, set as follows:\n Authentication type: OAuth 2.0 Identity Provider: Azure Active Directory Client id: Application (client) ID we noted down when creating the Azure AD app Client secret: Client secret we noted down when creating the Azure AD app Resource URL: https://graph.microsoft.com with no trailing / Everything else can be left as it is Select Definition to move on to the next step.     mage-alt=\u0026ldquo;PA4.png\u0026rdquo; style=\u0026ldquo;width: 888px;\u0026rdquo;}\nWe now need to create an Action. An Action is an operation that our connector will perform when asked. In our case, our connector will retrieve our To Do tasks for us.\nSelect New action and provide the action with the following:\n Summary: A summary of what the action is doing e.g. Get To Do tasks Description: A more in-depth description on what the action is doing e.g. Get To Do tasks for signed-in user Operation ID: Unique identifier of the action. Use GetToDoTasks Visibility: Important     Under the Request section, we need to provide it with sample data so the action understands what the data from Microsoft Graph will look like. Choose Import from sample and provide the following:\n Verb: GET URL: https://graph.microsoft.com/v1.0/me/todo/lists/%7BtaskListId%7D/tasks - you should have a copy of this (with your taskListId) from when we used Graph Explorer earlier. Headers: Leave blank Select Import  **   Finally, select Create connector at the top right. Once saved, go to the Security section and copy the Redirect URI\n**   If we now briefly head back to the Azure AD App with the Redirect URI. Under Authentication, select Add a platform and paste the Redirect URI you copied into the Redirect URIs text box. Select Configure to add it.\n   Create Power Automate Flow Now we are going to tie everything together with a Power Automate Flow. A Flow is essentially a no/low code way to script something. In our case, we are scripting retrieving our To Do tasks and sending them into Microsoft Teams.\nTo do this, head back the Power Automate and select Create from the left-hand menu and choose Scheduled cloud flow.\n    By sheduling this flow trigger type, it can be scheduled to run as frequently as you like.\n Give your flow a Name and set a Repeat every of 1 Day. Once done, select Create\n**   As this is a Flow, the logic will behave as a flow chart would. Under the Recurrance trigger, we need to add some additional steps to the Flow.\nTo start, select New step and here we need to find the action we created. The quickest way is to change the type to Custom and then select it under Actions.\n   Next, you need to sign in to your account to get your tasks.\n As mentioned earlier, this can be used in multiple flows, allowing a whole team to use the connector to get their own tasks\n    During the sign-in process, you will need to consent the app to read your task lists.\n   Before we go any further, select Save at the top of the page and then go back to My flows. Hover over the Flow you created and choose Run.\n   Hopefully, it was successful and you can see the result in the Flow Runs Page.\n   Looking at the body of the Output there is some data (which is the same as what was shown in Graph Explorer earlier). Copy the body output and then select Edit at the top of the page to finish off the last bits of the Flow.\n   The body output is great in JSON format, but we need to be able to split it down into smaller chunks (tasks). To do this, we need to be able to parse (read) the JSON output. Add a Parse JSON step and set the Content as Body. To create a Schema choose Generate from sample.\n   Paste in the body output from earlier and select Done.\n   The next step we need to add is Initialize variable. We need to create an Array. An array is a collection of values or objects. In our case, ours is a collection of tasks. Give the variable the name of Tasks and set the type to Array.\n   After creating the Tasks array, we need to populate it with the tasks. This is achieved by adding an Apply to each step. A Apply to each is a type of loop. In our case, it will loop through all the tasks in our body JSON we parsed earlier and pick out the values for each task.\nStart by adding an Apply to each loop and selecting value output from Parse JSON\n   Next, within the Apply to each step, Add an action and choose Compose. This will take a specific value from the task. Under inputs, choose title under Parse JSON.\n   The next step we need to add in the loop is an Append to array variable. We will use this to add the task title to the Tasks array we created earlier. Set the Value to the Outputs of Compose.\n   Now we should have a list of tasks ready to use. The next step is to send these to us in Teams. To do this, we need to add Post a choice of options as the Flow bot to a user, making sure this is added after the Apply to each and not inside it.\nBefore entering any details, change the options type to an array by clicking the T icon.\n   Now, add the following:\n Options: Tasks variable Recipient: The same account you signed in to the Flow with Message: Something like Hey, here are your outstanding tasks for today Headline: Something like Your tasks for the day IsAlert: Yes - This makes it so you are notified of the message in Teams     If you were to run the Flow now, you will see the list of tasks appear in Teams. However, choosing any of the tasks doesn\u0026rsquo;t do anything.\n   Back in the Flow, we need to fix it so when an option (task) is chosen, we do something with it. Add another Apply to each and like the previous loop, select value output from Parse JSON.\n   Within this Apply to each step, Add an action and choose Condition. A Condition is a way to verifying a value is what we want/don\u0026rsquo;t want. In our scenario, we are looping through tasks and looking for the one that matches what the user selected in Teams. To do this set the first value as selectedOption under Post a choice... and the second value is title under Parse JSON.\n   We now need to act upon when the condition is met (the task equals the chosen option in Teams). Under If yes, add Post message as the Flow bot to a user. Complete it as follows:\n Recipient: The same account you signed in to the Flow with   **Message**: A message containing the details of the task (see  image) Headline: Title from Parse JSON IsAlert: Yes - This makes it so you are notified of the message in Teams     Leave If no blank.\nFinishing up If you now run the Flow it should send you a message with your tasks.\n   Choosing a task will then return details on that task.\n   Congratulations, you have now managed to create an Azure AD application, talk to Microsoft Graph, pass that into Power Automate and on to Teams!\nThis is post is cross-posted at my personal blog\n","image":"https://pnp.github.io/blog/post/get-your-to-do-tasks-daily-in-teams-using-power-automate/images/Teams_hua6bfa216989be446aa0e8bb66fa96024_18714_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/get-your-to-do-tasks-daily-in-teams-using-power-automate/","tags":["Microsoft Teams","Power Automate"],"title":"Get your To Do tasks daily in Teams using Power Automate"},{"categories":["Community post"],"contents":"By visiting Developer Program - Microsoft 365 and selecting \u0026ldquo;Join Now\u0026rdquo; you\u0026rsquo;ll be walked through a wizard that will help you provision your very own Microsoft 365 tenant. You can see the details in the developer program but the general idea is that you\u0026rsquo;ll have a tenant, where you get to be the omnipotent global admin, with 25 E5 Microsoft 365 licenses available to you that allow you to build out and test various scenarios within the ecosystem.\n25 E5 licenses is a lot of horsepower to begin building out scenarios that mix the various tools of Microsoft 365 tenant (SharePoint, Teams, OneDrive, PowerApps, PowerAutomate, etc) into solutions for your \u0026ldquo;customers\u0026rdquo;. Although I know many people who advocate and joke about \u0026ldquo;build it in production\u0026rdquo;, the reality is that doing so is invasive and can have catastrophic consequences. As with many things you need to weigh the pros and the cons but the ability to fully realize and test your solutions in a \u0026ldquo;safe space\u0026rdquo; is powerful and can make you try things you might not if you\u0026rsquo;re worried about bringing down production.\nBetter yet, if you continue to use the tenant, every 90 days it will auto renew so that you never have to worry about losing your work in progress. In addition, for those that work with Microsoft 365 every day the ability to keep up with what\u0026rsquo;s going on, what\u0026rsquo;s changing, and how to best implement your ideas is priceless. You can keep up with the status of your subscription by visiting the Dashboard - Microsoft 365 Dev Center page.\nUnderstanding the relationship between Azure and a \u0026ldquo;Tenant\u0026rdquo; When building in the cloud we developers no longer have the same access to the \u0026ldquo;server\u0026rdquo; as we may be used to. The way we architect solutions for SaaS solutions has changed significantly and many people are aware that Azure provides various cloud-based resources to help with the automation scenarios that were lost when we left \u0026ldquo;on-prem\u0026rdquo;.\nIt\u0026rsquo;s important to understand that each Microsoft 365 tenant has an equivalent Azure Active Directory (AAD) associated with it, including your brand-new shiny dev tenant. So, when you log into Azure the first time you need to be logging in with a global administrator account for your dev tenant. Once you are in Azure you then need to make sure you have a Subscription set up that is associated with that Azure Active Directory instance that is related to your dev tenant. By doing so you are effectively simulating what most production scenarios look like.* If you already have an Azure subscription you use for development purposes, but it\u0026rsquo;s not associated with your dev tenant, you can change it. The ever-talented Laura Kokkarinen has a wonderful blog post (How to use the complimentary Azure credits in a Microsoft 365 dev tenant \u0026mdash; step by step (laurakokkar... that covers all the ways you might have azure credits and how to get them associated with your dev tenant.\n*It should be said that many ISVs and other 3^rd^ party software providers might be looking to build solutions that target multiple tenants and thereby their Azure subscription, although tied to AAD is not targeted for a single AAD.\nSample Data Another awesome feature of these developer subscriptions is the ability to seed the tenant with sample data packs. To do this all you have to do is go to your Dashboard - Microsoft 365 Dev Center page and select the kind of data pack you would like to add. You must have the \u0026ldquo;Users\u0026rdquo; sample data pack first but then you can also add Mail and Events as well as SharePoint data.\n   By having these data packs, it can make testing various scenarios with your application significantly simpler as you can have up to twenty-five accounts playing distinct roles in your scenario.\nDev Tenant vs \u0026ldquo;Customer Digital Transform\u0026rdquo; Tenants Something that may be confusing to some is the difference between the dev tenants and \u0026ldquo;Customer Digital Transform\u0026rdquo; tenants. The latter are Microsoft 365 tenants that you can provision if you are someone providing sales or guidance to customers using Microsoft 365. They are extremely useful as these tenants are fully scaled out demo environments that can help you quickly and effectively communicate how Microsoft 365 can benefit a customer and their specific needs. These tenants however have a limited lifespan (between 3 months and 1 year) and after that time the tenant is decommissioned and there is no way to get them back. So, although once you have one of these demo tenants you can deploy and develop inside them, as they are fully functional, just like Cinderella when times up, time is up! As we said earlier, if you\u0026rsquo;re actively using dev tenants, they will auto renew every 90 days.\nSo, now that you\u0026rsquo;re all up to speed, what are you waiting for?! Get your dev tenant now and get on your way to building some awesome solutions!\n","image":"https://pnp.github.io/blog/post/what-is-a-dev-tenant-and-why-would-you-want-one/images/SampleData_hu243172f2917f7193ee950c0667c80f0b_21603_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/what-is-a-dev-tenant-and-why-would-you-want-one/","tags":[],"title":"What is a \"Dev Tenant\" and why would you want one?"},{"categories":["Community post"],"contents":"Intro Incoming webhooks are a way to send updates or messages in a channel in Teams without a user interface, typically done via scripts or code programmatically. Having talked about omitting the graphical user interface does not mean it needs a developer to set it up. The simplicity in implementing this in any automation makes it a perfect fit for any makers, be it fusion developers, low code programmers or consultants to leverage this hidden gem for notification or logging mechanism. ]\nIn short, Incoming Webhooks are built-in connectors used to send updates back to a channel in Teams once configured. ]\nThe good thing is, it is easy to set up and even more comfortable to design your messages you want to send through it. The messages can be plain text, or actionable messages or adaptive cards . **Incoming Webhooks\nThe documentation around these is easy enough for anyone to understand what they are, but here is the blurb. ] Incoming Webhooks is a special type of Connector in Teams that provide a simple way for an external app to share content in team channels and are often used as tracking and notification tools. Teams provides a unique URL to send a JSON payload with the message you want to POST, typically in a card format. Cards are user-interface (UI) containers containing content and actions related to a single topic and consistently present message data. Being just a POST operation with a JSON payload, you can use it in maybe your PowerAutomate actions or PowerShell or cURL scripts see how you can do the scripts here\nor any web app that can invoke a POST operation. ]* [In this article, we will take you through the configuration and testing of this connector in the next sections. But before we jump in, make sure you know that the unique URL mentioned above can be used anonymously to send messages to the channel using HTTP POST, which is why treating your webhook URL as a secret might be a good thing, the same way as you would treat your PowerAutomate\u0026rsquo;s **[When an HTTP request is received **trigger. There are heaps of articles by the community on securing the URL. ] [Steps to configure]\n Navigate to the channel where you want to add the webhook, (1) Select (•••) and (2) Choose ][Connectors]      Search for [Incoming Webhooks and [Add]      once added, configure it by giving a name, optionally upload an icon and once done, click [Create]      Copy the URL that is unique for the channel, and we will later use this URL to post the message.      [Now we have successfully configured the connector in the channel; you should see something like below ]\n   Test the connector with PowerShell A HTTP POST operation is what you need to send messages using this connector. Here, let \u0026rsquo;s see how we can test this using PowerShell. Open the [Windows PowerShell]\n terminal and run the below script assuming you have installed and are familiar with terminal. ] Alternatively, you could also run a cURL[ script to achieve the same (especially for macOs and Linux users). For that, see post here here I am using PowerShell. Invoke-RestMethod -Method post -ContentType \u0026#39;Application/Json\u0026#39; -Body \u0026#39;{\u0026#34;text\u0026#34;:\u0026#34;Hello World!\u0026#34;}\u0026#39; -Uri \u0026lt;URL of the webhook you copied\u0026gt;  [   If the configuration is successful, we can see the message already sent by the script to our channel.\n   Now, if we want to try sending an adaptive card, let us try one as well.\nLet\u0026rsquo;s go to [adaptivecards.io] and copy a sample for an adaptive card which will be in JSON format and declare a PowerShell variable $json in the below format. { \u0026#34;type\u0026#34;: \u0026#34;message\u0026#34;, \u0026#34;attachments\u0026#34;: [ { \u0026#34;contentType\u0026#34;: \u0026#34;application/vnd.microsoft.card.adaptive\u0026#34;, \u0026#34;content\u0026#34;: \u0026lt;PASTE THE COPIED ADAPTIVE CARD JSON HERE\u0026gt; }] }  We will run the same script we ran before but with a slight change, the Body parameter is passed with the variable **$json **that we declared earlier. Invoke-RestMethod -Method post -ContentType \u0026#39;Application/Json\u0026#39; -Body $json -Uri \u0026lt;URL of the webhook you copied\u0026gt;  And here is the result after running the above script\n   Hope you found this simple out of the box capability useful and would be using it for many situations where you want to send updates regularly to a Team\u0026rsquo;s Channel. What problems are you going to solve today using Incoming Webhooks? Let us know. Author has also blogged about Incoming Webhooks in her personal blog: Use Incoming Webhooks in SPFx app to send page feedback to Microsoft Teams channel.\n","image":"https://pnp.github.io/blog/post/how-to-configure-and-use-incoming-webhooks-in-microsoft-teams/images/connector-select_hu3f499eda2014e686c3e47c33aa299b95_271673_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/post/how-to-configure-and-use-incoming-webhooks-in-microsoft-teams/","tags":["Microsoft Teams"],"title":"How to configure and use Incoming Webhooks in Microsoft Teams"},{"categories":null,"contents":"","image":"https://pnp.github.io/blog/post/how-to-configure-and-use-incoming-webhooks-in-microsoft-teams/images/connector-select_hu3f499eda2014e686c3e47c33aa299b95_271673_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/404/","tags":null,"title":"404 Page Not Found"},{"categories":null,"contents":"","image":"https://pnp.github.io/blog/post/how-to-configure-and-use-incoming-webhooks-in-microsoft-teams/images/connector-select_hu3f499eda2014e686c3e47c33aa299b95_271673_460x200_fill_box_smart1_3.png","permalink":"https://pnp.github.io/blog/search/","tags":null,"title":"Search Results"}]